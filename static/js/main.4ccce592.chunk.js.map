{"version":3,"sources":["assets/logo.svg","utils/utils.js","utils/fetch-loop.js","utils/connection.js","utils/notifications.js","utils/wallet.js","utils/tokens.js","utils/markets.js","global_style.ts","components/ErrorBoundary.jsx","components/layout/FloatingElement.jsx","components/Orderbook.jsx","utils/useInterval.js","utils/usePrevious.js","components/layout/DataTable.jsx","utils/send.js","components/UserInfoTable/BalancesTable.jsx","components/UserInfoTable/OpenOrderTable.jsx","components/UserInfoTable/FillsTable.jsx","components/UserInfoTable/FeesTable.js","components/UserInfoTable/index.jsx","components/Link.js","components/DepositDialog.jsx","components/StandaloneBalancesDisplay.jsx","components/TradeForm.jsx","components/TradesTable.jsx","components/LinkAddress.jsx","components/DeprecatedMarketsInstructions.js","components/CustomMarketDialog.jsx","pages/TradePage.jsx","pages/OpenOrdersPage.jsx","components/UserInfoTable/WalletBalancesTable.jsx","components/UserInfoTable/AccountsTable.jsx","pages/BalancesPage.jsx","components/TopBar.js","components/HelpUrls.js","components/Footer.jsx","components/BasicLayout.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","isValidPublicKey","key","PublicKey","sleep","ms","a","Promise","resolve","setTimeout","percentFormat","Intl","NumberFormat","undefined","style","minimumFractionDigits","maximumFractionDigits","floorToDecimal","value","decimals","Math","floor","roundToDecimal","round","getDecimalCount","isNaN","toString","split","length","useLocalStorageState","defaultState","useState","storedState","localStorage","getItem","JSON","parse","state","setState","setLocalStorageState","useCallback","newState","removeItem","setItem","stringify","isEqual","obj1","obj2","keys","Object","k","pageLoadTime","Date","globalCache","Map","FetchLoopListener","cacheKey","fn","refreshInterval","refreshIntervalOnError","callback","this","FetchLoopInternal","refresh","timeoutId","clearTimeout","stopped","errored","data","set","errors","notifyListeners","console","warn","waitTime","min","timeSincePageLoad","document","visibilityState","hasFocus","random","listeners","Set","listener","previousRefreshInterval","add","assert","delete","forEach","map","filter","x","size","globalLoops","loops","has","get","addListener","loop","removeListener","all","values","useAsyncData","asyncFn","useReducer","i","rerender","useEffect","loaded","refreshCache","clearCache","ENDPOINTS","name","endpoint","clusterApiUrl","accountListenerCount","ConnectionContext","React","createContext","ConnectionProvider","children","setEndpoint","connection","useMemo","Connection","sendConnection","id","onAccountChange","Account","publicKey","removeAccountChangeListener","onSlotChange","removeSlotChangeListener","Provider","useConnection","useContext","useSendConnection","useConnectionConfig","context","useAccountInfo","tuple","toBase58","getAccountInfo","accountInfo","count","previousData","subscriptionId","e","equals","initializeOnly","setCache","currentItem","useAccountData","notify","message","description","type","placement","notification","color","opacity","backgroundColor","WALLET_PROVIDERS","url","WalletContext","WalletProvider","providerUrl","setProviderUrl","wallet","Wallet","connected","setConnected","log","on","walletPublicKey","substring","disconnect","providerName","find","useWallet","setProvider","ACCOUNT_LAYOUT","BufferLayout","parseTokenAccountData","decode","mint","owner","amount","getOwnedAccountsFilters","memcmp","offset","offsetOf","bytes","dataSize","span","TOKEN_PROGRAM_ID","getOwnedTokenAccounts","filters","_rpcRequest","commitment","resp","error","Error","result","pubkey","account","executable","lamports","bs58","every","filterBytes","slice","getTokenAccountInfo","ownerAddress","splAccounts","parsedSplAccounts","effectiveMint","concat","WRAPPED_SOL_MINT","USE_MARKETS","MARKETS","useAllMarkets","markets","setMarkets","marketInfo","Market","load","address","programId","market","push","marketName","getAllMarkets","useUnmigratedOpenOrdersAccounts","deprecatedOpenOrdersAccounts","deprecatedProgramIds","Array","from","deprecated","publicKeyStr","OpenOrders","findForOwner","openOrdersAccounts","openOrders","baseTokenTotal","toNumber","quoteTokenTotal","some","_VERY_SLOW_REFRESH_INTERVAL","accounts","MarketContext","DEFAULT_MARKET","getMarketDetails","customMarkets","getMarketInfos","otherMarket","baseCurrency","baseMintAddress","TOKEN_MINTS","token","baseLabel","quoteCurrency","quoteMintAddress","quoteLabel","MarketProvider","marketAddress","setMarketAddress","setCustomMarkets","setMarket","_decoded","ownAddress","then","catch","useMarket","useMarkPrice","markPrice","setMarkPrice","useOrderbook","orderbook","trades","useTrades","bb","bids","Number","ba","asks","last","price","sort","b","_useUnfilteredTrades","limit","getUnfilteredTrades","loadFills","useOrderbookAccounts","bidData","askData","bidOrderbook","Orderbook","askOrderbook","depth","getL2","useOpenOrdersAccounts","fast","getOpenOrdersAccounts","findOpenOrdersAccountsForOwner","useSelectedOpenOrdersAccount","useTokenAccounts","getSelectedTokenAccountForMint","filtered","useSelectedQuoteCurrencyAccount","useSelectedBaseCurrencyAccount","useQuoteCurrencyBalances","quoteCurrencyAccount","TokenInstructions","quoteSplSizeToNumber","BN","useBaseCurrencyBalances","baseCurrencyAccount","baseSplSizeToNumber","eventFlags","maker","trade","side","useBalances","baseCurrencyBalances","quoteCurrencyBalances","baseExists","baseTokenFree","quoteExists","quoteTokenFree","coin","orders","sub","unsettled","getCurrencyBalance","findBaseTokenAccountsForOwner","findQuoteTokenAccountsForOwner","currencyAccounts","currencyAccount","getTokenAccountBalance","tokenAccountBalances","uiAmount","useUnmigratedDeprecatedMarkets","marketsList","deps","m","getMarket","openOrdersList","customMarketsInfo","GlobalStyle","createGlobalStyle","Title","Typography","ErrorBoundary","hasError","level","props","Component","Wrapper","styled","div","FloatingElement","SizeTitle","Row","MarkPriceTitle","Line","css","Price","smallScreen","onPrice","onSize","currentOrderbookData","useRef","lastOrderbookData","orderbookData","setOrderbookData","getCumulativeOrderbookSide","totalSize","backwards","cumulative","reduce","cumulativeSize","sizePercent","reverse","delay","savedCallback","current","setInterval","clearInterval","useInterval","sum","total","index","bidsToDisplay","asksToDisplay","flex","height","overflow","textAlign","OrderbookRow","onPriceClick","onSizeClick","MarkPriceComponent","memo","element","classList","contains","remove","formattedSize","minOrderSize","toFixed","formattedPrice","tickSize","ref","marginBottom","onClick","data-width","data-bgcolor","prevProps","nextProps","previousMarkPrice","usePrevious","markPriceColor","formattedMarkPrice","justify","ArrowUpOutlined","marginRight","ArrowDownOutlined","DataTable","dataSource","columns","emptyLabel","pagination","loading","pageSize","renderEmpty","padding","display","justifyContent","alignItems","createTokenAccountTransaction","mintPublicKey","newAccount","SystemProgram","getMinimumBalanceForRentExemption","fromPubkey","newAccountPubkey","space","transaction","createAccount","initializeAccount","signer","settleFunds","onSuccess","baseCurrencyAccountPubkey","quoteCurrencyAccountPubkey","createAccountTransaction","createAccountSigner","supportsReferralFees","makeSettleFundsTransaction","settleFundsTransaction","settleFundsSigners","signers","mergeTransactions","onConfirm","timeout","err","onBeforeSend","onAfterSend","sendTransaction","cancelOrder","params","cancelOrders","order","onBeforeSendCallBack","onAfterSendCallBack","onConfirmCallBack","makeMatchOrdersTransaction","makeCancelOrderInstruction","placeOrder","orderType","formattedMinOrderSize","formattedTickSize","isIncrement","num","step","abs","payer","makePlaceOrderTransaction","placeOrderTx","getUnixTs","getTime","getRecentBlockhash","recentBlockhash","blockhash","signPartial","signTransaction","rawTransaction","serialize","done","startTime","sendRawTransaction","skipPreflight","txid","awaitTransactionSignatureConfirmation","res","reject","onSignature","getSignatureStatuses","signatureStatuses","confirmations","transactions","Transaction","t","BalancesTable","balances","showMarket","hideWalletBalance","onSettleSuccess","title","dataIndex","render","ghost","onSettleFunds","CancelButton","Button","OpenOrderTable","onCancelSuccess","cancelId","setCancelId","orderId","fontWeight","charAt","toUpperCase","icon","DeleteOutlined","cancel","assign","FillsTable","fills","fill","openOrdersAccount","useFills","liquidity","FeesTable","findFeeDiscountKeys","useFeeDiscountKeys","feeTier","row","marginLeft","format","getFeeRates","taker","_","SRM_MINT","MSRM_MINT","marginTop","FeeScheduleTable","balance","info","Paragraph","TabPane","Tabs","Index","paddingTop","href","defaultActiveKey","tab","supportsSrmFeeDiscounts","OpenOrdersTab","filterForOpenOrders","useOpenOrders","BalancesTab","Link","external","to","rest","target","rel","DepositDialog","onClose","depositCoin","coinMint","visible","onOk","onCancel","RowBox","Tip","p","ActionButton","StandaloneBalancesDisplay","setDepositCoin","currency","Fragment","borderColor","align","paddingBottom","width","block","SellButton","BuyButton","sliderMarks","0","25","50","75","100","TradeForm","setChangeOrderRef","setSide","postOnly","setPostOnly","ioc","setIoc","baseSize","setBaseSize","quoteSize","setQuoteSize","setPrice","submitting","setSubmitting","sizeFraction","setSizeFraction","quoteBalance","baseBalance","sizeDecimalCount","priceDecimalCount","doChangeOrder","onSliderChange","updateSizeFraction","onSetBaseSize","maxSize","newSize","formatted","onSubmit","parsedPrice","parseFloat","parsedSize","flexDirection","Group","onChange","buttonStyle","background","addonBefore","suffix","fontSize","compact","onSetQuoteSize","tipFormatter","marks","checked","disabled","TradesContainer","PublicTrades","minHeight","LinkAddress","LinkOutlined","DeprecatedMarketsInstructions","switchToLiveMarkets","openOrderAccountBalances","inOrdersBase","inOrdersQuote","unsettledBase","unsettledQuote","useBalancesForDeprecatedMarkets","marketsAndOrders","getOrders","loadOrdersForOwner","flat","refreshOpenOrders","useGetOpenOrdersForDeprecatedMarkets","needToCancelOrders","filteredBalances","needToSettleFunds","Text","CustomMarketDialog","onAddCustomMarket","marketId","setMarketId","setProgramId","marketLabel","setMarketLabel","setBaseLabel","setQuoteLabel","loadingMarket","setLoadingMarket","wellFormedMarketId","wellFormedProgramId","resetLabels","finally","knownMarket","knownProgram","knownBaseCurrency","knownQuoteCurrency","canSubmit","onDoClose","okText","okButtonProps","placeholder","LoadingOutlined","gutter","Option","Select","OptGroup","TradePage","handleDeprecated","setHandleDeprecated","addMarketVisible","setAddMarketVisible","deprecatedMarkets","window","innerHeight","innerWidth","dimensions","setDimensions","changeOrderRef","handleResize","addEventListener","removeEventListener","componentProps","onChangeOrderRef","getComponent","customMarket","newCustomMarkets","paddingLeft","paddingRight","MarketSelector","onDeleteCustomMarket","content","trigger","InfoCircleOutlined","PlusCircleOutlined","extractBase","extractQuote","selectedMarket","proposedMarket","showSearch","optionFilterProp","onSelect","listHeight","filterOption","input","option","toLowerCase","indexOf","label","stopPropagation","nativeEvent","stopImmediatePropagation","DeprecatedMarketsPage","RenderNormal","flexWrap","RenderSmall","RenderSmaller","xs","sm","OpenOrdersPage","allMarkets","marketData","loadBids","loadAsks","ordersForMarket","openOrdersAddress","useOpenOrdersForAllMarkets","WalletBalancesTable","walletBalances","AccountsTable","accountBalances","BalancesPage","includes","useWalletBalancesForAllMarkets","loadedWalletBalances","openOrderAccounts","baseCurrencyAccounts","quoteCurrencyAccounts","useOpenOrderAccountBalancesForAllMarkets","accountBalancesLoaded","LogoWrapper","TopBar","setCurrent","location","useLocation","history","useHistory","handleClick","pathname","src","logo","alt","mode","selectedKeys","borderBottom","Item","connect","UserOutlined","helpUrls","Footer","Layout","useBreakpoint","Grid","footerElements","link","CustomFooter","lg","elem","Header","Content","BasicLayout","Routes","basename","exact","path","component","TradePageContents","OpenOrdersPageContents","BalancesPageContents","App","fallback","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4ccce592.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.49174c73.svg\";","import { useCallback, useEffect, useState } from 'react';\nimport { PublicKey } from '@solana/web3.js';\n\nexport function isValidPublicKey(key) {\n  if (!key) {\n    return false;\n  }\n  try {\n    new PublicKey(key);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport async function sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport const percentFormat = new Intl.NumberFormat(undefined, {\n  style: 'percent',\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n});\n\nexport function floorToDecimal(value, decimals) {\n  return decimals ? Math.floor(value * 10 ** decimals) / 10 ** decimals : value;\n}\n\nexport function roundToDecimal(value, decimals) {\n  return decimals ? Math.round(value * 10 ** decimals) / 10 ** decimals : value;\n}\n\nexport function getDecimalCount(value) {\n  if (!isNaN(value) && Math.floor(value) !== value)\n    return value.toString().split('.')[1].length || 0;\n  return 0;\n}\n\nexport function useLocalStorageState(key, defaultState = null) {\n  const [state, setState] = useState(() => {\n    // NOTE: Not sure if this is ok\n    const storedState = localStorage.getItem(key);\n    if (storedState) {\n      return JSON.parse(storedState);\n    }\n    return defaultState;\n  });\n\n  const setLocalStorageState = useCallback(\n    (newState) => {\n      const changed = state !== newState;\n      if (!changed) {\n        return;\n      }\n      setState(newState);\n      if (newState === null) {\n        localStorage.removeItem(key);\n      } else {\n        localStorage.setItem(key, JSON.stringify(newState));\n      }\n    },\n    [state, key],\n  );\n\n  return [state, setLocalStorageState];\n}\n\nexport function useEffectAfterTimeout(effect, timeout) {\n  useEffect(() => {\n    const handle = setTimeout(effect, timeout);\n    return () => clearTimeout(handle);\n  });\n}\n\nexport function useListener(emitter, eventName) {\n  const [, forceUpdate] = useState(0);\n  useEffect(() => {\n    const listener = () => forceUpdate((i) => i + 1);\n    emitter.on(eventName, listener);\n    return () => emitter.removeListener(eventName, listener);\n  }, [emitter, eventName]);\n}\n\nexport function abbreviateAddress(address) {\n  const base58 = address.toBase58();\n  return base58.slice(0, 4) + '…' + base58.slice(-4);\n}\n\nexport function isEqual(obj1, obj2, keys) {\n  if (!keys && Object.keys(obj1).length !== Object.keys(obj2).length) {\n    return false;\n  }\n  keys = keys || Object.keys(obj1);\n  for (const k of keys) {\n    if (obj1[k] !== obj2[k]) {\n      // shallow comparison\n      return false;\n    }\n  }\n  return true;\n}\n","import { useEffect, useReducer } from 'react';\n\nimport assert from 'assert';\n\nconst pageLoadTime = new Date();\n\nconst globalCache = new Map();\n\nclass FetchLoopListener {\n  constructor(cacheKey, fn, refreshInterval, refreshIntervalOnError, callback) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.refreshInterval = refreshInterval;\n    this.refreshIntervalOnError = refreshIntervalOnError;\n    this.callback = callback;\n  }\n}\n\nclass FetchLoopInternal {\n  constructor(cacheKey, fn) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.timeoutId = null;\n    this.listeners = new Set();\n    this.errors = 0;\n  }\n\n  get refreshInterval() {\n    return Math.min(\n      ...[...this.listeners].map((listener) => listener.refreshInterval),\n    );\n  }\n\n  get refreshIntervalOnError() {\n    return Math.min(\n      ...[...this.listeners]\n        .map((listener) => listener.refreshIntervalOnError)\n        .filter((x) => x),\n    );\n  }\n\n  get stopped() {\n    return this.listeners.size === 0;\n  }\n\n  addListener(listener) {\n    const previousRefreshInterval = this.refreshInterval;\n    this.listeners.add(listener);\n    if (this.refreshInterval < previousRefreshInterval) {\n      this.refresh();\n    }\n  }\n\n  removeListener(listener) {\n    assert(this.listeners.delete(listener));\n    if (this.stopped) {\n      if (this.timeoutId) {\n        clearTimeout(this.timeoutId);\n        this.timeoutId = null;\n      }\n    }\n  }\n\n  notifyListeners() {\n    this.listeners.forEach((listener) => listener.callback());\n  }\n\n  refresh = async () => {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    }\n    if (this.stopped) {\n      return;\n    }\n\n    let errored = false;\n    try {\n      const data = await this.fn();\n      globalCache.set(this.cacheKey, data);\n      this.errors = 0;\n      this.notifyListeners();\n      return data;\n    } catch (error) {\n      ++this.errors;\n      console.warn(error);\n      errored = true;\n    } finally {\n      if (!this.timeoutId && !this.stopped) {\n        let waitTime = this.refreshInterval;\n        if (\n          errored &&\n          this.refreshIntervalOnError &&\n          this.refreshIntervalOnError > 0\n        ) {\n          waitTime = this.refreshIntervalOnError;\n        }\n\n        // Back off on errors.\n        if (this.errors > 0) {\n          waitTime = Math.min(1000 * 2 ** (this.errors - 1), 60000);\n        }\n\n        // Don't do any refreshing for the first five seconds, to make way for other things to load.\n        const timeSincePageLoad = new Date() - pageLoadTime;\n        if (timeSincePageLoad < 5000) {\n          waitTime += 5000 - timeSincePageLoad / 2;\n        }\n\n        // Refresh background pages slowly.\n        if (document.visibilityState === 'hidden') {\n          waitTime = 60000;\n        } else if (!document.hasFocus()) {\n          waitTime *= 1.5;\n        }\n\n        // Add jitter so we don't send all requests at the same time.\n        waitTime *= 0.8 + 0.4 * Math.random();\n\n        this.timeoutId = setTimeout(this.refresh, waitTime);\n      }\n    }\n  };\n}\n\nclass FetchLoops {\n  loops = new Map();\n\n  addListener(listener) {\n    if (!this.loops.has(listener.cacheKey)) {\n      this.loops.set(\n        listener.cacheKey,\n        new FetchLoopInternal(listener.cacheKey, listener.fn),\n      );\n    }\n    this.loops.get(listener.cacheKey).addListener(listener);\n  }\n\n  removeListener(listener) {\n    const loop = this.loops.get(listener.cacheKey);\n    loop.removeListener(listener);\n    if (loop.stopped) {\n      this.loops.delete(listener.cacheKey);\n    }\n  }\n\n  refresh(cacheKey) {\n    if (this.loops.has(cacheKey)) {\n      this.loops.get(cacheKey).refresh();\n    }\n  }\n\n  refreshAll() {\n    return Promise.all([...this.loops.values()].map((loop) => loop.refresh()));\n  }\n}\nconst globalLoops = new FetchLoops();\n\nexport function useAsyncData(\n  asyncFn,\n  cacheKey,\n  { refreshInterval = 60000, refreshIntervalOnError = null } = {},\n) {\n  const [, rerender] = useReducer((i) => i + 1, 0);\n\n  useEffect(() => {\n    if (!cacheKey) {\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      return () => {};\n    }\n    const listener = new FetchLoopListener(\n      cacheKey,\n      asyncFn,\n      refreshInterval,\n      refreshIntervalOnError,\n      rerender,\n    );\n    globalLoops.addListener(listener);\n    return () => globalLoops.removeListener(listener);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey, refreshInterval]);\n\n  if (!cacheKey) {\n    return [null, false];\n  }\n\n  const loaded = globalCache.has(cacheKey);\n  const data = loaded ? globalCache.get(cacheKey) : undefined;\n  return [data, loaded];\n}\n\nexport function refreshCache(cacheKey, clearCache = false) {\n  if (clearCache) {\n    globalCache.delete(cacheKey);\n  }\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.refresh();\n    if (clearCache) {\n      loop.notifyListeners();\n    }\n  }\n}\n\nexport function refreshAllCaches() {\n  for (const loop of globalLoops.loops.values()) {\n    loop.refresh();\n  }\n}\n\nexport function setCache(cacheKey, value, { initializeOnly = false } = {}) {\n  if (initializeOnly && globalCache.has(cacheKey)) {\n    return;\n  }\n  globalCache.set(cacheKey, value);\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.notifyListeners();\n  }\n}\n","import { useLocalStorageState } from './utils';\nimport { Account, clusterApiUrl, Connection } from '@solana/web3.js';\nimport React, { useContext, useEffect, useMemo } from 'react';\nimport { setCache, useAsyncData } from './fetch-loop';\nimport tuple from 'immutable-tuple';\n\nexport const ENDPOINTS = [\n  {\n    name: 'mainnet-beta',\n    endpoint: 'https://solana-api.projectserum.com',\n  },\n  { name: 'testnet', endpoint: clusterApiUrl('testnet') },\n  { name: 'devnet', endpoint: clusterApiUrl('devnet') },\n  { name: 'localnet', endpoint: 'http://127.0.0.1:8899' },\n];\n\nconst accountListenerCount = new Map();\n\nconst ConnectionContext = React.createContext(null);\n\nexport function ConnectionProvider({ children }) {\n  const [endpoint, setEndpoint] = useLocalStorageState(\n    'connectionEndpts',\n    ENDPOINTS[0].endpoint,\n  );\n\n  const connection = useMemo(() => new Connection(endpoint, 'recent'), [\n    endpoint,\n  ]);\n  const sendConnection = useMemo(() => new Connection(endpoint, 'recent'), [\n    endpoint,\n  ]);\n\n  // The websocket library solana/web3.js uses closes its websocket connection when the subscription list\n  // is empty after opening its first time, preventing subsequent subscriptions from receiving responses.\n  // This is a hack to prevent the list from every getting empty\n  useEffect(() => {\n    const id = connection.onAccountChange(new Account().publicKey, () => {});\n    return () => connection.removeAccountChangeListener(id);\n  }, [connection]);\n\n  useEffect(() => {\n    const id = connection.onSlotChange(() => null);\n    return () => connection.removeSlotChangeListener(id);\n  }, [connection]);\n\n  useEffect(() => {\n    const id = sendConnection.onAccountChange(\n      new Account().publicKey,\n      () => {},\n    );\n    return () => sendConnection.removeAccountChangeListener(id);\n  }, [sendConnection]);\n\n  useEffect(() => {\n    const id = sendConnection.onSlotChange(() => null);\n    return () => sendConnection.removeSlotChangeListener(id);\n  }, [sendConnection]);\n\n  return (\n    <ConnectionContext.Provider\n      value={{ endpoint, setEndpoint, connection, sendConnection }}\n    >\n      {children}\n    </ConnectionContext.Provider>\n  );\n}\n\nexport function useConnection() {\n  return useContext(ConnectionContext).connection;\n}\n\nexport function useSendConnection() {\n  return useContext(ConnectionContext).sendConnection;\n}\n\nexport function useConnectionConfig() {\n  const context = useContext(ConnectionContext);\n  return { endpoint: context.endpoint, setEndpoint: context.setEndpoint };\n}\n\nexport function useAccountInfo(publicKey) {\n  const connection = useConnection();\n  const cacheKey = tuple(connection, publicKey?.toBase58());\n  const [accountInfo, loaded] = useAsyncData(\n    async () => (publicKey ? connection.getAccountInfo(publicKey) : null),\n    cacheKey,\n    { refreshInterval: 60_000 },\n  );\n  useEffect(() => {\n    if (!publicKey) {\n      return;\n    }\n    if (accountListenerCount.has(cacheKey)) {\n      let currentItem = accountListenerCount.get(cacheKey);\n      ++currentItem.count;\n    } else {\n      let previousData = null;\n      const subscriptionId = connection.onAccountChange(publicKey, (e) => {\n        if (e.data) {\n          if (!previousData || !previousData.equals(e.data)) {\n            setCache(cacheKey, e);\n          } else {\n          }\n          previousData = e.data;\n        }\n      });\n      accountListenerCount.set(cacheKey, { count: 1, subscriptionId });\n    }\n    return () => {\n      let currentItem = accountListenerCount.get(cacheKey);\n      let nextCount = currentItem.count - 1;\n      if (nextCount <= 0) {\n        connection.removeAccountChangeListener(currentItem.subscriptionId);\n        accountListenerCount.delete(cacheKey);\n      } else {\n        --currentItem.count;\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey]);\n  return [accountInfo, loaded];\n}\n\nexport function useAccountData(publicKey) {\n  const [accountInfo] = useAccountInfo(publicKey);\n  return accountInfo && accountInfo.data;\n}\n","import React from 'react';\nimport { notification } from 'antd';\n\nexport function notify({\n  message,\n  description,\n  type = 'info',\n  placement = 'bottomLeft',\n}) {\n  notification[type]({\n    message: <span style={{ color: 'black' }}>{message}</span>,\n    description: (\n      <span style={{ color: 'black', opacity: 0.5 }}>{description}</span>\n    ),\n    placement,\n    style: {\n      backgroundColor: 'white',\n    },\n  });\n}\n","import React, { useContext, useEffect, useMemo, useState } from 'react';\nimport Wallet from '@project-serum/sol-wallet-adapter';\nimport { notify } from './notifications';\nimport { useConnectionConfig } from './connection';\nimport { useLocalStorageState } from './utils';\n\nexport const WALLET_PROVIDERS = [\n  { name: 'sollet.io', url: 'https://www.sollet.io' },\n];\n\nconst WalletContext = React.createContext(null);\n\nexport function WalletProvider({ children }) {\n  const { endpoint } = useConnectionConfig();\n  const [providerUrl, setProviderUrl] = useLocalStorageState(\n    'walletProvider',\n    'https://www.sollet.io',\n  );\n  const wallet = useMemo(() => new Wallet(providerUrl, endpoint), [\n    providerUrl,\n    endpoint,\n  ]);\n\n  const [connected, setConnected] = useState(false);\n  useEffect(() => {\n    console.log('trying to connect');\n    wallet.on('connect', () => {\n      console.log('connected');\n      setConnected(true);\n      let walletPublicKey = wallet.publicKey.toBase58();\n      let keyToDisplay =\n        walletPublicKey.length > 20\n          ? `${walletPublicKey.substring(0, 7)}.....${walletPublicKey.substring(\n              walletPublicKey.length - 7,\n              walletPublicKey.length,\n            )}`\n          : walletPublicKey;\n      notify({\n        message: 'Wallet update',\n        description: 'Connected to wallet ' + keyToDisplay,\n      });\n    });\n    wallet.on('disconnect', () => {\n      setConnected(false);\n      notify({\n        message: 'Wallet update',\n        description: 'Disconnected from wallet',\n      });\n    });\n    return () => {\n      wallet.disconnect();\n      setConnected(false);\n    };\n  }, [wallet]);\n  return (\n    <WalletContext.Provider\n      value={{\n        wallet,\n        connected,\n        providerUrl,\n        setProviderUrl,\n        providerName:\n          WALLET_PROVIDERS.find(({ url }) => url === providerUrl)?.name ??\n          providerUrl,\n      }}\n    >\n      {children}\n    </WalletContext.Provider>\n  );\n}\n\nexport function useWallet() {\n  const context = useContext(WalletContext);\n  return {\n    connected: context.connected,\n    wallet: context.wallet,\n    providerUrl: context.providerUrl,\n    setProvider: context.setProviderUrl,\n    providerName: context.providerName,\n  };\n}\n","import * as BufferLayout from 'buffer-layout';\nimport bs58 from 'bs58';\nimport { PublicKey } from '@solana/web3.js';\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\n\nexport const ACCOUNT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(32, 'mint'),\n  BufferLayout.blob(32, 'owner'),\n  BufferLayout.nu64('amount'),\n  BufferLayout.blob(93),\n]);\n\nexport function parseTokenAccountData(data) {\n  let { mint, owner, amount } = ACCOUNT_LAYOUT.decode(data);\n  return {\n    mint: new PublicKey(mint),\n    owner: new PublicKey(owner),\n    amount,\n  };\n}\n\nexport function getOwnedAccountsFilters(publicKey) {\n  return [\n    {\n      memcmp: {\n        offset: ACCOUNT_LAYOUT.offsetOf('owner'),\n        bytes: publicKey.toBase58(),\n      },\n    },\n    {\n      dataSize: ACCOUNT_LAYOUT.span,\n    },\n  ];\n}\n\nexport const TOKEN_PROGRAM_ID = new PublicKey(\n  'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n);\n\nexport async function getOwnedTokenAccounts(connection, publicKey) {\n  let filters = getOwnedAccountsFilters(publicKey);\n  let resp = await connection._rpcRequest('getProgramAccounts', [\n    TOKEN_PROGRAM_ID.toBase58(),\n    {\n      commitment: connection.commitment,\n      filters,\n    },\n  ]);\n  if (resp.error) {\n    throw new Error(\n      'failed to get token accounts owned by ' +\n        publicKey.toBase58() +\n        ': ' +\n        resp.error.message,\n    );\n  }\n  return resp.result\n    .map(({ pubkey, account: { data, executable, owner, lamports } }) => ({\n      publicKey: new PublicKey(pubkey),\n      accountInfo: {\n        data: bs58.decode(data),\n        executable,\n        owner: new PublicKey(owner),\n        lamports,\n      },\n    }))\n    .filter(({ accountInfo }) => {\n      // TODO: remove this check once mainnet is updated\n      return filters.every((filter) => {\n        if (filter.dataSize) {\n          return accountInfo.data.length === filter.dataSize;\n        } else if (filter.memcmp) {\n          let filterBytes = bs58.decode(filter.memcmp.bytes);\n          return accountInfo.data\n            .slice(\n              filter.memcmp.offset,\n              filter.memcmp.offset + filterBytes.length,\n            )\n            .equals(filterBytes);\n        }\n        return false;\n      });\n    });\n}\n\nexport async function getTokenAccountInfo(connection, ownerAddress) {\n  let [splAccounts, account] = await Promise.all([\n    getOwnedTokenAccounts(connection, ownerAddress),\n    connection.getAccountInfo(ownerAddress),\n  ]);\n  const parsedSplAccounts = splAccounts.map(({ publicKey, accountInfo }) => {\n    return {\n      pubkey: publicKey,\n      account: accountInfo,\n      effectiveMint: parseTokenAccountData(accountInfo.data).mint,\n    };\n  });\n  return parsedSplAccounts.concat({\n    pubkey: ownerAddress,\n    account,\n    effectiveMint: WRAPPED_SOL_MINT,\n  });\n}\n","import {\n  Market,\n  Orderbook,\n  decodeEventQueue,\n  TokenInstructions,\n  MARKETS,\n  TOKEN_MINTS,\n  OpenOrders,\n} from '@project-serum/serum';\nimport { PublicKey } from '@solana/web3.js';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useLocalStorageState } from './utils';\nimport { refreshCache, useAsyncData } from './fetch-loop';\nimport { useAccountData, useAccountInfo, useConnection } from './connection';\nimport { useWallet } from './wallet';\nimport tuple from 'immutable-tuple';\nimport { notify } from './notifications';\nimport { BN } from 'bn.js';\nimport { getTokenAccountInfo } from './tokens';\n\n// Used in debugging, should be false in production\nconst _IGNORE_DEPRECATED = false;\n\nconst USE_MARKETS = _IGNORE_DEPRECATED\n  ? MARKETS.map((m) => ({ ...m, deprecated: false }))\n  : MARKETS;\n\nexport function useMarketsList() {\n  return USE_MARKETS.filter(({ deprecated }) => !deprecated);\n}\n\nexport function useAllMarkets() {\n  const connection = useConnection();\n  const [markets, setMarkets] = useState([]);\n\n  useEffect(() => {\n    const getAllMarkets = async () => {\n      const markets = [];\n      let marketInfo;\n      for (marketInfo of USE_MARKETS) {\n        try {\n          const market = await Market.load(\n            connection,\n            marketInfo.address,\n            {},\n            marketInfo.programId,\n          );\n          markets.push({ market, marketName: marketInfo.name });\n        } catch (e) {\n          notify({\n            message: 'Error loading all market',\n            description: e.message,\n            type: 'error',\n          });\n        }\n      }\n      setMarkets(markets);\n    };\n\n    getAllMarkets();\n  }, [connection]);\n\n  return markets;\n}\n\nexport function useUnmigratedOpenOrdersAccounts() {\n  const connection = useConnection();\n  const { wallet } = useWallet();\n\n  async function getUnmigratedOpenOrdersAccounts() {\n    if (!wallet || !connection || !wallet.publicKey) {\n      return [];\n    }\n    console.log('refreshing useUnmigratedOpenOrdersAccounts');\n    let deprecatedOpenOrdersAccounts = [];\n    const deprecatedProgramIds = Array.from(\n      new Set(\n        USE_MARKETS.filter(\n          ({ deprecated }) => deprecated,\n        ).map(({ programId }) => programId.toBase58()),\n      ),\n    ).map((publicKeyStr) => new PublicKey(publicKeyStr));\n    let programId;\n    for (programId of deprecatedProgramIds) {\n      try {\n        const openOrdersAccounts = await OpenOrders.findForOwner(\n          connection,\n          wallet.publicKey,\n          programId,\n        );\n        deprecatedOpenOrdersAccounts = deprecatedOpenOrdersAccounts.concat(\n          openOrdersAccounts\n            .filter(\n              (openOrders) =>\n                openOrders.baseTokenTotal.toNumber() ||\n                openOrders.quoteTokenTotal.toNumber(),\n            )\n            .filter((openOrders) =>\n              USE_MARKETS.some(\n                (market) =>\n                  market.deprecated && market.address.equals(openOrders.market),\n              ),\n            ),\n        );\n      } catch (e) {\n        console.log(\n          'Error loading deprecated markets',\n          programId?.toBase58(),\n          e.message,\n        );\n      }\n    }\n    // Maybe sort\n    return deprecatedOpenOrdersAccounts;\n  }\n\n  const cacheKey = tuple(\n    'getUnmigratedOpenOrdersAccounts',\n    connection,\n    wallet?.publicKey?.toBase58(),\n  );\n  const [accounts] = useAsyncData(getUnmigratedOpenOrdersAccounts, cacheKey, {\n    refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\n  });\n\n  return {\n    accounts,\n    refresh: (clearCache) => refreshCache(cacheKey, clearCache),\n  };\n}\n\nconst MarketContext = React.createContext(null);\n\nconst _VERY_SLOW_REFRESH_INTERVAL = 5000 * 1000;\n\n// For things that don't really change\nconst _SLOW_REFRESH_INTERVAL = 5 * 1000;\n\n// For things that change frequently\nconst _FAST_REFRESH_INTERVAL = 1000;\n\nexport const DEFAULT_MARKET = USE_MARKETS.find(\n  ({ name, deprecated }) => name === 'SRM/USDT' && !deprecated,\n);\n\nfunction getMarketDetails(market, customMarkets) {\n  if (!market) {\n    return {};\n  }\n  const marketInfos = getMarketInfos(customMarkets);\n  const marketInfo = marketInfos.find((otherMarket) =>\n    otherMarket.address.equals(market.address),\n  );\n  const baseCurrency =\n    (market?.baseMintAddress &&\n      TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\n        ?.name) ||\n    (marketInfo?.baseLabel && `${marketInfo?.baseLabel}*`) ||\n    'UNKNOWN';\n  const quoteCurrency =\n    (market?.quoteMintAddress &&\n      TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\n        ?.name) ||\n    (marketInfo?.quoteLabel && `${marketInfo?.quoteLabel}*`) ||\n    'UNKNOWN';\n\n  return {\n    ...marketInfo,\n    marketName: marketInfo?.name,\n    baseCurrency,\n    quoteCurrency,\n    marketInfo,\n  };\n}\n\nexport function MarketProvider({ children }) {\n  const [marketAddress, setMarketAddress] = useLocalStorageState(\n    'marketAddress',\n    DEFAULT_MARKET.address.toBase58(),\n  );\n  const [customMarkets, setCustomMarkets] = useLocalStorageState(\n    'customMarkets',\n    [],\n  );\n\n  const address = new PublicKey(marketAddress);\n  const connection = useConnection();\n  const marketInfos = getMarketInfos(customMarkets);\n  const marketInfo = marketInfos.find((market) =>\n    market.address.equals(address),\n  );\n\n  // Replace existing market with a non-deprecated one on first load\n  useEffect(() => {\n    if (marketInfo && marketInfo.deprecated) {\n      console.log('Switching markets from deprecated', marketInfo);\n      setMarketAddress(DEFAULT_MARKET.address.toBase58());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const [market, setMarket] = useState();\n  useEffect(() => {\n    if (\n      market &&\n      marketInfo &&\n      market._decoded.ownAddress?.equals(marketInfo?.address)\n    ) {\n      return;\n    }\n    setMarket(null);\n    if (!marketInfo || !marketInfo.address) {\n      notify({\n        message: 'Error loading market',\n        description: 'Please select a market from the dropdown',\n        type: 'error',\n      });\n      return;\n    }\n    Market.load(connection, marketInfo.address, {}, marketInfo.programId)\n      .then(setMarket)\n      .catch((e) =>\n        notify({\n          message: 'Error loading market',\n          description: e.message,\n          type: 'error',\n        }),\n      );\n    // eslint-disable-next-line\n  }, [connection, marketInfo]);\n\n  return (\n    <MarketContext.Provider\n      value={{\n        market,\n        ...getMarketDetails(market, customMarkets),\n        setMarketAddress,\n        customMarkets,\n        setCustomMarkets,\n      }}\n    >\n      {children}\n    </MarketContext.Provider>\n  );\n}\n\nexport function useMarket() {\n  return useContext(MarketContext);\n}\n\nexport function useMarkPrice() {\n  const [markPrice, setMarkPrice] = useState(null);\n\n  const [orderbook] = useOrderbook();\n  const trades = useTrades();\n\n  useEffect(() => {\n    let bb = orderbook?.bids?.length > 0 && Number(orderbook.bids[0][0]);\n    let ba = orderbook?.asks?.length > 0 && Number(orderbook.asks[0][0]);\n    let last = trades?.length > 0 && trades[0].price;\n\n    let markPrice =\n      bb && ba\n        ? last\n          ? [bb, ba, last].sort((a, b) => a - b)[1]\n          : (bb + ba) / 2\n        : null;\n\n    setMarkPrice(markPrice);\n  }, [orderbook, trades]);\n\n  return markPrice;\n}\n\nexport function _useUnfilteredTrades(limit = 10000) {\n  const { market } = useMarket();\n  const connection = useConnection();\n  async function getUnfilteredTrades() {\n    if (!market || !connection) {\n      return null;\n    }\n    return await market.loadFills(connection, limit);\n  }\n  const [trades] = useAsyncData(\n    getUnfilteredTrades,\n    tuple('getUnfilteredTrades', market, connection),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n  return trades;\n  // NOTE: For now, websocket is too expensive since the event queue is large\n  // and updates very frequently\n\n  // let data = useAccountData(market && market._decoded.eventQueue);\n  // if (!data) {\n  //   return null;\n  // }\n  // const events = decodeEventQueue(data, limit);\n  // return events\n  //   .filter((event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0))\n  //   .map(market.parseFillEvent.bind(market));\n}\n\nexport function useOrderbookAccounts() {\n  const { market } = useMarket();\n  let bidData = useAccountData(market && market._decoded.bids);\n  let askData = useAccountData(market && market._decoded.asks);\n  return {\n    bidOrderbook: bidData ? Orderbook.decode(market, bidData) : null,\n    askOrderbook: askData ? Orderbook.decode(market, askData) : null,\n  };\n}\n\nexport function useOrderbook(depth = 20) {\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\n  const { market } = useMarket();\n  const bids =\n    !bidOrderbook || !market\n      ? []\n      : bidOrderbook.getL2(depth).map(([price, size]) => [price, size]);\n  const asks =\n    !askOrderbook || !market\n      ? []\n      : askOrderbook.getL2(depth).map(([price, size]) => [price, size]);\n  return [{ bids, asks }, !!bids || !!asks];\n}\n\n// Want the balances table to be fast-updating, dont want open orders to flicker\n// TODO: Update to use websocket\nexport function useOpenOrdersAccounts(fast = false) {\n  const { market } = useMarket();\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getOpenOrdersAccounts() {\n    if (!connected) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    return await market.findOpenOrdersAccountsForOwner(\n      connection,\n      wallet.publicKey,\n    );\n  }\n  return useAsyncData(\n    getOpenOrdersAccounts,\n    tuple('getOpenOrdersAccounts', wallet, market, connected),\n    { refreshInterval: fast ? _FAST_REFRESH_INTERVAL : _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useSelectedOpenOrdersAccount(fast = false) {\n  const [accounts] = useOpenOrdersAccounts(fast);\n  if (!accounts) {\n    return null;\n  }\n  return accounts[0];\n}\n\nexport function useTokenAccounts() {\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getTokenAccounts() {\n    if (!connected) {\n      return null;\n    }\n    return await getTokenAccountInfo(connection, wallet.publicKey);\n  }\n  return useAsyncData(\n    getTokenAccounts,\n    tuple('getTokenAccounts', wallet, connected),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function getSelectedTokenAccountForMint(accounts, mint) {\n  if (!accounts || !mint) {\n    return null;\n  }\n  const filtered = accounts.filter(({ effectiveMint }) =>\n    mint.equals(effectiveMint),\n  );\n  return filtered && filtered[0];\n}\n\nexport function useSelectedQuoteCurrencyAccount() {\n  const [accounts] = useTokenAccounts();\n  const { market } = useMarket();\n  return getSelectedTokenAccountForMint(accounts, market?.quoteMintAddress);\n}\n\nexport function useSelectedBaseCurrencyAccount() {\n  const [accounts] = useTokenAccounts();\n  const { market } = useMarket();\n  return getSelectedTokenAccountForMint(accounts, market?.baseMintAddress);\n}\n\n// TODO: Update to use websocket\nexport function useQuoteCurrencyBalances() {\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const { market } = useMarket();\n  const [accountInfo, loaded] = useAccountInfo(quoteCurrencyAccount?.pubkey);\n  if (!market || !quoteCurrencyAccount || !loaded) {\n    return null;\n  }\n  if (market.quoteMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\n    return accountInfo?.lamports / 1e9 ?? 0;\n  }\n  return market.quoteSplSizeToNumber(\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\n  );\n}\n\n// TODO: Update to use websocket\nexport function useBaseCurrencyBalances() {\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const { market } = useMarket();\n  const [accountInfo, loaded] = useAccountInfo(baseCurrencyAccount?.pubkey);\n  if (!market || !baseCurrencyAccount || !loaded) {\n    return null;\n  }\n  if (market.baseMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\n    return accountInfo?.lamports / 1e9 ?? 0;\n  }\n  return market.baseSplSizeToNumber(\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\n  );\n}\n\nexport function useOpenOrders() {\n  const { market, marketName } = useMarket();\n  const openOrdersAccount = useSelectedOpenOrdersAccount();\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\n  if (!market || !openOrdersAccount || !bidOrderbook || !askOrderbook) {\n    return null;\n  }\n  return market\n    .filterForOpenOrders(bidOrderbook, askOrderbook, [openOrdersAccount])\n    .map((order) => ({ ...order, marketName, market }));\n}\n\nexport function useTrades(limit = 100) {\n  const trades = _useUnfilteredTrades(limit);\n  if (!trades) {\n    return null;\n  }\n  // Until partial fills are each given their own fill, use maker fills\n  return trades\n    .filter(({ eventFlags }) => eventFlags.maker)\n    .map((trade) => ({\n      ...trade,\n      side: trade.side === 'buy' ? 'sell' : 'buy',\n    }));\n}\n\nexport function useFeeDiscountKeys() {\n  const { market } = useMarket();\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getFeeDiscountKeys() {\n    if (!connected) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    return await market.findFeeDiscountKeys(connection, wallet.publicKey);\n  }\n  return useAsyncData(\n    getFeeDiscountKeys,\n    tuple('getFeeDiscountKeys', wallet, market, connected),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useFills(limit = 100) {\n  const { marketName } = useMarket();\n  const fills = _useUnfilteredTrades(limit);\n  const [openOrdersAccounts] = useOpenOrdersAccounts();\n  if (!openOrdersAccounts || openOrdersAccounts.length === 0) {\n    return null;\n  }\n  if (!fills) {\n    return null;\n  }\n  return fills\n    .filter((fill) =>\n      openOrdersAccounts.some((openOrdersAccount) =>\n        fill.openOrders.equals(openOrdersAccount.publicKey),\n      ),\n    )\n    .map((fill) => ({ ...fill, marketName }));\n}\n\n// TODO: Update to use websocket\nexport function useFillsForAllMarkets(limit = 100) {\n  const { connected, wallet } = useWallet();\n\n  const connection = useConnection();\n  const allMarkets = useAllMarkets();\n\n  async function getFillsForAllMarkets() {\n    let fills = [];\n    if (!connected) {\n      return fills;\n    }\n\n    let marketData;\n    for (marketData of allMarkets) {\n      const { market, marketName } = marketData;\n      if (!market) {\n        return fills;\n      }\n      const openOrdersAccounts = await market.findOpenOrdersAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n      const openOrdersAccount = openOrdersAccounts && openOrdersAccounts[0];\n      if (!openOrdersAccount) {\n        return fills;\n      }\n      const eventQueueData = await connection.getAccountInfo(\n        market && market._decoded.eventQueue,\n      );\n      let data = eventQueueData?.data;\n      if (!data) {\n        return fills;\n      }\n      const events = decodeEventQueue(data, limit);\n      const fillsForMarket = events\n        .filter(\n          (event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0),\n        )\n        .map(market.parseFillEvent.bind(market));\n      const ownFillsForMarket = fillsForMarket\n        .filter((fill) => fill.openOrders.equals(openOrdersAccount.publicKey))\n        .map((fill) => ({ ...fill, marketName }));\n      fills = fills.concat(ownFillsForMarket);\n    }\n\n    console.log(JSON.stringify(fills));\n    return fills;\n  }\n\n  return useAsyncData(\n    getFillsForAllMarkets,\n    tuple('getFillsForAllMarkets', connected, connection, allMarkets, wallet),\n    { refreshInterval: _FAST_REFRESH_INTERVAL },\n  );\n}\n\n// TODO: Update to use websocket\nexport function useOpenOrdersForAllMarkets() {\n  const { connected, wallet } = useWallet();\n\n  const connection = useConnection();\n  const allMarkets = useAllMarkets();\n\n  async function getOpenOrdersForAllMarkets() {\n    let orders = [];\n    if (!connected) {\n      return orders;\n    }\n\n    let marketData;\n    for (marketData of allMarkets) {\n      const { market, marketName } = marketData;\n      if (!market) {\n        return orders;\n      }\n      const openOrdersAccounts = await market.findOpenOrdersAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n      const openOrdersAccount = openOrdersAccounts && openOrdersAccounts[0];\n      if (!openOrdersAccount) {\n        return orders;\n      }\n      const [bids, asks] = await Promise.all([\n        market.loadBids(connection),\n        market.loadAsks(connection),\n      ]);\n      const ordersForMarket = [...bids, ...asks]\n        .filter((order) => {\n          return order.openOrdersAddress.equals(openOrdersAccount.publicKey);\n        })\n        .map((order) => {\n          return { ...order, marketName };\n        });\n      orders = orders.concat(ordersForMarket);\n    }\n\n    return orders;\n  }\n\n  return useAsyncData(\n    getOpenOrdersForAllMarkets,\n    tuple(\n      'getOpenOrdersForAllMarkets',\n      connected,\n      connection,\n      wallet,\n      allMarkets,\n    ),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useBalances() {\n  const baseCurrencyBalances = useBaseCurrencyBalances();\n  const quoteCurrencyBalances = useQuoteCurrencyBalances();\n  const openOrders = useSelectedOpenOrdersAccount(true);\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const baseExists =\n    openOrders && openOrders.baseTokenTotal && openOrders.baseTokenFree;\n  const quoteExists =\n    openOrders && openOrders.quoteTokenTotal && openOrders.quoteTokenFree;\n  if (\n    baseCurrency === 'UNKNOWN' ||\n    quoteCurrency === 'UNKNOWN' ||\n    !baseCurrency ||\n    !quoteCurrency\n  ) {\n    return [];\n  }\n  return [\n    {\n      market,\n      key: `${baseCurrency}${quoteCurrency}${baseCurrency}`,\n      coin: baseCurrency,\n      wallet: baseCurrencyBalances,\n      orders:\n        baseExists && market\n          ? market.baseSplSizeToNumber(\n              openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\n            )\n          : null,\n      openOrders,\n      unsettled:\n        baseExists && market\n          ? market.baseSplSizeToNumber(openOrders.baseTokenFree)\n          : null,\n    },\n    {\n      market,\n      key: `${quoteCurrency}${baseCurrency}${quoteCurrency}`,\n      coin: quoteCurrency,\n      wallet: quoteCurrencyBalances,\n      openOrders,\n      orders:\n        quoteExists && market\n          ? market.quoteSplSizeToNumber(\n              openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\n            )\n          : null,\n      unsettled:\n        quoteExists && market\n          ? market.quoteSplSizeToNumber(openOrders.quoteTokenFree)\n          : null,\n    },\n  ];\n}\n\nexport function useWalletBalancesForAllMarkets() {\n  const { connected, wallet } = useWallet();\n\n  const connection = useConnection();\n  const allMarkets = useAllMarkets();\n\n  async function getWalletBalancesForAllMarkets() {\n    let balances = [];\n    if (!connected) {\n      return balances;\n    }\n\n    let marketData;\n    for (marketData of allMarkets) {\n      const { market, marketName } = marketData;\n      if (!market) {\n        return balances;\n      }\n      const baseCurrency = marketName.includes('/') && marketName.split('/')[0];\n      if (!balances.find((balance) => balance.coin === baseCurrency)) {\n        const baseBalance = await getCurrencyBalance(\n          market,\n          connection,\n          wallet,\n          true,\n        );\n        balances.push({\n          key: baseCurrency,\n          coin: baseCurrency,\n          wallet: baseBalance,\n        });\n      }\n      const quoteCurrency =\n        marketName.includes('/') && marketName.split('/')[1];\n      if (!balances.find((balance) => balance.coin === quoteCurrency)) {\n        const quoteBalance = await getCurrencyBalance(\n          market,\n          connection,\n          wallet,\n          false,\n        );\n        balances.push({\n          key: quoteCurrency,\n          coin: quoteCurrency,\n          wallet: quoteBalance,\n        });\n      }\n    }\n\n    return balances;\n  }\n\n  return useAsyncData(\n    getWalletBalancesForAllMarkets,\n    tuple(\n      'getWalletBalancesForAllMarkets',\n      connected,\n      connection,\n      wallet,\n      allMarkets,\n    ),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nasync function getCurrencyBalance(market, connection, wallet, base = true) {\n  const currencyAccounts = base\n    ? await market.findBaseTokenAccountsForOwner(connection, wallet.publicKey)\n    : await market.findQuoteTokenAccountsForOwner(connection, wallet.publicKey);\n  const currencyAccount = currencyAccounts && currencyAccounts[0];\n  const tokenAccountBalances = await connection.getTokenAccountBalance(\n    currencyAccount.pubkey,\n  );\n  return tokenAccountBalances?.value?.uiAmount;\n}\n\nexport function useOpenOrderAccountBalancesForAllMarkets() {\n  const { connected, wallet } = useWallet();\n\n  const connection = useConnection();\n  const allMarkets = useAllMarkets();\n\n  async function getOpenOrderAccountsForAllMarkets() {\n    let accounts = [];\n    if (!connected) {\n      return accounts;\n    }\n\n    let marketData;\n    for (marketData of allMarkets) {\n      const { market, marketName } = marketData;\n      if (!market) {\n        return accounts;\n      }\n      const openOrderAccounts = await market.findOpenOrdersAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n      if (!openOrderAccounts) {\n        continue;\n      }\n      const baseCurrencyAccounts = await market.findBaseTokenAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n      const quoteCurrencyAccounts = await market.findQuoteTokenAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n\n      const baseCurrency = marketName.includes('/') && marketName.split('/')[0];\n      const quoteCurrency =\n        marketName.includes('/') && marketName.split('/')[1];\n\n      const openOrderAccountBalances = [];\n      openOrderAccounts.forEach((openOrdersAccount) => {\n        const inOrdersBase =\n          openOrdersAccount?.baseTokenTotal &&\n          openOrdersAccount?.baseTokenFree &&\n          market.baseSplSizeToNumber(\n            openOrdersAccount.baseTokenTotal.sub(\n              openOrdersAccount.baseTokenFree,\n            ),\n          );\n        const inOrdersQuote =\n          openOrdersAccount?.quoteTokenTotal &&\n          openOrdersAccount?.quoteTokenFree &&\n          market.baseSplSizeToNumber(\n            openOrdersAccount.quoteTokenTotal.sub(\n              openOrdersAccount.quoteTokenFree,\n            ),\n          );\n        const unsettledBase =\n          openOrdersAccount?.baseTokenFree &&\n          market.baseSplSizeToNumber(openOrdersAccount.baseTokenFree);\n        const unsettledQuote =\n          openOrdersAccount?.quoteTokenFree &&\n          market.baseSplSizeToNumber(openOrdersAccount.quoteTokenFree);\n        openOrderAccountBalances.push({\n          market: marketName,\n          coin: baseCurrency,\n          key: baseCurrency,\n          orders: inOrdersBase,\n          unsettled: unsettledBase,\n          openOrdersAccount: openOrdersAccount,\n          baseCurrencyAccount: baseCurrencyAccounts && baseCurrencyAccounts[0],\n          quoteCurrencyAccount:\n            quoteCurrencyAccounts && quoteCurrencyAccounts[0],\n        });\n        openOrderAccountBalances.push({\n          market: marketName,\n          coin: quoteCurrency,\n          key: quoteCurrency,\n          orders: inOrdersQuote,\n          unsettled: unsettledQuote,\n          openOrdersAccount: openOrdersAccount,\n          baseCurrencyAccount: baseCurrencyAccounts && baseCurrencyAccounts[0],\n          quoteCurrencyAccount:\n            quoteCurrencyAccounts && quoteCurrencyAccounts[0],\n        });\n      });\n      accounts = accounts.concat(openOrderAccountBalances);\n    }\n\n    return accounts;\n  }\n\n  return useAsyncData(\n    getOpenOrderAccountsForAllMarkets,\n    tuple(\n      'getOpenOrderAccountsForAllMarkets',\n      connected,\n      connection,\n      wallet,\n      allMarkets,\n    ),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useUnmigratedDeprecatedMarkets() {\n  const connection = useConnection();\n  const { accounts } = useUnmigratedOpenOrdersAccounts();\n  const marketsList =\n    accounts &&\n    Array.from(new Set(accounts.map((openOrders) => openOrders.market)));\n  const deps = marketsList && marketsList.map((m) => m.toBase58());\n\n  const useUnmigratedDeprecatedMarketsInner = async () => {\n    if (!marketsList) {\n      return null;\n    }\n    const getMarket = async (address) => {\n      const marketInfo = USE_MARKETS.find((market) =>\n        market.address.equals(address),\n      );\n      try {\n        console.log('Loading market', marketInfo.name);\n        // NOTE: Should this just be cached by (connection, marketInfo.address, marketInfo.programId)?\n        return await Market.load(\n          connection,\n          marketInfo.address,\n          {},\n          marketInfo.programId,\n        );\n      } catch (e) {\n        console.log('Failed loading market', marketInfo.name, e);\n        notify({\n          message: 'Error loading market',\n          description: e.message,\n          type: 'error',\n        });\n        return null;\n      }\n    };\n    return (await Promise.all(marketsList.map(getMarket))).filter((x) => x);\n  };\n  const [markets] = useAsyncData(\n    useUnmigratedDeprecatedMarketsInner,\n    tuple(\n      'useUnmigratedDeprecatedMarketsInner',\n      connection,\n      deps && deps.toString(),\n    ),\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\n  );\n  if (!markets) {\n    return null;\n  }\n  return markets.map((market) => ({\n    market,\n    openOrdersList: accounts.filter((openOrders) =>\n      openOrders.market.equals(market.address),\n    ),\n  }));\n}\n\nexport function useGetOpenOrdersForDeprecatedMarkets() {\n  const { connected, wallet } = useWallet();\n  const [customMarkets] = useLocalStorageState('customMarkets', []);\n  const connection = useConnection();\n  const marketsAndOrders = useUnmigratedDeprecatedMarkets();\n  const marketsList =\n    marketsAndOrders && marketsAndOrders.map(({ market }) => market);\n\n  // This isn't quite right: open order balances could change\n  const deps =\n    marketsList && marketsList.map((market) => market.address.toBase58());\n\n  async function getOpenOrdersForDeprecatedMarkets() {\n    if (!connected) {\n      return null;\n    }\n    if (!marketsList) {\n      return null;\n    }\n    console.log('refreshing getOpenOrdersForDeprecatedMarkets');\n    const getOrders = async (market) => {\n      const { marketName } = getMarketDetails(market, customMarkets);\n      try {\n        console.log('Fetching open orders for', marketName);\n        // Can do better than this, we have the open orders accounts already\n        return (\n          await market.loadOrdersForOwner(connection, wallet.publicKey)\n        ).map((order) => ({ marketName, market, ...order }));\n      } catch (e) {\n        console.log('Failed loading open orders', market.address.toBase58(), e);\n        notify({\n          message: `Error loading open orders for deprecated ${marketName}`,\n          description: e.message,\n          type: 'error',\n        });\n        return null;\n      }\n    };\n    return (await Promise.all(marketsList.map(getOrders)))\n      .filter((x) => x)\n      .flat();\n  }\n\n  const cacheKey = tuple(\n    'getOpenOrdersForDeprecatedMarkets',\n    connected,\n    connection,\n    wallet,\n    deps && deps.toString(),\n  );\n  const [openOrders, loaded] = useAsyncData(\n    getOpenOrdersForDeprecatedMarkets,\n    cacheKey,\n    {\n      refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\n    },\n  );\n  console.log('openOrders', openOrders);\n  return {\n    openOrders,\n    loaded,\n    refreshOpenOrders: () => refreshCache(cacheKey),\n  };\n}\n\nexport function useBalancesForDeprecatedMarkets() {\n  const markets = useUnmigratedDeprecatedMarkets();\n  const [customMarkets] = useLocalStorageState('customMarkets', []);\n  if (!markets) {\n    return null;\n  }\n\n  const openOrderAccountBalances = [];\n  markets.forEach(({ market, openOrdersList }) => {\n    const { baseCurrency, quoteCurrency, marketName } = getMarketDetails(\n      market,\n      customMarkets,\n    );\n    openOrdersList.forEach((openOrders) => {\n      const inOrdersBase =\n        openOrders?.baseTokenTotal &&\n        openOrders?.baseTokenFree &&\n        market.baseSplSizeToNumber(\n          openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\n        );\n      const inOrdersQuote =\n        openOrders?.quoteTokenTotal &&\n        openOrders?.quoteTokenFree &&\n        market.baseSplSizeToNumber(\n          openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\n        );\n      const unsettledBase =\n        openOrders?.baseTokenFree &&\n        market.baseSplSizeToNumber(openOrders.baseTokenFree);\n      const unsettledQuote =\n        openOrders?.quoteTokenFree &&\n        market.baseSplSizeToNumber(openOrders.quoteTokenFree);\n\n      openOrderAccountBalances.push({\n        marketName,\n        market,\n        coin: baseCurrency,\n        key: `${marketName}${baseCurrency}`,\n        orders: inOrdersBase,\n        unsettled: unsettledBase,\n        openOrders,\n      });\n      openOrderAccountBalances.push({\n        marketName,\n        market,\n        coin: quoteCurrency,\n        key: `${marketName}${quoteCurrency}`,\n        orders: inOrdersQuote,\n        unsettled: unsettledQuote,\n        openOrders,\n      });\n    });\n  });\n  return openOrderAccountBalances;\n}\n\nexport function getMarketInfos(customMarkets) {\n  const customMarketsInfo = customMarkets.map((m) => ({\n    ...m,\n    address: new PublicKey(m.address),\n    programId: new PublicKey(m.programId),\n  }));\n\n  return [...customMarketsInfo, ...USE_MARKETS];\n}\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\nhtml,body{\n  background: #11161D;\n}\ninput[type=number]::-webkit-inner-spin-button {\n  opacity: 0;\n}\ninput[type=number]:hover::-webkit-inner-spin-button,\ninput[type=number]:focus::-webkit-inner-spin-button {\n  opacity: 0.25;\n}\n/* width */\n::-webkit-scrollbar {\n  width: 15px;\n}\n/* Track */\n::-webkit-scrollbar-track {\n  background: #2d313c;\n}\n/* Handle */\n::-webkit-scrollbar-thumb {\n  background: #5b5f67;\n}\n/* Handle on hover */\n::-webkit-scrollbar-thumb:hover {\n  background: #5b5f67;\n}\n.ant-slider-track, .ant-slider:hover .ant-slider-track {\n  background-color: #2abdd2;\n  opacity: 0.75;\n}\n.ant-slider-track,\n.ant-slider ant-slider-track:hover {\n  background-color: #2abdd2;\n  opacity: 0.75;\n}\n.ant-slider-dot-active,\n.ant-slider-handle,\n.ant-slider-handle-click-focused,\n.ant-slider:hover .ant-slider-handle:not(.ant-tooltip-open)  {\n  border: 2px solid #2abdd2; \n}\n.ant-table-tbody > tr.ant-table-row:hover > td {\n  background: #273043;\n}\n.ant-table-tbody > tr > td {\n  border-bottom: 8px solid #1A2029;\n}\n.ant-table-container table > thead > tr:first-child th {\n  border-bottom: none;\n}\n.ant-divider-horizontal.ant-divider-with-text::before, .ant-divider-horizontal.ant-divider-with-text::after {\n  border-top: 1px solid #434a59 !important;\n}\n.ant-layout {\n    background: #11161D\n  }\n  .ant-table {\n    background: #212734;\n  }\n  .ant-table-thead > tr > th {\n    background: #1A2029;\n  }\n.ant-select-item-option-content {\n  img {\n    margin-right: 4px;\n  }\n}\n.ant-modal-content {\n  background-color: #212734;\n}\n\n@-webkit-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n@-moz-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n@-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n.flash {\n  -moz-animation: highlight 0.5s ease 0s 1 alternate ;\n  -webkit-animation: highlight 0.5s ease 0s 1 alternate;\n  animation: highlight 0.5s ease 0s 1 alternate;\n}`;\n","import React, { Component } from 'react';\nimport { Typography } from 'antd';\n\nconst { Title } = Typography;\n\nexport default class ErrorBoundary extends Component {\n  state = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div>\n          <div>\n            <Title level={2}>Something went wrong.</Title>\n            <Title level={4}>Please try again later.</Title>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  margin: 5px;\n  padding: 20px;\n  background-color: #1a2029;\n`;\n\nexport default function FloatingElement({ style, children }) {\n  return <Wrapper style={{ ...style }}>{children}</Wrapper>;\n}\n","import { Col, Row } from 'antd';\nimport React, { useRef, useEffect, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useMarket, useOrderbook, useMarkPrice } from '../utils/markets';\nimport { isEqual, getDecimalCount } from '../utils/utils';\nimport { useInterval } from '../utils/useInterval';\nimport FloatingElement from './layout/FloatingElement';\nimport usePrevious from '../utils/usePrevious';\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\n\nconst SizeTitle = styled(Row)`\n  padding: 20px 0 14px;\n  color: #434a59;\n`;\n\nconst MarkPriceTitle = styled(Row)`\n  padding: 20px 0 14px;\n  font-weight: 700;\n`;\n\nconst Line = styled.div`\n  text-align: right;\n  float: right;\n  height: 100%;\n  ${(props) =>\n    props['data-width'] &&\n    css`\n      width: ${props['data-width']};\n    `}\n  ${(props) =>\n    props['data-bgcolor'] &&\n    css`\n      background-color: ${props['data-bgcolor']};\n    `}\n`;\n\nconst Price = styled.div`\n  position: absolute;\n  right: 5px;\n  color: white;\n`;\n\nexport default function Orderbook({ smallScreen, depth = 7, onPrice, onSize }) {\n  const markPrice = useMarkPrice();\n  const [orderbook] = useOrderbook();\n  const { baseCurrency, quoteCurrency } = useMarket();\n\n  const currentOrderbookData = useRef(null);\n  const lastOrderbookData = useRef(null);\n\n  const [orderbookData, setOrderbookData] = useState(null);\n\n  useInterval(() => {\n    if (\n      !currentOrderbookData.current ||\n      JSON.stringify(currentOrderbookData.current) !==\n        JSON.stringify(lastOrderbookData.current)\n    ) {\n      let bids = orderbook?.bids || [];\n      let asks = orderbook?.asks || [];\n\n      let sum = (total, [, size], index) =>\n        index < depth ? total + size : total;\n      let totalSize = bids.reduce(sum, 0) + asks.reduce(sum, 0);\n\n      let bidsToDisplay = getCumulativeOrderbookSide(bids, totalSize, false);\n      let asksToDisplay = getCumulativeOrderbookSide(asks, totalSize, true);\n\n      currentOrderbookData.current = {\n        bids: orderbook?.bids,\n        asks: orderbook?.asks,\n      };\n\n      setOrderbookData({ bids: bidsToDisplay, asks: asksToDisplay });\n    }\n  }, 250);\n\n  useEffect(() => {\n    lastOrderbookData.current = {\n      bids: orderbook?.bids,\n      asks: orderbook?.asks,\n    };\n  }, [orderbook]);\n\n  function getCumulativeOrderbookSide(orders, totalSize, backwards = false) {\n    let cumulative = orders\n      .slice(0, depth)\n      .reduce((cumulative, [price, size], i) => {\n        const cumulativeSize = (cumulative[i - 1]?.cumulativeSize || 0) + size;\n        cumulative.push({\n          price,\n          size,\n          cumulativeSize,\n          sizePercent: Math.round((cumulativeSize / (totalSize || 1)) * 100),\n        });\n        return cumulative;\n      }, []);\n    if (backwards) {\n      cumulative = cumulative.reverse();\n    }\n    return cumulative;\n  }\n\n  return (\n    <FloatingElement\n      style={\n        smallScreen ? { flex: 1 } : { height: '500px', overflow: 'hidden' }\n      }\n    >\n      <Title>Orderbook</Title>\n      <SizeTitle>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          Size ({baseCurrency})\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          Price ({quoteCurrency})\n        </Col>\n      </SizeTitle>\n      {orderbookData?.asks.map(({ price, size, sizePercent }) => (\n        <OrderbookRow\n          key={price + ''}\n          price={price}\n          size={size}\n          side={'sell'}\n          sizePercent={sizePercent}\n          onPriceClick={() => onPrice(price)}\n          onSizeClick={() => onSize(size)}\n        />\n      ))}\n      <MarkPriceComponent markPrice={markPrice} />\n      {orderbookData?.bids.map(({ price, size, sizePercent }) => (\n        <OrderbookRow\n          key={price + ''}\n          price={price}\n          size={size}\n          side={'buy'}\n          sizePercent={sizePercent}\n          onPriceClick={() => onPrice(price)}\n          onSizeClick={() => onSize(size)}\n        />\n      ))}\n    </FloatingElement>\n  );\n}\n\nconst OrderbookRow = React.memo(\n  ({ side, price, size, sizePercent, onSizeClick, onPriceClick }) => {\n    const element = useRef();\n\n    const { market } = useMarket();\n\n    useEffect(() => {\n      // eslint-disable-next-line\n      !element.current?.classList.contains('flash') &&\n        element.current?.classList.add('flash');\n      const id = setTimeout(\n        () =>\n          element.current?.classList.contains('flash') &&\n          element.current?.classList.remove('flash'),\n        250,\n      );\n      return () => clearTimeout(id);\n    }, [price, size]);\n\n    let formattedSize =\n      market?.minOrderSize && !isNaN(size)\n        ? Number(size).toFixed(getDecimalCount(market.minOrderSize) + 1)\n        : size;\n\n    let formattedPrice =\n      market?.tickSize && !isNaN(price)\n        ? Number(price).toFixed(getDecimalCount(market.tickSize) + 1)\n        : price;\n\n    return (\n      <Row ref={element} style={{ marginBottom: 1 }} onClick={onSizeClick}>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          {formattedSize}\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          <Line\n            data-width={sizePercent + '%'}\n            data-bgcolor={\n              side === 'buy'\n                ? 'rgba(65, 199, 122, 0.6)'\n                : 'rgba(242, 60, 105, 0.6)'\n            }\n          />\n          <Price onClick={onPriceClick}>{formattedPrice}</Price>\n        </Col>\n      </Row>\n    );\n  },\n  (prevProps, nextProps) =>\n    isEqual(prevProps, nextProps, ['price', 'size', 'sizePercent']),\n);\n\nconst MarkPriceComponent = React.memo(\n  ({ markPrice }) => {\n    const { market } = useMarket();\n    const previousMarkPrice = usePrevious(markPrice);\n\n    let markPriceColor =\n      markPrice > previousMarkPrice\n        ? '#41C77A'\n        : markPrice < previousMarkPrice\n        ? '#F23B69'\n        : 'white';\n\n    let formattedMarkPrice =\n      markPrice &&\n      market?.tickSize &&\n      markPrice.toFixed(getDecimalCount(market.tickSize));\n\n    return (\n      <MarkPriceTitle justify=\"center\">\n        <Col style={{ color: markPriceColor }}>\n          {markPrice > previousMarkPrice && (\n            <ArrowUpOutlined style={{ marginRight: 5 }} />\n          )}\n          {markPrice < previousMarkPrice && (\n            <ArrowDownOutlined style={{ marginRight: 5 }} />\n          )}\n          {formattedMarkPrice || '----'}\n        </Col>\n      </MarkPriceTitle>\n    );\n  },\n  (prevProps, nextProps) => isEqual(prevProps, nextProps, ['markPrice']),\n);\n","import { useRef, useEffect } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import { useEffect, useRef } from 'react';\n\nexport default function usePrevious(value) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef();\n\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n\n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\n","import React from 'react';\nimport { ConfigProvider, Table } from 'antd';\n\nexport default function DataTable({\n  dataSource,\n  columns,\n  emptyLabel = 'No data',\n  pagination = false,\n  loading = false,\n  pageSize = 10,\n}) {\n  const customizeRenderEmpty = () => (\n    <div\n      style={{\n        padding: '20px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      {emptyLabel}\n    </div>\n  );\n\n  return (\n    <ConfigProvider renderEmpty={customizeRenderEmpty}>\n      <Table\n        dataSource={dataSource}\n        columns={columns}\n        pagination={pagination ? { pagination: true, pageSize } : false}\n        loading={loading}\n      />\n    </ConfigProvider>\n  );\n}\n","import { notify } from './notifications';\nimport { getDecimalCount, sleep } from './utils';\nimport {\n  Account,\n  SystemProgram,\n  Transaction,\n  PublicKey,\n} from '@solana/web3.js';\nimport { TOKEN_MINTS, TokenInstructions } from '@project-serum/serum';\n\nexport async function createTokenAccountTransaction({\n  connection,\n  wallet,\n  mintPublicKey,\n}) {\n  const newAccount = new Account();\n  const transaction = SystemProgram.createAccount({\n    fromPubkey: wallet.publicKey,\n    newAccountPubkey: newAccount.publicKey,\n    lamports: await connection.getMinimumBalanceForRentExemption(165),\n    space: 165,\n    programId: TokenInstructions.TOKEN_PROGRAM_ID,\n  });\n  transaction.add(\n    TokenInstructions.initializeAccount({\n      account: newAccount.publicKey,\n      mint: mintPublicKey,\n      owner: wallet.publicKey,\n    }),\n  );\n  return {\n    transaction,\n    signer: newAccount,\n    newAccountPubkey: newAccount.publicKey,\n  };\n}\n\nexport async function settleFunds({\n  market,\n  openOrders,\n  connection,\n  wallet,\n  baseCurrencyAccount,\n  quoteCurrencyAccount,\n  onSuccess,\n}) {\n  if (\n    !market ||\n    !wallet ||\n    !connection ||\n    !openOrders ||\n    (!baseCurrencyAccount && !quoteCurrencyAccount)\n  ) {\n    notify({ message: 'Not connected' });\n    return;\n  }\n\n  let createAccountTransaction;\n  let createAccountSigner;\n  let baseCurrencyAccountPubkey = baseCurrencyAccount?.pubkey;\n  let quoteCurrencyAccountPubkey = quoteCurrencyAccount?.pubkey;\n\n  if (!baseCurrencyAccountPubkey) {\n    const result = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.baseMintAddress,\n    });\n    baseCurrencyAccountPubkey = result?.newAccountPubkey;\n    createAccountTransaction = result?.transaction;\n    createAccountSigner = result?.signer;\n  }\n  if (!quoteCurrencyAccountPubkey) {\n    const result = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.quoteMintAddress,\n    });\n    quoteCurrencyAccountPubkey = result?.newAccountPubkey;\n    createAccountTransaction = result?.transaction;\n    createAccountSigner = result?.signer;\n  }\n  let referrerQuoteWallet = null;\n  if (market.supportsReferralFees) {\n    if (\n      process.env.REACT_APP_USDT_REFERRAL_FEES_ADDRESS &&\n      market.quoteMintAddress.equals(\n        TOKEN_MINTS.find(({ name }) => name === 'USDT').address,\n      )\n    ) {\n      referrerQuoteWallet = new PublicKey(\n        process.env.REACT_APP_USDT_REFERRAL_FEES_ADDRESS,\n      );\n    } else if (\n      process.env.REACT_APP_USDC_REFERRAL_FEES_ADDRESS &&\n      market.quoteMintAddress.equals(\n        TOKEN_MINTS.find(({ name }) => name === 'USDC').address,\n      )\n    ) {\n      referrerQuoteWallet = new PublicKey(\n        process.env.REACT_APP_USDC_REFERRAL_FEES_ADDRESS,\n      );\n    }\n  }\n  const {\n    transaction: settleFundsTransaction,\n    signers: settleFundsSigners,\n  } = await market.makeSettleFundsTransaction(\n    connection,\n    openOrders,\n    baseCurrencyAccountPubkey,\n    quoteCurrencyAccountPubkey,\n    referrerQuoteWallet,\n  );\n\n  let transaction = mergeTransactions([\n    createAccountTransaction,\n    settleFundsTransaction,\n  ]);\n  let signers = createAccountSigner\n    ? [...settleFundsSigners, createAccountSigner]\n    : settleFundsSigners;\n\n  const onConfirm = (result) => {\n    if (result.timeout) {\n      notify({\n        message: 'Timed out',\n        type: 'error',\n        description: 'Timed out awaiting confirmation on transaction',\n      });\n    } else if (result.err) {\n      console.log(result.err);\n      notify({ message: 'Error settling funds', type: 'error' });\n    } else {\n      notify({ message: 'Fund settlement confirmed', type: 'success' });\n      onSuccess && onSuccess();\n    }\n  };\n  const onBeforeSend = () => notify({ message: 'Settling funds...' });\n  const onAfterSend = () =>\n    notify({ message: 'Funds settled', type: 'success' });\n  return await sendTransaction({\n    transaction,\n    signers,\n    wallet,\n    connection,\n    onBeforeSend,\n    onAfterSend,\n    onConfirm,\n  });\n}\n\nexport async function cancelOrder(params) {\n  return cancelOrders({ ...params, orders: [params.order] });\n}\n\nexport async function cancelOrders({\n  market,\n  wallet,\n  connection,\n  orders,\n  onBeforeSendCallBack,\n  onAfterSendCallBack,\n  onConfirmCallBack,\n}) {\n  const transaction = market.makeMatchOrdersTransaction(5);\n  orders.forEach((order) => {\n    transaction.add(\n      market.makeCancelOrderInstruction(connection, wallet.publicKey, order),\n    );\n  });\n  transaction.add(market.makeMatchOrdersTransaction(5));\n  const onConfirm = (result) => {\n    if (result.timeout) {\n      notify({\n        message: 'Timed out',\n        type: 'error',\n        description: 'Timed out awaiting confirmation on transaction',\n      });\n    } else if (result.err) {\n      console.log(result.err);\n      notify({\n        message:\n          orders.length > 1\n            ? 'Error cancelling orders'\n            : 'Error cancelling order',\n        type: 'error',\n      });\n    } else {\n      notify({\n        message:\n          orders.length > 1\n            ? 'Order cancellations confirmed'\n            : 'Order cancellation confirmed',\n        type: 'success',\n      });\n    }\n    onConfirmCallBack && onConfirmCallBack();\n  };\n  const onBeforeSend = () => {\n    notify({ message: 'Sending cancel...' });\n    onBeforeSendCallBack && onBeforeSendCallBack();\n  };\n  const onAfterSend = () => {\n    notify({\n      message: orders.length > 1 ? 'Orders cancelled' : 'Order cancelled',\n      type: 'success',\n    });\n    onAfterSendCallBack && onAfterSendCallBack();\n  };\n\n  return await sendTransaction({\n    transaction,\n    wallet,\n    connection,\n    onBeforeSend,\n    onAfterSend,\n    onConfirm,\n  });\n}\n\nexport async function placeOrder({\n  side,\n  price,\n  size,\n  orderType,\n  market,\n  connection,\n  wallet,\n  baseCurrencyAccount,\n  quoteCurrencyAccount,\n  onBeforeSendCallBack,\n  onAfterSendCallBack,\n  onConfirmCallBack,\n}) {\n  let formattedMinOrderSize =\n    market?.minOrderSize?.toFixed(getDecimalCount(market.minOrderSize)) ||\n    market?.minOrderSize;\n  let formattedTickSize =\n    market?.tickSize?.toFixed(getDecimalCount(market.tickSize)) ||\n    market?.tickSize;\n  const isIncrement = (num, step) =>\n    Math.abs((num / step) % 1) < 1e-5 ||\n    Math.abs(((num / step) % 1) - 1) < 1e-5;\n  if (isNaN(price)) {\n    notify({ message: 'Invalid price', type: 'error' });\n    return;\n  }\n  if (isNaN(size)) {\n    notify({ message: 'Invalid size', type: 'error' });\n    return;\n  }\n  if (!wallet || !wallet.publicKey) {\n    notify({ message: 'Connect wallet', type: 'error' });\n    return;\n  }\n  if (!market) {\n    notify({ message: 'Invalid  market', type: 'error' });\n    return;\n  }\n  if (!isIncrement(size, market.minOrderSize)) {\n    notify({\n      message: `Size must be an increment of ${formattedMinOrderSize}`,\n      type: 'error',\n    });\n    return;\n  }\n  if (size < market.minOrderSize) {\n    notify({ message: 'Size too small', type: 'error' });\n    return;\n  }\n  if (!isIncrement(price, market.tickSize)) {\n    notify({\n      message: `Price must be an increment of ${formattedTickSize}`,\n      type: 'error',\n    });\n    return;\n  }\n  if (price < market.tickSize) {\n    notify({ message: 'Price under tick size', type: 'error' });\n    return;\n  }\n  const owner = wallet.publicKey;\n\n  const payer = side === 'sell' ? baseCurrencyAccount : quoteCurrencyAccount;\n  if (!payer) {\n    notify({\n      message: 'Need an SPL token account for cost currency',\n      type: 'error',\n    });\n    return;\n  }\n  const params = {\n    owner,\n    payer,\n    side,\n    price,\n    size,\n    orderType,\n  };\n  console.log(params);\n\n  const transaction = market.makeMatchOrdersTransaction(5);\n  let {\n    transaction: placeOrderTx,\n    signers,\n  } = await market.makePlaceOrderTransaction(\n    connection,\n    params,\n    10_000,\n    10_000,\n  );\n  transaction.add(placeOrderTx);\n  transaction.add(market.makeMatchOrdersTransaction(5));\n\n  const onConfirm = (result) => {\n    if (result.timeout) {\n      notify({\n        message: 'Timed out',\n        type: 'error',\n        description: 'Timed out awaiting confirmation on transaction',\n      });\n    } else if (result.err) {\n      console.log(result.err);\n      notify({ message: 'Error placing order', type: 'error' });\n    } else {\n      notify({ message: 'Order confirmed', type: 'success' });\n    }\n    onConfirmCallBack && onConfirmCallBack();\n  };\n  const onBeforeSend = () => {\n    notify({ message: 'Sending order...' });\n    onBeforeSendCallBack && onBeforeSendCallBack();\n  };\n  const onAfterSend = () => {\n    notify({ message: 'Order sent', type: 'success' });\n    onAfterSendCallBack && onAfterSendCallBack();\n  };\n\n  return await sendTransaction({\n    transaction,\n    wallet,\n    connection,\n    onBeforeSend,\n    onAfterSend,\n    onConfirm,\n    signers,\n  });\n}\n\nconst getUnixTs = () => {\n  return new Date().getTime() / 1000;\n};\n\nconst DEFAULT_TIMEOUT = 15000;\n\nasync function sendTransaction({\n  transaction,\n  wallet,\n  signers = [wallet.publicKey],\n  connection,\n  onBeforeSend,\n  onAfterSend,\n  onConfirm,\n  timeout = DEFAULT_TIMEOUT,\n}) {\n  transaction.recentBlockhash = (\n    await connection.getRecentBlockhash('max')\n  ).blockhash;\n  transaction.signPartial(...signers);\n  const rawTransaction = (\n    await wallet.signTransaction(transaction)\n  ).serialize();\n  let done = false;\n  const startTime = getUnixTs();\n  onBeforeSend();\n  const txid = await connection.sendRawTransaction(rawTransaction, {\n    skipPreflight: true,\n  });\n  onAfterSend();\n  console.log('Started sending transaction for', txid);\n  awaitTransactionSignatureConfirmation(txid, timeout, connection)\n    .then((res) => {\n      done = true;\n      onConfirm(res);\n    })\n    .catch((res) => {\n      done = true;\n      onConfirm(res);\n    });\n  while (!done && getUnixTs() - startTime < timeout) {\n    connection.sendRawTransaction(rawTransaction, {\n      skipPreflight: true,\n    });\n    await sleep(300);\n  }\n  console.log('Latency', txid, getUnixTs() - startTime);\n  return txid;\n}\n\nasync function awaitTransactionSignatureConfirmation(\n  txid,\n  timeout,\n  connection,\n) {\n  let done = false;\n  const result = await new Promise((resolve, reject) => {\n    (async () => {\n      setTimeout(() => {\n        if (done) {\n          return;\n        }\n        done = true;\n        console.log('Timed out for txid', txid);\n        reject({ timeout: true });\n      }, timeout);\n      try {\n        connection.onSignature(\n          txid,\n          (result) => {\n            console.log('WS confirmed', txid, result);\n            done = true;\n            if (result.err) {\n              reject(result);\n            } else {\n              resolve(result);\n            }\n          },\n          'recent',\n        );\n        console.log('Set up WS connection', txid);\n      } catch (e) {\n        done = true;\n        console.log('WS error in setup', txid, e);\n      }\n      while (!done) {\n        (async () => {\n          try {\n            const signatureStatuses = await connection.getSignatureStatuses([\n              txid,\n            ]);\n            const result = signatureStatuses && signatureStatuses.value[0];\n            if (!done) {\n              if (!result) {\n                console.log('REST null result for', txid, result);\n              } else if (result.err) {\n                console.log('REST error for', txid, result);\n                done = true;\n                reject(result);\n              } else if (!result.confirmations) {\n                console.log('REST no confirmations for', txid, result);\n              } else {\n                console.log('REST confirmation for', txid, result);\n                done = true;\n                resolve(result);\n              }\n            }\n          } catch (e) {\n            if (!done) {\n              console.log('REST connection error: txid', txid, e);\n            }\n          }\n        })();\n        await sleep(300);\n      }\n    })();\n  });\n  done = true;\n  return result;\n}\n\nfunction mergeTransactions(transactions) {\n  const transaction = new Transaction();\n  transactions\n    .filter((t) => t)\n    .forEach((t) => {\n      transaction.add(t);\n    });\n  return transaction;\n}\n","import { Button } from 'antd';\nimport React from 'react';\nimport {\n  useTokenAccounts,\n  getSelectedTokenAccountForMint,\n} from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\nimport { useSendConnection } from '../../utils/connection';\nimport { useWallet } from '../../utils/wallet';\nimport { settleFunds } from '../../utils/send';\n\nexport default function BalancesTable({\n  balances,\n  showMarket,\n  hideWalletBalance,\n  onSettleSuccess,\n}) {\n  const [accounts] = useTokenAccounts();\n  const connection = useSendConnection();\n  const { wallet } = useWallet();\n\n  async function onSettleFunds(market, openOrders) {\n    return await settleFunds({\n      market,\n      openOrders,\n      connection,\n      wallet,\n      baseCurrencyAccount: getSelectedTokenAccountForMint(\n        accounts,\n        market?.baseMintAddress,\n      ),\n      quoteCurrencyAccount: getSelectedTokenAccountForMint(\n        accounts,\n        market?.quoteMintAddress,\n      ),\n      onSuccess: onSettleSuccess,\n    });\n  }\n\n  const columns = [\n    showMarket\n      ? {\n          title: 'Market',\n          dataIndex: 'marketName',\n          key: 'marketName',\n        }\n      : null,\n    {\n      title: 'Coin',\n      dataIndex: 'coin',\n      key: 'coin',\n    },\n    hideWalletBalance\n      ? null\n      : {\n          title: 'Wallet Balance',\n          dataIndex: 'wallet',\n          key: 'wallet',\n        },\n    {\n      title: 'Orders',\n      dataIndex: 'orders',\n      key: 'orders',\n    },\n    {\n      title: 'Unsettled',\n      dataIndex: 'unsettled',\n      key: 'unsettled',\n    },\n    {\n      key: 'action',\n      render: ({ market, openOrders, marketName }) => (\n        <div style={{ textAlign: 'right' }}>\n          <Button\n            ghost\n            style={{ marginRight: 12 }}\n            onClick={() => onSettleFunds(market, openOrders)}\n          >\n            Settle {marketName}\n          </Button>\n        </div>\n      ),\n    },\n  ].filter((x) => x);\n  return (\n    <DataTable\n      emptyLabel=\"No balances\"\n      dataSource={balances}\n      columns={columns}\n      pagination={false}\n    />\n  );\n}\n","import React, { useState } from 'react';\nimport DataTable from '../layout/DataTable';\n\nimport styled from 'styled-components';\nimport { Button, Row, Col, Tag } from 'antd';\nimport { cancelOrder } from '../../utils/send';\nimport { useWallet } from '../../utils/wallet';\nimport { useSendConnection } from '../../utils/connection';\nimport { notify } from '../../utils/notifications';\nimport { DeleteOutlined } from '@ant-design/icons';\n\nconst CancelButton = styled(Button)`\n  color: #f23b69;\n  border: 1px solid #f23b69;\n`;\n\nexport default function OpenOrderTable({ openOrders, onCancelSuccess }) {\n  let { wallet } = useWallet();\n  let connection = useSendConnection();\n\n  const [cancelId, setCancelId] = useState(null);\n\n  async function cancel(order) {\n    try {\n      await cancelOrder({\n        order,\n        market: order.market,\n        connection,\n        wallet,\n        onBeforeSendCallBack: () => setCancelId(order?.orderId),\n        onConfirmCallBack: () => {\n          setCancelId(null);\n          onCancelSuccess && onCancelSuccess();\n        },\n      });\n    } catch (e) {\n      notify({\n        message: 'Error cancelling order: ' + e.message,\n        type: 'error',\n      });\n      setCancelId(null);\n    }\n  }\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'marketName',\n      key: 'marketName',\n    },\n    {\n      title: 'Side',\n      dataIndex: 'side',\n      key: 'side',\n      render: (side) => (\n        <Tag\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\n          style={{ fontWeight: 700 }}\n        >\n          {side.charAt(0).toUpperCase() + side.slice(1)}\n        </Tag>\n      ),\n    },\n    {\n      title: 'Size',\n      dataIndex: 'size',\n      key: 'size',\n    },\n    {\n      title: 'Price',\n      dataIndex: 'price',\n      key: 'price',\n    },\n    {\n      key: 'orderId',\n      render: (order) => (\n        <div style={{ textAlign: 'right' }}>\n          <CancelButton\n            icon={<DeleteOutlined />}\n            onClick={() => cancel(order)}\n            loading={cancelId + '' === order?.orderId + ''}\n          >\n            Cancel\n          </CancelButton>\n        </div>\n      ),\n    },\n  ];\n  const dataSource = (openOrders || []).map((order) =>\n    Object.assign(order, { key: order.orderId }),\n  );\n\n  return (\n    <Row>\n      <Col span={24}>\n        <DataTable\n          emptyLabel=\"No open orders\"\n          dataSource={dataSource}\n          columns={columns}\n          pagination={true}\n          pageSize={5}\n        />\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react';\nimport { Row, Col, Tag } from 'antd';\nimport { useFills, useMarket } from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\n\nexport default function FillsTable() {\n  const fills = useFills();\n\n  const { quoteCurrency } = useMarket();\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'marketName',\n      key: 'marketName',\n    },\n    {\n      title: 'Side',\n      dataIndex: 'side',\n      key: 'side',\n      render: (side) => (\n        <Tag\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\n          style={{ fontWeight: 700 }}\n        >\n          {side.charAt(0).toUpperCase() + side.slice(1)}\n        </Tag>\n      ),\n    },\n    {\n      title: `Size`,\n      dataIndex: 'size',\n      key: 'size',\n    },\n    {\n      title: `Price`,\n      dataIndex: 'price',\n      key: 'price',\n    },\n    {\n      title: `Liquidity`,\n      dataIndex: 'liquidity',\n      key: 'liquidity',\n    },\n    {\n      title: quoteCurrency ? `Fees (${quoteCurrency})` : 'Fees',\n      dataIndex: 'feeCost',\n      key: 'feeCost',\n    },\n  ];\n\n  const dataSource = (fills || []).map((fill) => ({\n    ...fill,\n    key: `${fill.orderId}${fill.side}`,\n    liquidity: fill.eventFlags.maker ? 'Maker' : 'Taker',\n  }));\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <DataTable\n            dataSource={dataSource}\n            columns={columns}\n            pagination={true}\n            pageSize={5}\n            emptyLabel=\"No fills\"\n          />\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React from 'react';\nimport { Row, Col, Typography, Tag } from 'antd';\nimport { useFeeDiscountKeys } from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\nimport { TokenInstructions, getFeeRates } from '@project-serum/serum';\nimport { percentFormat } from '../../utils/utils';\n\nexport default function FeesTable() {\n  const [feeAccounts] = useFeeDiscountKeys();\n\n  const columns = [\n    {\n      title: 'Fee Tier',\n      dataIndex: 'feeTier',\n      key: 'feeTier',\n      render: (feeTier, row) => (\n        <div style={{ display: 'flex' }}>\n          <Typography>{feeTier}</Typography>\n          {row.index === 0 ? (\n            <div style={{ marginLeft: 10 }}>\n              <Tag color={'#41C77A'} style={{ fontWeight: 700 }}>\n                Selected\n              </Tag>\n            </div>\n          ) : null}\n        </div>\n      ),\n    },\n    {\n      title: 'Taker',\n      dataIndex: 'taker',\n      key: 'taker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).taker),\n    },\n    {\n      title: 'Maker',\n      dataIndex: 'maker',\n      key: 'maker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).maker),\n    },\n    {\n      title: `Public Key`,\n      dataIndex: 'pubkey',\n      key: 'pubkey',\n      render: (pubkey) => pubkey.toBase58(),\n    },\n    {\n      title: `Balance`,\n      dataIndex: 'balance',\n      key: 'balance',\n    },\n    {\n      title: `Mint`,\n      dataIndex: 'mint',\n      key: 'mint',\n      render: (_, row) =>\n        row.mint.equals(TokenInstructions.SRM_MINT)\n          ? 'SRM'\n          : row.mint.equals(TokenInstructions.MSRM_MINT)\n          ? 'MSRM'\n          : 'UNKNOWN',\n    },\n  ];\n\n  const dataSource = (feeAccounts || []).map((account, index) => ({\n    ...account,\n    index,\n    key: account.pubkey.toBase58(),\n  }));\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <DataTable\n            dataSource={dataSource}\n            columns={columns}\n            pagination={true}\n            pageSize={5}\n            emptyLabel=\"No (M)SRM accounts\"\n          />\n        </Col>\n      </Row>\n      <Row style={{ marginTop: 8 }}>\n        <Col>\n          <Typography>\n            Holding SRM or MSRM makes you eligible for fee discounts:\n          </Typography>\n          <FeeScheduleTable />\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nfunction FeeScheduleTable() {\n  // Representation of serum-js/src/fees.ts\n  const dataSource = [\n    { feeTier: 0, taker: 0.0022, maker: -0.0003, token: '', balance: '' },\n    { feeTier: 1, taker: 0.002, maker: -0.0003, token: 'SRM', balance: 100 },\n    { feeTier: 2, taker: 0.0018, maker: -0.0003, token: 'SRM', balance: 1000 },\n    { feeTier: 3, taker: 0.0016, maker: -0.0003, token: 'SRM', balance: 10000 },\n    {\n      feeTier: 4,\n      taker: 0.0014,\n      maker: -0.0003,\n      token: 'SRM',\n      balance: 100000,\n    },\n    {\n      feeTier: 5,\n      taker: 0.0012,\n      maker: -0.0003,\n      token: 'SRM',\n      balance: 1000000,\n    },\n    { feeTier: 6, taker: 0.001, maker: -0.0005, token: 'MSRM', balance: 1 },\n  ];\n  const columns = [\n    {\n      title: 'Fee Tier',\n      dataIndex: 'feeTier',\n      key: 'feeTier',\n    },\n    {\n      title: 'Taker',\n      dataIndex: 'taker',\n      key: 'taker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).taker),\n    },\n    {\n      title: 'Maker',\n      dataIndex: 'maker',\n      key: 'maker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).maker),\n    },\n    {\n      title: 'Requirements',\n      dataIndex: 'requirements',\n      key: 'requirements',\n      render: (_, row) => (\n        <Typography>\n          {!row.balance ? 'None' : `≥ ${row.balance} ${row.token}`}\n        </Typography>\n      ),\n    },\n  ];\n  return (\n    <DataTable\n      dataSource={dataSource.map((info) => ({ ...info, key: info.feeTier }))}\n      columns={columns}\n    />\n  );\n}\n","import BalancesTable from './BalancesTable';\nimport OpenOrderTable from './OpenOrderTable';\nimport React from 'react';\nimport { Tabs, Typography } from 'antd';\nimport FillsTable from './FillsTable';\nimport FloatingElement from '../layout/FloatingElement';\nimport FeesTable from './FeesTable';\nimport { useOpenOrders, useBalances, useMarket } from '../../utils/markets';\n\nconst { Paragraph } = Typography;\nconst { TabPane } = Tabs;\n\nexport default function Index() {\n  const { market } = useMarket();\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 20 }}>\n      <Typography>\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)' }}>\n          Make sure to go to Balances and click Settle to send out your funds.\n        </Paragraph>\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)' }}>\n          To fund your wallet, <a href=\"https://www.sollet.io\">sollet.io</a>.\n          You can get SOL from FTX, Binance, BitMax, and others. You can get\n          other tokens from FTX.{' '}\n        </Paragraph>\n      </Typography>\n      <Tabs defaultActiveKey=\"orders\">\n        <TabPane tab=\"Open Orders\" key=\"orders\">\n          <OpenOrdersTab />\n        </TabPane>\n        <TabPane tab=\"Recent Trade History\" key=\"fills\">\n          <FillsTable />\n        </TabPane>\n        <TabPane tab=\"Balances\" key=\"balances\">\n          <BalancesTab />\n        </TabPane>\n        {market && market.supportsSrmFeeDiscounts ? (\n          <TabPane tab=\"Fee discounts\" key=\"fees\">\n            <FeesTable />\n          </TabPane>\n        ) : null}\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\nconst OpenOrdersTab = () => {\n  const openOrders = useOpenOrders();\n\n  return <OpenOrderTable openOrders={openOrders} />;\n};\n\nconst BalancesTab = () => {\n  const balances = useBalances();\n\n  return <BalancesTable balances={balances} />;\n};\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nexport default function Link({ external = false, ...props }) {\n  let { to, children, ...rest } = props;\n  if (external) {\n    return (\n      <a href={to} target=\"_blank\" rel=\"noopener noreferrer\" {...rest}>\n        {children}\n      </a>\n    );\n  }\n  return (\n    <RouterLink to={to} {...rest}>\n      {children}\n    </RouterLink>\n  );\n}\n","import React from 'react';\nimport { Modal } from 'antd';\nimport {\n  useSelectedBaseCurrencyAccount,\n  useMarket,\n  useSelectedQuoteCurrencyAccount,\n} from '../utils/markets';\nimport { TOKEN_MINTS } from '@project-serum/serum';\nimport { useWallet } from '../utils/wallet';\nimport Link from './Link';\n\nexport default function DepositDialog({ onClose, depositCoin }) {\n  let coinMint =\n    depositCoin &&\n    TOKEN_MINTS.find(({ name }) => name === depositCoin)?.address;\n  const { market } = useMarket();\n  const { providerName, providerUrl } = useWallet();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  if (!coinMint) {\n    return null;\n  }\n\n  let account;\n  if (market?.baseMintAddress?.equals(coinMint)) {\n    account = baseCurrencyAccount;\n  } else if (market?.quoteMintAddress?.equals(coinMint)) {\n    account = quoteCurrencyAccount;\n  } else {\n    account = null;\n  }\n\n  return (\n    <Modal\n      title={depositCoin}\n      visible={!!coinMint}\n      onOk={onClose}\n      onCancel={onClose}\n    >\n      <div style={{ paddingTop: '20px' }}>\n        <p style={{ color: 'white' }}>Mint address:</p>\n        <p style={{ color: 'rgba(255,255,255,0.5)' }}>{coinMint.toBase58()}</p>\n        <div>\n          <p style={{ color: 'white' }}>Deposit address:</p>\n          <p style={{ color: 'rgba(255,255,255,0.5)' }}>\n            {account ? (\n              account.pubkey.toBase58()\n            ) : (\n              <>\n                Visit{' '}\n                <Link external to={providerUrl}>\n                  {providerName}\n                </Link>{' '}\n                to create an account for this mint\n              </>\n            )}\n          </p>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n","import { Button, Col, Divider, Row } from 'antd';\nimport React, { useState } from 'react';\nimport FloatingElement from './layout/FloatingElement';\nimport styled from 'styled-components';\nimport {\n  useBalances,\n  useMarket,\n  useSelectedBaseCurrencyAccount,\n  useSelectedOpenOrdersAccount,\n  useSelectedQuoteCurrencyAccount,\n} from '../utils/markets';\nimport DepositDialog from './DepositDialog';\nimport { useWallet } from '../utils/wallet';\nimport Link from './Link';\nimport { settleFunds } from '../utils/send';\nimport { useSendConnection } from '../utils/connection';\n\nconst RowBox = styled(Row)`\n  padding-bottom: 20px;\n`;\n\nconst Tip = styled.p`\n  font-size: 12px;\n  padding-top: 6px;\n`;\n\nconst ActionButton = styled(Button)`\n  color: #2abdd2;\n  background-color: #212734;\n  border-width: 0px;\n`;\n\nexport default function StandaloneBalancesDisplay() {\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const balances = useBalances();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const connection = useSendConnection();\n  const { providerUrl, providerName, wallet } = useWallet();\n  const [depositCoin, setDepositCoin] = useState('');\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const baseCurrencyBalances =\n    balances && balances.find((b) => b.coin === baseCurrency);\n  const quoteCurrencyBalances =\n    balances && balances.find((b) => b.coin === quoteCurrency);\n\n  async function onSettleFunds() {\n    return await settleFunds({\n      market,\n      openOrders: openOrdersAccount,\n      connection,\n      wallet,\n      baseCurrencyAccount,\n      quoteCurrencyAccount,\n    });\n  }\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      {[\n        [baseCurrency, baseCurrencyBalances],\n        [quoteCurrency, quoteCurrencyBalances],\n      ].map(([currency, balances], index) => (\n        <React.Fragment key={index}>\n          <Divider style={{ borderColor: 'white' }}>{currency}</Divider>\n          <RowBox\n            align=\"middle\"\n            justify=\"space-between\"\n            style={{ paddingBottom: 12 }}\n          >\n            <Col>Wallet balance:</Col>\n            <Col>{balances && balances.wallet}</Col>\n          </RowBox>\n          <RowBox\n            align=\"middle\"\n            justify=\"space-between\"\n            style={{ paddingBottom: 12 }}\n          >\n            <Col>Unsettled balance:</Col>\n            <Col>{balances && balances.unsettled}</Col>\n          </RowBox>\n          <RowBox align=\"middle\" justify=\"space-around\">\n            <Col style={{ width: 150 }}>\n              <ActionButton\n                block\n                size=\"large\"\n                onClick={() => setDepositCoin(currency)}\n              >\n                Deposit\n              </ActionButton>\n            </Col>\n            <Col style={{ width: 150 }}>\n              <ActionButton block size=\"large\" onClick={onSettleFunds}>\n                Settle\n              </ActionButton>\n            </Col>\n          </RowBox>\n          <Tip>\n            All deposits go to your{' '}\n            <Link external to={providerUrl}>\n              {providerName}\n            </Link>{' '}\n            wallet\n          </Tip>\n        </React.Fragment>\n      ))}\n      <DepositDialog\n        depositCoin={depositCoin}\n        onClose={() => setDepositCoin('')}\n      />\n    </FloatingElement>\n  );\n}\n","import { Button, Input, Radio, Switch, Slider } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport {\n  useBaseCurrencyBalances,\n  useQuoteCurrencyBalances,\n  useMarket,\n  useMarkPrice,\n  useSelectedOpenOrdersAccount,\n  useSelectedBaseCurrencyAccount,\n  useSelectedQuoteCurrencyAccount,\n} from '../utils/markets';\nimport { useWallet } from '../utils/wallet';\nimport { notify } from '../utils/notifications';\nimport {\n  getDecimalCount,\n  roundToDecimal,\n  floorToDecimal,\n} from '../utils/utils';\nimport { useSendConnection } from '../utils/connection';\nimport FloatingElement from './layout/FloatingElement';\nimport { placeOrder } from '../utils/send';\n\nconst SellButton = styled(Button)`\n  margin: 20px 0px 0px 0px;\n  background: #f23b69;\n  border-color: #f23b69;\n`;\n\nconst BuyButton = styled(Button)`\n  margin: 20px 0px 0px 0px;\n  background: #02bf76;\n  border-color: #02bf76;\n`;\n\nconst sliderMarks = {\n  0: '0%',\n  25: '25%',\n  50: '50%',\n  75: '75%',\n  100: '100%',\n};\n\nexport default function TradeForm({ style, setChangeOrderRef }) {\n  const [side, setSide] = useState('buy');\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const baseCurrencyBalances = useBaseCurrencyBalances();\n  const quoteCurrencyBalances = useQuoteCurrencyBalances();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const { wallet } = useWallet();\n  const sendConnection = useSendConnection();\n  const markPrice = useMarkPrice();\n\n  const [postOnly, setPostOnly] = useState(false);\n  const [ioc, setIoc] = useState(false);\n  const [baseSize, setBaseSize] = useState(null);\n  const [quoteSize, setQuoteSize] = useState(null);\n  const [price, setPrice] = useState(null);\n  const [submitting, setSubmitting] = useState(false);\n  const [sizeFraction, setSizeFraction] = useState(0);\n\n  const availableQuote = openOrdersAccount\n    ? market.quoteSplSizeToNumber(openOrdersAccount.quoteTokenFree)\n    : 0;\n\n  let quoteBalance = (quoteCurrencyBalances || 0) + (availableQuote || 0);\n  let baseBalance = baseCurrencyBalances || 0;\n  let sizeDecimalCount =\n    market?.minOrderSize && getDecimalCount(market.minOrderSize);\n  let priceDecimalCount = market?.tickSize && getDecimalCount(market.tickSize);\n\n  useEffect(() => {\n    setChangeOrderRef && setChangeOrderRef(doChangeOrder);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setChangeOrderRef]);\n\n  useEffect(() => {\n    baseSize && price && onSliderChange(sizeFraction);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [side]);\n\n  useEffect(() => {\n    updateSizeFraction();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [price, baseSize]);\n\n  const onSetBaseSize = (baseSize) => {\n    setBaseSize(baseSize);\n    const rawQuoteSize = baseSize * (price || markPrice);\n    const quoteSize =\n      baseSize && roundToDecimal(rawQuoteSize, sizeDecimalCount);\n    setQuoteSize(quoteSize);\n  };\n\n  const onSetQuoteSize = (quoteSize) => {\n    setQuoteSize(quoteSize);\n    const rawBaseSize = quoteSize / price;\n    const baseSize = quoteSize && roundToDecimal(rawBaseSize, sizeDecimalCount);\n    setBaseSize(baseSize);\n  };\n\n  const doChangeOrder = ({ size, price }) => {\n    const formattedSize = size && roundToDecimal(size, sizeDecimalCount);\n    const formattedPrice = price && roundToDecimal(price, priceDecimalCount);\n    formattedSize && onSetBaseSize(formattedSize);\n    formattedPrice && setPrice(formattedPrice);\n  };\n\n  const updateSizeFraction = () => {\n    const rawMaxSize = side === 'buy' ? quoteBalance / price : baseBalance;\n    const maxSize = floorToDecimal(rawMaxSize, sizeDecimalCount);\n    const sizeFraction = Math.min((baseSize / maxSize) * 100, 100);\n    setSizeFraction(sizeFraction);\n  };\n\n  const onSliderChange = (value) => {\n    if (!price && markPrice) {\n      let formattedMarkPrice = priceDecimalCount\n        ? markPrice.toFixed(priceDecimalCount)\n        : markPrice;\n      setPrice(formattedMarkPrice);\n    }\n\n    let newSize;\n    if (side === 'buy') {\n      if (price || markPrice) {\n        newSize = ((quoteBalance / (price || markPrice)) * value) / 100;\n      }\n    } else {\n      newSize = (baseBalance * value) / 100;\n    }\n\n    // round down to minOrderSize increment\n    let formatted = floorToDecimal(newSize, sizeDecimalCount);\n\n    onSetBaseSize(formatted);\n  };\n\n  const postOnChange = (checked) => {\n    if (checked) {\n      setIoc(false);\n    }\n    setPostOnly(checked);\n  };\n  const iocOnChange = (checked) => {\n    if (checked) {\n      setPostOnly(false);\n    }\n    setIoc(checked);\n  };\n\n  async function onSubmit() {\n    const parsedPrice = parseFloat(price);\n    const parsedSize = parseFloat(baseSize);\n\n    setSubmitting(true);\n    try {\n      await placeOrder({\n        side,\n        price: parsedPrice,\n        size: parsedSize,\n        orderType: ioc ? 'ioc' : postOnly ? 'postOnly' : 'limit',\n        market,\n        connection: sendConnection,\n        wallet,\n        baseCurrencyAccount: baseCurrencyAccount?.pubkey,\n        quoteCurrencyAccount: quoteCurrencyAccount?.pubkey,\n        onConfirmCallBack: () => {\n          setPrice(null);\n          onSetBaseSize(null);\n        },\n      });\n    } catch (e) {\n      console.warn(e);\n      notify({ message: 'Error placing order: ' + e.message, type: 'error' });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <FloatingElement\n      style={{ display: 'flex', flexDirection: 'column', ...style }}\n    >\n      <div style={{ flex: 1 }}>\n        <Radio.Group\n          onChange={(e) => setSide(e.target.value)}\n          value={side}\n          buttonStyle=\"solid\"\n          style={{\n            marginBottom: 8,\n            width: '100%',\n          }}\n        >\n          <Radio.Button\n            value=\"buy\"\n            style={{\n              width: '50%',\n              textAlign: 'center',\n              background: side === 'buy' ? '#02bf76' : '',\n              borderColor: side === 'buy' ? '#02bf76' : '',\n            }}\n          >\n            BUY\n          </Radio.Button>\n          <Radio.Button\n            value=\"sell\"\n            style={{\n              width: '50%',\n              textAlign: 'center',\n              background: side === 'sell' ? '#F23B69' : '',\n              borderColor: side === 'sell' ? '#F23B69' : '',\n            }}\n          >\n            SELL\n          </Radio.Button>\n        </Radio.Group>\n        <Input\n          style={{ textAlign: 'right', paddingBottom: 8 }}\n          addonBefore={<div style={{ width: '30px' }}>Price</div>}\n          suffix={\n            <span style={{ fontSize: 10, opacity: 0.5 }}>{quoteCurrency}</span>\n          }\n          value={price}\n          type=\"number\"\n          step={market?.tickSize || 1}\n          onChange={(e) => setPrice(e.target.value)}\n        />\n        <Input.Group compact style={{ paddingBottom: 8 }}>\n          <Input\n            style={{ width: 'calc(50% + 30px)', textAlign: 'right' }}\n            addonBefore={<div style={{ width: '30px' }}>Size</div>}\n            suffix={\n              <span style={{ fontSize: 10, opacity: 0.5 }}>{baseCurrency}</span>\n            }\n            value={baseSize}\n            type=\"number\"\n            step={market?.minOrderSize || 1}\n            onChange={(e) => onSetBaseSize(e.target.value)}\n          />\n          <Input\n            style={{ width: 'calc(50% - 30px)', textAlign: 'right' }}\n            suffix={\n              <span style={{ fontSize: 10, opacity: 0.5 }}>\n                {quoteCurrency}\n              </span>\n            }\n            value={quoteSize}\n            type=\"number\"\n            step={market?.minOrderSize || 1}\n            onChange={(e) => onSetQuoteSize(e.target.value)}\n          />\n        </Input.Group>\n        <Slider\n          value={sizeFraction}\n          tipFormatter={(value) => `${value}%`}\n          marks={sliderMarks}\n          onChange={onSliderChange}\n        />\n        <div style={{ paddingTop: 18 }}>\n          {'POST '}\n          <Switch\n            checked={postOnly}\n            onChange={postOnChange}\n            style={{ marginRight: 40 }}\n          />\n          {'IOC '}\n          <Switch checked={ioc} onChange={iocOnChange} />\n        </div>\n      </div>\n      {side === 'buy' ? (\n        <BuyButton\n          disabled={!price || !baseSize}\n          onClick={onSubmit}\n          block\n          type=\"primary\"\n          size=\"large\"\n          loading={submitting}\n        >\n          Buy {baseCurrency}\n        </BuyButton>\n      ) : (\n        <SellButton\n          disabled={!price || !baseSize}\n          onClick={onSubmit}\n          block\n          type=\"primary\"\n          size=\"large\"\n          loading={submitting}\n        >\n          Sell {baseCurrency}\n        </SellButton>\n      )}\n    </FloatingElement>\n  );\n}\n","import { Col, Row } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useMarket, useTrades } from '../utils/markets';\nimport { getDecimalCount } from '../utils/utils';\nimport FloatingElement from './layout/FloatingElement';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\nconst SizeTitle = styled(Row)`\n  padding: 20px 0 14px;\n  color: #434a59;\n`;\n\n// TODO: Put in some scrolling\nconst TradesContainer = styled.div`\n  height: calc(100% - 75px);\n  margin-right: -20px;\n  padding-right: 5px;\n  overflow-y: scroll;\n`;\n\nexport default function PublicTrades({ smallScreen }) {\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const trades = useTrades();\n  return (\n    <FloatingElement\n      style={\n        smallScreen\n          ? { flex: 1 }\n          : {\n              marginTop: '10px',\n              minHeight: '270px',\n              height: 'calc(100vh - 710px)',\n            }\n      }\n    >\n      <Title>Recent Market trades</Title>\n      <SizeTitle>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          Size ({baseCurrency})\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          Price ({quoteCurrency}){' '}\n        </Col>\n      </SizeTitle>\n      {!!trades && (\n        <TradesContainer>\n          {trades.map((trade, i) => (\n            <Row key={i} style={{ marginBottom: 4 }}>\n              <Col span={12} style={{ textAlign: 'left' }}>\n                {market?.minOrderSize && !isNaN(trade.size)\n                  ? Number(trade.size).toFixed(\n                      getDecimalCount(market.minOrderSize),\n                    )\n                  : trade.size}\n              </Col>\n              <Col\n                span={12}\n                style={{\n                  textAlign: 'right',\n                  color: trade.side === 'buy' ? '#41C77A' : '#F23B69',\n                }}\n              >\n                {market?.tickSize && !isNaN(trade.price)\n                  ? Number(trade.price).toFixed(\n                      getDecimalCount(market.tickSize),\n                    )\n                  : trade.price}\n              </Col>\n            </Row>\n          ))}\n        </TradesContainer>\n      )}\n    </FloatingElement>\n  );\n}\n","import React from 'react';\nimport { Button } from 'antd';\nimport { LinkOutlined } from '@ant-design/icons';\n\nexport default function LinkAddress({ title, address }) {\n  return (\n    <div>\n      {title && <p style={{ color: 'white' }}>{title}</p>}\n      <Button\n        type=\"link\"\n        icon={<LinkOutlined />}\n        href={'https://explorer.solana.com/address/' + address}\n        target=\"_blank\"\n      >\n        {address}\n      </Button>\n    </div>\n  );\n}\n","import { Button, Divider, Spin, Typography } from 'antd';\nimport React from 'react';\nimport {\n  useGetOpenOrdersForDeprecatedMarkets,\n  useBalancesForDeprecatedMarkets,\n  useUnmigratedOpenOrdersAccounts,\n} from '../utils/markets';\nimport FloatingElement from './layout/FloatingElement';\nimport CheckOutlined from '@ant-design/icons/lib/icons/CheckOutlined';\nimport BalancesTable from './UserInfoTable/BalancesTable';\nimport OpenOrderTable from './UserInfoTable/OpenOrderTable';\nimport SyncOutlined from '@ant-design/icons/lib/icons/SyncOutlined';\n\nconst { Title } = Typography;\n\nexport default function DeprecatedMarketsInstructions({ switchToLiveMarkets }) {\n  const balances = useBalancesForDeprecatedMarkets();\n  const {\n    openOrders,\n    loaded,\n    refreshOpenOrders,\n  } = useGetOpenOrdersForDeprecatedMarkets();\n\n  const { refresh } = useUnmigratedOpenOrdersAccounts();\n  const needToCancelOrders = !openOrders || openOrders.length > 0;\n  const filteredBalances =\n    balances &&\n    balances.filter(({ orders, unsettled }) => orders > 0 || unsettled > 0);\n  const needToSettleFunds = filteredBalances && filteredBalances.length > 0;\n  return (\n    <FloatingElement>\n      <Title level={4} style={{ color: 'rgba(255, 255, 255, 1)' }}>\n        Migrate to new markets\n      </Title>\n      <Typography>\n        Serum has rolled out upgraded markets! They're faster and support fee\n        discounts based on SRM holdings.\n      </Typography>\n      <br />\n      <Typography>\n        To migrate over to the new markets, please cancel your orders and settle\n        your funds on old markets.\n      </Typography>\n      <div style={{ marginTop: 20, display: 'flex', justifyContent: 'center' }}>\n        <Button onClick={() => refresh(true)}>\n          <SyncOutlined /> Refresh data\n        </Button>\n      </div>\n      {!balances ? (\n        <Spin size=\"large\" />\n      ) : (\n        <>\n          <Divider>\n            {!needToCancelOrders && <CheckOutlined />} Cancel your orders\n          </Divider>\n          {needToCancelOrders ? (\n            loaded ? (\n              <OpenOrderTable\n                openOrders={openOrders}\n                onCancelSuccess={() => {\n                  setTimeout(() => {\n                    refresh();\n                    refreshOpenOrders();\n                  }, 1000); // Wait so that on-chain account state reflects the update\n                }}\n              />\n            ) : (\n              <Spin size=\"large\" />\n            )\n          ) : null}\n          <Divider>\n            {!needToSettleFunds && <CheckOutlined />} Settle your funds\n          </Divider>\n          {needToSettleFunds && (\n            <BalancesTable\n              balances={filteredBalances}\n              hideWalletBalance\n              showMarket\n              onSettleSuccess={() => {\n                setTimeout(refresh, 1000); // Wait so that on-chain account state reflects the update\n              }}\n            />\n          )}\n          <Divider>Switch to upgraded markets</Divider>\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\n            <Button\n              onClick={switchToLiveMarkets}\n              disabled={needToSettleFunds || needToCancelOrders}\n            >\n              Switch to new markets\n            </Button>\n          </div>\n        </>\n      )}\n    </FloatingElement>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Modal, Input, Row, Col, Typography } from 'antd';\nimport { notify } from '../utils/notifications';\nimport { isValidPublicKey } from '../utils/utils';\nimport { PublicKey } from '@solana/web3.js';\nimport { Market, MARKETS, TOKEN_MINTS } from '@project-serum/serum';\nimport { useConnection } from '../utils/connection';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nconst { Text } = Typography;\n\nexport default function CustomMarketDialog({\n  visible,\n  onAddCustomMarket,\n  onClose,\n}) {\n  const connection = useConnection();\n  const [marketId, setMarketId] = useState(null);\n  const [programId, setProgramId] = useState(\n    MARKETS.find(({ deprecated }) => !deprecated)?.programId?.toBase58(),\n  );\n\n  const [marketLabel, setMarketLabel] = useState(null);\n  const [baseLabel, setBaseLabel] = useState(null);\n  const [quoteLabel, setQuoteLabel] = useState(null);\n\n  const [market, setMarket] = useState(null);\n  const [loadingMarket, setLoadingMarket] = useState(false);\n\n  const wellFormedMarketId = isValidPublicKey(marketId);\n  const wellFormedProgramId = isValidPublicKey(programId);\n\n  useEffect(() => {\n    if (!wellFormedMarketId || !wellFormedProgramId) {\n      resetLabels();\n      return;\n    }\n    setLoadingMarket(true);\n    Market.load(\n      connection,\n      new PublicKey(marketId),\n      {},\n      new PublicKey(programId),\n    )\n      .then((market) => {\n        setMarket(market);\n      })\n      .catch(() => {\n        resetLabels();\n        setMarket(null);\n      })\n      .finally(() => setLoadingMarket(false));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [connection, marketId, programId]);\n\n  const resetLabels = () => {\n    setMarketLabel(null);\n    setBaseLabel(null);\n    setQuoteLabel(null);\n  };\n\n  const knownMarket = MARKETS.find(\n    (m) =>\n      m.address.toBase58() === marketId && m.programId.toBase58() === programId,\n  );\n  const knownProgram = MARKETS.find(\n    (m) => m.programId.toBase58() === programId,\n  );\n  const knownBaseCurrency =\n    market?.baseMintAddress &&\n    TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\n      ?.name;\n\n  const knownQuoteCurrency =\n    market?.quoteMintAddress &&\n    TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\n      ?.name;\n\n  const canSubmit =\n    !loadingMarket &&\n    !!market &&\n    marketId &&\n    programId &&\n    marketLabel &&\n    (knownBaseCurrency || baseLabel) &&\n    (knownQuoteCurrency || quoteLabel) &&\n    wellFormedProgramId &&\n    wellFormedMarketId;\n\n  const onSubmit = () => {\n    if (!canSubmit) {\n      notify({\n        message: 'Please fill in all fields with valid values',\n        type: 'error',\n      });\n      return;\n    }\n\n    let params = {\n      address: marketId,\n      programId,\n      name: marketLabel,\n    };\n    if (!knownBaseCurrency) {\n      params.baseLabel = baseLabel;\n    }\n    if (!knownQuoteCurrency) {\n      params.quoteLabel = quoteLabel;\n    }\n    onAddCustomMarket(params);\n    onDoClose();\n  };\n\n  const onDoClose = () => {\n    resetLabels();\n    setMarket(null);\n    setMarketId(null);\n    setProgramId(null);\n    onClose();\n  };\n\n  return (\n    <Modal\n      title={'Add custom market'}\n      visible={visible}\n      onOk={onSubmit}\n      okText={'Add'}\n      onCancel={onDoClose}\n      okButtonProps={{ disabled: !canSubmit }}\n    >\n      <div>\n        {wellFormedMarketId && wellFormedProgramId ? (\n          <>\n            {!market && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">\n                  Not a valid market and program ID combination\n                </Text>\n              </Row>\n            )}\n            {market && knownMarket && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"warning\">Market known: {knownMarket.name}</Text>\n              </Row>\n            )}\n            {market && !knownProgram && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Warning: unknown DEX program</Text>\n              </Row>\n            )}\n            {market && knownProgram && knownProgram.deprecated && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"warning\">Warning: deprecated DEX program</Text>\n              </Row>\n            )}\n          </>\n        ) : (\n          <>\n            {marketId && !wellFormedMarketId && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Invalid market ID</Text>\n              </Row>\n            )}\n            {marketId && !wellFormedProgramId && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Invalid program ID</Text>\n              </Row>\n            )}\n          </>\n        )}\n        <Row style={{ marginBottom: 8 }}>\n          <Col span={24}>\n            <Input\n              placeholder=\"Market Id\"\n              value={marketId}\n              onChange={(e) => setMarketId(e.target.value)}\n              suffix={loadingMarket ? <LoadingOutlined /> : null}\n            />\n          </Col>\n        </Row>\n\n        {programId && !isValidPublicKey(programId) && (\n          <Row style={{ marginBottom: 8 }}>\n            <Text type=\"danger\">Invalid program ID</Text>\n          </Row>\n        )}\n        <Row style={{ marginBottom: 8 }}>\n          <Col span={24}>\n            <Input\n              placeholder=\"Program Id\"\n              value={programId}\n              onChange={(e) => setProgramId(e.target.value)}\n            />\n          </Col>\n        </Row>\n        <Row style={{ marginBottom: 8, marginTop: 8 }}>\n          <Col span={24}>\n            <Input\n              placeholder=\"Market Label\"\n              disabled={!market}\n              value={marketLabel}\n              onChange={(e) => setMarketLabel(e.target.value)}\n            />\n          </Col>\n        </Row>\n        <Row gutter={[8]} style={{ marginBottom: 8 }}>\n          <Col span={12}>\n            <Input\n              placeholder=\"Base label\"\n              disabled={!market || knownBaseCurrency}\n              value={knownBaseCurrency || baseLabel}\n              onChange={(e) => setBaseLabel(e.target.value)}\n            />\n            {market && !knownBaseCurrency && (\n              <div style={{ marginTop: 8 }}>\n                <Text type=\"warning\">Warning: unknown token</Text>\n              </div>\n            )}\n          </Col>\n          <Col span={12}>\n            <Input\n              placeholder=\"Quote label\"\n              disabled={!market || knownQuoteCurrency}\n              value={knownQuoteCurrency || quoteLabel}\n              onChange={(e) => setQuoteLabel(e.target.value)}\n            />\n            {market && !knownQuoteCurrency && (\n              <div style={{ marginTop: 8 }}>\n                <Text type=\"warning\">Warning: unknown token</Text>\n              </div>\n            )}\n          </Col>\n        </Row>\n      </div>\n    </Modal>\n  );\n}\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Col, Popover, Row, Select, Typography, Button } from 'antd';\nimport styled from 'styled-components';\nimport Orderbook from '../components/Orderbook';\nimport UserInfoTable from '../components/UserInfoTable';\nimport StandaloneBalancesDisplay from '../components/StandaloneBalancesDisplay';\nimport {\n  useMarket,\n  useMarketsList,\n  useUnmigratedDeprecatedMarkets,\n  getMarketInfos,\n} from '../utils/markets';\nimport TradeForm from '../components/TradeForm';\nimport TradesTable from '../components/TradesTable';\nimport LinkAddress from '../components/LinkAddress';\nimport DeprecatedMarketsInstructions from '../components/DeprecatedMarketsInstructions';\nimport {\n  InfoCircleOutlined,\n  PlusCircleOutlined,\n  DeleteOutlined,\n} from '@ant-design/icons';\nimport CustomMarketDialog from '../components/CustomMarketDialog';\nimport { notify } from '../utils/notifications';\n\nconst { Option, OptGroup } = Select;\n\nconst Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 16px 16px;\n  .borderNone .ant-select-selector {\n    border: none !important;\n  }\n`;\n\nexport default function TradePage() {\n  const {\n    market,\n    marketName,\n    customMarkets,\n    setCustomMarkets,\n    setMarketAddress,\n  } = useMarket();\n  const markets = useMarketsList();\n  const [handleDeprecated, setHandleDeprecated] = useState(false);\n  const [addMarketVisible, setAddMarketVisible] = useState(false);\n  const deprecatedMarkets = useUnmigratedDeprecatedMarkets();\n  const [dimensions, setDimensions] = useState({\n    height: window.innerHeight,\n    width: window.innerWidth,\n  });\n\n  useEffect(() => {\n    document.title = marketName ? `${marketName} — Serum` : 'Serum';\n  }, [marketName]);\n\n  const changeOrderRef = useRef();\n\n  useEffect(() => {\n    const handleResize = () => {\n      setDimensions({\n        height: window.innerHeight,\n        width: window.innerWidth,\n      });\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const width = dimensions?.width;\n  const componentProps = {\n    onChangeOrderRef: (ref) => (changeOrderRef.current = ref),\n    onPrice: useCallback(\n      (price) => changeOrderRef.current && changeOrderRef.current({ price }),\n      [],\n    ),\n    onSize: useCallback(\n      (size) => changeOrderRef.current && changeOrderRef.current({ size }),\n      [],\n    ),\n  };\n  const getComponent = useCallback(() => {\n    if (handleDeprecated) {\n      return (\n        <DeprecatedMarketsPage\n          switchToLiveMarkets={() => setHandleDeprecated(false)}\n        />\n      );\n    } else if (width < 1000) {\n      return <RenderSmaller {...componentProps} />;\n    } else if (width < 1450) {\n      return <RenderSmall {...componentProps} />;\n    } else {\n      return <RenderNormal {...componentProps} />;\n    }\n  }, [width, componentProps, handleDeprecated]);\n\n  const onAddCustomMarket = (customMarket) => {\n    const marketInfo = getMarketInfos(customMarkets).some(\n      (m) => m.address.toBase58() === customMarket.address,\n    );\n    if (marketInfo) {\n      notify({\n        message: `A market with the given ID already exists`,\n        type: 'error',\n      });\n      return;\n    }\n    const newCustomMarkets = [...customMarkets, customMarket];\n    setCustomMarkets(newCustomMarkets);\n    setMarketAddress(customMarket.address);\n  };\n\n  const onDeleteCustomMarket = (address) => {\n    const newCustomMarkets = customMarkets.filter((m) => m.address !== address);\n    setCustomMarkets(newCustomMarkets);\n  };\n\n  return (\n    <>\n      <CustomMarketDialog\n        visible={addMarketVisible}\n        onClose={() => setAddMarketVisible(false)}\n        onAddCustomMarket={onAddCustomMarket}\n      />\n      <Wrapper>\n        <Row\n          align=\"middle\"\n          style={{ paddingLeft: 5, paddingRight: 5 }}\n          gutter={16}\n        >\n          <Col>\n            <MarketSelector\n              markets={markets}\n              setHandleDeprecated={setHandleDeprecated}\n              placeholder={'Select market'}\n              customMarkets={customMarkets}\n              onDeleteCustomMarket={onDeleteCustomMarket}\n            />\n          </Col>\n          {market ? (\n            <Col>\n              <Popover\n                content={<LinkAddress address={market.publicKey.toBase58()} />}\n                placement=\"bottomRight\"\n                title=\"Market address\"\n                trigger=\"click\"\n              >\n                <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n              </Popover>\n            </Col>\n          ) : null}\n          <Col>\n            <PlusCircleOutlined\n              style={{ color: '#2abdd2' }}\n              onClick={() => setAddMarketVisible(true)}\n            />\n          </Col>\n          {deprecatedMarkets && deprecatedMarkets.length > 0 && (\n            <React.Fragment>\n              <Col>\n                <Typography>\n                  You have unsettled funds on old markets! Please go through\n                  them to claim your funds.\n                </Typography>\n              </Col>\n              <Col>\n                <Button onClick={() => setHandleDeprecated(!handleDeprecated)}>\n                  {handleDeprecated ? 'View new markets' : 'Handle old markets'}\n                </Button>\n              </Col>\n            </React.Fragment>\n          )}\n        </Row>\n        {getComponent()}\n      </Wrapper>\n    </>\n  );\n}\n\nfunction MarketSelector({\n  markets,\n  placeholder,\n  setHandleDeprecated,\n  customMarkets,\n  onDeleteCustomMarket,\n}) {\n  const { market, setMarketAddress } = useMarket();\n\n  const onSetMarketAddress = (marketAddress) => {\n    setHandleDeprecated(false);\n    setMarketAddress(marketAddress);\n  };\n\n  const extractBase = (a) => a.split('/')[0];\n  const extractQuote = (a) => a.split('/')[1];\n\n  const selectedMarket = getMarketInfos(customMarkets)\n    .find(\n      (proposedMarket) =>\n        market?.address && proposedMarket.address.equals(market.address),\n    )\n    ?.address?.toBase58();\n\n  return (\n    <Select\n      showSearch\n      size={'large'}\n      style={{ width: 200 }}\n      placeholder={placeholder || 'Select a market'}\n      optionFilterProp=\"name\"\n      onSelect={onSetMarketAddress}\n      listHeight={400}\n      value={selectedMarket}\n      filterOption={(input, option) =>\n        option.name?.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      }\n    >\n      {customMarkets && customMarkets.length > 0 && (\n        <OptGroup label=\"Custom\">\n          {customMarkets.map(({ address, name }, i) => (\n            <Option\n              value={address}\n              key={address}\n              name={name}\n              style={{\n                padding: '10px',\n                backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\n              }}\n            >\n              <Row>\n                <Col flex=\"auto\">{name}</Col>\n                {selectedMarket !== address && (\n                  <Col>\n                    <DeleteOutlined\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        e.nativeEvent.stopImmediatePropagation();\n                        onDeleteCustomMarket && onDeleteCustomMarket(address);\n                      }}\n                    />\n                  </Col>\n                )}\n              </Row>\n            </Option>\n          ))}\n        </OptGroup>\n      )}\n      <OptGroup label=\"Markets\">\n        {markets\n          .sort((a, b) =>\n            extractQuote(a.name) === 'USDT' && extractQuote(b.name) !== 'USDT'\n              ? -1\n              : extractQuote(a.name) !== 'USDT' &&\n                extractQuote(b.name) === 'USDT'\n              ? 1\n              : 0,\n          )\n          .sort((a, b) =>\n            extractBase(a.name) < extractBase(b.name)\n              ? -1\n              : extractBase(a.name) > extractBase(b.name)\n              ? 1\n              : 0,\n          )\n          .map(({ address, name, deprecated }, i) => (\n            <Option\n              value={address.toBase58()}\n              key={address}\n              name={name}\n              style={{\n                padding: '10px',\n                backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\n              }}\n            >\n              {name} {deprecated ? ' (Deprecated)' : null}\n            </Option>\n          ))}\n      </OptGroup>\n    </Select>\n  );\n}\n\nconst DeprecatedMarketsPage = ({ switchToLiveMarkets }) => {\n  return (\n    <>\n      <Row>\n        <Col flex=\"auto\">\n          <DeprecatedMarketsInstructions\n            switchToLiveMarkets={switchToLiveMarkets}\n          />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst RenderNormal = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <Row\n      style={{\n        minHeight: '800px',\n        flexWrap: 'nowrap',\n      }}\n    >\n      <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n        <UserInfoTable />\n      </Col>\n      <Col flex={'360px'} style={{ height: '100%' }}>\n        <Orderbook smallScreen={false} onPrice={onPrice} onSize={onSize} />\n        <TradesTable smallScreen={false} />\n      </Col>\n      <Col\n        flex=\"400px\"\n        style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n      >\n        <TradeForm setChangeOrderRef={onChangeOrderRef} />\n        <StandaloneBalancesDisplay />\n      </Col>\n    </Row>\n  );\n};\n\nconst RenderSmall = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <>\n      <Row\n        style={{\n          height: '800px',\n        }}\n      >\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n          <Orderbook\n            smallScreen={true}\n            depth={13}\n            onPrice={onPrice}\n            onSize={onSize}\n          />\n        </Col>\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n          <TradesTable smallScreen={true} />\n        </Col>\n        <Col\n          flex=\"400px\"\n          style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n        >\n          <TradeForm setChangeOrderRef={onChangeOrderRef} />\n          <StandaloneBalancesDisplay />\n        </Col>\n      </Row>\n      <Row>\n        <Col flex=\"auto\">\n          <UserInfoTable />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst RenderSmaller = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <>\n      <Row>\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <TradeForm style={{ flex: 1 }} setChangeOrderRef={onChangeOrderRef} />\n        </Col>\n        <Col xs={24} sm={12}>\n          <StandaloneBalancesDisplay />\n        </Col>\n      </Row>\n      <Row\n        style={{\n          height: '500px',\n        }}\n      >\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <Orderbook smallScreen={true} onPrice={onPrice} onSize={onSize} />\n        </Col>\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <TradesTable smallScreen={true} />\n        </Col>\n      </Row>\n      <Row>\n        <Col flex=\"auto\">\n          <UserInfoTable />\n        </Col>\n      </Row>\n    </>\n  );\n};\n","import React from 'react';\nimport { useOpenOrdersForAllMarkets } from '../utils/markets';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport OpenOrderTable from '../components/UserInfoTable/OpenOrderTable';\n\nexport default function OpenOrdersPage() {\n  const [openOrders] = useOpenOrdersForAllMarkets();\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <OpenOrderTable openOrders={openOrders} />\n    </FloatingElement>\n  );\n}\n","import React from 'react';\nimport DataTable from '../layout/DataTable';\n\nexport default function WalletBalancesTable({\n  loaded = false,\n  walletBalances,\n}) {\n  const columns = [\n    {\n      title: 'Coin',\n      dataIndex: 'key',\n      key: 'key',\n    },\n    {\n      title: 'Wallet Balance',\n      dataIndex: 'wallet',\n      key: 'wallet',\n    },\n  ];\n  return (\n    <DataTable\n      emptyLabel=\"No balances\"\n      dataSource={walletBalances}\n      columns={columns}\n      pagination={false}\n      loading={!loaded}\n    />\n  );\n}\n","import { Button } from 'antd';\nimport React from 'react';\nimport DataTable from '../layout/DataTable';\nimport { useConnection } from '../../utils/connection';\nimport { useWallet } from '../../utils/wallet';\nimport { settleFunds } from '../../utils/send';\n\nexport default function AccountsTable({ accountBalances }) {\n  const connection = useConnection();\n  const { wallet } = useWallet();\n\n  async function onSettleFunds(account) {\n    const {\n      market,\n      openOrdersAccount,\n      baseCurrencyAccount,\n      quoteCurrencyAccount,\n    } = account;\n    return await settleFunds({\n      market,\n      openOrders: openOrdersAccount,\n      connection,\n      wallet,\n      baseCurrencyAccount,\n      quoteCurrencyAccount,\n    });\n  }\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'key',\n      key: 'key',\n    },\n    {\n      title: 'Orders',\n      dataIndex: 'orders',\n      key: 'orders',\n    },\n    {\n      title: 'Unsettled',\n      dataIndex: 'unsettled',\n      key: 'unsettled',\n    },\n    {\n      key: 'action',\n      render: (account) => (\n        <div style={{ textAlign: 'right' }}>\n          <Button\n            ghost\n            style={{ marginRight: 12 }}\n            onClick={() => onSettleFunds(account)}\n          >\n            Settle\n          </Button>\n        </div>\n      ),\n    },\n  ];\n  return (\n    <DataTable\n      emptyLabel=\"No balances\"\n      dataSource={accountBalances}\n      columns={columns.map((data) => ({\n        ...data,\n        key: `${data.market}${data.coin}`,\n      }))}\n      pagination={false}\n    />\n  );\n}\n","import React from 'react';\nimport { Tabs } from 'antd';\nimport {\n  useWalletBalancesForAllMarkets,\n  useOpenOrderAccountBalancesForAllMarkets,\n} from '../utils/markets';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport WalletBalancesTable from '../components/UserInfoTable/WalletBalancesTable';\nimport AccountsTable from '../components/UserInfoTable/AccountsTable';\n\nconst { TabPane } = Tabs;\n\nexport default function BalancesPage() {\n  const [\n    walletBalances,\n    loadedWalletBalances,\n  ] = useWalletBalancesForAllMarkets();\n  const [\n    accountBalances,\n    accountBalancesLoaded,\n  ] = useOpenOrderAccountBalancesForAllMarkets();\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <Tabs defaultActiveKey=\"walletBalances\">\n        <TabPane tab=\"Wallet Balances\" key=\"walletBalances\">\n          <WalletBalancesTable\n            loaded={loadedWalletBalances}\n            walletBalances={walletBalances}\n          />\n        </TabPane>\n        <TabPane tab=\"Market balances\" key=\"marketBalances\">\n          <AccountsTable\n            loaded={accountBalancesLoaded}\n            accountBalances={accountBalances}\n          />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n","import { InfoCircleOutlined, UserOutlined } from '@ant-design/icons';\nimport { Button, Menu, Popover, Select } from 'antd';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport logo from '../assets/logo.svg';\nimport styled from 'styled-components';\nimport { useWallet, WALLET_PROVIDERS } from '../utils/wallet';\nimport { ENDPOINTS, useConnectionConfig } from '../utils/connection';\nimport LinkAddress from './LinkAddress';\n\nconst Wrapper = styled.div`\n  background-color: #0d1017;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  padding: 0px 30px;\n  flex-wrap: wrap;\n`;\nconst LogoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  color: #2abdd2;\n  font-weight: bold;\n  cursor: pointer;\n  img {\n    height: 30px;\n    margin-right: 8px;\n  }\n`;\n\nexport default function TopBar() {\n  const [current, setCurrent] = useState('/');\n  const { connected, wallet, providerUrl, setProvider } = useWallet();\n  const { endpoint, setEndpoint } = useConnectionConfig();\n  const location = useLocation();\n  const history = useHistory();\n\n  const publicKey = wallet?.publicKey?.toBase58();\n\n  const handleClick = useCallback(\n    (e) => {\n      history.push(e.key);\n    },\n    [history],\n  );\n\n  useEffect(() => {\n    if (location.pathname.includes('/orders')) {\n      setCurrent('/orders');\n    } else if (location.pathname.includes('/balances')) {\n      setCurrent('/balances');\n    }\n  }, [location]);\n\n  return (\n    <Wrapper>\n      <LogoWrapper>\n        <img src={logo} alt=\"\" />\n        {'SERUM'}\n      </LogoWrapper>\n      <Menu\n        mode=\"horizontal\"\n        onClick={handleClick}\n        selectedKeys={[current]}\n        style={{\n          borderBottom: 'none',\n          backgroundColor: 'transparent',\n          display: 'flex',\n          alignItems: 'flex-end',\n          flex: 1,\n        }}\n      >\n        <Menu.Item key=\"/\">TRADE</Menu.Item>\n      </Menu>\n      <div>\n        <Select\n          onSelect={setEndpoint}\n          value={endpoint}\n          style={{ marginRight: 8 }}\n        >\n          {ENDPOINTS.map(({ name, endpoint }) => (\n            <Select.Option value={endpoint} key={endpoint}>\n              {name}\n            </Select.Option>\n          ))}\n        </Select>\n      </div>\n      <div>\n        <Select onSelect={setProvider} value={providerUrl}>\n          {WALLET_PROVIDERS.map(({ name, url }) => (\n            <Select.Option value={url} key={url}>\n              {name}\n            </Select.Option>\n          ))}\n        </Select>\n      </div>\n      <div>\n        <Button\n          type=\"text\"\n          size=\"large\"\n          onClick={connected ? wallet.disconnect : wallet.connect}\n          style={{ color: '#2abdd2' }}\n        >\n          <UserOutlined />\n          {!connected ? 'Connect wallet' : 'Disconnect'}\n        </Button>\n        {connected && (\n          <Popover\n            content={<LinkAddress address={publicKey} />}\n            placement=\"bottomRight\"\n            title=\"Wallet public key\"\n            trigger=\"click\"\n          >\n            <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n          </Popover>\n        )}\n      </div>\n    </Wrapper>\n  );\n}\n","export const helpUrls = {\n  customerSupport: 'https://t.me/ProjectSerum',\n  customerSupportZh: 'https://t.me/ProjectSerum_Chinese',\n  contactEmail: 'mailto:contact@projectserum.com',\n  discord: 'https://discord.gg/MxZFT4v',\n  telegram: 'https://t.me/ProjectSerum',\n  github: 'https://github.com/project-serum',\n  projectSerum: 'https://projectserum.com/',\n  developerResources: 'https://projectserum.com/developer-resources',\n  solanaBeach: 'https://solanabeach.io',\n};\n","import React from 'react';\nimport { Layout, Row, Col, Grid } from 'antd';\nimport Link from './Link';\nimport { helpUrls } from './HelpUrls';\nconst { Footer } = Layout;\nconst { useBreakpoint } = Grid;\n\nconst footerElements = [\n  {\n    description: 'Serum Developer Resources',\n    link: helpUrls.developerResources,\n  },\n  { description: 'Discord', link: helpUrls.discord },\n  { description: 'Telegram', link: helpUrls.telegram },\n  { description: 'GitHub', link: helpUrls.github },\n  { description: 'Project Serum', link: helpUrls.projectSerum },\n  { description: 'Solana Network', link: helpUrls.solanaBeach },\n];\n\nexport const CustomFooter = () => {\n  const smallScreen = !useBreakpoint().lg;\n\n  return (\n    <Footer\n      style={{\n        height: '45px',\n        paddingBottom: 10,\n        paddingTop: 10,\n      }}\n    >\n      <Row align=\"middle\" gutter={[16, 4]}>\n        {!smallScreen && (\n          <>\n            <Col flex=\"auto\" />\n            {footerElements.map((elem, index) => {\n              return (\n                <Col key={index + ''}>\n                  <Link external to={elem.link}>\n                    {elem.description}\n                  </Link>\n                </Col>\n              );\n            })}\n          </>\n        )}\n        <Col flex=\"auto\">{/*  <DexProgramSelector />*/}</Col>\n      </Row>\n    </Footer>\n  );\n};\n","import { Layout } from 'antd';\nimport React from 'react';\nimport TopBar from './TopBar';\nimport { CustomFooter as Footer } from './Footer';\nconst { Header, Content } = Layout;\n\nexport default function BasicLayout({ children }) {\n  return (\n    <React.Fragment>\n      <Layout\n        style={{ display: 'flex', minHeight: '100vh', flexDirection: 'column' }}\n      >\n        <Header style={{ padding: 0, minHeight: 64, height: 'unset' }}>\n          <TopBar />\n        </Header>\n        <Content style={{ flex: 1 }}>{children}</Content>\n        <Footer />\n      </Layout>\n    </React.Fragment>\n  );\n}\n","import { HashRouter, Route } from 'react-router-dom';\nimport TradePage from './pages/TradePage';\nimport OpenOrdersPage from './pages/OpenOrdersPage';\nimport React from 'react';\nimport BalancesPage from './pages/BalancesPage';\nimport BasicLayout from './components/BasicLayout';\n\nexport function Routes() {\n  return (\n    <HashRouter basename={'/'}>\n      <Route exact path=\"/\" component={TradePageContents} />\n      <Route exact path=\"/orders\" component={OpenOrdersPageContents} />\n      <Route exact path=\"/balances\" component={BalancesPageContents} />\n    </HashRouter>\n  );\n}\n\nfunction TradePageContents() {\n  return (\n    <BasicLayout>\n      <TradePage />\n    </BasicLayout>\n  );\n}\n\nfunction OpenOrdersPageContents() {\n  return (\n    <BasicLayout>\n      <OpenOrdersPage />\n    </BasicLayout>\n  );\n}\n\nfunction BalancesPageContents() {\n  return (\n    <BasicLayout>\n      <BalancesPage />\n    </BasicLayout>\n  );\n}\n","import React, { Suspense } from 'react';\nimport './App.less';\nimport { ConnectionProvider } from './utils/connection';\nimport { MarketProvider } from './utils/markets';\nimport { WalletProvider } from './utils/wallet';\nimport { GlobalStyle } from './global_style';\nimport { Spin } from 'antd';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { Routes } from './routes';\n\nexport default function App() {\n  return (\n    <Suspense fallback={() => <Spin size=\"large\" />}>\n      <GlobalStyle />\n      <ErrorBoundary>\n        <ConnectionProvider>\n          <MarketProvider>\n            <WalletProvider>\n              <Suspense fallback={() => <Spin size=\"large\" />}>\n                <Routes />\n              </Suspense>\n            </WalletProvider>\n          </MarketProvider>\n        </ConnectionProvider>\n      </ErrorBoundary>\n    </Suspense>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}