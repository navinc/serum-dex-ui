{"version":3,"sources":["assets/logo.svg","utils/utils.js","utils/notifications.js","utils/fetch-loop.js","utils/connection.js","utils/wallet.js","utils/tokens.js","utils/markets.js","global_style.ts","components/ErrorBoundary.jsx","components/layout/FloatingElement.jsx","components/Orderbook.jsx","utils/useInterval.js","utils/usePrevious.js","components/layout/DataTable.jsx","components/UserInfoTable/BalancesTable.jsx","components/UserInfoTable/OpenOrderTable.jsx","components/UserInfoTable/FillsTable.jsx","components/UserInfoTable/FeesTable.js","components/UserInfoTable/index.jsx","components/DepositDialog.jsx","components/StandaloneBalancesDisplay.jsx","components/TradeForm.jsx","components/TradesTable.jsx","components/LinkAddress.jsx","components/DeprecatedMarketsInstructions.js","components/CustomMarketDialog.jsx","pages/TradePage.jsx","pages/OpenOrdersPage.jsx","components/UserInfoTable/WalletBalancesTable.jsx","components/UserInfoTable/AccountsTable.jsx","pages/BalancesPage.jsx","components/TopBar.js","components/HelpUrls.js","components/Footer.jsx","components/BasicLayout.js","pages/ListNewMarketPage.jsx","routes.js","App.js","serviceWorker.js","index.js","utils/send.js","components/Link.js"],"names":["module","exports","isValidPublicKey","key","PublicKey","sleep","ms","a","Promise","resolve","setTimeout","percentFormat","Intl","NumberFormat","undefined","style","minimumFractionDigits","maximumFractionDigits","floorToDecimal","value","decimals","Math","floor","roundToDecimal","round","getDecimalCount","isNaN","toString","split","length","useLocalStorageState","defaultState","useState","storedState","localStorage","getItem","JSON","parse","state","setState","setLocalStorageState","useCallback","newState","removeItem","setItem","stringify","isEqual","obj1","obj2","keys","Object","k","notify","message","description","txid","type","placement","external","to","color","slice","notification","opacity","backgroundColor","pageLoadTime","Date","globalCache","Map","FetchLoopListener","cacheKey","fn","refreshInterval","refreshIntervalOnError","callback","this","FetchLoopInternal","refresh","timeoutId","clearTimeout","stopped","errored","data","set","errors","notifyListeners","console","warn","waitTime","min","timeSincePageLoad","document","visibilityState","hasFocus","random","listeners","Set","listener","previousRefreshInterval","add","assert","delete","forEach","map","filter","x","size","globalLoops","loops","has","get","addListener","loop","removeListener","all","values","useAsyncData","asyncFn","useReducer","i","rerender","useEffect","loaded","refreshCache","clearCache","ENDPOINTS","name","endpoint","clusterApiUrl","accountListenerCount","ConnectionContext","React","createContext","ConnectionProvider","children","setEndpoint","connection","useMemo","Connection","sendConnection","id","onAccountChange","Account","publicKey","removeAccountChangeListener","onSlotChange","removeSlotChangeListener","Provider","useConnection","useContext","useSendConnection","useConnectionConfig","context","useAccountInfo","tuple","toBase58","getAccountInfo","accountInfo","count","previousData","subscriptionId","e","equals","initializeOnly","setCache","currentItem","useAccountData","WALLET_PROVIDERS","url","WalletContext","WalletProvider","providerUrl","setProviderUrl","wallet","Wallet","connected","setConnected","log","on","walletPublicKey","keyToDisplay","substring","disconnect","providerName","find","useWallet","setProvider","ACCOUNT_LAYOUT","BufferLayout","MINT_LAYOUT","parseTokenAccountData","decode","mint","owner","amount","getOwnedAccountsFilters","memcmp","offset","offsetOf","bytes","dataSize","span","TOKEN_PROGRAM_ID","getOwnedTokenAccounts","filters","_rpcRequest","commitment","resp","error","Error","result","pubkey","account","executable","lamports","bs58","every","filterBytes","getTokenAccountInfo","ownerAddress","splAccounts","parsedSplAccounts","effectiveMint","concat","WRAPPED_SOL_MINT","USE_MARKETS","MARKETS","useAllMarkets","markets","setMarkets","marketInfo","Market","load","address","programId","market","push","marketName","getAllMarkets","useUnmigratedOpenOrdersAccounts","deprecatedOpenOrdersAccounts","deprecatedProgramIds","Array","from","deprecated","publicKeyStr","OpenOrders","findForOwner","openOrdersAccounts","openOrders","baseTokenTotal","toNumber","quoteTokenTotal","some","_VERY_SLOW_REFRESH_INTERVAL","accounts","MarketContext","DEFAULT_MARKET","getMarketDetails","customMarkets","getMarketInfos","otherMarket","baseCurrency","baseMintAddress","TOKEN_MINTS","token","baseLabel","quoteCurrency","quoteMintAddress","quoteLabel","MarketProvider","marketAddress","setMarketAddress","setCustomMarkets","setMarket","_decoded","ownAddress","then","catch","useMarket","useMarkPrice","markPrice","setMarkPrice","useOrderbook","orderbook","trades","useTrades","bb","bids","Number","ba","asks","last","price","sort","b","_useUnfilteredTrades","limit","getUnfilteredTrades","loadFills","useOrderbookAccounts","bidData","askData","bidOrderbook","Orderbook","askOrderbook","depth","getL2","useOpenOrdersAccounts","fast","getOpenOrdersAccounts","findOpenOrdersAccountsForOwner","useSelectedOpenOrdersAccount","useTokenAccounts","getSelectedTokenAccountForMint","filtered","useSelectedQuoteCurrencyAccount","useSelectedBaseCurrencyAccount","useQuoteCurrencyBalances","quoteCurrencyAccount","TokenInstructions","quoteSplSizeToNumber","BN","useBaseCurrencyBalances","baseCurrencyAccount","baseSplSizeToNumber","eventFlags","maker","trade","side","useBalances","baseCurrencyBalances","quoteCurrencyBalances","baseExists","baseTokenFree","quoteExists","quoteTokenFree","coin","orders","sub","unsettled","getCurrencyBalance","findBaseTokenAccountsForOwner","findQuoteTokenAccountsForOwner","currencyAccounts","currencyAccount","getTokenAccountBalance","tokenAccountBalances","uiAmount","useUnmigratedDeprecatedMarkets","marketsList","deps","m","getMarket","openOrdersList","customMarketsInfo","GlobalStyle","createGlobalStyle","Title","Typography","ErrorBoundary","hasError","level","props","Component","Wrapper","styled","div","FloatingElement","SizeTitle","Row","MarkPriceTitle","Line","css","Price","smallScreen","onPrice","onSize","currentOrderbookData","useRef","lastOrderbookData","orderbookData","setOrderbookData","getCumulativeOrderbookSide","totalSize","backwards","cumulative","reduce","cumulativeSize","sizePercent","reverse","delay","savedCallback","current","setInterval","clearInterval","useInterval","sum","total","index","bidsToDisplay","asksToDisplay","flex","height","overflow","textAlign","OrderbookRow","onPriceClick","onSizeClick","MarkPriceComponent","memo","element","classList","contains","remove","formattedSize","minOrderSize","toFixed","formattedPrice","tickSize","ref","marginBottom","onClick","data-width","data-bgcolor","prevProps","nextProps","previousMarkPrice","usePrevious","markPriceColor","formattedMarkPrice","justify","ArrowUpOutlined","marginRight","ArrowDownOutlined","DataTable","dataSource","columns","emptyLabel","pagination","loading","pageSize","renderEmpty","padding","display","justifyContent","alignItems","BalancesTable","balances","showMarket","hideWalletBalance","onSettleSuccess","settleFunds","title","dataIndex","render","ghost","onSettleFunds","CancelButton","Button","OpenOrderTable","onCancelSuccess","cancelId","setCancelId","order","orderId","cancelOrder","fontWeight","charAt","toUpperCase","icon","DeleteOutlined","cancel","assign","FillsTable","fills","fill","openOrdersAccount","useFills","liquidity","FeesTable","findFeeDiscountKeys","useFeeDiscountKeys","feeTier","row","marginLeft","format","getFeeRates","taker","_","SRM_MINT","MSRM_MINT","marginTop","FeeScheduleTable","balance","info","Paragraph","TabPane","Tabs","Index","paddingTop","href","defaultActiveKey","tab","supportsSrmFeeDiscounts","OpenOrdersTab","filterForOpenOrders","useOpenOrders","BalancesTab","DepositDialog","coinMint","depositCoin","onClose","baseOrQuote","visible","onOk","onCancel","Link","RowBox","Tip","p","ActionButton","StandaloneBalancesDisplay","setBaseOrQuote","currency","Fragment","borderColor","align","paddingBottom","width","block","SellButton","BuyButton","sliderMarks","0","25","50","75","100","TradeForm","setChangeOrderRef","setSide","postOnly","setPostOnly","ioc","setIoc","baseSize","setBaseSize","quoteSize","setQuoteSize","setPrice","submitting","setSubmitting","sizeFraction","setSizeFraction","quoteBalance","baseBalance","sizeDecimalCount","priceDecimalCount","doChangeOrder","onSliderChange","updateSizeFraction","onSetBaseSize","rawQuoteSize","rawMaxSize","maxSize","newSize","formatted","onSubmit","parsedPrice","parseFloat","parsedSize","placeOrder","orderType","flexDirection","Group","onChange","target","buttonStyle","background","addonBefore","suffix","fontSize","step","compact","rawBaseSize","onSetQuoteSize","tipFormatter","marks","checked","disabled","TradesContainer","PublicTrades","minHeight","LinkAddress","LinkOutlined","rel","DeprecatedMarketsInstructions","switchToLiveMarkets","openOrderAccountBalances","inOrdersBase","inOrdersQuote","unsettledBase","unsettledQuote","useBalancesForDeprecatedMarkets","marketsAndOrders","getOrders","loadOrdersForOwner","flat","refreshOpenOrders","useGetOpenOrdersForDeprecatedMarkets","needToCancelOrders","filteredBalances","needToSettleFunds","Text","CustomMarketDialog","onAddCustomMarket","marketId","setMarketId","marketLabel","setMarketLabel","setBaseLabel","setQuoteLabel","loadingMarket","setLoadingMarket","wellFormedMarketId","marketAccountInfo","resetLabels","finally","knownMarket","knownProgram","knownBaseCurrency","knownQuoteCurrency","canSubmit","onDoClose","params","okText","okButtonProps","placeholder","LoadingOutlined","gutter","Option","Select","OptGroup","TradePage","handleDeprecated","setHandleDeprecated","addMarketVisible","setAddMarketVisible","deprecatedMarkets","window","innerHeight","innerWidth","dimensions","setDimensions","changeOrderRef","handleResize","addEventListener","removeEventListener","componentProps","onChangeOrderRef","getComponent","customMarket","newCustomMarkets","paddingLeft","paddingRight","MarketSelector","onDeleteCustomMarket","content","trigger","InfoCircleOutlined","PlusCircleOutlined","extractBase","extractQuote","selectedMarket","proposedMarket","showSearch","optionFilterProp","onSelect","listHeight","filterOption","input","option","toLowerCase","indexOf","label","stopPropagation","nativeEvent","stopImmediatePropagation","DeprecatedMarketsPage","RenderNormal","flexWrap","RenderSmall","RenderSmaller","xs","sm","OpenOrdersPage","allMarkets","marketData","loadBids","loadAsks","ordersForMarket","openOrdersAddress","useOpenOrdersForAllMarkets","WalletBalancesTable","walletBalances","AccountsTable","accountBalances","BalancesPage","includes","useWalletBalancesForAllMarkets","loadedWalletBalances","openOrderAccounts","baseCurrencyAccounts","quoteCurrencyAccounts","useOpenOrderAccountBalancesForAllMarkets","accountBalancesLoaded","LogoWrapper","TopBar","location","useLocation","history","useHistory","handleClick","src","logo","alt","mode","selectedKeys","pathname","borderBottom","Item","connect","UserOutlined","helpUrls","Footer","Layout","useBreakpoint","Grid","footerElements","link","CustomFooter","lg","elem","Header","Content","BasicLayout","ListNewMarketPage","baseLotSize","quoteLotSize","useMintInput","code","baseMintInput","baseMintInfo","quoteMintInput","quoteMintInfo","lotSize","setLotSize","setTickSize","dexProgramId","listedMarket","setListedMarket","listMarket","baseMint","quoteMint","labelCol","wrapperCol","layout","onFinish","initialValue","validateStatus","hasFeedback","trim","colon","htmlType","tooltip","setAddress","help","mintInfo","parsed","initialized","parseTokenMintData","Routes","basename","exact","path","component","TradePageContents","OpenOrdersPageContents","BalancesPageContents","App","fallback","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","createTokenAccountTransaction","mintPublicKey","newAccount","SystemProgram","getMinimumBalanceForRentExemption","fromPubkey","newAccountPubkey","space","transaction","createAccount","initializeAccount","signer","baseCurrencyAccountPubkey","quoteCurrencyAccountPubkey","createAccountTransaction","createAccountSigner","supportsReferralFees","makeSettleFundsTransaction","settleFundsTransaction","settleFundsSigners","signers","mergeTransactions","sendTransaction","sendingMessage","cancelOrders","makeMatchOrdersTransaction","makeCancelOrderInstruction","formattedMinOrderSize","formattedTickSize","isIncrement","num","abs","payer","makePlaceOrderTransaction","placeOrderTx","getVaultOwnerAndNonce","nonce","createProgramAddress","toBuffer","toArrayLike","Buffer","vaultOwner","iaddn","requestQueue","eventQueue","baseVault","quoteVault","feeRateBps","quoteDustThreshold","vaultSignerNonce","tx1","Transaction","tx2","getLayout","DexInstructions","initializeMarket","signTransaction","signedTransactions","signedTransaction","sendSignedTransaction","getUnixTs","getTime","sentMessage","successMessage","timeout","getRecentBlockhash","recentBlockhash","blockhash","signPartial","rawTransaction","serialize","startTime","sendRawTransaction","skipPreflight","done","awaitTransactionSignatureConfirmation","reject","onSignature","err","getSignatureStatuses","signatureStatuses","confirmations","transactions","t","rest"],"mappings":"uGAAAA,EAAOC,QAAU,IAA0B,kC,qeCGpC,SAASC,EAAiBC,GAC/B,IAAKA,EACH,OAAO,EAET,IAEE,OADA,IAAIC,YAAUD,IACP,EACP,SACA,OAAO,GAIJ,SAAeE,EAAtB,kC,4CAAO,WAAqBC,GAArB,SAAAC,EAAA,+EACE,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAASH,OAD/C,4C,sBAIA,IAAMK,EAAgB,IAAIC,KAAKC,kBAAaC,EAAW,CAC5DC,MAAO,UACPC,sBAAuB,EACvBC,sBAAuB,IAGlB,SAASC,EAAeC,EAAOC,GACpC,OAAOA,EAAWC,KAAKC,MAAMH,EAAK,SAAG,GAAMC,IAAzBC,KAAA,IAAqC,GAAMD,GAAWD,EAGnE,SAASI,EAAeJ,EAAOC,GACpC,OAAOA,EAAWC,KAAKG,MAAML,EAAK,SAAG,GAAMC,IAAzBC,KAAA,IAAqC,GAAMD,GAAWD,EAGnE,SAASM,EAAgBN,GAC9B,OAAKO,MAAMP,IAAUE,KAAKC,MAAMH,KAAWA,EAEpC,EADEA,EAAMQ,WAAWC,MAAM,KAAK,GAAGC,QAAU,EAI7C,SAASC,EAAqB3B,GAA2B,IAAtB4B,EAAqB,uDAAN,KAAM,EACnCC,oBAAS,WAEjC,IAAMC,EAAcC,aAAaC,QAAQhC,GACzC,OAAI8B,EACKG,KAAKC,MAAMJ,GAEbF,KAPoD,mBACtDO,EADsD,KAC/CC,EAD+C,KAUvDC,EAAuBC,uBAC3B,SAACC,GACiBJ,IAAUI,IAI1BH,EAASG,GACQ,OAAbA,EACFR,aAAaS,WAAWxC,GAExB+B,aAAaU,QAAQzC,EAAKiC,KAAKS,UAAUH,OAG7C,CAACJ,EAAOnC,IAGV,MAAO,CAACmC,EAAOE,GAwBV,SAASM,EAAQC,EAAMC,EAAMC,GAClC,IAAKA,GAAQC,OAAOD,KAAKF,GAAMlB,SAAWqB,OAAOD,KAAKD,GAAMnB,OAC1D,OAAO,EAEToB,EAAOA,GAAQC,OAAOD,KAAKF,GAJa,oBAKxBE,GALwB,IAKxC,2BAAsB,CAAC,IAAZE,EAAW,QACpB,GAAIJ,EAAKI,KAAOH,EAAKG,GAEnB,OAAO,GAR6B,8BAWxC,OAAO,I,gCCpGT,uEAIO,SAASC,EAAT,GAMH,IALFC,EAKC,EALDA,QACAC,EAIC,EAJDA,YACAC,EAGC,EAHDA,KAGC,IAFDC,YAEC,MAFM,OAEN,MADDC,iBACC,MADW,aACX,EACGF,IACFD,EACE,kBAAC,IAAD,CACEI,UAAQ,EACRC,GAAI,kCAAoCJ,EACxCxC,MAAO,CAAE6C,MAAO,YAHlB,oBAKoBL,EAAKM,MAAM,EAAG,GALlC,MAKyCN,EAAKM,MAAMN,EAAK1B,OAAS,KAItEiC,IAAaN,GAAM,CACjBH,QAAS,0BAAMtC,MAAO,CAAE6C,MAAO,UAAYP,GAC3CC,YACE,0BAAMvC,MAAO,CAAE6C,MAAO,QAASG,QAAS,KAAQT,GAElDG,YACA1C,MAAO,CACLiD,gBAAiB,a,gMCzBjBC,EAAe,IAAIC,KAEnBC,EAAc,IAAIC,IAElBC,EACJ,WAAYC,EAAUC,EAAIC,EAAiBC,EAAwBC,GAAW,oBAC5EC,KAAKL,SAAWA,EAChBK,KAAKJ,GAAKA,EACVI,KAAKH,gBAAkBA,EACvBG,KAAKF,uBAAyBA,EAC9BE,KAAKD,SAAWA,GAIdE,E,WACJ,WAAYN,EAAUC,GAAK,IAAD,gCAgD1BM,QAhD0B,sBAgDhB,kCAAAtE,EAAA,yDACJ,EAAKuE,YACPC,aAAa,EAAKD,WAClB,EAAKA,UAAY,OAEf,EAAKE,QALD,wDASJC,GAAU,EATN,kBAWa,EAAKV,KAXlB,cAWAW,EAXA,OAYNf,EAAYgB,IAAI,EAAKb,SAAUY,GAC/B,EAAKE,OAAS,EACd,EAAKC,kBAdC,kBAeCH,GAfD,oCAiBJ,EAAKE,OACPE,QAAQC,KAAR,MACAN,GAAU,EAnBJ,yBAqBD,EAAKH,WAAc,EAAKE,UACvBQ,EAAW,EAAKhB,gBAElBS,GACA,EAAKR,wBACL,EAAKA,uBAAyB,IAE9Be,EAAW,EAAKf,wBAId,EAAKW,OAAS,IAChBI,EAAWnE,KAAKoE,IAAI,aAAO,EAAM,EAAKL,OAAS,GAAI,OAI/CM,EAAoB,IAAIxB,KAASD,GACf,MACtBuB,GAAY,IAAOE,EAAoB,GAIR,WAA7BC,SAASC,gBACXJ,EAAW,IACDG,SAASE,aACnBL,GAAY,KAIdA,GAAY,GAAM,GAAMnE,KAAKyE,SAE7B,EAAKhB,UAAYpE,WAAW,EAAKmE,QAASW,IApDtC,6EA/CRb,KAAKL,SAAWA,EAChBK,KAAKJ,GAAKA,EACVI,KAAKG,UAAY,KACjBH,KAAKoB,UAAY,IAAIC,IACrBrB,KAAKS,OAAS,E,wDAqBJa,GACV,IAAMC,EAA0BvB,KAAKH,gBACrCG,KAAKoB,UAAUI,IAAIF,GACftB,KAAKH,gBAAkB0B,GACzBvB,KAAKE,Y,qCAIMoB,GACbG,IAAOzB,KAAKoB,UAAUM,OAAOJ,IACzBtB,KAAKK,SACHL,KAAKG,YACPC,aAAaJ,KAAKG,WAClBH,KAAKG,UAAY,Q,wCAMrBH,KAAKoB,UAAUO,SAAQ,SAACL,GAAD,OAAcA,EAASvB,gB,sCApC9C,OAAOrD,KAAKoE,IAAL,MAAApE,KAAI,YACN,YAAIsD,KAAKoB,WAAWQ,KAAI,SAACN,GAAD,OAAcA,EAASzB,uB,6CAKpD,OAAOnD,KAAKoE,IAAL,MAAApE,KAAI,YACN,YAAIsD,KAAKoB,WACTQ,KAAI,SAACN,GAAD,OAAcA,EAASxB,0BAC3B+B,QAAO,SAACC,GAAD,OAAOA,S,8BAKnB,OAA+B,IAAxB9B,KAAKoB,UAAUW,S,KAkHpBC,EAAc,I,iDA9BlBC,MAAQ,IAAIxC,I,wDAEA6B,GACLtB,KAAKiC,MAAMC,IAAIZ,EAAS3B,WAC3BK,KAAKiC,MAAMzB,IACTc,EAAS3B,SACT,IAAIM,EAAkBqB,EAAS3B,SAAU2B,EAAS1B,KAGtDI,KAAKiC,MAAME,IAAIb,EAAS3B,UAAUyC,YAAYd,K,qCAGjCA,GACb,IAAMe,EAAOrC,KAAKiC,MAAME,IAAIb,EAAS3B,UACrC0C,EAAKC,eAAehB,GAChBe,EAAKhC,SACPL,KAAKiC,MAAMP,OAAOJ,EAAS3B,Y,8BAIvBA,GACFK,KAAKiC,MAAMC,IAAIvC,IACjBK,KAAKiC,MAAME,IAAIxC,GAAUO,Y,mCAK3B,OAAOrE,QAAQ0G,IAAI,YAAIvC,KAAKiC,MAAMO,UAAUZ,KAAI,SAACS,GAAD,OAAUA,EAAKnC,kB,MAK5D,SAASuC,EACdC,EACA/C,GAEC,IAAD,yDAD6D,GAC7D,IADEE,uBACF,MADoB,IACpB,MAD2BC,8BAC3B,MADoD,KACpD,IACqB6C,sBAAW,SAACC,GAAD,OAAOA,EAAI,IAAG,GAD9C,mBACSC,EADT,KAoBA,GAjBAC,qBAAU,WACR,IAAKnD,EAEH,OAAO,aAET,IAAM2B,EAAW,IAAI5B,EACnBC,EACA+C,EACA7C,EACAC,EACA+C,GAGF,OADAb,EAAYI,YAAYd,GACjB,kBAAMU,EAAYM,eAAehB,MAEvC,CAAC3B,EAAUE,KAETF,EACH,MAAO,CAAC,MAAM,GAGhB,IAAMoD,EAASvD,EAAY0C,IAAIvC,GACzBY,EAAOwC,EAASvD,EAAY2C,IAAIxC,QAAYxD,EAClD,MAAO,CAACoE,EAAMwC,GAGT,SAASC,EAAarD,GAA+B,IAArBsD,EAAoB,wDACrDA,GACFzD,EAAYkC,OAAO/B,GAErB,IAAM0C,EAAOL,EAAYC,MAAME,IAAIxC,GAC/B0C,IACFA,EAAKnC,UACD+C,GACFZ,EAAK3B,mB,YCjMEwC,EAAY,CACvB,CACEC,KAAM,eACNC,SAAU,uCAEZ,CAAED,KAAM,UAAWC,SAAUC,wBAAc,YAC3C,CAAEF,KAAM,SAAUC,SAAUC,wBAAc,WAC1C,CAAEF,KAAM,WAAYC,SAAU,0BAG1BE,EAAuB,IAAI7D,IAE3B8D,EAAoBC,IAAMC,cAAc,MAEvC,SAASC,EAAT,GAA2C,IAAbC,EAAY,EAAZA,SAAY,EACfxG,YAC9B,mBACA+F,EAAU,GAAGE,UAHgC,mBACxCA,EADwC,KAC9BQ,EAD8B,KAMzCC,EAAaC,mBAAQ,kBAAM,IAAIC,aAAWX,EAAU,YAAW,CACnEA,IAEIY,EAAiBF,mBAAQ,kBAAM,IAAIC,aAAWX,EAAU,YAAW,CACvEA,IA6BF,OAvBAN,qBAAU,WACR,IAAMmB,EAAKJ,EAAWK,iBAAgB,IAAIC,WAAUC,WAAW,eAC/D,OAAO,kBAAMP,EAAWQ,4BAA4BJ,MACnD,CAACJ,IAEJf,qBAAU,WACR,IAAMmB,EAAKJ,EAAWS,cAAa,kBAAM,QACzC,OAAO,kBAAMT,EAAWU,yBAAyBN,MAChD,CAACJ,IAEJf,qBAAU,WACR,IAAMmB,EAAKD,EAAeE,iBACxB,IAAIC,WAAUC,WACd,eAEF,OAAO,kBAAMJ,EAAeK,4BAA4BJ,MACvD,CAACD,IAEJlB,qBAAU,WACR,IAAMmB,EAAKD,EAAeM,cAAa,kBAAM,QAC7C,OAAO,kBAAMN,EAAeO,yBAAyBN,MACpD,CAACD,IAGF,kBAACT,EAAkBiB,SAAnB,CACEhI,MAAO,CAAE4G,WAAUQ,cAAaC,aAAYG,mBAE3CL,GAKA,SAASc,IACd,OAAOC,qBAAWnB,GAAmBM,WAGhC,SAASc,IACd,OAAOD,qBAAWnB,GAAmBS,eAGhC,SAASY,IACd,IAAMC,EAAUH,qBAAWnB,GAC3B,MAAO,CAAEH,SAAUyB,EAAQzB,SAAUQ,YAAaiB,EAAQjB,aAGrD,SAASkB,EAAeV,GAC7B,IAAMP,EAAaY,IACb9E,EAAWoF,YAAMlB,EAAD,OAAaO,QAAb,IAAaA,OAAb,EAAaA,EAAWY,YAFN,EAGVvC,EAAY,sBACxC,sBAAA7G,EAAA,+EAAawI,EAAYP,EAAWoB,eAAeb,GAAa,MAAhE,2CACAzE,EACA,CAAEE,gBAAiB,MANmB,mBAGjCqF,EAHiC,KAGpBnC,EAHoB,KAwCxC,OAhCAD,qBAAU,WACR,GAAKsB,EAAL,CAGA,GAAId,EAAqBpB,IAAIvC,GAAW,GACpB2D,EAAqBnB,IAAIxC,GAC7BwF,UACT,CACL,IAAIC,EAAe,KACbC,EAAiBxB,EAAWK,gBAAgBE,GAAW,SAACkB,GACxDA,EAAE/E,OACC6E,GAAiBA,EAAaG,OAAOD,EAAE/E,OD8G/C,SAAkBZ,EAAUnD,GAAyC,IAAD,yDAAJ,GAAI,IAA/BgJ,sBAA+B,SACzE,IAAIA,IAAkBhG,EAAY0C,IAAIvC,GAAtC,CAGAH,EAAYgB,IAAIb,EAAUnD,GAC1B,IAAM6F,EAAOL,EAAYC,MAAME,IAAIxC,GAC/B0C,GACFA,EAAK3B,mBCpHG+E,CAAS9F,EAAU2F,GAGrBF,EAAeE,EAAE/E,SAGrB+C,EAAqB9C,IAAIb,EAAU,CAAEwF,MAAO,EAAGE,mBAEjD,OAAO,WACL,IAAIK,EAAcpC,EAAqBnB,IAAIxC,GAC3B+F,EAAYP,MAAQ,GACnB,GACftB,EAAWQ,4BAA4BqB,EAAYL,gBACnD/B,EAAqB5B,OAAO/B,MAE1B+F,EAAYP,UAIjB,CAACxF,IACG,CAACuF,EAAanC,GAGhB,SAAS4C,EAAevB,GAAY,IAAD,EAClBU,EAAeV,GAA9Bc,EADiC,oBAExC,OAAOA,GAAeA,EAAY3E,K,qCCxHvBqF,EAAmB,CAC9B,CAAEzC,KAAM,YAAa0C,IAAK,0BAGtBC,EAAgBtC,IAAMC,cAAc,MAEnC,SAASsC,EAAT,GAAuC,IAAD,IAAZpC,EAAY,EAAZA,SACvBP,EAAawB,IAAbxB,SADmC,EAELjG,YACpC,iBACA,yBAJyC,mBAEpC6I,EAFoC,KAEvBC,EAFuB,KAMrCC,EAASpC,mBAAQ,kBAAM,IAAIqC,IAAOH,EAAa5C,KAAW,CAC9D4C,EACA5C,IARyC,EAWT/F,oBAAS,GAXA,mBAWpC+I,EAXoC,KAWzBC,EAXyB,KA0C3C,OA9BAvD,qBAAU,WAyBR,OAxBAnC,QAAQ2F,IAAI,qBACZJ,EAAOK,GAAG,WAAW,WACnB5F,QAAQ2F,IAAI,aACZD,GAAa,GACb,IAAIG,EAAkBN,EAAO9B,UAAUY,WACnCyB,EACFD,EAAgBtJ,OAAS,GAAzB,UACOsJ,EAAgBE,UAAU,EAAG,GADpC,gBAC8CF,EAAgBE,UACxDF,EAAgBtJ,OAAS,EACzBsJ,EAAgBtJ,SAElBsJ,EACN/H,YAAO,CACLC,QAAS,gBACTC,YAAa,uBAAyB8H,OAG1CP,EAAOK,GAAG,cAAc,WACtBF,GAAa,GACb5H,YAAO,CACLC,QAAS,gBACTC,YAAa,gCAGV,WACLuH,EAAOS,aACPN,GAAa,MAEd,CAACH,IAEF,kBAACJ,EAActB,SAAf,CACEhI,MAAO,CACL0J,SACAE,YACAJ,cACAC,iBACAW,aAAY,oBACVhB,EAAiBiB,MAAK,qBAAGhB,MAAkBG,YADjC,aACV,EAAyD7C,YAD/C,QAEV6C,IAGHrC,GAKA,SAASmD,IACd,IAAMjC,EAAUH,qBAAWoB,GAC3B,MAAO,CACLM,UAAWvB,EAAQuB,UACnBF,OAAQrB,EAAQqB,OAChBF,YAAanB,EAAQmB,YACrBe,YAAalC,EAAQoB,eACrBW,aAAc/B,EAAQ+B,c,6CCzEbI,EAAiBC,SAAoB,CAChDA,OAAkB,GAAI,QACtBA,OAAkB,GAAI,SACtBA,OAAkB,UAClBA,OAAkB,MAGPC,EAAcD,SAAoB,CAC7CA,OAAkB,IAClBA,KAAgB,YAChBA,KAAgB,eAChBA,OAAkB,MAGb,SAASE,EAAsB5G,GAAO,IAAD,EACZyG,EAAeI,OAAO7G,GAA9C8G,EADoC,EACpCA,KAAMC,EAD8B,EAC9BA,MAAOC,EADuB,EACvBA,OACnB,MAAO,CACLF,KAAM,IAAI5L,YAAU4L,GACpBC,MAAO,IAAI7L,YAAU6L,GACrBC,UASG,SAASC,EAAwBpD,GACtC,MAAO,CACL,CACEqD,OAAQ,CACNC,OAAQV,EAAeW,SAAS,SAChCC,MAAOxD,EAAUY,aAGrB,CACE6C,SAAUb,EAAec,OAKxB,IAAMC,EAAmB,IAAItM,YAClC,+CAGK,SAAeuM,GAAtB,qC,8CAAO,WAAqCnE,EAAYO,GAAjD,iBAAAxI,EAAA,6DACDqM,EAAUT,EAAwBpD,GADjC,SAEYP,EAAWqE,YAAY,qBAAsB,CAC5DH,EAAiB/C,WACjB,CACEmD,WAAYtE,EAAWsE,WACvBF,aANC,YAEDG,EAFC,QASIC,MATJ,sBAUG,IAAIC,MACR,yCACElE,EAAUY,WACV,KACAoD,EAAKC,MAAM3J,SAdZ,gCAiBE0J,EAAKG,OACT3G,KAAI,gBAAG4G,EAAH,EAAGA,OAAH,IAAWC,QAAWlI,EAAtB,EAAsBA,KAAMmI,EAA5B,EAA4BA,WAAYpB,EAAxC,EAAwCA,MAAOqB,EAA/C,EAA+CA,SAA/C,MAAiE,CACpEvE,UAAW,IAAI3I,YAAU+M,GACzBtD,YAAa,CACX3E,KAAMqI,IAAKxB,OAAO7G,GAClBmI,aACApB,MAAO,IAAI7L,YAAU6L,GACrBqB,gBAGH9G,QAAO,YAAsB,IAAnBqD,EAAkB,EAAlBA,YAET,OAAO+C,EAAQY,OAAM,SAAChH,GACpB,GAAIA,EAAOgG,SACT,OAAO3C,EAAY3E,KAAKrD,SAAW2E,EAAOgG,SACrC,GAAIhG,EAAO4F,OAAQ,CACxB,IAAIqB,EAAcF,IAAKxB,OAAOvF,EAAO4F,OAAOG,OAC5C,OAAO1C,EAAY3E,KAChBrB,MACC2C,EAAO4F,OAAOC,OACd7F,EAAO4F,OAAOC,OAASoB,EAAY5L,QAEpCqI,OAAOuD,GAEZ,OAAO,SAzCR,4C,sBA8CA,SAAeC,GAAtB,qC,8CAAO,WAAmClF,EAAYmF,GAA/C,uBAAApN,EAAA,sEAC8BC,QAAQ0G,IAAI,CAC7CyF,GAAsBnE,EAAYmF,GAClCnF,EAAWoB,eAAe+D,KAHvB,0CACAC,EADA,KACaR,EADb,KAKCS,EAAoBD,EAAYrH,KAAI,YAAiC,IAA9BwC,EAA6B,EAA7BA,UAAWc,EAAkB,EAAlBA,YACtD,MAAO,CACLsD,OAAQpE,EACRqE,QAASvD,EACTiE,cAAehC,EAAsBjC,EAAY3E,MAAM8G,SATtD,kBAYE6B,EAAkBE,OAAO,CAC9BZ,OAAQQ,EACRP,UACAU,cAAeE,sBAfZ,4C,sBC5EP,IAEMC,GAEFC,UAMG,SAASC,KACd,IAAM3F,EAAaY,IADW,EAEApH,mBAAS,IAFT,mBAEvBoM,EAFuB,KAEdC,EAFc,KA+B9B,OA3BA5G,qBAAU,YACW,uCAAG,oCAAAlH,EAAA,sDACd6N,EAAU,GADI,cAGDH,IAHC,gEAGfK,EAHe,0BAKKC,SAAOC,KAC1BhG,EACA8F,EAAWG,QACX,GACAH,EAAWI,WATG,OAKVC,EALU,OAWhBP,EAAQQ,KAAK,CAAED,SAAQE,WAAYP,EAAWxG,OAX9B,kDAahB1E,YAAO,CACLC,QAAS,2BACTC,YAAa,KAAED,QACfG,KAAM,UAhBQ,+IAoBpB6K,EAAWD,GApBS,uEAAH,qDAuBnBU,KACC,CAACtG,IAEG4F,EAGF,SAASW,KAAmC,IAAD,EAC1CvG,EAAaY,IACXyB,EAAWY,IAAXZ,OAFwC,4CAIhD,wCAAAtK,EAAA,yDACOsK,GAAWrC,GAAeqC,EAAO9B,UADxC,yCAEW,IAFX,OAIEzD,QAAQ2F,IAAI,8CACR+D,EAA+B,GAC7BC,EAAuBC,MAAMC,KACjC,IAAInJ,IACFiI,GAAYzH,QACV,qBAAG4I,cACH7I,KAAI,qBAAGmI,UAA0B/E,gBAErCpD,KAAI,SAAC8I,GAAD,OAAkB,IAAIjP,YAAUiP,MAZxC,cAcoBJ,GAdpB,gEAcOP,EAdP,4BAgBuCY,aAAWC,aAC1C/G,EACAqC,EAAO9B,UACP2F,GAnBR,QAgBYc,EAhBZ,OAqBMR,EAA+BA,EAA6BjB,OAC1DyB,EACGhJ,QACC,SAACiJ,GAAD,OACEA,EAAWC,eAAeC,YAC1BF,EAAWG,gBAAgBD,cAE9BnJ,QAAO,SAACiJ,GAAD,OACNxB,GAAY4B,MACV,SAAClB,GAAD,OACEA,EAAOS,YAAcT,EAAOF,QAAQvE,OAAOuF,EAAWd,eA/BtE,mDAoCMrJ,QAAQ2F,IACN,mCADF,UAEEyD,SAFF,aAEE,EAAW/E,WACX,KAAEtG,SAvCV,wKA4CS2L,GA5CT,yEAJgD,sBAmDhD,IAAM1K,EAAWoF,YACf,kCACAlB,EAFoB,OAGpBqC,QAHoB,IAGpBA,GAHoB,UAGpBA,EAAQ9B,iBAHY,aAGpB,EAAmBY,YAtD2B,EAwD7BvC,GAxD6B,4CAwDiB9C,EAAU,CACzEE,gBAAiBsL,KAGnB,MAAO,CACLC,SA7D8C,oBA8D9ClL,QAAS,SAAC+C,GAAD,OAAgBD,EAAarD,EAAUsD,KAIpD,IAAMoI,GAAgB7H,IAAMC,cAAc,MAEpC0H,GAA8B,IAQvBG,GAAiBhC,GAAYzC,MACxC,gBAAG1D,EAAH,EAAGA,KAAMsH,EAAT,EAASA,WAAT,MAAmC,aAATtH,IAAwBsH,KAGpD,SAASc,GAAiBvB,EAAQwB,GAAgB,IAAD,IAC/C,IAAKxB,EACH,MAAO,GAET,IACML,EADc8B,GAAeD,GACJ3E,MAAK,SAAC6E,GAAD,OAClCA,EAAY5B,QAAQvE,OAAOyE,EAAOF,YAE9B6B,GACG,OAAN3B,QAAM,IAANA,OAAA,EAAAA,EAAQ4B,mBAAR,UACCC,cAAYhF,MAAK,SAACiF,GAAD,OAAWA,EAAMhC,QAAQvE,OAAOyE,EAAO4B,2BADzD,aACC,EACIzI,QACK,OAAVwG,QAAU,IAAVA,OAAA,EAAAA,EAAYoC,YAAZ,iBAA4BpC,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAYoC,UAAxC,MACD,UACIC,GACG,OAANhC,QAAM,IAANA,OAAA,EAAAA,EAAQiC,oBAAR,UACCJ,cAAYhF,MAAK,SAACiF,GAAD,OAAWA,EAAMhC,QAAQvE,OAAOyE,EAAOiC,4BADzD,aACC,EACI9I,QACK,OAAVwG,QAAU,IAAVA,OAAA,EAAAA,EAAYuC,aAAZ,iBAA6BvC,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAYuC,WAAzC,MACD,UAEF,OAAO,2BACFvC,GADL,IAEEO,WAAU,OAAEP,QAAF,IAAEA,OAAF,EAAEA,EAAYxG,KACxBwI,eACAK,gBACArC,eAIG,SAASwC,GAAT,GAAuC,IAAbxI,EAAY,EAAZA,SAAY,EACDxG,YACxC,gBACAmO,GAAexB,QAAQ9E,YAHkB,mBACpCoH,EADoC,KACrBC,EADqB,OAKDlP,YACxC,gBACA,IAPyC,mBAKpCqO,EALoC,KAKrBc,EALqB,KAUrCxC,EAAU,IAAIrO,YAAU2Q,GACxBvI,EAAaY,IAEbkF,EADc8B,GAAeD,GACJ3E,MAAK,SAACmD,GAAD,OAClCA,EAAOF,QAAQvE,OAAOuE,MAIxBhH,qBAAU,WACJ6G,GAAcA,EAAWc,aAC3B9J,QAAQ2F,IAAI,oCAAqCqD,GACjD0C,EAAiBf,GAAexB,QAAQ9E,eAGzC,IAxBwC,MA0Bf3H,qBA1Be,mBA0BpC2M,EA1BoC,KA0B5BuC,EA1B4B,KAwD3C,OA7BAzJ,qBAAU,WAAO,IAAD,EAEZkH,GACAL,IADA,UAEAK,EAAOwC,SAASC,kBAFhB,aAEA,EAA4BlH,OAA5B,OAAmCoE,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAYG,YAIjDyC,EAAU,MACL5C,GAAeA,EAAWG,QAQ/BF,SAAOC,KAAKhG,EAAY8F,EAAWG,QAAS,GAAIH,EAAWI,WACxD2C,KAAKH,GACLI,OAAM,SAACrH,GAAD,OACL7G,YAAO,CACLC,QAAS,uBACTC,YAAa2G,EAAE5G,QACfG,KAAM,aAbVJ,YAAO,CACLC,QAAS,uBACTC,YAAa,2CACbE,KAAM,aAcT,CAACgF,EAAY8F,IAGd,kBAAC0B,GAAc7G,SAAf,CACEhI,MAAK,yBACHwN,UACGuB,GAAiBvB,EAAQwB,IAFzB,IAGHa,mBACAb,gBACAc,sBAGD3I,GAKA,SAASiJ,KACd,OAAOlI,qBAAW2G,IAGb,SAASwB,KAAgB,IAAD,EACKxP,mBAAS,MADd,mBACtByP,EADsB,KACXC,EADW,OAGTC,KAAbC,EAHsB,oBAIvBC,EAASC,KAiBf,OAfArK,qBAAU,WAAO,IAAD,IACVsK,GAAc,OAATH,QAAS,IAATA,GAAA,UAAAA,EAAWI,YAAX,eAAiBnQ,QAAS,GAAKoQ,OAAOL,EAAUI,KAAK,GAAG,IAC7DE,GAAc,OAATN,QAAS,IAATA,GAAA,UAAAA,EAAWO,YAAX,eAAiBtQ,QAAS,GAAKoQ,OAAOL,EAAUO,KAAK,GAAG,IAC7DC,GAAa,OAANP,QAAM,IAANA,OAAA,EAAAA,EAAQhQ,QAAS,GAAKgQ,EAAO,GAAGQ,MAEvCZ,EACFM,GAAMG,EACFE,EACE,CAACL,EAAIG,EAAIE,GAAME,MAAK,SAAC/R,EAAGgS,GAAJ,OAAUhS,EAAIgS,KAAG,IACpCR,EAAKG,GAAM,EACd,KAENR,EAAaD,KACZ,CAACG,EAAWC,IAERJ,EAGF,SAASe,KAAqC,IAAhBC,EAAe,uDAAP,IAAO,EAC/BlB,KAAX5C,EAD0C,EAC1CA,OACFnG,EAAaY,IAF+B,SAGnCsJ,IAHmC,2EAGlD,sBAAAnS,EAAA,yDACOoO,GAAWnG,EADlB,yCAEW,MAFX,uBAIemG,EAAOgE,UAAUnK,EAAYiK,GAJ5C,oFAHkD,4BASjCrL,EACfsL,EACAhJ,YAAM,sBAAuBiF,EAAQnG,GACrC,CAAEhE,gBAtJyB,MA0IqB,mBAS3CqN,EAT2C,KAclD,OAAOA,EAcF,SAASe,KAAwB,IAC9BjE,EAAW4C,KAAX5C,OACJkE,EAAUvI,EAAeqE,GAAUA,EAAOwC,SAASa,MACnDc,EAAUxI,EAAeqE,GAAUA,EAAOwC,SAASgB,MACvD,MAAO,CACLY,aAAcF,EAAUG,YAAUjH,OAAO4C,EAAQkE,GAAW,KAC5DI,aAAcH,EAAUE,YAAUjH,OAAO4C,EAAQmE,GAAW,MAIzD,SAASnB,KAA0B,IAAbuB,EAAY,uDAAJ,GAAI,EACAN,KAA/BG,EAD+B,EAC/BA,aAAcE,EADiB,EACjBA,aADiB,EAEpB1B,KAAX5C,EAF+B,EAE/BA,OACFqD,EACHe,GAAiBpE,EAEdoE,EAAaI,MAAMD,GAAO3M,KAAI,yCAAmB,CAAnB,cAD9B,GAEA4L,EACHc,GAAiBtE,EAEdsE,EAAaE,MAAMD,GAAO3M,KAAI,yCAAmB,CAAnB,cAD9B,GAEN,MAAO,CAAC,CAAEyL,OAAMG,UAAUH,KAAUG,GAK/B,SAASiB,KAAqC,IAAfC,EAAc,0DAC/B9B,KAAX5C,EAD0C,EAC1CA,OAD0C,EAEpBlD,IAAtBV,EAF0C,EAE1CA,UAAWF,EAF+B,EAE/BA,OACbrC,EAAaY,IAH+B,SAInCkK,IAJmC,2EAIlD,sBAAA/S,EAAA,yDACOwK,EADP,yCAEW,MAFX,UAIO4D,EAJP,yCAKW,MALX,uBAOeA,EAAO4E,+BAClB/K,EACAqC,EAAO9B,WATX,oFAJkD,sBAgBlD,OAAO3B,EACLkM,EACA5J,YAAM,wBAAyBmB,EAAQ8D,EAAQ5D,GAC/C,CAAEvG,gBAAiB6O,EAhNQ,IAHA,MAuNxB,SAASG,KAA4C,IAAfH,EAAc,0DACtCD,GAAsBC,GADgB,mBAClDtD,EADkD,KAEzD,OAAKA,EAGEA,EAAS,GAFP,KAKJ,SAAS0D,KAAoB,IAAD,EACHhI,IAAtBV,EADyB,EACzBA,UAAWF,EADc,EACdA,OACbrC,EAAaY,IAFc,4CAGjC,sBAAA7I,EAAA,yDACOwK,EADP,yCAEW,MAFX,uBAIe2C,GAAoBlF,EAAYqC,EAAO9B,WAJtD,oFAHiC,sBASjC,OAAO3B,GAT0B,4CAW/BsC,YAAM,mBAAoBmB,EAAQE,GAClC,CAAEvG,gBA3OyB,MA+OxB,SAASkP,GAA+B3D,EAAU/D,GACvD,IAAK+D,IAAa/D,EAChB,OAAO,KAET,IAAM2H,EAAW5D,EAASvJ,QAAO,gBAAGsH,EAAH,EAAGA,cAAH,OAC/B9B,EAAK9B,OAAO4D,MAEd,OAAO6F,GAAYA,EAAS,GAGvB,SAASC,KAAmC,IAAD,EAC7BH,KAAZ1D,EADyC,oBAExCpB,EAAW4C,KAAX5C,OACR,OAAO+E,GAA+B3D,EAAD,OAAWpB,QAAX,IAAWA,OAAX,EAAWA,EAAQiC,kBAGnD,SAASiD,KAAkC,IAAD,EAC5BJ,KAAZ1D,EADwC,oBAEvCpB,EAAW4C,KAAX5C,OACR,OAAO+E,GAA+B3D,EAAD,OAAWpB,QAAX,IAAWA,OAAX,EAAWA,EAAQ4B,iBAInD,SAASuD,KACd,IAMwE,EANlEC,EAAuBH,KACrBjF,EAAW4C,KAAX5C,OAFiC,EAGXlF,EAAc,OAACsK,QAAD,IAACA,OAAD,EAACA,EAAsB5G,QAH1B,mBAGlCtD,EAHkC,KAGrBnC,EAHqB,KAIzC,OAAKiH,GAAWoF,GAAyBrM,EAGrCiH,EAAOiC,iBAAiB1G,OAAO8J,oBAAkBhG,kBACnD,WAAkB,OAAXnE,QAAW,IAAXA,OAAA,EAAAA,EAAayD,UAAW,WAA/B,QAAsC,EAEjCqB,EAAOsF,qBACZ,IAAIC,KAAGrK,EAAY3E,KAAKrB,MAAM,GAAI,IAAK,GAAI,OANpC,KAWJ,SAASsQ,KACd,IAMuE,EANjEC,EAAsBP,KACpBlF,EAAW4C,KAAX5C,OAFgC,EAGVlF,EAAc,OAAC2K,QAAD,IAACA,OAAD,EAACA,EAAqBjH,QAH1B,mBAGjCtD,EAHiC,KAGpBnC,EAHoB,KAIxC,OAAKiH,GAAWyF,GAAwB1M,EAGpCiH,EAAO4B,gBAAgBrG,OAAO8J,oBAAkBhG,kBAClD,WAAkB,OAAXnE,QAAW,IAAXA,OAAA,EAAAA,EAAayD,UAAW,WAA/B,QAAsC,EAEjCqB,EAAO0F,oBACZ,IAAIH,KAAGrK,EAAY3E,KAAKrB,MAAM,GAAI,IAAK,GAAI,OANpC,KAsBJ,SAASiO,KAAwB,IAAdW,EAAa,uDAAL,IAC1BZ,EAASW,GAAqBC,GACpC,OAAKZ,EAIEA,EACJrL,QAAO,qBAAG8N,WAA4BC,SACtChO,KAAI,SAACiO,GAAD,mBAAC,eACDA,GADA,IAEHC,KAAqB,QAAfD,EAAMC,KAAiB,OAAS,WAPjC,KAoKJ,SAASC,KACd,IAAMC,EAAuBR,KACvBS,EAAwBd,KACxBrE,EAAa+D,IAA6B,GAHpB,EAIoBjC,KAAxCjB,EAJoB,EAIpBA,aAAcK,EAJM,EAINA,cAAehC,EAJT,EAISA,OAC/BkG,EACJpF,GAAcA,EAAWC,gBAAkBD,EAAWqF,cAClDC,EACJtF,GAAcA,EAAWG,iBAAmBH,EAAWuF,eACzD,MACmB,YAAjB1E,GACkB,YAAlBK,GACCL,GACAK,EAII,CACL,CACEhC,SACAxO,IAAI,GAAD,OAAKmQ,GAAL,OAAoBK,GAApB,OAAoCL,GACvC2E,KAAM3E,EACNzF,OAAQ8J,EACRO,OACEL,GAAclG,EACVA,EAAO0F,oBACL5E,EAAWC,eAAeyF,IAAI1F,EAAWqF,gBAE3C,KACNrF,aACA2F,UACEP,GAAclG,EACVA,EAAO0F,oBAAoB5E,EAAWqF,eACtC,MAER,CACEnG,SACAxO,IAAI,GAAD,OAAKwQ,GAAL,OAAqBL,GAArB,OAAoCK,GACvCsE,KAAMtE,EACN9F,OAAQ+J,EACRnF,aACAyF,OACEH,GAAepG,EACXA,EAAOsF,qBACLxE,EAAWG,gBAAgBuF,IAAI1F,EAAWuF,iBAE5C,KACNI,UACEL,GAAepG,EACXA,EAAOsF,qBAAqBxE,EAAWuF,gBACvC,OAnCD,G,SAyGIK,G,qFAAf,WAAkC1G,EAAQnG,EAAYqC,GAAtD,iCAAAtK,EAAA,+HAEYoO,EAAO2G,8BAA8B9M,EAAYqC,EAAO9B,WAFpE,0DAGY4F,EAAO4G,+BAA+B/M,EAAYqC,EAAO9B,WAHrE,kCACQyM,EADR,KAIQC,EAAkBD,GAAoBA,EAAiB,GAJ/D,UAKqChN,EAAWkN,uBAC5CD,EAAgBtI,QANpB,eAKQwI,EALR,gCAQSA,QART,IAQSA,GART,UAQSA,EAAsBxU,aAR/B,aAQS,EAA6ByU,UARtC,6C,sBAmHO,SAASC,KACd,IAAMrN,EAAaY,IACX2G,EAAahB,KAAbgB,SACF+F,EACJ/F,GACAb,MAAMC,KAAK,IAAInJ,IAAI+J,EAASxJ,KAAI,SAACkJ,GAAD,OAAgBA,EAAWd,YACvDoH,EAAOD,GAAeA,EAAYvP,KAAI,SAACyP,GAAD,OAAOA,EAAErM,cANN,EAqC7BvC,EA7BuB,uCAAG,4BAAA7G,EAAA,yDACrCuV,EADqC,yCAEjC,MAFiC,cAIpCG,EAJoC,+BAAA1V,EAAA,MAIxB,WAAOkO,GAAP,eAAAlO,EAAA,6DACV+N,EAAaL,GAAYzC,MAAK,SAACmD,GAAD,OAClCA,EAAOF,QAAQvE,OAAOuE,MAFR,SAKdnJ,QAAQ2F,IAAI,iBAAkBqD,EAAWxG,MAL3B,SAODyG,SAAOC,KAClBhG,EACA8F,EAAWG,QACX,GACAH,EAAWI,WAXC,+EAcdpJ,QAAQ2F,IAAI,wBAAyBqD,EAAWxG,KAAhD,MACA1E,YAAO,CACLC,QAAS,uBACTC,YAAa,KAAED,QACfG,KAAM,UAlBM,kBAoBP,MApBO,yDAJwB,+DA2B5BhD,QAAQ0G,IAAI4O,EAAYvP,IAAI0P,IA3BA,uCA2BazP,QAAO,SAACC,GAAD,OAAOA,MA3B3B,2CAAH,qDA+BvCiD,YACE,sCACAlB,EACAuN,GAAQA,EAAKpU,YAEf,CAAE6C,gBAAiBsL,KAPd1B,EArCwC,oBA8C/C,OAAKA,EAGEA,EAAQ7H,KAAI,SAACoI,GAAD,MAAa,CAC9BA,SACAuH,eAAgBnG,EAASvJ,QAAO,SAACiJ,GAAD,OAC9BA,EAAWd,OAAOzE,OAAOyE,EAAOF,gBAL3B,KAmIJ,SAAS2B,GAAeD,GAC7B,IAAMgG,EAAoBhG,EAAc5J,KAAI,SAACyP,GAAD,mBAAC,eACxCA,GADuC,IAE1CvH,QAAS,IAAIrO,YAAU4V,EAAEvH,SACzBC,UAAW,IAAItO,YAAU4V,EAAEtH,gBAG7B,MAAM,GAAN,mBAAWyH,GAAX,YAAiClI,K,goEClgC5B,IAAMmI,GAAcC,aAAH,M,wCCChBC,GAAUC,KAAVD,MAEaE,G,8MACnBlU,MAAQ,CACNmU,UAAU,G,uDAQV,OAAI9R,KAAKrC,MAAMmU,SAEX,6BACE,6BACE,kBAACH,GAAD,CAAOI,MAAO,GAAd,yBACA,kBAACJ,GAAD,CAAOI,MAAO,GAAd,6BAMD/R,KAAKgS,MAAMrO,Y,gDAhBY0E,GAC9B,MAAO,CAAEyJ,UAAU,O,GANoBG,a,8MCF3C,IAAMC,GAAUC,KAAOC,IAAV,MAME,SAASC,GAAT,GAA+C,IAApBjW,EAAmB,EAAnBA,MAAOuH,EAAY,EAAZA,SAC/C,OAAO,kBAACuO,GAAD,CAAS9V,MAAK,eAAOA,IAAUuH,G,g1BCAxC,IAAMgO,GAAQQ,KAAOC,IAAV,MAILE,GAAYH,aAAOI,KAAPJ,CAAH,MAKTK,GAAiBL,aAAOI,KAAPJ,CAAH,MAKdM,GAAON,KAAOC,IAAV,MAIN,SAACJ,GAAD,OACAA,EAAM,eACNU,aADA,KAEWV,EAAM,kBAEjB,SAACA,GAAD,OACAA,EAAM,iBACNU,aADA,KAEsBV,EAAM,oBAI1BW,GAAQR,KAAOC,IAAV,MAMI,SAAS/D,GAAT,GAAiE,IAA5CuE,EAA2C,EAA3CA,YAA2C,IAA9BrE,aAA8B,MAAtB,EAAsB,EAAnBsE,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,OAC7DhG,EAAYD,KAD2D,EAEzDG,KAAbC,EAFsE,sBAGrCL,KAAhCjB,EAHqE,EAGrEA,aAAcK,EAHuD,EAGvDA,cAEhB+G,EAAuBC,iBAAO,MAC9BC,EAAoBD,iBAAO,MAN4C,EAQnC3V,mBAAS,MAR0B,mBAQtE6V,EARsE,KAQvDC,EARuD,KA0C7E,SAASC,EAA2B7C,EAAQ8C,GAA+B,IAApBC,EAAmB,wDACpEC,EAAahD,EACdrR,MAAM,EAAGqP,GACTiF,QAAO,SAACD,EAAD,EAA4B3Q,GAAO,IAAD,qBAApB8K,EAAoB,KAAb3L,EAAa,KAClC0R,IAAkB,UAAAF,EAAW3Q,EAAI,UAAf,eAAmB6Q,iBAAkB,GAAK1R,EAOlE,OANAwR,EAAWtJ,KAAK,CACdyD,QACA3L,OACA0R,iBACAC,YAAahX,KAAKG,MAAO4W,GAAkBJ,GAAa,GAAM,OAEzDE,IACN,IAIL,OAHID,IACFC,EAAaA,EAAWI,WAEnBJ,EAGT,OCzGK,SAAqBxT,EAAU6T,GACpC,IAAMC,EAAgBb,mBAGtBlQ,qBAAU,WACR+Q,EAAcC,QAAU/T,IACvB,CAACA,IAGJ+C,qBAAU,WAIR,GAAc,OAAV8Q,EAAgB,CAClB,IAAI3P,EAAK8P,aAJX,WACEF,EAAcC,YAGaF,GAC3B,OAAO,WACLI,cAAc/P,OAGjB,CAAC2P,IDmCJK,EAAY,WACV,IACGlB,EAAqBe,SACtBrW,KAAKS,UAAU6U,EAAqBe,WAClCrW,KAAKS,UAAU+U,EAAkBa,SACnC,CACA,IAAIzG,GAAgB,OAATJ,QAAS,IAATA,OAAA,EAAAA,EAAWI,OAAQ,GAC1BG,GAAgB,OAATP,QAAS,IAATA,OAAA,EAAAA,EAAWO,OAAQ,GAE1B0G,EAAM,SAACC,EAAD,EAAkBC,GAAlB,IAAWrS,EAAX,2BACRqS,EAAQ7F,EAAQ4F,EAAQpS,EAAOoS,GAC7Bd,EAAYhG,EAAKmG,OAAOU,EAAK,GAAK1G,EAAKgG,OAAOU,EAAK,GAEnDG,EAAgBjB,EAA2B/F,EAAMgG,GAAW,GAC5DiB,EAAgBlB,EAA2B5F,EAAM6F,GAAW,GAEhEN,EAAqBe,QAAU,CAC7BzG,KAAI,OAAEJ,QAAF,IAAEA,OAAF,EAAEA,EAAWI,KACjBG,KAAI,OAAEP,QAAF,IAAEA,OAAF,EAAEA,EAAWO,MAGnB2F,EAAiB,CAAE9F,KAAMgH,EAAe7G,KAAM8G,OAE/C,KAEHxR,qBAAU,WACRmQ,EAAkBa,QAAU,CAC1BzG,KAAI,OAAEJ,QAAF,IAAEA,OAAF,EAAEA,EAAWI,KACjBG,KAAI,OAAEP,QAAF,IAAEA,OAAF,EAAEA,EAAWO,QAElB,CAACP,IAsBF,kBAACoF,GAAD,CACEjW,MACEwW,EAAc,CAAE2B,KAAM,GAAM,CAAEC,OAAQ,QAASC,SAAU,WAG3D,kBAAC,GAAD,kBACA,kBAACnC,GAAD,KACE,kBAAC,KAAD,CAAKxK,KAAM,GAAI1L,MAAO,CAAEsY,UAAW,SAAnC,SACS/I,EADT,KAGA,kBAAC,KAAD,CAAK7D,KAAM,GAAI1L,MAAO,CAAEsY,UAAW,UAAnC,UACU1I,EADV,MAVJ,OAcGkH,QAdH,IAcGA,OAdH,EAcGA,EAAe1F,KAAK5L,KAAI,gBAAG8L,EAAH,EAAGA,MAAO3L,EAAV,EAAUA,KAAM2R,EAAhB,EAAgBA,YAAhB,OACvB,kBAACiB,GAAD,CACEnZ,IAAKkS,EAAQ,GACbA,MAAOA,EACP3L,KAAMA,EACN+N,KAAM,OACN4D,YAAaA,EACbkB,aAAc,kBAAM/B,EAAQnF,IAC5BmH,YAAa,kBAAM/B,EAAO/Q,SAG9B,kBAAC+S,GAAD,CAAoBhI,UAAWA,IAzBjC,OA0BGoG,QA1BH,IA0BGA,OA1BH,EA0BGA,EAAe7F,KAAKzL,KAAI,gBAAG8L,EAAH,EAAGA,MAAO3L,EAAV,EAAUA,KAAM2R,EAAhB,EAAgBA,YAAhB,OACvB,kBAACiB,GAAD,CACEnZ,IAAKkS,EAAQ,GACbA,MAAOA,EACP3L,KAAMA,EACN+N,KAAM,MACN4D,YAAaA,EACbkB,aAAc,kBAAM/B,EAAQnF,IAC5BmH,YAAa,kBAAM/B,EAAO/Q,UAOpC,IAAM4S,GAAenR,IAAMuR,MACzB,YAAoE,IAAjEjF,EAAgE,EAAhEA,KAAMpC,EAA0D,EAA1DA,MAAO3L,EAAmD,EAAnDA,KAAM2R,EAA6C,EAA7CA,YAAamB,EAAgC,EAAhCA,YAAaD,EAAmB,EAAnBA,aACxCI,EAAUhC,mBAERhJ,EAAW4C,KAAX5C,OAERlH,qBAAU,WAAO,IAAD,MAEd,UAACkS,EAAQlB,eAAT,aAAC,EAAiBmB,UAAUC,SAAS,YAArC,UACEF,EAAQlB,eADV,OACE,EAAiBmB,UAAUzT,IAAI,UACjC,IAAMyC,EAAKlI,YACT,0BACE,UAAAiZ,EAAQlB,eAAR,eAAiBmB,UAAUC,SAAS,YAApC,UACAF,EAAQlB,eADR,aACA,EAAiBmB,UAAUE,OAAO,YACpC,KAEF,OAAO,kBAAM/U,aAAa6D,MACzB,CAACyJ,EAAO3L,IAEX,IAAIqT,GACI,OAANpL,QAAM,IAANA,OAAA,EAAAA,EAAQqL,gBAAiBtY,MAAMgF,GAC3BuL,OAAOvL,GAAMuT,QAAQxY,YAAgBkN,EAAOqL,cAAgB,GAC5DtT,EAEFwT,GACI,OAANvL,QAAM,IAANA,OAAA,EAAAA,EAAQwL,YAAazY,MAAM2Q,GACvBJ,OAAOI,GAAO4H,QAAQxY,YAAgBkN,EAAOwL,UAAY,GACzD9H,EAEN,OACE,kBAAC,KAAD,CAAK+H,IAAKT,EAAS5Y,MAAO,CAAEsZ,aAAc,GAAKC,QAASd,GACtD,kBAAC,KAAD,CAAK/M,KAAM,GAAI1L,MAAO,CAAEsY,UAAW,SAChCU,GAEH,kBAAC,KAAD,CAAKtN,KAAM,GAAI1L,MAAO,CAAEsY,UAAW,UACjC,kBAACjC,GAAD,CACEmD,aAAYlC,EAAc,IAC1BmC,eACW,QAAT/F,EACI,0BACA,4BAGR,kBAAC6C,GAAD,CAAOgD,QAASf,GAAeW,QAKvC,SAACO,EAAWC,GAAZ,OACE5X,YAAQ2X,EAAWC,EAAW,CAAC,QAAS,OAAQ,mBAG9CjB,GAAqBtR,IAAMuR,MAC/B,YAAoB,IAAjBjI,EAAgB,EAAhBA,UACO9C,EAAW4C,KAAX5C,OACFgM,EE1MK,SAAqBxZ,GAGlC,IAAMiZ,EAAMzC,mBAQZ,OALAlQ,qBAAU,WACR2S,EAAI3B,QAAUtX,IACb,CAACA,IAGGiZ,EAAI3B,QF+LiBmC,CAAYnJ,GAElCoJ,EACFpJ,EAAYkJ,EACR,UACAlJ,EAAYkJ,EACZ,UACA,QAEFG,EACFrJ,IAAS,OACT9C,QADS,IACTA,OADS,EACTA,EAAQwL,WACR1I,EAAUwI,QAAQxY,YAAgBkN,EAAOwL,WAE3C,OACE,kBAAChD,GAAD,CAAgB4D,QAAQ,UACtB,kBAAC,KAAD,CAAKha,MAAO,CAAE6C,MAAOiX,IAClBpJ,EAAYkJ,GACX,kBAACK,GAAA,EAAD,CAAiBja,MAAO,CAAEka,YAAa,KAExCxJ,EAAYkJ,GACX,kBAACO,GAAA,EAAD,CAAmBna,MAAO,CAAEka,YAAa,KAE1CH,GAAsB,YAK/B,SAACL,EAAWC,GAAZ,OAA0B5X,YAAQ2X,EAAWC,EAAW,CAAC,iB,mBGrO5C,SAASS,GAAT,GAOX,IANFC,EAMC,EANDA,WACAC,EAKC,EALDA,QAKC,IAJDC,kBAIC,MAJY,UAIZ,MAHDC,kBAGC,aAFDC,eAEC,aADDC,gBACC,MADU,GACV,EAcD,OACE,kBAAC,KAAD,CAAgBC,YAdW,kBAC3B,yBACE3a,MAAO,CACL4a,QAAS,OACTC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAGbR,KAMD,kBAAC,KAAD,CACEF,WAAYA,EACZC,QAASA,EACTE,aAAYA,GAAa,CAAEA,YAAY,EAAME,YAC7CD,QAASA,K,aClBF,SAASO,GAAT,GAKX,IAJFC,EAIC,EAJDA,SACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,kBACAC,EACC,EADDA,gBACC,EACkB1I,KAAZ1D,EADN,oBAEKvH,EAAac,IACXuB,EAAWY,IAAXZ,OAHP,4CAKD,WAA6B8D,EAAQc,GAArC,SAAAlP,EAAA,+EAEU6b,aAAY,CAChBzN,SACAc,aACAjH,aACAqC,SACAuJ,oBAAqBV,GACnB3D,EADiD,OAEjDpB,QAFiD,IAEjDA,OAFiD,EAEjDA,EAAQ4B,iBAEVwD,qBAAsBL,GACpB3D,EADkD,OAElDpB,QAFkD,IAElDA,OAFkD,EAElDA,EAAQiC,oBAbhB,6DAiBIxN,YAAO,CACLC,QAAS,uBACTC,YAAa,KAAED,QACfG,KAAM,UApBZ,0BAwBE2Y,GAAmBA,IAxBrB,0DALC,sBAgCD,IAAMd,EAAU,CACdY,EACI,CACEI,MAAO,SACPC,UAAW,aACXnc,IAAK,cAEP,KACJ,CACEkc,MAAO,OACPC,UAAW,OACXnc,IAAK,QAEP+b,EACI,KACA,CACEG,MAAO,iBACPC,UAAW,SACXnc,IAAK,UAEX,CACEkc,MAAO,SACPC,UAAW,SACXnc,IAAK,UAEP,CACEkc,MAAO,YACPC,UAAW,YACXnc,IAAK,aAEP,CACEA,IAAK,SACLoc,OAAQ,gBAAG5N,EAAH,EAAGA,OAAQc,EAAX,EAAWA,WAAYZ,EAAvB,EAAuBA,WAAvB,OACN,yBAAK9N,MAAO,CAAEsY,UAAW,UACvB,kBAAC,KAAD,CACEmD,OAAK,EACLzb,MAAO,CAAEka,YAAa,IACtBX,QAAS,kBArElB,6CAqEwBmC,CAAc9N,EAAQc,KAHvC,UAKUZ,OAKhBrI,QAAO,SAACC,GAAD,OAAOA,KAChB,OACE,kBAAC0U,GAAD,CACEG,WAAW,cACXF,WAAYY,EACZX,QAASA,EACTE,YAAY,I,mJCxFlB,IAAMmB,GAAe5F,aAAO6F,KAAP7F,CAAH,MAKH,SAAS8F,GAAT,GAA0D,IAAhCnN,EAA+B,EAA/BA,WAAYoN,EAAmB,EAAnBA,gBAC7ChS,EAAWY,IAAXZ,OACFrC,EAAac,IAFqD,EAItCtH,mBAAS,MAJ6B,mBAI/D8a,EAJ+D,KAIrDC,EAJqD,iDAMtE,WAAsBC,GAAtB,SAAAzc,EAAA,6DACEwc,EAAW,OAACC,QAAD,IAACA,OAAD,EAACA,EAAOC,SADrB,kBAGUC,aAAY,CAChBF,QACArO,OAAQqO,EAAMrO,OACdnG,aACAqC,WAPN,8DAUIzH,YAAO,CACLC,QAAS,yBACTC,YAAa,KAAED,QACfG,KAAM,UAbZ,4CAiBIuZ,EAAY,MAjBhB,qBAmBEF,GAAmBA,IAnBrB,gEANsE,sBA4BtE,IAAMxB,EAAU,CACd,CACEgB,MAAO,SACPC,UAAW,aACXnc,IAAK,cAEP,CACEkc,MAAO,OACPC,UAAW,OACXnc,IAAK,OACLoc,OAAQ,SAAC9H,GAAD,OACN,kBAAC,KAAD,CACE7Q,MAAgB,QAAT6Q,EAAiB,UAAY,UACpC1T,MAAO,CAAEoc,WAAY,MAEpB1I,EAAK2I,OAAO,GAAGC,cAAgB5I,EAAK5Q,MAAM,MAIjD,CACEwY,MAAO,OACPC,UAAW,OACXnc,IAAK,QAEP,CACEkc,MAAO,QACPC,UAAW,QACXnc,IAAK,SAEP,CACEA,IAAK,UACLoc,OAAQ,SAACS,GAAD,OACN,yBAAKjc,MAAO,CAAEsY,UAAW,UACvB,kBAACqD,GAAD,CACEY,KAAM,kBAACC,GAAA,EAAD,MACNjD,QAAS,kBA/DmD,2CA+D7CkD,CAAOR,IACtBxB,QAASsB,EAAW,MAAY,OAALE,QAAK,IAALA,OAAA,EAAAA,EAAOC,SAAU,IAH9C,cAWF7B,GAAc3L,GAAc,IAAIlJ,KAAI,SAACyW,GAAD,OACxC9Z,OAAOua,OAAOT,EAAO,CAAE7c,IAAK6c,EAAMC,aAGpC,OACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAKxQ,KAAM,IACT,kBAAC0O,GAAD,CACEG,WAAW,iBACXF,WAAYA,EACZC,QAASA,EACTE,YAAY,EACZE,SAAU,M,cC/FL,SAASiC,KACtB,IAAMC,EVqdD,WAAgC,IAAdlL,EAAa,uDAAL,IAAK,EACblB,KAAf1C,EAD4B,EAC5BA,WACF8O,EAAQnL,GAAqBC,GAFC,EAGPW,KAHO,mBAG7B5D,EAH6B,KAIpC,OAAKA,GAAoD,IAA9BA,EAAmB3N,QAGzC8b,EAGEA,EACJnX,QAAO,SAACoX,GAAD,OACNpO,EAAmBK,MAAK,SAACgO,GAAD,OACtBD,EAAKnO,WAAWvF,OAAO2T,EAAkB9U,iBAG5CxC,KAAI,SAACqX,GAAD,mBAAC,eAAeA,GAAhB,IAAsB/O,kBAXpB,KU1dKiP,GAENnN,EAAkBY,KAAlBZ,cAEF0K,EAAU,CACd,CACEgB,MAAO,SACPC,UAAW,aACXnc,IAAK,cAEP,CACEkc,MAAO,OACPC,UAAW,OACXnc,IAAK,OACLoc,OAAQ,SAAC9H,GAAD,OACN,kBAAC,KAAD,CACE7Q,MAAgB,QAAT6Q,EAAiB,UAAY,UACpC1T,MAAO,CAAEoc,WAAY,MAEpB1I,EAAK2I,OAAO,GAAGC,cAAgB5I,EAAK5Q,MAAM,MAIjD,CACEwY,MAAM,OACNC,UAAW,OACXnc,IAAK,QAEP,CACEkc,MAAM,QACNC,UAAW,QACXnc,IAAK,SAEP,CACEkc,MAAM,YACNC,UAAW,YACXnc,IAAK,aAEP,CACEkc,MAAO1L,EAAa,gBAAYA,EAAZ,KAA+B,OACnD2L,UAAW,UACXnc,IAAK,YAIHib,GAAcuC,GAAS,IAAIpX,KAAI,SAACqX,GAAD,mBAAC,eACjCA,GADgC,IAEnCzd,IAAI,GAAD,OAAKyd,EAAKX,SAAV,OAAoBW,EAAKnJ,MAC5BsJ,UAAWH,EAAKtJ,WAAWC,MAAQ,QAAU,aAG/C,OACE,oCACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAK9H,KAAM,IACT,kBAAC0O,GAAD,CACEC,WAAYA,EACZC,QAASA,EACTE,YAAY,EACZE,SAAU,EACVH,WAAW,gBC3DR,SAAS0C,KAAa,IAAD,EXgc7B,WAA+B,IAC5BrP,EAAW4C,KAAX5C,OAD2B,EAELlD,IAAtBV,EAF2B,EAE3BA,UAAWF,EAFgB,EAEhBA,OACbrC,EAAaY,IAHgB,4CAInC,sBAAA7I,EAAA,yDACOwK,EADP,yCAEW,MAFX,UAIO4D,EAJP,yCAKW,MALX,uBAOeA,EAAOsP,oBAAoBzV,EAAYqC,EAAO9B,WAP7D,oFAJmC,sBAanC,OAAO3B,GAb4B,4CAejCsC,YAAM,qBAAsBmB,EAAQ8D,EAAQ5D,GAC5C,CAAEvG,gBA/UyB,MWhIP0Z,GAEhB7C,EAAU,CACd,CACEgB,MAAO,WACPC,UAAW,UACXnc,IAAK,UACLoc,OAAQ,SAAC4B,EAASC,GAAV,OACN,yBAAKrd,MAAO,CAAE6a,QAAS,SACrB,kBAAC,KAAD,KAAauC,GACE,IAAdC,EAAIrF,MACH,yBAAKhY,MAAO,CAAEsd,WAAY,KACxB,kBAAC,KAAD,CAAKza,MAAO,UAAW7C,MAAO,CAAEoc,WAAY,MAA5C,aAIA,QAIV,CACEd,MAAO,QACPC,UAAW,QACXnc,IAAK,QACLoc,OAAQ,SAAC4B,EAASC,GAAV,OACNzd,IAAc2d,OAAOC,sBAAYH,EAAID,SAASK,SAElD,CACEnC,MAAO,QACPC,UAAW,QACXnc,IAAK,QACLoc,OAAQ,SAAC4B,EAASC,GAAV,OACNzd,IAAc2d,OAAOC,sBAAYH,EAAID,SAAS5J,SAElD,CACE8H,MAAM,aACNC,UAAW,SACXnc,IAAK,SACLoc,OAAQ,SAACpP,GAAD,OAAYA,EAAOxD,aAE7B,CACE0S,MAAM,UACNC,UAAW,UACXnc,IAAK,WAEP,CACEkc,MAAM,OACNC,UAAW,OACXnc,IAAK,OACLoc,OAAQ,SAACkC,EAAGL,GAAJ,OACNA,EAAIpS,KAAK9B,OAAO8J,oBAAkB0K,UAC9B,MACAN,EAAIpS,KAAK9B,OAAO8J,oBAAkB2K,WAClC,OACA,aAIJvD,GA3D4B,qBA2DC,IAAI7U,KAAI,SAAC6G,EAAS2L,GAAV,mBAAC,eACvC3L,GADsC,IAEzC2L,QACA5Y,IAAKiN,EAAQD,OAAOxD,gBAGtB,OACE,oCACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAK8C,KAAM,IACT,kBAAC0O,GAAD,CACEC,WAAYA,EACZC,QAASA,EACTE,YAAY,EACZE,SAAU,EACVH,WAAW,yBAIjB,kBAAC,KAAD,CAAKva,MAAO,CAAE6d,UAAW,IACvB,kBAAC,KAAD,KACE,kBAAC,KAAD,kEAGA,kBAACC,GAAD,SAOV,SAASA,KAEP,IAqBMxD,EAAU,CACd,CACEgB,MAAO,WACPC,UAAW,UACXnc,IAAK,WAEP,CACEkc,MAAO,QACPC,UAAW,QACXnc,IAAK,QACLoc,OAAQ,SAAC4B,EAASC,GAAV,OACNzd,IAAc2d,OAAOC,sBAAYH,EAAID,SAASK,SAElD,CACEnC,MAAO,QACPC,UAAW,QACXnc,IAAK,QACLoc,OAAQ,SAAC4B,EAASC,GAAV,OACNzd,IAAc2d,OAAOC,sBAAYH,EAAID,SAAS5J,SAElD,CACE8H,MAAO,eACPC,UAAW,eACXnc,IAAK,eACLoc,OAAQ,SAACkC,EAAGL,GAAJ,OACN,kBAAC,KAAD,KACIA,EAAIU,QAAL,iBAA6BV,EAAIU,QAAjC,YAA4CV,EAAI3N,OAAjC,WAKxB,OACE,kBAAC0K,GAAD,CACEC,WAtDe,CACjB,CAAE+C,QAAS,EAAGK,MAAO,MAAQjK,OAAQ,KAAQ9D,MAAO,GAAIqO,QAAS,IACjE,CAAEX,QAAS,EAAGK,MAAO,KAAOjK,OAAQ,KAAQ9D,MAAO,MAAOqO,QAAS,KACnE,CAAEX,QAAS,EAAGK,MAAO,MAAQjK,OAAQ,KAAQ9D,MAAO,MAAOqO,QAAS,KACpE,CAAEX,QAAS,EAAGK,MAAO,MAAQjK,OAAQ,KAAQ9D,MAAO,MAAOqO,QAAS,KACpE,CACEX,QAAS,EACTK,MAAO,MACPjK,OAAQ,KACR9D,MAAO,MACPqO,QAAS,KAEX,CACEX,QAAS,EACTK,MAAO,MACPjK,OAAQ,KACR9D,MAAO,MACPqO,QAAS,KAEX,CAAEX,QAAS,EAAGK,MAAO,KAAOjK,OAAQ,KAAQ9D,MAAO,OAAQqO,QAAS,IAmC3CvY,KAAI,SAACwY,GAAD,mBAAC,eAAeA,GAAhB,IAAsB5e,IAAK4e,EAAKZ,aAC3D9C,QAASA,I,ICjJP2D,GAAczI,KAAdyI,UACAC,GAAYC,KAAZD,QAEO,SAASE,KAAS,IACvBxQ,EAAW4C,KAAX5C,OACR,OACE,kBAACqI,GAAD,CAAiBjW,MAAO,CAAEmY,KAAM,EAAGkG,WAAY,KAC7C,kBAAC,KAAD,KACE,kBAACJ,GAAD,CAAWje,MAAO,CAAE6C,MAAO,0BAA3B,wEAGA,kBAACob,GAAD,CAAWje,MAAO,CAAE6C,MAAO,0BAA3B,wBACuB,uBAAGyb,KAAK,yBAAR,aADvB,8FAGyB,MAG3B,kBAAC,KAAD,CAAMC,iBAAiB,UACrB,kBAACL,GAAD,CAASM,IAAI,cAAcpf,IAAI,UAC7B,kBAAC,GAAD,OAEF,kBAAC8e,GAAD,CAASM,IAAI,uBAAuBpf,IAAI,SACtC,kBAACud,GAAD,OAEF,kBAACuB,GAAD,CAASM,IAAI,WAAWpf,IAAI,YAC1B,kBAAC,GAAD,OAEDwO,GAAUA,EAAO6Q,wBAChB,kBAACP,GAAD,CAASM,IAAI,gBAAgBpf,IAAI,QAC/B,kBAAC6d,GAAD,OAEA,OAMZ,IAAMyB,GAAgB,WACpB,IAAMhQ,EZ8XD,WAA0B,IAAD,EACC8B,KAAvB5C,EADsB,EACtBA,OAAQE,EADc,EACdA,WACVgP,EAAoBrK,KAFI,EAGSZ,KAA/BG,EAHsB,EAGtBA,aAAcE,EAHQ,EAGRA,aACtB,OAAKtE,GAAWkP,GAAsB9K,GAAiBE,EAGhDtE,EACJ+Q,oBAAoB3M,EAAcE,EAAc,CAAC4K,IACjDtX,KAAI,SAACyW,GAAD,mBAAC,eAAgBA,GAAjB,IAAwBnO,aAAYF,cAJlC,KYnYUgR,GAEnB,OAAO,kBAAC/C,GAAD,CAAgBnN,WAAYA,KAG/BmQ,GAAc,WAClB,IAAM5D,EAAWtH,KAEjB,OAAO,kBAACqH,GAAD,CAAeC,SAAUA,K,6BC7CnB,SAAS6D,GAAT,GAAkD,IAM3DC,EACA1S,EACA2S,EARkCC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,YAAe,EACd1O,KAAxC5C,EADsD,EACtDA,OAAQ2B,EAD8C,EAC9CA,aAAcK,EADgC,EAChCA,cADgC,EAGxBlF,IAA9BF,EAHsD,EAGtDA,aAAcZ,EAHwC,EAGxCA,YAChByJ,EAAsBP,KACtBE,EAAuBH,KAe7B,MAXoB,SAAhBqM,GACFH,EAAQ,OAAGnR,QAAH,IAAGA,OAAH,EAAGA,EAAQ4B,gBACnBnD,EAAUgH,EACV2L,EAAczP,GACW,UAAhB2P,GACTH,EAAQ,OAAGnR,QAAH,IAAGA,OAAH,EAAGA,EAAQiC,iBACnBxD,EAAU2G,EACVgM,EAAcpP,GAEdvD,EAAU,KAEP0S,EAIH,kBAAC,KAAD,CACEzD,MAAO0D,EACPG,UAAWJ,EACXK,KAAMH,EACNI,SAAUJ,GAEV,yBAAKjf,MAAO,CAAEqe,WAAY,SACxB,uBAAGre,MAAO,CAAE6C,MAAO,UAAnB,iBACA,uBAAG7C,MAAO,CAAE6C,MAAO,0BAA4Bkc,EAASnW,YACxD,6BACE,uBAAG5I,MAAO,CAAE6C,MAAO,UAAnB,wBACA,uBAAG7C,MAAO,CAAE6C,MAAO,0BAChBwJ,EACCA,EAAQD,OAAOxD,WAEf,4CACQ,IACN,kBAAC0W,GAAA,EAAD,CAAM3c,UAAQ,EAACC,GAAIgH,GAChBY,GACK,IAJV,0CAlBH,K,uWCbX,IAAM+U,GAASxJ,aAAOI,KAAPJ,CAAH,MAINyJ,GAAMzJ,KAAO0J,EAAV,MAKHC,GAAe3J,aAAO6F,KAAP7F,CAAH,MAMH,SAAS4J,KAA6B,IAAD,EACFnP,KAAxCjB,EAD0C,EAC1CA,aAAcK,EAD4B,EAC5BA,cAAehC,EADa,EACbA,OAC/BqN,EAAWtH,KACXmJ,EAAoBrK,IAA6B,GACjDhL,EAAac,IAJ+B,EAKJmC,IAAtCd,EAL0C,EAK1CA,YAAaY,EAL6B,EAK7BA,aAAcV,EALe,EAKfA,OALe,EAMZ7I,mBAAS,IANG,mBAM3Cie,EAN2C,KAM9BU,EAN8B,KAO5CvM,EAAsBP,KACtBE,EAAuBH,KACvBe,EACJqH,GAAYA,EAASxQ,MAAK,SAAC+G,GAAD,OAAOA,EAAE0C,OAAS3E,KACxCsE,EACJoH,GAAYA,EAASxQ,MAAK,SAAC+G,GAAD,OAAOA,EAAE0C,OAAStE,KAZI,SAcnC8L,IAdmC,2EAclD,sBAAAlc,EAAA,+EAEU6b,aAAY,CAChBzN,SACAc,WAAYoO,EACZrV,aACAqC,SACAuJ,sBACAL,yBARN,sDAWI3Q,YAAO,CACLC,QAAS,uBACTC,YAAa,KAAED,QACfG,KAAM,UAdZ,yDAdkD,sBAiClD,OACE,kBAACwT,GAAD,CAAiBjW,MAAO,CAAEmY,KAAM,EAAGkG,WAAY,KAC5C,CACC,CAAC9O,EAAcqE,EAAsB,QACrC,CAAChE,EAAeiE,EAAuB,UACvCrO,KAAI,WAAoCwS,GAApC,uBAAE6H,EAAF,KAAY5E,EAAZ,KAAsBiE,EAAtB,YACJ,kBAAC,IAAMY,SAAP,CAAgB1gB,IAAK4Y,GACnB,kBAAC,KAAD,CAAShY,MAAO,CAAE+f,YAAa,UAAYF,GAC3C,kBAACN,GAAD,CACES,MAAM,SACNhG,QAAQ,gBACRha,MAAO,CAAEigB,cAAe,KAExB,kBAAC,KAAD,wBACA,kBAAC,KAAD,KAAMhF,GAAYA,EAASnR,SAE7B,kBAACyV,GAAD,CACES,MAAM,SACNhG,QAAQ,gBACRha,MAAO,CAAEigB,cAAe,KAExB,kBAAC,KAAD,2BACA,kBAAC,KAAD,KAAMhF,GAAYA,EAAS5G,YAE7B,kBAACkL,GAAD,CAAQS,MAAM,SAAShG,QAAQ,gBAC7B,kBAAC,KAAD,CAAKha,MAAO,CAAEkgB,MAAO,MACnB,kBAACR,GAAD,CACES,OAAK,EACLxa,KAAK,QACL4T,QAAS,kBAAMqG,EAAeV,KAHhC,YAQF,kBAAC,KAAD,CAAKlf,MAAO,CAAEkgB,MAAO,MACnB,kBAACR,GAAD,CAAcS,OAAK,EAACxa,KAAK,QAAQ4T,QAASmC,GAA1C,YAKJ,kBAAC8D,GAAD,+BAC0B,IACxB,kBAACF,GAAA,EAAD,CAAM3c,UAAQ,EAACC,GAAIgH,GAChBY,GACK,IAJV,cASJ,kBAACsU,GAAD,CACEI,YAAaA,EACbD,QAAS,kBAAMW,EAAe,Q,8VC9FtC,IAAMQ,GAAarK,aAAO6F,KAAP7F,CAAH,MAMVsK,GAAYtK,aAAO6F,KAAP7F,CAAH,MAMTuK,GAAc,CAClBC,EAAG,KACHC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,IAAK,QAGQ,SAASC,GAAT,GAAkD,IAA7B5gB,EAA4B,EAA5BA,MAAO6gB,EAAqB,EAArBA,kBAAqB,EACtC5f,mBAAS,OAD6B,mBACvDyS,EADuD,KACjDoN,EADiD,OAEdtQ,KAAxCjB,EAFsD,EAEtDA,aAAcK,EAFwC,EAExCA,cAAehC,EAFyB,EAEzBA,OAC/BgG,EAAuBR,KACvBS,EAAwBd,KACxBM,EAAsBP,KACtBE,EAAuBH,KACvBiK,EAAoBrK,IAA6B,GAC/C3I,EAAWY,IAAXZ,OACFlC,EAAiBW,IACjBmI,EAAYD,KAV4C,EAY9BxP,oBAAS,GAZqB,mBAYvD8f,EAZuD,KAY7CC,EAZ6C,OAaxC/f,oBAAS,GAb+B,mBAavDggB,EAbuD,KAalDC,EAbkD,OAc9BjgB,mBAAS,MAdqB,mBAcvDkgB,EAduD,KAc7CC,EAd6C,OAe5BngB,mBAAS,MAfmB,mBAevDogB,EAfuD,KAe5CC,EAf4C,OAgBpCrgB,mBAAS,MAhB2B,mBAgBvDqQ,EAhBuD,KAgBhDiQ,EAhBgD,OAiB1BtgB,oBAAS,GAjBiB,mBAiBvDugB,EAjBuD,KAiB3CC,EAjB2C,OAkBtBxgB,mBAAS,GAlBa,oBAkBvDygB,GAlBuD,MAkBzCC,GAlByC,MAwB1DC,IAAgB/N,GAAyB,KAJtBiJ,EACnBlP,EAAOsF,qBAAqB4J,EAAkB7I,gBAC9C,IAEiE,GACjE4N,GAAcjO,GAAwB,EACtCkO,IACI,OAANlU,QAAM,IAANA,OAAA,EAAAA,EAAQqL,eAAgBvY,YAAgBkN,EAAOqL,cAC7C8I,IAA0B,OAANnU,QAAM,IAANA,OAAA,EAAAA,EAAQwL,WAAY1Y,YAAgBkN,EAAOwL,UAEnE1S,qBAAU,WACRma,GAAqBA,EAAkBmB,MAEtC,CAACnB,IAEJna,qBAAU,WACRya,GAAY7P,GAAS2Q,GAAeP,MAEnC,CAAChO,IAEJhN,qBAAU,WACRwb,OAEC,CAAC5Q,EAAO6P,IAEX,IAAMgB,GAAgB,SAAChB,GACrBC,EAAYD,GACZ,IAAMiB,EAAejB,GAAY7P,GAASZ,GACpC2Q,EACJF,GAAY3gB,YAAe4hB,EAAcN,IAC3CR,EAAaD,IAUTW,GAAgB,SAAC,GAAqB,IAAnBrc,EAAkB,EAAlBA,KAAM2L,EAAY,EAAZA,MACvB0H,EAAgBrT,GAAQnF,YAAemF,EAAMmc,IAC7C3I,EAAiB7H,GAAS9Q,YAAe8Q,EAAOyQ,IACtD/I,GAAiBmJ,GAAcnJ,GAC/BG,GAAkBoI,EAASpI,IAGvB+I,GAAqB,WACzB,IAAMG,EAAsB,QAAT3O,EAAiBkO,GAAetQ,EAAQuQ,GACrDS,EAAUniB,YAAekiB,EAAYP,IACrCJ,EAAephB,KAAKoE,IAAKyc,EAAWmB,EAAW,IAAK,KAC1DX,GAAgBD,IAGZO,GAAiB,SAAC7hB,GACtB,IAAKkR,GAASZ,EAAW,CACvB,IAAIqJ,EAAqBgI,GACrBrR,EAAUwI,QAAQ6I,IAClBrR,EACJ6Q,EAASxH,GAGX,IAAIwI,EACS,QAAT7O,GACEpC,GAASZ,KACX6R,EAAYX,IAAgBtQ,GAASZ,GAActQ,EAAS,KAG9DmiB,EAAWV,GAAczhB,EAAS,IAIpC,IAAIoiB,EAAYriB,YAAeoiB,EAAST,IAExCK,GAAcK,IA9F8C,SA8G/CC,KA9G+C,8EA8G9D,8BAAAjjB,EAAA,6DACQkjB,EAAcC,WAAWrR,GACzBsR,EAAaD,WAAWxB,GAE9BM,GAAc,GAJhB,kBAMUoB,aAAW,CACfnP,OACApC,MAAOoR,EACP/c,KAAMid,EACNE,UAAW7B,EAAM,MAAQF,EAAW,WAAa,QACjDnT,SACAnG,WAAYG,EACZkC,SACAuJ,oBAAmB,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAqBjH,OAC1C4G,qBAAoB,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAsB5G,SAflD,OAiBImV,EAAS,MACTY,GAAc,MAlBlB,kDAoBI5d,QAAQC,KAAR,MACAnC,YAAO,CACLC,QAAS,sBACTC,YAAa,KAAED,QACfG,KAAM,UAxBZ,yBA2BIgf,GAAc,GA3BlB,8EA9G8D,sBA6I9D,OACE,kBAACxL,GAAD,CACEjW,MAAK,aAAI6a,QAAS,OAAQkI,cAAe,UAAa/iB,IAEtD,yBAAKA,MAAO,CAAEmY,KAAM,IAClB,kBAAC,KAAM6K,MAAP,CACEC,SAAU,SAAC/Z,GAAD,OAAO4X,EAAQ5X,EAAEga,OAAO9iB,QAClCA,MAAOsT,EACPyP,YAAY,QACZnjB,MAAO,CACLsZ,aAAc,EACd4G,MAAO,SAGT,kBAAC,KAAMtE,OAAP,CACExb,MAAM,MACNJ,MAAO,CACLkgB,MAAO,MACP5H,UAAW,SACX8K,WAAqB,QAAT1P,EAAiB,UAAY,GACzCqM,YAAsB,QAATrM,EAAiB,UAAY,KAN9C,OAWA,kBAAC,KAAMkI,OAAP,CACExb,MAAM,OACNJ,MAAO,CACLkgB,MAAO,MACP5H,UAAW,SACX8K,WAAqB,SAAT1P,EAAkB,UAAY,GAC1CqM,YAAsB,SAATrM,EAAkB,UAAY,KAN/C,SAYF,kBAAC,KAAD,CACE1T,MAAO,CAAEsY,UAAW,QAAS2H,cAAe,GAC5CoD,YAAa,yBAAKrjB,MAAO,CAAEkgB,MAAO,SAArB,SACboD,OACE,0BAAMtjB,MAAO,CAAEujB,SAAU,GAAIvgB,QAAS,KAAQ4M,GAEhDxP,MAAOkR,EACP7O,KAAK,SACL+gB,MAAY,OAAN5V,QAAM,IAANA,OAAA,EAAAA,EAAQwL,WAAY,EAC1B6J,SAAU,SAAC/Z,GAAD,OAAOqY,EAASrY,EAAEga,OAAO9iB,UAErC,kBAAC,KAAM4iB,MAAP,CAAaS,SAAO,EAACzjB,MAAO,CAAEigB,cAAe,IAC3C,kBAAC,KAAD,CACEjgB,MAAO,CAAEkgB,MAAO,mBAAoB5H,UAAW,SAC/C+K,YAAa,yBAAKrjB,MAAO,CAAEkgB,MAAO,SAArB,QACboD,OACE,0BAAMtjB,MAAO,CAAEujB,SAAU,GAAIvgB,QAAS,KAAQuM,GAEhDnP,MAAO+gB,EACP1e,KAAK,SACL+gB,MAAY,OAAN5V,QAAM,IAANA,OAAA,EAAAA,EAAQqL,eAAgB,EAC9BgK,SAAU,SAAC/Z,GAAD,OAAOiZ,GAAcjZ,EAAEga,OAAO9iB,UAE1C,kBAAC,KAAD,CACEJ,MAAO,CAAEkgB,MAAO,mBAAoB5H,UAAW,SAC/CgL,OACE,0BAAMtjB,MAAO,CAAEujB,SAAU,GAAIvgB,QAAS,KACnC4M,GAGLxP,MAAOihB,EACP5e,KAAK,SACL+gB,MAAY,OAAN5V,QAAM,IAANA,OAAA,EAAAA,EAAQqL,eAAgB,EAC9BgK,SAAU,SAAC/Z,GAAD,OA9JG,SAACmY,GACtBC,EAAaD,GACb,IAAMqC,EAAcrC,EAAY/P,EAC1B6P,EAAWE,GAAa7gB,YAAekjB,EAAa5B,IAC1DV,EAAYD,GA0JawC,CAAeza,EAAEga,OAAO9iB,WAG7C,kBAAC,KAAD,CACEA,MAAOshB,GACPkC,aAAc,SAACxjB,GAAD,gBAAcA,EAAd,MACdyjB,MAAOvD,GACP2C,SAAUhB,KAEZ,yBAAKjiB,MAAO,CAAEqe,WAAY,KACvB,QACD,kBAAC,KAAD,CACEyF,QAAS/C,EACTkC,SA/HW,SAACa,GAChBA,GACF5C,GAAO,GAETF,EAAY8C,IA4HJ9jB,MAAO,CAAEka,YAAa,MAEvB,OACD,kBAAC,KAAD,CAAQ4J,QAAS7C,EAAKgC,SA7HV,SAACa,GACfA,GACF9C,GAAY,GAEdE,EAAO4C,QA4HK,QAATpQ,EACC,kBAAC2M,GAAD,CACE0D,UAAWzS,IAAU6P,EACrB5H,QAASkJ,GACTtC,OAAK,EACL1d,KAAK,UACLkD,KAAK,QACL8U,QAAS+G,GANX,OAQOjS,GAGP,kBAAC6Q,GAAD,CACE2D,UAAWzS,IAAU6P,EACrB5H,QAASkJ,GACTtC,OAAK,EACL1d,KAAK,UACLkD,KAAK,QACL8U,QAAS+G,GANX,QAQQjS,I,gZC/RhB,IAAMgG,GAAQQ,KAAOC,IAAV,MAGLE,GAAYH,aAAOI,KAAPJ,CAAH,MAMTiO,GAAkBjO,KAAOC,IAAV,MAON,SAASiO,GAAT,GAAwC,IAAhBzN,EAAe,EAAfA,YAAe,EACJhG,KAAxCjB,EAD4C,EAC5CA,aAAcK,EAD8B,EAC9BA,cAAehC,EADe,EACfA,OAC/BkD,EAASC,KACf,OACE,kBAACkF,GAAD,CACEjW,MACEwW,EACI,CAAE2B,KAAM,GACR,CACE0F,UAAW,OACXqG,UAAW,QACX9L,OAAQ,wBAIhB,kBAAC,GAAD,6BACA,kBAAC,GAAD,KACE,kBAAC,KAAD,CAAK1M,KAAM,GAAI1L,MAAO,CAAEsY,UAAW,SAAnC,SACS/I,EADT,KAGA,kBAAC,KAAD,CAAK7D,KAAM,GAAI1L,MAAO,CAAEsY,UAAW,UAAnC,UACU1I,EADV,IAC0B,QAGzBkB,GACD,kBAACkT,GAAD,KACGlT,EAAOtL,KAAI,SAACiO,EAAOjN,GAAR,OACV,kBAAC,KAAD,CAAKpH,IAAKoH,EAAGxG,MAAO,CAAEsZ,aAAc,IAClC,kBAAC,KAAD,CAAK5N,KAAM,GAAI1L,MAAO,CAAEsY,UAAW,UAC1B,OAAN1K,QAAM,IAANA,OAAA,EAAAA,EAAQqL,gBAAiBtY,MAAM8S,EAAM9N,MAClCuL,OAAOuC,EAAM9N,MAAMuT,QACjBxY,YAAgBkN,EAAOqL,eAEzBxF,EAAM9N,MAEZ,kBAAC,KAAD,CACE+F,KAAM,GACN1L,MAAO,CACLsY,UAAW,QACXzV,MAAsB,QAAf4Q,EAAMC,KAAiB,UAAY,aAGrC,OAAN9F,QAAM,IAANA,OAAA,EAAAA,EAAQwL,YAAazY,MAAM8S,EAAMnC,OAC9BJ,OAAOuC,EAAMnC,OAAO4H,QAClBxY,YAAgBkN,EAAOwL,WAEzB3F,EAAMnC,a,cCjEX,SAAS6S,GAAT,GAA0C,IAAnB7I,EAAkB,EAAlBA,MAAO5N,EAAW,EAAXA,QAC3C,OACE,6BACG4N,GAAS,uBAAGtb,MAAO,CAAE6C,MAAO,UAAYyY,GACzC,kBAAC,KAAD,CACE7Y,KAAK,OACL8Z,KAAM,kBAAC6H,GAAA,EAAD,MACN9F,KAAM,uCAAyC5Q,EAC/CwV,OAAO,SACPmB,IAAI,uBAEH3W,I,8CCFD6H,GAAUC,KAAVD,MAEO,SAAS+O,GAAT,GAAiE,IAAxBC,EAAuB,EAAvBA,oBAChDtJ,ElBq7BD,WACL,IAAM5N,EAAUyH,KADgC,EAExB/T,YAAqB,gBAAiB,IAAvDqO,EAFyC,oBAGhD,IAAK/B,EACH,OAAO,KAGT,IAAMmX,EAA2B,GA8CjC,OA7CAnX,EAAQ9H,SAAQ,YAAiC,IAA9BqI,EAA6B,EAA7BA,OAAQuH,EAAqB,EAArBA,eAAqB,EACMhG,GAClDvB,EACAwB,GAFMG,EADsC,EACtCA,aAAcK,EADwB,EACxBA,cAAe9B,EADS,EACTA,WAIrCqH,EAAe5P,SAAQ,SAACmJ,GACtB,IAAM+V,GACM,OAAV/V,QAAU,IAAVA,OAAA,EAAAA,EAAYC,kBAAZ,OACAD,QADA,IACAA,OADA,EACAA,EAAYqF,gBACZnG,EAAO0F,oBACL5E,EAAWC,eAAeyF,IAAI1F,EAAWqF,gBAEvC2Q,GACM,OAAVhW,QAAU,IAAVA,OAAA,EAAAA,EAAYG,mBAAZ,OACAH,QADA,IACAA,OADA,EACAA,EAAYuF,iBACZrG,EAAO0F,oBACL5E,EAAWG,gBAAgBuF,IAAI1F,EAAWuF,iBAExC0Q,GACM,OAAVjW,QAAU,IAAVA,OAAA,EAAAA,EAAYqF,gBACZnG,EAAO0F,oBAAoB5E,EAAWqF,eAClC6Q,GACM,OAAVlW,QAAU,IAAVA,OAAA,EAAAA,EAAYuF,iBACZrG,EAAO0F,oBAAoB5E,EAAWuF,gBAExCuQ,EAAyB3W,KAAK,CAC5BC,aACAF,SACAsG,KAAM3E,EACNnQ,IAAI,GAAD,OAAK0O,GAAL,OAAkByB,GACrB4E,OAAQsQ,EACRpQ,UAAWsQ,EACXjW,eAEF8V,EAAyB3W,KAAK,CAC5BC,aACAF,SACAsG,KAAMtE,EACNxQ,IAAI,GAAD,OAAK0O,GAAL,OAAkB8B,GACrBuE,OAAQuQ,EACRrQ,UAAWuQ,EACXlW,qBAIC8V,EkB1+BUK,GAD4D,ElBq3BxE,WAAiD,IAAD,EACvBna,IAAtBV,EAD6C,EAC7CA,UAAWF,EADkC,EAClCA,OADkC,EAE7B/I,YAAqB,gBAAiB,IAAvDqO,EAF8C,oBAG/C3H,EAAaY,IACbyc,EAAmBhQ,KACnBC,EACJ+P,GAAoBA,EAAiBtf,KAAI,qBAAGoI,UAGxCoH,EACJD,GAAeA,EAAYvP,KAAI,SAACoI,GAAD,OAAYA,EAAOF,QAAQ9E,cAVP,4CAYrD,4BAAApJ,EAAA,yDACOwK,EADP,yCAEW,MAFX,UAIO+K,EAJP,yCAKW,MALX,cAOExQ,QAAQ2F,IAAI,gDACN6a,EARR,+BAAAvlB,EAAA,MAQoB,WAAOoO,GAAP,iBAAApO,EAAA,+DACO2P,GAAiBvB,EAAQwB,GAAxCtB,EADQ,EACRA,WADQ,SAGdvJ,QAAQ2F,IAAI,2BAA4B4D,GAH1B,SAMNF,EAAOoX,mBAAmBvd,EAAYqC,EAAO9B,WANvC,uCAOZxC,KAAI,SAACyW,GAAD,oBAAcnO,aAAYF,UAAWqO,OAP7B,uCASd1X,QAAQ2F,IAAI,6BAA8B0D,EAAOF,QAAQ9E,WAAzD,MACAvG,YAAO,CACLC,QAAQ,4CAAD,OAA8CwL,GACrDvL,YAAa,KAAED,QACfG,KAAM,UAbM,kBAeP,MAfO,yDARpB,+DA0BgBhD,QAAQ0G,IAAI4O,EAAYvP,IAAIuf,IA1B5C,uCA2BKtf,QAAO,SAACC,GAAD,OAAOA,KACduf,QA5BL,4CAZqD,sBA2CrD,IAAM1hB,EAAWoF,YACf,oCACAqB,EACAvC,EACAqC,EACAkL,GAAQA,EAAKpU,YAhDsC,EAkDxByF,GAlDwB,4CAoDnD9C,EACA,CACEE,gBAAiBsL,KAtDgC,mBAkD9CL,EAlD8C,KAkDlC/H,EAlDkC,KA0DrD,OADApC,QAAQ2F,IAAI,aAAcwE,GACnB,CACLA,aACA/H,SACAue,kBAAmB,kBAAMte,EAAarD,KkB56BpC4hB,GAHFzW,EAH2E,EAG3EA,WACA/H,EAJ2E,EAI3EA,OACAue,EAL2E,EAK3EA,kBAGMphB,EAAYkK,KAAZlK,QACFshB,GAAsB1W,GAAcA,EAAW5N,OAAS,EACxDukB,EACJpK,GACAA,EAASxV,QAAO,gBAAG0O,EAAH,EAAGA,OAAQE,EAAX,EAAWA,UAAX,OAA2BF,EAAS,GAAKE,EAAY,KACjEiR,EAAoBD,GAAoBA,EAAiBvkB,OAAS,EACxE,OACE,kBAACmV,GAAD,KACE,kBAAC,GAAD,CAAON,MAAO,EAAG3V,MAAO,CAAE6C,MAAO,2BAAjC,0BAGA,kBAAC,KAAD,+GAIA,6BACA,kBAAC,KAAD,4GAIA,yBAAK7C,MAAO,CAAE6d,UAAW,GAAIhD,QAAS,OAAQC,eAAgB,WAC5D,kBAAC,KAAD,CAAQvB,QAAS,kBAAMzV,GAAQ,KAC7B,kBAAC,KAAD,MADF,kBAIAmX,EAGA,oCACE,kBAAC,KAAD,MACImK,GAAsB,kBAAC,KAAD,MAD1B,uBAGCA,EACCze,EACE,kBAACkV,GAAD,CACEnN,WAAYA,EACZoN,gBAAiB,WACfnc,YAAW,WACTmE,IACAohB,MACC,QAIP,kBAAC,KAAD,CAAMvf,KAAK,UAEX,KACJ,kBAAC,KAAD,MACI2f,GAAqB,kBAAC,KAAD,MADzB,sBAGCA,GACC,kBAACtK,GAAD,CACEC,SAAUoK,EACVlK,mBAAiB,EACjBD,YAAU,EACVE,gBAAiB,WACfzb,WAAWmE,EAAS,QAI1B,kBAAC,KAAD,mCACA,yBAAK9D,MAAO,CAAE6a,QAAS,OAAQC,eAAgB,WAC7C,kBAAC,KAAD,CACEvB,QAASgL,EACTR,SAAUuB,GAAqBF,GAFjC,2BApCJ,kBAAC,KAAD,CAAMzf,KAAK,W,kCCxCX4f,GAAS/P,KAAT+P,KAEO,SAASC,GAAT,GAIX,IAAD,IAHDrG,EAGC,EAHDA,QACAsG,EAEC,EAFDA,kBACAxG,EACC,EADDA,QAEMxX,EAAaY,IADlB,EAG+BpH,mBAAS,IAHxC,mBAGMykB,EAHN,KAGgBC,EAHhB,OAKqC1kB,mBAAS,IAL9C,mBAKM2kB,EALN,KAKmBC,EALnB,OAMiC5kB,mBAAS,IAN1C,mBAMM0O,EANN,KAMiBmW,EANjB,OAOmC7kB,mBAAS,IAP5C,mBAOM6O,EAPN,KAOkBiW,EAPlB,OAS2B9kB,mBAAS,MATpC,mBASM2M,EATN,KAScuC,EATd,OAUyClP,oBAAS,GAVlD,mBAUM+kB,EAVN,KAUqBC,EAVrB,KAYKC,EAAqB/mB,YAAiBumB,GAZ3C,EAc2Bhd,EAC1Bwd,EAAqB,IAAI7mB,YAAUqmB,GAAY,MAD1CS,EAdN,oBAiBKxY,EAAYwY,EACdA,EAAkBjb,MAAMtC,WACxBuE,UAAQ1C,MAAK,qBAAG4D,cAA8BV,UAAU/E,WAE5DlC,qBAAU,WACHwf,GAAuBvY,GAI5BsY,GAAiB,GACjBzY,SAAOC,KACLhG,EACA,IAAIpI,YAAUqmB,GACd,GACA,IAAIrmB,YAAUsO,IAEb2C,MAAK,SAAC1C,GACLuC,EAAUvC,MAEX2C,OAAM,WACL6V,IACAjW,EAAU,SAEXkW,SAAQ,kBAAMJ,GAAiB,OAjBhCG,MAmBD,CAAC3e,EAAYie,EAAU/X,IAE1B,IAAMyY,EAAc,WAClBP,EAAe,MACfC,EAAa,MACbC,EAAc,OAGVO,EAAcnZ,UAAQ1C,MAC1B,SAACwK,GAAD,OACEA,EAAEvH,QAAQ9E,aAAe8c,GAAYzQ,EAAEtH,UAAU/E,aAAe+E,KAE9D4Y,EAAepZ,UAAQ1C,MAC3B,SAACwK,GAAD,OAAOA,EAAEtH,UAAU/E,aAAe+E,KAE9B6Y,GACE,OAAN5Y,QAAM,IAANA,OAAA,EAAAA,EAAQ4B,mBAAR,UACAC,cAAYhF,MAAK,SAACiF,GAAD,OAAWA,EAAMhC,QAAQvE,OAAOyE,EAAO4B,2BADxD,aACA,EACIzI,MAEA0f,GACE,OAAN7Y,QAAM,IAANA,OAAA,EAAAA,EAAQiC,oBAAR,UACAJ,cAAYhF,MAAK,SAACiF,GAAD,OAAWA,EAAMhC,QAAQvE,OAAOyE,EAAOiC,4BADxD,aACA,EACI9I,MAEA2f,GACHV,KACCpY,GACFA,EAAO5F,UAAUY,aAAe8c,GAChCA,GACA/X,GACAiY,IACCY,GAAqB7W,KACrB8W,GAAsB3W,IACvBoW,EA0BIS,EAAY,WAChBP,IACAjW,EAAU,MACVwV,EAAY,MACZ1G,KAGF,OACE,kBAAC,KAAD,CACE3D,MAAO,oBACP6D,QAASA,EACTC,KAnCa,WACf,GAAKsH,EAAL,CAQA,IAAIE,EAAS,CACXlZ,QAASgY,EACT/X,YACA5G,KAAM6e,GAEHY,IACHI,EAAOjX,UAAYA,GAEhB8W,IACHG,EAAO9W,WAAaA,GAEtB2V,EAAkBmB,GAClBD,SAnBEtkB,YAAO,CACLC,QAAS,8CACTG,KAAM,WAgCRokB,OAAQ,MACRxH,SAAUsH,EACVG,cAAe,CAAE/C,UAAW2C,IAE5B,6BACGR,EACC,qCACItY,IAAWoY,GACX,kBAAC,KAAD,CAAKhmB,MAAO,CAAEsZ,aAAc,IAC1B,kBAACiM,GAAD,CAAM9iB,KAAK,UAAX,uBAGHmL,GAAU0Y,GACT,kBAAC,KAAD,CAAKtmB,MAAO,CAAEsZ,aAAc,IAC1B,kBAACiM,GAAD,CAAM9iB,KAAK,WAAX,iBAAoC6jB,EAAYvf,OAGnD6G,IAAW2Y,GACV,kBAAC,KAAD,CAAKvmB,MAAO,CAAEsZ,aAAc,IAC1B,kBAACiM,GAAD,CAAM9iB,KAAK,UAAX,iCAGHmL,GAAU2Y,GAAgBA,EAAalY,YACtC,kBAAC,KAAD,CAAKrO,MAAO,CAAEsZ,aAAc,IAC1B,kBAACiM,GAAD,CAAM9iB,KAAK,WAAX,qCAKN,oCACGijB,IAAaQ,GACZ,kBAAC,KAAD,CAAKlmB,MAAO,CAAEsZ,aAAc,IAC1B,kBAACiM,GAAD,CAAM9iB,KAAK,UAAX,uBAKR,kBAAC,KAAD,CAAKzC,MAAO,CAAEsZ,aAAc,IAC1B,kBAAC,KAAD,CAAK5N,KAAM,IACT,kBAAC,KAAD,CACEqb,YAAY,YACZ3mB,MAAOslB,EACPzC,SAAU,SAAC/Z,GAAD,OAAOyc,EAAYzc,EAAEga,OAAO9iB,QACtCkjB,OAAQ0C,EAAgB,kBAACgB,GAAA,EAAD,MAAsB,SAKpD,kBAAC,KAAD,CAAKhnB,MAAO,CAAEsZ,aAAc,EAAGuE,UAAW,IACxC,kBAAC,KAAD,CAAKnS,KAAM,IACT,kBAAC,KAAD,CACEqb,YAAY,eACZhD,UAAWnW,EACXxN,MAAOwlB,EACP3C,SAAU,SAAC/Z,GAAD,OAAO2c,EAAe3c,EAAEga,OAAO9iB,YAI/C,kBAAC,KAAD,CAAK6mB,OAAQ,CAAC,GAAIjnB,MAAO,CAAEsZ,aAAc,IACvC,kBAAC,KAAD,CAAK5N,KAAM,IACT,kBAAC,KAAD,CACEqb,YAAY,aACZhD,UAAWnW,GAAU4Y,EACrBpmB,MAAOomB,GAAqB7W,EAC5BsT,SAAU,SAAC/Z,GAAD,OAAO4c,EAAa5c,EAAEga,OAAO9iB,UAExCwN,IAAW4Y,GACV,yBAAKxmB,MAAO,CAAE6d,UAAW,IACvB,kBAAC0H,GAAD,CAAM9iB,KAAK,WAAX,4BAIN,kBAAC,KAAD,CAAKiJ,KAAM,IACT,kBAAC,KAAD,CACEqb,YAAY,cACZhD,UAAWnW,GAAU6Y,EACrBrmB,MAAOqmB,GAAsB3W,EAC7BmT,SAAU,SAAC/Z,GAAD,OAAO6c,EAAc7c,EAAEga,OAAO9iB,UAEzCwN,IAAW6Y,GACV,yBAAKzmB,MAAO,CAAE6d,UAAW,IACvB,kBAAC0H,GAAD,CAAM9iB,KAAK,WAAX,+B,4OC1LRykB,GAAqBC,KAArBD,OAAQE,GAAaD,KAAbC,SAEVtR,GAAUC,KAAOC,IAAV,MAUE,SAASqR,KAAa,IAAD,EAO9B7W,KALF5C,EAFgC,EAEhCA,OACAE,EAHgC,EAGhCA,WACAsB,EAJgC,EAIhCA,cACAc,EALgC,EAKhCA,iBACAD,EANgC,EAMhCA,iBAEI5C,EpBhBCH,GAAYzH,QAAO,qBAAG4I,coBQK,EAScpN,oBAAS,GATvB,mBAS3BqmB,EAT2B,KASTC,EATS,OAUctmB,oBAAS,GAVvB,mBAU3BumB,EAV2B,KAUTC,EAVS,KAW5BC,EAAoB5S,KAXQ,EAYE7T,mBAAS,CAC3CmX,OAAQuP,OAAOC,YACf1H,MAAOyH,OAAOE,aAdkB,mBAY3BC,EAZ2B,KAYfC,EAZe,KAiBlCrhB,qBAAU,WACR9B,SAAS0W,MAAQxN,EAAU,UAAMA,EAAN,iBAA6B,UACvD,CAACA,IAEJ,IAAMka,EAAiBpR,mBAEvBlQ,qBAAU,WACR,IAAMuhB,EAAe,WACnBF,EAAc,CACZ3P,OAAQuP,OAAOC,YACf1H,MAAOyH,OAAOE,cAKlB,OADAF,OAAOO,iBAAiB,SAAUD,GAC3B,kBAAMN,OAAOQ,oBAAoB,SAAUF,MACjD,IAEH,IAAM/H,EAAK,OAAG4H,QAAH,IAAGA,OAAH,EAAGA,EAAY5H,MACpBkI,EAAiB,CACrBC,iBAAkB,SAAChP,GAAD,OAAU2O,EAAetQ,QAAU2B,GACrD5C,QAAS/U,uBACP,SAAC4P,GAAD,OAAW0W,EAAetQ,SAAWsQ,EAAetQ,QAAQ,CAAEpG,YAC9D,IAEFoF,OAAQhV,uBACN,SAACiE,GAAD,OAAUqiB,EAAetQ,SAAWsQ,EAAetQ,QAAQ,CAAE/R,WAC7D,KAGE2iB,EAAe5mB,uBAAY,WAC/B,OAAI4lB,EAEA,kBAAC,GAAD,CACE/C,oBAAqB,kBAAMgD,GAAoB,MAG1CrH,EAAQ,IACV,kBAAC,GAAkBkI,GACjBlI,EAAQ,KACV,kBAAC,GAAgBkI,GAEjB,kBAAC,GAAiBA,KAE1B,CAAClI,EAAOkI,EAAgBd,IAuB3B,OACE,oCACE,kBAAC9B,GAAD,CACErG,QAASqI,EACTvI,QAAS,kBAAMwI,GAAoB,IACnChC,kBA1BoB,SAAC8C,GAIzB,GAHmBlZ,GAAeD,GAAeN,MAC/C,SAACmG,GAAD,OAAOA,EAAEvH,QAAQ9E,aAAe2f,EAAa7a,WAG7CrL,YAAO,CACLC,QAAQ,4CACRG,KAAM,cAHV,CAOA,IAAM+lB,EAAgB,sBAAOpZ,GAAP,CAAsBmZ,IAC5CrY,EAAiBsY,GACjBvY,EAAiBsY,EAAa7a,aAe5B,kBAAC,GAAD,KACE,kBAAC,KAAD,CACEsS,MAAM,SACNhgB,MAAO,CAAEyoB,YAAa,EAAGC,aAAc,GACvCzB,OAAQ,IAER,kBAAC,KAAD,KACE,kBAAC0B,GAAD,CACEtb,QAASA,EACTka,oBAAqBA,EACrBR,YAAa,gBACb3X,cAAeA,EACfwZ,qBAxBiB,SAAClb,GAC5B,IAAM8a,EAAmBpZ,EAAc3J,QAAO,SAACwP,GAAD,OAAOA,EAAEvH,UAAYA,KACnEwC,EAAiBsY,OAyBV5a,EACC,kBAAC,KAAD,KACE,kBAAC,KAAD,CACEib,QAAS,kBAAC1E,GAAD,CAAazW,QAASE,EAAO5F,UAAUY,aAChDlG,UAAU,cACV4Y,MAAM,iBACNwN,QAAQ,SAER,kBAACC,GAAA,EAAD,CAAoB/oB,MAAO,CAAE6C,MAAO,eAGtC,KACJ,kBAAC,KAAD,KACE,kBAACmmB,GAAA,EAAD,CACEhpB,MAAO,CAAE6C,MAAO,WAChB0W,QAAS,kBAAMkO,GAAoB,OAGtCC,GAAqBA,EAAkB5mB,OAAS,GAC/C,kBAAC,IAAMgf,SAAP,KACE,kBAAC,KAAD,KACE,kBAAC,KAAD,8FAKF,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAQvG,QAAS,kBAAMgO,GAAqBD,KACzCA,EAAmB,mBAAqB,yBAMlDgB,MAMT,SAASK,GAAT,GAMI,IAAD,IALDtb,EAKC,EALDA,QACA0Z,EAIC,EAJDA,YACAQ,EAGC,EAHDA,oBACAnY,EAEC,EAFDA,cACAwZ,EACC,EADDA,qBACC,EACoCpY,KAA7B5C,EADP,EACOA,OAAQqC,EADf,EACeA,iBAOVgZ,EAAc,SAACzpB,GAAD,OAAOA,EAAEqB,MAAM,KAAK,IAClCqoB,EAAe,SAAC1pB,GAAD,OAAOA,EAAEqB,MAAM,KAAK,IAEnCsoB,EAAc,UAAG9Z,GAAeD,GACnC3E,MACC,SAAC2e,GAAD,OACQ,OAANxb,QAAM,IAANA,OAAA,EAAAA,EAAQF,UAAW0b,EAAe1b,QAAQvE,OAAOyE,EAAOF,mBAH1C,iBAAG,EAKnBA,eALgB,aAAG,EAKV9E,WAEb,OACE,kBAAC,KAAD,CACEygB,YAAU,EACV1jB,KAAM,QACN3F,MAAO,CAAEkgB,MAAO,KAChB6G,YAAaA,GAAe,kBAC5BuC,iBAAiB,OACjBC,SAtBuB,SAACvZ,GAC1BuX,GAAoB,GACpBtX,EAAiBD,IAqBfwZ,WAAY,IACZppB,MAAO+oB,EACPM,aAAc,SAACC,EAAOC,GAAR,aACZ,UAAAA,EAAO5iB,YAAP,eAAa6iB,cAAcC,QAAQH,EAAME,iBAAkB,IAG5Dxa,GAAiBA,EAActO,OAAS,GACvC,kBAACsmB,GAAD,CAAU0C,MAAM,UACb1a,EAAc5J,KAAI,WAAoBgB,GAApB,IAAGkH,EAAH,EAAGA,QAAS3G,EAAZ,EAAYA,KAAZ,OACjB,kBAACmgB,GAAD,CACE9mB,MAAOsN,EACPtO,IAAKsO,EACL3G,KAAMA,EACN/G,MAAO,CACL4a,QAAS,OACT3X,gBAAiBuD,EAAI,IAAM,EAAI,kBAAoB,OAGrD,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAK2R,KAAK,QAAQpR,GACjBoiB,IAAmBzb,GAClB,kBAAC,KAAD,KACE,kBAAC8O,GAAA,EAAD,CACEjD,QAAS,SAACrQ,GACRA,EAAE6gB,kBACF7gB,EAAE8gB,YAAYC,2BACdrB,GAAwBA,EAAqBlb,aAU/D,kBAAC0Z,GAAD,CAAU0C,MAAM,WACbzc,EACEkE,MAAK,SAAC/R,EAAGgS,GAAJ,MACqB,SAAzB0X,EAAa1pB,EAAEuH,OAA6C,SAAzBmiB,EAAa1X,EAAEzK,OAC7C,EACwB,SAAzBmiB,EAAa1pB,EAAEuH,OACU,SAAzBmiB,EAAa1X,EAAEzK,MACf,EACA,KAELwK,MAAK,SAAC/R,EAAGgS,GAAJ,OACJyX,EAAYzpB,EAAEuH,MAAQkiB,EAAYzX,EAAEzK,OAC/B,EACDkiB,EAAYzpB,EAAEuH,MAAQkiB,EAAYzX,EAAEzK,MACpC,EACA,KAELvB,KAAI,WAAgCgB,GAAhC,IAAGkH,EAAH,EAAGA,QAAS3G,EAAZ,EAAYA,KAAMsH,EAAlB,EAAkBA,WAAlB,OACH,kBAAC6Y,GAAD,CACE9mB,MAAOsN,EAAQ9E,WACfxJ,IAAKsO,EACL3G,KAAMA,EACN/G,MAAO,CACL4a,QAAS,OACT3X,gBAAiBuD,EAAI,IAAM,EAAI,kBAAoB,OAGpDO,EATH,IASUsH,EAAa,gBAAkB,WAQrD,IAAM6b,GAAwB,SAAC,GAA6B,IAA3B3F,EAA0B,EAA1BA,oBAC/B,OACE,oCACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAKpM,KAAK,QACR,kBAACmM,GAAD,CACEC,oBAAqBA,QAQ3B4F,GAAe,SAAC,GAA2C,IAAzC9B,EAAwC,EAAxCA,iBAAkB5R,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,OACjD,OACE,kBAAC,KAAD,CACE1W,MAAO,CACLkkB,UAAW,QACXkG,SAAU,WAGZ,kBAAC,KAAD,CAAKjS,KAAK,OAAOnY,MAAO,CAAEoY,OAAQ,OAAQyC,QAAS,SACjD,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAK1C,KAAM,QAASnY,MAAO,CAAEoY,OAAQ,SACnC,kBAACnG,GAAD,CAAWuE,aAAa,EAAOC,QAASA,EAASC,OAAQA,IACzD,kBAAC,GAAD,CAAaF,aAAa,KAE5B,kBAAC,KAAD,CACE2B,KAAK,QACLnY,MAAO,CAAEoY,OAAQ,OAAQyC,QAAS,OAAQkI,cAAe,WAEzD,kBAACnC,GAAD,CAAWC,kBAAmBwH,IAC9B,kBAAC1I,GAAD,SAMF0K,GAAc,SAAC,GAA2C,IAAzChC,EAAwC,EAAxCA,iBAAkB5R,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,OAChD,OACE,oCACE,kBAAC,KAAD,CACE1W,MAAO,CACLoY,OAAQ,UAGV,kBAAC,KAAD,CAAKD,KAAK,OAAOnY,MAAO,CAAEoY,OAAQ,OAAQyC,QAAS,SACjD,kBAAC5I,GAAD,CACEuE,aAAa,EACbrE,MAAO,GACPsE,QAASA,EACTC,OAAQA,KAGZ,kBAAC,KAAD,CAAKyB,KAAK,OAAOnY,MAAO,CAAEoY,OAAQ,OAAQyC,QAAS,SACjD,kBAAC,GAAD,CAAarE,aAAa,KAE5B,kBAAC,KAAD,CACE2B,KAAK,QACLnY,MAAO,CAAEoY,OAAQ,OAAQyC,QAAS,OAAQkI,cAAe,WAEzD,kBAACnC,GAAD,CAAWC,kBAAmBwH,IAC9B,kBAAC1I,GAAD,QAGJ,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAKxH,KAAK,QACR,kBAAC,GAAD,UAOJmS,GAAgB,SAAC,GAA2C,IAAzCjC,EAAwC,EAAxCA,iBAAkB5R,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,OAClD,OACE,oCACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAK6T,GAAI,GAAIC,GAAI,GAAIxqB,MAAO,CAAEoY,OAAQ,OAAQyC,QAAS,SACrD,kBAAC+F,GAAD,CAAW5gB,MAAO,CAAEmY,KAAM,GAAK0I,kBAAmBwH,KAEpD,kBAAC,KAAD,CAAKkC,GAAI,GAAIC,GAAI,IACf,kBAAC7K,GAAD,QAGJ,kBAAC,KAAD,CACE3f,MAAO,CACLoY,OAAQ,UAGV,kBAAC,KAAD,CAAKmS,GAAI,GAAIC,GAAI,GAAIxqB,MAAO,CAAEoY,OAAQ,OAAQyC,QAAS,SACrD,kBAAC5I,GAAD,CAAWuE,aAAa,EAAMC,QAASA,EAASC,OAAQA,KAE1D,kBAAC,KAAD,CAAK6T,GAAI,GAAIC,GAAI,GAAIxqB,MAAO,CAAEoY,OAAQ,OAAQyC,QAAS,SACrD,kBAAC,GAAD,CAAarE,aAAa,MAG9B,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAK2B,KAAK,QACR,kBAAC,GAAD,UC7XK,SAASsS,KAAkB,IAAD,ErBmiBlC,WAAuC,IAAD,EACb/f,IAAtBV,EADmC,EACnCA,UAAWF,EADwB,EACxBA,OAEbrC,EAAaY,IACbqiB,EAAatd,KAJwB,4CAM3C,sCAAA5N,EAAA,yDACM2U,EAAS,GACRnK,EAFP,yCAGWmK,GAHX,qBAOqBuW,GAPrB,aAAAlrB,EAAA,oDAAAA,EAAA,yDAOOmrB,EAPP,QAQY/c,GARZ,EAQmC+c,GAAvB/c,OAAQE,EARpB,EAQoBA,WACXF,EATT,4CAUauG,IAVb,uBAYqCvG,EAAO4E,+BACtC/K,EACAqC,EAAO9B,WAdb,UAYUyG,EAZV,OAgBUqO,EAAoBrO,GAAsBA,EAAmB,GAhBvE,6CAkBa0F,IAlBb,yBAoB+B1U,QAAQ0G,IAAI,CACrCyH,EAAOgd,SAASnjB,GAChBmG,EAAOid,SAASpjB,KAtBtB,oCAoBWwJ,EApBX,KAoBiBG,EApBjB,KAwBU0Z,EAAkB,sBAAI7Z,GAAJ,YAAaG,IAClC3L,QAAO,SAACwW,GACP,OAAOA,EAAM8O,kBAAkB5hB,OAAO2T,EAAkB9U,cAEzDxC,KAAI,SAACyW,GACJ,OAAO,2BAAKA,GAAZ,IAAmBnO,kBAEvBqG,EAASA,EAAOnH,OAAO8d,GA/B3B,yXAkCS3W,GAlCT,iEAN2C,sBA2C3C,OAAO9N,GA3CoC,4CA6CzCsC,YACE,6BACAqB,EACAvC,EACAqC,EACA4gB,GAEF,CAAEjnB,gBApdyB,MqBlIRunB,GAAdtc,EADgC,oBAEvC,OACE,kBAACuH,GAAD,CAAiBjW,MAAO,CAAEmY,KAAM,EAAGkG,WAAY,KAC7C,kBAACxC,GAAD,CAAgBnN,WAAYA,KCNnB,SAASuc,GAAT,GAGX,IAAD,IAFDtkB,cAEC,SADDukB,EACC,EADDA,eAcA,OACE,kBAAC9Q,GAAD,CACEG,WAAW,cACXF,WAAY6Q,EACZ5Q,QAhBY,CACd,CACEgB,MAAO,OACPC,UAAW,MACXnc,IAAK,OAEP,CACEkc,MAAO,iBACPC,UAAW,SACXnc,IAAK,WAQLob,YAAY,EACZC,SAAU9T,ICjBD,SAASwkB,GAAT,GAA6C,IAApBC,EAAmB,EAAnBA,gBAChC3jB,EAAaY,IACXyB,EAAWY,IAAXZ,OAFiD,4CAIzD,WAA6BuC,GAA7B,qBAAA7M,EAAA,sEAGMoO,EAIEvB,EAJFuB,OACAkP,EAGEzQ,EAHFyQ,kBACAzJ,EAEEhH,EAFFgH,oBACAL,EACE3G,EADF2G,qBANN,SAQiBqI,aAAY,CACvBzN,SACAc,WAAYoO,EACZrV,aACAqC,SACAuJ,sBACAL,yBAdN,wEAiBI3Q,YAAO,CACLC,QAAS,uBACTC,YAAa,KAAED,QACfG,KAAM,UApBZ,0DAJyD,sBA6BzD,IAAM6X,EAAU,CACd,CACEgB,MAAO,SACPC,UAAW,MACXnc,IAAK,OAEP,CACEkc,MAAO,SACPC,UAAW,SACXnc,IAAK,UAEP,CACEkc,MAAO,YACPC,UAAW,YACXnc,IAAK,aAEP,CACEA,IAAK,SACLoc,OAAQ,SAACnP,GAAD,OACN,yBAAKrM,MAAO,CAAEsY,UAAW,UACvB,kBAAC,KAAD,CACEmD,OAAK,EACLzb,MAAO,CAAEka,YAAa,IACtBX,QAAS,kBApDsC,2CAoDhCmC,CAAcrP,KAH/B,cAWR,OACE,kBAAC+N,GAAD,CACEG,WAAW,cACXF,WAAY+Q,EACZ9Q,QAASA,EAAQ9U,KAAI,SAACrB,GAAD,mBAAC,eACjBA,GADgB,IAEnB/E,IAAI,GAAD,OAAK+E,EAAKyJ,QAAV,OAAmBzJ,EAAK+P,WAE7BsG,YAAY,I,IClEV0D,GAAYC,KAAZD,QAEO,SAASmN,KAAgB,IAAD,ExB2oBhC,WAA2C,IAAD,EACjB3gB,IAAtBV,EADuC,EACvCA,UAAWF,EAD4B,EAC5BA,OAEbrC,EAAaY,IACbqiB,EAAatd,KAJ4B,4CAM/C,sCAAA5N,EAAA,yDACMyb,EAAW,GACVjR,EAFP,yCAGWiR,GAHX,qBAOqByP,GAPrB,aAAAlrB,EAAA,8CAAAA,EAAA,yDAOOmrB,EAPP,QAQY/c,GARZ,EAQmC+c,GAAvB/c,OAAQE,EARpB,EAQoBA,WACXF,EATT,4CAUaqN,IAVb,UAYU1L,EAAezB,EAAWwd,SAAS,MAAQxd,EAAWjN,MAAM,KAAK,GAClEoa,EAASxQ,MAAK,SAACsT,GAAD,OAAaA,EAAQ7J,OAAS3E,KAbrD,iCAcgC+E,GACxB1G,EACAnG,EACAqC,GACA,GAlBR,OAcY+X,EAdZ,OAoBM5G,EAASpN,KAAK,CACZzO,IAAKmQ,EACL2E,KAAM3E,EACNzF,OAAQ+X,IAvBhB,WA0BUjS,EACJ9B,EAAWwd,SAAS,MAAQxd,EAAWjN,MAAM,KAAK,GAC/Coa,EAASxQ,MAAK,SAACsT,GAAD,OAAaA,EAAQ7J,OAAStE,KA5BrD,kCA6BiC0E,GACzB1G,EACAnG,EACAqC,GACA,GAjCR,QA6BY8X,EA7BZ,OAmCM3G,EAASpN,KAAK,CACZzO,IAAKwQ,EACLsE,KAAMtE,EACN9F,OAAQ8X,IAtChB,yXA2CS3G,GA3CT,iEAN+C,sBAoD/C,OAAO5U,GApDwC,4CAsD7CsC,YACE,iCACAqB,EACAvC,EACAqC,EACA4gB,GAEF,CAAEjnB,gBA5kByB,MwBxHzB8nB,GAJiC,mBAEnCL,EAFmC,KAGnCM,EAHmC,OxButBhC,WAAqD,IAAD,EAC3B9gB,IAAtBV,EADiD,EACjDA,UAAWF,EADsC,EACtCA,OAEbrC,EAAaY,IACbqiB,EAAatd,KAJsC,4CAMzD,sCAAA5N,EAAA,yDACMwP,EAAW,GACVhF,EAFP,yCAGWgF,GAHX,qBAOqB0b,GAPrB,aAAAlrB,EAAA,kDAAAA,EAAA,yDAOOmrB,EAPP,QAQY/c,GARZ,EAQmC+c,GAAvB/c,OAAQE,EARpB,EAQoBA,WACXF,EATT,4CAUaoB,IAVb,uBAYoCpB,EAAO4E,+BACrC/K,EACAqC,EAAO9B,WAdb,UAYUyjB,EAZV,oFAmBuC7d,EAAO2G,8BACxC9M,EACAqC,EAAO9B,WArBb,eAmBU0jB,EAnBV,iBAuBwC9d,EAAO4G,+BACzC/M,EACAqC,EAAO9B,WAzBb,QAuBU2jB,EAvBV,OA4BUpc,EAAezB,EAAWwd,SAAS,MAAQxd,EAAWjN,MAAM,KAAK,GACjE+O,EACJ9B,EAAWwd,SAAS,MAAQxd,EAAWjN,MAAM,KAAK,GAE9C2jB,EAA2B,GACjCiH,EAAkBlmB,SAAQ,SAACuX,GACzB,IAAM2H,GACa,OAAjB3H,QAAiB,IAAjBA,OAAA,EAAAA,EAAmBnO,kBAAnB,OACAmO,QADA,IACAA,OADA,EACAA,EAAmB/I,gBACnBnG,EAAO0F,oBACLwJ,EAAkBnO,eAAeyF,IAC/B0I,EAAkB/I,gBAGlB2Q,GACa,OAAjB5H,QAAiB,IAAjBA,OAAA,EAAAA,EAAmBjO,mBAAnB,OACAiO,QADA,IACAA,OADA,EACAA,EAAmB7I,iBACnBrG,EAAO0F,oBACLwJ,EAAkBjO,gBAAgBuF,IAChC0I,EAAkB7I,iBAGlB0Q,GACa,OAAjB7H,QAAiB,IAAjBA,OAAA,EAAAA,EAAmB/I,gBACnBnG,EAAO0F,oBAAoBwJ,EAAkB/I,eACzC6Q,GACa,OAAjB9H,QAAiB,IAAjBA,OAAA,EAAAA,EAAmB7I,iBACnBrG,EAAO0F,oBAAoBwJ,EAAkB7I,gBAC/CuQ,EAAyB3W,KAAK,CAC5BD,OAAQE,EACRoG,KAAM3E,EACNnQ,IAAKmQ,EACL4E,OAAQsQ,EACRpQ,UAAWsQ,EACX7H,kBAAmBA,EACnBzJ,oBAAqBqY,GAAwBA,EAAqB,GAClE1Y,qBACE2Y,GAAyBA,EAAsB,KAEnDnH,EAAyB3W,KAAK,CAC5BD,OAAQE,EACRoG,KAAMtE,EACNxQ,IAAKwQ,EACLuE,OAAQuQ,EACRrQ,UAAWuQ,EACX9H,kBAAmBA,EACnBzJ,oBAAqBqY,GAAwBA,EAAqB,GAClE1Y,qBACE2Y,GAAyBA,EAAsB,QAGrD3c,EAAWA,EAAShC,OAAOwX,GA/E/B,ocAkFSxV,GAlFT,iEANyD,sBA2FzD,OAAO3I,GA3FkD,4CA6FvDsC,YACE,oCACAqB,EACAvC,EACAqC,EACA4gB,GAEF,CAAEjnB,gBA/rByB,MwBpHzBmoB,GARiC,mBAMnCR,EANmC,KAOnCS,EAPmC,KAUrC,OACE,kBAAC5V,GAAD,CAAiBjW,MAAO,CAAEmY,KAAM,EAAGkG,WAAY,KAC7C,kBAAC,KAAD,CAAME,iBAAiB,kBACrB,kBAAC,GAAD,CAASC,IAAI,kBAAkBpf,IAAI,kBACjC,kBAAC6rB,GAAD,CACEtkB,OAAQ6kB,EACRN,eAAgBA,KAGpB,kBAAC,GAAD,CAAS1M,IAAI,kBAAkBpf,IAAI,kBACjC,kBAAC+rB,GAAD,CACExkB,OAAQklB,EACRT,gBAAiBA,O,2fCxB7B,IAAMtV,GAAUC,KAAOC,IAAV,MAQP8V,GAAc/V,KAAOC,IAAV,MAYF,SAAS+V,KAAU,IAAD,IACyBrhB,IAAhDV,EADuB,EACvBA,UAAWF,EADY,EACZA,OAAQF,EADI,EACJA,YAAae,EADT,EACSA,YADT,EAEGnC,IAA1BxB,EAFuB,EAEvBA,SAAUQ,EAFa,EAEbA,YACZwkB,EAAWC,eACXC,EAAUC,eAEVnkB,EAAS,OAAG8B,QAAH,IAAGA,GAAH,UAAGA,EAAQ9B,iBAAX,aAAG,EAAmBY,WAE/BwjB,EAAc1qB,uBAClB,SAACwH,GACCgjB,EAAQre,KAAK3E,EAAE9J,OAEjB,CAAC8sB,IAGH,OACE,kBAAC,GAAD,KACE,kBAACJ,GAAD,KACE,yBAAKO,IAAKC,KAAMC,IAAI,GAAGhT,QAAS,kBAAM2S,EAAQre,KAAK,QAClD,SAEH,kBAAC,KAAD,CACE2e,KAAK,aACLjT,QAAS6S,EACTK,aAAc,CAACT,EAASU,UACxB1sB,MAAO,CACL2sB,aAAc,OACd1pB,gBAAiB,cACjB4X,QAAS,OACTE,WAAY,WACZ5C,KAAM,IAGR,kBAAC,KAAKyU,KAAN,CAAWxtB,IAAI,KAAf,UAEF,6BACE,kBAAC,KAAD,CACEmqB,SAAU/hB,EACVpH,MAAO4G,EACPhH,MAAO,CAAEka,YAAa,IAErBpT,EAAUtB,KAAI,gBAAGuB,EAAH,EAAGA,KAAMC,EAAT,EAASA,SAAT,OACb,kBAAC,KAAOkgB,OAAR,CAAe9mB,MAAO4G,EAAU5H,IAAK4H,GAClCD,QAKT,6BACE,kBAAC,KAAD,CAAQwiB,SAAU5e,EAAavK,MAAOwJ,GACnCJ,EAAiBhE,KAAI,gBAAGuB,EAAH,EAAGA,KAAM0C,EAAT,EAASA,IAAT,OACpB,kBAAC,KAAOyd,OAAR,CAAe9mB,MAAOqJ,EAAKrK,IAAKqK,GAC7B1C,QAKT,6BACE,kBAAC,KAAD,CACEtE,KAAK,OACLkD,KAAK,QACL4T,QAASvP,EAAYF,EAAOS,WAAaT,EAAO+iB,QAChD7sB,MAAO,CAAE6C,MAAO,YAEhB,kBAACiqB,GAAA,EAAD,MACE9iB,EAA+B,aAAnB,kBAEfA,GACC,kBAAC,KAAD,CACE6e,QAAS,kBAAC1E,GAAD,CAAazW,QAAS1F,IAC/BtF,UAAU,cACV4Y,MAAM,oBACNwN,QAAQ,SAER,kBAACC,GAAA,EAAD,CAAoB/oB,MAAO,CAAE6C,MAAO,gB,cCxGnCkqB,GAIF,6BAJEA,GAKD,4BALCA,GAMH,mCANGA,GAOG,4BAPHA,GAQS,+CARTA,GASE,yBCLPC,GAAWC,KAAXD,OACAE,GAAkBC,KAAlBD,cAEFE,GAAiB,CACrB,CACE7qB,YAAa,4BACb8qB,KAAMN,IAER,CAAExqB,YAAa,UAAW8qB,KAAMN,IAChC,CAAExqB,YAAa,WAAY8qB,KAAMN,IACjC,CAAExqB,YAAa,SAAU8qB,KAAMN,IAC/B,CAAExqB,YAAa,gBAAiB8qB,KAAMN,IACtC,CAAExqB,YAAa,iBAAkB8qB,KAAMN,KAG5BO,GAAe,WAC1B,IAAM9W,GAAe0W,KAAgBK,GAErC,OACE,kBAACP,GAAD,CACEhtB,MAAO,CACLoY,OAAQ,OACR6H,cAAe,GACf5B,WAAY,KAGd,kBAAC,KAAD,CAAK2B,MAAM,SAASiH,OAAQ,CAAC,GAAI,KAC7BzQ,GACA,oCACE,kBAAC,KAAD,CAAK2B,KAAK,SACTiV,GAAe5nB,KAAI,SAACgoB,EAAMxV,GACzB,OACE,kBAAC,KAAD,CAAK5Y,IAAK4Y,EAAQ,IAChB,kBAACsH,GAAA,EAAD,CAAM3c,UAAQ,EAACC,GAAI4qB,EAAKH,MACrBG,EAAKjrB,kBAOlB,kBAAC,KAAD,CAAK4V,KAAK,YCzCVsV,GAAoBR,KAApBQ,OAAQC,GAAYT,KAAZS,QAED,SAASC,GAAT,GAAoC,IAAbpmB,EAAY,EAAZA,SACpC,OACE,kBAAC,IAAMuY,SAAP,KACE,kBAAC,KAAD,CACE9f,MAAO,CAAE6a,QAAS,OAAQqJ,UAAW,QAASnB,cAAe,WAE7D,kBAAC0K,GAAD,CAAQztB,MAAO,CAAE4a,QAAS,EAAGsJ,UAAW,GAAI9L,OAAQ,UAClD,kBAAC2T,GAAD,OAEF,kBAAC2B,GAAD,CAAS1tB,MAAO,CAAEmY,KAAM,IAAM5Q,GAC9B,kBAAC,GAAD,Q,oNCFAge,GAAgB/P,KAAhB+P,KAAMhQ,GAAUC,KAAVD,MAERO,GAAUC,KAAOC,IAAV,MAQE,SAAS4X,KACtB,IA6BIC,EACAC,EA9BErmB,EAAaY,IADuB,EAEZqC,IAAtBZ,EAFkC,EAElCA,OAAQE,EAF0B,EAE1BA,UAF0B,EAGJ+jB,GACpC,WACA,kBAAC,GAAD,+BAC0B,IACxB,kBAAC,GAAD,CAAMtrB,KAAK,aAAX,6BAC6B,kBAAC,GAAD,CAAMA,KAAK,YAAYurB,MAAI,GAA3B,gDAD7B,MAIF,sGAXwC,mBAGnCC,EAHmC,KAGpBC,EAHoB,OAaFH,GACtC,YACA,kBAAC,GAAD,gCAC2B,IACzB,kBAAC,GAAD,CAAMtrB,KAAK,aAAX,8BAC8B,kBAAC,GAAD,CAAMA,KAAK,YAAYurB,MAAI,GAA3B,gDAD9B,MAIF,iHArBwC,mBAanCG,EAbmC,KAanBC,EAbmB,OAuBZntB,mBAAS,KAvBG,mBAuBnCotB,EAvBmC,KAuB1BC,EAvB0B,OAwBVrtB,mBAAS,QAxBC,mBAwBnCmY,EAxBmC,KAwBzBmV,EAxByB,KAyBpCC,EAAerhB,UAAQ1C,MAAK,qBAAG4D,cAA8BV,UAzBzB,EA0BN1M,oBAAS,GA1BH,mBA0BnCugB,EA1BmC,KA0BvBC,EA1BuB,OA4BFxgB,mBAAS,MA5BP,mBA4BnCwtB,EA5BmC,KA4BrBC,EA5BqB,KAgCtCR,GAAgBvL,WAAW0L,GAAW,IACxCR,EAAcvtB,KAAKG,MAAM,YAAMytB,EAAa7tB,UAAWsiB,WAAW0L,IAC9DD,GAAiBzL,WAAWvJ,GAAY,IAC1C0U,EAAextB,KAAKG,MAClBkiB,WAAW0L,GAAX,SACE,GAAMD,EAAc/tB,UACpBsiB,WAAWvJ,MAKnB,IAAMsN,EACJ1c,KACEkkB,KACAE,KACAP,KACAC,EAhDsC,4CAkD1C,4BAAAtuB,EAAA,yDACOknB,EADP,wDAIEjF,GAAc,GAJhB,kBAMgCkN,aAAW,CACrClnB,aACAqC,SACA8kB,SAAUV,EAAaxgB,QACvBmhB,UAAWT,EAAc1gB,QACzBmgB,cACAC,eACAU,iBAbN,OAMUxe,EANV,OAeI0e,EAAgB1e,GAfpB,kDAiBIzL,QAAQC,KAAR,MACAnC,YAAO,CACLC,QAAS,6BAA+B,KAAEA,QAC1CG,KAAM,UApBZ,yBAuBIgf,GAAc,GAvBlB,8EAlD0C,sBA6E1C,OACE,kBAAC,GAAD,KACE,kBAACxL,GAAD,KACE,kBAAC,GAAD,CAAON,MAAO,GAAd,mBACA,kBAAC,KAAD,CACEmZ,SAAU,CAAEpjB,KAAM,IAClBqjB,WAAY,CAAErjB,KAAM,IACpBsjB,OAAQ,WACRC,SArFkC,4CAuFjChB,EACAE,EACD,kBAAC,KAAKvB,KAAN,CACE9C,MACE,kBAAC,KAAD,CAASxO,MAAM,sFAAf,sBACqB,kBAAC,GAAD,CAAM7Y,KAAK,aAAX,2BAGvBsE,KAAK,UACLmoB,aAAa,IACbC,eACEjB,GAAgBE,EACZP,EACE,UACA,QACF,KAENuB,YAAalB,GAAgBE,GAE7B,kBAAC,KAAD,CACEhuB,MAAOiuB,EACPpL,SAAU,SAAC/Z,GAAD,OAAOolB,EAAWplB,EAAEga,OAAO9iB,MAAMivB,SAC3C5sB,KAAK,SACLiC,IAAI,IACJ8e,KAAK,SAGT,kBAAC,KAAKoJ,KAAN,CACE9C,MACE,kBAAC,KAAD,CAASxO,MAAM,oGAAf,aACY,kBAAC,GAAD,CAAM7Y,KAAK,aAAX,mCAGdsE,KAAK,WACLmoB,aAAa,OACbC,eACEjB,GAAgBE,EACZN,EACE,UACA,QACF,KAENsB,YAAalB,GAAgBE,GAE7B,kBAAC,KAAD,CACEhuB,MAAOgZ,EACP6J,SAAU,SAAC/Z,GAAD,OAAOqlB,EAAYrlB,EAAEga,OAAO9iB,MAAMivB,SAC5C5sB,KAAK,SACLiC,IAAI,IACJ8e,KAAK,SAGT,kBAAC,KAAKoJ,KAAN,CAAW9C,MAAM,IAAIwF,OAAO,GAC1B,kBAAC,KAAD,CACE7sB,KAAK,UACL8sB,SAAS,SACTxL,UAAW2C,EACXjM,QAAS+G,GAERxX,EAAY,SAAW,8BAK/BykB,EACC,kBAACxY,GAAD,KACE,kBAAC,GAAD,4BAA2BwY,EAAa7lB,aAExC,MAKV,SAASmlB,GAAahnB,EAAM+iB,EAAO0F,GAAU,IAAD,EACZvuB,mBAAS,IADG,mBACnCyM,EADmC,KAC1B+hB,EAD0B,OAEZ/mB,EAC5BvJ,YAAiBuO,GAAW,IAAIrO,YAAUqO,GAAW,MAHb,mBAEnC5E,EAFmC,KAEtBnC,EAFsB,KAMtCwoB,EAAiB,KACjBC,GAAc,EACdM,EAAO,KACPC,EAAW,KACf,GAAIjiB,EAEF,GADA0hB,GAAc,EACVtmB,EACF,GACEA,EAAYoC,MAAM/B,OAAO8J,oBAAkBtH,mBACf,KAA5B7C,EAAY3E,KAAKrD,OACjB,CACA,IAAI8uB,E9B7KL,SAA4BzrB,GAAO,IAAD,EACP2G,EAAYE,OAAO7G,GACnD,MAAO,CAAE9D,SAF8B,EACjCA,SACawvB,YAFoB,EACvBA,a8B4KGC,CAAmBhnB,EAAY3E,MACxCyrB,EAAOC,aACTV,EAAiB,UACjBQ,EAAW,CACTjiB,QAAS,IAAIrO,YAAUqO,GACvBrN,SAAUuvB,EAAOvvB,YAGnB8uB,EAAiB,QACjBO,EAAO,yBAGTP,EAAiB,QACjBO,EAAO,gCAEAvwB,YAAiBuO,KAAa/G,EACvCwoB,EAAiB,WAEjBA,EAAiB,QACjBO,EAAO,0BAiCX,MAAO,CA5BL,kBAAC,KAAK9C,KAAN,CACE9C,MACE,kBAAC,KAAD,CACExO,MACE,oCACGkU,EADH,2CACoD,IAClD,kBAAClQ,GAAA,EAAD,CAAM3c,UAAQ,EAACC,GAAG,qBAAlB,aAFF,MASDknB,GAGL/iB,KAAMA,EACNooB,eAAgBA,EAChBC,YAAaA,EACbM,KAAMA,GAEN,kBAAC,KAAD,CACEtvB,MAAOsN,EACPuV,SAAU,SAAC/Z,GAAD,OAAOumB,EAAWvmB,EAAEga,OAAO9iB,MAAMivB,YAKlCM,GCrPV,SAASI,KACd,OACE,kBAAC,KAAD,CAAYC,SAAU,KACpB,kBAAC,KAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,KACjC,kBAAC,KAAD,CAAOH,OAAK,EAACC,KAAK,UAAUC,UAAWE,KACvC,kBAAC,KAAD,CAAOJ,OAAK,EAACC,KAAK,YAAYC,UAAWG,KACzC,kBAAC,KAAD,CAAOL,OAAK,EAACC,KAAK,oBAChB,kBAACvC,GAAD,KACE,kBAACC,GAAD,SAOV,SAASwC,KACP,OACE,kBAACzC,GAAD,KACE,kBAACtG,GAAD,OAKN,SAASgJ,KACP,OACE,kBAAC1C,GAAD,KACE,kBAAClD,GAAD,OAKN,SAAS6F,KACP,OACE,kBAAC3C,GAAD,KACE,kBAACtC,GAAD,OChCS,SAASkF,KACtB,OACE,kBAAC,WAAD,CAAUC,SAAU,kBAAM,kBAAC,KAAD,CAAM7qB,KAAK,YACnC,kBAAC0P,GAAD,MACA,kBAAC,GAAD,KACE,kBAAC/N,EAAD,KACE,kBAACyI,GAAD,KACE,kBAACpG,EAAD,KACE,kBAAC,WAAD,CAAU6mB,SAAU,kBAAM,kBAAC,KAAD,CAAM7qB,KAAK,YACnC,kBAACoqB,GAAD,YCPIU,QACW,cAA7B9I,OAAOqE,SAAS0E,UAEe,UAA7B/I,OAAOqE,SAAS0E,UAEhB/I,OAAOqE,SAAS0E,SAASC,MACvB,2DCZNC,IAASpV,OACP,kBAAC,IAAMqV,WAAP,KACE,kBAAC,GAAD,OAEFjsB,SAASksB,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3gB,MAAK,SAAC4gB,GACLA,EAAaC,gBAEd5gB,OAAM,SAACtE,GACN1H,QAAQ0H,MAAMA,EAAM3J,a,yREzHrB,SAAe8uB,EAAtB,kC,4CAAO,qCAAA5xB,EAAA,6DACLiI,EADK,EACLA,WACAqC,EAFK,EAELA,OACAunB,EAHK,EAGLA,cAEMC,EAAa,IAAIvpB,UALlB,KAMewpB,gBANf,KAOSznB,EAAO9B,UAPhB,KAQespB,EAAWtpB,UAR1B,SASaP,EAAW+pB,kCAAkC,KAT1D,+BAWQve,oBAAkBtH,iBAX1B,MAOH8lB,WAPG,KAQHC,iBARG,KASHnlB,SATG,KAUHolB,MAAO,IACPhkB,UAXG,OAMCikB,EAND,KAM6BC,cAN7B,iBAaOzsB,IACV6N,oBAAkB6e,kBAAkB,CAClCzlB,QAASilB,EAAWtpB,UACpBiD,KAAMomB,EACNnmB,MAAOpB,EAAO9B,aAjBb,kBAoBE,CACL4pB,cACAG,OAAQT,EACRI,iBAAkBJ,EAAWtpB,YAvB1B,6C,sBA2BA,SAAeqT,EAAtB,kC,4CAAO,6DAAA7b,EAAA,yDACLoO,EADK,EACLA,OACAc,EAFK,EAELA,WACAjH,EAHK,EAGLA,WACAqC,EAJK,EAILA,OACAuJ,EALK,EAKLA,oBACAL,EANK,EAMLA,qBAGGpF,GACA9D,GACArC,GACAiH,IACC2E,GAAwBL,GAbvB,uBAeH3Q,YAAO,CAAEC,QAAS,kBAff,6BAqBD0vB,EArBC,OAqB2B3e,QArB3B,IAqB2BA,OArB3B,EAqB2BA,EAAqBjH,OACjD6lB,EAtBC,OAsB4Bjf,QAtB5B,IAsB4BA,OAtB5B,EAsB4BA,EAAsB5G,OAElD4lB,EAxBA,iCAyBkBZ,EAA8B,CACjD3pB,aACAqC,SACAunB,cAAezjB,EAAO4B,kBA5BrB,OAyBGrD,EAzBH,OA8BH6lB,EAAyB,OAAG7lB,QAAH,IAAGA,OAAH,EAAGA,EAAQulB,iBACpCQ,EAAwB,OAAG/lB,QAAH,IAAGA,OAAH,EAAGA,EAAQylB,YACnCO,EAAmB,OAAGhmB,QAAH,IAAGA,OAAH,EAAGA,EAAQ4lB,OAhC3B,WAkCAE,EAlCA,kCAmCkBb,EAA8B,CACjD3pB,aACAqC,SACAunB,cAAezjB,EAAOiC,mBAtCrB,QAmCG1D,EAnCH,OAwCH8lB,EAA0B,OAAG9lB,QAAH,IAAGA,OAAH,EAAGA,EAAQulB,iBACrCQ,EAAwB,OAAG/lB,QAAH,IAAGA,OAAH,EAAGA,EAAQylB,YACnCO,EAAmB,OAAGhmB,QAAH,IAAGA,OAAH,EAAGA,EAAQ4lB,OA1C3B,eA4CqB,KACtBnkB,EAAOwkB,qBA7CN,UAqEKxkB,EAAOykB,2BACf5qB,EACAiH,EACAsjB,EACAC,EA7BwB,MA5CrB,wBAmEUK,EAnEV,EAmEHV,YACSW,EApEN,EAoEHC,QASEZ,EAAca,EAAkB,CAClCP,EACAI,IAEEE,EAAUL,EAAmB,sBACzBI,GADyB,CACLJ,IACxBI,EAnFC,UAqFQG,EAAgB,CAC3Bd,cACAY,UACA1oB,SACArC,aACAkrB,eAAgB,sBA1Fb,sF,sBA8FA,SAAexW,EAAtB,kC,4CAAO,WAA2ByK,GAA3B,SAAApnB,EAAA,+EACEozB,EAAa,2BAAKhM,GAAN,IAAczS,OAAQ,CAACyS,EAAO3K,WAD5C,4C,sBAIA,SAAe2W,EAAtB,kC,4CAAO,qCAAApzB,EAAA,6DAA8BoO,EAA9B,EAA8BA,OAAQ9D,EAAtC,EAAsCA,OAAQrC,EAA9C,EAA8CA,WAAY0M,EAA1D,EAA0DA,OACzDyd,EAAchkB,EAAOilB,2BAA2B,GACtD1e,EAAO5O,SAAQ,SAAC0W,GACd2V,EAAYxsB,IACVwI,EAAOklB,2BAA2BrrB,EAAYqC,EAAO9B,UAAWiU,OAGpE2V,EAAYxsB,IAAIwI,EAAOilB,2BAA2B,IAP7C,SAQQH,EAAgB,CAC3Bd,cACA9nB,SACArC,aACAkrB,eAAgB,sBAZb,oF,sBAgBA,SAAe9P,EAAtB,kC,4CAAO,qEAAArjB,EAAA,yDACLkU,EADK,EACLA,KACApC,EAFK,EAELA,MACA3L,EAHK,EAGLA,KACAmd,EAJK,EAILA,UACAlV,EALK,EAKLA,OACAnG,EANK,EAMLA,WACAqC,EAPK,EAOLA,OACAuJ,EARK,EAQLA,oBACAL,EATK,EASLA,qBAEI+f,GACI,OAANnlB,QAAM,IAANA,GAAA,UAAAA,EAAQqL,oBAAR,eAAsBC,QAAQxY,YAAgBkN,EAAOqL,kBAArD,OACArL,QADA,IACAA,OADA,EACAA,EAAQqL,cACN+Z,GACI,OAANplB,QAAM,IAANA,GAAA,UAAAA,EAAQwL,gBAAR,eAAkBF,QAAQxY,YAAgBkN,EAAOwL,cAAjD,OACAxL,QADA,IACAA,OADA,EACAA,EAAQwL,UACJ6Z,EAAc,SAACC,EAAK1P,GAAN,OAClBljB,KAAK6yB,IAAKD,EAAM1P,EAAQ,GAAK,MAC7BljB,KAAK6yB,IAAMD,EAAM1P,EAAQ,EAAK,GAAK,OACjC7iB,MAAM2Q,GApBL,uBAqBHjP,YAAO,CAAEC,QAAS,gBAAiBG,KAAM,UArBtC,8BAwBD9B,MAAMgF,GAxBL,wBAyBHtD,YAAO,CAAEC,QAAS,eAAgBG,KAAM,UAzBrC,8BA4BAqH,GAAWA,EAAO9B,UA5BlB,wBA6BH3F,YAAO,CAAEC,QAAS,iBAAkBG,KAAM,UA7BvC,8BAgCAmL,EAhCA,wBAiCHvL,YAAO,CAAEC,QAAS,kBAAmBG,KAAM,UAjCxC,8BAoCAwwB,EAAYttB,EAAMiI,EAAOqL,cApCzB,wBAqCH5W,YAAO,CACLC,QAAQ,gCAAD,OAAkCywB,GACzCtwB,KAAM,UAvCL,gCA2CDkD,EAAOiI,EAAOqL,cA3Cb,wBA4CH5W,YAAO,CAAEC,QAAS,iBAAkBG,KAAM,UA5CvC,8BA+CAwwB,EAAY3hB,EAAO1D,EAAOwL,UA/C1B,wBAgDH/W,YAAO,CACLC,QAAQ,iCAAD,OAAmC0wB,GAC1CvwB,KAAM,UAlDL,gCAsDD6O,EAAQ1D,EAAOwL,UAtDd,wBAuDH/W,YAAO,CAAEC,QAAS,wBAAyBG,KAAM,UAvD9C,8BA0DCyI,EAAQpB,EAAO9B,UAEforB,EAAiB,SAAT1f,EAAkBL,EAAsBL,EA5DjD,wBA8DH3Q,YAAO,CACLC,QAAS,8CACTG,KAAM,UAhEL,kCAoECmkB,EAAS,CACb1b,QACAkoB,QACA1f,OACApC,QACA3L,OACAmd,aAEFve,QAAQ2F,IAAI0c,GAENgL,EAAchkB,EAAOilB,2BAA2B,GA9EjD,UAkFKjlB,EAAOylB,0BACf5rB,EACAmf,EACA,IACA,KAtFG,wBAgFU0M,EAhFV,EAgFH1B,YACAY,EAjFG,EAiFHA,QAOFZ,EAAYxsB,IAAIkuB,GAChB1B,EAAYxsB,IAAIwI,EAAOilB,2BAA2B,IAzF7C,UA2FQH,EAAgB,CAC3Bd,cACA9nB,SACArC,aACA+qB,UACAG,eAAgB,qBAhGb,sF,sBAoGA,SAAehE,EAAtB,kC,4CAAO,kDAmBU4E,EAnBV,+BAAA/zB,EAAA,iGAAAA,EAAA,MAmBL,8BAAAA,EAAA,sDACQg0B,EAAQ,IAAIrgB,KAAG,GADvB,gCAI+B9T,YAAUo0B,qBACjC,CAAC7lB,EAAO5F,UAAU0rB,WAAYF,EAAMG,YAAYC,EAAQ,KAAM,IAC9DpF,GANR,cAIYqF,EAJZ,yBAQa,CAACA,EAAYL,IAR1B,gCAUMA,EAAMM,MAAM,GAVlB,iFAnBK,uBAmBUP,EAnBV,2CACL9rB,EADK,EACLA,WACAqC,EAFK,EAELA,OACA8kB,EAHK,EAGLA,SACAC,EAJK,EAILA,UACAhB,EALK,EAKLA,YACAC,EANK,EAMLA,aACAU,EAPK,EAOLA,aAEM5gB,EAAS,IAAI7F,UACbgsB,EAAe,IAAIhsB,UACnBisB,EAAa,IAAIjsB,UACjBkJ,EAAO,IAAIlJ,UACXqJ,EAAO,IAAIrJ,UACXksB,EAAY,IAAIlsB,UAChBmsB,EAAa,IAAInsB,UACjBosB,EAAa,EACbC,EAAqB,IAAIjhB,KAAG,KAjB7B,UAiCwCogB,IAjCxC,2CAiCEM,EAjCF,KAiCcQ,EAjCd,KAmCCC,EAAM,IAAIC,cAnCX,KAoCLD,EApCK,KAqCH/C,gBArCG,KAsCWznB,EAAO9B,UAtClB,KAuCiBisB,EAAUjsB,UAvC3B,UAwCeP,EAAW+pB,kCAAkC,KAxC5D,gCA0CUve,oBAAkBtH,iBA1C5B,MAsCD8lB,WAtCC,KAuCDC,iBAvCC,KAwCDnlB,SAxCC,KAyCDolB,MAAO,IACPhkB,UA1CC,gBAqCWkkB,cArCX,qBA4CHN,gBA5CG,KA6CWznB,EAAO9B,UA7ClB,MA8CiBksB,EAAWlsB,UA9C5B,UA+CeP,EAAW+pB,kCAAkC,KA/C5D,kCAiDUve,oBAAkBtH,iBAjD5B,OA6CD8lB,WA7CC,KA8CDC,iBA9CC,MA+CDnlB,SA/CC,MAgDDolB,MAAO,IACPhkB,UAjDC,kBA4CWkkB,cA5CX,uBAmDH5e,oBAAkB6e,kBAAkB,CAClCzlB,QAAS4nB,EAAUjsB,UACnBiD,KAAM2jB,EACN1jB,MAAO2oB,IAtDN,MAwDH5gB,oBAAkB6e,kBAAkB,CAClCzlB,QAAS6nB,EAAWlsB,UACpBiD,KAAM4jB,EACN3jB,MAAO2oB,IA3DN,KAoCDzuB,IApCC,kCA+DCovB,EAAM,IAAID,cA/DX,MAgELC,EAhEK,MAiEHjD,gBAjEG,MAkEWznB,EAAO9B,UAlElB,MAmEiB4F,EAAO5F,UAnExB,UAoEeP,EAAW+pB,kCACzBhkB,SAAOinB,UAAUjG,GAAc9iB,MArEhC,kCAuEM8B,SAAOinB,UAAUjG,GAAc9iB,KAvErC,MAwEU8iB,EAxEV,OAkEDiD,WAlEC,MAmEDC,iBAnEC,MAoEDnlB,SApEC,MAuEDolB,MAvEC,MAwEDhkB,UAxEC,mBAiEWkkB,cAjEX,wBA0EHN,gBA1EG,MA2EWznB,EAAO9B,UA3ElB,MA4EiB+rB,EAAa/rB,UA5E9B,UA6EeP,EAAW+pB,kCAAkC,MA7E5D,kCA8EM,KA9EN,MA+EUhD,EA/EV,OA2EDiD,WA3EC,MA4EDC,iBA5EC,MA6EDnlB,SA7EC,MA8EDolB,MA9EC,MA+EDhkB,UA/EC,mBA0EWkkB,cA1EX,wBAiFHN,gBAjFG,MAkFWznB,EAAO9B,UAlFlB,MAmFiBgsB,EAAWhsB,UAnF5B,UAoFeP,EAAW+pB,kCAAkC,QApF5D,kCAqFM,OArFN,MAsFUhD,EAtFV,OAkFDiD,WAlFC,MAmFDC,iBAnFC,MAoFDnlB,SApFC,MAqFDolB,MArFC,MAsFDhkB,UAtFC,mBAiFWkkB,cAjFX,wBAwFHN,gBAxFG,MAyFWznB,EAAO9B,UAzFlB,MA0FiBiJ,EAAKjJ,UA1FtB,UA2FeP,EAAW+pB,kCAAkC,OA3F5D,kCA4FM,MA5FN,MA6FUhD,EA7FV,OAyFDiD,WAzFC,MA0FDC,iBA1FC,MA2FDnlB,SA3FC,MA4FDolB,MA5FC,MA6FDhkB,UA7FC,mBAwFWkkB,cAxFX,wBA+FHN,gBA/FG,MAgGWznB,EAAO9B,UAhGlB,MAiGiBoJ,EAAKpJ,UAjGtB,UAkGeP,EAAW+pB,kCAAkC,OAlG5D,kCAmGM,MAnGN,MAoGUhD,EApGV,OAgGDiD,WAhGC,MAiGDC,iBAjGC,MAkGDnlB,SAlGC,MAmGDolB,MAnGC,MAoGDhkB,UApGC,mBA+FWkkB,cA/FX,wBAsGH6C,kBAAgBC,iBAAiB,CAC/B/mB,OAAQA,EAAO5F,UACf+rB,aAAcA,EAAa/rB,UAC3BgsB,WAAYA,EAAWhsB,UACvBiJ,KAAMA,EAAKjJ,UACXoJ,KAAMA,EAAKpJ,UACXisB,UAAWA,EAAUjsB,UACrBksB,WAAYA,EAAWlsB,UACvB4mB,WACAC,YACAhB,YAAa,IAAI1a,KAAG0a,GACpBC,aAAc,IAAI3a,KAAG2a,GACrBqG,aACAE,mBACAD,qBACAzmB,UAAW6gB,IArHV,MAgEDppB,IAhEC,0DAyH4B3F,QAAQ0G,IAAI,CAC3CyuB,EAAgB,CACdhD,YAAa0C,EACbxqB,SACArC,aACA+qB,QAAS,CAAC1oB,EAAO9B,UAAWisB,EAAWC,KAEzCU,EAAgB,CACdhD,YAAa4C,EACb1qB,SACArC,aACA+qB,QAAS,CAAC1oB,EAAO9B,UAAW4F,EAAQmmB,EAAcC,EAAY/iB,EAAMG,OApInE,QAyHCyjB,EAzHD,qBAuIyBA,GAvIzB,oEAuIIC,EAvIJ,mBAwIGC,EAAsB,CAC1BD,oBACArtB,eA1IC,sLA8IEmG,EAAO5F,WA9IT,sE,sBAiJP,IAAMgtB,EAAY,WAChB,OAAO,IAAI7xB,MAAO8xB,UAAY,K,SAKjBvC,E,8EAAf,uDAAAlzB,EAAA,6DACEoyB,EADF,EACEA,YACA9nB,EAFF,EAEEA,OAFF,IAGE0oB,eAHF,MAGY,CAAC1oB,EAAO9B,WAHpB,EAIEP,EAJF,EAIEA,WAJF,IAKEkrB,sBALF,MAKmB,yBALnB,MAMEuC,mBANF,MAMgB,mBANhB,MAOEC,sBAPF,MAOmB,wBAPnB,MAQEC,eARF,MAFwB,KAExB,WAUkCR,EAAgB,CAC9ChD,cACA9nB,SACA0oB,UACA/qB,eAdJ,cAUQqtB,EAVR,gBAgBeC,EAAsB,CACjCD,oBACArtB,aACAkrB,iBACAuC,cACAC,iBACAC,YAtBJ,oF,+BA0BeR,E,8EAAf,qCAAAp1B,EAAA,6DACEoyB,EADF,EACEA,YACA9nB,EAFF,EAEEA,OAFF,IAGE0oB,eAHF,MAGY,CAAC1oB,EAAO9B,WAHpB,EAIEP,EAJF,EAIEA,WAJF,SAOUA,EAAW4tB,mBAAmB,OAPxC,cAMEzD,EAAY0D,gBANd,OAQIC,UACF3D,EAAY4D,YAAZ,MAAA5D,EAAW,YAAgBY,IAT7B,SAUe1oB,EAAO8qB,gBAAgBhD,GAVtC,oF,+BAaemD,E,8EAAf,uDAAAv1B,EAAA,6DACEs1B,EADF,EACEA,kBACArtB,EAFF,EAEEA,WAFF,IAGEkrB,sBAHF,MAGmB,yBAHnB,MAIEuC,mBAJF,MAIgB,mBAJhB,MAKEC,sBALF,MAKmB,wBALnB,MAMEC,eANF,MAzCwB,KAyCxB,EAQQK,EAAiBX,EAAkBY,YACnCC,EAAYX,IAClB3yB,YAAO,CAAEC,QAASqwB,IAVpB,SAWqBlrB,EAAWmuB,mBAAmBH,EAAgB,CAC/DI,eAAe,IAZnB,cAWQrzB,EAXR,OAcEH,YAAO,CAAEC,QAAS4yB,EAAazyB,KAAM,UAAWD,SAEhD+B,QAAQ2F,IAAI,oCAAqC1H,GAE7CszB,GAAO,EACX,sBAAC,sBAAAt2B,EAAA,yDACSs2B,KAAQd,IAAcW,EAAYP,GAD3C,uBAEG3tB,EAAWmuB,mBAAmBH,EAAgB,CAC5CI,eAAe,IAHpB,SAKSv2B,YAAM,KALf,gEAAD,GAnBF,oBA4BUy2B,EAAsCvzB,EAAM4yB,EAAS3tB,GA5B/D,+DA8BQ,KAAI2tB,QA9BZ,uBA+BY,IAAIlpB,MAAM,kDA/BtB,cAiCU,IAAIA,MAAM,sBAjCpB,yBAmCI4pB,GAAO,EAnCX,4BAqCEzzB,YAAO,CAAEC,QAAS6yB,EAAgB1yB,KAAM,UAAWD,SAEnD+B,QAAQ2F,IAAI,UAAW1H,EAAMwyB,IAAcW,GAvC7C,kBAwCSnzB,GAxCT,kE,+BA2CeuzB,E,kFAAf,WACEvzB,EACA4yB,EACA3tB,GAHF,iBAAAjI,EAAA,6DAKMs2B,GAAO,EALb,SAMuB,IAAIr2B,SAAQ,SAACC,EAASs2B,GACzC,sBAAC,sBAAAx2B,EAAA,sDACCG,YAAW,WACLm2B,IAGJA,GAAO,EACPvxB,QAAQ2F,IAAI,qBAAsB1H,GAClCwzB,EAAO,CAAEZ,SAAS,OACjBA,GACH,IACE3tB,EAAWwuB,YACTzzB,GACA,SAAC2J,GACC5H,QAAQ2F,IAAI,eAAgB1H,EAAM2J,GAClC2pB,GAAO,EACH3pB,EAAO+pB,IACTF,EAAO7pB,EAAO+pB,KAEdx2B,EAAQyM,KAGZ,UAEF5H,QAAQ2F,IAAI,uBAAwB1H,GACpC,MAAO0G,GACP4sB,GAAO,EACPvxB,QAAQ2F,IAAI,oBAAqB1H,EAAM0G,GA1B1C,UA4BS4sB,EA5BT,uBA8BG,sBAAC,8BAAAt2B,EAAA,+EAEmCiI,EAAW0uB,qBAAqB,CAC9D3zB,IAHL,OAES4zB,EAFT,OAKSjqB,EAASiqB,GAAqBA,EAAkBh2B,MAAM,GACvD01B,IACE3pB,EAEMA,EAAO+pB,KAChB3xB,QAAQ2F,IAAI,iBAAkB1H,EAAM2J,GACpC2pB,GAAO,EACPE,EAAO7pB,EAAO+pB,MACJ/pB,EAAOkqB,eAGjB9xB,QAAQ2F,IAAI,wBAAyB1H,EAAM2J,GAC3C2pB,GAAO,EACPp2B,EAAQyM,IAJR5H,QAAQ2F,IAAI,4BAA6B1H,EAAM2J,GAN/C5H,QAAQ2F,IAAI,uBAAwB1H,EAAM2J,IARjD,gDAsBQ2pB,GACHvxB,QAAQ2F,IAAI,8BAA+B1H,EAA3C,MAvBL,wDAAD,GA9BH,SAyDSlD,YAAM,KAzDf,gEAAD,MAPJ,cAMQ6M,EANR,OAoEE2pB,GAAO,EApET,kBAqES3pB,GArET,4C,sBAwEA,SAASsmB,EAAkB6D,GACzB,IAAM1E,EAAc,IAAI2C,cAMxB,OALA+B,EACG7wB,QAAO,SAAC8wB,GAAD,OAAOA,KACdhxB,SAAQ,SAACgxB,GACR3E,EAAYxsB,IAAImxB,MAEb3E,K,iICtjBM,SAAStS,EAAT,GAA+C,IAAD,IAA9B3c,gBAA8B,SAATiT,EAAS,4BACrDhT,EAA0BgT,EAA1BhT,GAAI2E,EAAsBqO,EAAtBrO,SAAaivB,EADoC,YAC3B5gB,EAD2B,mBAE3D,OAAIjT,EAEA,qCAAG2b,KAAM1b,EAAIsgB,OAAO,SAASmB,IAAI,uBAA0BmS,GACxDjvB,GAKL,kBAAC,IAAD,eAAY3E,GAAIA,GAAQ4zB,GACrBjvB,M","file":"static/js/main.e283cc68.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.49174c73.svg\";","import { useCallback, useEffect, useState } from 'react';\nimport { PublicKey } from '@solana/web3.js';\n\nexport function isValidPublicKey(key) {\n  if (!key) {\n    return false;\n  }\n  try {\n    new PublicKey(key);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport async function sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport const percentFormat = new Intl.NumberFormat(undefined, {\n  style: 'percent',\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n});\n\nexport function floorToDecimal(value, decimals) {\n  return decimals ? Math.floor(value * 10 ** decimals) / 10 ** decimals : value;\n}\n\nexport function roundToDecimal(value, decimals) {\n  return decimals ? Math.round(value * 10 ** decimals) / 10 ** decimals : value;\n}\n\nexport function getDecimalCount(value) {\n  if (!isNaN(value) && Math.floor(value) !== value)\n    return value.toString().split('.')[1].length || 0;\n  return 0;\n}\n\nexport function useLocalStorageState(key, defaultState = null) {\n  const [state, setState] = useState(() => {\n    // NOTE: Not sure if this is ok\n    const storedState = localStorage.getItem(key);\n    if (storedState) {\n      return JSON.parse(storedState);\n    }\n    return defaultState;\n  });\n\n  const setLocalStorageState = useCallback(\n    (newState) => {\n      const changed = state !== newState;\n      if (!changed) {\n        return;\n      }\n      setState(newState);\n      if (newState === null) {\n        localStorage.removeItem(key);\n      } else {\n        localStorage.setItem(key, JSON.stringify(newState));\n      }\n    },\n    [state, key],\n  );\n\n  return [state, setLocalStorageState];\n}\n\nexport function useEffectAfterTimeout(effect, timeout) {\n  useEffect(() => {\n    const handle = setTimeout(effect, timeout);\n    return () => clearTimeout(handle);\n  });\n}\n\nexport function useListener(emitter, eventName) {\n  const [, forceUpdate] = useState(0);\n  useEffect(() => {\n    const listener = () => forceUpdate((i) => i + 1);\n    emitter.on(eventName, listener);\n    return () => emitter.removeListener(eventName, listener);\n  }, [emitter, eventName]);\n}\n\nexport function abbreviateAddress(address) {\n  const base58 = address.toBase58();\n  return base58.slice(0, 4) + '…' + base58.slice(-4);\n}\n\nexport function isEqual(obj1, obj2, keys) {\n  if (!keys && Object.keys(obj1).length !== Object.keys(obj2).length) {\n    return false;\n  }\n  keys = keys || Object.keys(obj1);\n  for (const k of keys) {\n    if (obj1[k] !== obj2[k]) {\n      // shallow comparison\n      return false;\n    }\n  }\n  return true;\n}\n","import React from 'react';\nimport { notification } from 'antd';\nimport Link from '../components/Link';\n\nexport function notify({\n  message,\n  description,\n  txid,\n  type = 'info',\n  placement = 'bottomLeft',\n}) {\n  if (txid) {\n    description = (\n      <Link\n        external\n        to={'https://explorer.solana.com/tx/' + txid}\n        style={{ color: '#0000ff' }}\n      >\n        View transaction {txid.slice(0, 8)}...{txid.slice(txid.length - 8)}\n      </Link>\n    );\n  }\n  notification[type]({\n    message: <span style={{ color: 'black' }}>{message}</span>,\n    description: (\n      <span style={{ color: 'black', opacity: 0.5 }}>{description}</span>\n    ),\n    placement,\n    style: {\n      backgroundColor: 'white',\n    },\n  });\n}\n","import { useEffect, useReducer } from 'react';\n\nimport assert from 'assert';\n\nconst pageLoadTime = new Date();\n\nconst globalCache = new Map();\n\nclass FetchLoopListener {\n  constructor(cacheKey, fn, refreshInterval, refreshIntervalOnError, callback) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.refreshInterval = refreshInterval;\n    this.refreshIntervalOnError = refreshIntervalOnError;\n    this.callback = callback;\n  }\n}\n\nclass FetchLoopInternal {\n  constructor(cacheKey, fn) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.timeoutId = null;\n    this.listeners = new Set();\n    this.errors = 0;\n  }\n\n  get refreshInterval() {\n    return Math.min(\n      ...[...this.listeners].map((listener) => listener.refreshInterval),\n    );\n  }\n\n  get refreshIntervalOnError() {\n    return Math.min(\n      ...[...this.listeners]\n        .map((listener) => listener.refreshIntervalOnError)\n        .filter((x) => x),\n    );\n  }\n\n  get stopped() {\n    return this.listeners.size === 0;\n  }\n\n  addListener(listener) {\n    const previousRefreshInterval = this.refreshInterval;\n    this.listeners.add(listener);\n    if (this.refreshInterval < previousRefreshInterval) {\n      this.refresh();\n    }\n  }\n\n  removeListener(listener) {\n    assert(this.listeners.delete(listener));\n    if (this.stopped) {\n      if (this.timeoutId) {\n        clearTimeout(this.timeoutId);\n        this.timeoutId = null;\n      }\n    }\n  }\n\n  notifyListeners() {\n    this.listeners.forEach((listener) => listener.callback());\n  }\n\n  refresh = async () => {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    }\n    if (this.stopped) {\n      return;\n    }\n\n    let errored = false;\n    try {\n      const data = await this.fn();\n      globalCache.set(this.cacheKey, data);\n      this.errors = 0;\n      this.notifyListeners();\n      return data;\n    } catch (error) {\n      ++this.errors;\n      console.warn(error);\n      errored = true;\n    } finally {\n      if (!this.timeoutId && !this.stopped) {\n        let waitTime = this.refreshInterval;\n        if (\n          errored &&\n          this.refreshIntervalOnError &&\n          this.refreshIntervalOnError > 0\n        ) {\n          waitTime = this.refreshIntervalOnError;\n        }\n\n        // Back off on errors.\n        if (this.errors > 0) {\n          waitTime = Math.min(1000 * 2 ** (this.errors - 1), 60000);\n        }\n\n        // Don't do any refreshing for the first five seconds, to make way for other things to load.\n        const timeSincePageLoad = new Date() - pageLoadTime;\n        if (timeSincePageLoad < 5000) {\n          waitTime += 5000 - timeSincePageLoad / 2;\n        }\n\n        // Refresh background pages slowly.\n        if (document.visibilityState === 'hidden') {\n          waitTime = 60000;\n        } else if (!document.hasFocus()) {\n          waitTime *= 1.5;\n        }\n\n        // Add jitter so we don't send all requests at the same time.\n        waitTime *= 0.8 + 0.4 * Math.random();\n\n        this.timeoutId = setTimeout(this.refresh, waitTime);\n      }\n    }\n  };\n}\n\nclass FetchLoops {\n  loops = new Map();\n\n  addListener(listener) {\n    if (!this.loops.has(listener.cacheKey)) {\n      this.loops.set(\n        listener.cacheKey,\n        new FetchLoopInternal(listener.cacheKey, listener.fn),\n      );\n    }\n    this.loops.get(listener.cacheKey).addListener(listener);\n  }\n\n  removeListener(listener) {\n    const loop = this.loops.get(listener.cacheKey);\n    loop.removeListener(listener);\n    if (loop.stopped) {\n      this.loops.delete(listener.cacheKey);\n    }\n  }\n\n  refresh(cacheKey) {\n    if (this.loops.has(cacheKey)) {\n      this.loops.get(cacheKey).refresh();\n    }\n  }\n\n  refreshAll() {\n    return Promise.all([...this.loops.values()].map((loop) => loop.refresh()));\n  }\n}\nconst globalLoops = new FetchLoops();\n\nexport function useAsyncData(\n  asyncFn,\n  cacheKey,\n  { refreshInterval = 60000, refreshIntervalOnError = null } = {},\n) {\n  const [, rerender] = useReducer((i) => i + 1, 0);\n\n  useEffect(() => {\n    if (!cacheKey) {\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      return () => {};\n    }\n    const listener = new FetchLoopListener(\n      cacheKey,\n      asyncFn,\n      refreshInterval,\n      refreshIntervalOnError,\n      rerender,\n    );\n    globalLoops.addListener(listener);\n    return () => globalLoops.removeListener(listener);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey, refreshInterval]);\n\n  if (!cacheKey) {\n    return [null, false];\n  }\n\n  const loaded = globalCache.has(cacheKey);\n  const data = loaded ? globalCache.get(cacheKey) : undefined;\n  return [data, loaded];\n}\n\nexport function refreshCache(cacheKey, clearCache = false) {\n  if (clearCache) {\n    globalCache.delete(cacheKey);\n  }\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.refresh();\n    if (clearCache) {\n      loop.notifyListeners();\n    }\n  }\n}\n\nexport function refreshAllCaches() {\n  for (const loop of globalLoops.loops.values()) {\n    loop.refresh();\n  }\n}\n\nexport function setCache(cacheKey, value, { initializeOnly = false } = {}) {\n  if (initializeOnly && globalCache.has(cacheKey)) {\n    return;\n  }\n  globalCache.set(cacheKey, value);\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.notifyListeners();\n  }\n}\n","import { useLocalStorageState } from './utils';\nimport { Account, clusterApiUrl, Connection } from '@solana/web3.js';\nimport React, { useContext, useEffect, useMemo } from 'react';\nimport { setCache, useAsyncData } from './fetch-loop';\nimport tuple from 'immutable-tuple';\n\nexport const ENDPOINTS = [\n  {\n    name: 'mainnet-beta',\n    endpoint: 'https://solana-api.projectserum.com',\n  },\n  { name: 'testnet', endpoint: clusterApiUrl('testnet') },\n  { name: 'devnet', endpoint: clusterApiUrl('devnet') },\n  { name: 'localnet', endpoint: 'http://127.0.0.1:8899' },\n];\n\nconst accountListenerCount = new Map();\n\nconst ConnectionContext = React.createContext(null);\n\nexport function ConnectionProvider({ children }) {\n  const [endpoint, setEndpoint] = useLocalStorageState(\n    'connectionEndpts',\n    ENDPOINTS[0].endpoint,\n  );\n\n  const connection = useMemo(() => new Connection(endpoint, 'recent'), [\n    endpoint,\n  ]);\n  const sendConnection = useMemo(() => new Connection(endpoint, 'recent'), [\n    endpoint,\n  ]);\n\n  // The websocket library solana/web3.js uses closes its websocket connection when the subscription list\n  // is empty after opening its first time, preventing subsequent subscriptions from receiving responses.\n  // This is a hack to prevent the list from every getting empty\n  useEffect(() => {\n    const id = connection.onAccountChange(new Account().publicKey, () => {});\n    return () => connection.removeAccountChangeListener(id);\n  }, [connection]);\n\n  useEffect(() => {\n    const id = connection.onSlotChange(() => null);\n    return () => connection.removeSlotChangeListener(id);\n  }, [connection]);\n\n  useEffect(() => {\n    const id = sendConnection.onAccountChange(\n      new Account().publicKey,\n      () => {},\n    );\n    return () => sendConnection.removeAccountChangeListener(id);\n  }, [sendConnection]);\n\n  useEffect(() => {\n    const id = sendConnection.onSlotChange(() => null);\n    return () => sendConnection.removeSlotChangeListener(id);\n  }, [sendConnection]);\n\n  return (\n    <ConnectionContext.Provider\n      value={{ endpoint, setEndpoint, connection, sendConnection }}\n    >\n      {children}\n    </ConnectionContext.Provider>\n  );\n}\n\nexport function useConnection() {\n  return useContext(ConnectionContext).connection;\n}\n\nexport function useSendConnection() {\n  return useContext(ConnectionContext).sendConnection;\n}\n\nexport function useConnectionConfig() {\n  const context = useContext(ConnectionContext);\n  return { endpoint: context.endpoint, setEndpoint: context.setEndpoint };\n}\n\nexport function useAccountInfo(publicKey) {\n  const connection = useConnection();\n  const cacheKey = tuple(connection, publicKey?.toBase58());\n  const [accountInfo, loaded] = useAsyncData(\n    async () => (publicKey ? connection.getAccountInfo(publicKey) : null),\n    cacheKey,\n    { refreshInterval: 60_000 },\n  );\n  useEffect(() => {\n    if (!publicKey) {\n      return;\n    }\n    if (accountListenerCount.has(cacheKey)) {\n      let currentItem = accountListenerCount.get(cacheKey);\n      ++currentItem.count;\n    } else {\n      let previousData = null;\n      const subscriptionId = connection.onAccountChange(publicKey, (e) => {\n        if (e.data) {\n          if (!previousData || !previousData.equals(e.data)) {\n            setCache(cacheKey, e);\n          } else {\n          }\n          previousData = e.data;\n        }\n      });\n      accountListenerCount.set(cacheKey, { count: 1, subscriptionId });\n    }\n    return () => {\n      let currentItem = accountListenerCount.get(cacheKey);\n      let nextCount = currentItem.count - 1;\n      if (nextCount <= 0) {\n        connection.removeAccountChangeListener(currentItem.subscriptionId);\n        accountListenerCount.delete(cacheKey);\n      } else {\n        --currentItem.count;\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey]);\n  return [accountInfo, loaded];\n}\n\nexport function useAccountData(publicKey) {\n  const [accountInfo] = useAccountInfo(publicKey);\n  return accountInfo && accountInfo.data;\n}\n","import React, { useContext, useEffect, useMemo, useState } from 'react';\nimport Wallet from '@project-serum/sol-wallet-adapter';\nimport { notify } from './notifications';\nimport { useConnectionConfig } from './connection';\nimport { useLocalStorageState } from './utils';\n\nexport const WALLET_PROVIDERS = [\n  { name: 'sollet.io', url: 'https://www.sollet.io' },\n];\n\nconst WalletContext = React.createContext(null);\n\nexport function WalletProvider({ children }) {\n  const { endpoint } = useConnectionConfig();\n  const [providerUrl, setProviderUrl] = useLocalStorageState(\n    'walletProvider',\n    'https://www.sollet.io',\n  );\n  const wallet = useMemo(() => new Wallet(providerUrl, endpoint), [\n    providerUrl,\n    endpoint,\n  ]);\n\n  const [connected, setConnected] = useState(false);\n  useEffect(() => {\n    console.log('trying to connect');\n    wallet.on('connect', () => {\n      console.log('connected');\n      setConnected(true);\n      let walletPublicKey = wallet.publicKey.toBase58();\n      let keyToDisplay =\n        walletPublicKey.length > 20\n          ? `${walletPublicKey.substring(0, 7)}.....${walletPublicKey.substring(\n              walletPublicKey.length - 7,\n              walletPublicKey.length,\n            )}`\n          : walletPublicKey;\n      notify({\n        message: 'Wallet update',\n        description: 'Connected to wallet ' + keyToDisplay,\n      });\n    });\n    wallet.on('disconnect', () => {\n      setConnected(false);\n      notify({\n        message: 'Wallet update',\n        description: 'Disconnected from wallet',\n      });\n    });\n    return () => {\n      wallet.disconnect();\n      setConnected(false);\n    };\n  }, [wallet]);\n  return (\n    <WalletContext.Provider\n      value={{\n        wallet,\n        connected,\n        providerUrl,\n        setProviderUrl,\n        providerName:\n          WALLET_PROVIDERS.find(({ url }) => url === providerUrl)?.name ??\n          providerUrl,\n      }}\n    >\n      {children}\n    </WalletContext.Provider>\n  );\n}\n\nexport function useWallet() {\n  const context = useContext(WalletContext);\n  return {\n    connected: context.connected,\n    wallet: context.wallet,\n    providerUrl: context.providerUrl,\n    setProvider: context.setProviderUrl,\n    providerName: context.providerName,\n  };\n}\n","import * as BufferLayout from 'buffer-layout';\nimport bs58 from 'bs58';\nimport { PublicKey } from '@solana/web3.js';\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\n\nexport const ACCOUNT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(32, 'mint'),\n  BufferLayout.blob(32, 'owner'),\n  BufferLayout.nu64('amount'),\n  BufferLayout.blob(93),\n]);\n\nexport const MINT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(44),\n  BufferLayout.u8('decimals'),\n  BufferLayout.u8('initialized'),\n  BufferLayout.blob(36),\n]);\n\nexport function parseTokenAccountData(data) {\n  let { mint, owner, amount } = ACCOUNT_LAYOUT.decode(data);\n  return {\n    mint: new PublicKey(mint),\n    owner: new PublicKey(owner),\n    amount,\n  };\n}\n\nexport function parseTokenMintData(data) {\n  let { decimals, initialized } = MINT_LAYOUT.decode(data);\n  return { decimals, initialized };\n}\n\nexport function getOwnedAccountsFilters(publicKey) {\n  return [\n    {\n      memcmp: {\n        offset: ACCOUNT_LAYOUT.offsetOf('owner'),\n        bytes: publicKey.toBase58(),\n      },\n    },\n    {\n      dataSize: ACCOUNT_LAYOUT.span,\n    },\n  ];\n}\n\nexport const TOKEN_PROGRAM_ID = new PublicKey(\n  'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n);\n\nexport async function getOwnedTokenAccounts(connection, publicKey) {\n  let filters = getOwnedAccountsFilters(publicKey);\n  let resp = await connection._rpcRequest('getProgramAccounts', [\n    TOKEN_PROGRAM_ID.toBase58(),\n    {\n      commitment: connection.commitment,\n      filters,\n    },\n  ]);\n  if (resp.error) {\n    throw new Error(\n      'failed to get token accounts owned by ' +\n        publicKey.toBase58() +\n        ': ' +\n        resp.error.message,\n    );\n  }\n  return resp.result\n    .map(({ pubkey, account: { data, executable, owner, lamports } }) => ({\n      publicKey: new PublicKey(pubkey),\n      accountInfo: {\n        data: bs58.decode(data),\n        executable,\n        owner: new PublicKey(owner),\n        lamports,\n      },\n    }))\n    .filter(({ accountInfo }) => {\n      // TODO: remove this check once mainnet is updated\n      return filters.every((filter) => {\n        if (filter.dataSize) {\n          return accountInfo.data.length === filter.dataSize;\n        } else if (filter.memcmp) {\n          let filterBytes = bs58.decode(filter.memcmp.bytes);\n          return accountInfo.data\n            .slice(\n              filter.memcmp.offset,\n              filter.memcmp.offset + filterBytes.length,\n            )\n            .equals(filterBytes);\n        }\n        return false;\n      });\n    });\n}\n\nexport async function getTokenAccountInfo(connection, ownerAddress) {\n  let [splAccounts, account] = await Promise.all([\n    getOwnedTokenAccounts(connection, ownerAddress),\n    connection.getAccountInfo(ownerAddress),\n  ]);\n  const parsedSplAccounts = splAccounts.map(({ publicKey, accountInfo }) => {\n    return {\n      pubkey: publicKey,\n      account: accountInfo,\n      effectiveMint: parseTokenAccountData(accountInfo.data).mint,\n    };\n  });\n  return parsedSplAccounts.concat({\n    pubkey: ownerAddress,\n    account,\n    effectiveMint: WRAPPED_SOL_MINT,\n  });\n}\n","import {\n  Market,\n  Orderbook,\n  decodeEventQueue,\n  TokenInstructions,\n  MARKETS,\n  TOKEN_MINTS,\n  OpenOrders,\n} from '@project-serum/serum';\nimport { PublicKey } from '@solana/web3.js';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useLocalStorageState } from './utils';\nimport { refreshCache, useAsyncData } from './fetch-loop';\nimport { useAccountData, useAccountInfo, useConnection } from './connection';\nimport { useWallet } from './wallet';\nimport tuple from 'immutable-tuple';\nimport { notify } from './notifications';\nimport { BN } from 'bn.js';\nimport { getTokenAccountInfo } from './tokens';\n\n// Used in debugging, should be false in production\nconst _IGNORE_DEPRECATED = false;\n\nconst USE_MARKETS = _IGNORE_DEPRECATED\n  ? MARKETS.map((m) => ({ ...m, deprecated: false }))\n  : MARKETS;\n\nexport function useMarketsList() {\n  return USE_MARKETS.filter(({ deprecated }) => !deprecated);\n}\n\nexport function useAllMarkets() {\n  const connection = useConnection();\n  const [markets, setMarkets] = useState([]);\n\n  useEffect(() => {\n    const getAllMarkets = async () => {\n      const markets = [];\n      let marketInfo;\n      for (marketInfo of USE_MARKETS) {\n        try {\n          const market = await Market.load(\n            connection,\n            marketInfo.address,\n            {},\n            marketInfo.programId,\n          );\n          markets.push({ market, marketName: marketInfo.name });\n        } catch (e) {\n          notify({\n            message: 'Error loading all market',\n            description: e.message,\n            type: 'error',\n          });\n        }\n      }\n      setMarkets(markets);\n    };\n\n    getAllMarkets();\n  }, [connection]);\n\n  return markets;\n}\n\nexport function useUnmigratedOpenOrdersAccounts() {\n  const connection = useConnection();\n  const { wallet } = useWallet();\n\n  async function getUnmigratedOpenOrdersAccounts() {\n    if (!wallet || !connection || !wallet.publicKey) {\n      return [];\n    }\n    console.log('refreshing useUnmigratedOpenOrdersAccounts');\n    let deprecatedOpenOrdersAccounts = [];\n    const deprecatedProgramIds = Array.from(\n      new Set(\n        USE_MARKETS.filter(\n          ({ deprecated }) => deprecated,\n        ).map(({ programId }) => programId.toBase58()),\n      ),\n    ).map((publicKeyStr) => new PublicKey(publicKeyStr));\n    let programId;\n    for (programId of deprecatedProgramIds) {\n      try {\n        const openOrdersAccounts = await OpenOrders.findForOwner(\n          connection,\n          wallet.publicKey,\n          programId,\n        );\n        deprecatedOpenOrdersAccounts = deprecatedOpenOrdersAccounts.concat(\n          openOrdersAccounts\n            .filter(\n              (openOrders) =>\n                openOrders.baseTokenTotal.toNumber() ||\n                openOrders.quoteTokenTotal.toNumber(),\n            )\n            .filter((openOrders) =>\n              USE_MARKETS.some(\n                (market) =>\n                  market.deprecated && market.address.equals(openOrders.market),\n              ),\n            ),\n        );\n      } catch (e) {\n        console.log(\n          'Error loading deprecated markets',\n          programId?.toBase58(),\n          e.message,\n        );\n      }\n    }\n    // Maybe sort\n    return deprecatedOpenOrdersAccounts;\n  }\n\n  const cacheKey = tuple(\n    'getUnmigratedOpenOrdersAccounts',\n    connection,\n    wallet?.publicKey?.toBase58(),\n  );\n  const [accounts] = useAsyncData(getUnmigratedOpenOrdersAccounts, cacheKey, {\n    refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\n  });\n\n  return {\n    accounts,\n    refresh: (clearCache) => refreshCache(cacheKey, clearCache),\n  };\n}\n\nconst MarketContext = React.createContext(null);\n\nconst _VERY_SLOW_REFRESH_INTERVAL = 5000 * 1000;\n\n// For things that don't really change\nconst _SLOW_REFRESH_INTERVAL = 5 * 1000;\n\n// For things that change frequently\nconst _FAST_REFRESH_INTERVAL = 1000;\n\nexport const DEFAULT_MARKET = USE_MARKETS.find(\n  ({ name, deprecated }) => name === 'SRM/USDT' && !deprecated,\n);\n\nfunction getMarketDetails(market, customMarkets) {\n  if (!market) {\n    return {};\n  }\n  const marketInfos = getMarketInfos(customMarkets);\n  const marketInfo = marketInfos.find((otherMarket) =>\n    otherMarket.address.equals(market.address),\n  );\n  const baseCurrency =\n    (market?.baseMintAddress &&\n      TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\n        ?.name) ||\n    (marketInfo?.baseLabel && `${marketInfo?.baseLabel}*`) ||\n    'UNKNOWN';\n  const quoteCurrency =\n    (market?.quoteMintAddress &&\n      TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\n        ?.name) ||\n    (marketInfo?.quoteLabel && `${marketInfo?.quoteLabel}*`) ||\n    'UNKNOWN';\n\n  return {\n    ...marketInfo,\n    marketName: marketInfo?.name,\n    baseCurrency,\n    quoteCurrency,\n    marketInfo,\n  };\n}\n\nexport function MarketProvider({ children }) {\n  const [marketAddress, setMarketAddress] = useLocalStorageState(\n    'marketAddress',\n    DEFAULT_MARKET.address.toBase58(),\n  );\n  const [customMarkets, setCustomMarkets] = useLocalStorageState(\n    'customMarkets',\n    [],\n  );\n\n  const address = new PublicKey(marketAddress);\n  const connection = useConnection();\n  const marketInfos = getMarketInfos(customMarkets);\n  const marketInfo = marketInfos.find((market) =>\n    market.address.equals(address),\n  );\n\n  // Replace existing market with a non-deprecated one on first load\n  useEffect(() => {\n    if (marketInfo && marketInfo.deprecated) {\n      console.log('Switching markets from deprecated', marketInfo);\n      setMarketAddress(DEFAULT_MARKET.address.toBase58());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const [market, setMarket] = useState();\n  useEffect(() => {\n    if (\n      market &&\n      marketInfo &&\n      market._decoded.ownAddress?.equals(marketInfo?.address)\n    ) {\n      return;\n    }\n    setMarket(null);\n    if (!marketInfo || !marketInfo.address) {\n      notify({\n        message: 'Error loading market',\n        description: 'Please select a market from the dropdown',\n        type: 'error',\n      });\n      return;\n    }\n    Market.load(connection, marketInfo.address, {}, marketInfo.programId)\n      .then(setMarket)\n      .catch((e) =>\n        notify({\n          message: 'Error loading market',\n          description: e.message,\n          type: 'error',\n        }),\n      );\n    // eslint-disable-next-line\n  }, [connection, marketInfo]);\n\n  return (\n    <MarketContext.Provider\n      value={{\n        market,\n        ...getMarketDetails(market, customMarkets),\n        setMarketAddress,\n        customMarkets,\n        setCustomMarkets,\n      }}\n    >\n      {children}\n    </MarketContext.Provider>\n  );\n}\n\nexport function useMarket() {\n  return useContext(MarketContext);\n}\n\nexport function useMarkPrice() {\n  const [markPrice, setMarkPrice] = useState(null);\n\n  const [orderbook] = useOrderbook();\n  const trades = useTrades();\n\n  useEffect(() => {\n    let bb = orderbook?.bids?.length > 0 && Number(orderbook.bids[0][0]);\n    let ba = orderbook?.asks?.length > 0 && Number(orderbook.asks[0][0]);\n    let last = trades?.length > 0 && trades[0].price;\n\n    let markPrice =\n      bb && ba\n        ? last\n          ? [bb, ba, last].sort((a, b) => a - b)[1]\n          : (bb + ba) / 2\n        : null;\n\n    setMarkPrice(markPrice);\n  }, [orderbook, trades]);\n\n  return markPrice;\n}\n\nexport function _useUnfilteredTrades(limit = 10000) {\n  const { market } = useMarket();\n  const connection = useConnection();\n  async function getUnfilteredTrades() {\n    if (!market || !connection) {\n      return null;\n    }\n    return await market.loadFills(connection, limit);\n  }\n  const [trades] = useAsyncData(\n    getUnfilteredTrades,\n    tuple('getUnfilteredTrades', market, connection),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n  return trades;\n  // NOTE: For now, websocket is too expensive since the event queue is large\n  // and updates very frequently\n\n  // let data = useAccountData(market && market._decoded.eventQueue);\n  // if (!data) {\n  //   return null;\n  // }\n  // const events = decodeEventQueue(data, limit);\n  // return events\n  //   .filter((event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0))\n  //   .map(market.parseFillEvent.bind(market));\n}\n\nexport function useOrderbookAccounts() {\n  const { market } = useMarket();\n  let bidData = useAccountData(market && market._decoded.bids);\n  let askData = useAccountData(market && market._decoded.asks);\n  return {\n    bidOrderbook: bidData ? Orderbook.decode(market, bidData) : null,\n    askOrderbook: askData ? Orderbook.decode(market, askData) : null,\n  };\n}\n\nexport function useOrderbook(depth = 20) {\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\n  const { market } = useMarket();\n  const bids =\n    !bidOrderbook || !market\n      ? []\n      : bidOrderbook.getL2(depth).map(([price, size]) => [price, size]);\n  const asks =\n    !askOrderbook || !market\n      ? []\n      : askOrderbook.getL2(depth).map(([price, size]) => [price, size]);\n  return [{ bids, asks }, !!bids || !!asks];\n}\n\n// Want the balances table to be fast-updating, dont want open orders to flicker\n// TODO: Update to use websocket\nexport function useOpenOrdersAccounts(fast = false) {\n  const { market } = useMarket();\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getOpenOrdersAccounts() {\n    if (!connected) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    return await market.findOpenOrdersAccountsForOwner(\n      connection,\n      wallet.publicKey,\n    );\n  }\n  return useAsyncData(\n    getOpenOrdersAccounts,\n    tuple('getOpenOrdersAccounts', wallet, market, connected),\n    { refreshInterval: fast ? _FAST_REFRESH_INTERVAL : _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useSelectedOpenOrdersAccount(fast = false) {\n  const [accounts] = useOpenOrdersAccounts(fast);\n  if (!accounts) {\n    return null;\n  }\n  return accounts[0];\n}\n\nexport function useTokenAccounts() {\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getTokenAccounts() {\n    if (!connected) {\n      return null;\n    }\n    return await getTokenAccountInfo(connection, wallet.publicKey);\n  }\n  return useAsyncData(\n    getTokenAccounts,\n    tuple('getTokenAccounts', wallet, connected),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function getSelectedTokenAccountForMint(accounts, mint) {\n  if (!accounts || !mint) {\n    return null;\n  }\n  const filtered = accounts.filter(({ effectiveMint }) =>\n    mint.equals(effectiveMint),\n  );\n  return filtered && filtered[0];\n}\n\nexport function useSelectedQuoteCurrencyAccount() {\n  const [accounts] = useTokenAccounts();\n  const { market } = useMarket();\n  return getSelectedTokenAccountForMint(accounts, market?.quoteMintAddress);\n}\n\nexport function useSelectedBaseCurrencyAccount() {\n  const [accounts] = useTokenAccounts();\n  const { market } = useMarket();\n  return getSelectedTokenAccountForMint(accounts, market?.baseMintAddress);\n}\n\n// TODO: Update to use websocket\nexport function useQuoteCurrencyBalances() {\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const { market } = useMarket();\n  const [accountInfo, loaded] = useAccountInfo(quoteCurrencyAccount?.pubkey);\n  if (!market || !quoteCurrencyAccount || !loaded) {\n    return null;\n  }\n  if (market.quoteMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\n    return accountInfo?.lamports / 1e9 ?? 0;\n  }\n  return market.quoteSplSizeToNumber(\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\n  );\n}\n\n// TODO: Update to use websocket\nexport function useBaseCurrencyBalances() {\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const { market } = useMarket();\n  const [accountInfo, loaded] = useAccountInfo(baseCurrencyAccount?.pubkey);\n  if (!market || !baseCurrencyAccount || !loaded) {\n    return null;\n  }\n  if (market.baseMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\n    return accountInfo?.lamports / 1e9 ?? 0;\n  }\n  return market.baseSplSizeToNumber(\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\n  );\n}\n\nexport function useOpenOrders() {\n  const { market, marketName } = useMarket();\n  const openOrdersAccount = useSelectedOpenOrdersAccount();\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\n  if (!market || !openOrdersAccount || !bidOrderbook || !askOrderbook) {\n    return null;\n  }\n  return market\n    .filterForOpenOrders(bidOrderbook, askOrderbook, [openOrdersAccount])\n    .map((order) => ({ ...order, marketName, market }));\n}\n\nexport function useTrades(limit = 100) {\n  const trades = _useUnfilteredTrades(limit);\n  if (!trades) {\n    return null;\n  }\n  // Until partial fills are each given their own fill, use maker fills\n  return trades\n    .filter(({ eventFlags }) => eventFlags.maker)\n    .map((trade) => ({\n      ...trade,\n      side: trade.side === 'buy' ? 'sell' : 'buy',\n    }));\n}\n\nexport function useFeeDiscountKeys() {\n  const { market } = useMarket();\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getFeeDiscountKeys() {\n    if (!connected) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    return await market.findFeeDiscountKeys(connection, wallet.publicKey);\n  }\n  return useAsyncData(\n    getFeeDiscountKeys,\n    tuple('getFeeDiscountKeys', wallet, market, connected),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useFills(limit = 100) {\n  const { marketName } = useMarket();\n  const fills = _useUnfilteredTrades(limit);\n  const [openOrdersAccounts] = useOpenOrdersAccounts();\n  if (!openOrdersAccounts || openOrdersAccounts.length === 0) {\n    return null;\n  }\n  if (!fills) {\n    return null;\n  }\n  return fills\n    .filter((fill) =>\n      openOrdersAccounts.some((openOrdersAccount) =>\n        fill.openOrders.equals(openOrdersAccount.publicKey),\n      ),\n    )\n    .map((fill) => ({ ...fill, marketName }));\n}\n\n// TODO: Update to use websocket\nexport function useFillsForAllMarkets(limit = 100) {\n  const { connected, wallet } = useWallet();\n\n  const connection = useConnection();\n  const allMarkets = useAllMarkets();\n\n  async function getFillsForAllMarkets() {\n    let fills = [];\n    if (!connected) {\n      return fills;\n    }\n\n    let marketData;\n    for (marketData of allMarkets) {\n      const { market, marketName } = marketData;\n      if (!market) {\n        return fills;\n      }\n      const openOrdersAccounts = await market.findOpenOrdersAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n      const openOrdersAccount = openOrdersAccounts && openOrdersAccounts[0];\n      if (!openOrdersAccount) {\n        return fills;\n      }\n      const eventQueueData = await connection.getAccountInfo(\n        market && market._decoded.eventQueue,\n      );\n      let data = eventQueueData?.data;\n      if (!data) {\n        return fills;\n      }\n      const events = decodeEventQueue(data, limit);\n      const fillsForMarket = events\n        .filter(\n          (event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0),\n        )\n        .map(market.parseFillEvent.bind(market));\n      const ownFillsForMarket = fillsForMarket\n        .filter((fill) => fill.openOrders.equals(openOrdersAccount.publicKey))\n        .map((fill) => ({ ...fill, marketName }));\n      fills = fills.concat(ownFillsForMarket);\n    }\n\n    console.log(JSON.stringify(fills));\n    return fills;\n  }\n\n  return useAsyncData(\n    getFillsForAllMarkets,\n    tuple('getFillsForAllMarkets', connected, connection, allMarkets, wallet),\n    { refreshInterval: _FAST_REFRESH_INTERVAL },\n  );\n}\n\n// TODO: Update to use websocket\nexport function useOpenOrdersForAllMarkets() {\n  const { connected, wallet } = useWallet();\n\n  const connection = useConnection();\n  const allMarkets = useAllMarkets();\n\n  async function getOpenOrdersForAllMarkets() {\n    let orders = [];\n    if (!connected) {\n      return orders;\n    }\n\n    let marketData;\n    for (marketData of allMarkets) {\n      const { market, marketName } = marketData;\n      if (!market) {\n        return orders;\n      }\n      const openOrdersAccounts = await market.findOpenOrdersAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n      const openOrdersAccount = openOrdersAccounts && openOrdersAccounts[0];\n      if (!openOrdersAccount) {\n        return orders;\n      }\n      const [bids, asks] = await Promise.all([\n        market.loadBids(connection),\n        market.loadAsks(connection),\n      ]);\n      const ordersForMarket = [...bids, ...asks]\n        .filter((order) => {\n          return order.openOrdersAddress.equals(openOrdersAccount.publicKey);\n        })\n        .map((order) => {\n          return { ...order, marketName };\n        });\n      orders = orders.concat(ordersForMarket);\n    }\n\n    return orders;\n  }\n\n  return useAsyncData(\n    getOpenOrdersForAllMarkets,\n    tuple(\n      'getOpenOrdersForAllMarkets',\n      connected,\n      connection,\n      wallet,\n      allMarkets,\n    ),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useBalances() {\n  const baseCurrencyBalances = useBaseCurrencyBalances();\n  const quoteCurrencyBalances = useQuoteCurrencyBalances();\n  const openOrders = useSelectedOpenOrdersAccount(true);\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const baseExists =\n    openOrders && openOrders.baseTokenTotal && openOrders.baseTokenFree;\n  const quoteExists =\n    openOrders && openOrders.quoteTokenTotal && openOrders.quoteTokenFree;\n  if (\n    baseCurrency === 'UNKNOWN' ||\n    quoteCurrency === 'UNKNOWN' ||\n    !baseCurrency ||\n    !quoteCurrency\n  ) {\n    return [];\n  }\n  return [\n    {\n      market,\n      key: `${baseCurrency}${quoteCurrency}${baseCurrency}`,\n      coin: baseCurrency,\n      wallet: baseCurrencyBalances,\n      orders:\n        baseExists && market\n          ? market.baseSplSizeToNumber(\n              openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\n            )\n          : null,\n      openOrders,\n      unsettled:\n        baseExists && market\n          ? market.baseSplSizeToNumber(openOrders.baseTokenFree)\n          : null,\n    },\n    {\n      market,\n      key: `${quoteCurrency}${baseCurrency}${quoteCurrency}`,\n      coin: quoteCurrency,\n      wallet: quoteCurrencyBalances,\n      openOrders,\n      orders:\n        quoteExists && market\n          ? market.quoteSplSizeToNumber(\n              openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\n            )\n          : null,\n      unsettled:\n        quoteExists && market\n          ? market.quoteSplSizeToNumber(openOrders.quoteTokenFree)\n          : null,\n    },\n  ];\n}\n\nexport function useWalletBalancesForAllMarkets() {\n  const { connected, wallet } = useWallet();\n\n  const connection = useConnection();\n  const allMarkets = useAllMarkets();\n\n  async function getWalletBalancesForAllMarkets() {\n    let balances = [];\n    if (!connected) {\n      return balances;\n    }\n\n    let marketData;\n    for (marketData of allMarkets) {\n      const { market, marketName } = marketData;\n      if (!market) {\n        return balances;\n      }\n      const baseCurrency = marketName.includes('/') && marketName.split('/')[0];\n      if (!balances.find((balance) => balance.coin === baseCurrency)) {\n        const baseBalance = await getCurrencyBalance(\n          market,\n          connection,\n          wallet,\n          true,\n        );\n        balances.push({\n          key: baseCurrency,\n          coin: baseCurrency,\n          wallet: baseBalance,\n        });\n      }\n      const quoteCurrency =\n        marketName.includes('/') && marketName.split('/')[1];\n      if (!balances.find((balance) => balance.coin === quoteCurrency)) {\n        const quoteBalance = await getCurrencyBalance(\n          market,\n          connection,\n          wallet,\n          false,\n        );\n        balances.push({\n          key: quoteCurrency,\n          coin: quoteCurrency,\n          wallet: quoteBalance,\n        });\n      }\n    }\n\n    return balances;\n  }\n\n  return useAsyncData(\n    getWalletBalancesForAllMarkets,\n    tuple(\n      'getWalletBalancesForAllMarkets',\n      connected,\n      connection,\n      wallet,\n      allMarkets,\n    ),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nasync function getCurrencyBalance(market, connection, wallet, base = true) {\n  const currencyAccounts = base\n    ? await market.findBaseTokenAccountsForOwner(connection, wallet.publicKey)\n    : await market.findQuoteTokenAccountsForOwner(connection, wallet.publicKey);\n  const currencyAccount = currencyAccounts && currencyAccounts[0];\n  const tokenAccountBalances = await connection.getTokenAccountBalance(\n    currencyAccount.pubkey,\n  );\n  return tokenAccountBalances?.value?.uiAmount;\n}\n\nexport function useOpenOrderAccountBalancesForAllMarkets() {\n  const { connected, wallet } = useWallet();\n\n  const connection = useConnection();\n  const allMarkets = useAllMarkets();\n\n  async function getOpenOrderAccountsForAllMarkets() {\n    let accounts = [];\n    if (!connected) {\n      return accounts;\n    }\n\n    let marketData;\n    for (marketData of allMarkets) {\n      const { market, marketName } = marketData;\n      if (!market) {\n        return accounts;\n      }\n      const openOrderAccounts = await market.findOpenOrdersAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n      if (!openOrderAccounts) {\n        continue;\n      }\n      const baseCurrencyAccounts = await market.findBaseTokenAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n      const quoteCurrencyAccounts = await market.findQuoteTokenAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n\n      const baseCurrency = marketName.includes('/') && marketName.split('/')[0];\n      const quoteCurrency =\n        marketName.includes('/') && marketName.split('/')[1];\n\n      const openOrderAccountBalances = [];\n      openOrderAccounts.forEach((openOrdersAccount) => {\n        const inOrdersBase =\n          openOrdersAccount?.baseTokenTotal &&\n          openOrdersAccount?.baseTokenFree &&\n          market.baseSplSizeToNumber(\n            openOrdersAccount.baseTokenTotal.sub(\n              openOrdersAccount.baseTokenFree,\n            ),\n          );\n        const inOrdersQuote =\n          openOrdersAccount?.quoteTokenTotal &&\n          openOrdersAccount?.quoteTokenFree &&\n          market.baseSplSizeToNumber(\n            openOrdersAccount.quoteTokenTotal.sub(\n              openOrdersAccount.quoteTokenFree,\n            ),\n          );\n        const unsettledBase =\n          openOrdersAccount?.baseTokenFree &&\n          market.baseSplSizeToNumber(openOrdersAccount.baseTokenFree);\n        const unsettledQuote =\n          openOrdersAccount?.quoteTokenFree &&\n          market.baseSplSizeToNumber(openOrdersAccount.quoteTokenFree);\n        openOrderAccountBalances.push({\n          market: marketName,\n          coin: baseCurrency,\n          key: baseCurrency,\n          orders: inOrdersBase,\n          unsettled: unsettledBase,\n          openOrdersAccount: openOrdersAccount,\n          baseCurrencyAccount: baseCurrencyAccounts && baseCurrencyAccounts[0],\n          quoteCurrencyAccount:\n            quoteCurrencyAccounts && quoteCurrencyAccounts[0],\n        });\n        openOrderAccountBalances.push({\n          market: marketName,\n          coin: quoteCurrency,\n          key: quoteCurrency,\n          orders: inOrdersQuote,\n          unsettled: unsettledQuote,\n          openOrdersAccount: openOrdersAccount,\n          baseCurrencyAccount: baseCurrencyAccounts && baseCurrencyAccounts[0],\n          quoteCurrencyAccount:\n            quoteCurrencyAccounts && quoteCurrencyAccounts[0],\n        });\n      });\n      accounts = accounts.concat(openOrderAccountBalances);\n    }\n\n    return accounts;\n  }\n\n  return useAsyncData(\n    getOpenOrderAccountsForAllMarkets,\n    tuple(\n      'getOpenOrderAccountsForAllMarkets',\n      connected,\n      connection,\n      wallet,\n      allMarkets,\n    ),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useUnmigratedDeprecatedMarkets() {\n  const connection = useConnection();\n  const { accounts } = useUnmigratedOpenOrdersAccounts();\n  const marketsList =\n    accounts &&\n    Array.from(new Set(accounts.map((openOrders) => openOrders.market)));\n  const deps = marketsList && marketsList.map((m) => m.toBase58());\n\n  const useUnmigratedDeprecatedMarketsInner = async () => {\n    if (!marketsList) {\n      return null;\n    }\n    const getMarket = async (address) => {\n      const marketInfo = USE_MARKETS.find((market) =>\n        market.address.equals(address),\n      );\n      try {\n        console.log('Loading market', marketInfo.name);\n        // NOTE: Should this just be cached by (connection, marketInfo.address, marketInfo.programId)?\n        return await Market.load(\n          connection,\n          marketInfo.address,\n          {},\n          marketInfo.programId,\n        );\n      } catch (e) {\n        console.log('Failed loading market', marketInfo.name, e);\n        notify({\n          message: 'Error loading market',\n          description: e.message,\n          type: 'error',\n        });\n        return null;\n      }\n    };\n    return (await Promise.all(marketsList.map(getMarket))).filter((x) => x);\n  };\n  const [markets] = useAsyncData(\n    useUnmigratedDeprecatedMarketsInner,\n    tuple(\n      'useUnmigratedDeprecatedMarketsInner',\n      connection,\n      deps && deps.toString(),\n    ),\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\n  );\n  if (!markets) {\n    return null;\n  }\n  return markets.map((market) => ({\n    market,\n    openOrdersList: accounts.filter((openOrders) =>\n      openOrders.market.equals(market.address),\n    ),\n  }));\n}\n\nexport function useGetOpenOrdersForDeprecatedMarkets() {\n  const { connected, wallet } = useWallet();\n  const [customMarkets] = useLocalStorageState('customMarkets', []);\n  const connection = useConnection();\n  const marketsAndOrders = useUnmigratedDeprecatedMarkets();\n  const marketsList =\n    marketsAndOrders && marketsAndOrders.map(({ market }) => market);\n\n  // This isn't quite right: open order balances could change\n  const deps =\n    marketsList && marketsList.map((market) => market.address.toBase58());\n\n  async function getOpenOrdersForDeprecatedMarkets() {\n    if (!connected) {\n      return null;\n    }\n    if (!marketsList) {\n      return null;\n    }\n    console.log('refreshing getOpenOrdersForDeprecatedMarkets');\n    const getOrders = async (market) => {\n      const { marketName } = getMarketDetails(market, customMarkets);\n      try {\n        console.log('Fetching open orders for', marketName);\n        // Can do better than this, we have the open orders accounts already\n        return (\n          await market.loadOrdersForOwner(connection, wallet.publicKey)\n        ).map((order) => ({ marketName, market, ...order }));\n      } catch (e) {\n        console.log('Failed loading open orders', market.address.toBase58(), e);\n        notify({\n          message: `Error loading open orders for deprecated ${marketName}`,\n          description: e.message,\n          type: 'error',\n        });\n        return null;\n      }\n    };\n    return (await Promise.all(marketsList.map(getOrders)))\n      .filter((x) => x)\n      .flat();\n  }\n\n  const cacheKey = tuple(\n    'getOpenOrdersForDeprecatedMarkets',\n    connected,\n    connection,\n    wallet,\n    deps && deps.toString(),\n  );\n  const [openOrders, loaded] = useAsyncData(\n    getOpenOrdersForDeprecatedMarkets,\n    cacheKey,\n    {\n      refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\n    },\n  );\n  console.log('openOrders', openOrders);\n  return {\n    openOrders,\n    loaded,\n    refreshOpenOrders: () => refreshCache(cacheKey),\n  };\n}\n\nexport function useBalancesForDeprecatedMarkets() {\n  const markets = useUnmigratedDeprecatedMarkets();\n  const [customMarkets] = useLocalStorageState('customMarkets', []);\n  if (!markets) {\n    return null;\n  }\n\n  const openOrderAccountBalances = [];\n  markets.forEach(({ market, openOrdersList }) => {\n    const { baseCurrency, quoteCurrency, marketName } = getMarketDetails(\n      market,\n      customMarkets,\n    );\n    openOrdersList.forEach((openOrders) => {\n      const inOrdersBase =\n        openOrders?.baseTokenTotal &&\n        openOrders?.baseTokenFree &&\n        market.baseSplSizeToNumber(\n          openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\n        );\n      const inOrdersQuote =\n        openOrders?.quoteTokenTotal &&\n        openOrders?.quoteTokenFree &&\n        market.baseSplSizeToNumber(\n          openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\n        );\n      const unsettledBase =\n        openOrders?.baseTokenFree &&\n        market.baseSplSizeToNumber(openOrders.baseTokenFree);\n      const unsettledQuote =\n        openOrders?.quoteTokenFree &&\n        market.baseSplSizeToNumber(openOrders.quoteTokenFree);\n\n      openOrderAccountBalances.push({\n        marketName,\n        market,\n        coin: baseCurrency,\n        key: `${marketName}${baseCurrency}`,\n        orders: inOrdersBase,\n        unsettled: unsettledBase,\n        openOrders,\n      });\n      openOrderAccountBalances.push({\n        marketName,\n        market,\n        coin: quoteCurrency,\n        key: `${marketName}${quoteCurrency}`,\n        orders: inOrdersQuote,\n        unsettled: unsettledQuote,\n        openOrders,\n      });\n    });\n  });\n  return openOrderAccountBalances;\n}\n\nexport function getMarketInfos(customMarkets) {\n  const customMarketsInfo = customMarkets.map((m) => ({\n    ...m,\n    address: new PublicKey(m.address),\n    programId: new PublicKey(m.programId),\n  }));\n\n  return [...customMarketsInfo, ...USE_MARKETS];\n}\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\nhtml,body{\n  background: #11161D;\n}\ninput[type=number]::-webkit-inner-spin-button {\n  opacity: 0;\n}\ninput[type=number]:hover::-webkit-inner-spin-button,\ninput[type=number]:focus::-webkit-inner-spin-button {\n  opacity: 0.25;\n}\n/* width */\n::-webkit-scrollbar {\n  width: 15px;\n}\n/* Track */\n::-webkit-scrollbar-track {\n  background: #2d313c;\n}\n/* Handle */\n::-webkit-scrollbar-thumb {\n  background: #5b5f67;\n}\n/* Handle on hover */\n::-webkit-scrollbar-thumb:hover {\n  background: #5b5f67;\n}\n.ant-slider-track, .ant-slider:hover .ant-slider-track {\n  background-color: #2abdd2;\n  opacity: 0.75;\n}\n.ant-slider-track,\n.ant-slider ant-slider-track:hover {\n  background-color: #2abdd2;\n  opacity: 0.75;\n}\n.ant-slider-dot-active,\n.ant-slider-handle,\n.ant-slider-handle-click-focused,\n.ant-slider:hover .ant-slider-handle:not(.ant-tooltip-open)  {\n  border: 2px solid #2abdd2; \n}\n.ant-table-tbody > tr.ant-table-row:hover > td {\n  background: #273043;\n}\n.ant-table-tbody > tr > td {\n  border-bottom: 8px solid #1A2029;\n}\n.ant-table-container table > thead > tr:first-child th {\n  border-bottom: none;\n}\n.ant-divider-horizontal.ant-divider-with-text::before, .ant-divider-horizontal.ant-divider-with-text::after {\n  border-top: 1px solid #434a59 !important;\n}\n.ant-layout {\n    background: #11161D\n  }\n  .ant-table {\n    background: #212734;\n  }\n  .ant-table-thead > tr > th {\n    background: #1A2029;\n  }\n.ant-select-item-option-content {\n  img {\n    margin-right: 4px;\n  }\n}\n.ant-modal-content {\n  background-color: #212734;\n}\n\n@-webkit-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n@-moz-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n@-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n.flash {\n  -moz-animation: highlight 0.5s ease 0s 1 alternate ;\n  -webkit-animation: highlight 0.5s ease 0s 1 alternate;\n  animation: highlight 0.5s ease 0s 1 alternate;\n}`;\n","import React, { Component } from 'react';\nimport { Typography } from 'antd';\n\nconst { Title } = Typography;\n\nexport default class ErrorBoundary extends Component {\n  state = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div>\n          <div>\n            <Title level={2}>Something went wrong.</Title>\n            <Title level={4}>Please try again later.</Title>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  margin: 5px;\n  padding: 20px;\n  background-color: #1a2029;\n`;\n\nexport default function FloatingElement({ style, children }) {\n  return <Wrapper style={{ ...style }}>{children}</Wrapper>;\n}\n","import { Col, Row } from 'antd';\nimport React, { useRef, useEffect, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useMarket, useOrderbook, useMarkPrice } from '../utils/markets';\nimport { isEqual, getDecimalCount } from '../utils/utils';\nimport { useInterval } from '../utils/useInterval';\nimport FloatingElement from './layout/FloatingElement';\nimport usePrevious from '../utils/usePrevious';\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\n\nconst SizeTitle = styled(Row)`\n  padding: 20px 0 14px;\n  color: #434a59;\n`;\n\nconst MarkPriceTitle = styled(Row)`\n  padding: 20px 0 14px;\n  font-weight: 700;\n`;\n\nconst Line = styled.div`\n  text-align: right;\n  float: right;\n  height: 100%;\n  ${(props) =>\n    props['data-width'] &&\n    css`\n      width: ${props['data-width']};\n    `}\n  ${(props) =>\n    props['data-bgcolor'] &&\n    css`\n      background-color: ${props['data-bgcolor']};\n    `}\n`;\n\nconst Price = styled.div`\n  position: absolute;\n  right: 5px;\n  color: white;\n`;\n\nexport default function Orderbook({ smallScreen, depth = 7, onPrice, onSize }) {\n  const markPrice = useMarkPrice();\n  const [orderbook] = useOrderbook();\n  const { baseCurrency, quoteCurrency } = useMarket();\n\n  const currentOrderbookData = useRef(null);\n  const lastOrderbookData = useRef(null);\n\n  const [orderbookData, setOrderbookData] = useState(null);\n\n  useInterval(() => {\n    if (\n      !currentOrderbookData.current ||\n      JSON.stringify(currentOrderbookData.current) !==\n        JSON.stringify(lastOrderbookData.current)\n    ) {\n      let bids = orderbook?.bids || [];\n      let asks = orderbook?.asks || [];\n\n      let sum = (total, [, size], index) =>\n        index < depth ? total + size : total;\n      let totalSize = bids.reduce(sum, 0) + asks.reduce(sum, 0);\n\n      let bidsToDisplay = getCumulativeOrderbookSide(bids, totalSize, false);\n      let asksToDisplay = getCumulativeOrderbookSide(asks, totalSize, true);\n\n      currentOrderbookData.current = {\n        bids: orderbook?.bids,\n        asks: orderbook?.asks,\n      };\n\n      setOrderbookData({ bids: bidsToDisplay, asks: asksToDisplay });\n    }\n  }, 250);\n\n  useEffect(() => {\n    lastOrderbookData.current = {\n      bids: orderbook?.bids,\n      asks: orderbook?.asks,\n    };\n  }, [orderbook]);\n\n  function getCumulativeOrderbookSide(orders, totalSize, backwards = false) {\n    let cumulative = orders\n      .slice(0, depth)\n      .reduce((cumulative, [price, size], i) => {\n        const cumulativeSize = (cumulative[i - 1]?.cumulativeSize || 0) + size;\n        cumulative.push({\n          price,\n          size,\n          cumulativeSize,\n          sizePercent: Math.round((cumulativeSize / (totalSize || 1)) * 100),\n        });\n        return cumulative;\n      }, []);\n    if (backwards) {\n      cumulative = cumulative.reverse();\n    }\n    return cumulative;\n  }\n\n  return (\n    <FloatingElement\n      style={\n        smallScreen ? { flex: 1 } : { height: '500px', overflow: 'hidden' }\n      }\n    >\n      <Title>Orderbook</Title>\n      <SizeTitle>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          Size ({baseCurrency})\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          Price ({quoteCurrency})\n        </Col>\n      </SizeTitle>\n      {orderbookData?.asks.map(({ price, size, sizePercent }) => (\n        <OrderbookRow\n          key={price + ''}\n          price={price}\n          size={size}\n          side={'sell'}\n          sizePercent={sizePercent}\n          onPriceClick={() => onPrice(price)}\n          onSizeClick={() => onSize(size)}\n        />\n      ))}\n      <MarkPriceComponent markPrice={markPrice} />\n      {orderbookData?.bids.map(({ price, size, sizePercent }) => (\n        <OrderbookRow\n          key={price + ''}\n          price={price}\n          size={size}\n          side={'buy'}\n          sizePercent={sizePercent}\n          onPriceClick={() => onPrice(price)}\n          onSizeClick={() => onSize(size)}\n        />\n      ))}\n    </FloatingElement>\n  );\n}\n\nconst OrderbookRow = React.memo(\n  ({ side, price, size, sizePercent, onSizeClick, onPriceClick }) => {\n    const element = useRef();\n\n    const { market } = useMarket();\n\n    useEffect(() => {\n      // eslint-disable-next-line\n      !element.current?.classList.contains('flash') &&\n        element.current?.classList.add('flash');\n      const id = setTimeout(\n        () =>\n          element.current?.classList.contains('flash') &&\n          element.current?.classList.remove('flash'),\n        250,\n      );\n      return () => clearTimeout(id);\n    }, [price, size]);\n\n    let formattedSize =\n      market?.minOrderSize && !isNaN(size)\n        ? Number(size).toFixed(getDecimalCount(market.minOrderSize) + 1)\n        : size;\n\n    let formattedPrice =\n      market?.tickSize && !isNaN(price)\n        ? Number(price).toFixed(getDecimalCount(market.tickSize) + 1)\n        : price;\n\n    return (\n      <Row ref={element} style={{ marginBottom: 1 }} onClick={onSizeClick}>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          {formattedSize}\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          <Line\n            data-width={sizePercent + '%'}\n            data-bgcolor={\n              side === 'buy'\n                ? 'rgba(65, 199, 122, 0.6)'\n                : 'rgba(242, 60, 105, 0.6)'\n            }\n          />\n          <Price onClick={onPriceClick}>{formattedPrice}</Price>\n        </Col>\n      </Row>\n    );\n  },\n  (prevProps, nextProps) =>\n    isEqual(prevProps, nextProps, ['price', 'size', 'sizePercent']),\n);\n\nconst MarkPriceComponent = React.memo(\n  ({ markPrice }) => {\n    const { market } = useMarket();\n    const previousMarkPrice = usePrevious(markPrice);\n\n    let markPriceColor =\n      markPrice > previousMarkPrice\n        ? '#41C77A'\n        : markPrice < previousMarkPrice\n        ? '#F23B69'\n        : 'white';\n\n    let formattedMarkPrice =\n      markPrice &&\n      market?.tickSize &&\n      markPrice.toFixed(getDecimalCount(market.tickSize));\n\n    return (\n      <MarkPriceTitle justify=\"center\">\n        <Col style={{ color: markPriceColor }}>\n          {markPrice > previousMarkPrice && (\n            <ArrowUpOutlined style={{ marginRight: 5 }} />\n          )}\n          {markPrice < previousMarkPrice && (\n            <ArrowDownOutlined style={{ marginRight: 5 }} />\n          )}\n          {formattedMarkPrice || '----'}\n        </Col>\n      </MarkPriceTitle>\n    );\n  },\n  (prevProps, nextProps) => isEqual(prevProps, nextProps, ['markPrice']),\n);\n","import { useRef, useEffect } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import { useEffect, useRef } from 'react';\n\nexport default function usePrevious(value) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef();\n\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n\n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\n","import React from 'react';\nimport { ConfigProvider, Table } from 'antd';\n\nexport default function DataTable({\n  dataSource,\n  columns,\n  emptyLabel = 'No data',\n  pagination = false,\n  loading = false,\n  pageSize = 10,\n}) {\n  const customizeRenderEmpty = () => (\n    <div\n      style={{\n        padding: '20px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      {emptyLabel}\n    </div>\n  );\n\n  return (\n    <ConfigProvider renderEmpty={customizeRenderEmpty}>\n      <Table\n        dataSource={dataSource}\n        columns={columns}\n        pagination={pagination ? { pagination: true, pageSize } : false}\n        loading={loading}\n      />\n    </ConfigProvider>\n  );\n}\n","import { Button } from 'antd';\nimport React from 'react';\nimport {\n  useTokenAccounts,\n  getSelectedTokenAccountForMint,\n} from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\nimport { useSendConnection } from '../../utils/connection';\nimport { useWallet } from '../../utils/wallet';\nimport { settleFunds } from '../../utils/send';\nimport { notify } from '../../utils/notifications';\n\nexport default function BalancesTable({\n  balances,\n  showMarket,\n  hideWalletBalance,\n  onSettleSuccess,\n}) {\n  const [accounts] = useTokenAccounts();\n  const connection = useSendConnection();\n  const { wallet } = useWallet();\n\n  async function onSettleFunds(market, openOrders) {\n    try {\n      await settleFunds({\n        market,\n        openOrders,\n        connection,\n        wallet,\n        baseCurrencyAccount: getSelectedTokenAccountForMint(\n          accounts,\n          market?.baseMintAddress,\n        ),\n        quoteCurrencyAccount: getSelectedTokenAccountForMint(\n          accounts,\n          market?.quoteMintAddress,\n        ),\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    }\n    onSettleSuccess && onSettleSuccess();\n  }\n\n  const columns = [\n    showMarket\n      ? {\n          title: 'Market',\n          dataIndex: 'marketName',\n          key: 'marketName',\n        }\n      : null,\n    {\n      title: 'Coin',\n      dataIndex: 'coin',\n      key: 'coin',\n    },\n    hideWalletBalance\n      ? null\n      : {\n          title: 'Wallet Balance',\n          dataIndex: 'wallet',\n          key: 'wallet',\n        },\n    {\n      title: 'Orders',\n      dataIndex: 'orders',\n      key: 'orders',\n    },\n    {\n      title: 'Unsettled',\n      dataIndex: 'unsettled',\n      key: 'unsettled',\n    },\n    {\n      key: 'action',\n      render: ({ market, openOrders, marketName }) => (\n        <div style={{ textAlign: 'right' }}>\n          <Button\n            ghost\n            style={{ marginRight: 12 }}\n            onClick={() => onSettleFunds(market, openOrders)}\n          >\n            Settle {marketName}\n          </Button>\n        </div>\n      ),\n    },\n  ].filter((x) => x);\n  return (\n    <DataTable\n      emptyLabel=\"No balances\"\n      dataSource={balances}\n      columns={columns}\n      pagination={false}\n    />\n  );\n}\n","import React, { useState } from 'react';\nimport DataTable from '../layout/DataTable';\n\nimport styled from 'styled-components';\nimport { Button, Row, Col, Tag } from 'antd';\nimport { cancelOrder } from '../../utils/send';\nimport { useWallet } from '../../utils/wallet';\nimport { useSendConnection } from '../../utils/connection';\nimport { notify } from '../../utils/notifications';\nimport { DeleteOutlined } from '@ant-design/icons';\n\nconst CancelButton = styled(Button)`\n  color: #f23b69;\n  border: 1px solid #f23b69;\n`;\n\nexport default function OpenOrderTable({ openOrders, onCancelSuccess }) {\n  let { wallet } = useWallet();\n  let connection = useSendConnection();\n\n  const [cancelId, setCancelId] = useState(null);\n\n  async function cancel(order) {\n    setCancelId(order?.orderId);\n    try {\n      await cancelOrder({\n        order,\n        market: order.market,\n        connection,\n        wallet,\n      });\n    } catch (e) {\n      notify({\n        message: 'Error cancelling order',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    } finally {\n      setCancelId(null);\n    }\n    onCancelSuccess && onCancelSuccess();\n  }\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'marketName',\n      key: 'marketName',\n    },\n    {\n      title: 'Side',\n      dataIndex: 'side',\n      key: 'side',\n      render: (side) => (\n        <Tag\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\n          style={{ fontWeight: 700 }}\n        >\n          {side.charAt(0).toUpperCase() + side.slice(1)}\n        </Tag>\n      ),\n    },\n    {\n      title: 'Size',\n      dataIndex: 'size',\n      key: 'size',\n    },\n    {\n      title: 'Price',\n      dataIndex: 'price',\n      key: 'price',\n    },\n    {\n      key: 'orderId',\n      render: (order) => (\n        <div style={{ textAlign: 'right' }}>\n          <CancelButton\n            icon={<DeleteOutlined />}\n            onClick={() => cancel(order)}\n            loading={cancelId + '' === order?.orderId + ''}\n          >\n            Cancel\n          </CancelButton>\n        </div>\n      ),\n    },\n  ];\n  const dataSource = (openOrders || []).map((order) =>\n    Object.assign(order, { key: order.orderId }),\n  );\n\n  return (\n    <Row>\n      <Col span={24}>\n        <DataTable\n          emptyLabel=\"No open orders\"\n          dataSource={dataSource}\n          columns={columns}\n          pagination={true}\n          pageSize={5}\n        />\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react';\nimport { Row, Col, Tag } from 'antd';\nimport { useFills, useMarket } from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\n\nexport default function FillsTable() {\n  const fills = useFills();\n\n  const { quoteCurrency } = useMarket();\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'marketName',\n      key: 'marketName',\n    },\n    {\n      title: 'Side',\n      dataIndex: 'side',\n      key: 'side',\n      render: (side) => (\n        <Tag\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\n          style={{ fontWeight: 700 }}\n        >\n          {side.charAt(0).toUpperCase() + side.slice(1)}\n        </Tag>\n      ),\n    },\n    {\n      title: `Size`,\n      dataIndex: 'size',\n      key: 'size',\n    },\n    {\n      title: `Price`,\n      dataIndex: 'price',\n      key: 'price',\n    },\n    {\n      title: `Liquidity`,\n      dataIndex: 'liquidity',\n      key: 'liquidity',\n    },\n    {\n      title: quoteCurrency ? `Fees (${quoteCurrency})` : 'Fees',\n      dataIndex: 'feeCost',\n      key: 'feeCost',\n    },\n  ];\n\n  const dataSource = (fills || []).map((fill) => ({\n    ...fill,\n    key: `${fill.orderId}${fill.side}`,\n    liquidity: fill.eventFlags.maker ? 'Maker' : 'Taker',\n  }));\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <DataTable\n            dataSource={dataSource}\n            columns={columns}\n            pagination={true}\n            pageSize={5}\n            emptyLabel=\"No fills\"\n          />\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React from 'react';\nimport { Row, Col, Typography, Tag } from 'antd';\nimport { useFeeDiscountKeys } from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\nimport { TokenInstructions, getFeeRates } from '@project-serum/serum';\nimport { percentFormat } from '../../utils/utils';\n\nexport default function FeesTable() {\n  const [feeAccounts] = useFeeDiscountKeys();\n\n  const columns = [\n    {\n      title: 'Fee Tier',\n      dataIndex: 'feeTier',\n      key: 'feeTier',\n      render: (feeTier, row) => (\n        <div style={{ display: 'flex' }}>\n          <Typography>{feeTier}</Typography>\n          {row.index === 0 ? (\n            <div style={{ marginLeft: 10 }}>\n              <Tag color={'#41C77A'} style={{ fontWeight: 700 }}>\n                Selected\n              </Tag>\n            </div>\n          ) : null}\n        </div>\n      ),\n    },\n    {\n      title: 'Taker',\n      dataIndex: 'taker',\n      key: 'taker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).taker),\n    },\n    {\n      title: 'Maker',\n      dataIndex: 'maker',\n      key: 'maker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).maker),\n    },\n    {\n      title: `Public Key`,\n      dataIndex: 'pubkey',\n      key: 'pubkey',\n      render: (pubkey) => pubkey.toBase58(),\n    },\n    {\n      title: `Balance`,\n      dataIndex: 'balance',\n      key: 'balance',\n    },\n    {\n      title: `Mint`,\n      dataIndex: 'mint',\n      key: 'mint',\n      render: (_, row) =>\n        row.mint.equals(TokenInstructions.SRM_MINT)\n          ? 'SRM'\n          : row.mint.equals(TokenInstructions.MSRM_MINT)\n          ? 'MSRM'\n          : 'UNKNOWN',\n    },\n  ];\n\n  const dataSource = (feeAccounts || []).map((account, index) => ({\n    ...account,\n    index,\n    key: account.pubkey.toBase58(),\n  }));\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <DataTable\n            dataSource={dataSource}\n            columns={columns}\n            pagination={true}\n            pageSize={5}\n            emptyLabel=\"No (M)SRM accounts\"\n          />\n        </Col>\n      </Row>\n      <Row style={{ marginTop: 8 }}>\n        <Col>\n          <Typography>\n            Holding SRM or MSRM makes you eligible for fee discounts:\n          </Typography>\n          <FeeScheduleTable />\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nfunction FeeScheduleTable() {\n  // Representation of serum-js/src/fees.ts\n  const dataSource = [\n    { feeTier: 0, taker: 0.0022, maker: -0.0003, token: '', balance: '' },\n    { feeTier: 1, taker: 0.002, maker: -0.0003, token: 'SRM', balance: 100 },\n    { feeTier: 2, taker: 0.0018, maker: -0.0003, token: 'SRM', balance: 1000 },\n    { feeTier: 3, taker: 0.0016, maker: -0.0003, token: 'SRM', balance: 10000 },\n    {\n      feeTier: 4,\n      taker: 0.0014,\n      maker: -0.0003,\n      token: 'SRM',\n      balance: 100000,\n    },\n    {\n      feeTier: 5,\n      taker: 0.0012,\n      maker: -0.0003,\n      token: 'SRM',\n      balance: 1000000,\n    },\n    { feeTier: 6, taker: 0.001, maker: -0.0005, token: 'MSRM', balance: 1 },\n  ];\n  const columns = [\n    {\n      title: 'Fee Tier',\n      dataIndex: 'feeTier',\n      key: 'feeTier',\n    },\n    {\n      title: 'Taker',\n      dataIndex: 'taker',\n      key: 'taker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).taker),\n    },\n    {\n      title: 'Maker',\n      dataIndex: 'maker',\n      key: 'maker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).maker),\n    },\n    {\n      title: 'Requirements',\n      dataIndex: 'requirements',\n      key: 'requirements',\n      render: (_, row) => (\n        <Typography>\n          {!row.balance ? 'None' : `≥ ${row.balance} ${row.token}`}\n        </Typography>\n      ),\n    },\n  ];\n  return (\n    <DataTable\n      dataSource={dataSource.map((info) => ({ ...info, key: info.feeTier }))}\n      columns={columns}\n    />\n  );\n}\n","import BalancesTable from './BalancesTable';\nimport OpenOrderTable from './OpenOrderTable';\nimport React from 'react';\nimport { Tabs, Typography } from 'antd';\nimport FillsTable from './FillsTable';\nimport FloatingElement from '../layout/FloatingElement';\nimport FeesTable from './FeesTable';\nimport { useOpenOrders, useBalances, useMarket } from '../../utils/markets';\n\nconst { Paragraph } = Typography;\nconst { TabPane } = Tabs;\n\nexport default function Index() {\n  const { market } = useMarket();\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 20 }}>\n      <Typography>\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)' }}>\n          Make sure to go to Balances and click Settle to send out your funds.\n        </Paragraph>\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)' }}>\n          To fund your wallet, <a href=\"https://www.sollet.io\">sollet.io</a>.\n          You can get SOL from FTX, Binance, BitMax, and others. You can get\n          other tokens from FTX.{' '}\n        </Paragraph>\n      </Typography>\n      <Tabs defaultActiveKey=\"orders\">\n        <TabPane tab=\"Open Orders\" key=\"orders\">\n          <OpenOrdersTab />\n        </TabPane>\n        <TabPane tab=\"Recent Trade History\" key=\"fills\">\n          <FillsTable />\n        </TabPane>\n        <TabPane tab=\"Balances\" key=\"balances\">\n          <BalancesTab />\n        </TabPane>\n        {market && market.supportsSrmFeeDiscounts ? (\n          <TabPane tab=\"Fee discounts\" key=\"fees\">\n            <FeesTable />\n          </TabPane>\n        ) : null}\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\nconst OpenOrdersTab = () => {\n  const openOrders = useOpenOrders();\n\n  return <OpenOrderTable openOrders={openOrders} />;\n};\n\nconst BalancesTab = () => {\n  const balances = useBalances();\n\n  return <BalancesTable balances={balances} />;\n};\n","import React from 'react';\nimport { Modal } from 'antd';\nimport {\n  useSelectedBaseCurrencyAccount,\n  useMarket,\n  useSelectedQuoteCurrencyAccount,\n} from '../utils/markets';\nimport { useWallet } from '../utils/wallet';\nimport Link from './Link';\n\nexport default function DepositDialog({ onClose, baseOrQuote }) {\n  const { market, baseCurrency, quoteCurrency } = useMarket();\n\n  const { providerName, providerUrl } = useWallet();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  let coinMint;\n  let account;\n  let depositCoin;\n  if (baseOrQuote === 'base') {\n    coinMint = market?.baseMintAddress;\n    account = baseCurrencyAccount;\n    depositCoin = baseCurrency;\n  } else if (baseOrQuote === 'quote') {\n    coinMint = market?.quoteMintAddress;\n    account = quoteCurrencyAccount;\n    depositCoin = quoteCurrency;\n  } else {\n    account = null;\n  }\n  if (!coinMint) {\n    return null;\n  }\n  return (\n    <Modal\n      title={depositCoin}\n      visible={!!coinMint}\n      onOk={onClose}\n      onCancel={onClose}\n    >\n      <div style={{ paddingTop: '20px' }}>\n        <p style={{ color: 'white' }}>Mint address:</p>\n        <p style={{ color: 'rgba(255,255,255,0.5)' }}>{coinMint.toBase58()}</p>\n        <div>\n          <p style={{ color: 'white' }}>SPL Deposit address:</p>\n          <p style={{ color: 'rgba(255,255,255,0.5)' }}>\n            {account ? (\n              account.pubkey.toBase58()\n            ) : (\n              <>\n                Visit{' '}\n                <Link external to={providerUrl}>\n                  {providerName}\n                </Link>{' '}\n                to create an account for this mint\n              </>\n            )}\n          </p>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n","import { Button, Col, Divider, Row } from 'antd';\nimport React, { useState } from 'react';\nimport FloatingElement from './layout/FloatingElement';\nimport styled from 'styled-components';\nimport {\n  useBalances,\n  useMarket,\n  useSelectedBaseCurrencyAccount,\n  useSelectedOpenOrdersAccount,\n  useSelectedQuoteCurrencyAccount,\n} from '../utils/markets';\nimport DepositDialog from './DepositDialog';\nimport { useWallet } from '../utils/wallet';\nimport Link from './Link';\nimport { settleFunds } from '../utils/send';\nimport { useSendConnection } from '../utils/connection';\nimport { notify } from '../utils/notifications';\n\nconst RowBox = styled(Row)`\n  padding-bottom: 20px;\n`;\n\nconst Tip = styled.p`\n  font-size: 12px;\n  padding-top: 6px;\n`;\n\nconst ActionButton = styled(Button)`\n  color: #2abdd2;\n  background-color: #212734;\n  border-width: 0px;\n`;\n\nexport default function StandaloneBalancesDisplay() {\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const balances = useBalances();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const connection = useSendConnection();\n  const { providerUrl, providerName, wallet } = useWallet();\n  const [baseOrQuote, setBaseOrQuote] = useState('');\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const baseCurrencyBalances =\n    balances && balances.find((b) => b.coin === baseCurrency);\n  const quoteCurrencyBalances =\n    balances && balances.find((b) => b.coin === quoteCurrency);\n\n  async function onSettleFunds() {\n    try {\n      await settleFunds({\n        market,\n        openOrders: openOrdersAccount,\n        connection,\n        wallet,\n        baseCurrencyAccount,\n        quoteCurrencyAccount,\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n    }\n  }\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      {[\n        [baseCurrency, baseCurrencyBalances, 'base'],\n        [quoteCurrency, quoteCurrencyBalances, 'quote'],\n      ].map(([currency, balances, baseOrQuote], index) => (\n        <React.Fragment key={index}>\n          <Divider style={{ borderColor: 'white' }}>{currency}</Divider>\n          <RowBox\n            align=\"middle\"\n            justify=\"space-between\"\n            style={{ paddingBottom: 12 }}\n          >\n            <Col>Wallet balance:</Col>\n            <Col>{balances && balances.wallet}</Col>\n          </RowBox>\n          <RowBox\n            align=\"middle\"\n            justify=\"space-between\"\n            style={{ paddingBottom: 12 }}\n          >\n            <Col>Unsettled balance:</Col>\n            <Col>{balances && balances.unsettled}</Col>\n          </RowBox>\n          <RowBox align=\"middle\" justify=\"space-around\">\n            <Col style={{ width: 150 }}>\n              <ActionButton\n                block\n                size=\"large\"\n                onClick={() => setBaseOrQuote(baseOrQuote)}\n              >\n                Deposit\n              </ActionButton>\n            </Col>\n            <Col style={{ width: 150 }}>\n              <ActionButton block size=\"large\" onClick={onSettleFunds}>\n                Settle\n              </ActionButton>\n            </Col>\n          </RowBox>\n          <Tip>\n            All deposits go to your{' '}\n            <Link external to={providerUrl}>\n              {providerName}\n            </Link>{' '}\n            wallet\n          </Tip>\n        </React.Fragment>\n      ))}\n      <DepositDialog\n        baseOrQuote={baseOrQuote}\n        onClose={() => setBaseOrQuote('')}\n      />\n    </FloatingElement>\n  );\n}\n","import { Button, Input, Radio, Switch, Slider } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport {\n  useBaseCurrencyBalances,\n  useQuoteCurrencyBalances,\n  useMarket,\n  useMarkPrice,\n  useSelectedOpenOrdersAccount,\n  useSelectedBaseCurrencyAccount,\n  useSelectedQuoteCurrencyAccount,\n} from '../utils/markets';\nimport { useWallet } from '../utils/wallet';\nimport { notify } from '../utils/notifications';\nimport {\n  getDecimalCount,\n  roundToDecimal,\n  floorToDecimal,\n} from '../utils/utils';\nimport { useSendConnection } from '../utils/connection';\nimport FloatingElement from './layout/FloatingElement';\nimport { placeOrder } from '../utils/send';\n\nconst SellButton = styled(Button)`\n  margin: 20px 0px 0px 0px;\n  background: #f23b69;\n  border-color: #f23b69;\n`;\n\nconst BuyButton = styled(Button)`\n  margin: 20px 0px 0px 0px;\n  background: #02bf76;\n  border-color: #02bf76;\n`;\n\nconst sliderMarks = {\n  0: '0%',\n  25: '25%',\n  50: '50%',\n  75: '75%',\n  100: '100%',\n};\n\nexport default function TradeForm({ style, setChangeOrderRef }) {\n  const [side, setSide] = useState('buy');\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const baseCurrencyBalances = useBaseCurrencyBalances();\n  const quoteCurrencyBalances = useQuoteCurrencyBalances();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const { wallet } = useWallet();\n  const sendConnection = useSendConnection();\n  const markPrice = useMarkPrice();\n\n  const [postOnly, setPostOnly] = useState(false);\n  const [ioc, setIoc] = useState(false);\n  const [baseSize, setBaseSize] = useState(null);\n  const [quoteSize, setQuoteSize] = useState(null);\n  const [price, setPrice] = useState(null);\n  const [submitting, setSubmitting] = useState(false);\n  const [sizeFraction, setSizeFraction] = useState(0);\n\n  const availableQuote = openOrdersAccount\n    ? market.quoteSplSizeToNumber(openOrdersAccount.quoteTokenFree)\n    : 0;\n\n  let quoteBalance = (quoteCurrencyBalances || 0) + (availableQuote || 0);\n  let baseBalance = baseCurrencyBalances || 0;\n  let sizeDecimalCount =\n    market?.minOrderSize && getDecimalCount(market.minOrderSize);\n  let priceDecimalCount = market?.tickSize && getDecimalCount(market.tickSize);\n\n  useEffect(() => {\n    setChangeOrderRef && setChangeOrderRef(doChangeOrder);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setChangeOrderRef]);\n\n  useEffect(() => {\n    baseSize && price && onSliderChange(sizeFraction);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [side]);\n\n  useEffect(() => {\n    updateSizeFraction();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [price, baseSize]);\n\n  const onSetBaseSize = (baseSize) => {\n    setBaseSize(baseSize);\n    const rawQuoteSize = baseSize * (price || markPrice);\n    const quoteSize =\n      baseSize && roundToDecimal(rawQuoteSize, sizeDecimalCount);\n    setQuoteSize(quoteSize);\n  };\n\n  const onSetQuoteSize = (quoteSize) => {\n    setQuoteSize(quoteSize);\n    const rawBaseSize = quoteSize / price;\n    const baseSize = quoteSize && roundToDecimal(rawBaseSize, sizeDecimalCount);\n    setBaseSize(baseSize);\n  };\n\n  const doChangeOrder = ({ size, price }) => {\n    const formattedSize = size && roundToDecimal(size, sizeDecimalCount);\n    const formattedPrice = price && roundToDecimal(price, priceDecimalCount);\n    formattedSize && onSetBaseSize(formattedSize);\n    formattedPrice && setPrice(formattedPrice);\n  };\n\n  const updateSizeFraction = () => {\n    const rawMaxSize = side === 'buy' ? quoteBalance / price : baseBalance;\n    const maxSize = floorToDecimal(rawMaxSize, sizeDecimalCount);\n    const sizeFraction = Math.min((baseSize / maxSize) * 100, 100);\n    setSizeFraction(sizeFraction);\n  };\n\n  const onSliderChange = (value) => {\n    if (!price && markPrice) {\n      let formattedMarkPrice = priceDecimalCount\n        ? markPrice.toFixed(priceDecimalCount)\n        : markPrice;\n      setPrice(formattedMarkPrice);\n    }\n\n    let newSize;\n    if (side === 'buy') {\n      if (price || markPrice) {\n        newSize = ((quoteBalance / (price || markPrice)) * value) / 100;\n      }\n    } else {\n      newSize = (baseBalance * value) / 100;\n    }\n\n    // round down to minOrderSize increment\n    let formatted = floorToDecimal(newSize, sizeDecimalCount);\n\n    onSetBaseSize(formatted);\n  };\n\n  const postOnChange = (checked) => {\n    if (checked) {\n      setIoc(false);\n    }\n    setPostOnly(checked);\n  };\n  const iocOnChange = (checked) => {\n    if (checked) {\n      setPostOnly(false);\n    }\n    setIoc(checked);\n  };\n\n  async function onSubmit() {\n    const parsedPrice = parseFloat(price);\n    const parsedSize = parseFloat(baseSize);\n\n    setSubmitting(true);\n    try {\n      await placeOrder({\n        side,\n        price: parsedPrice,\n        size: parsedSize,\n        orderType: ioc ? 'ioc' : postOnly ? 'postOnly' : 'limit',\n        market,\n        connection: sendConnection,\n        wallet,\n        baseCurrencyAccount: baseCurrencyAccount?.pubkey,\n        quoteCurrencyAccount: quoteCurrencyAccount?.pubkey,\n      });\n      setPrice(null);\n      onSetBaseSize(null);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error placing order',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <FloatingElement\n      style={{ display: 'flex', flexDirection: 'column', ...style }}\n    >\n      <div style={{ flex: 1 }}>\n        <Radio.Group\n          onChange={(e) => setSide(e.target.value)}\n          value={side}\n          buttonStyle=\"solid\"\n          style={{\n            marginBottom: 8,\n            width: '100%',\n          }}\n        >\n          <Radio.Button\n            value=\"buy\"\n            style={{\n              width: '50%',\n              textAlign: 'center',\n              background: side === 'buy' ? '#02bf76' : '',\n              borderColor: side === 'buy' ? '#02bf76' : '',\n            }}\n          >\n            BUY\n          </Radio.Button>\n          <Radio.Button\n            value=\"sell\"\n            style={{\n              width: '50%',\n              textAlign: 'center',\n              background: side === 'sell' ? '#F23B69' : '',\n              borderColor: side === 'sell' ? '#F23B69' : '',\n            }}\n          >\n            SELL\n          </Radio.Button>\n        </Radio.Group>\n        <Input\n          style={{ textAlign: 'right', paddingBottom: 8 }}\n          addonBefore={<div style={{ width: '30px' }}>Price</div>}\n          suffix={\n            <span style={{ fontSize: 10, opacity: 0.5 }}>{quoteCurrency}</span>\n          }\n          value={price}\n          type=\"number\"\n          step={market?.tickSize || 1}\n          onChange={(e) => setPrice(e.target.value)}\n        />\n        <Input.Group compact style={{ paddingBottom: 8 }}>\n          <Input\n            style={{ width: 'calc(50% + 30px)', textAlign: 'right' }}\n            addonBefore={<div style={{ width: '30px' }}>Size</div>}\n            suffix={\n              <span style={{ fontSize: 10, opacity: 0.5 }}>{baseCurrency}</span>\n            }\n            value={baseSize}\n            type=\"number\"\n            step={market?.minOrderSize || 1}\n            onChange={(e) => onSetBaseSize(e.target.value)}\n          />\n          <Input\n            style={{ width: 'calc(50% - 30px)', textAlign: 'right' }}\n            suffix={\n              <span style={{ fontSize: 10, opacity: 0.5 }}>\n                {quoteCurrency}\n              </span>\n            }\n            value={quoteSize}\n            type=\"number\"\n            step={market?.minOrderSize || 1}\n            onChange={(e) => onSetQuoteSize(e.target.value)}\n          />\n        </Input.Group>\n        <Slider\n          value={sizeFraction}\n          tipFormatter={(value) => `${value}%`}\n          marks={sliderMarks}\n          onChange={onSliderChange}\n        />\n        <div style={{ paddingTop: 18 }}>\n          {'POST '}\n          <Switch\n            checked={postOnly}\n            onChange={postOnChange}\n            style={{ marginRight: 40 }}\n          />\n          {'IOC '}\n          <Switch checked={ioc} onChange={iocOnChange} />\n        </div>\n      </div>\n      {side === 'buy' ? (\n        <BuyButton\n          disabled={!price || !baseSize}\n          onClick={onSubmit}\n          block\n          type=\"primary\"\n          size=\"large\"\n          loading={submitting}\n        >\n          Buy {baseCurrency}\n        </BuyButton>\n      ) : (\n        <SellButton\n          disabled={!price || !baseSize}\n          onClick={onSubmit}\n          block\n          type=\"primary\"\n          size=\"large\"\n          loading={submitting}\n        >\n          Sell {baseCurrency}\n        </SellButton>\n      )}\n    </FloatingElement>\n  );\n}\n","import { Col, Row } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useMarket, useTrades } from '../utils/markets';\nimport { getDecimalCount } from '../utils/utils';\nimport FloatingElement from './layout/FloatingElement';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\nconst SizeTitle = styled(Row)`\n  padding: 20px 0 14px;\n  color: #434a59;\n`;\n\n// TODO: Put in some scrolling\nconst TradesContainer = styled.div`\n  height: calc(100% - 75px);\n  margin-right: -20px;\n  padding-right: 5px;\n  overflow-y: scroll;\n`;\n\nexport default function PublicTrades({ smallScreen }) {\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const trades = useTrades();\n  return (\n    <FloatingElement\n      style={\n        smallScreen\n          ? { flex: 1 }\n          : {\n              marginTop: '10px',\n              minHeight: '270px',\n              height: 'calc(100vh - 710px)',\n            }\n      }\n    >\n      <Title>Recent Market trades</Title>\n      <SizeTitle>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          Size ({baseCurrency})\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          Price ({quoteCurrency}){' '}\n        </Col>\n      </SizeTitle>\n      {!!trades && (\n        <TradesContainer>\n          {trades.map((trade, i) => (\n            <Row key={i} style={{ marginBottom: 4 }}>\n              <Col span={12} style={{ textAlign: 'left' }}>\n                {market?.minOrderSize && !isNaN(trade.size)\n                  ? Number(trade.size).toFixed(\n                      getDecimalCount(market.minOrderSize),\n                    )\n                  : trade.size}\n              </Col>\n              <Col\n                span={12}\n                style={{\n                  textAlign: 'right',\n                  color: trade.side === 'buy' ? '#41C77A' : '#F23B69',\n                }}\n              >\n                {market?.tickSize && !isNaN(trade.price)\n                  ? Number(trade.price).toFixed(\n                      getDecimalCount(market.tickSize),\n                    )\n                  : trade.price}\n              </Col>\n            </Row>\n          ))}\n        </TradesContainer>\n      )}\n    </FloatingElement>\n  );\n}\n","import React from 'react';\nimport { Button } from 'antd';\nimport { LinkOutlined } from '@ant-design/icons';\n\nexport default function LinkAddress({ title, address }) {\n  return (\n    <div>\n      {title && <p style={{ color: 'white' }}>{title}</p>}\n      <Button\n        type=\"link\"\n        icon={<LinkOutlined />}\n        href={'https://explorer.solana.com/address/' + address}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {address}\n      </Button>\n    </div>\n  );\n}\n","import { Button, Divider, Spin, Typography } from 'antd';\nimport React from 'react';\nimport {\n  useGetOpenOrdersForDeprecatedMarkets,\n  useBalancesForDeprecatedMarkets,\n  useUnmigratedOpenOrdersAccounts,\n} from '../utils/markets';\nimport FloatingElement from './layout/FloatingElement';\nimport CheckOutlined from '@ant-design/icons/lib/icons/CheckOutlined';\nimport BalancesTable from './UserInfoTable/BalancesTable';\nimport OpenOrderTable from './UserInfoTable/OpenOrderTable';\nimport SyncOutlined from '@ant-design/icons/lib/icons/SyncOutlined';\n\nconst { Title } = Typography;\n\nexport default function DeprecatedMarketsInstructions({ switchToLiveMarkets }) {\n  const balances = useBalancesForDeprecatedMarkets();\n  const {\n    openOrders,\n    loaded,\n    refreshOpenOrders,\n  } = useGetOpenOrdersForDeprecatedMarkets();\n\n  const { refresh } = useUnmigratedOpenOrdersAccounts();\n  const needToCancelOrders = !openOrders || openOrders.length > 0;\n  const filteredBalances =\n    balances &&\n    balances.filter(({ orders, unsettled }) => orders > 0 || unsettled > 0);\n  const needToSettleFunds = filteredBalances && filteredBalances.length > 0;\n  return (\n    <FloatingElement>\n      <Title level={4} style={{ color: 'rgba(255, 255, 255, 1)' }}>\n        Migrate to new markets\n      </Title>\n      <Typography>\n        Serum has rolled out upgraded markets! They're faster and support fee\n        discounts based on SRM holdings.\n      </Typography>\n      <br />\n      <Typography>\n        To migrate over to the new markets, please cancel your orders and settle\n        your funds on old markets.\n      </Typography>\n      <div style={{ marginTop: 20, display: 'flex', justifyContent: 'center' }}>\n        <Button onClick={() => refresh(true)}>\n          <SyncOutlined /> Refresh data\n        </Button>\n      </div>\n      {!balances ? (\n        <Spin size=\"large\" />\n      ) : (\n        <>\n          <Divider>\n            {!needToCancelOrders && <CheckOutlined />} Cancel your orders\n          </Divider>\n          {needToCancelOrders ? (\n            loaded ? (\n              <OpenOrderTable\n                openOrders={openOrders}\n                onCancelSuccess={() => {\n                  setTimeout(() => {\n                    refresh();\n                    refreshOpenOrders();\n                  }, 1000); // Wait so that on-chain account state reflects the update\n                }}\n              />\n            ) : (\n              <Spin size=\"large\" />\n            )\n          ) : null}\n          <Divider>\n            {!needToSettleFunds && <CheckOutlined />} Settle your funds\n          </Divider>\n          {needToSettleFunds && (\n            <BalancesTable\n              balances={filteredBalances}\n              hideWalletBalance\n              showMarket\n              onSettleSuccess={() => {\n                setTimeout(refresh, 1000); // Wait so that on-chain account state reflects the update\n              }}\n            />\n          )}\n          <Divider>Switch to upgraded markets</Divider>\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\n            <Button\n              onClick={switchToLiveMarkets}\n              disabled={needToSettleFunds || needToCancelOrders}\n            >\n              Switch to new markets\n            </Button>\n          </div>\n        </>\n      )}\n    </FloatingElement>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Col, Input, Modal, Row, Typography } from 'antd';\nimport { notify } from '../utils/notifications';\nimport { isValidPublicKey } from '../utils/utils';\nimport { PublicKey } from '@solana/web3.js';\nimport { Market, MARKETS, TOKEN_MINTS } from '@project-serum/serum';\nimport { useAccountInfo, useConnection } from '../utils/connection';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nconst { Text } = Typography;\n\nexport default function CustomMarketDialog({\n  visible,\n  onAddCustomMarket,\n  onClose,\n}) {\n  const connection = useConnection();\n\n  const [marketId, setMarketId] = useState('');\n\n  const [marketLabel, setMarketLabel] = useState('');\n  const [baseLabel, setBaseLabel] = useState('');\n  const [quoteLabel, setQuoteLabel] = useState('');\n\n  const [market, setMarket] = useState(null);\n  const [loadingMarket, setLoadingMarket] = useState(false);\n\n  const wellFormedMarketId = isValidPublicKey(marketId);\n\n  const [marketAccountInfo] = useAccountInfo(\n    wellFormedMarketId ? new PublicKey(marketId) : null,\n  );\n  const programId = marketAccountInfo\n    ? marketAccountInfo.owner.toBase58()\n    : MARKETS.find(({ deprecated }) => !deprecated).programId.toBase58();\n\n  useEffect(() => {\n    if (!wellFormedMarketId || !programId) {\n      resetLabels();\n      return;\n    }\n    setLoadingMarket(true);\n    Market.load(\n      connection,\n      new PublicKey(marketId),\n      {},\n      new PublicKey(programId),\n    )\n      .then((market) => {\n        setMarket(market);\n      })\n      .catch(() => {\n        resetLabels();\n        setMarket(null);\n      })\n      .finally(() => setLoadingMarket(false));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [connection, marketId, programId]);\n\n  const resetLabels = () => {\n    setMarketLabel(null);\n    setBaseLabel(null);\n    setQuoteLabel(null);\n  };\n\n  const knownMarket = MARKETS.find(\n    (m) =>\n      m.address.toBase58() === marketId && m.programId.toBase58() === programId,\n  );\n  const knownProgram = MARKETS.find(\n    (m) => m.programId.toBase58() === programId,\n  );\n  const knownBaseCurrency =\n    market?.baseMintAddress &&\n    TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\n      ?.name;\n\n  const knownQuoteCurrency =\n    market?.quoteMintAddress &&\n    TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\n      ?.name;\n\n  const canSubmit =\n    !loadingMarket &&\n    !!market &&\n    market.publicKey.toBase58() === marketId &&\n    marketId &&\n    programId &&\n    marketLabel &&\n    (knownBaseCurrency || baseLabel) &&\n    (knownQuoteCurrency || quoteLabel) &&\n    wellFormedMarketId;\n\n  const onSubmit = () => {\n    if (!canSubmit) {\n      notify({\n        message: 'Please fill in all fields with valid values',\n        type: 'error',\n      });\n      return;\n    }\n\n    let params = {\n      address: marketId,\n      programId,\n      name: marketLabel,\n    };\n    if (!knownBaseCurrency) {\n      params.baseLabel = baseLabel;\n    }\n    if (!knownQuoteCurrency) {\n      params.quoteLabel = quoteLabel;\n    }\n    onAddCustomMarket(params);\n    onDoClose();\n  };\n\n  const onDoClose = () => {\n    resetLabels();\n    setMarket(null);\n    setMarketId(null);\n    onClose();\n  };\n\n  return (\n    <Modal\n      title={'Add custom market'}\n      visible={visible}\n      onOk={onSubmit}\n      okText={'Add'}\n      onCancel={onDoClose}\n      okButtonProps={{ disabled: !canSubmit }}\n    >\n      <div>\n        {wellFormedMarketId ? (\n          <>\n            {!market && !loadingMarket && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Not a valid market</Text>\n              </Row>\n            )}\n            {market && knownMarket && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"warning\">Market known: {knownMarket.name}</Text>\n              </Row>\n            )}\n            {market && !knownProgram && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Warning: unknown DEX program</Text>\n              </Row>\n            )}\n            {market && knownProgram && knownProgram.deprecated && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"warning\">Warning: deprecated DEX program</Text>\n              </Row>\n            )}\n          </>\n        ) : (\n          <>\n            {marketId && !wellFormedMarketId && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Invalid market ID</Text>\n              </Row>\n            )}\n          </>\n        )}\n        <Row style={{ marginBottom: 8 }}>\n          <Col span={24}>\n            <Input\n              placeholder=\"Market Id\"\n              value={marketId}\n              onChange={(e) => setMarketId(e.target.value)}\n              suffix={loadingMarket ? <LoadingOutlined /> : null}\n            />\n          </Col>\n        </Row>\n\n        <Row style={{ marginBottom: 8, marginTop: 8 }}>\n          <Col span={24}>\n            <Input\n              placeholder=\"Market Label\"\n              disabled={!market}\n              value={marketLabel}\n              onChange={(e) => setMarketLabel(e.target.value)}\n            />\n          </Col>\n        </Row>\n        <Row gutter={[8]} style={{ marginBottom: 8 }}>\n          <Col span={12}>\n            <Input\n              placeholder=\"Base label\"\n              disabled={!market || knownBaseCurrency}\n              value={knownBaseCurrency || baseLabel}\n              onChange={(e) => setBaseLabel(e.target.value)}\n            />\n            {market && !knownBaseCurrency && (\n              <div style={{ marginTop: 8 }}>\n                <Text type=\"warning\">Warning: unknown token</Text>\n              </div>\n            )}\n          </Col>\n          <Col span={12}>\n            <Input\n              placeholder=\"Quote label\"\n              disabled={!market || knownQuoteCurrency}\n              value={knownQuoteCurrency || quoteLabel}\n              onChange={(e) => setQuoteLabel(e.target.value)}\n            />\n            {market && !knownQuoteCurrency && (\n              <div style={{ marginTop: 8 }}>\n                <Text type=\"warning\">Warning: unknown token</Text>\n              </div>\n            )}\n          </Col>\n        </Row>\n      </div>\n    </Modal>\n  );\n}\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Col, Popover, Row, Select, Typography, Button } from 'antd';\nimport styled from 'styled-components';\nimport Orderbook from '../components/Orderbook';\nimport UserInfoTable from '../components/UserInfoTable';\nimport StandaloneBalancesDisplay from '../components/StandaloneBalancesDisplay';\nimport {\n  useMarket,\n  useMarketsList,\n  useUnmigratedDeprecatedMarkets,\n  getMarketInfos,\n} from '../utils/markets';\nimport TradeForm from '../components/TradeForm';\nimport TradesTable from '../components/TradesTable';\nimport LinkAddress from '../components/LinkAddress';\nimport DeprecatedMarketsInstructions from '../components/DeprecatedMarketsInstructions';\nimport {\n  InfoCircleOutlined,\n  PlusCircleOutlined,\n  DeleteOutlined,\n} from '@ant-design/icons';\nimport CustomMarketDialog from '../components/CustomMarketDialog';\nimport { notify } from '../utils/notifications';\n\nconst { Option, OptGroup } = Select;\n\nconst Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 16px 16px;\n  .borderNone .ant-select-selector {\n    border: none !important;\n  }\n`;\n\nexport default function TradePage() {\n  const {\n    market,\n    marketName,\n    customMarkets,\n    setCustomMarkets,\n    setMarketAddress,\n  } = useMarket();\n  const markets = useMarketsList();\n  const [handleDeprecated, setHandleDeprecated] = useState(false);\n  const [addMarketVisible, setAddMarketVisible] = useState(false);\n  const deprecatedMarkets = useUnmigratedDeprecatedMarkets();\n  const [dimensions, setDimensions] = useState({\n    height: window.innerHeight,\n    width: window.innerWidth,\n  });\n\n  useEffect(() => {\n    document.title = marketName ? `${marketName} — Serum` : 'Serum';\n  }, [marketName]);\n\n  const changeOrderRef = useRef();\n\n  useEffect(() => {\n    const handleResize = () => {\n      setDimensions({\n        height: window.innerHeight,\n        width: window.innerWidth,\n      });\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const width = dimensions?.width;\n  const componentProps = {\n    onChangeOrderRef: (ref) => (changeOrderRef.current = ref),\n    onPrice: useCallback(\n      (price) => changeOrderRef.current && changeOrderRef.current({ price }),\n      [],\n    ),\n    onSize: useCallback(\n      (size) => changeOrderRef.current && changeOrderRef.current({ size }),\n      [],\n    ),\n  };\n  const getComponent = useCallback(() => {\n    if (handleDeprecated) {\n      return (\n        <DeprecatedMarketsPage\n          switchToLiveMarkets={() => setHandleDeprecated(false)}\n        />\n      );\n    } else if (width < 1000) {\n      return <RenderSmaller {...componentProps} />;\n    } else if (width < 1450) {\n      return <RenderSmall {...componentProps} />;\n    } else {\n      return <RenderNormal {...componentProps} />;\n    }\n  }, [width, componentProps, handleDeprecated]);\n\n  const onAddCustomMarket = (customMarket) => {\n    const marketInfo = getMarketInfos(customMarkets).some(\n      (m) => m.address.toBase58() === customMarket.address,\n    );\n    if (marketInfo) {\n      notify({\n        message: `A market with the given ID already exists`,\n        type: 'error',\n      });\n      return;\n    }\n    const newCustomMarkets = [...customMarkets, customMarket];\n    setCustomMarkets(newCustomMarkets);\n    setMarketAddress(customMarket.address);\n  };\n\n  const onDeleteCustomMarket = (address) => {\n    const newCustomMarkets = customMarkets.filter((m) => m.address !== address);\n    setCustomMarkets(newCustomMarkets);\n  };\n\n  return (\n    <>\n      <CustomMarketDialog\n        visible={addMarketVisible}\n        onClose={() => setAddMarketVisible(false)}\n        onAddCustomMarket={onAddCustomMarket}\n      />\n      <Wrapper>\n        <Row\n          align=\"middle\"\n          style={{ paddingLeft: 5, paddingRight: 5 }}\n          gutter={16}\n        >\n          <Col>\n            <MarketSelector\n              markets={markets}\n              setHandleDeprecated={setHandleDeprecated}\n              placeholder={'Select market'}\n              customMarkets={customMarkets}\n              onDeleteCustomMarket={onDeleteCustomMarket}\n            />\n          </Col>\n          {market ? (\n            <Col>\n              <Popover\n                content={<LinkAddress address={market.publicKey.toBase58()} />}\n                placement=\"bottomRight\"\n                title=\"Market address\"\n                trigger=\"click\"\n              >\n                <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n              </Popover>\n            </Col>\n          ) : null}\n          <Col>\n            <PlusCircleOutlined\n              style={{ color: '#2abdd2' }}\n              onClick={() => setAddMarketVisible(true)}\n            />\n          </Col>\n          {deprecatedMarkets && deprecatedMarkets.length > 0 && (\n            <React.Fragment>\n              <Col>\n                <Typography>\n                  You have unsettled funds on old markets! Please go through\n                  them to claim your funds.\n                </Typography>\n              </Col>\n              <Col>\n                <Button onClick={() => setHandleDeprecated(!handleDeprecated)}>\n                  {handleDeprecated ? 'View new markets' : 'Handle old markets'}\n                </Button>\n              </Col>\n            </React.Fragment>\n          )}\n        </Row>\n        {getComponent()}\n      </Wrapper>\n    </>\n  );\n}\n\nfunction MarketSelector({\n  markets,\n  placeholder,\n  setHandleDeprecated,\n  customMarkets,\n  onDeleteCustomMarket,\n}) {\n  const { market, setMarketAddress } = useMarket();\n\n  const onSetMarketAddress = (marketAddress) => {\n    setHandleDeprecated(false);\n    setMarketAddress(marketAddress);\n  };\n\n  const extractBase = (a) => a.split('/')[0];\n  const extractQuote = (a) => a.split('/')[1];\n\n  const selectedMarket = getMarketInfos(customMarkets)\n    .find(\n      (proposedMarket) =>\n        market?.address && proposedMarket.address.equals(market.address),\n    )\n    ?.address?.toBase58();\n\n  return (\n    <Select\n      showSearch\n      size={'large'}\n      style={{ width: 200 }}\n      placeholder={placeholder || 'Select a market'}\n      optionFilterProp=\"name\"\n      onSelect={onSetMarketAddress}\n      listHeight={400}\n      value={selectedMarket}\n      filterOption={(input, option) =>\n        option.name?.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      }\n    >\n      {customMarkets && customMarkets.length > 0 && (\n        <OptGroup label=\"Custom\">\n          {customMarkets.map(({ address, name }, i) => (\n            <Option\n              value={address}\n              key={address}\n              name={name}\n              style={{\n                padding: '10px',\n                backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\n              }}\n            >\n              <Row>\n                <Col flex=\"auto\">{name}</Col>\n                {selectedMarket !== address && (\n                  <Col>\n                    <DeleteOutlined\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        e.nativeEvent.stopImmediatePropagation();\n                        onDeleteCustomMarket && onDeleteCustomMarket(address);\n                      }}\n                    />\n                  </Col>\n                )}\n              </Row>\n            </Option>\n          ))}\n        </OptGroup>\n      )}\n      <OptGroup label=\"Markets\">\n        {markets\n          .sort((a, b) =>\n            extractQuote(a.name) === 'USDT' && extractQuote(b.name) !== 'USDT'\n              ? -1\n              : extractQuote(a.name) !== 'USDT' &&\n                extractQuote(b.name) === 'USDT'\n              ? 1\n              : 0,\n          )\n          .sort((a, b) =>\n            extractBase(a.name) < extractBase(b.name)\n              ? -1\n              : extractBase(a.name) > extractBase(b.name)\n              ? 1\n              : 0,\n          )\n          .map(({ address, name, deprecated }, i) => (\n            <Option\n              value={address.toBase58()}\n              key={address}\n              name={name}\n              style={{\n                padding: '10px',\n                backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\n              }}\n            >\n              {name} {deprecated ? ' (Deprecated)' : null}\n            </Option>\n          ))}\n      </OptGroup>\n    </Select>\n  );\n}\n\nconst DeprecatedMarketsPage = ({ switchToLiveMarkets }) => {\n  return (\n    <>\n      <Row>\n        <Col flex=\"auto\">\n          <DeprecatedMarketsInstructions\n            switchToLiveMarkets={switchToLiveMarkets}\n          />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst RenderNormal = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <Row\n      style={{\n        minHeight: '800px',\n        flexWrap: 'nowrap',\n      }}\n    >\n      <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n        <UserInfoTable />\n      </Col>\n      <Col flex={'360px'} style={{ height: '100%' }}>\n        <Orderbook smallScreen={false} onPrice={onPrice} onSize={onSize} />\n        <TradesTable smallScreen={false} />\n      </Col>\n      <Col\n        flex=\"400px\"\n        style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n      >\n        <TradeForm setChangeOrderRef={onChangeOrderRef} />\n        <StandaloneBalancesDisplay />\n      </Col>\n    </Row>\n  );\n};\n\nconst RenderSmall = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <>\n      <Row\n        style={{\n          height: '800px',\n        }}\n      >\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n          <Orderbook\n            smallScreen={true}\n            depth={13}\n            onPrice={onPrice}\n            onSize={onSize}\n          />\n        </Col>\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n          <TradesTable smallScreen={true} />\n        </Col>\n        <Col\n          flex=\"400px\"\n          style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n        >\n          <TradeForm setChangeOrderRef={onChangeOrderRef} />\n          <StandaloneBalancesDisplay />\n        </Col>\n      </Row>\n      <Row>\n        <Col flex=\"auto\">\n          <UserInfoTable />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst RenderSmaller = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <>\n      <Row>\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <TradeForm style={{ flex: 1 }} setChangeOrderRef={onChangeOrderRef} />\n        </Col>\n        <Col xs={24} sm={12}>\n          <StandaloneBalancesDisplay />\n        </Col>\n      </Row>\n      <Row\n        style={{\n          height: '500px',\n        }}\n      >\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <Orderbook smallScreen={true} onPrice={onPrice} onSize={onSize} />\n        </Col>\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <TradesTable smallScreen={true} />\n        </Col>\n      </Row>\n      <Row>\n        <Col flex=\"auto\">\n          <UserInfoTable />\n        </Col>\n      </Row>\n    </>\n  );\n};\n","import React from 'react';\nimport { useOpenOrdersForAllMarkets } from '../utils/markets';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport OpenOrderTable from '../components/UserInfoTable/OpenOrderTable';\n\nexport default function OpenOrdersPage() {\n  const [openOrders] = useOpenOrdersForAllMarkets();\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <OpenOrderTable openOrders={openOrders} />\n    </FloatingElement>\n  );\n}\n","import React from 'react';\nimport DataTable from '../layout/DataTable';\n\nexport default function WalletBalancesTable({\n  loaded = false,\n  walletBalances,\n}) {\n  const columns = [\n    {\n      title: 'Coin',\n      dataIndex: 'key',\n      key: 'key',\n    },\n    {\n      title: 'Wallet Balance',\n      dataIndex: 'wallet',\n      key: 'wallet',\n    },\n  ];\n  return (\n    <DataTable\n      emptyLabel=\"No balances\"\n      dataSource={walletBalances}\n      columns={columns}\n      pagination={false}\n      loading={!loaded}\n    />\n  );\n}\n","import { Button } from 'antd';\nimport React from 'react';\nimport DataTable from '../layout/DataTable';\nimport { useConnection } from '../../utils/connection';\nimport { useWallet } from '../../utils/wallet';\nimport { settleFunds } from '../../utils/send';\nimport { notify } from '../../utils/notifications';\n\nexport default function AccountsTable({ accountBalances }) {\n  const connection = useConnection();\n  const { wallet } = useWallet();\n\n  async function onSettleFunds(account) {\n    try {\n      const {\n        market,\n        openOrdersAccount,\n        baseCurrencyAccount,\n        quoteCurrencyAccount,\n      } = account;\n      return await settleFunds({\n        market,\n        openOrders: openOrdersAccount,\n        connection,\n        wallet,\n        baseCurrencyAccount,\n        quoteCurrencyAccount,\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n    }\n  }\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'key',\n      key: 'key',\n    },\n    {\n      title: 'Orders',\n      dataIndex: 'orders',\n      key: 'orders',\n    },\n    {\n      title: 'Unsettled',\n      dataIndex: 'unsettled',\n      key: 'unsettled',\n    },\n    {\n      key: 'action',\n      render: (account) => (\n        <div style={{ textAlign: 'right' }}>\n          <Button\n            ghost\n            style={{ marginRight: 12 }}\n            onClick={() => onSettleFunds(account)}\n          >\n            Settle\n          </Button>\n        </div>\n      ),\n    },\n  ];\n  return (\n    <DataTable\n      emptyLabel=\"No balances\"\n      dataSource={accountBalances}\n      columns={columns.map((data) => ({\n        ...data,\n        key: `${data.market}${data.coin}`,\n      }))}\n      pagination={false}\n    />\n  );\n}\n","import React from 'react';\nimport { Tabs } from 'antd';\nimport {\n  useWalletBalancesForAllMarkets,\n  useOpenOrderAccountBalancesForAllMarkets,\n} from '../utils/markets';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport WalletBalancesTable from '../components/UserInfoTable/WalletBalancesTable';\nimport AccountsTable from '../components/UserInfoTable/AccountsTable';\n\nconst { TabPane } = Tabs;\n\nexport default function BalancesPage() {\n  const [\n    walletBalances,\n    loadedWalletBalances,\n  ] = useWalletBalancesForAllMarkets();\n  const [\n    accountBalances,\n    accountBalancesLoaded,\n  ] = useOpenOrderAccountBalancesForAllMarkets();\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <Tabs defaultActiveKey=\"walletBalances\">\n        <TabPane tab=\"Wallet Balances\" key=\"walletBalances\">\n          <WalletBalancesTable\n            loaded={loadedWalletBalances}\n            walletBalances={walletBalances}\n          />\n        </TabPane>\n        <TabPane tab=\"Market balances\" key=\"marketBalances\">\n          <AccountsTable\n            loaded={accountBalancesLoaded}\n            accountBalances={accountBalances}\n          />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n","import { InfoCircleOutlined, UserOutlined } from '@ant-design/icons';\nimport { Button, Menu, Popover, Select } from 'antd';\nimport React, { useCallback } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport logo from '../assets/logo.svg';\nimport styled from 'styled-components';\nimport { useWallet, WALLET_PROVIDERS } from '../utils/wallet';\nimport { ENDPOINTS, useConnectionConfig } from '../utils/connection';\nimport LinkAddress from './LinkAddress';\n\nconst Wrapper = styled.div`\n  background-color: #0d1017;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  padding: 0px 30px;\n  flex-wrap: wrap;\n`;\nconst LogoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  color: #2abdd2;\n  font-weight: bold;\n  cursor: pointer;\n  img {\n    height: 30px;\n    margin-right: 8px;\n  }\n`;\n\nexport default function TopBar() {\n  const { connected, wallet, providerUrl, setProvider } = useWallet();\n  const { endpoint, setEndpoint } = useConnectionConfig();\n  const location = useLocation();\n  const history = useHistory();\n\n  const publicKey = wallet?.publicKey?.toBase58();\n\n  const handleClick = useCallback(\n    (e) => {\n      history.push(e.key);\n    },\n    [history],\n  );\n\n  return (\n    <Wrapper>\n      <LogoWrapper>\n        <img src={logo} alt=\"\" onClick={() => history.push('/')} />\n        {'SERUM'}\n      </LogoWrapper>\n      <Menu\n        mode=\"horizontal\"\n        onClick={handleClick}\n        selectedKeys={[location.pathname]}\n        style={{\n          borderBottom: 'none',\n          backgroundColor: 'transparent',\n          display: 'flex',\n          alignItems: 'flex-end',\n          flex: 1,\n        }}\n      >\n        <Menu.Item key=\"/\">TRADE</Menu.Item>\n      </Menu>\n      <div>\n        <Select\n          onSelect={setEndpoint}\n          value={endpoint}\n          style={{ marginRight: 8 }}\n        >\n          {ENDPOINTS.map(({ name, endpoint }) => (\n            <Select.Option value={endpoint} key={endpoint}>\n              {name}\n            </Select.Option>\n          ))}\n        </Select>\n      </div>\n      <div>\n        <Select onSelect={setProvider} value={providerUrl}>\n          {WALLET_PROVIDERS.map(({ name, url }) => (\n            <Select.Option value={url} key={url}>\n              {name}\n            </Select.Option>\n          ))}\n        </Select>\n      </div>\n      <div>\n        <Button\n          type=\"text\"\n          size=\"large\"\n          onClick={connected ? wallet.disconnect : wallet.connect}\n          style={{ color: '#2abdd2' }}\n        >\n          <UserOutlined />\n          {!connected ? 'Connect wallet' : 'Disconnect'}\n        </Button>\n        {connected && (\n          <Popover\n            content={<LinkAddress address={publicKey} />}\n            placement=\"bottomRight\"\n            title=\"Wallet public key\"\n            trigger=\"click\"\n          >\n            <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n          </Popover>\n        )}\n      </div>\n    </Wrapper>\n  );\n}\n","export const helpUrls = {\n  customerSupport: 'https://t.me/ProjectSerum',\n  customerSupportZh: 'https://t.me/ProjectSerum_Chinese',\n  contactEmail: 'mailto:contact@projectserum.com',\n  discord: 'https://discord.gg/MxZFT4v',\n  telegram: 'https://t.me/ProjectSerum',\n  github: 'https://github.com/project-serum',\n  projectSerum: 'https://projectserum.com/',\n  developerResources: 'https://projectserum.com/developer-resources',\n  solanaBeach: 'https://solanabeach.io',\n};\n","import React from 'react';\nimport { Layout, Row, Col, Grid } from 'antd';\nimport Link from './Link';\nimport { helpUrls } from './HelpUrls';\nconst { Footer } = Layout;\nconst { useBreakpoint } = Grid;\n\nconst footerElements = [\n  {\n    description: 'Serum Developer Resources',\n    link: helpUrls.developerResources,\n  },\n  { description: 'Discord', link: helpUrls.discord },\n  { description: 'Telegram', link: helpUrls.telegram },\n  { description: 'GitHub', link: helpUrls.github },\n  { description: 'Project Serum', link: helpUrls.projectSerum },\n  { description: 'Solana Network', link: helpUrls.solanaBeach },\n];\n\nexport const CustomFooter = () => {\n  const smallScreen = !useBreakpoint().lg;\n\n  return (\n    <Footer\n      style={{\n        height: '45px',\n        paddingBottom: 10,\n        paddingTop: 10,\n      }}\n    >\n      <Row align=\"middle\" gutter={[16, 4]}>\n        {!smallScreen && (\n          <>\n            <Col flex=\"auto\" />\n            {footerElements.map((elem, index) => {\n              return (\n                <Col key={index + ''}>\n                  <Link external to={elem.link}>\n                    {elem.description}\n                  </Link>\n                </Col>\n              );\n            })}\n          </>\n        )}\n        <Col flex=\"auto\">{/*  <DexProgramSelector />*/}</Col>\n      </Row>\n    </Footer>\n  );\n};\n","import { Layout } from 'antd';\nimport React from 'react';\nimport TopBar from './TopBar';\nimport { CustomFooter as Footer } from './Footer';\nconst { Header, Content } = Layout;\n\nexport default function BasicLayout({ children }) {\n  return (\n    <React.Fragment>\n      <Layout\n        style={{ display: 'flex', minHeight: '100vh', flexDirection: 'column' }}\n      >\n        <Header style={{ padding: 0, minHeight: 64, height: 'unset' }}>\n          <TopBar />\n        </Header>\n        <Content style={{ flex: 1 }}>{children}</Content>\n        <Footer />\n      </Layout>\n    </React.Fragment>\n  );\n}\n","import React, { useState } from 'react';\nimport { Button, Form, Input, Tooltip, Typography } from 'antd';\nimport { notify } from '../utils/notifications';\nimport { isValidPublicKey } from '../utils/utils';\nimport { PublicKey } from '@solana/web3.js';\nimport { MARKETS, TokenInstructions } from '@project-serum/serum';\nimport { useAccountInfo, useConnection } from '../utils/connection';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport styled from 'styled-components';\nimport { parseTokenMintData } from '../utils/tokens';\nimport { useWallet } from '../utils/wallet';\nimport { listMarket } from '../utils/send';\nimport Link from '../components/Link';\n\nconst { Text, Title } = Typography;\n\nconst Wrapper = styled.div`\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nexport default function ListNewMarketPage() {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [baseMintInput, baseMintInfo] = useMintInput(\n    'baseMint',\n    <Text>\n      Base Token Mint Address{' '}\n      <Text type=\"secondary\">\n        (e.g. BTC solana address: {<Text type=\"secondary\" code>9n4nbM75f5Ui33ZbPYXn59EwSgE8CGsHtAeTH5YFeJ9E</Text>})\n      </Text>\n    </Text>,\n    'The base token is the token being traded. For example, the base token of a BTC/USDT market is BTC.',\n  );\n  const [quoteMintInput, quoteMintInfo] = useMintInput(\n    'quoteMint',\n    <Text>\n      Quote Token Mint Address{' '}\n      <Text type=\"secondary\">\n        (e.g. USDT solana address: {<Text type=\"secondary\" code>BQcdHdAQW1hczDbBi9hiegXAR7A98Q9jx3X3iBBBDiq4</Text>})\n      </Text>\n    </Text>,\n    'The quote token is the token used to price trades. For example, the quote token of a BTC/USDT market is USDT.',\n  );\n  const [lotSize, setLotSize] = useState('1');\n  const [tickSize, setTickSize] = useState('0.01');\n  const dexProgramId = MARKETS.find(({ deprecated }) => !deprecated).programId;\n  const [submitting, setSubmitting] = useState(false);\n\n  const [listedMarket, setListedMarket] = useState(null);\n\n  let baseLotSize;\n  let quoteLotSize;\n  if (baseMintInfo && parseFloat(lotSize) > 0) {\n    baseLotSize = Math.round(10 ** baseMintInfo.decimals * parseFloat(lotSize));\n    if (quoteMintInfo && parseFloat(tickSize) > 0) {\n      quoteLotSize = Math.round(\n        parseFloat(lotSize) *\n          10 ** quoteMintInfo.decimals *\n          parseFloat(tickSize),\n      );\n    }\n  }\n\n  const canSubmit =\n    connected &&\n    !!baseMintInfo &&\n    !!quoteMintInfo &&\n    !!baseLotSize &&\n    !!quoteLotSize;\n\n  async function onSubmit() {\n    if (!canSubmit) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const marketAddress = await listMarket({\n        connection,\n        wallet,\n        baseMint: baseMintInfo.address,\n        quoteMint: quoteMintInfo.address,\n        baseLotSize,\n        quoteLotSize,\n        dexProgramId,\n      });\n      setListedMarket(marketAddress);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error listing new market: ' + e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <Wrapper>\n      <FloatingElement>\n        <Title level={4}>List New Market</Title>\n        <Form\n          labelCol={{ span: 24 }}\n          wrapperCol={{ span: 24 }}\n          layout={\"vertical\"}\n          onFinish={onSubmit}\n        >\n          {baseMintInput}\n          {quoteMintInput}\n          <Form.Item\n            label={\n              <Tooltip title=\"Smallest allowed order size. For a BTC/USDT market, this would be in units of BTC.\">\n                Minimum Order Size <Text type=\"secondary\">(Lot size in e.g. BTC)</Text>\n              </Tooltip>\n            }\n            name=\"lotSize\"\n            initialValue=\"1\"\n            validateStatus={\n              baseMintInfo && quoteMintInfo\n                ? baseLotSize\n                  ? 'success'\n                  : 'error'\n                : null\n            }\n            hasFeedback={baseMintInfo && quoteMintInfo}\n          >\n            <Input\n              value={lotSize}\n              onChange={(e) => setLotSize(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Tooltip title=\"Smallest amount by which prices can move. For a BTC/USDT market, this would be in units of USDT.\">\n                Tick Size <Text type=\"secondary\">(Price increment in e.g. USDT)</Text>\n              </Tooltip>\n            }\n            name=\"tickSize\"\n            initialValue=\"0.01\"\n            validateStatus={\n              baseMintInfo && quoteMintInfo\n                ? quoteLotSize\n                  ? 'success'\n                  : 'error'\n                : null\n            }\n            hasFeedback={baseMintInfo && quoteMintInfo}\n          >\n            <Input\n              value={tickSize}\n              onChange={(e) => setTickSize(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <Form.Item label=\" \" colon={false}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              disabled={!canSubmit}\n              loading={submitting}\n            >\n              {connected ? 'Submit' : 'Not connected to wallet'}\n            </Button>\n          </Form.Item>\n        </Form>\n      </FloatingElement>\n      {listedMarket ? (\n        <FloatingElement>\n          <Text>New market address: {listedMarket.toBase58()}</Text>\n        </FloatingElement>\n      ) : null}\n    </Wrapper>\n  );\n}\n\nfunction useMintInput(name, label, tooltip) {\n  const [address, setAddress] = useState('');\n  const [accountInfo, loaded] = useAccountInfo(\n    isValidPublicKey(address) ? new PublicKey(address) : null,\n  );\n\n  let validateStatus = null;\n  let hasFeedback = false;\n  let help = null;\n  let mintInfo = null;\n  if (address) {\n    hasFeedback = true;\n    if (accountInfo) {\n      if (\n        accountInfo.owner.equals(TokenInstructions.TOKEN_PROGRAM_ID) &&\n        accountInfo.data.length === 82\n      ) {\n        let parsed = parseTokenMintData(accountInfo.data);\n        if (parsed.initialized) {\n          validateStatus = 'success';\n          mintInfo = {\n            address: new PublicKey(address),\n            decimals: parsed.decimals,\n          };\n        } else {\n          validateStatus = 'error';\n          help = 'Invalid SPL mint';\n        }\n      } else {\n        validateStatus = 'error';\n        help = 'Invalid SPL mint address';\n      }\n    } else if (isValidPublicKey(address) && !loaded) {\n      validateStatus = 'loading';\n    } else {\n      validateStatus = 'error';\n      help = 'Invalid Solana address';\n    }\n  }\n\n  const input = (\n    <Form.Item\n      label={\n        <Tooltip\n          title={\n            <>\n              {tooltip} You can look up token mint addresses on{' '}\n              <Link external to=\"https://sollet.io\">\n                sollet.io\n              </Link>\n              .\n            </>\n          }\n        >\n          {label}\n        </Tooltip>\n      }\n      name={name}\n      validateStatus={validateStatus}\n      hasFeedback={hasFeedback}\n      help={help}\n    >\n      <Input\n        value={address}\n        onChange={(e) => setAddress(e.target.value.trim())}\n      />\n    </Form.Item>\n  );\n\n  return [input, mintInfo];\n}\n","import { HashRouter, Route } from 'react-router-dom';\nimport TradePage from './pages/TradePage';\nimport OpenOrdersPage from './pages/OpenOrdersPage';\nimport React from 'react';\nimport BalancesPage from './pages/BalancesPage';\nimport BasicLayout from './components/BasicLayout';\nimport ListNewMarketPage from './pages/ListNewMarketPage';\n\nexport function Routes() {\n  return (\n    <HashRouter basename={'/'}>\n      <Route exact path=\"/\" component={TradePageContents} />\n      <Route exact path=\"/orders\" component={OpenOrdersPageContents} />\n      <Route exact path=\"/balances\" component={BalancesPageContents} />\n      <Route exact path=\"/list-new-market\">\n        <BasicLayout>\n          <ListNewMarketPage />\n        </BasicLayout>\n      </Route>\n    </HashRouter>\n  );\n}\n\nfunction TradePageContents() {\n  return (\n    <BasicLayout>\n      <TradePage />\n    </BasicLayout>\n  );\n}\n\nfunction OpenOrdersPageContents() {\n  return (\n    <BasicLayout>\n      <OpenOrdersPage />\n    </BasicLayout>\n  );\n}\n\nfunction BalancesPageContents() {\n  return (\n    <BasicLayout>\n      <BalancesPage />\n    </BasicLayout>\n  );\n}\n","import React, { Suspense } from 'react';\nimport './App.less';\nimport { ConnectionProvider } from './utils/connection';\nimport { MarketProvider } from './utils/markets';\nimport { WalletProvider } from './utils/wallet';\nimport { GlobalStyle } from './global_style';\nimport { Spin } from 'antd';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { Routes } from './routes';\n\nexport default function App() {\n  return (\n    <Suspense fallback={() => <Spin size=\"large\" />}>\n      <GlobalStyle />\n      <ErrorBoundary>\n        <ConnectionProvider>\n          <MarketProvider>\n            <WalletProvider>\n              <Suspense fallback={() => <Spin size=\"large\" />}>\n                <Routes />\n              </Suspense>\n            </WalletProvider>\n          </MarketProvider>\n        </ConnectionProvider>\n      </ErrorBoundary>\n    </Suspense>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { notify } from './notifications';\nimport { getDecimalCount, sleep } from './utils';\nimport {\n  Account,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n} from '@solana/web3.js';\nimport { BN } from 'bn.js';\nimport {\n  DexInstructions,\n  Market,\n  TOKEN_MINTS,\n  TokenInstructions,\n} from '@project-serum/serum';\n\nexport async function createTokenAccountTransaction({\n  connection,\n  wallet,\n  mintPublicKey,\n}) {\n  const newAccount = new Account();\n  const transaction = SystemProgram.createAccount({\n    fromPubkey: wallet.publicKey,\n    newAccountPubkey: newAccount.publicKey,\n    lamports: await connection.getMinimumBalanceForRentExemption(165),\n    space: 165,\n    programId: TokenInstructions.TOKEN_PROGRAM_ID,\n  });\n  transaction.add(\n    TokenInstructions.initializeAccount({\n      account: newAccount.publicKey,\n      mint: mintPublicKey,\n      owner: wallet.publicKey,\n    }),\n  );\n  return {\n    transaction,\n    signer: newAccount,\n    newAccountPubkey: newAccount.publicKey,\n  };\n}\n\nexport async function settleFunds({\n  market,\n  openOrders,\n  connection,\n  wallet,\n  baseCurrencyAccount,\n  quoteCurrencyAccount,\n}) {\n  if (\n    !market ||\n    !wallet ||\n    !connection ||\n    !openOrders ||\n    (!baseCurrencyAccount && !quoteCurrencyAccount)\n  ) {\n    notify({ message: 'Not connected' });\n    return;\n  }\n\n  let createAccountTransaction;\n  let createAccountSigner;\n  let baseCurrencyAccountPubkey = baseCurrencyAccount?.pubkey;\n  let quoteCurrencyAccountPubkey = quoteCurrencyAccount?.pubkey;\n\n  if (!baseCurrencyAccountPubkey) {\n    const result = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.baseMintAddress,\n    });\n    baseCurrencyAccountPubkey = result?.newAccountPubkey;\n    createAccountTransaction = result?.transaction;\n    createAccountSigner = result?.signer;\n  }\n  if (!quoteCurrencyAccountPubkey) {\n    const result = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.quoteMintAddress,\n    });\n    quoteCurrencyAccountPubkey = result?.newAccountPubkey;\n    createAccountTransaction = result?.transaction;\n    createAccountSigner = result?.signer;\n  }\n  let referrerQuoteWallet = null;\n  if (market.supportsReferralFees) {\n    if (\n      process.env.REACT_APP_USDT_REFERRAL_FEES_ADDRESS &&\n      market.quoteMintAddress.equals(\n        TOKEN_MINTS.find(({ name }) => name === 'USDT').address,\n      )\n    ) {\n      referrerQuoteWallet = new PublicKey(\n        process.env.REACT_APP_USDT_REFERRAL_FEES_ADDRESS,\n      );\n    } else if (\n      process.env.REACT_APP_USDC_REFERRAL_FEES_ADDRESS &&\n      market.quoteMintAddress.equals(\n        TOKEN_MINTS.find(({ name }) => name === 'USDC').address,\n      )\n    ) {\n      referrerQuoteWallet = new PublicKey(\n        process.env.REACT_APP_USDC_REFERRAL_FEES_ADDRESS,\n      );\n    }\n  }\n  const {\n    transaction: settleFundsTransaction,\n    signers: settleFundsSigners,\n  } = await market.makeSettleFundsTransaction(\n    connection,\n    openOrders,\n    baseCurrencyAccountPubkey,\n    quoteCurrencyAccountPubkey,\n    referrerQuoteWallet,\n  );\n\n  let transaction = mergeTransactions([\n    createAccountTransaction,\n    settleFundsTransaction,\n  ]);\n  let signers = createAccountSigner\n    ? [...settleFundsSigners, createAccountSigner]\n    : settleFundsSigners;\n\n  return await sendTransaction({\n    transaction,\n    signers,\n    wallet,\n    connection,\n    sendingMessage: 'Settling funds...',\n  });\n}\n\nexport async function cancelOrder(params) {\n  return cancelOrders({ ...params, orders: [params.order] });\n}\n\nexport async function cancelOrders({ market, wallet, connection, orders }) {\n  const transaction = market.makeMatchOrdersTransaction(5);\n  orders.forEach((order) => {\n    transaction.add(\n      market.makeCancelOrderInstruction(connection, wallet.publicKey, order),\n    );\n  });\n  transaction.add(market.makeMatchOrdersTransaction(5));\n  return await sendTransaction({\n    transaction,\n    wallet,\n    connection,\n    sendingMessage: 'Sending cancel...',\n  });\n}\n\nexport async function placeOrder({\n  side,\n  price,\n  size,\n  orderType,\n  market,\n  connection,\n  wallet,\n  baseCurrencyAccount,\n  quoteCurrencyAccount,\n}) {\n  let formattedMinOrderSize =\n    market?.minOrderSize?.toFixed(getDecimalCount(market.minOrderSize)) ||\n    market?.minOrderSize;\n  let formattedTickSize =\n    market?.tickSize?.toFixed(getDecimalCount(market.tickSize)) ||\n    market?.tickSize;\n  const isIncrement = (num, step) =>\n    Math.abs((num / step) % 1) < 1e-5 ||\n    Math.abs(((num / step) % 1) - 1) < 1e-5;\n  if (isNaN(price)) {\n    notify({ message: 'Invalid price', type: 'error' });\n    return;\n  }\n  if (isNaN(size)) {\n    notify({ message: 'Invalid size', type: 'error' });\n    return;\n  }\n  if (!wallet || !wallet.publicKey) {\n    notify({ message: 'Connect wallet', type: 'error' });\n    return;\n  }\n  if (!market) {\n    notify({ message: 'Invalid  market', type: 'error' });\n    return;\n  }\n  if (!isIncrement(size, market.minOrderSize)) {\n    notify({\n      message: `Size must be an increment of ${formattedMinOrderSize}`,\n      type: 'error',\n    });\n    return;\n  }\n  if (size < market.minOrderSize) {\n    notify({ message: 'Size too small', type: 'error' });\n    return;\n  }\n  if (!isIncrement(price, market.tickSize)) {\n    notify({\n      message: `Price must be an increment of ${formattedTickSize}`,\n      type: 'error',\n    });\n    return;\n  }\n  if (price < market.tickSize) {\n    notify({ message: 'Price under tick size', type: 'error' });\n    return;\n  }\n  const owner = wallet.publicKey;\n\n  const payer = side === 'sell' ? baseCurrencyAccount : quoteCurrencyAccount;\n  if (!payer) {\n    notify({\n      message: 'Need an SPL token account for cost currency',\n      type: 'error',\n    });\n    return;\n  }\n  const params = {\n    owner,\n    payer,\n    side,\n    price,\n    size,\n    orderType,\n  };\n  console.log(params);\n\n  const transaction = market.makeMatchOrdersTransaction(5);\n  let {\n    transaction: placeOrderTx,\n    signers,\n  } = await market.makePlaceOrderTransaction(\n    connection,\n    params,\n    10_000,\n    10_000,\n  );\n  transaction.add(placeOrderTx);\n  transaction.add(market.makeMatchOrdersTransaction(5));\n\n  return await sendTransaction({\n    transaction,\n    wallet,\n    connection,\n    signers,\n    sendingMessage: 'Sending order...',\n  });\n}\n\nexport async function listMarket({\n  connection,\n  wallet,\n  baseMint,\n  quoteMint,\n  baseLotSize,\n  quoteLotSize,\n  dexProgramId,\n}) {\n  const market = new Account();\n  const requestQueue = new Account();\n  const eventQueue = new Account();\n  const bids = new Account();\n  const asks = new Account();\n  const baseVault = new Account();\n  const quoteVault = new Account();\n  const feeRateBps = 0;\n  const quoteDustThreshold = new BN(100);\n\n  async function getVaultOwnerAndNonce() {\n    const nonce = new BN(0);\n    while (true) {\n      try {\n        const vaultOwner = await PublicKey.createProgramAddress(\n          [market.publicKey.toBuffer(), nonce.toArrayLike(Buffer, 'le', 8)],\n          dexProgramId,\n        );\n        return [vaultOwner, nonce];\n      } catch (e) {\n        nonce.iaddn(1);\n      }\n    }\n  }\n  const [vaultOwner, vaultSignerNonce] = await getVaultOwnerAndNonce();\n\n  const tx1 = new Transaction();\n  tx1.add(\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: baseVault.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(165),\n      space: 165,\n      programId: TokenInstructions.TOKEN_PROGRAM_ID,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: quoteVault.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(165),\n      space: 165,\n      programId: TokenInstructions.TOKEN_PROGRAM_ID,\n    }),\n    TokenInstructions.initializeAccount({\n      account: baseVault.publicKey,\n      mint: baseMint,\n      owner: vaultOwner,\n    }),\n    TokenInstructions.initializeAccount({\n      account: quoteVault.publicKey,\n      mint: quoteMint,\n      owner: vaultOwner,\n    }),\n  );\n\n  const tx2 = new Transaction();\n  tx2.add(\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: market.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(\n        Market.getLayout(dexProgramId).span,\n      ),\n      space: Market.getLayout(dexProgramId).span,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: requestQueue.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(5120 + 12),\n      space: 5120 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: eventQueue.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(262144 + 12),\n      space: 262144 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: bids.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(65536 + 12),\n      space: 65536 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: asks.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(65536 + 12),\n      space: 65536 + 12,\n      programId: dexProgramId,\n    }),\n    DexInstructions.initializeMarket({\n      market: market.publicKey,\n      requestQueue: requestQueue.publicKey,\n      eventQueue: eventQueue.publicKey,\n      bids: bids.publicKey,\n      asks: asks.publicKey,\n      baseVault: baseVault.publicKey,\n      quoteVault: quoteVault.publicKey,\n      baseMint,\n      quoteMint,\n      baseLotSize: new BN(baseLotSize),\n      quoteLotSize: new BN(quoteLotSize),\n      feeRateBps,\n      vaultSignerNonce,\n      quoteDustThreshold,\n      programId: dexProgramId,\n    }),\n  );\n\n  const signedTransactions = await Promise.all([\n    signTransaction({\n      transaction: tx1,\n      wallet,\n      connection,\n      signers: [wallet.publicKey, baseVault, quoteVault],\n    }),\n    signTransaction({\n      transaction: tx2,\n      wallet,\n      connection,\n      signers: [wallet.publicKey, market, requestQueue, eventQueue, bids, asks],\n    }),\n  ]);\n  for (let signedTransaction of signedTransactions) {\n    await sendSignedTransaction({\n      signedTransaction,\n      connection,\n    });\n  }\n\n  return market.publicKey;\n}\n\nconst getUnixTs = () => {\n  return new Date().getTime() / 1000;\n};\n\nconst DEFAULT_TIMEOUT = 15000;\n\nasync function sendTransaction({\n  transaction,\n  wallet,\n  signers = [wallet.publicKey],\n  connection,\n  sendingMessage = 'Sending transaction...',\n  sentMessage = 'Transaction sent',\n  successMessage = 'Transaction confirmed',\n  timeout = DEFAULT_TIMEOUT,\n}) {\n  const signedTransaction = await signTransaction({\n    transaction,\n    wallet,\n    signers,\n    connection,\n  });\n  return await sendSignedTransaction({\n    signedTransaction,\n    connection,\n    sendingMessage,\n    sentMessage,\n    successMessage,\n    timeout,\n  });\n}\n\nasync function signTransaction({\n  transaction,\n  wallet,\n  signers = [wallet.publicKey],\n  connection,\n}) {\n  transaction.recentBlockhash = (\n    await connection.getRecentBlockhash('max')\n  ).blockhash;\n  transaction.signPartial(...signers);\n  return await wallet.signTransaction(transaction);\n}\n\nasync function sendSignedTransaction({\n  signedTransaction,\n  connection,\n  sendingMessage = 'Sending transaction...',\n  sentMessage = 'Transaction sent',\n  successMessage = 'Transaction confirmed',\n  timeout = DEFAULT_TIMEOUT,\n}) {\n  const rawTransaction = signedTransaction.serialize();\n  const startTime = getUnixTs();\n  notify({ message: sendingMessage });\n  const txid = await connection.sendRawTransaction(rawTransaction, {\n    skipPreflight: true,\n  });\n  notify({ message: sentMessage, type: 'success', txid });\n\n  console.log('Started awaiting confirmation for', txid);\n\n  let done = false;\n  (async () => {\n    while (!done && getUnixTs() - startTime < timeout) {\n      connection.sendRawTransaction(rawTransaction, {\n        skipPreflight: true,\n      });\n      await sleep(300);\n    }\n  })();\n  try {\n    await awaitTransactionSignatureConfirmation(txid, timeout, connection);\n  } catch (err) {\n    if (err.timeout) {\n      throw new Error('Timed out awaiting confirmation on transaction');\n    }\n    throw new Error('Transaction failed');\n  } finally {\n    done = true;\n  }\n  notify({ message: successMessage, type: 'success', txid });\n\n  console.log('Latency', txid, getUnixTs() - startTime);\n  return txid;\n}\n\nasync function awaitTransactionSignatureConfirmation(\n  txid,\n  timeout,\n  connection,\n) {\n  let done = false;\n  const result = await new Promise((resolve, reject) => {\n    (async () => {\n      setTimeout(() => {\n        if (done) {\n          return;\n        }\n        done = true;\n        console.log('Timed out for txid', txid);\n        reject({ timeout: true });\n      }, timeout);\n      try {\n        connection.onSignature(\n          txid,\n          (result) => {\n            console.log('WS confirmed', txid, result);\n            done = true;\n            if (result.err) {\n              reject(result.err);\n            } else {\n              resolve(result);\n            }\n          },\n          'recent',\n        );\n        console.log('Set up WS connection', txid);\n      } catch (e) {\n        done = true;\n        console.log('WS error in setup', txid, e);\n      }\n      while (!done) {\n        // eslint-disable-next-line no-loop-func\n        (async () => {\n          try {\n            const signatureStatuses = await connection.getSignatureStatuses([\n              txid,\n            ]);\n            const result = signatureStatuses && signatureStatuses.value[0];\n            if (!done) {\n              if (!result) {\n                console.log('REST null result for', txid, result);\n              } else if (result.err) {\n                console.log('REST error for', txid, result);\n                done = true;\n                reject(result.err);\n              } else if (!result.confirmations) {\n                console.log('REST no confirmations for', txid, result);\n              } else {\n                console.log('REST confirmation for', txid, result);\n                done = true;\n                resolve(result);\n              }\n            }\n          } catch (e) {\n            if (!done) {\n              console.log('REST connection error: txid', txid, e);\n            }\n          }\n        })();\n        await sleep(300);\n      }\n    })();\n  });\n  done = true;\n  return result;\n}\n\nfunction mergeTransactions(transactions) {\n  const transaction = new Transaction();\n  transactions\n    .filter((t) => t)\n    .forEach((t) => {\n      transaction.add(t);\n    });\n  return transaction;\n}\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nexport default function Link({ external = false, ...props }) {\n  let { to, children, ...rest } = props;\n  if (external) {\n    return (\n      <a href={to} target=\"_blank\" rel=\"noopener noreferrer\" {...rest}>\n        {children}\n      </a>\n    );\n  }\n  return (\n    <RouterLink to={to} {...rest}>\n      {children}\n    </RouterLink>\n  );\n}\n"],"sourceRoot":""}