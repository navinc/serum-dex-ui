{"version":3,"sources":["assets/logo.svg","utils/utils.js","utils/fetch-loop.js","utils/connection.js","utils/notifications.js","utils/wallet.js","utils/markets.js","global_style.ts","components/ErrorBoundary.jsx","components/layout/FloatingElement.jsx","components/Orderbook.jsx","utils/usePrevious.js","components/layout/DataTable.jsx","utils/send.js","components/UserInfoTable/BalancesTable.jsx","components/UserInfoTable/OpenOrderTable.jsx","components/UserInfoTable/FillsTable.jsx","components/UserInfoTable/index.jsx","components/Link.js","components/DepositDialog.jsx","components/StandaloneBalancesDisplay.jsx","components/TradeForm.jsx","components/TradesTable.jsx","components/LinkAddress.jsx","pages/TradePage.jsx","pages/OpenOrdersPage.jsx","components/UserInfoTable/WalletBalancesTable.jsx","components/UserInfoTable/AccountsTable.jsx","pages/BalancesPage.jsx","components/TopBar.js","components/HelpUrls.js","components/Footer.jsx","components/BasicLayout.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","sleep","ms","a","Promise","resolve","setTimeout","getDecimalCount","value","isNaN","Math","floor","toString","split","length","useLocalStorageState","key","defaultState","useState","storedState","localStorage","getItem","JSON","parse","state","setState","setLocalStorageState","useCallback","newState","removeItem","setItem","stringify","isEqual","obj1","obj2","keys","Object","k","pageLoadTime","Date","globalCache","Map","FetchLoopListener","cacheKey","fn","refreshInterval","refreshIntervalOnError","callback","this","FetchLoopInternal","refresh","timeoutId","clearTimeout","stopped","errored","data","set","errors","notifyListeners","console","warn","waitTime","min","timeSincePageLoad","document","visibilityState","hasFocus","random","listeners","Set","listener","previousRefreshInterval","add","assert","delete","forEach","map","filter","x","size","globalLoops","loops","has","get","addListener","loop","removeListener","all","values","useAsyncData","asyncFn","useReducer","i","rerender","useEffect","loaded","undefined","ENDPOINTS","name","endpoint","clusterApiUrl","accountListenerCount","ConnectionContext","React","createContext","ConnectionProvider","children","setEndpoint","connection","useMemo","Connection","sendConnection","id","onAccountChange","Account","publicKey","removeAccountChangeListener","setInterval","_rpcWebSocket","call","catch","clearInterval","Provider","useConnection","useContext","useSendConnection","useConnectionConfig","context","useAccountInfo","tuple","toBase58","getAccountInfo","accountInfo","currentItem","log","count","previousData","subscriptionId","e","equals","initializeOnly","setCache","nextCount","useAccountData","notify","message","description","type","placement","notification","style","color","opacity","backgroundColor","WALLET_PROVIDERS","url","WalletContext","WalletProvider","providerUrl","setProviderUrl","wallet","Wallet","connected","setConnected","on","walletPublicKey","substring","disconnect","providerName","find","useWallet","setProvider","COIN_MINTS","AGFEad2et2ZJif9jaGpdMixQqvW5i81aBdvKe7PHNfz3","CWE8jPTUYhdCTZYWPTe1o5DFqfdjzWKc9WKz6rSjQUdG","Ga2AXHpfAF6mv2ekZwcsJFqu7wB4NV331qNH7fW9Nst8","BQcdHdAQW1hczDbBi9hiegXAR7A98Q9jx3X3iBBBDiq4","BXXkv6z8ykpG1yuvUDPgh732wzVHB69RnB9YgSYh3itW","MSRMcoVyrFxnSgo5uXwone5SKcGhT1KEJMFEkMEWf9L","SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt","TokenInstructions","WRAPPED_SOL_MINT","MARKET_INFO_BY_NAME","address","programId","useAllMarkets","markets","setMarkets","marketList","marketInfo","Market","load","PublicKey","DEX_PROGRAM_ID","market","push","marketName","getAllMarkets","MarketContext","MarketProvider","setMarketName","setMarket","then","baseCurrency","baseMintAddress","quoteCurrency","quoteMintAddress","useMarket","useMarkPrice","markPrice","setMarkPrice","useOrderbook","orderbook","trades","useTrades","bb","bids","Number","ba","asks","last","price","sort","b","_useUnfilteredTrades","limit","getUnfilteredTrades","loadFills","useOrderbookAccounts","bidData","_decoded","askData","bidOrderbook","Orderbook","decode","askOrderbook","depth","getL2","useOpenOrdersAccounts","fast","getTokenAccounts","findOpenOrdersAccountsForOwner","useSelectedOpenOrdersAccount","accounts","useSelectedQuoteCurrencyAccount","findQuoteTokenAccountsForOwner","useQuoteCurrencyAccounts","useSelectedBaseCurrencyAccount","findBaseTokenAccountsForOwner","useBaseCurrencyAccounts","useQuoteCurrencyBalances","quoteCurrencyAccount","pubkey","lamports","quoteSplSizeToNumber","BN","slice","useBaseCurrencyBalances","baseCurrencyAccount","baseSplSizeToNumber","eventFlags","maker","trade","side","useBalances","baseCurrencyBalances","quoteCurrencyBalances","openOrdersAccount","baseExists","baseTokenTotal","baseTokenFree","quoteExists","quoteTokenTotal","quoteTokenFree","coin","orders","sub","unsettled","getCurrencyBalance","currencyAccounts","currencyAccount","getTokenAccountBalance","tokenAccountBalances","uiAmount","GlobalStyle","createGlobalStyle","Title","Typography","ErrorBoundary","hasError","level","props","error","Component","Wrapper","styled","div","FloatingElement","SizeTitle","Row","MarkPriceTitle","Line","css","Price","smallScreen","onPrice","onSize","getCumulativeOrderbookSide","backwards","cumulative","cumulativeSize","reverse","totalSize","asksToDisplay","totalAskSize","bidsToDisplay","flex","height","overflow","span","textAlign","index","OrderbookRow","sizePercent","onSizeClick","onPriceClick","MarkPriceComponent","memo","element","useRef","current","classList","remove","formattedSize","minOrderSize","toFixed","formattedPrice","tickSize","ref","marginBottom","onClick","data-width","data-bgcolor","prevProps","nextProps","previousMarkPrice","usePrevious","markPriceColor","formattedMarkPrice","justify","ArrowUpOutlined","marginRight","ArrowDownOutlined","DataTable","dataSource","columns","emptyLabel","pagination","loading","pageSize","renderEmpty","padding","display","justifyContent","alignItems","settleFunds","openOrders","makeSettleFundsTransaction","transaction","signers","onConfirm","result","timeout","err","onBeforeSend","onAfterSend","sendTransaction","cancelOrder","params","cancelOrders","order","onBeforeSendCallBack","onAfterSendCallBack","onConfirmCallBack","makeMatchOrdersTransaction","makeCancelOrderInstruction","placeOrder","orderType","formattedMinOrderSize","formattedTickSize","isIncrement","num","step","abs","owner","payer","makePlaceOrderTransaction","placeOrderTx","getRecentBlockhash","recentBlockhash","blockhash","signPartial","signTransaction","signed","signedAt","getTime","sendRawTransaction","serialize","skipPreflight","txid","sentAt","getSignatureStatus","confirmedAt","done","reject","onSignature","getSignatureStatuses","results","confirmations","BalancesTable","balances","onSettleFunds","title","dataIndex","render","ghost","CancelButton","Button","OpenOrderTable","cancelId","setCancelId","orderId","fontWeight","charAt","toUpperCase","icon","DeleteOutlined","cancel","assign","FillsTable","fills","openOrdersAccounts","fill","useFills","liquidity","TabPane","Tabs","Index","paddingTop","defaultActiveKey","tab","OpenOrdersTab","filterForOpenOrders","useOpenOrders","BalancesTab","Link","external","to","rest","href","target","rel","DepositDialog","account","onClose","depositCoin","coinMint","visible","onOk","onCancel","RowBox","Tip","p","ActionButton","StandaloneBalancesDisplay","setDepositCoin","currency","Fragment","borderColor","align","paddingBottom","width","block","InputBox","Input","SellButton","BuyButton","TradeForm","setChangeOrderRef","setSide","postOnly","setPostOnly","ioc","setIoc","setSize","setPrice","submitting","setSubmitting","maxQuoteSize","doChangeOrder","onSubmit","parsedPrice","parseFloat","parsedSize","flexDirection","Group","onChange","buttonStyle","background","addonBefore","placeholder","checked","disabled","TradesContainer","PublicTrades","marginTop","LinkAddress","LinkOutlined","Option","Select","TradePage","window","innerHeight","innerWidth","dimensions","setDimensions","changeOrderRef","handleResize","addEventListener","removeEventListener","componentProps","onChangeOrderRef","getComponent","paddingLeft","paddingRight","gutter","bordered","onSelect","listHeight","content","trigger","InfoCircleOutlined","RenderNormal","minHeight","flexWrap","RenderSmall","RenderSmaller","xs","sm","OpenOrdersPage","allMarkets","marketData","loadBids","loadAsks","ordersForMarket","openOrdersAddress","concat","useOpenOrdersForAllMarkets","WalletBalancesTable","walletBalances","AccountsTable","accountBalances","BalancesPage","includes","balance","baseBalance","quoteBalance","useWalletBalancesForAllMarkets","loadedWalletBalances","openOrderAccounts","baseCurrencyAccounts","quoteCurrencyAccounts","openOrderAccountBalances","inOrdersBase","inOrdersQuote","unsettledBase","unsettledQuote","useOpenOrderAccountBalancesForAllMarkets","accountBalancesLoaded","LogoWrapper","TopBar","setCurrent","location","useLocation","history","useHistory","handleClick","pathname","src","logo","alt","mode","selectedKeys","borderBottom","Item","connect","UserOutlined","helpUrls","Footer","Layout","useBreakpoint","Grid","footerElements","link","CustomFooter","lg","elem","Header","Content","BasicLayout","Routes","basename","exact","path","component","TradePageContents","OpenOrdersPageContents","BalancesPageContents","App","fallback","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fbcd4c7c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.49174c73.svg\";","import { useCallback, useEffect, useState } from 'react';\n\nexport async function sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport function getDecimalCount(value) {\n  if (!isNaN(value) && Math.floor(value) !== value)\n    return value.toString().split('.')[1].length || 0;\n  return 0;\n}\n\nexport function useLocalStorageState(key, defaultState = null) {\n  const [state, setState] = useState(() => {\n    // NOTE: Not sure if this is ok\n    const storedState = localStorage.getItem(key);\n    if (storedState) {\n      return JSON.parse(storedState);\n    }\n    return defaultState;\n  });\n\n  const setLocalStorageState = useCallback(\n    (newState) => {\n      const changed = state !== newState;\n      if (!changed) {\n        return;\n      }\n      setState(newState);\n      if (newState === null) {\n        localStorage.removeItem(key);\n      } else {\n        localStorage.setItem(key, JSON.stringify(newState));\n      }\n    },\n    [state, key],\n  );\n\n  return [state, setLocalStorageState];\n}\n\nexport function useEffectAfterTimeout(effect, timeout) {\n  useEffect(() => {\n    const handle = setTimeout(effect, timeout);\n    return () => clearTimeout(handle);\n  });\n}\n\nexport function useListener(emitter, eventName) {\n  const [, forceUpdate] = useState(0);\n  useEffect(() => {\n    const listener = () => forceUpdate((i) => i + 1);\n    emitter.on(eventName, listener);\n    return () => emitter.removeListener(eventName, listener);\n  }, [emitter, eventName]);\n}\n\nexport function abbreviateAddress(address) {\n  const base58 = address.toBase58();\n  return base58.slice(0, 4) + '…' + base58.slice(-4);\n}\n\nexport function isEqual(obj1, obj2, keys) {\n  if (!keys && Object.keys(obj1).length !== Object.keys(obj2).length) {\n    return false;\n  }\n  keys = keys || Object.keys(obj1);\n  for (const k of keys) {\n    if (obj1[k] !== obj2[k]) {\n      // shallow comparison\n      return false;\n    }\n  }\n  return true;\n}\n","import { useEffect, useReducer } from 'react';\n\nimport assert from 'assert';\n\nconst pageLoadTime = new Date();\n\nconst globalCache = new Map();\n\nclass FetchLoopListener {\n  constructor(cacheKey, fn, refreshInterval, refreshIntervalOnError, callback) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.refreshInterval = refreshInterval;\n    this.refreshIntervalOnError = refreshIntervalOnError;\n    this.callback = callback;\n  }\n}\n\nclass FetchLoopInternal {\n  constructor(cacheKey, fn) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.timeoutId = null;\n    this.listeners = new Set();\n    this.errors = 0;\n  }\n\n  get refreshInterval() {\n    return Math.min(\n      ...[...this.listeners].map((listener) => listener.refreshInterval),\n    );\n  }\n\n  get refreshIntervalOnError() {\n    return Math.min(\n      ...[...this.listeners]\n        .map((listener) => listener.refreshIntervalOnError)\n        .filter((x) => x),\n    );\n  }\n\n  get stopped() {\n    return this.listeners.size === 0;\n  }\n\n  addListener(listener) {\n    const previousRefreshInterval = this.refreshInterval;\n    this.listeners.add(listener);\n    if (this.refreshInterval < previousRefreshInterval) {\n      this.refresh();\n    }\n  }\n\n  removeListener(listener) {\n    assert(this.listeners.delete(listener));\n    if (this.stopped) {\n      if (this.timeoutId) {\n        clearTimeout(this.timeoutId);\n        this.timeoutId = null;\n      }\n    }\n  }\n\n  notifyListeners() {\n    this.listeners.forEach((listener) => listener.callback());\n  }\n\n  refresh = async () => {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    }\n    if (this.stopped) {\n      return;\n    }\n\n    let errored = false;\n    try {\n      const data = await this.fn();\n      globalCache.set(this.cacheKey, data);\n      this.errors = 0;\n      this.notifyListeners();\n      return data;\n    } catch (error) {\n      ++this.errors;\n      console.warn(error);\n      errored = true;\n    } finally {\n      if (!this.timeoutId && !this.stopped) {\n        let waitTime = this.refreshInterval;\n        if (\n          errored &&\n          this.refreshIntervalOnError &&\n          this.refreshIntervalOnError > 0\n        ) {\n          waitTime = this.refreshIntervalOnError;\n        }\n\n        // Back off on errors.\n        if (this.errors > 0) {\n          waitTime = Math.min(1000 * 2 ** (this.errors - 1), 60000);\n        }\n\n        // Don't do any refreshing for the first five seconds, to make way for other things to load.\n        const timeSincePageLoad = new Date() - pageLoadTime;\n        if (timeSincePageLoad < 5000) {\n          waitTime += 5000 - timeSincePageLoad / 2;\n        }\n\n        // Refresh background pages slowly.\n        if (document.visibilityState === 'hidden') {\n          waitTime = 60000;\n        } else if (!document.hasFocus()) {\n          waitTime *= 1.5;\n        }\n\n        // Add jitter so we don't send all requests at the same time.\n        waitTime *= 0.8 + 0.4 * Math.random();\n\n        this.timeoutId = setTimeout(this.refresh, waitTime);\n      }\n    }\n  };\n}\n\nclass FetchLoops {\n  loops = new Map();\n\n  addListener(listener) {\n    if (!this.loops.has(listener.cacheKey)) {\n      this.loops.set(\n        listener.cacheKey,\n        new FetchLoopInternal(listener.cacheKey, listener.fn),\n      );\n    }\n    this.loops.get(listener.cacheKey).addListener(listener);\n  }\n\n  removeListener(listener) {\n    const loop = this.loops.get(listener.cacheKey);\n    loop.removeListener(listener);\n    if (loop.stopped) {\n      this.loops.delete(listener.cacheKey);\n    }\n  }\n\n  refresh(cacheKey) {\n    if (this.loops.has(cacheKey)) {\n      this.loops.get(cacheKey).refresh();\n    }\n  }\n\n  refreshAll() {\n    return Promise.all([...this.loops.values()].map((loop) => loop.refresh()));\n  }\n}\nconst globalLoops = new FetchLoops();\n\nexport function useAsyncData(\n  asyncFn,\n  cacheKey,\n  { refreshInterval = 60000, refreshIntervalOnError = null } = {},\n) {\n  const [, rerender] = useReducer((i) => i + 1, 0);\n\n  useEffect(() => {\n    if (!cacheKey) {\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      return () => {};\n    }\n    const listener = new FetchLoopListener(\n      cacheKey,\n      asyncFn,\n      refreshInterval,\n      refreshIntervalOnError,\n      rerender,\n    );\n    globalLoops.addListener(listener);\n    return () => globalLoops.removeListener(listener);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey, refreshInterval]);\n\n  if (!cacheKey) {\n    return [null, false];\n  }\n\n  const loaded = globalCache.has(cacheKey);\n  const data = loaded ? globalCache.get(cacheKey) : undefined;\n  return [data, loaded];\n}\n\nexport function refreshCache(cacheKey, clearCache = false) {\n  if (clearCache) {\n    globalCache.delete(cacheKey);\n  }\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.refresh();\n    if (clearCache) {\n      loop.notifyListeners();\n    }\n  }\n}\n\nexport function refreshAllCaches() {\n  for (const loop of globalLoops.loops.values()) {\n    loop.refresh();\n  }\n}\n\nexport function setCache(cacheKey, value, { initializeOnly = false } = {}) {\n  if (initializeOnly && globalCache.has(cacheKey)) {\n    return;\n  }\n  globalCache.set(cacheKey, value);\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.notifyListeners();\n  }\n}\n","import { useLocalStorageState } from './utils';\nimport { Account, clusterApiUrl, Connection } from '@solana/web3.js';\nimport React, { useContext, useEffect, useMemo } from 'react';\nimport { setCache, useAsyncData } from './fetch-loop';\nimport tuple from 'immutable-tuple';\n\nexport const ENDPOINTS = [\n  {\n    name: 'mainnet-beta',\n    endpoint: 'https://solana-api.projectserum.com',\n  },\n  { name: 'testnet', endpoint: clusterApiUrl('testnet') },\n  { name: 'devnet', endpoint: clusterApiUrl('devnet') },\n  { name: 'localnet', endpoint: 'http://127.0.0.1:8899' },\n];\n\nconst accountListenerCount = new Map();\n\nconst ConnectionContext = React.createContext(null);\n\nexport function ConnectionProvider({ children }) {\n  const [endpoint, setEndpoint] = useLocalStorageState(\n    'connectionEndpts',\n    ENDPOINTS[0].endpoint,\n  );\n\n  const connection = useMemo(() => new Connection(endpoint, 'recent'), [\n    endpoint,\n  ]);\n  const sendConnection = useMemo(() => new Connection(endpoint, 'recent'), [\n    endpoint,\n  ]);\n\n  // The websocket library solana/web3.js uses closes its websocket connection when the subscription list\n  // is empty after opening its first time, preventing subsequent subscriptions from receiving responses.\n  // This is a hack to prevent the list from every getting empty\n  useEffect(() => {\n    const id = connection.onAccountChange(new Account().publicKey, () => {});\n    return () => connection.removeAccountChangeListener(id);\n  }, [connection]);\n\n  useEffect(() => {\n    const id = setInterval(\n      () => connection._rpcWebSocket.call('ping').catch(() => {}),\n      2000,\n    );\n    return () => clearInterval(id);\n  }, [connection]);\n\n  return (\n    <ConnectionContext.Provider\n      value={{ endpoint, setEndpoint, connection, sendConnection }}\n    >\n      {children}\n    </ConnectionContext.Provider>\n  );\n}\n\nexport function useConnection() {\n  return useContext(ConnectionContext).connection;\n}\n\nexport function useSendConnection() {\n  return useContext(ConnectionContext).sendConnection;\n}\n\nexport function useConnectionConfig() {\n  const context = useContext(ConnectionContext);\n  return { endpoint: context.endpoint, setEndpoint: context.setEndpoint };\n}\n\nexport function useAccountInfo(publicKey) {\n  const connection = useConnection();\n  const cacheKey = tuple(connection, publicKey?.toBase58());\n  const [accountInfo, loaded] = useAsyncData(\n    async () => (publicKey ? connection.getAccountInfo(publicKey) : null),\n    cacheKey,\n    { refreshInterval: 60_000 },\n  );\n  let id = publicKey?.toBase58();\n  useEffect(() => {\n    if (!publicKey) {\n      return;\n    }\n    if (accountListenerCount.has(cacheKey)) {\n      let currentItem = accountListenerCount.get(cacheKey);\n      console.log('Incrementing', id, currentItem.count + 1);\n      ++currentItem.count;\n    } else {\n      let previousData = null;\n      console.log('Subscribing to ', id);\n      const subscriptionId = connection.onAccountChange(publicKey, (e) => {\n        if (e.data) {\n          if (!previousData || !previousData.equals(e.data)) {\n            console.log('Passing along new data', id);\n            setCache(cacheKey, e);\n          } else {\n            console.log('Skipping no-op update', id);\n          }\n          previousData = e.data;\n        }\n      });\n      console.log('Setting cache', id);\n      accountListenerCount.set(cacheKey, { count: 1, subscriptionId });\n    }\n    return () => {\n      let currentItem = accountListenerCount.get(cacheKey);\n      let nextCount = currentItem.count - 1;\n      if (nextCount <= 0) {\n        console.log('Removing cache', id);\n        connection.removeAccountChangeListener(currentItem.subscriptionId);\n        accountListenerCount.delete(cacheKey);\n      } else {\n        console.log('Decrementing', id, nextCount);\n        --currentItem.count;\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey]);\n  return [accountInfo, loaded];\n}\n\nexport function useAccountData(publicKey) {\n  const [accountInfo] = useAccountInfo(publicKey);\n  return accountInfo && accountInfo.data;\n}\n","import React from 'react';\nimport { notification } from 'antd';\n\nexport function notify({\n  message,\n  description,\n  type = 'info',\n  placement = 'bottomLeft',\n}) {\n  notification[type]({\n    message: <span style={{ color: 'black' }}>{message}</span>,\n    description: (\n      <span style={{ color: 'black', opacity: 0.5 }}>{description}</span>\n    ),\n    placement,\n    style: {\n      backgroundColor: 'white',\n    },\n  });\n}\n","import React, { useContext, useEffect, useMemo, useState } from 'react';\nimport Wallet from '@project-serum/sol-wallet-adapter';\nimport { notify } from './notifications';\nimport { useConnectionConfig } from './connection';\nimport { useLocalStorageState } from './utils';\n\nexport const WALLET_PROVIDERS = [\n  { name: 'sollet.io', url: 'https://www.sollet.io' },\n];\n\nconst WalletContext = React.createContext(null);\n\nexport function WalletProvider({ children }) {\n  const { endpoint } = useConnectionConfig();\n  const [providerUrl, setProviderUrl] = useLocalStorageState(\n    'walletProvider',\n    'https://www.sollet.io',\n  );\n  const wallet = useMemo(() => new Wallet(providerUrl, endpoint), [\n    providerUrl,\n    endpoint,\n  ]);\n\n  const [connected, setConnected] = useState(false);\n  useEffect(() => {\n    console.log('trying to connect');\n    wallet.on('connect', () => {\n      console.log('connected');\n      setConnected(true);\n      let walletPublicKey = wallet.publicKey.toBase58();\n      let keyToDisplay =\n        walletPublicKey.length > 20\n          ? `${walletPublicKey.substring(0, 7)}.....${walletPublicKey.substring(\n              walletPublicKey.length - 7,\n              walletPublicKey.length,\n            )}`\n          : walletPublicKey;\n      notify({\n        message: 'Wallet update',\n        description: 'Connected to wallet ' + keyToDisplay,\n      });\n    });\n    wallet.on('disconnect', () => {\n      setConnected(false);\n      notify({\n        message: 'Wallet update',\n        description: 'Disconnected from wallet',\n      });\n    });\n    return () => {\n      wallet.disconnect();\n      setConnected(false);\n    };\n  }, [wallet]);\n  return (\n    <WalletContext.Provider\n      value={{\n        wallet,\n        connected,\n        providerUrl,\n        setProviderUrl,\n        providerName:\n          WALLET_PROVIDERS.find(({ url }) => url === providerUrl)?.name ??\n          providerUrl,\n      }}\n    >\n      {children}\n    </WalletContext.Provider>\n  );\n}\n\nexport function useWallet() {\n  const context = useContext(WalletContext);\n  return {\n    connected: context.connected,\n    wallet: context.wallet,\n    providerUrl: context.providerUrl,\n    setProvider: context.setProviderUrl,\n    providerName: context.providerName,\n  };\n}\n","import {\n  Market,\n  Orderbook,\n  decodeEventQueue,\n  DEX_PROGRAM_ID,\n  TokenInstructions,\n} from '@project-serum/serum';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { PublicKey } from '@solana/web3.js';\nimport { useLocalStorageState } from './utils';\nimport { useAsyncData } from './fetch-loop';\nimport { useAccountData, useAccountInfo, useConnection } from './connection';\nimport { useWallet } from './wallet';\nimport tuple from 'immutable-tuple';\nimport { notify } from './notifications';\nimport { BN } from 'bn.js';\n\nconst DEFAULT_MARKET_NAME = 'SRM/USDT';\n\nexport const COIN_MINTS = {\n  '9n4nbM75f5Ui33ZbPYXn59EwSgE8CGsHtAeTH5YFeJ9E': 'BTC',\n  '2FPyTwcZLUg1MDrwsyoP4D6s1tM7hAkHYRjkNb5w6Pxk': 'ETH',\n  AGFEad2et2ZJif9jaGpdMixQqvW5i81aBdvKe7PHNfz3: 'FTT',\n  '3JSf5tPeuscJGtaCp5giEiDhv51gQ4v3zWg8DGgyLfAB': 'YFI',\n  CWE8jPTUYhdCTZYWPTe1o5DFqfdjzWKc9WKz6rSjQUdG: 'LINK',\n  Ga2AXHpfAF6mv2ekZwcsJFqu7wB4NV331qNH7fW9Nst8: 'XRP',\n  BQcdHdAQW1hczDbBi9hiegXAR7A98Q9jx3X3iBBBDiq4: 'USDT',\n  BXXkv6z8ykpG1yuvUDPgh732wzVHB69RnB9YgSYh3itW: 'USDC',\n  MSRMcoVyrFxnSgo5uXwone5SKcGhT1KEJMFEkMEWf9L: 'MSRM',\n  SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt: 'SRM',\n  [TokenInstructions.WRAPPED_SOL_MINT]: 'SOL',\n};\n\nexport const MARKET_INFO_BY_NAME = {\n  'BTC/USDT': {\n    address: '8AcVjMG2LTbpkjNoyq8RwysokqZunkjy3d5JDzxC6BJa',\n    name: 'BTC/USDT',\n  },\n  'BTC/USDC': {\n    address: 'CAgAeMD7quTdnr6RPa7JySQpjf3irAmefYNdTb6anemq',\n    name: 'BTC/USDC',\n  },\n  'ETH/USDT': {\n    address: 'HfCZdJ1wfsWKfYP2qyWdXTT5PWAGWFctzFjLH48U1Hsd',\n    name: 'ETH/USDT',\n  },\n  'ETH/USDC': {\n    address: 'ASKiV944nKg1W9vsf7hf3fTsjawK6DwLwrnB2LH9n61c',\n    name: 'ETH/USDC',\n  },\n  'SOL/USDT': {\n    address: '8mDuvJJSgoodovMRYArtVVYBbixWYdGzR47GPrRT65YJ',\n    name: 'SOL/USDT',\n    programId: 'BJ3jrUzddfuSrZHXSCxMUUQsjKEyLmuuyZebkcaFp2fg',\n  },\n  'SOL/USDC': {\n    address: 'Cdp72gDcYMCLLk3aDkPxjeiirKoFqK38ECm8Ywvk94Wi',\n    name: 'SOL/USDC',\n    programId: 'BJ3jrUzddfuSrZHXSCxMUUQsjKEyLmuuyZebkcaFp2fg',\n  },\n  'SRM/USDT': {\n    address: 'HARFLhSq8nECZk4DVFKvzqXMNMA9a3hjvridGMFizeLa',\n    name: 'SRM/USDT',\n  },\n  'SRM/USDC': {\n    address: '68J6nkWToik6oM9rTatKSR5ibVSykAtzftBUEAvpRsys',\n    name: 'SRM/USDC',\n  },\n  'MSRM/USDT': {\n    address: 'H4snTKK9adiU15gP22ErfZYtro3aqR9BTMXiH3AwiUTQ',\n    name: 'MSRM/USDT',\n  },\n  'MSRM/USDC': {\n    address: '7kgkDyW7dmyMeP8KFXzbcUZz1R2WHsovDZ7n3ihZuNDS',\n    name: 'MSRM/USDC',\n  },\n  'FTT/USDT': {\n    address: 'DHDdghmkBhEpReno3tbzBPtsxCt6P3KrMzZvxavTktJt',\n    name: 'FTT/USDT',\n  },\n  'FTT/USDC': {\n    address: 'FZqrBXz7ADGsmDf1TM9YgysPUfvtG8rJiNUrqDpHc9Au',\n    name: 'FTT/USDC',\n  },\n  'YFI/USDT': {\n    address: '5zu5bTZZvqESAAgFsr12CUMxdQvMrvU9CgvC1GW8vJdf',\n    name: 'YFI/USDT',\n  },\n  'YFI/USDC': {\n    address: 'FJg9FUtbN3fg3YFbMCFiZKjGh5Bn4gtzxZmtxFzmz9kT',\n    name: 'YFI/USDC',\n  },\n  'LINK/USDT': {\n    address: 'F5xschQBMpu1gD2q1babYEAVJHR1buj1YazLiXyQNqSW',\n    name: 'LINK/USDT',\n  },\n  'LINK/USDC': {\n    address: '7GZ59DMgJ7D6dfoJTpszPayTRyua9jwcaGJXaRMMF1my',\n    name: 'LINK/USDC',\n  },\n};\n\nexport function useMarketsList() {\n  return Object.values(MARKET_INFO_BY_NAME);\n}\n\nexport function useAllMarkets() {\n  const connection = useConnection();\n  const [markets, setMarkets] = useState([]);\n\n  useEffect(() => {\n    const getAllMarkets = async () => {\n      const markets = [];\n      const marketList = Object.values(MARKET_INFO_BY_NAME);\n      let marketInfo;\n      for (marketInfo of marketList) {\n        try {\n          const market = await Market.load(\n            connection,\n            new PublicKey(marketInfo.address),\n            {},\n            marketInfo.programId\n              ? new PublicKey(marketInfo.programId)\n              : DEX_PROGRAM_ID,\n          );\n          markets.push({ market, marketName: marketInfo.name });\n        } catch (e) {\n          notify({\n            message: 'Error loading market',\n            description: e.message,\n            type: 'error',\n          });\n        }\n      }\n      setMarkets(markets);\n    };\n\n    getAllMarkets();\n  }, [connection]);\n\n  return markets;\n}\n\nconst MarketContext = React.createContext(null);\n\n// For things that don't really change\nconst _SLOW_REFRESH_INTERVAL = 5 * 1000;\n\n// For things that change frequently\nconst _FAST_REFRESH_INTERVAL = 1000;\n\nexport function MarketProvider({ children }) {\n  const [marketName, setMarketName] = useLocalStorageState(\n    'market',\n    DEFAULT_MARKET_NAME,\n  );\n\n  const connection = useConnection();\n  const marketInfo = MARKET_INFO_BY_NAME[marketName];\n  const [market, setMarket] = useState();\n  useEffect(() => {\n    setMarket(null);\n    if (!marketInfo || !marketInfo.address) {\n      notify({\n        message: 'Error loading market',\n        description: 'Please select a market from the dropdown',\n        type: 'error',\n      });\n      return;\n    }\n    Market.load(\n      connection,\n      new PublicKey(marketInfo.address),\n      {},\n      marketInfo.programId\n        ? new PublicKey(marketInfo.programId)\n        : DEX_PROGRAM_ID,\n    )\n      .then(setMarket)\n      .catch((e) =>\n        notify({\n          message: 'Error loading market',\n          description: e.message,\n          type: 'error',\n        }),\n      );\n  }, [connection, marketName, marketInfo]);\n\n  const baseCurrency =\n    COIN_MINTS[market?.baseMintAddress?.toBase58()] || 'UNKNOWN';\n  const quoteCurrency =\n    COIN_MINTS[market?.quoteMintAddress?.toBase58()] || 'UNKNOWN';\n  return (\n    <MarketContext.Provider\n      value={{\n        market,\n        marketName,\n        setMarketName,\n        ...marketInfo,\n        baseCurrency,\n        quoteCurrency,\n      }}\n    >\n      {children}\n    </MarketContext.Provider>\n  );\n}\n\nexport function useMarket() {\n  return useContext(MarketContext);\n}\n\nexport function useMarkPrice() {\n  const [markPrice, setMarkPrice] = useState(null);\n\n  const [orderbook] = useOrderbook();\n  const trades = useTrades();\n\n  useEffect(() => {\n    let bb = orderbook?.bids?.length > 0 && Number(orderbook.bids[0][0]);\n    let ba = orderbook?.asks?.length > 0 && Number(orderbook.asks[0][0]);\n    let last = trades?.length > 0 && trades[0].price;\n\n    let markPrice =\n      bb && ba\n        ? last\n          ? [bb, ba, last].sort((a, b) => a - b)[1]\n          : (bb + ba) / 2\n        : null;\n\n    setMarkPrice(markPrice);\n  }, [orderbook, trades]);\n\n  return markPrice;\n}\n\nexport function _useUnfilteredTrades(limit = 10000) {\n  const { market } = useMarket();\n  const connection = useConnection();\n  async function getUnfilteredTrades() {\n    if (!market || !connection) {\n      return null;\n    }\n    return await market.loadFills(connection, limit);\n  }\n  const [trades] = useAsyncData(\n    getUnfilteredTrades,\n    tuple('getUnfilteredTrades', market, connection),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n  return trades;\n  // NOTE: For now, websocket is too expensive since the event queue is large\n  // and updates very frequently\n\n  // let data = useAccountData(market && market._decoded.eventQueue);\n  // if (!data) {\n  //   return null;\n  // }\n  // const events = decodeEventQueue(data, limit);\n  // return events\n  //   .filter((event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0))\n  //   .map(market.parseFillEvent.bind(market));\n}\n\nexport function useOrderbookAccounts() {\n  const { market } = useMarket();\n  let bidData = useAccountData(market && market._decoded.bids);\n  let askData = useAccountData(market && market._decoded.asks);\n  return {\n    bidOrderbook: bidData ? Orderbook.decode(market, bidData) : null,\n    askOrderbook: askData ? Orderbook.decode(market, askData) : null,\n  };\n}\n\nexport function useOrderbook(depth = 20) {\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\n  const { market } = useMarket();\n  const bids =\n    !bidOrderbook || !market\n      ? []\n      : bidOrderbook.getL2(depth).map(([price, size]) => [price, size]);\n  const asks =\n    !askOrderbook || !market\n      ? []\n      : askOrderbook.getL2(depth).map(([price, size]) => [price, size]);\n  return [{ bids, asks }, !!bids || !!asks];\n}\n\n// Want the balances table to be fast-updating, dont want open orders to flicker\n// TODO: Update to use websocket\nexport function useOpenOrdersAccounts(fast = false) {\n  const { market } = useMarket();\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getTokenAccounts() {\n    if (!connected) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    return await market.findOpenOrdersAccountsForOwner(\n      connection,\n      wallet.publicKey,\n    );\n  }\n  return useAsyncData(\n    getTokenAccounts,\n    tuple('openOrdersAccounts', wallet, market, connected),\n    { refreshInterval: fast ? _FAST_REFRESH_INTERVAL : _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useSelectedOpenOrdersAccount(fast = false) {\n  const [accounts] = useOpenOrdersAccounts(fast);\n  if (!accounts) {\n    return null;\n  }\n  return accounts[0];\n}\n\nexport function useOpenOrdersAddresses() {\n  const [openOrdersAccounts] = useOpenOrdersAccounts();\n  if (!openOrdersAccounts) {\n    return null;\n  }\n  return openOrdersAccounts.map(({ publicKey }) => publicKey);\n}\n\n// This is okay to poll\nexport function useBaseCurrencyAccounts() {\n  const { market } = useMarket();\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getTokenAccounts() {\n    if (!connected) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    return await market.findBaseTokenAccountsForOwner(\n      connection,\n      wallet.publicKey,\n      true,\n    );\n  }\n  return useAsyncData(\n    getTokenAccounts,\n    tuple('getTokenAccounts', wallet, market, connected),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\n// This is okay to poll\nexport function useQuoteCurrencyAccounts() {\n  const { market } = useMarket();\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getTokenAccounts() {\n    if (!connected) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    return await market.findQuoteTokenAccountsForOwner(\n      connection,\n      wallet.publicKey,\n      true,\n    );\n  }\n  return useAsyncData(\n    getTokenAccounts,\n    tuple('useQuoteCurrencyAccounts', wallet, market, connected),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useSelectedQuoteCurrencyAccount() {\n  const [accounts] = useQuoteCurrencyAccounts();\n  if (!accounts) {\n    return null;\n  }\n  return accounts[0];\n}\n\nexport function useSelectedBaseCurrencyAccount() {\n  const [accounts] = useBaseCurrencyAccounts();\n  if (!accounts) {\n    return null;\n  }\n  return accounts[0];\n}\n\n// TODO: Update to use websocket\nexport function useQuoteCurrencyBalances() {\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const { market } = useMarket();\n  const [accountInfo, loaded] = useAccountInfo(quoteCurrencyAccount?.pubkey);\n  if (!market || !quoteCurrencyAccount || !loaded) {\n    return null;\n  }\n  if (market.quoteMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\n    return accountInfo?.lamports / 1e9 ?? 0;\n  }\n  return market.quoteSplSizeToNumber(\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\n  );\n}\n\n// TODO: Update to use websocket\nexport function useBaseCurrencyBalances() {\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const { market } = useMarket();\n  const [accountInfo, loaded] = useAccountInfo(baseCurrencyAccount?.pubkey);\n  if (!market || !baseCurrencyAccount || !loaded) {\n    return null;\n  }\n  if (market.baseMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\n    return accountInfo?.lamports / 1e9 ?? 0;\n  }\n  return market.baseSplSizeToNumber(\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\n  );\n}\n\nexport function useOpenOrders() {\n  const { market, marketName } = useMarket();\n  const openOrdersAccount = useSelectedOpenOrdersAccount();\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\n  if (!market || !openOrdersAccount || !bidOrderbook || !askOrderbook) {\n    return null;\n  }\n  return market\n    .filterForOpenOrders(bidOrderbook, askOrderbook, [openOrdersAccount])\n    .map((order) => ({ ...order, marketName }));\n}\n\nexport function useTrades(limit = 100) {\n  const trades = _useUnfilteredTrades(limit);\n  if (!trades) {\n    return null;\n  }\n  // Until partial fills are each given their own fill, use maker fills\n  return trades\n    .filter(({ eventFlags }) => eventFlags.maker)\n    .map((trade) => ({\n      ...trade,\n      side: trade.side === 'buy' ? 'sell' : 'buy',\n    }));\n}\n\nexport function useFills(limit = 100) {\n  const { marketName } = useMarket();\n  const fills = _useUnfilteredTrades(limit);\n  const [openOrdersAccounts] = useOpenOrdersAccounts();\n  if (!openOrdersAccounts || openOrdersAccounts.length === 0) {\n    return null;\n  }\n  if (!fills) {\n    return null;\n  }\n  const openOrdersAccount = openOrdersAccounts[0];\n  return fills\n    .filter((fill) => fill.openOrders.equals(openOrdersAccount.publicKey))\n    .map((fill) => ({ ...fill, marketName }));\n}\n\n// TODO: Update to use websocket\nexport function useFillsForAllMarkets(limit = 100) {\n  const { connected, wallet } = useWallet();\n\n  const connection = useConnection();\n  const allMarkets = useAllMarkets();\n\n  async function getFillsForAllMarkets() {\n    let fills = [];\n    if (!connected) {\n      return fills;\n    }\n\n    let marketData;\n    for (marketData of allMarkets) {\n      const { market, marketName } = marketData;\n      if (!market) {\n        return fills;\n      }\n      const openOrdersAccounts = await market.findOpenOrdersAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n      const openOrdersAccount = openOrdersAccounts && openOrdersAccounts[0];\n      if (!openOrdersAccount) {\n        return fills;\n      }\n      const eventQueueData = await connection.getAccountInfo(\n        market && market._decoded.eventQueue,\n      );\n      let data = eventQueueData?.data;\n      if (!data) {\n        return fills;\n      }\n      const events = decodeEventQueue(data, limit);\n      const fillsForMarket = events\n        .filter(\n          (event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0),\n        )\n        .map(market.parseFillEvent.bind(market));\n      const ownFillsForMarket = fillsForMarket\n        .filter((fill) => fill.openOrders.equals(openOrdersAccount.publicKey))\n        .map((fill) => ({ ...fill, marketName }));\n      fills = fills.concat(ownFillsForMarket);\n    }\n\n    console.log(JSON.stringify(fills));\n    return fills;\n  }\n\n  return useAsyncData(\n    getFillsForAllMarkets,\n    tuple('getFillsForAllMarkets', connected, connection, allMarkets, wallet),\n    { refreshInterval: _FAST_REFRESH_INTERVAL },\n  );\n}\n\n// TODO: Update to use websocket\nexport function useOpenOrdersForAllMarkets() {\n  const { connected, wallet } = useWallet();\n\n  const connection = useConnection();\n  const allMarkets = useAllMarkets();\n\n  async function getOpenOrdersForAllMarkets() {\n    let orders = [];\n    if (!connected) {\n      return orders;\n    }\n\n    let marketData;\n    for (marketData of allMarkets) {\n      const { market, marketName } = marketData;\n      if (!market) {\n        return orders;\n      }\n      const openOrdersAccounts = await market.findOpenOrdersAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n      const openOrdersAccount = openOrdersAccounts && openOrdersAccounts[0];\n      if (!openOrdersAccount) {\n        return orders;\n      }\n      const [bids, asks] = await Promise.all([\n        market.loadBids(connection),\n        market.loadAsks(connection),\n      ]);\n      const ordersForMarket = [...bids, ...asks]\n        .filter((order) => {\n          return order.openOrdersAddress.equals(openOrdersAccount.publicKey);\n        })\n        .map((order) => {\n          return { ...order, marketName };\n        });\n      orders = orders.concat(ordersForMarket);\n    }\n\n    return orders;\n  }\n\n  return useAsyncData(\n    getOpenOrdersForAllMarkets,\n    tuple(\n      'getOpenOrdersForAllMarkets',\n      connected,\n      connection,\n      wallet,\n      allMarkets,\n    ),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useBalances() {\n  const baseCurrencyBalances = useBaseCurrencyBalances();\n  const quoteCurrencyBalances = useQuoteCurrencyBalances();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const baseExists =\n    openOrdersAccount &&\n    openOrdersAccount.baseTokenTotal &&\n    openOrdersAccount.baseTokenFree;\n  const quoteExists =\n    openOrdersAccount &&\n    openOrdersAccount.quoteTokenTotal &&\n    openOrdersAccount.quoteTokenFree;\n  if (baseCurrency === 'UNKNOWN' || quoteCurrency === 'UNKNOWN') {\n    return [];\n  }\n  return [\n    {\n      key: `${baseCurrency}${quoteCurrency}${baseCurrency}`,\n      coin: baseCurrency,\n      wallet: baseCurrencyBalances,\n      orders:\n        baseExists && market\n          ? market.baseSplSizeToNumber(\n              openOrdersAccount.baseTokenTotal.sub(\n                openOrdersAccount.baseTokenFree,\n              ),\n            )\n          : null,\n      unsettled:\n        baseExists && market\n          ? market.baseSplSizeToNumber(openOrdersAccount.baseTokenFree)\n          : null,\n    },\n    {\n      key: `${quoteCurrency}${baseCurrency}${quoteCurrency}`,\n      coin: quoteCurrency,\n      wallet: quoteCurrencyBalances,\n      orders:\n        quoteExists && market\n          ? market.quoteSplSizeToNumber(\n              openOrdersAccount.quoteTokenTotal.sub(\n                openOrdersAccount.quoteTokenFree,\n              ),\n            )\n          : null,\n      unsettled:\n        quoteExists && market\n          ? market.quoteSplSizeToNumber(openOrdersAccount.quoteTokenFree)\n          : null,\n    },\n  ];\n}\n\nexport function useWalletBalancesForAllMarkets() {\n  const { connected, wallet } = useWallet();\n\n  const connection = useConnection();\n  const allMarkets = useAllMarkets();\n\n  async function getWalletBalancesForAllMarkets() {\n    let balances = [];\n    if (!connected) {\n      return balances;\n    }\n\n    let marketData;\n    for (marketData of allMarkets) {\n      const { market, marketName } = marketData;\n      if (!market) {\n        return balances;\n      }\n      const baseCurrency = marketName.includes('/') && marketName.split('/')[0];\n      if (!balances.find((balance) => balance.coin === baseCurrency)) {\n        const baseBalance = await getCurrencyBalance(\n          market,\n          connection,\n          wallet,\n          true,\n        );\n        balances.push({\n          key: baseCurrency,\n          coin: baseCurrency,\n          wallet: baseBalance,\n        });\n      }\n      const quoteCurrency =\n        marketName.includes('/') && marketName.split('/')[1];\n      if (!balances.find((balance) => balance.coin === quoteCurrency)) {\n        const quoteBalance = await getCurrencyBalance(\n          market,\n          connection,\n          wallet,\n          false,\n        );\n        balances.push({\n          key: quoteCurrency,\n          coin: quoteCurrency,\n          wallet: quoteBalance,\n        });\n      }\n    }\n\n    return balances;\n  }\n\n  return useAsyncData(\n    getWalletBalancesForAllMarkets,\n    tuple(\n      'getWalletBalancesForAllMarkets',\n      connected,\n      connection,\n      wallet,\n      allMarkets,\n    ),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nasync function getCurrencyBalance(market, connection, wallet, base = true) {\n  const currencyAccounts = base\n    ? await market.findBaseTokenAccountsForOwner(connection, wallet.publicKey)\n    : await market.findQuoteTokenAccountsForOwner(connection, wallet.publicKey);\n  const currencyAccount = currencyAccounts && currencyAccounts[0];\n  const tokenAccountBalances = await connection.getTokenAccountBalance(\n    currencyAccount.pubkey,\n  );\n  return tokenAccountBalances?.value?.uiAmount;\n}\n\nexport function useOpenOrderAccountBalancesForAllMarkets() {\n  const { connected, wallet } = useWallet();\n\n  const connection = useConnection();\n  const allMarkets = useAllMarkets();\n\n  async function getOpenOrderAccountsForAllMarkets() {\n    let accounts = [];\n    if (!connected) {\n      return accounts;\n    }\n\n    let marketData;\n    for (marketData of allMarkets) {\n      const { market, marketName } = marketData;\n      if (!market) {\n        return accounts;\n      }\n      const openOrderAccounts = await market.findOpenOrdersAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n      if (!openOrderAccounts) {\n        continue;\n      }\n      const baseCurrencyAccounts = await market.findBaseTokenAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n      const quoteCurrencyAccounts = await market.findQuoteTokenAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n\n      const baseCurrency = marketName.includes('/') && marketName.split('/')[0];\n      const quoteCurrency =\n        marketName.includes('/') && marketName.split('/')[1];\n\n      const openOrderAccountBalances = [];\n      openOrderAccounts.forEach((openOrdersAccount) => {\n        const inOrdersBase =\n          openOrdersAccount?.baseTokenTotal &&\n          openOrdersAccount?.baseTokenFree &&\n          market.baseSplSizeToNumber(\n            openOrdersAccount.baseTokenTotal.sub(\n              openOrdersAccount.baseTokenFree,\n            ),\n          );\n        const inOrdersQuote =\n          openOrdersAccount?.quoteTokenTotal &&\n          openOrdersAccount?.quoteTokenFree &&\n          market.baseSplSizeToNumber(\n            openOrdersAccount.quoteTokenTotal.sub(\n              openOrdersAccount.quoteTokenFree,\n            ),\n          );\n        const unsettledBase =\n          openOrdersAccount?.baseTokenFree &&\n          market.baseSplSizeToNumber(openOrdersAccount.baseTokenFree);\n        const unsettledQuote =\n          openOrdersAccount?.quoteTokenFree &&\n          market.baseSplSizeToNumber(openOrdersAccount.quoteTokenFree);\n        openOrderAccountBalances.push({\n          market: marketName,\n          coin: baseCurrency,\n          key: baseCurrency,\n          orders: inOrdersBase,\n          unsettled: unsettledBase,\n          openOrdersAccount: openOrdersAccount,\n          baseCurrencyAccount: baseCurrencyAccounts && baseCurrencyAccounts[0],\n          quoteCurrencyAccount:\n            quoteCurrencyAccounts && quoteCurrencyAccounts[0],\n        });\n        openOrderAccountBalances.push({\n          market: marketName,\n          coin: quoteCurrency,\n          key: quoteCurrency,\n          orders: inOrdersQuote,\n          unsettled: unsettledQuote,\n          openOrdersAccount: openOrdersAccount,\n          baseCurrencyAccount: baseCurrencyAccounts && baseCurrencyAccounts[0],\n          quoteCurrencyAccount:\n            quoteCurrencyAccounts && quoteCurrencyAccounts[0],\n        });\n      });\n      accounts = accounts.concat(openOrderAccountBalances);\n    }\n\n    return accounts;\n  }\n\n  return useAsyncData(\n    getOpenOrderAccountsForAllMarkets,\n    tuple(\n      'getOpenOrderAccountsForAllMarkets',\n      connected,\n      connection,\n      wallet,\n      allMarkets,\n    ),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\nhtml,body{\n  background: #11161D;\n}\ninput[type=number]::-webkit-inner-spin-button {\n  opacity: 0;\n}\ninput[type=number]:hover::-webkit-inner-spin-button,\ninput[type=number]:focus::-webkit-inner-spin-button {\n  opacity: 0.25;\n}\n/* width */\n::-webkit-scrollbar {\n  width: 15px;\n}\n/* Track */\n::-webkit-scrollbar-track {\n  background: #2d313c;\n}\n/* Handle */\n::-webkit-scrollbar-thumb {\n  background: #5b5f67;\n}\n/* Handle on hover */\n::-webkit-scrollbar-thumb:hover {\n  background: #5b5f67;\n}\n.ant-slider-track, .ant-slider:hover .ant-slider-track {\n  background-color: #2abdd2;\n  opacity: 0.75;\n}\n.ant-slider-track,\n.ant-slider ant-slider-track:hover {\n  background-color: #2abdd2;\n  opacity: 0.75;\n}\n.ant-slider-dot-active,\n.ant-slider-handle,\n.ant-slider-handle-click-focused,\n.ant-slider:hover .ant-slider-handle:not(.ant-tooltip-open)  {\n  border: 2px solid #2abdd2; \n}\n.ant-table-tbody > tr.ant-table-row:hover > td {\n  background: #273043;\n}\n.ant-table-tbody > tr > td {\n  border-bottom: 8px solid #1A2029;\n}\n.ant-table-container table > thead > tr:first-child th {\n  border-bottom: none;\n}\n.ant-divider-horizontal.ant-divider-with-text::before, .ant-divider-horizontal.ant-divider-with-text::after {\n  border-top: 1px solid #434a59 !important;\n}\n.ant-layout {\n    background: #11161D\n  }\n  .ant-table {\n    background: #212734;\n  }\n  .ant-table-thead > tr > th {\n    background: #1A2029;\n  }\n.ant-select-item-option-content {\n  img {\n    margin-right: 4px;\n  }\n}\n.ant-modal-content {\n  background-color: #212734;\n}\n\n@-webkit-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n@-moz-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n@-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n.flash {\n  -moz-animation: highlight 0.5s ease 0s 1 alternate ;\n  -webkit-animation: highlight 0.5s ease 0s 1 alternate;\n  animation: highlight 0.5s ease 0s 1 alternate;\n}`;\n","import React, { Component } from 'react';\nimport { Typography } from 'antd';\n\nconst { Title } = Typography;\n\nexport default class ErrorBoundary extends Component {\n  state = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div>\n          <div>\n            <Title level={2}>Something went wrong.</Title>\n            <Title level={4}>Please try again later.</Title>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  margin: 5px;\n  padding: 20px;\n  background-color: #1a2029;\n`;\n\nexport default function FloatingElement({ style, children }) {\n  return <Wrapper style={{ ...style }}>{children}</Wrapper>;\n}\n","import { Col, Row } from 'antd';\nimport React, { useRef, useEffect } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useMarket, useOrderbook, useMarkPrice } from '../utils/markets';\nimport { isEqual, getDecimalCount } from '../utils/utils';\nimport FloatingElement from './layout/FloatingElement';\nimport usePrevious from '../utils/usePrevious';\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\n\nconst SizeTitle = styled(Row)`\n  padding: 20px 0 14px;\n  color: #434a59;\n`;\n\nconst MarkPriceTitle = styled(Row)`\n  padding: 20px 0 14px;\n  font-weight: 700;\n`;\n\nconst Line = styled.div`\n  text-align: right;\n  float: right;\n  height: 100%;\n  ${(props) =>\n    props['data-width'] &&\n    css`\n      width: ${props['data-width']};\n    `}\n  ${(props) =>\n    props['data-bgcolor'] &&\n    css`\n      background-color: ${props['data-bgcolor']};\n    `}\n`;\n\nconst Price = styled.div`\n  position: absolute;\n  right: 5px;\n  color: white;\n`;\n\nexport default function Orderbook({ smallScreen, depth = 7, onPrice, onSize }) {\n  const markPrice = useMarkPrice();\n  const [orderbook, loaded] = useOrderbook();\n  const { baseCurrency, quoteCurrency } = useMarket();\n\n  let bids = [];\n  let asks = [];\n  if (loaded) {\n    bids = orderbook.bids;\n    asks = orderbook.asks;\n  }\n\n  function getCumulativeOrderbookSide(orders, backwards = false) {\n    let cumulative = [];\n    let cumulativeSize = 0;\n    orders.forEach(([price, size]) => {\n      if (cumulative.length < depth) {\n        cumulativeSize += size;\n        cumulative.push({ price, size, cumulativeSize });\n      }\n    });\n    if (backwards) {\n      cumulative = cumulative.reverse();\n    }\n    let totalSize =\n      cumulative.length > 0 &&\n      cumulative[backwards ? 0 : cumulative.length - 1].cumulativeSize;\n    return [cumulative, totalSize];\n  }\n\n  let [asksToDisplay, totalAskSize] = getCumulativeOrderbookSide(asks, true);\n  let [bidsToDisplay, totalBidSize] = getCumulativeOrderbookSide(bids, false);\n\n  let totalSize = totalAskSize + totalBidSize;\n\n  return (\n    <FloatingElement\n      style={\n        smallScreen ? { flex: 1 } : { height: '500px', overflow: 'hidden' }\n      }\n    >\n      <Title>Orderbook</Title>\n      <SizeTitle>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          Size ({baseCurrency})\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          Price ({quoteCurrency})\n        </Col>\n      </SizeTitle>\n      {asksToDisplay.map(({ price, size, cumulativeSize }, index) => (\n        <OrderbookRow\n          key={index}\n          index={index}\n          price={price}\n          size={size}\n          side={'sell'}\n          sizePercent={(cumulativeSize / (totalSize || 1)) * 100}\n          onSizeClick={() => onSize(size)}\n          onPriceClick={() => onPrice(price)}\n        />\n      ))}\n      <MarkPriceComponent markPrice={markPrice} />\n      {bidsToDisplay.map(({ price, size, cumulativeSize }, index) => (\n        <OrderbookRow\n          key={index}\n          index={index}\n          price={price}\n          size={size}\n          side={'buy'}\n          sizePercent={(cumulativeSize / (totalSize || 1)) * 100}\n          onSizeClick={() => onSize(size)}\n          onPriceClick={() => onPrice(price)}\n        />\n      ))}\n    </FloatingElement>\n  );\n}\n\nconst OrderbookRow = React.memo(\n  ({ index, side, price, size, sizePercent, onSizeClick, onPriceClick }) => {\n    const element = useRef();\n\n    const { market } = useMarket();\n\n    useEffect(() => {\n      // eslint-disable-next-line\n      let _ = element.current?.classList.add('flash');\n      setTimeout(() => element.current?.classList.remove('flash'), 500);\n    }, [price, size]);\n\n    let formattedSize =\n      market?.minOrderSize && !isNaN(size)\n        ? Number(size).toFixed(getDecimalCount(market.minOrderSize) + 1)\n        : size;\n\n    let formattedPrice =\n      market?.tickSize && !isNaN(price)\n        ? Number(price).toFixed(getDecimalCount(market.tickSize) + 1)\n        : price;\n\n    return (\n      <Row\n        ref={element}\n        id={index + ''}\n        style={{ marginBottom: 1 }}\n        onClick={onSizeClick}\n      >\n        <Col span={12} style={{ textAlign: 'left' }}>\n          {formattedSize}\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          <Line\n            data-width={sizePercent + '%'}\n            data-bgcolor={\n              side === 'buy'\n                ? 'rgba(65, 199, 122, 0.6)'\n                : 'rgba(242, 60, 105, 0.6)'\n            }\n          />\n          <Price onClick={onPriceClick}>{formattedPrice}</Price>\n        </Col>\n      </Row>\n    );\n  },\n  (prevProps, nextProps) =>\n    isEqual(prevProps, nextProps, ['side', 'price', 'size', 'sizePercent']),\n);\n\nconst MarkPriceComponent = React.memo(\n  ({ markPrice }) => {\n    const { market } = useMarket();\n    const previousMarkPrice = usePrevious(markPrice);\n\n    let markPriceColor =\n      markPrice > previousMarkPrice\n        ? '#41C77A'\n        : markPrice < previousMarkPrice\n        ? '#F23B69'\n        : 'white';\n\n    let formattedMarkPrice =\n      markPrice &&\n      market?.tickSize &&\n      markPrice.toFixed(getDecimalCount(market.tickSize));\n\n    return (\n      <MarkPriceTitle justify=\"center\">\n        <Col style={{ color: markPriceColor }}>\n          {markPrice > previousMarkPrice && (\n            <ArrowUpOutlined style={{ marginRight: 5 }} />\n          )}\n          {markPrice < previousMarkPrice && (\n            <ArrowDownOutlined style={{ marginRight: 5 }} />\n          )}\n          {formattedMarkPrice || '----'}\n        </Col>\n      </MarkPriceTitle>\n    );\n  },\n  (prevProps, nextProps) => isEqual(prevProps, nextProps, ['markPrice']),\n);\n","import { useEffect, useRef } from 'react';\n\nexport default function usePrevious(value) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef();\n\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n\n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\n","import React from 'react';\nimport { ConfigProvider, Table } from 'antd';\n\nexport default function DataTable({\n  dataSource,\n  columns,\n  emptyLabel = 'No data',\n  pagination = false,\n  loading = false,\n  pageSize = 10,\n}) {\n  const customizeRenderEmpty = () => (\n    <div\n      style={{\n        padding: '20px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      {emptyLabel}\n    </div>\n  );\n\n  return (\n    <ConfigProvider renderEmpty={customizeRenderEmpty}>\n      <Table\n        dataSource={dataSource}\n        columns={columns}\n        pagination={pagination ? { pagination: true, pageSize } : false}\n        loading={loading}\n      />\n    </ConfigProvider>\n  );\n}\n","import { notify } from './notifications';\nimport { getDecimalCount, sleep } from './utils';\n\nexport async function settleFunds({\n  market,\n  openOrders,\n  connection,\n  wallet,\n  baseCurrencyAccount,\n  quoteCurrencyAccount,\n}) {\n  if (\n    !market ||\n    !wallet ||\n    !connection ||\n    !openOrders ||\n    !baseCurrencyAccount ||\n    !quoteCurrencyAccount\n  ) {\n    if (\n      (baseCurrencyAccount && !quoteCurrencyAccount) ||\n      (quoteCurrencyAccount && !baseCurrencyAccount)\n    ) {\n      notify({\n        message: 'Add token account',\n        description: 'Add accounts for both currencies on sollet.io',\n      });\n    } else {\n      notify({ message: 'Not connected' });\n    }\n    return;\n  }\n\n  const { transaction, signers } = await market.makeSettleFundsTransaction(\n    connection,\n    openOrders,\n    baseCurrencyAccount.pubkey,\n    quoteCurrencyAccount.pubkey,\n  );\n\n  const onConfirm = (result) => {\n    if (result.timeout) {\n      notify({\n        message: 'Timed out',\n        type: 'error',\n        description: 'Timed out awaiting confirmation on transaction',\n      });\n    } else if (result.err) {\n      console.log(result.err);\n      notify({ message: 'Error settling funds', type: 'error' });\n    } else {\n      notify({ message: 'Fund settlement confirmed', type: 'success' });\n    }\n  };\n  const onBeforeSend = () => notify({ message: 'Settling funds...' });\n  const onAfterSend = () =>\n    notify({ message: 'Funds settled', type: 'success' });\n  return await sendTransaction({\n    transaction,\n    signers,\n    wallet,\n    connection,\n    onBeforeSend,\n    onAfterSend,\n    onConfirm,\n  });\n}\n\nexport async function cancelOrder(params) {\n  return cancelOrders({ ...params, orders: [params.order] });\n}\n\nexport async function cancelOrders({\n  market,\n  wallet,\n  connection,\n  orders,\n  onBeforeSendCallBack,\n  onAfterSendCallBack,\n  onConfirmCallBack,\n}) {\n  const transaction = market.makeMatchOrdersTransaction(5);\n  orders.forEach((order) => {\n    transaction.add(\n      market.makeCancelOrderInstruction(connection, wallet.publicKey, order),\n    );\n  });\n  transaction.add(market.makeMatchOrdersTransaction(5));\n  const onConfirm = (result) => {\n    if (result.timeout) {\n      notify({\n        message: 'Timed out',\n        type: 'error',\n        description: 'Timed out awaiting confirmation on transaction',\n      });\n    } else if (result.err) {\n      console.log(result.err);\n      notify({\n        message:\n          orders.length > 1\n            ? 'Error cancelling orders'\n            : 'Error cancelling order',\n        type: 'error',\n      });\n    } else {\n      notify({\n        message:\n          orders.length > 1\n            ? 'Order cancellations confirmed'\n            : 'Order cancellation confirmed',\n        type: 'success',\n      });\n    }\n    onConfirmCallBack && onConfirmCallBack();\n  };\n  const onBeforeSend = () => {\n    notify({ message: 'Sending cancel...' });\n    onBeforeSendCallBack && onBeforeSendCallBack();\n  };\n  const onAfterSend = () => {\n    notify({\n      message: orders.length > 1 ? 'Orders cancelled' : 'Order cancelled',\n      type: 'success',\n    });\n    onAfterSendCallBack && onAfterSendCallBack();\n  };\n\n  return await sendTransaction({\n    transaction,\n    wallet,\n    connection,\n    onBeforeSend,\n    onAfterSend,\n    onConfirm,\n  });\n}\n\nexport async function placeOrder({\n  side,\n  price,\n  size,\n  orderType,\n  market,\n  connection,\n  wallet,\n  baseCurrencyAccount,\n  quoteCurrencyAccount,\n  onBeforeSendCallBack,\n  onAfterSendCallBack,\n  onConfirmCallBack,\n}) {\n  let formattedMinOrderSize =\n    market?.minOrderSize?.toFixed(getDecimalCount(market.minOrderSize)) ||\n    market?.minOrderSize;\n  let formattedTickSize =\n    market?.tickSize?.toFixed(getDecimalCount(market.tickSize)) ||\n    market?.tickSize;\n  const isIncrement = (num, step) =>\n    Math.abs((num / step) % 1) < 1e-5 ||\n    Math.abs(((num / step) % 1) - 1) < 1e-5;\n  if (isNaN(price)) {\n    notify({ message: 'Invalid price', type: 'error' });\n    return;\n  }\n  if (isNaN(size)) {\n    notify({ message: 'Invalid size', type: 'error' });\n    return;\n  }\n  if (!wallet || !wallet.publicKey) {\n    notify({ message: 'Connect wallet', type: 'error' });\n    return;\n  }\n  if (!market) {\n    notify({ message: 'Invalid  market', type: 'error' });\n    return;\n  }\n  if (!isIncrement(size, market.minOrderSize)) {\n    notify({\n      message: `Size must be an increment of ${formattedMinOrderSize}`,\n      type: 'error',\n    });\n    return;\n  }\n  if (size < market.minOrderSize) {\n    notify({ message: 'Size too small', type: 'error' });\n    return;\n  }\n  if (!isIncrement(price, market.tickSize)) {\n    notify({\n      message: `Price must be an increment of ${formattedTickSize}`,\n      type: 'error',\n    });\n    return;\n  }\n  if (price < market.tickSize) {\n    notify({ message: 'Price under tick size', type: 'error' });\n    return;\n  }\n  const owner = wallet.publicKey;\n\n  const payer = side === 'sell' ? baseCurrencyAccount : quoteCurrencyAccount;\n  if (!payer) {\n    notify({\n      message: 'Need an SPL token account for cost currency',\n      type: 'error',\n    });\n    return;\n  }\n  const params = {\n    owner,\n    payer,\n    side,\n    price,\n    size,\n    orderType,\n  };\n  console.log(params);\n\n  const transaction = market.makeMatchOrdersTransaction(5);\n  let {\n    transaction: placeOrderTx,\n    signers,\n  } = await market.makePlaceOrderTransaction(connection, params);\n  transaction.add(placeOrderTx);\n  transaction.add(market.makeMatchOrdersTransaction(5));\n\n  const onConfirm = (result) => {\n    if (result.timeout) {\n      notify({\n        message: 'Timed out',\n        type: 'error',\n        description: 'Timed out awaiting confirmation on transaction',\n      });\n    } else if (result.err) {\n      console.log(result.err);\n      notify({ message: 'Error placing order', type: 'error' });\n    } else {\n      notify({ message: 'Order confirmed', type: 'success' });\n    }\n    onConfirmCallBack && onConfirmCallBack();\n  };\n  const onBeforeSend = () => {\n    notify({ message: 'Sending order...' });\n    onBeforeSendCallBack && onBeforeSendCallBack();\n  };\n  const onAfterSend = () => {\n    notify({ message: 'Order sent', type: 'success' });\n    onAfterSendCallBack && onAfterSendCallBack();\n  };\n\n  return await sendTransaction({\n    transaction,\n    wallet,\n    connection,\n    onBeforeSend,\n    onAfterSend,\n    onConfirm,\n    signers,\n  });\n}\n\nasync function sendTransaction({\n  transaction,\n  wallet,\n  signers = [wallet.publicKey],\n  connection,\n  onBeforeSend,\n  onAfterSend,\n  onConfirm,\n}) {\n  transaction.recentBlockhash = (\n    await connection.getRecentBlockhash('max')\n  ).blockhash;\n  transaction.signPartial(...signers);\n  const signed = await wallet.signTransaction(transaction);\n  const signedAt = new Date().getTime();\n\n  onBeforeSend();\n\n  const txid = await connection.sendRawTransaction(signed.serialize(), {\n    skipPreflight: true,\n  });\n  console.log('Sent raw transaction, received TXID: ', txid);\n  const sentAt = new Date().getTime();\n  onAfterSend();\n\n  // Send a bunch of requests, staggered, and stop sending the other ones, resolve when getting back the first\n  const result = await getSignatureStatus(connection, txid);\n  const confirmedAt = new Date().getTime();\n  console.log(\n    result.timeout ? 'Timed out' : 'Got signature confirmation',\n    txid,\n    (confirmedAt - sentAt) / 1000,\n    (confirmedAt - signedAt) / 1000,\n  );\n  onConfirm(result);\n  return txid;\n}\n\nasync function getSignatureStatus(connection, txid) {\n  let done = false;\n  const result = await new Promise((resolve, reject) => {\n    (async () => {\n      const timeout = setTimeout(() => {\n        console.log('Timed out', txid);\n        resolve({ timeout: true });\n      }, 15000);\n      try {\n        connection.onSignature(\n          txid,\n          (result, context) => {\n            if (!done) {\n              console.log('WS update for txid', txid, result);\n              clearTimeout(timeout);\n              resolve(result);\n              done = true;\n            }\n          },\n          'recent',\n        );\n        console.log('Subsribed for WS update on', txid);\n      } catch (e) {\n        console.log('Failed to subscribe for signature update on', txid, e);\n      }\n      while (!done) {\n        // eslint-disable-next-line\n        (async () => {\n          try {\n            console.log('Send REST request for txid', txid);\n            const results = await connection.getSignatureStatuses([txid]);\n            const result = results && results.value && results.value[0];\n            console.log('Received REST response for txid', txid, result);\n            if (!result || (!result?.confirmations && !result?.err)) {\n              return;\n            }\n            if (!done) {\n              console.log('REST update for txid', txid, result);\n              done = true;\n              clearTimeout(timeout);\n              resolve(result);\n            }\n          } catch (e) {\n            if (!done) {\n              console.log('Connection error polling REST', txid, e);\n            }\n          }\n        })();\n        await sleep(500);\n      }\n    })();\n  });\n  done = true;\n  return result;\n}\n","import { Button } from 'antd';\nimport React from 'react';\nimport {\n  useSelectedOpenOrdersAccount,\n  useMarket,\n  useSelectedBaseCurrencyAccount,\n  useSelectedQuoteCurrencyAccount,\n} from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\nimport { useSendConnection } from '../../utils/connection';\nimport { useWallet } from '../../utils/wallet';\nimport { settleFunds } from '../../utils/send';\n\nexport default function BalancesTable({ balances }) {\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const connection = useSendConnection();\n  const { wallet } = useWallet();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const { market } = useMarket();\n\n  async function onSettleFunds() {\n    return await settleFunds({\n      market,\n      openOrders: openOrdersAccount,\n      connection,\n      wallet,\n      baseCurrencyAccount,\n      quoteCurrencyAccount,\n    });\n  }\n\n  const columns = [\n    {\n      title: 'Coin',\n      dataIndex: 'coin',\n      key: 'coin',\n    },\n    {\n      title: 'Wallet Balance',\n      dataIndex: 'wallet',\n      key: 'wallet',\n    },\n    {\n      title: 'Orders',\n      dataIndex: 'orders',\n      key: 'orders',\n    },\n    {\n      title: 'Unsettled',\n      dataIndex: 'unsettled',\n      key: 'unsettled',\n    },\n    {\n      key: 'action',\n      render: () => (\n        <div style={{ textAlign: 'right' }}>\n          <Button ghost style={{ marginRight: 12 }} onClick={onSettleFunds}>\n            Settle\n          </Button>\n        </div>\n      ),\n    },\n  ];\n  return (\n    <DataTable\n      emptyLabel=\"No balances\"\n      dataSource={balances}\n      columns={columns}\n      pagination={false}\n    />\n  );\n}\n","import React, { useState } from 'react';\nimport { useMarket } from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\n\nimport styled from 'styled-components';\nimport { Button, Row, Col, Tag } from 'antd';\nimport { cancelOrder } from '../../utils/send';\nimport { useWallet } from '../../utils/wallet';\nimport { useSendConnection } from '../../utils/connection';\nimport { notify } from '../../utils/notifications';\nimport { DeleteOutlined } from '@ant-design/icons';\n\nconst CancelButton = styled(Button)`\n  color: #f23b69;\n  border: 1px solid #f23b69;\n`;\n\nexport default function OpenOrderTable({ openOrders }) {\n  let { market } = useMarket();\n  let { wallet } = useWallet();\n  let connection = useSendConnection();\n\n  const [cancelId, setCancelId] = useState(null);\n\n  async function cancel(order) {\n    try {\n      await cancelOrder({\n        order,\n        market,\n        connection,\n        wallet,\n        onBeforeSendCallBack: () => setCancelId(order?.orderId),\n        onConfirmCallBack: () => setCancelId(null),\n      });\n    } catch (e) {\n      notify({\n        message: 'Error cancelling order: ' + e.message,\n        type: 'error',\n      });\n      setCancelId(null);\n    }\n  }\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'marketName',\n      key: 'marketName',\n    },\n    {\n      title: 'Side',\n      dataIndex: 'side',\n      key: 'side',\n      render: (side) => (\n        <Tag\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\n          style={{ fontWeight: 700 }}\n        >\n          {side.charAt(0).toUpperCase() + side.slice(1)}\n        </Tag>\n      ),\n    },\n    {\n      title: 'Size',\n      dataIndex: 'size',\n      key: 'size',\n    },\n    {\n      title: 'Price',\n      dataIndex: 'price',\n      key: 'price',\n    },\n    {\n      key: 'orderId',\n      render: (order) => (\n        <div style={{ textAlign: 'right' }}>\n          <CancelButton\n            icon={<DeleteOutlined />}\n            onClick={() => cancel(order)}\n            loading={cancelId + '' === order?.orderId + ''}\n          >\n            Cancel\n          </CancelButton>\n        </div>\n      ),\n    },\n  ];\n  const dataSource = (openOrders || []).map((order) =>\n    Object.assign(order, { key: order.orderId }),\n  );\n\n  return (\n    <Row>\n      <Col span={24}>\n        <DataTable\n          emptyLabel=\"No open orders\"\n          dataSource={dataSource}\n          columns={columns}\n          pagination={true}\n          pageSize={5}\n        />\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react';\nimport { Row, Col, Tag } from 'antd';\nimport { useFills, useMarket } from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\n\nexport default function FillsTable() {\n  const fills = useFills();\n\n  const { quoteCurrency } = useMarket();\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'marketName',\n      key: 'marketName',\n    },\n    {\n      title: 'Side',\n      dataIndex: 'side',\n      key: 'side',\n      render: (side) => (\n        <Tag\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\n          style={{ fontWeight: 700 }}\n        >\n          {side.charAt(0).toUpperCase() + side.slice(1)}\n        </Tag>\n      ),\n    },\n    {\n      title: `Size`,\n      dataIndex: 'size',\n      key: 'size',\n    },\n    {\n      title: `Price`,\n      dataIndex: 'price',\n      key: 'price',\n    },\n    {\n      title: `Liquidity`,\n      dataIndex: 'liquidity',\n      key: 'liquidity',\n    },\n    {\n      title: quoteCurrency ? `Fees (${quoteCurrency})` : 'Fees',\n      dataIndex: 'feeCost',\n      key: 'feeCost',\n    },\n  ];\n\n  const dataSource = (fills || []).map((fill) => ({\n    ...fill,\n    key: `${fill.orderId}${fill.side}`,\n    liquidity: fill.eventFlags.maker ? 'Maker' : 'Taker',\n  }));\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <DataTable\n            dataSource={dataSource}\n            columns={columns}\n            pagination={true}\n            pageSize={5}\n            emptyLabel=\"No fills\"\n          />\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import BalancesTable from './BalancesTable';\nimport OpenOrderTable from './OpenOrderTable';\nimport React from 'react';\nimport { Tabs, Typography } from 'antd';\nimport FillsTable from './FillsTable';\nimport FloatingElement from '../layout/FloatingElement';\nimport { useOpenOrders, useBalances } from '../../utils/markets';\n\nconst { TabPane } = Tabs;\n\nexport default function Index() {\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <Typography>\n        Make sure to go to Balances and click Settle to send out your funds\n      </Typography>\n      <br />\n      <Typography>\n        To fund your wallet, use sollet.io. You can get SOL from FTX, Binance,\n        BitMax, and others. You can get other tokens from FTX.\n      </Typography>\n      <br />\n      <Tabs defaultActiveKey=\"orders\">\n        <TabPane tab=\"Open Orders\" key=\"orders\">\n          <OpenOrdersTab />\n        </TabPane>\n        <TabPane tab=\"Recent Trade History\" key=\"fills\">\n          <FillsTable />\n        </TabPane>\n        <TabPane tab=\"Balances\" key=\"balances\">\n          <BalancesTab />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\nconst OpenOrdersTab = () => {\n  const openOrders = useOpenOrders();\n\n  return <OpenOrderTable openOrders={openOrders} />;\n};\n\nconst BalancesTab = () => {\n  const balances = useBalances();\n\n  return <BalancesTable balances={balances} />;\n};\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nexport default function Link({ external = false, ...props }) {\n  let { to, children, ...rest } = props;\n  if (external) {\n    return (\n      <a href={to} target=\"_blank\" rel=\"noopener noreferrer\" {...rest}>\n        {children}\n      </a>\n    );\n  }\n  return (\n    <RouterLink to={to} {...rest}>\n      {children}\n    </RouterLink>\n  );\n}\n","import React from 'react';\nimport { Modal } from 'antd';\nimport {\n  COIN_MINTS,\n  useSelectedBaseCurrencyAccount,\n  useMarket,\n  useSelectedQuoteCurrencyAccount,\n} from '../utils/markets';\nimport { useWallet } from '../utils/wallet';\nimport Link from './Link';\n\nexport default function DepositDialog({ onClose, depositCoin }) {\n  let coinMint =\n    depositCoin &&\n    Object.keys(COIN_MINTS).find(\n      (address) => COIN_MINTS[address] === depositCoin,\n    );\n  const { market } = useMarket();\n  const { providerName, providerUrl } = useWallet();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  let account;\n  if (market?.baseMintAddress?.toBase58() === coinMint) {\n    account = baseCurrencyAccount;\n  } else {\n    account = quoteCurrencyAccount;\n  }\n  if (!coinMint) {\n    return null;\n  }\n  return (\n    <Modal\n      title={depositCoin}\n      visible={!!coinMint}\n      onOk={onClose}\n      onCancel={onClose}\n    >\n      <div style={{ paddingTop: '20px' }}>\n        <p style={{ color: 'white' }}>Mint address:</p>\n        <p style={{ color: 'rgba(255,255,255,0.5)' }}>{coinMint}</p>\n        <div>\n          <p style={{ color: 'white' }}>Deposit address:</p>\n          <p style={{ color: 'rgba(255,255,255,0.5)' }}>\n            {account ? (\n              account.pubkey.toBase58()\n            ) : (\n              <>\n                Visit{' '}\n                <Link external to={providerUrl}>\n                  {providerName}\n                </Link>{' '}\n                to create an account for this mint\n              </>\n            )}\n          </p>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n","import { Button, Col, Divider, Row } from 'antd';\nimport React, { useState } from 'react';\nimport FloatingElement from './layout/FloatingElement';\nimport styled from 'styled-components';\nimport {\n  useBalances,\n  useMarket,\n  useSelectedBaseCurrencyAccount,\n  useSelectedOpenOrdersAccount,\n  useSelectedQuoteCurrencyAccount,\n} from '../utils/markets';\nimport DepositDialog from './DepositDialog';\nimport { useWallet } from '../utils/wallet';\nimport Link from './Link';\nimport { settleFunds } from '../utils/send';\nimport { useSendConnection } from '../utils/connection';\n\nconst RowBox = styled(Row)`\n  padding-bottom: 20px;\n`;\n\nconst Tip = styled.p`\n  font-size: 12px;\n  padding-top: 6px;\n`;\n\nconst ActionButton = styled(Button)`\n  color: #2abdd2;\n  background-color: #212734;\n  border-width: 0px;\n`;\n\nexport default function StandaloneBalancesDisplay() {\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const balances = useBalances();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const connection = useSendConnection();\n  const { providerUrl, providerName, wallet } = useWallet();\n  const [depositCoin, setDepositCoin] = useState('');\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const baseCurrencyBalances =\n    balances && balances.find((b) => b.coin === baseCurrency);\n  const quoteCurrencyBalances =\n    balances && balances.find((b) => b.coin === quoteCurrency);\n\n  async function onSettleFunds() {\n    return await settleFunds({\n      market,\n      openOrders: openOrdersAccount,\n      connection,\n      wallet,\n      baseCurrencyAccount,\n      quoteCurrencyAccount,\n    });\n  }\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      {[\n        [baseCurrency, baseCurrencyBalances],\n        [quoteCurrency, quoteCurrencyBalances],\n      ].map(([currency, balances]) => (\n        <React.Fragment>\n          <Divider style={{ borderColor: 'white' }}>{currency}</Divider>\n          <RowBox\n            align=\"middle\"\n            justify=\"space-between\"\n            style={{ paddingBottom: 12 }}\n          >\n            <Col>Wallet balance:</Col>\n            <Col>{balances && balances.wallet}</Col>\n          </RowBox>\n          <RowBox\n            align=\"middle\"\n            justify=\"space-between\"\n            style={{ paddingBottom: 12 }}\n          >\n            <Col>Unsettled balance:</Col>\n            <Col>{balances && balances.unsettled}</Col>\n          </RowBox>\n          <RowBox align=\"middle\" justify=\"space-around\">\n            <Col style={{ width: 150 }}>\n              <ActionButton\n                block\n                size=\"large\"\n                onClick={() => setDepositCoin(currency)}\n              >\n                Deposit\n              </ActionButton>\n            </Col>\n            <Col style={{ width: 150 }}>\n              <ActionButton block size=\"large\" onClick={onSettleFunds}>\n                Settle\n              </ActionButton>\n            </Col>\n          </RowBox>\n          <Tip>\n            All deposits go to your{' '}\n            <Link external to={providerUrl}>\n              {providerName}\n            </Link>{' '}\n            wallet\n          </Tip>\n        </React.Fragment>\n      ))}\n      <DepositDialog\n        depositCoin={depositCoin}\n        onClose={() => setDepositCoin('')}\n      />\n    </FloatingElement>\n  );\n}\n","import { Button, Input, Radio, Switch, Slider } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport {\n  useBaseCurrencyBalances,\n  useQuoteCurrencyBalances,\n  useMarket,\n  useMarkPrice,\n  useSelectedOpenOrdersAccount,\n  useSelectedBaseCurrencyAccount,\n  useSelectedQuoteCurrencyAccount,\n} from '../utils/markets';\nimport { useWallet } from '../utils/wallet';\nimport { notify } from '../utils/notifications';\nimport { getDecimalCount } from '../utils/utils';\nimport { useSendConnection } from '../utils/connection';\nimport FloatingElement from './layout/FloatingElement';\nimport { placeOrder } from '../utils/send';\n\nconst InputBox = styled(Input)`\n  text-align: right;\n  padding-bottom: 16px;\n`;\n\nconst SellButton = styled(Button)`\n  margin: 20px 0px 0px 0px;\n  background: #f23b69;\n  border-color: #f23b69;\n`;\n\nconst BuyButton = styled(Button)`\n  margin: 20px 0px 0px 0px;\n  background: #02bf76;\n  border-color: #02bf76;\n`;\n\nconst sliderMarks = {\n  0: '0%',\n  25: '25%',\n  50: '50%',\n  75: '75%',\n  100: '100%',\n};\n\nexport default function TradeForm({ style, setChangeOrderRef }) {\n  const [side, setSide] = useState('buy');\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const baseCurrencyBalances = useBaseCurrencyBalances();\n  const quoteCurrencyBalances = useQuoteCurrencyBalances();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const { wallet } = useWallet();\n  const sendConnection = useSendConnection();\n  const markPrice = useMarkPrice();\n\n  const [postOnly, setPostOnly] = useState(false);\n  const [ioc, setIoc] = useState(false);\n  const [size, setSize] = useState(null);\n  const [price, setPrice] = useState(null);\n  const [submitting, setSubmitting] = useState(false);\n\n  const availableQuote = openOrdersAccount\n    ? market.quoteSplSizeToNumber(openOrdersAccount.quoteTokenFree)\n    : 0;\n\n  const maxQuoteSize = quoteCurrencyBalances + availableQuote;\n\n  const sizeFraction =\n    (price && size && maxQuoteSize && baseCurrencyBalances && side === 'buy'\n      ? ((price * size) / Math.floor(maxQuoteSize)) * 100\n      : (size / baseCurrencyBalances) * 100) || 0;\n\n  useEffect(() => {\n    setChangeOrderRef && setChangeOrderRef(doChangeOrder);\n  }, [setChangeOrderRef]);\n\n  // useEffect(() => {\n  //   sizeFraction && onSliderChange(sizeFraction);\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, [side, sizeFraction]);\n\n  const doChangeOrder = ({ size, price }) => {\n    size && setSize(size);\n    price && setPrice(price);\n  };\n\n  const onSliderChange = (value) => {\n    if (!maxQuoteSize || !baseCurrencyBalances) {\n      return;\n    }\n\n    if (!price) {\n      markPrice && setPrice(markPrice);\n    }\n\n    let newSize;\n    if (side === 'buy') {\n      if (price || markPrice) {\n        newSize =\n          ((Math.floor(maxQuoteSize) / (price || markPrice)) * value) / 100;\n      }\n    } else {\n      newSize = (Math.floor(baseCurrencyBalances) * value) / 100;\n    }\n\n    setSize(\n      market?.minOrderSize\n        ? newSize.toFixed(getDecimalCount(market.minOrderSize))\n        : newSize,\n    );\n  };\n\n  const postOnChange = (checked) => {\n    if (checked) {\n      setIoc(false);\n    }\n    setPostOnly(checked);\n  };\n  const iocOnChange = (checked) => {\n    if (checked) {\n      setPostOnly(false);\n    }\n    setIoc(checked);\n  };\n\n  async function onSubmit() {\n    const parsedPrice = parseFloat(price);\n    const parsedSize = parseFloat(size);\n\n    setSubmitting(true);\n    try {\n      await placeOrder({\n        side,\n        price: parsedPrice,\n        size: parsedSize,\n        orderType: ioc ? 'ioc' : postOnly ? 'postOnly' : 'limit',\n        market,\n        connection: sendConnection,\n        wallet,\n        baseCurrencyAccount: baseCurrencyAccount?.pubkey,\n        quoteCurrencyAccount: quoteCurrencyAccount?.pubkey,\n      });\n    } catch (e) {\n      console.warn(e);\n      notify({ message: 'Error placing order: ' + e.message, type: 'error' });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <FloatingElement\n      style={{ display: 'flex', flexDirection: 'column', ...style }}\n    >\n      <div style={{ flex: 1 }}>\n        <Radio.Group\n          onChange={(e) => setSide(e.target.value)}\n          value={side}\n          buttonStyle=\"solid\"\n          style={{\n            marginBottom: 8,\n            width: '100%',\n          }}\n        >\n          <Radio.Button\n            value=\"buy\"\n            style={{\n              width: '50%',\n              textAlign: 'center',\n              background: side === 'buy' ? '#02bf76' : '',\n              borderColor: side === 'buy' ? '#02bf76' : '',\n            }}\n          >\n            BUY\n          </Radio.Button>\n          <Radio.Button\n            value=\"sell\"\n            style={{\n              width: '50%',\n              textAlign: 'center',\n              background: side === 'sell' ? '#F23B69' : '',\n              borderColor: side === 'sell' ? '#F23B69' : '',\n            }}\n          >\n            SELL\n          </Radio.Button>\n        </Radio.Group>\n        <InputBox\n          addonBefore={`Price (${quoteCurrency})`}\n          placeholder=\"Price\"\n          value={price}\n          type=\"number\"\n          step={market?.tickSize || 1}\n          onChange={(e) => setPrice(e.target.value)}\n        />\n        <InputBox\n          addonBefore={`Size (${baseCurrency})`}\n          placeholder=\"Size\"\n          value={size}\n          type=\"number\"\n          step={market?.minOrderSize || 1}\n          onChange={(e) => setSize(e.target.value)}\n        />\n        {/*<Slider*/}\n        {/*  value={sizeFraction}*/}\n        {/*  tipFormatter={(value) => `${value}%`}*/}\n        {/*  marks={sliderMarks}*/}\n        {/*  onChange={onSliderChange}*/}\n        {/*/>*/}\n        <div style={{ paddingTop: 18 }}>\n          {'POST '}\n          <Switch\n            checked={postOnly}\n            onChange={postOnChange}\n            style={{ marginRight: 40 }}\n          />\n          {'IOC '}\n          <Switch checked={ioc} onChange={iocOnChange} />\n        </div>\n      </div>\n      {side === 'buy' ? (\n        <BuyButton\n          disabled={!price || !size}\n          onClick={onSubmit}\n          block\n          type=\"primary\"\n          size=\"large\"\n          loading={submitting}\n        >\n          Buy {baseCurrency}\n        </BuyButton>\n      ) : (\n        <SellButton\n          disabled={!price || !size}\n          onClick={onSubmit}\n          block\n          type=\"primary\"\n          size=\"large\"\n          loading={submitting}\n        >\n          Sell {baseCurrency}\n        </SellButton>\n      )}\n    </FloatingElement>\n  );\n}\n","import { Col, Row } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useMarket, useTrades } from '../utils/markets';\nimport { getDecimalCount } from '../utils/utils';\nimport FloatingElement from './layout/FloatingElement';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\nconst SizeTitle = styled(Row)`\n  padding: 20px 0 14px;\n  color: #434a59;\n`;\n\n// TODO: Put in some scrolling\nconst TradesContainer = styled.div`\n  height: calc(100% - 75px);\n  margin-right: -20px;\n  padding-right: 5px;\n  overflow-y: scroll;\n`;\n\nexport default function PublicTrades({ smallScreen }) {\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const trades = useTrades();\n  return (\n    <FloatingElement\n      style={\n        smallScreen\n          ? { flex: 1 }\n          : { marginTop: '10px', height: 'calc(100% - 520px)' }\n      }\n    >\n      <Title>Recent Market trades</Title>\n      <SizeTitle>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          Size ({baseCurrency})\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          Price ({quoteCurrency}){' '}\n        </Col>\n      </SizeTitle>\n      {!!trades && (\n        <TradesContainer>\n          {trades.map((trade, i) => (\n            <Row key={i} style={{ marginBottom: 4 }}>\n              <Col span={12} style={{ textAlign: 'left' }}>\n                {market?.minOrderSize && !isNaN(trade.size)\n                  ? Number(trade.size).toFixed(\n                      getDecimalCount(market.minOrderSize),\n                    )\n                  : trade.size}\n              </Col>\n              <Col\n                span={12}\n                style={{\n                  textAlign: 'right',\n                  color: trade.side === 'buy' ? '#41C77A' : '#F23B69',\n                }}\n              >\n                {market?.tickSize && !isNaN(trade.price)\n                  ? Number(trade.price).toFixed(\n                      getDecimalCount(market.tickSize),\n                    )\n                  : trade.price}\n              </Col>\n            </Row>\n          ))}\n        </TradesContainer>\n      )}\n    </FloatingElement>\n  );\n}\n","import React from 'react';\nimport { Button } from 'antd';\nimport { LinkOutlined } from '@ant-design/icons';\n\nexport default function LinkAddress({ title, address }) {\n  return (\n    <div>\n      {title && <p style={{ color: 'white' }}>{title}</p>}\n      <Button\n        type=\"link\"\n        icon={<LinkOutlined />}\n        href={'https://explorer.solana.com/address/' + address}\n        target=\"_blank\"\n      >\n        {address}\n      </Button>\n    </div>\n  );\n}\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Button, Col, Input, Popover, Row, Select } from 'antd';\nimport styled from 'styled-components';\nimport Orderbook from '../components/Orderbook';\nimport UserInfoTable from '../components/UserInfoTable';\nimport StandaloneBalancesDisplay from '../components/StandaloneBalancesDisplay';\nimport { useMarket, useMarketsList } from '../utils/markets';\nimport TradeForm from '../components/TradeForm';\nimport { useLocalStorageState } from '../utils/utils';\nimport TradesTable from '../components/TradesTable';\nimport LinkAddress from '../components/LinkAddress';\nimport { InfoCircleOutlined } from '@ant-design/icons';\n\nconst { Option } = Select;\n\nconst Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 16px 16px;\n  .borderNone .ant-select-selector {\n    border: none !important;\n  }\n`;\n\nfunction hashString(s) {\n  var h = 0,\n    l = s.length,\n    i = 0;\n  if (l > 0) while (i < l) h = ((h << 5) - h + s.charCodeAt(i++)) | 0;\n  return h;\n}\n\nconst requirePassword = false;\n\nexport default function TradePage() {\n  const { market, marketName, setMarketName } = useMarket();\n  const markets = useMarketsList();\n  const [submittedPassword, setSubmittedPassword] = useLocalStorageState(\n    'submittedPassword5',\n    false,\n  );\n  const [password, setPassword] = useState('password');\n  const [dimensions, setDimensions] = useState({\n    height: window.innerHeight,\n    width: window.innerWidth,\n  });\n\n  const changeOrderRef = useRef();\n\n  useEffect(() => {\n    const handleResize = () => {\n      setDimensions({\n        height: window.innerHeight,\n        width: window.innerWidth,\n      });\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const width = dimensions?.width;\n  const componentProps = {\n    onChangeOrderRef: (ref) => (changeOrderRef.current = ref),\n    onPrice: (price) =>\n      changeOrderRef.current && changeOrderRef.current({ price }),\n    onSize: (size) =>\n      changeOrderRef.current && changeOrderRef.current({ size }),\n  };\n  const getComponent = useCallback(() => {\n    if (width < 1000) {\n      return <RenderSmaller {...componentProps} />;\n    } else if (width < 1450) {\n      return <RenderSmall {...componentProps} />;\n    } else {\n      return <RenderNormal {...componentProps} />;\n    }\n  }, [width, componentProps]);\n\n  if (!submittedPassword && requirePassword) {\n    return (\n      <Wrapper style={{ width: 400 }}>\n        <Input.Password\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <Button\n          onClick={() => {\n            if (hashString(password) === 99071593) {\n              setSubmittedPassword(true);\n            }\n          }}\n          block\n          type=\"primary\"\n          size=\"large\"\n        >\n          Submit\n        </Button>\n      </Wrapper>\n    );\n  }\n\n  return (\n    <>\n      <Wrapper>\n        <Row\n          align=\"middle\"\n          style={{ paddingLeft: 5, paddingRight: 5 }}\n          gutter={16}\n        >\n          <Col>\n            <Select\n              size={'large'}\n              bordered={true}\n              onSelect={setMarketName}\n              value={marketName}\n              listHeight={400}\n            >\n              {markets.map(({ name, address }, i) => (\n                <Option\n                  value={name}\n                  key={address}\n                  style={{\n                    padding: '10px 0',\n                    textAlign: 'center',\n                    backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\n                  }}\n                >\n                  {name}\n                </Option>\n              ))}\n            </Select>\n          </Col>\n          {market ? (\n            <Col>\n              <Popover\n                content={<LinkAddress address={market.publicKey.toBase58()} />}\n                placement=\"bottomRight\"\n                title=\"Market address\"\n                trigger=\"click\"\n              >\n                <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n              </Popover>\n            </Col>\n          ) : null}\n        </Row>\n        {getComponent()}\n      </Wrapper>\n    </>\n  );\n}\n\nconst RenderNormal = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <Row\n      style={{\n        minHeight: '750px',\n        flexWrap: 'nowrap',\n      }}\n    >\n      <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n        <UserInfoTable />\n      </Col>\n      <Col flex={'360px'} style={{ height: '100%' }}>\n        <Orderbook smallScreen={false} onPrice={onPrice} onSize={onSize} />\n        <TradesTable smallScreen={false} />\n      </Col>\n      <Col\n        flex=\"400px\"\n        style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n      >\n        <TradeForm setChangeOrderRef={onChangeOrderRef} />\n        <StandaloneBalancesDisplay />\n      </Col>\n    </Row>\n  );\n};\n\nconst RenderSmall = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <>\n      <Row\n        style={{\n          height: '750px',\n        }}\n      >\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n          <Orderbook\n            smallScreen={true}\n            depth={12}\n            onPrice={onPrice}\n            onSize={onSize}\n          />\n        </Col>\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n          <TradesTable smallScreen={true} />\n        </Col>\n        <Col\n          flex=\"400px\"\n          style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n        >\n          <TradeForm setChangeOrderRef={onChangeOrderRef} />\n          <StandaloneBalancesDisplay />\n        </Col>\n      </Row>\n      <Row>\n        <Col flex=\"auto\">\n          <UserInfoTable />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst RenderSmaller = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <>\n      <Row>\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <TradeForm style={{ flex: 1 }} setChangeOrderRef={onChangeOrderRef} />\n        </Col>\n        <Col xs={24} sm={12}>\n          <StandaloneBalancesDisplay />\n        </Col>\n      </Row>\n      <Row style={{ minHeight: '500px' }}>\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <Orderbook smallScreen={true} onPrice={onPrice} onSize={onSize} />\n        </Col>\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <TradesTable smallScreen={true} />\n        </Col>\n      </Row>\n      <Row>\n        <Col flex=\"auto\">\n          <UserInfoTable />\n        </Col>\n      </Row>\n    </>\n  );\n};\n","import React from 'react';\nimport { useOpenOrdersForAllMarkets } from '../utils/markets';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport OpenOrderTable from '../components/UserInfoTable/OpenOrderTable';\n\nexport default function OpenOrdersPage() {\n  const [openOrders] = useOpenOrdersForAllMarkets();\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <OpenOrderTable openOrders={openOrders} />\n    </FloatingElement>\n  );\n}\n","import React from 'react';\nimport DataTable from '../layout/DataTable';\n\nexport default function WalletBalancesTable({\n  loaded = false,\n  walletBalances,\n}) {\n  const columns = [\n    {\n      title: 'Coin',\n      dataIndex: 'key',\n      key: 'key',\n    },\n    {\n      title: 'Wallet Balance',\n      dataIndex: 'wallet',\n      key: 'wallet',\n    },\n  ];\n  return (\n    <DataTable\n      emptyLabel=\"No balances\"\n      dataSource={walletBalances}\n      columns={columns}\n      pagination={false}\n      loading={!loaded}\n    />\n  );\n}\n","import { Button } from 'antd';\nimport React from 'react';\nimport DataTable from '../layout/DataTable';\nimport { useConnection } from '../../utils/connection';\nimport { useWallet } from '../../utils/wallet';\nimport { settleFunds } from '../../utils/send';\n\nexport default function AccountsTable({ accountBalances }) {\n  const connection = useConnection();\n  const { wallet } = useWallet();\n\n  async function onSettleFunds(account) {\n    const {\n      market,\n      openOrdersAccount,\n      baseCurrencyAccount,\n      quoteCurrencyAccount,\n    } = account;\n    return await settleFunds({\n      market,\n      openOrders: openOrdersAccount,\n      connection,\n      wallet,\n      baseCurrencyAccount,\n      quoteCurrencyAccount,\n    });\n  }\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'key',\n      key: 'key',\n    },\n    {\n      title: 'Orders',\n      dataIndex: 'orders',\n      key: 'orders',\n    },\n    {\n      title: 'Unsettled',\n      dataIndex: 'unsettled',\n      key: 'unsettled',\n    },\n    {\n      key: 'action',\n      render: (account) => (\n        <div style={{ textAlign: 'right' }}>\n          <Button\n            ghost\n            style={{ marginRight: 12 }}\n            onClick={() => onSettleFunds(account)}\n          >\n            Settle\n          </Button>\n        </div>\n      ),\n    },\n  ];\n  return (\n    <DataTable\n      emptyLabel=\"No balances\"\n      dataSource={accountBalances}\n      columns={columns.map((data) => ({\n        ...data,\n        key: `${data.market}${data.coin}`,\n      }))}\n      pagination={false}\n    />\n  );\n}\n","import React from 'react';\nimport { Tabs } from 'antd';\nimport {\n  useWalletBalancesForAllMarkets,\n  useOpenOrderAccountBalancesForAllMarkets,\n} from '../utils/markets';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport WalletBalancesTable from '../components/UserInfoTable/WalletBalancesTable';\nimport AccountsTable from '../components/UserInfoTable/AccountsTable';\n\nconst { TabPane } = Tabs;\n\nexport default function BalancesPage() {\n  const [\n    walletBalances,\n    loadedWalletBalances,\n  ] = useWalletBalancesForAllMarkets();\n  const [\n    accountBalances,\n    accountBalancesLoaded,\n  ] = useOpenOrderAccountBalancesForAllMarkets();\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <Tabs defaultActiveKey=\"walletBalances\">\n        <TabPane tab=\"Wallet Balances\" key=\"walletBalances\">\n          <WalletBalancesTable\n            loaded={loadedWalletBalances}\n            walletBalances={walletBalances}\n          />\n        </TabPane>\n        <TabPane tab=\"Market balances\" key=\"marketBalances\">\n          <AccountsTable\n            loaded={accountBalancesLoaded}\n            accountBalances={accountBalances}\n          />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n","import { InfoCircleOutlined, UserOutlined } from '@ant-design/icons';\nimport { Button, Menu, Popover, Select } from 'antd';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport logo from '../assets/logo.svg';\nimport styled from 'styled-components';\nimport { useWallet, WALLET_PROVIDERS } from '../utils/wallet';\nimport { ENDPOINTS, useConnectionConfig } from '../utils/connection';\nimport LinkAddress from './LinkAddress';\n\nconst Wrapper = styled.div`\n  background-color: #0d1017;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  padding: 0px 30px;\n  flex-wrap: wrap;\n`;\nconst LogoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  color: #2abdd2;\n  font-weight: bold;\n  cursor: pointer;\n  img {\n    height: 30px;\n    margin-right: 8px;\n  }\n`;\n\nexport default function TopBar() {\n  const [current, setCurrent] = useState('/');\n  const { connected, wallet, providerUrl, setProvider } = useWallet();\n  const { endpoint, setEndpoint } = useConnectionConfig();\n  const location = useLocation();\n  const history = useHistory();\n\n  const publicKey = wallet?.publicKey?.toBase58();\n\n  const handleClick = useCallback(\n    (e) => {\n      history.push(e.key);\n    },\n    [history],\n  );\n\n  useEffect(() => {\n    if (location.pathname.includes('/orders')) {\n      setCurrent('/orders');\n    } else if (location.pathname.includes('/balances')) {\n      setCurrent('/balances');\n    }\n  }, [location]);\n\n  return (\n    <Wrapper>\n      <LogoWrapper>\n        <img src={logo} alt=\"\" />\n        {'SERUM'}\n      </LogoWrapper>\n      <Menu\n        mode=\"horizontal\"\n        onClick={handleClick}\n        selectedKeys={[current]}\n        style={{\n          borderBottom: 'none',\n          backgroundColor: 'transparent',\n          display: 'flex',\n          alignItems: 'flex-end',\n          flex: 1,\n        }}\n      >\n        <Menu.Item key=\"/\">TRADE</Menu.Item>\n      </Menu>\n      <div>\n        <Select\n          onSelect={setEndpoint}\n          value={endpoint}\n          style={{ marginRight: 8 }}\n        >\n          {ENDPOINTS.map(({ name, endpoint }) => (\n            <Select.Option value={endpoint} key={endpoint}>\n              {name}\n            </Select.Option>\n          ))}\n        </Select>\n      </div>\n      <div>\n        <Select onSelect={setProvider} value={providerUrl}>\n          {WALLET_PROVIDERS.map(({ name, url }) => (\n            <Select.Option value={url} key={url}>\n              {name}\n            </Select.Option>\n          ))}\n        </Select>\n      </div>\n      <div>\n        <Button\n          type=\"text\"\n          size=\"large\"\n          onClick={connected ? wallet.disconnect : wallet.connect}\n          style={{ color: '#2abdd2' }}\n        >\n          <UserOutlined />\n          {!connected ? 'Connect wallet' : 'Disconnect'}\n        </Button>\n        {connected && (\n          <Popover\n            content={<LinkAddress address={publicKey} />}\n            placement=\"bottomRight\"\n            title=\"Wallet public key\"\n            trigger=\"click\"\n          >\n            <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n          </Popover>\n        )}\n      </div>\n    </Wrapper>\n  );\n}\n","export const helpUrls = {\n  customerSupport: 'https://t.me/ProjectSerum',\n  customerSupportZh: 'https://t.me/ProjectSerum_Chinese',\n  contactEmail: 'mailto:contact@projectserum.com',\n  discord: 'https://discord.gg/MxZFT4v',\n  telegram: 'https://t.me/ProjectSerum',\n  github: 'https://github.com/project-serum',\n  projectSerum: 'https://projectserum.com/',\n  developerResources: 'https://projectserum.com/developer-resources',\n  solanaBeach: 'https://solanabeach.io',\n};\n","import React from 'react';\nimport { Layout, Row, Col, Grid } from 'antd';\nimport Link from './Link';\nimport { helpUrls } from './HelpUrls';\nconst { Footer } = Layout;\nconst { useBreakpoint } = Grid;\n\nconst footerElements = [\n  {\n    description: 'Serum Developer Resources',\n    link: helpUrls.developerResources,\n  },\n  { description: 'Discord', link: helpUrls.discord },\n  { description: 'Telegram', link: helpUrls.telegram },\n  { description: 'GitHub', link: helpUrls.github },\n  { description: 'Project Serum', link: helpUrls.projectSerum },\n  { description: 'Solana Network', link: helpUrls.solanaBeach },\n];\n\nexport const CustomFooter = () => {\n  const smallScreen = !useBreakpoint().lg;\n\n  return (\n    <Footer\n      style={{\n        height: '45px',\n        paddingBottom: 10,\n        paddingTop: 10,\n      }}\n    >\n      <Row align=\"middle\" gutter={[16, 4]}>\n        {!smallScreen && (\n          <>\n            <Col flex=\"auto\" />\n            {footerElements.map((elem, index) => {\n              return (\n                <Col key={index + ''}>\n                  <Link external to={elem.link}>\n                    {elem.description}\n                  </Link>\n                </Col>\n              );\n            })}\n          </>\n        )}\n        <Col flex=\"auto\">{/*  <DexProgramSelector />*/}</Col>\n      </Row>\n    </Footer>\n  );\n};\n","import { Layout } from 'antd';\nimport React from 'react';\nimport TopBar from './TopBar';\nimport { CustomFooter as Footer } from './Footer';\nconst { Header, Content } = Layout;\n\nexport default function BasicLayout({ children }) {\n  return (\n    <React.Fragment>\n      <Layout\n        style={{ display: 'flex', minHeight: '100vh', flexDirection: 'column' }}\n      >\n        <Header style={{ padding: 0, minHeight: 64, height: 'unset' }}>\n          <TopBar />\n        </Header>\n        <Content style={{ flex: 1 }}>{children}</Content>\n        <Footer />\n      </Layout>\n    </React.Fragment>\n  );\n}\n","import { HashRouter, Route } from 'react-router-dom';\nimport TradePage from './pages/TradePage';\nimport OpenOrdersPage from './pages/OpenOrdersPage';\nimport React from 'react';\nimport BalancesPage from './pages/BalancesPage';\nimport BasicLayout from './components/BasicLayout';\n\nexport function Routes() {\n  return (\n    <HashRouter basename={'/'}>\n      <Route exact path=\"/\" component={TradePageContents} />\n      <Route exact path=\"/orders\" component={OpenOrdersPageContents} />\n      <Route exact path=\"/balances\" component={BalancesPageContents} />\n    </HashRouter>\n  );\n}\n\nfunction TradePageContents() {\n  return (\n    <BasicLayout>\n      <TradePage />\n    </BasicLayout>\n  );\n}\n\nfunction OpenOrdersPageContents() {\n  return (\n    <BasicLayout>\n      <OpenOrdersPage />\n    </BasicLayout>\n  );\n}\n\nfunction BalancesPageContents() {\n  return (\n    <BasicLayout>\n      <BalancesPage />\n    </BasicLayout>\n  );\n}\n","import React, { Suspense } from 'react';\nimport './App.less';\nimport { ConnectionProvider } from './utils/connection';\nimport { MarketProvider } from './utils/markets';\nimport { WalletProvider } from './utils/wallet';\nimport { GlobalStyle } from './global_style';\nimport { Spin } from 'antd';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { Routes } from './routes';\n\nexport default function App() {\n  return (\n    <Suspense fallback={() => <Spin size=\"large\" />}>\n      <GlobalStyle />\n      <ErrorBoundary>\n        <ConnectionProvider>\n          <MarketProvider>\n            <WalletProvider>\n              <Suspense fallback={() => <Spin size=\"large\" />}>\n                <Routes />\n              </Suspense>\n            </WalletProvider>\n          </MarketProvider>\n        </ConnectionProvider>\n      </ErrorBoundary>\n    </Suspense>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}