{"version":3,"sources":["../../../src/schema.ts","../../../src/index.ts","../../../src/transactions.ts","../../../src/instructions.ts","assets/logo.svg","../../../src/simulate-transaction.ts","../../../src/admin-controlled-pool.ts","utils/utils.tsx","utils/fetch-loop.tsx","utils/connection.tsx","components/Link.js","utils/notifications.tsx","utils/wallet.tsx","utils/send.tsx","utils/tokens.tsx","utils/bonfidaConnector.tsx","utils/markets.tsx","global_style.ts","components/ErrorBoundary.jsx","utils/useInterval.tsx","components/layout/FloatingElement.jsx","components/Orderbook.jsx","utils/usePrevious.tsx","components/layout/DataTable.jsx","components/UserInfoTable/BalancesTable.jsx","components/UserInfoTable/OpenOrderTable.tsx","components/UserInfoTable/FillsTable.jsx","components/UserInfoTable/FeesTable.js","components/UserInfoTable/index.jsx","components/DepositDialog.jsx","components/StandaloneTokenAccountSelect.tsx","components/LinkAddress.tsx","components/StandaloneBalancesDisplay.tsx","components/TradeForm.tsx","components/TradesTable.tsx","components/DeprecatedMarketsInstructions.js","components/CustomMarketDialog.jsx","pages/TradePage.tsx","pages/OpenOrdersPage.tsx","components/UserInfoTable/WalletBalancesTable.tsx","pages/BalancesPage.tsx","components/WalletConnect.tsx","components/ConvertForm.tsx","pages/ConvertPage.tsx","utils/preferences.tsx","components/Settings.jsx","components/CustomClusterEndpointDialog.tsx","components/AppSearch.tsx","components/TopBar.tsx","components/HelpUrls.ts","components/Footer.tsx","components/BasicLayout.js","components/useMintInput.tsx","pages/ListNewMarketPage.jsx","pages/pools/NewPoolPage.tsx","components/MintName.tsx","pages/pools/PoolPage/PoolBasketDisplay.tsx","pages/pools/PoolPage/PoolInfoPanel.tsx","pages/pools/PoolPage/PoolCreateRedeemPanel.tsx","pages/pools/PoolPage/PoolBalancesPanel.tsx","pages/pools/PoolPage/PoolAdminPanel.tsx","pages/pools/PoolPage/index.tsx","pages/pools/PoolListPage.tsx","routes.tsx","App.tsx","serviceWorker.js","index.js"],"names":["pubkey","module","exports","isValidPublicKey","key","PublicKey","sleep","ms","a","Promise","resolve","setTimeout","percentFormat","Intl","NumberFormat","undefined","style","minimumFractionDigits","maximumFractionDigits","floorToDecimal","value","decimals","Math","floor","roundToDecimal","round","getDecimalCount","isNaN","toString","split","length","divideBnToNumber","numerator","denominator","quotient","div","toNumber","rem","umod","gcd","getTokenMultiplierFromDecimals","BN","pow","localStorageListeners","useLocalStorageStringState","defaultState","state","localStorage","getItem","useState","notify","useEffect","push","filter","listener","setState","useCallback","newState","removeItem","setItem","forEach","useLocalStorageState","JSON","stringify","stringState","setStringState","parse","abbreviateAddress","address","size","base58","toBase58","slice","isEqual","obj1","obj2","keys","Object","k","pageLoadTime","Date","globalCache","Map","FetchLoopListener","cacheKey","fn","refreshInterval","refreshIntervalOnError","callback","cacheNullValues","this","FetchLoopInternal","timeoutId","listeners","errors","refresh","clearTimeout","stopped","errored","data","console","log","set","notifyListeners","warn","waitTime","min","timeSincePageLoad","document","visibilityState","hasFocus","random","Set","previousRefreshInterval","add","assert","delete","map","refreshIntervalsOnError","x","globalLoops","loops","has","get","addListener","loop","removeListener","all","values","useAsyncData","asyncFn","useReducer","i","rerender","loaded","refreshCache","clearCache","refreshAllCaches","ENDPOINTS","name","endpoint","custom","accountListenerCount","ConnectionContext","React","createContext","ConnectionProvider","children","setEndpoint","customEndpoints","setCustomEndpoints","availableEndpoints","concat","connection","useMemo","Connection","sendConnection","id","onAccountChange","Account","publicKey","removeAccountChangeListener","onSlotChange","removeSlotChangeListener","Provider","useConnection","context","useContext","Error","useSendConnection","useConnectionConfig","endpointInfo","find","info","useAccountInfo","tuple","getAccountInfo","accountInfo","count","previousInfo","subscriptionId","equals","lamports","initializeOnly","setCache","currentItem","previousInfoRef","useRef","current","useAccountData","Link","external","props","to","rest","href","target","rel","message","description","txid","type","placement","color","notification","opacity","backgroundColor","WALLET_PROVIDERS","url","WalletContext","WalletProvider","providerUrl","savedProviderUrl","setProviderUrl","wallet","Wallet","connected","setConnected","on","walletPublicKey","substring","disconnect","providerName","useWallet","setProvider","createTokenAccountTransaction","mintPublicKey","newAccount","transaction","Transaction","SystemProgram","getMinimumBalanceForRentExemption","TokenInstructions","TOKEN_PROGRAM_ID","fromPubkey","newAccountPubkey","space","programId","instruction","createAccount","initializeAccount","account","mint","owner","signer","settleFunds","market","openOrders","baseCurrencyAccount","quoteCurrencyAccount","baseCurrencyAccountPubkey","quoteCurrencyAccountPubkey","baseMintAddress","result","createAccountTransaction","createAccountSigner","quoteMintAddress","supportsReferralFees","TOKEN_MINTS","makeSettleFundsTransaction","settleFundsTransaction","settleFundsSigners","signers","mergeTransactions","sendTransaction","sendingMessage","settleAllFunds","tokenAccounts","markets","selectedTokenAccounts","programIds","reduce","cumulative","m","_programId","p","getOpenOrdersAccountsForProgramId","OpenOrders","findForOwner","openOrdersAccounts","baseTokenFree","quoteTokenFree","openOrdersAccountsForProgramIds","accounts","openOrdersAccount","_decoded","ownAddress","baseMint","quoteMint","selectedBaseTokenAccount","getSelectedTokenAccountForMint","selectedQuoteTokenAccount","settleTransactions","transactions","t","s","cancelOrder","params","cancelOrders","orders","order","makeMatchOrdersTransaction","makeCancelOrderInstruction","placeOrder","side","price","orderType","formattedMinOrderSize","minOrderSize","toFixed","formattedTickSize","tickSize","isIncrement","num","step","abs","createAccountSigners","payer","matchOrderstransaction","makePlaceOrderTransaction","placeOrderTx","placeOrderSigners","listMarket","getVaultOwnerAndNonce","nonce","createProgramAddress","toBuffer","toArrayLike","Buffer","dexProgramId","vaultOwner","iaddn","baseLotSize","quoteLotSize","requestQueue","eventQueue","bids","asks","baseVault","quoteVault","feeRateBps","quoteDustThreshold","vaultSignerNonce","tx1","tx2","Market","getLayout","span","DexInstructions","initializeMarket","signTransaction","signedTransactions","signedTransaction","sendSignedTransaction","getUnixTs","getTime","sentMessage","successMessage","timeout","getRecentBlockhash","recentBlockhash","blockhash","setSigners","partialSign","rawTransaction","serialize","startTime","sendRawTransaction","skipPreflight","done","awaitTransactionSignatureConfirmation","simulateResult","simulateTransaction","err","logs","line","startsWith","reject","onSignature","e","getSignatureStatuses","signatureStatuses","confirmations","resultDescription","AccountInfoResult","struct","executable","rentEpoch","GetMultipleAccountsAndContextRpcResult","array","union","jsonRpcVersion","literal","jsonrpc","error","jsonRpcResult","slot","getMultipleSolanaAccounts","publicKeys","args","commitment","_rpcRequest","unsafeRes","res","join","from","fromEntries","_recentBlockhash","_disableBlockhashCaching","signData","serializeMessage","wireTransaction","_serialize","encodedTransaction","encoding","ACCOUNT_LAYOUT","BufferLayout","MINT_LAYOUT","parseTokenAccountData","decode","amount","parseTokenMintData","initialized","supply","getOwnedAccountsFilters","memcmp","offset","offsetOf","bytes","dataSize","getOwnedTokenAccounts","filters","resp","bs58","every","filterBytes","getTokenAccountInfo","ownerAddress","splAccounts","parsedSplAccounts","effectiveMint","WRAPPED_SOL_MINT","useMintToTickers","customMarkets","useMarket","useAllMarkets","mintsToTickers","customMarketInfo","customMarket","baseLabel","quoteLabel","useMintInfos","useTokenAccounts","allMarkets","allMints","marketInfo","uniqueMints","stringMint","mintInfos","entries","BonfidaApi","path","fetch","URL","response","ok","json","responseJson","success","marketAddress","USE_MARKETS","MARKETS","getMarketInfos","load","marketName","_VERY_SLOW_REFRESH_INTERVAL","useUnmigratedOpenOrdersAccounts","deprecatedOpenOrdersAccounts","deprecatedProgramIds","Array","deprecated","publicKeyStr","baseTokenTotal","quoteTokenTotal","some","MarketContext","DEFAULT_MARKET","getMarketDetails","otherMarket","baseCurrency","token","quoteCurrency","MarketProvider","setMarketAddress","setCustomMarkets","marketInfos","setMarket","then","catch","useSelectedTokenAccounts","useMarkPrice","markPrice","setMarkPrice","useOrderbook","orderbook","trades","limit","_useUnfilteredTrades","eventFlags","maker","trade","useTrades","bb","Number","ba","last","sort","b","getUnfilteredTrades","loadFills","useOrderbookAccounts","bidData","askData","bidOrderbook","Orderbook","askOrderbook","depth","getL2","useOpenOrdersAccounts","fast","getOpenOrdersAccounts","findOpenOrdersAccountsForOwner","useSelectedOpenOrdersAccount","selectedPubKey","filtered","useSelectedQuoteCurrencyAccount","mintAddress","useSelectedBaseCurrencyAccount","useSelectedQuoteCurrencyBalances","quoteSplSizeToNumber","useSelectedBaseCurrencyBalances","baseSplSizeToNumber","useAllOpenOrdersAccounts","stringProgramId","flat","useBalances","baseCurrencyBalances","quoteCurrencyBalances","baseExists","quoteExists","coin","sub","unsettled","useUnmigratedDeprecatedMarkets","marketsList","deps","getMarket","openOrdersList","customMarketsInfo","getMarketOrderPrice","cost","tickSizeDecimals","isBids","costAtLevel","spentCost","sendPrice","getExpectedFillPrice","sizeAtLevel","avgPrice","totalAvgPrice","GlobalStyle","createGlobalStyle","Title","Typography","ErrorBoundary","hasError","level","Component","useInterval","delay","savedCallback","setInterval","clearInterval","Wrapper","styled","FloatingElement","stretchVertical","height","SizeTitle","Row","MarkPriceTitle","Line","css","Price","smallScreen","onPrice","onSize","currentOrderbookData","lastOrderbookData","orderbookData","setOrderbookData","getCumulativeOrderbookSide","totalSize","backwards","cumulativeSize","sizePercent","reverse","sum","total","index","bidsToDisplay","asksToDisplay","flex","overflow","textAlign","OrderbookRow","onPriceClick","onSizeClick","MarkPriceComponent","memo","element","classList","contains","remove","formattedSize","formattedPrice","ref","marginBottom","onClick","data-width","data-bgcolor","prevProps","nextProps","previousMarkPrice","usePrevious","markPriceColor","formattedMarkPrice","justify","ArrowUpOutlined","marginRight","ArrowDownOutlined","DataTable","dataSource","columns","emptyLabel","pagination","loading","pageSize","renderEmpty","padding","display","justifyContent","alignItems","BalancesTable","balances","showMarket","hideWalletBalance","onSettleSuccess","title","dataIndex","render","ghost","onSettleFunds","CancelButton","Button","OpenOrderTable","onCancelSuccess","marketFilter","cancelId","setCancelId","orderId","marketFilters","orderInfos","text","onFilter","record","indexOf","fontWeight","charAt","toUpperCase","sorter","showSorterTooltip","icon","DeleteOutlined","cancel","FillsTable","fills","fill","useFills","liquidity","FeesTable","findFeeDiscountKeys","useFeeDiscountKeys","feeTier","row","marginLeft","format","getFeeRates","taker","_","SRM_MINT","MSRM_MINT","marginTop","FeeScheduleTable","balance","Paragraph","TabPane","Tabs","Index","paddingTop","defaultActiveKey","tab","supportsSrmFeeDiscounts","OpenOrdersTab","filterForOpenOrders","useOpenOrders","BalancesTab","DepositDialog","coinMint","depositCoin","onClose","baseOrQuote","visible","onOk","onCancel","StandaloneTokenAccountsSelect","selectedValue","label","setSelectedTokenAccounts","Fragment","width","onSelect","newSelectedTokenAccounts","Option","Text","code","shape","CopyOutlined","navigator","clipboard","writeText","LinkAddress","LinkOutlined","RowBox","Tip","ActionButton","StandaloneBalancesDisplay","setBaseOrQuote","formattedBalances","currency","borderColor","content","trigger","InfoCircleOutlined","align","paddingBottom","block","SellButton","BuyButton","sliderMarks","0","25","50","75","100","TradeForm","setChangeOrderRef","setSide","postOnly","setPostOnly","ioc","setIoc","baseSize","setBaseSize","quoteSize","setQuoteSize","setPrice","submitting","setSubmitting","sizeFraction","setSizeFraction","quoteBalance","baseBalance","sizeDecimalCount","priceDecimalCount","doChangeOrder","onSliderChange","updateSizeFraction","onSetBaseSize","usePrice","maxSize","parseFloat","newSize","formatted","onSubmit","flexDirection","Group","onChange","buttonStyle","background","addonBefore","suffix","fontSize","compact","onSetQuoteSize","tipFormatter","marks","checked","disabled","PublicTrades","getRecentTrades","useBonfidaTrades","minHeight","maxHeight","paddingRight","overflowY","time","toLocaleTimeString","DeprecatedMarketsInstructions","switchToLiveMarkets","openOrderAccountBalances","inOrdersBase","inOrdersQuote","unsettledBase","unsettledQuote","useBalancesForDeprecatedMarkets","marketsAndOrders","getOrders","loadOrdersForOwner","refreshOpenOrders","useGetOpenOrdersForDeprecatedMarkets","needToCancelOrders","filteredBalances","needToSettleFunds","CustomMarketDialog","onAddCustomMarket","marketId","setMarketId","marketLabel","setMarketLabel","setBaseLabel","setQuoteLabel","loadingMarket","setLoadingMarket","wellFormedMarketId","marketAccountInfo","resetLabels","finally","knownMarket","knownProgram","knownBaseCurrency","knownQuoteCurrency","canSubmit","onDoClose","okText","okButtonProps","placeholder","LoadingOutlined","gutter","Select","OptGroup","TradePage","handleDeprecated","setHandleDeprecated","addMarketVisible","setAddMarketVisible","deprecatedMarkets","window","innerHeight","innerWidth","dimensions","setDimensions","changeOrderRef","handleResize","addEventListener","removeEventListener","componentProps","onChangeOrderRef","getComponent","newCustomMarkets","paddingLeft","MarketSelector","onDeleteCustomMarket","PlusCircleOutlined","extractBase","extractQuote","selectedMarket","proposedMarket","showSearch","optionFilterProp","listHeight","filterOption","input","option","toLowerCase","stopPropagation","nativeEvent","stopImmediatePropagation","DeprecatedMarketsPage","RenderNormal","flexWrap","RenderSmall","RenderSmaller","xs","sm","OpenOrdersPage","openOrdersAccountsConnected","marketInfosConnected","openOrdersAccountsByAddress","marketsAddr","marketsByAddress","getAllOpenOrders","marketAddr","loadBids","loadAsks","useAllOpenOrders","marketAddressesToNames","WalletBalancesTable","walletBalances","tokenAccountsConnected","allMarketsConnected","settlingFunds","setSettlingFunds","walletBalance","BalancesPage","mintInfosConnected","parsedAccount","mintInfo","additionalAmount","useWalletBalancesForAllMarkets","mintToTickers","openOrdersBalances","loadedOpenOrdersAccounts","baseMintInfo","baseFree","baseTotal","quoteMintInfo","quoteFree","quoteTotal","free","useAllOpenOrdersBalances","openOrdersFree","openOrdersTotal","WalletConnect","connect","UserOutlined","ConvertButton","ConvertForm","fromToken","setFromToken","toToken","setToToken","setSize","marketInfosbyName","tokenConvertMap","base","quote","maxWidth","minWidth","ConvertFormSubmit","fromAmount","setFromAmount","toAmount","setToAmount","isConverting","setIsConverting","isFromTokenBaseOfMarket","onConvert","sidedOrderbookAccount","decodedOrderbookData","parsedPrice","parsedSize","getPrice","expectedPrice","canConvert","coinBalance","availableBalance","SwapOutlined","ConvertPage","PreferencesContext","PreferencesProvider","autoSettleEnabled","setAutoSettleEnabled","marketList","autoSettle","autoApprove","Settings","usePreferences","CustomClusterEndpointDialog","testingConnection","onAddCustomEndpoint","customEndpoint","setCustomEndpoint","customEndpointName","setCustomEndpointName","appsAndTokens","apps","tags","AppSearch","searchMatches","setSearchMatches","searchValue","setSearchValue","handleClear","options","d","replace","allowClear","focussed","onSearch","filteredApps","app","searchString","lowerSearchStr","includes","tag","matchApp","onClear","open","onFocus","onBlur","notFoundContent","transition","dropdownStyle","dropdownMatchSelectWidth","suffixIcon","SearchOutlined","focus","LogoWrapper","EXTERNAL_LINKS","TopBar","addEndpointVisible","setAddEndpointVisible","setTestingConnection","location","useLocation","history","useHistory","searchFocussed","setSearchFocussed","handleClick","endpointInfoCustom","handler","handleError","getEpochInfo","newCustomEndpoints","src","logo","alt","mode","selectedKeys","pathname","borderBottom","Item","margin","SubMenu","onTitleClick","SettingOutlined","helpUrls","Footer","Layout","useBreakpoint","Grid","footerElements","link","CustomFooter","lg","elem","Header","Content","BasicLayout","useMintInput","tooltip","setAddress","ticker","validateStatus","hasFeedback","help","parsed","ListNewMarketPage","baseMintInput","quoteMintInput","lotSize","setLotSize","setTickSize","listedMarket","setListedMarket","labelCol","wrapperCol","layout","onFinish","initialValue","trim","colon","htmlType","AddRemoveTokenButtons","DEFAULT_PROGRAM_ID","NewPoolPage","poolName","setPoolName","setProgramId","initialSupply","setInitialSupply","valid","initialAssets","setInitialAssets","adminControlled","setAdminControlled","newPoolAddress","setNewPoolAddress","asset","assets","PoolTransactions","initializeSimplePool","poolStateSpace","poolMintDecimals","initialPoolMintSupply","assetMints","initialAssetQuantities","quantity","creator","creatorAssets","found","tokenAccount","additionalAccounts","isSigner","isWritable","poolAddress","signed","AssetInput","mintInput","setQuantity","change","parsedQuantity","old","MintName","showAddress","mintKey","PoolBasketDisplay","poolInfo","basket","BasketItem","quantities","mintAccountInfo","quantityDisplay","feeFormat","PoolInfoPanel","getPoolBasket","redeem","totalBasket","copyable","poolTokenMint","adminKey","feeRate","PoolCreateRedeemPanel","CreateRedeemTab","action","create","basketLoaded","findTokenAccount","preventDefault","execute","poolTokenAccount","assetAccounts","PoolBalancesPanel","WalletBalancesTab","PoolBalancesTab","BalanceItem","vaultAddress","balanceAccountInfo","PoolAdminPanel","PauseUnpauseTab","AddAssetTab","RemoveAssetTab","DepositTab","WithdrawTab","UpdateFeeTab","AdminControlledPoolInstructions","pause","unpause","useOnSubmitHandler","getAssociatedTokenAddress","vaultSigner","createAssociatedTokenAccount","addAsset","MintSelector","SubmitButton","removeAsset","MintInPoolSelector","walletTokenAccount","mintDecimals","transfer","source","destination","approveDelegate","setFeeRate","updateFee","makeTransaction","className","PoolPage","useParams","isPublicKey","poolAccountInfo","poolAccountLoaded","decodePoolState","program","mintAccountInfoLoaded","onBack","subTitle","isAdminControlledPool","Form","form","PoolListPage","setPoolAddress","Routes","basename","exact","component","App","fallback","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.811287b3.chunk.js","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodePoolRequest = exports.encodePoolRequest = exports.encodePoolState = exports.decodePoolState = exports.isPoolState = exports.PoolRequest = exports.POOL_REQUEST_TAG = exports.InitializePoolRequest = exports.PoolAction = exports.Basket = exports.PoolState = exports.POOL_STATE_TAG = exports.ParamDesc = exports.AssetInfo = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst borsh_1 = require(\"@project-serum/borsh\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nexports.AssetInfo = buffer_layout_1.struct([\n    borsh_1.publicKey('mint'),\n    borsh_1.publicKey('vaultAddress'),\n]);\nexports.ParamDesc = buffer_layout_1.struct([\n    borsh_1.publicKey('address'),\n    borsh_1.bool('writable'),\n]);\nexports.POOL_STATE_TAG = new bn_js_1.default('16a7874c7fb2301b', 'hex');\nexports.PoolState = borsh_1.tagged(exports.POOL_STATE_TAG, buffer_layout_1.struct([\n    borsh_1.publicKey('poolTokenMint'),\n    borsh_1.vec(exports.AssetInfo, 'assets'),\n    borsh_1.publicKey('vaultSigner'),\n    buffer_layout_1.u8('vaultSignerNonce'),\n    borsh_1.vec(exports.ParamDesc, 'accountParams'),\n    borsh_1.str('name'),\n    borsh_1.publicKey('serumFeeVault'),\n    borsh_1.publicKey('initializerFeeVault'),\n    buffer_layout_1.u32('feeRate'),\n    borsh_1.option(borsh_1.publicKey(), 'adminKey'),\n    borsh_1.vecU8('customState'),\n]));\nexports.Basket = buffer_layout_1.struct([borsh_1.vec(borsh_1.i64(), 'quantities')]);\nexports.PoolAction = borsh_1.rustEnum([\n    borsh_1.u64('create'),\n    borsh_1.u64('redeem'),\n    exports.Basket.replicate('swap'),\n]);\nexports.InitializePoolRequest = buffer_layout_1.struct([\n    buffer_layout_1.u8('vaultSignerNonce'),\n    buffer_layout_1.u8('assetsLength'),\n    borsh_1.str('poolName'),\n    buffer_layout_1.u32('feeRate'),\n    borsh_1.vecU8('customData'),\n]);\nexports.POOL_REQUEST_TAG = new bn_js_1.default('220a6cbdcd1cc4cf', 'hex');\nexports.PoolRequest = borsh_1.tagged(exports.POOL_REQUEST_TAG, borsh_1.rustEnum([\n    exports.InitializePoolRequest.replicate('initialize'),\n    exports.PoolAction.replicate('getBasket'),\n    exports.PoolAction.replicate('execute'),\n]));\nfunction isPoolState(data) {\n    return data.slice(0, 8).equals(exports.POOL_STATE_TAG.toBuffer('le'));\n}\nexports.isPoolState = isPoolState;\nfunction decodePoolState(data) {\n    return exports.PoolState.decode(data);\n}\nexports.decodePoolState = decodePoolState;\nfunction encodePoolState(state) {\n    const buffer = Buffer.alloc(1000);\n    const len = exports.PoolState.encode(state, buffer);\n    return buffer.slice(0, len);\n}\nexports.encodePoolState = encodePoolState;\nfunction encodePoolRequest(poolRequest) {\n    const buffer = Buffer.alloc(1000);\n    const len = exports.PoolRequest.encode(poolRequest, buffer);\n    return buffer.slice(0, len);\n}\nexports.encodePoolRequest = encodePoolRequest;\nfunction decodePoolRequest(data) {\n    return exports.PoolRequest.decode(data);\n}\nexports.decodePoolRequest = decodePoolRequest;\n//# sourceMappingURL=schema.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getPoolBasket = exports.loadPoolInfo = exports.isAdminControlledPool = exports.AdminControlledPoolInstructions = exports.PoolTransactions = exports.PoolInstructions = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst schema_1 = require(\"./schema\");\nconst simulate_transaction_1 = require(\"./simulate-transaction\");\nconst transactions_1 = require(\"./transactions\");\n__exportStar(require(\"./schema\"), exports);\nvar instructions_1 = require(\"./instructions\");\nObject.defineProperty(exports, \"PoolInstructions\", { enumerable: true, get: function () { return instructions_1.PoolInstructions; } });\nvar transactions_2 = require(\"./transactions\");\nObject.defineProperty(exports, \"PoolTransactions\", { enumerable: true, get: function () { return transactions_2.PoolTransactions; } });\nvar admin_controlled_pool_1 = require(\"./admin-controlled-pool\");\nObject.defineProperty(exports, \"AdminControlledPoolInstructions\", { enumerable: true, get: function () { return admin_controlled_pool_1.AdminControlledPoolInstructions; } });\nObject.defineProperty(exports, \"isAdminControlledPool\", { enumerable: true, get: function () { return admin_controlled_pool_1.isAdminControlledPool; } });\n/**\n * Load and decode pool state.\n *\n * Throws an error if the pool is not found or invalid.\n *\n * @param connection Solana connection to use to fetch the pool state.\n * @param address Pool state account address.\n */\nasync function loadPoolInfo(connection, address) {\n    const accountInfo = await connection.getAccountInfo(address);\n    if (accountInfo === null) {\n        throw new Error('Pool does not exist');\n    }\n    if (!schema_1.isPoolState(accountInfo.data)) {\n        throw new Error('Address is not a valid pool');\n    }\n    return {\n        address,\n        state: schema_1.decodePoolState(accountInfo.data),\n        program: accountInfo.owner,\n    };\n}\nexports.loadPoolInfo = loadPoolInfo;\n/**\n * Fetch the basket for a creation or redemption.\n *\n * For creations, the basket is the quantity of each asset that needs to be paid\n * to the pool to create the given quantity of pool tokens.\n *\n * For redemptions, the basket is the quantity of each asset that is received\n * from the pool in return for redeeming the given quantity of pool tokens.\n *\n * @param connection Connection to use to fetch data.\n * @param pool Pool to interact with.\n * @param action Creation, redemption, or swap.\n * @param payer Arbitrary Solana address. Must hold nonzero SOL and not be owned\n * by a program.\n */\nasync function getPoolBasket(connection, pool, action, payer = new web3_js_1.PublicKey('H6WR1VVoiwWz1GMSBALwUNNazvE7UhAZEjaYTTSwvV8D')) {\n    var _a;\n    const { transaction } = transactions_1.PoolTransactions.getBasket(pool, action, payer);\n    const { value } = await simulate_transaction_1.simulateTransaction(connection, transaction, (_a = connection.commitment) !== null && _a !== void 0 ? _a : 'single');\n    if (value.err) {\n        console.warn('Program logs:', value.logs);\n        throw new Error('Failed to get pool basket: ' + JSON.stringify(value.err));\n    }\n    if (value.logs) {\n        for (let i = value.logs.length - 1; i >= 0; --i) {\n            if (value.logs[i].startsWith('Program log: ')) {\n                const data = Buffer.from(value.logs[i].slice('Program log: '.length), 'base64');\n                return schema_1.Basket.decode(data);\n            }\n        }\n    }\n    throw new Error('Failed to find pool basket in logs');\n}\nexports.getPoolBasket = getPoolBasket;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PoolTransactions = void 0;\nconst instructions_1 = require(\"./instructions\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst serum_1 = require(\"@project-serum/serum\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst token_instructions_1 = require(\"@project-serum/serum/lib/token-instructions\");\nconst associated_token_1 = require(\"@project-serum/associated-token\");\n/**\n * High-level API for constructing transactions to interact with pools.\n *\n * For a lower-level API, see {@link PoolInstructions}.\n */\nclass PoolTransactions {\n    /**\n     * Transaction to initialize a simple pool.\n     *\n     * This will:\n     * - initialize a new pool token mint\n     * - initialize a pool token account for the creator and mint some tokens to it\n     * - initialize vault accounts for each of the pool assets\n     * - transfer assets from the pool creator to the vault accounts\n     * - initialize the pool\n     */\n    static async initializeSimplePool(params) {\n        const { connection, programId, poolStateSpace, poolMintDecimals = 6, poolName, assetMints, initialPoolMintSupply = new bn_js_1.default('1' + '0'.repeat(poolMintDecimals)), initialAssetQuantities, creator, creatorAssets, feeRate = 2500, additionalAccounts = [], } = params;\n        if (assetMints.length !== initialAssetQuantities.length) {\n            throw new Error('assetMints and initialAssetQuantities must have the same length');\n        }\n        if (assetMints.length !== creatorAssets.length) {\n            throw new Error('assetMints and creatorAssets must have the same length');\n        }\n        const poolStateAccount = new web3_js_1.Account();\n        const [vaultSigner, vaultSignerNonce] = await web3_js_1.PublicKey.findProgramAddress([poolStateAccount.publicKey.toBuffer()], programId);\n        const poolTokenMint = new web3_js_1.Account();\n        const creatorPoolTokenAddress = await associated_token_1.getAssociatedTokenAddress(creator, poolTokenMint.publicKey);\n        const vaultAddresses = await Promise.all(assetMints.map(mint => associated_token_1.getAssociatedTokenAddress(vaultSigner, mint)));\n        const serumFeeAddress = await associated_token_1.getAssociatedTokenAddress(instructions_1.SERUM_FEE_OWNER_ADDRESS, poolTokenMint.publicKey);\n        // Split into two transactions to stay under the size limit.\n        // Ideally all instructions that transfer tokens happen in the second transaction,\n        // so they get reverted if the pool creation fails.\n        const setup = {\n            transaction: new web3_js_1.Transaction(),\n            signers: [poolTokenMint],\n        };\n        const finalize = {\n            transaction: new web3_js_1.Transaction(),\n            signers: [poolStateAccount],\n        };\n        const mintAccountSpace = 82;\n        const mintAccountLamports = await connection.getMinimumBalanceForRentExemption(mintAccountSpace);\n        // Initialize pool token.\n        setup.transaction.add(web3_js_1.SystemProgram.createAccount({\n            fromPubkey: creator,\n            newAccountPubkey: poolTokenMint.publicKey,\n            space: mintAccountSpace,\n            lamports: mintAccountLamports,\n            programId: token_instructions_1.TOKEN_PROGRAM_ID,\n        }), serum_1.TokenInstructions.initializeMint({\n            mint: poolTokenMint.publicKey,\n            decimals: poolMintDecimals,\n            mintAuthority: creator,\n        }), await associated_token_1.createAssociatedTokenAccount(creator, creator, poolTokenMint.publicKey), await associated_token_1.createAssociatedTokenAccount(creator, instructions_1.SERUM_FEE_OWNER_ADDRESS, poolTokenMint.publicKey));\n        finalize.transaction.add(serum_1.TokenInstructions.mintTo({\n            mint: poolTokenMint.publicKey,\n            destination: creatorPoolTokenAddress,\n            amount: initialPoolMintSupply,\n            mintAuthority: creator,\n        }), serum_1.TokenInstructions.setAuthority({\n            target: poolTokenMint.publicKey,\n            currentAuthority: creator,\n            newAuthority: vaultSigner,\n            authorityType: 0,\n        }));\n        // Initialize vault accounts.\n        await Promise.all(assetMints.map(async (mint, index) => {\n            const vault = vaultAddresses[index];\n            setup.transaction.add(await associated_token_1.createAssociatedTokenAccount(creator, vaultSigner, mint));\n            finalize.transaction.add(serum_1.TokenInstructions.transfer({\n                source: creatorAssets[index],\n                destination: vault,\n                amount: initialAssetQuantities[index],\n                owner: creator,\n            }));\n        }));\n        // Initialize pool account.\n        finalize.transaction.add(web3_js_1.SystemProgram.createAccount({\n            fromPubkey: creator,\n            newAccountPubkey: poolStateAccount.publicKey,\n            space: poolStateSpace,\n            lamports: await connection.getMinimumBalanceForRentExemption(poolStateSpace),\n            programId: programId,\n        }), instructions_1.PoolInstructions.initialize(programId, poolStateAccount.publicKey, poolTokenMint.publicKey, poolName, vaultAddresses, vaultSigner, vaultSignerNonce, serumFeeAddress, creatorPoolTokenAddress, feeRate, additionalAccounts));\n        return [poolStateAccount.publicKey, [setup, finalize]];\n    }\n    /**\n     * Transaction to get a pool basket, for use with simulateTransaction.\n     *\n     * This is a wrapper around {@link PoolInstructions.getBasket} that handles\n     * initializing the retbuf account.\n     *\n     * @param pool Pool to interact with.\n     * @param action Creation, redemption, or swap.\n     * @param payer Payer for fees. Must have nonzero SOL but will not be charged\n     * if the transaction is only simulated.\n     */\n    static getBasket(pool, action, payer) {\n        const transaction = new web3_js_1.Transaction();\n        const retbufAccount = new web3_js_1.Account();\n        transaction.add(web3_js_1.SystemProgram.createAccount({\n            fromPubkey: payer,\n            newAccountPubkey: retbufAccount.publicKey,\n            lamports: 0,\n            space: 1024,\n            programId: instructions_1.RETBUF_PROGRAM_ID,\n        }));\n        transaction.add(instructions_1.PoolInstructions.getBasket(pool, action, retbufAccount.publicKey));\n        transaction.feePayer = payer;\n        return { transaction, signers: [retbufAccount] };\n    }\n    /**\n     * Transaction to execute a creation, redemption, or swap.\n     *\n     * This is a wrapper around {@link PoolInstructions.execute} that handles\n     * token delegation.\n     *\n     * The transaction will create a temporary account, delegate tokens to it,\n     * and use it in place of the actual owner, to limit the quantity of tokens\n     * that the pool can pull from the user's accounts.\n     *\n     * @param pool Pool to interact with.\n     * @param action Creation, redemption, or swap.\n     * @param user Token accounts to pull funds from or send funds to.\n     * @param expectedBasket Expected basket. Used to determine the quantity of\n     * tokens to approve.\n     */\n    static execute(pool, action, user, expectedBasket) {\n        if (expectedBasket.quantities.length !== pool.state.assets.length) {\n            throw new Error('expectedBasket must have the same number of components as the pool');\n        }\n        const transaction = new web3_js_1.Transaction();\n        const delegate = new web3_js_1.Account();\n        if ('create' in action) {\n            expectedBasket.quantities.forEach((amount, index) => {\n                transaction.add(serum_1.TokenInstructions.approve({\n                    owner: user.owner,\n                    source: user.assetAccounts[index],\n                    delegate: delegate.publicKey,\n                    amount,\n                }));\n            });\n        }\n        else if ('redeem' in action) {\n            transaction.add(serum_1.TokenInstructions.approve({\n                owner: user.owner,\n                source: user.poolTokenAccount,\n                delegate: delegate.publicKey,\n                amount: action.redeem,\n            }));\n            expectedBasket.quantities.forEach((amount, index) => {\n                if (amount.isNeg()) {\n                    transaction.add(serum_1.TokenInstructions.approve({\n                        owner: user.owner,\n                        source: user.assetAccounts[index],\n                        delegate: delegate.publicKey,\n                        amount: amount.abs(),\n                    }));\n                }\n            });\n        }\n        else if ('swap' in action) {\n            action.swap.quantities.forEach((amount, index) => {\n                transaction.add(serum_1.TokenInstructions.approve({\n                    owner: user.owner,\n                    source: user.assetAccounts[index],\n                    delegate: delegate.publicKey,\n                    amount,\n                }));\n            });\n        }\n        transaction.add(instructions_1.PoolInstructions.execute(pool, action, {\n            ...user,\n            owner: delegate.publicKey,\n        }));\n        return { transaction, signers: [delegate] };\n    }\n}\nexports.PoolTransactions = PoolTransactions;\n//# sourceMappingURL=transactions.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PoolInstructions = exports.SERUM_FEE_OWNER_ADDRESS = exports.RETBUF_PROGRAM_ID = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst schema_1 = require(\"./schema\");\nconst token_instructions_1 = require(\"@project-serum/serum/lib/token-instructions\");\nexports.RETBUF_PROGRAM_ID = new web3_js_1.PublicKey(\n// TODO: switch to shmem4EWT2sPdVGvTZCzXXRAURL9G5vpPxNwSeKhHUL once that exists on mainnet\n'BYVBQ71CYArTNbEpDnsPCjcoWkJL9181xvj52kfyFFHg');\nexports.SERUM_FEE_OWNER_ADDRESS = new web3_js_1.PublicKey('DeqYsmBd9BnrbgUwQjVH4sQWK71dEgE6eoZFw3Rp4ftE');\n/**\n * Low-level API for constructing and encoding pool instructions.\n *\n * For a higher-level API that handles initializing accounts and approving token\n * transfers, use {@link PoolTransactions}.\n */\nclass PoolInstructions {\n    /**\n     * Instruction to initialize a pool.\n     *\n     * @param poolProgram Program ID of the pool program.\n     * @param poolAccount Newly-created account to hold the pool state. Must be\n     * owned by the pool program.\n     * @param poolTokenMint spl-token mint address for the pool token.\n     * @param poolName User-friendly name for the pool.\n     * @param vaults spl-token account for each of the assets in the pool.\n     * @param vaultSigner Mint authority for `poolTokenMint` and owner of\n     * `poolTokenMint`.\n     * @param vaultSignerNonce Nonce used to generate `vaultSigner`.\n     * @param serumFeeAccount Pool token spl-token account owned by the serum fee owner.\n     * @param initializerFeeAccount Pool token spl-token account owned by the pool initializer.\n     * @param feeRate Fee rate for creations/redemptions times 10^6.\n     * @param additionalAccounts Any custom pool-specific accounts needed to\n     * initialize the pool.\n     * @param customData Any custom pool-specific data needed to initialize the pool\n     */\n    static initialize(poolProgram, poolAccount, poolTokenMint, poolName, vaults, vaultSigner, vaultSignerNonce, serumFeeAccount, initializerFeeAccount, feeRate, additionalAccounts, customData) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: poolAccount, isSigner: false, isWritable: true },\n                { pubkey: poolTokenMint, isSigner: false, isWritable: true },\n                ...vaults.map(vaultAddress => ({\n                    pubkey: vaultAddress,\n                    isSigner: false,\n                    isWritable: true,\n                })),\n                { pubkey: vaultSigner, isSigner: false, isWritable: false },\n                { pubkey: serumFeeAccount, isSigner: false, isWritable: false },\n                { pubkey: initializerFeeAccount, isSigner: false, isWritable: false },\n                {\n                    pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                ...(additionalAccounts !== null && additionalAccounts !== void 0 ? additionalAccounts : []),\n            ],\n            programId: poolProgram,\n            data: schema_1.encodePoolRequest({\n                initialize: {\n                    vaultSignerNonce,\n                    assetsLength: vaults.length,\n                    poolName,\n                    feeRate,\n                    customData: customData !== null && customData !== void 0 ? customData : Buffer.alloc(0),\n                },\n            }),\n        });\n    }\n    /**\n     * Instruction to get the expected basket for a {@link PoolAction}.\n     *\n     * For creations, the basket is the quantity of each asset\n     * that need to be sent to the pool to process the creation.  For redemptions\n     * and swaps, the basket is the quantity of each asset that will be\n     * transferred from the pool to the user after the redemption or swap.\n     *\n     * Negative quantities will cause tokens to be transferred in the opposite\n     * direction.\n     *\n     * @param pool\n     * @param action Creation, redemption, or swap.\n     * @param retbufAccount Account to which the basket will be written. Must be\n     * owned by the retbuf program.\n     */\n    static getBasket(pool, action, retbufAccount) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: pool.address, isSigner: false, isWritable: false },\n                {\n                    pubkey: pool.state.poolTokenMint,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                ...pool.state.assets.map(assetInfo => ({\n                    pubkey: assetInfo.vaultAddress,\n                    isSigner: false,\n                    isWritable: false,\n                })),\n                { pubkey: pool.state.vaultSigner, isSigner: false, isWritable: false },\n                { pubkey: retbufAccount, isSigner: false, isWritable: true },\n                { pubkey: exports.RETBUF_PROGRAM_ID, isSigner: false, isWritable: false },\n                ...pool.state.accountParams.map(paramInfo => ({\n                    pubkey: paramInfo.address,\n                    isSigner: false,\n                    isWritable: false,\n                })),\n            ],\n            programId: pool.program,\n            data: schema_1.encodePoolRequest({ getBasket: action }),\n        });\n    }\n    /**\n     * Instruction to execute a creation, redemption, or swap.\n     *\n     * @param pool\n     * @param action Creation, redemption, or swap.\n     * @param user Token accounts to pull funds from or send funds to.\n     */\n    static execute(pool, action, user) {\n        var _a;\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: pool.address, isSigner: false, isWritable: true },\n                { pubkey: pool.state.poolTokenMint, isSigner: false, isWritable: true },\n                ...pool.state.assets.map(assetInfo => ({\n                    pubkey: assetInfo.vaultAddress,\n                    isSigner: false,\n                    isWritable: true,\n                })),\n                { pubkey: pool.state.vaultSigner, isSigner: false, isWritable: false },\n                { pubkey: user.poolTokenAccount, isSigner: false, isWritable: true },\n                ...user.assetAccounts.map(address => ({\n                    pubkey: address,\n                    isSigner: false,\n                    isWritable: true,\n                })),\n                { pubkey: user.owner, isSigner: true, isWritable: false },\n                {\n                    pubkey: pool.state.serumFeeVault,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: pool.state.initializerFeeVault,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                {\n                    pubkey: (_a = user.referrer) !== null && _a !== void 0 ? _a : pool.state.serumFeeVault,\n                    isSigner: false,\n                    isWritable: true,\n                },\n                { pubkey: token_instructions_1.TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n                ...pool.state.accountParams.map(paramInfo => ({\n                    pubkey: paramInfo.address,\n                    isSigner: false,\n                    isWritable: paramInfo.writable,\n                })),\n            ],\n            programId: pool.program,\n            data: schema_1.encodePoolRequest({ execute: action }),\n        });\n    }\n}\nexports.PoolInstructions = PoolInstructions;\n//# sourceMappingURL=instructions.js.map","module.exports = __webpack_public_path__ + \"static/media/logo.49174c73.svg\";","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.simulateTransaction = void 0;\n/** Copy of Connection.simulateTransaction that takes a commitment parameter. */\nasync function simulateTransaction(connection, transaction, commitment) {\n    // @ts-ignore\n    transaction.recentBlockhash = await connection._recentBlockhash(\n    // @ts-ignore\n    connection._disableBlockhashCaching);\n    const signData = transaction.serializeMessage();\n    // @ts-ignore\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config = { encoding: 'base64', commitment };\n    const args = [encodedTransaction, config];\n    // @ts-ignore\n    const res = await connection._rpcRequest('simulateTransaction', args);\n    if (res.error) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n    }\n    return res.result;\n}\nexports.simulateTransaction = simulateTransaction;\n//# sourceMappingURL=simulate-transaction.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isAdminControlledPool = exports.ADMIN_CONTROLLED_POOL_TAG = exports.AdminControlledPoolInstructions = exports.AdminRequest = exports.ADMIN_INSTRUCTION_TAG = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst borsh_1 = require(\"@project-serum/borsh\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst token_instructions_1 = require(\"@project-serum/serum/lib/token-instructions\");\nexports.ADMIN_INSTRUCTION_TAG = new bn_js_1.default('31e6452361a17878', 'hex');\nexports.AdminRequest = borsh_1.tagged(exports.ADMIN_INSTRUCTION_TAG, borsh_1.rustEnum([\n    buffer_layout_1.struct([], 'pause'),\n    buffer_layout_1.struct([], 'unpause'),\n    buffer_layout_1.struct([borsh_1.u64('amount')], 'approveDelegate'),\n    buffer_layout_1.struct([], 'addAsset'),\n    buffer_layout_1.struct([], 'removeAsset'),\n    buffer_layout_1.struct([buffer_layout_1.u32('feeRate')], 'updateFee'),\n    buffer_layout_1.struct([], 'updateAdmin'),\n]));\nfunction encodeAdminRequest(request) {\n    const buffer = Buffer.alloc(1000);\n    const len = exports.AdminRequest.encode(request, buffer);\n    return buffer.slice(0, len);\n}\nfunction makeAdminInstruction(pool, request, keys) {\n    if (!pool.state.adminKey) {\n        throw new Error('Pool does not have admin');\n    }\n    return new web3_js_1.TransactionInstruction({\n        keys: [\n            { pubkey: pool.address, isSigner: false, isWritable: true },\n            { pubkey: pool.state.adminKey, isSigner: true, isWritable: false },\n            ...(keys !== null && keys !== void 0 ? keys : []),\n        ],\n        programId: pool.program,\n        data: encodeAdminRequest(request),\n    });\n}\n/** Instructions for interacting with the example admin-controlled pool. */\nclass AdminControlledPoolInstructions {\n    /** Pauses creations and redemptions for the pool. */\n    static pause(pool) {\n        return makeAdminInstruction(pool, { pause: {} });\n    }\n    /**\n     * Resumes creations and redemptions for the pool.\n     *\n     * Pool assets must not have any outstanding delegates.\n     */\n    static unpause(pool) {\n        return makeAdminInstruction(pool, { unpause: {} }, pool.state.assets.map(asset => ({\n            pubkey: asset.vaultAddress,\n            isSigner: false,\n            isWritable: false,\n        })));\n    }\n    /** Approves an account to spend tokens on behalf of the pool. */\n    static approveDelegate(pool, vault, delegate, amount) {\n        return makeAdminInstruction(pool, { approveDelegate: { amount } }, [\n            { pubkey: vault, isSigner: false, isWritable: true },\n            { pubkey: delegate, isSigner: false, isWritable: false },\n            { pubkey: pool.state.vaultSigner, isSigner: false, isWritable: false },\n            { pubkey: token_instructions_1.TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n        ]);\n    }\n    /** Adds a new asset to the pool. */\n    static addAsset(pool, vault) {\n        return makeAdminInstruction(pool, { addAsset: {} }, [\n            { pubkey: vault, isSigner: false, isWritable: false },\n        ]);\n    }\n    /**\n     * Removes an asset from the pool.\n     *\n     * The pool must not currently own any tokens of the asset to be removed.\n     */\n    static removeAsset(pool, vault) {\n        return makeAdminInstruction(pool, { removeAsset: {} }, [\n            { pubkey: vault, isSigner: false, isWritable: false },\n        ]);\n    }\n    /** Modifies the fee rate for the pool. */\n    static updateFee(pool, feeRate) {\n        return makeAdminInstruction(pool, { updateFee: { feeRate } });\n    }\n    /** Transfers admin permission for the pool to a new account. */\n    static updateAdmin(pool, newAdmin) {\n        return makeAdminInstruction(pool, { updateAdmin: {} }, [\n            { pubkey: newAdmin, isSigner: true, isWritable: false },\n        ]);\n    }\n}\nexports.AdminControlledPoolInstructions = AdminControlledPoolInstructions;\nexports.ADMIN_CONTROLLED_POOL_TAG = new bn_js_1.default('4a3ab7f76f93f94e', 'hex');\nfunction isAdminControlledPool(pool) {\n    return pool.state.customState\n        .slice(0, 8)\n        .equals(exports.ADMIN_CONTROLLED_POOL_TAG.toArrayLike(Buffer, 'le', 8));\n}\nexports.isAdminControlledPool = isAdminControlledPool;\n//# sourceMappingURL=admin-controlled-pool.js.map","import { useCallback, useEffect, useState } from 'react';\nimport { PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\n\nexport function isValidPublicKey(key) {\n  if (!key) {\n    return false;\n  }\n  try {\n    new PublicKey(key);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport async function sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport const percentFormat = new Intl.NumberFormat(undefined, {\n  style: 'percent',\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n});\n\nexport function floorToDecimal(\n  value: number,\n  decimals: number | undefined | null,\n) {\n  return decimals ? Math.floor(value * 10 ** decimals) / 10 ** decimals : value;\n}\n\nexport function roundToDecimal(\n  value: number,\n  decimals: number | undefined | null,\n) {\n  return decimals ? Math.round(value * 10 ** decimals) / 10 ** decimals : value;\n}\n\nexport function getDecimalCount(value): number {\n  if (!isNaN(value) && Math.floor(value) !== value)\n    return value.toString().split('.')[1].length || 0;\n  return 0;\n}\n\nexport function divideBnToNumber(numerator: BN, denominator: BN): number {\n  const quotient = numerator.div(denominator).toNumber();\n  const rem = numerator.umod(denominator);\n  const gcd = rem.gcd(denominator);\n  return quotient + rem.div(gcd).toNumber() / denominator.div(gcd).toNumber();\n}\n\nexport function getTokenMultiplierFromDecimals(decimals: number): BN {\n  return new BN(10).pow(new BN(decimals));\n}\n\nconst localStorageListeners = {};\n\nexport function useLocalStorageStringState(\n  key: string,\n  defaultState: string | null = null,\n): [string | null, (newState: string | null) => void] {\n  const state = localStorage.getItem(key) || defaultState;\n\n  const [, notify] = useState(key + '\\n' + state);\n\n  useEffect(() => {\n    if (!localStorageListeners[key]) {\n      localStorageListeners[key] = [];\n    }\n    localStorageListeners[key].push(notify);\n    return () => {\n      localStorageListeners[key] = localStorageListeners[key].filter(\n        (listener) => listener !== notify,\n      );\n      if (localStorageListeners[key].length === 0) {\n        delete localStorageListeners[key];\n      }\n    };\n  }, [key]);\n\n  const setState = useCallback<(newState: string | null) => void>(\n    (newState) => {\n      const changed = state !== newState;\n      if (!changed) {\n        return;\n      }\n\n      if (newState === null) {\n        localStorage.removeItem(key);\n      } else {\n        localStorage.setItem(key, newState);\n      }\n      localStorageListeners[key].forEach((listener) =>\n        listener(key + '\\n' + newState),\n      );\n    },\n    [state, key],\n  );\n\n  return [state, setState];\n}\n\nexport function useLocalStorageState<T = any>(\n  key: string,\n  defaultState: T | null = null,\n): [T, (newState: T) => void] {\n  let [stringState, setStringState] = useLocalStorageStringState(\n    key,\n    JSON.stringify(defaultState),\n  );\n  return [\n    stringState && JSON.parse(stringState),\n    (newState) => setStringState(JSON.stringify(newState)),\n  ];\n}\n\nexport function useEffectAfterTimeout(effect, timeout) {\n  useEffect(() => {\n    const handle = setTimeout(effect, timeout);\n    return () => clearTimeout(handle);\n  });\n}\n\nexport function useListener(emitter, eventName) {\n  const [, forceUpdate] = useState(0);\n  useEffect(() => {\n    const listener = () => forceUpdate((i) => i + 1);\n    emitter.on(eventName, listener);\n    return () => emitter.removeListener(eventName, listener);\n  }, [emitter, eventName]);\n}\n\nexport function abbreviateAddress(address: PublicKey, size = 4) {\n  const base58 = address.toBase58();\n  return base58.slice(0, size) + '…' + base58.slice(-size);\n}\n\nexport function isEqual(obj1, obj2, keys) {\n  if (!keys && Object.keys(obj1).length !== Object.keys(obj2).length) {\n    return false;\n  }\n  keys = keys || Object.keys(obj1);\n  for (const k of keys) {\n    if (obj1[k] !== obj2[k]) {\n      // shallow comparison\n      return false;\n    }\n  }\n  return true;\n}\n","import { useEffect, useReducer } from 'react';\n\nimport assert from 'assert';\n\nconst pageLoadTime = new Date();\n\nconst globalCache: Map<any, any> = new Map();\n\nclass FetchLoopListener<T = any> {\n  cacheKey: any;\n  fn: () => Promise<T>;\n  refreshInterval: number;\n  refreshIntervalOnError: number | null;\n  callback: () => void;\n  cacheNullValues: Boolean = true;\n\n  constructor(\n    cacheKey: any,\n    fn: () => Promise<T>,\n    refreshInterval: number,\n    refreshIntervalOnError: number | null,\n    callback: () => void,\n    cacheNullValues: Boolean,\n  ) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.refreshInterval = refreshInterval;\n    this.refreshIntervalOnError = refreshIntervalOnError;\n    this.callback = callback;\n    this.cacheNullValues = cacheNullValues;\n  }\n}\n\nclass FetchLoopInternal<T = any> {\n  cacheKey: any;\n  fn: () => Promise<T>;\n  timeoutId: null | any;\n  listeners: Set<FetchLoopListener<T>>;\n  errors: number;\n  cacheNullValues: Boolean = true;\n\n  constructor(cacheKey: any, fn: () => Promise<T>, cacheNullValues: Boolean) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.timeoutId = null;\n    this.listeners = new Set();\n    this.errors = 0;\n    this.cacheNullValues = cacheNullValues;\n  }\n\n  get refreshInterval(): number {\n    return Math.min(\n      ...[...this.listeners].map((listener) => listener.refreshInterval),\n    );\n  }\n\n  get refreshIntervalOnError(): number | null {\n    const refreshIntervalsOnError: number[] = [...this.listeners]\n      .map((listener) => listener.refreshIntervalOnError)\n      .filter((x): x is number => x !== null);\n    if (refreshIntervalsOnError.length === 0) {\n      return null;\n    }\n    return Math.min(...refreshIntervalsOnError);\n  }\n\n  get stopped(): boolean {\n    return this.listeners.size === 0;\n  }\n\n  addListener(listener: FetchLoopListener<T>): void {\n    const previousRefreshInterval = this.refreshInterval;\n    this.listeners.add(listener);\n    if (this.refreshInterval < previousRefreshInterval) {\n      this.refresh();\n    }\n  }\n\n  removeListener(listener: FetchLoopListener<T>): void {\n    assert(this.listeners.delete(listener));\n    if (this.stopped) {\n      if (this.timeoutId) {\n        clearTimeout(this.timeoutId);\n        this.timeoutId = null;\n      }\n    }\n  }\n\n  notifyListeners(): void {\n    this.listeners.forEach((listener) => listener.callback());\n  }\n\n  refresh = async () => {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    }\n    if (this.stopped) {\n      return;\n    }\n\n    let errored = false;\n    try {\n      const data = await this.fn();\n      if (!this.cacheNullValues && data === null) {\n        console.log(`Not caching null value for ${this.cacheKey}`);\n        // cached data has not changed so no need to re-render\n        this.errors = 0;\n        return data;\n      } else {\n        globalCache.set(this.cacheKey, data);\n        this.errors = 0;\n        this.notifyListeners();\n        return data;\n      }\n    } catch (error) {\n      ++this.errors;\n      console.warn(error);\n      errored = true;\n    } finally {\n      if (!this.timeoutId && !this.stopped) {\n        let waitTime = this.refreshInterval;\n        if (\n          errored &&\n          this.refreshIntervalOnError &&\n          this.refreshIntervalOnError > 0\n        ) {\n          waitTime = this.refreshIntervalOnError;\n        }\n\n        // Back off on errors.\n        if (this.errors > 0) {\n          waitTime = Math.min(1000 * 2 ** (this.errors - 1), 60000);\n        }\n\n        // Don't do any refreshing for the first five seconds, to make way for other things to load.\n        const timeSincePageLoad = +new Date() - +pageLoadTime;\n        if (timeSincePageLoad < 5000) {\n          waitTime += 5000 - timeSincePageLoad / 2;\n        }\n\n        // Refresh background pages slowly.\n        if (document.visibilityState === 'hidden') {\n          waitTime = 60000;\n        } else if (!document.hasFocus()) {\n          waitTime *= 1.5;\n        }\n\n        // Add jitter so we don't send all requests at the same time.\n        waitTime *= 0.8 + 0.4 * Math.random();\n\n        this.timeoutId = setTimeout(this.refresh, waitTime);\n      }\n    }\n  };\n}\n\nclass FetchLoops {\n  loops = new Map();\n\n  addListener<T>(listener: FetchLoopListener<T>) {\n    if (!this.loops.has(listener.cacheKey)) {\n      this.loops.set(\n        listener.cacheKey,\n        new FetchLoopInternal<T>(\n          listener.cacheKey,\n          listener.fn,\n          listener.cacheNullValues,\n        ),\n      );\n    }\n    this.loops.get(listener.cacheKey).addListener(listener);\n  }\n\n  removeListener<T>(listener: FetchLoopListener<T>) {\n    const loop = this.loops.get(listener.cacheKey);\n    loop.removeListener(listener);\n    if (loop.stopped) {\n      this.loops.delete(listener.cacheKey);\n      globalCache.delete(listener.cacheKey);\n    }\n  }\n\n  refresh(cacheKey) {\n    if (this.loops.has(cacheKey)) {\n      this.loops.get(cacheKey).refresh();\n    }\n  }\n\n  refreshAll() {\n    return Promise.all([...this.loops.values()].map((loop) => loop.refresh()));\n  }\n}\nconst globalLoops = new FetchLoops();\n\nexport function useAsyncData<T = any>(\n  asyncFn: () => Promise<T>,\n  cacheKey: any,\n  { refreshInterval = 60000, refreshIntervalOnError = null } = {},\n  cacheNullValues: Boolean = true,\n): [null | undefined | T, boolean] {\n  const [, rerender] = useReducer((i) => i + 1, 0);\n\n  useEffect(() => {\n    if (!cacheKey) {\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      return () => {};\n    }\n    const listener = new FetchLoopListener<T>(\n      cacheKey,\n      asyncFn,\n      refreshInterval,\n      refreshIntervalOnError,\n      rerender,\n      cacheNullValues,\n    );\n    globalLoops.addListener(listener);\n    return () => globalLoops.removeListener(listener);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey, refreshInterval]);\n\n  if (!cacheKey) {\n    return [null, false];\n  }\n\n  const loaded = globalCache.has(cacheKey);\n  const data = loaded ? globalCache.get(cacheKey) : undefined;\n  return [data, loaded];\n}\n\nexport function refreshCache(cacheKey: any, clearCache = false): void {\n  if (clearCache) {\n    globalCache.delete(cacheKey);\n  }\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.refresh();\n    if (clearCache) {\n      loop.notifyListeners();\n    }\n  }\n}\n\nexport function refreshAllCaches(): void {\n  for (const loop of globalLoops.loops.values()) {\n    loop.refresh();\n  }\n}\n\nexport function setCache(\n  cacheKey: any,\n  value: any,\n  { initializeOnly = false } = {},\n): void {\n  if (initializeOnly && globalCache.has(cacheKey)) {\n    return;\n  }\n  globalCache.set(cacheKey, value);\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.notifyListeners();\n  }\n}\n","import { useLocalStorageState } from './utils';\nimport { Account, AccountInfo, Connection, PublicKey } from '@solana/web3.js';\nimport React, { useContext, useEffect, useMemo, useRef } from 'react';\nimport { setCache, useAsyncData } from './fetch-loop';\nimport tuple from 'immutable-tuple';\nimport { ConnectionContextValues, EndpointInfo } from './types';\n\nexport const ENDPOINTS: EndpointInfo[] = [\n  {\n    name: 'mainnet-beta',\n    endpoint: 'https://solana-api.projectserum.com',\n    custom: false,\n  },\n  { name: 'localnet', endpoint: 'http://127.0.0.1:8899', custom: false },\n];\n\nconst accountListenerCount = new Map();\n\nconst ConnectionContext: React.Context<null | ConnectionContextValues> = React.createContext<null | ConnectionContextValues>(\n  null,\n);\n\nexport function ConnectionProvider({ children }) {\n  const [endpoint, setEndpoint] = useLocalStorageState<string>(\n    'connectionEndpts',\n    ENDPOINTS[0].endpoint,\n  );\n  const [customEndpoints, setCustomEndpoints] = useLocalStorageState<\n    EndpointInfo[]\n  >('customConnectionEndpoints', []);\n  const availableEndpoints = ENDPOINTS.concat(customEndpoints);\n\n  const connection = useMemo(() => new Connection(endpoint, 'recent'), [\n    endpoint,\n  ]);\n  const sendConnection = useMemo(() => new Connection(endpoint, 'recent'), [\n    endpoint,\n  ]);\n\n  // The websocket library solana/web3.js uses closes its websocket connection when the subscription list\n  // is empty after opening its first time, preventing subsequent subscriptions from receiving responses.\n  // This is a hack to prevent the list from every getting empty\n  useEffect(() => {\n    const id = connection.onAccountChange(new Account().publicKey, () => {});\n    return () => {\n      connection.removeAccountChangeListener(id);\n    };\n  }, [connection]);\n\n  useEffect(() => {\n    const id = connection.onSlotChange(() => null);\n    return () => {\n      connection.removeSlotChangeListener(id);\n    };\n  }, [connection]);\n\n  useEffect(() => {\n    const id = sendConnection.onAccountChange(\n      new Account().publicKey,\n      () => {},\n    );\n    return () => {\n      sendConnection.removeAccountChangeListener(id);\n    };\n  }, [sendConnection]);\n\n  useEffect(() => {\n    const id = sendConnection.onSlotChange(() => null);\n    return () => {\n      sendConnection.removeSlotChangeListener(id);\n    };\n  }, [sendConnection]);\n\n  return (\n    <ConnectionContext.Provider\n      value={{\n        endpoint,\n        setEndpoint,\n        connection,\n        sendConnection,\n        availableEndpoints,\n        setCustomEndpoints,\n      }}\n    >\n      {children}\n    </ConnectionContext.Provider>\n  );\n}\n\nexport function useConnection() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context');\n  }\n  return context.connection;\n}\n\nexport function useSendConnection() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context');\n  }\n  return context.sendConnection;\n}\n\nexport function useConnectionConfig() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context');\n  }\n  return {\n    endpoint: context.endpoint,\n    endpointInfo: context.availableEndpoints.find(\n      (info) => info.endpoint === context.endpoint,\n    ),\n    setEndpoint: context.setEndpoint,\n    availableEndpoints: context.availableEndpoints,\n    setCustomEndpoints: context.setCustomEndpoints,\n  };\n}\n\nexport function useAccountInfo(\n  publicKey: PublicKey | undefined | null,\n): [AccountInfo<Buffer> | null | undefined, boolean] {\n  const connection = useConnection();\n  const cacheKey = tuple(connection, publicKey?.toBase58());\n  const [accountInfo, loaded] = useAsyncData<AccountInfo<Buffer> | null>(\n    async () => (publicKey ? connection.getAccountInfo(publicKey) : null),\n    cacheKey,\n    { refreshInterval: 60_000 },\n  );\n  useEffect(() => {\n    if (!publicKey) {\n      return;\n    }\n    if (accountListenerCount.has(cacheKey)) {\n      let currentItem = accountListenerCount.get(cacheKey);\n      ++currentItem.count;\n    } else {\n      let previousInfo: AccountInfo<Buffer> | null = null;\n      const subscriptionId = connection.onAccountChange(publicKey, (info) => {\n        if (\n          !previousInfo ||\n          !previousInfo.data.equals(info.data) ||\n          previousInfo.lamports !== info.lamports\n        ) {\n          previousInfo = info;\n          setCache(cacheKey, info);\n        }\n      });\n      accountListenerCount.set(cacheKey, { count: 1, subscriptionId });\n    }\n    return () => {\n      let currentItem = accountListenerCount.get(cacheKey);\n      let nextCount = currentItem.count - 1;\n      if (nextCount <= 0) {\n        connection.removeAccountChangeListener(currentItem.subscriptionId);\n        accountListenerCount.delete(cacheKey);\n      } else {\n        --currentItem.count;\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey]);\n  const previousInfoRef = useRef<AccountInfo<Buffer> | null | undefined>(null);\n  if (\n    !accountInfo ||\n    !previousInfoRef.current ||\n    !previousInfoRef.current.data.equals(accountInfo.data) ||\n    previousInfoRef.current.lamports !== accountInfo.lamports\n  ) {\n    previousInfoRef.current = accountInfo;\n  }\n  return [previousInfoRef.current, loaded];\n}\n\nexport function useAccountData(publicKey) {\n  const [accountInfo] = useAccountInfo(publicKey);\n  return accountInfo && accountInfo.data;\n}\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nexport default function Link({ external = false, ...props }) {\n  let { to, children, ...rest } = props;\n  if (external) {\n    return (\n      <a href={to} target=\"_blank\" rel=\"noopener noreferrer\" {...rest}>\n        {children}\n      </a>\n    );\n  }\n  return (\n    <RouterLink to={to} {...rest}>\n      {children}\n    </RouterLink>\n  );\n}\n","import React from 'react';\nimport { notification } from 'antd';\nimport Link from '../components/Link';\n\nexport function notify({\n  message,\n  description,\n  txid,\n  type = 'info',\n  placement = 'bottomLeft',\n}: {\n  message: string;\n  description?: string | JSX.Element;\n  txid?: string;\n  type?: string;\n  placement?: string;\n}) {\n  if (txid) {\n    description = (\n      <Link\n        external\n        to={'https://explorer.solana.com/tx/' + txid}\n        style={{ color: '#0000ff' }}\n      >\n        View transaction {txid.slice(0, 8)}...{txid.slice(txid.length - 8)}\n      </Link>\n    );\n  }\n  notification[type]({\n    message: <span style={{ color: 'black' }}>{message}</span>,\n    description: (\n      <span style={{ color: 'black', opacity: 0.5 }}>{description}</span>\n    ),\n    placement,\n    style: {\n      backgroundColor: 'white',\n    },\n  });\n}\n","import React, { useContext, useEffect, useMemo, useState } from 'react';\nimport Wallet from '@project-serum/sol-wallet-adapter';\nimport { notify } from './notifications';\nimport { useConnectionConfig } from './connection';\nimport { useLocalStorageState } from './utils';\nimport { WalletContextValues } from './types';\n\nexport const WALLET_PROVIDERS = [\n  { name: 'sollet.io', url: 'https://www.sollet.io' },\n];\n\nconst WalletContext = React.createContext<null | WalletContextValues>(null);\n\nexport function WalletProvider({ children }) {\n  const { endpoint } = useConnectionConfig();\n\n  const [savedProviderUrl, setProviderUrl] = useLocalStorageState(\n    'walletProvider',\n    'https://www.sollet.io',\n  );\n  let providerUrl;\n  if (!savedProviderUrl) {\n    providerUrl = 'https://www.sollet.io';\n  } else {\n    providerUrl = savedProviderUrl;\n  }\n\n  const wallet = useMemo(() => new Wallet(providerUrl, endpoint), [\n    providerUrl,\n    endpoint,\n  ]);\n\n  const [connected, setConnected] = useState(false);\n\n  useEffect(() => {\n    console.log('trying to connect');\n    wallet.on('connect', () => {\n      console.log('connected');\n      setConnected(true);\n      let walletPublicKey = wallet.publicKey.toBase58();\n      let keyToDisplay =\n        walletPublicKey.length > 20\n          ? `${walletPublicKey.substring(0, 7)}.....${walletPublicKey.substring(\n              walletPublicKey.length - 7,\n              walletPublicKey.length,\n            )}`\n          : walletPublicKey;\n      notify({\n        message: 'Wallet update',\n        description: 'Connected to wallet ' + keyToDisplay,\n      });\n    });\n    wallet.on('disconnect', () => {\n      setConnected(false);\n      notify({\n        message: 'Wallet update',\n        description: 'Disconnected from wallet',\n      });\n    });\n    return () => {\n      wallet.disconnect();\n      setConnected(false);\n    };\n  }, [wallet]);\n\n  return (\n    <WalletContext.Provider\n      value={{\n        wallet,\n        connected,\n        providerUrl,\n        setProviderUrl,\n        providerName:\n          WALLET_PROVIDERS.find(({ url }) => url === providerUrl)?.name ??\n          providerUrl,\n      }}\n    >\n      {children}\n    </WalletContext.Provider>\n  );\n}\n\nexport function useWallet() {\n  const context = useContext(WalletContext);\n  if (!context) {\n    throw new Error('Missing wallet context');\n  }\n  return {\n    connected: context.connected,\n    wallet: context.wallet,\n    providerUrl: context.providerUrl,\n    setProvider: context.setProviderUrl,\n    providerName: context.providerName,\n  };\n}\n","import { notify } from './notifications';\nimport { getDecimalCount, sleep } from './utils';\nimport { getSelectedTokenAccountForMint } from './markets';\nimport {\n  Account,\n  AccountInfo,\n  Commitment,\n  Connection,\n  PublicKey,\n  RpcResponseAndContext,\n  SimulatedTransactionResponse,\n  SystemProgram,\n  Transaction,\n  TransactionSignature,\n} from '@solana/web3.js';\nimport BN from 'bn.js';\nimport {\n  DexInstructions,\n  Market,\n  OpenOrders,\n  TOKEN_MINTS,\n  TokenInstructions,\n} from '@project-serum/serum';\nimport Wallet from '@project-serum/sol-wallet-adapter';\nimport { SelectedTokenAccounts, TokenAccount } from './types';\nimport { Order } from '@project-serum/serum/lib/market';\nimport { Buffer } from 'buffer';\nimport assert from 'assert';\nimport { struct } from 'superstruct';\n\nexport async function createTokenAccountTransaction({\n  connection,\n  wallet,\n  mintPublicKey,\n}: {\n  connection: Connection;\n  wallet: Wallet;\n  mintPublicKey: PublicKey;\n}): Promise<{\n  transaction: Transaction;\n  signer: Account;\n  newAccountPubkey: PublicKey;\n}> {\n  const newAccount = new Account();\n  const transaction = new Transaction();\n  const instruction = SystemProgram.createAccount({\n    fromPubkey: wallet.publicKey,\n    newAccountPubkey: newAccount.publicKey,\n    lamports: await connection.getMinimumBalanceForRentExemption(165),\n    space: 165,\n    programId: TokenInstructions.TOKEN_PROGRAM_ID,\n  });\n  transaction.add(instruction);\n  transaction.add(\n    TokenInstructions.initializeAccount({\n      account: newAccount.publicKey,\n      mint: mintPublicKey,\n      owner: wallet.publicKey,\n    }),\n  );\n  return {\n    transaction,\n    signer: newAccount,\n    newAccountPubkey: newAccount.publicKey,\n  };\n}\n\nexport async function settleFunds({\n  market,\n  openOrders,\n  connection,\n  wallet,\n  baseCurrencyAccount,\n  quoteCurrencyAccount,\n}: {\n  market: Market;\n  openOrders: OpenOrders;\n  connection: Connection;\n  wallet: Wallet;\n  baseCurrencyAccount: TokenAccount;\n  quoteCurrencyAccount: TokenAccount;\n}): Promise<string | undefined> {\n  if (\n    !market ||\n    !wallet ||\n    !connection ||\n    !openOrders ||\n    (!baseCurrencyAccount && !quoteCurrencyAccount)\n  ) {\n    notify({ message: 'Not connected' });\n    return;\n  }\n\n  let createAccountTransaction: Transaction | undefined;\n  let createAccountSigner: Account | undefined;\n  let baseCurrencyAccountPubkey = baseCurrencyAccount?.pubkey;\n  let quoteCurrencyAccountPubkey = quoteCurrencyAccount?.pubkey;\n\n  if (!baseCurrencyAccountPubkey) {\n    const result = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.baseMintAddress,\n    });\n    baseCurrencyAccountPubkey = result?.newAccountPubkey;\n    createAccountTransaction = result?.transaction;\n    createAccountSigner = result?.signer;\n  }\n  if (!quoteCurrencyAccountPubkey) {\n    const result = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.quoteMintAddress,\n    });\n    quoteCurrencyAccountPubkey = result?.newAccountPubkey;\n    createAccountTransaction = result?.transaction;\n    createAccountSigner = result?.signer;\n  }\n  let referrerQuoteWallet: PublicKey | null = null;\n  if (market.supportsReferralFees) {\n    const usdt = TOKEN_MINTS.find(({ name }) => name === 'USDT');\n    const usdc = TOKEN_MINTS.find(({ name }) => name === 'USDC');\n    if (\n      process.env.REACT_APP_USDT_REFERRAL_FEES_ADDRESS &&\n      usdt &&\n      market.quoteMintAddress.equals(usdt.address)\n    ) {\n      referrerQuoteWallet = new PublicKey(\n        process.env.REACT_APP_USDT_REFERRAL_FEES_ADDRESS,\n      );\n    } else if (\n      process.env.REACT_APP_USDC_REFERRAL_FEES_ADDRESS &&\n      usdc &&\n      market.quoteMintAddress.equals(usdc.address)\n    ) {\n      referrerQuoteWallet = new PublicKey(\n        process.env.REACT_APP_USDC_REFERRAL_FEES_ADDRESS,\n      );\n    }\n  }\n  const {\n    transaction: settleFundsTransaction,\n    signers: settleFundsSigners,\n  } = await market.makeSettleFundsTransaction(\n    connection,\n    openOrders,\n    baseCurrencyAccountPubkey,\n    quoteCurrencyAccountPubkey,\n    referrerQuoteWallet,\n  );\n\n  let transaction = mergeTransactions([\n    createAccountTransaction,\n    settleFundsTransaction,\n  ]);\n  let signers = createAccountSigner\n    ? [...settleFundsSigners, createAccountSigner]\n    : settleFundsSigners;\n\n  return await sendTransaction({\n    transaction,\n    signers,\n    wallet,\n    connection,\n    sendingMessage: 'Settling funds...',\n  });\n}\n\nexport async function settleAllFunds({\n  connection,\n  wallet,\n  tokenAccounts,\n  markets,\n  selectedTokenAccounts,\n}: {\n  connection: Connection;\n  wallet: Wallet;\n  tokenAccounts: TokenAccount[];\n  markets: Market[];\n  selectedTokenAccounts?: SelectedTokenAccounts;\n}) {\n  if (!markets || !wallet || !connection || !tokenAccounts) {\n    return;\n  }\n\n  const programIds: PublicKey[] = [];\n  markets\n    .reduce((cumulative, m) => {\n      // @ts-ignore\n      cumulative.push(m._programId);\n      return cumulative;\n    }, [])\n    .forEach((programId) => {\n      if (!programIds.find((p) => p.equals(programId))) {\n        programIds.push(programId);\n      }\n    });\n\n  const getOpenOrdersAccountsForProgramId = async (programId) => {\n    const openOrdersAccounts = await OpenOrders.findForOwner(\n      connection,\n      wallet.publicKey,\n      programId,\n    );\n    return openOrdersAccounts.filter(\n      (openOrders) =>\n        openOrders.baseTokenFree.toNumber() ||\n        openOrders.quoteTokenFree.toNumber(),\n    );\n  };\n\n  const openOrdersAccountsForProgramIds = await Promise.all(\n    programIds.map((programId) => getOpenOrdersAccountsForProgramId(programId)),\n  );\n  const openOrdersAccounts = openOrdersAccountsForProgramIds.reduce(\n    (accounts, current) => accounts.concat(current),\n    [],\n  );\n\n  const settleTransactions = (\n    await Promise.all(\n      openOrdersAccounts.map((openOrdersAccount) => {\n        const market = markets.find((m) =>\n          // @ts-ignore\n          m._decoded?.ownAddress?.equals(openOrdersAccount.market),\n        );\n        const baseMint = market?.baseMintAddress;\n        const quoteMint = market?.quoteMintAddress;\n\n        const selectedBaseTokenAccount = getSelectedTokenAccountForMint(\n          tokenAccounts,\n          baseMint,\n          baseMint &&\n            selectedTokenAccounts &&\n            selectedTokenAccounts[baseMint.toBase58()],\n        )?.pubkey;\n        const selectedQuoteTokenAccount = getSelectedTokenAccountForMint(\n          tokenAccounts,\n          quoteMint,\n          quoteMint &&\n            selectedTokenAccounts &&\n            selectedTokenAccounts[quoteMint.toBase58()],\n        )?.pubkey;\n        if (!selectedBaseTokenAccount || !selectedQuoteTokenAccount) {\n          return null;\n        }\n        return (\n          market &&\n          market.makeSettleFundsTransaction(\n            connection,\n            openOrdersAccount,\n            selectedBaseTokenAccount,\n            selectedQuoteTokenAccount,\n          )\n        );\n      }),\n    )\n  ).filter(\n    (\n      x,\n    ): x is {\n      signers: Account[];\n      transaction: Transaction;\n      payer: PublicKey;\n    } => !!x,\n  );\n  if (!settleTransactions || settleTransactions.length === 0) return;\n\n  const transactions = settleTransactions.slice(0, 4).map((t) => t.transaction);\n  const signers: Array<Account> = [];\n  settleTransactions\n    .reduce((cumulative: Array<Account>, t) => cumulative.concat(t.signers), [])\n    .forEach((signer) => {\n      if (!signers.find((s) => s.publicKey.equals(signer.publicKey))) {\n        signers.push(signer);\n      }\n    });\n\n  const transaction = mergeTransactions(transactions);\n\n  return await sendTransaction({\n    transaction,\n    signers,\n    wallet,\n    connection,\n  });\n}\n\nexport async function cancelOrder(params: {\n  market: Market;\n  connection: Connection;\n  wallet: Wallet;\n  order: Order;\n}) {\n  return cancelOrders({ ...params, orders: [params.order] });\n}\n\nexport async function cancelOrders({\n  market,\n  wallet,\n  connection,\n  orders,\n}: {\n  market: Market;\n  wallet: Wallet;\n  connection: Connection;\n  orders: Order[];\n}) {\n  const transaction = market.makeMatchOrdersTransaction(5);\n  orders.forEach((order) => {\n    transaction.add(\n      market.makeCancelOrderInstruction(connection, wallet.publicKey, order),\n    );\n  });\n  transaction.add(market.makeMatchOrdersTransaction(5));\n  return await sendTransaction({\n    transaction,\n    wallet,\n    connection,\n    sendingMessage: 'Sending cancel...',\n  });\n}\n\nexport async function placeOrder({\n  side,\n  price,\n  size,\n  orderType,\n  market,\n  connection,\n  wallet,\n  baseCurrencyAccount,\n  quoteCurrencyAccount,\n}: {\n  side: 'buy' | 'sell';\n  price: number;\n  size: number;\n  orderType: 'ioc' | 'postOnly' | 'limit';\n  market: Market | undefined | null;\n  connection: Connection;\n  wallet: Wallet;\n  baseCurrencyAccount: PublicKey | undefined;\n  quoteCurrencyAccount: PublicKey | undefined;\n}) {\n  let formattedMinOrderSize =\n    market?.minOrderSize?.toFixed(getDecimalCount(market.minOrderSize)) ||\n    market?.minOrderSize;\n  let formattedTickSize =\n    market?.tickSize?.toFixed(getDecimalCount(market.tickSize)) ||\n    market?.tickSize;\n  const isIncrement = (num, step) =>\n    Math.abs((num / step) % 1) < 1e-5 ||\n    Math.abs(((num / step) % 1) - 1) < 1e-5;\n  if (isNaN(price)) {\n    notify({ message: 'Invalid price', type: 'error' });\n    return;\n  }\n  if (isNaN(size)) {\n    notify({ message: 'Invalid size', type: 'error' });\n    return;\n  }\n  if (!wallet || !wallet.publicKey) {\n    notify({ message: 'Connect wallet', type: 'error' });\n    return;\n  }\n  if (!market) {\n    notify({ message: 'Invalid  market', type: 'error' });\n    return;\n  }\n  if (!isIncrement(size, market.minOrderSize)) {\n    notify({\n      message: `Size must be an increment of ${formattedMinOrderSize}`,\n      type: 'error',\n    });\n    return;\n  }\n  if (size < market.minOrderSize) {\n    notify({ message: 'Size too small', type: 'error' });\n    return;\n  }\n  if (!isIncrement(price, market.tickSize)) {\n    notify({\n      message: `Price must be an increment of ${formattedTickSize}`,\n      type: 'error',\n    });\n    return;\n  }\n  if (price < market.tickSize) {\n    notify({ message: 'Price under tick size', type: 'error' });\n    return;\n  }\n  const owner = wallet.publicKey;\n  const transaction = new Transaction();\n  const signers: Account[] = [];\n\n  if (!baseCurrencyAccount) {\n    const {\n      transaction: createAccountTransaction,\n      signer: createAccountSigners,\n      newAccountPubkey,\n    } = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.baseMintAddress,\n    });\n    transaction.add(createAccountTransaction);\n    signers.push(createAccountSigners);\n    baseCurrencyAccount = newAccountPubkey;\n  }\n  if (!quoteCurrencyAccount) {\n    const {\n      transaction: createAccountTransaction,\n      signer: createAccountSigners,\n      newAccountPubkey,\n    } = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.quoteMintAddress,\n    });\n    transaction.add(createAccountTransaction);\n    signers.push(createAccountSigners);\n    quoteCurrencyAccount = newAccountPubkey;\n  }\n\n  const payer = side === 'sell' ? baseCurrencyAccount : quoteCurrencyAccount;\n  if (!payer) {\n    notify({\n      message: 'Need an SPL token account for cost currency',\n      type: 'error',\n    });\n    return;\n  }\n  const params = {\n    owner,\n    payer,\n    side,\n    price,\n    size,\n    orderType,\n  };\n  console.log(params);\n\n  const matchOrderstransaction = market.makeMatchOrdersTransaction(5);\n  transaction.add(matchOrderstransaction);\n  let {\n    transaction: placeOrderTx,\n    signers: placeOrderSigners,\n  } = await market.makePlaceOrderTransaction(\n    connection,\n    params,\n    10_000,\n    10_000,\n  );\n  transaction.add(placeOrderTx);\n  transaction.add(market.makeMatchOrdersTransaction(5));\n  signers.push(...placeOrderSigners);\n\n  return await sendTransaction({\n    transaction,\n    wallet,\n    connection,\n    signers,\n    sendingMessage: 'Sending order...',\n  });\n}\n\nexport async function listMarket({\n  connection,\n  wallet,\n  baseMint,\n  quoteMint,\n  baseLotSize,\n  quoteLotSize,\n  dexProgramId,\n}: {\n  connection: Connection;\n  wallet: Wallet;\n  baseMint: PublicKey;\n  quoteMint: PublicKey;\n  baseLotSize: number;\n  quoteLotSize: number;\n  dexProgramId: PublicKey;\n}) {\n  const market = new Account();\n  const requestQueue = new Account();\n  const eventQueue = new Account();\n  const bids = new Account();\n  const asks = new Account();\n  const baseVault = new Account();\n  const quoteVault = new Account();\n  const feeRateBps = 0;\n  const quoteDustThreshold = new BN(100);\n\n  async function getVaultOwnerAndNonce() {\n    const nonce = new BN(0);\n    while (true) {\n      try {\n        const vaultOwner = await PublicKey.createProgramAddress(\n          [market.publicKey.toBuffer(), nonce.toArrayLike(Buffer, 'le', 8)],\n          dexProgramId,\n        );\n        return [vaultOwner, nonce];\n      } catch (e) {\n        nonce.iaddn(1);\n      }\n    }\n  }\n  const [vaultOwner, vaultSignerNonce] = await getVaultOwnerAndNonce();\n\n  const tx1 = new Transaction();\n  tx1.add(\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: baseVault.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(165),\n      space: 165,\n      programId: TokenInstructions.TOKEN_PROGRAM_ID,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: quoteVault.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(165),\n      space: 165,\n      programId: TokenInstructions.TOKEN_PROGRAM_ID,\n    }),\n    TokenInstructions.initializeAccount({\n      account: baseVault.publicKey,\n      mint: baseMint,\n      owner: vaultOwner,\n    }),\n    TokenInstructions.initializeAccount({\n      account: quoteVault.publicKey,\n      mint: quoteMint,\n      owner: vaultOwner,\n    }),\n  );\n\n  const tx2 = new Transaction();\n  tx2.add(\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: market.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(\n        Market.getLayout(dexProgramId).span,\n      ),\n      space: Market.getLayout(dexProgramId).span,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: requestQueue.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(5120 + 12),\n      space: 5120 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: eventQueue.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(262144 + 12),\n      space: 262144 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: bids.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(65536 + 12),\n      space: 65536 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: asks.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(65536 + 12),\n      space: 65536 + 12,\n      programId: dexProgramId,\n    }),\n    DexInstructions.initializeMarket({\n      market: market.publicKey,\n      requestQueue: requestQueue.publicKey,\n      eventQueue: eventQueue.publicKey,\n      bids: bids.publicKey,\n      asks: asks.publicKey,\n      baseVault: baseVault.publicKey,\n      quoteVault: quoteVault.publicKey,\n      baseMint,\n      quoteMint,\n      baseLotSize: new BN(baseLotSize),\n      quoteLotSize: new BN(quoteLotSize),\n      feeRateBps,\n      vaultSignerNonce,\n      quoteDustThreshold,\n      programId: dexProgramId,\n    }),\n  );\n\n  const signedTransactions = await Promise.all([\n    signTransaction({\n      transaction: tx1,\n      wallet,\n      connection,\n      signers: [baseVault, quoteVault],\n    }),\n    signTransaction({\n      transaction: tx2,\n      wallet,\n      connection,\n      signers: [market, requestQueue, eventQueue, bids, asks],\n    }),\n  ]);\n  for (let signedTransaction of signedTransactions) {\n    await sendSignedTransaction({\n      signedTransaction,\n      connection,\n    });\n  }\n\n  return market.publicKey;\n}\n\nconst getUnixTs = () => {\n  return new Date().getTime() / 1000;\n};\n\nconst DEFAULT_TIMEOUT = 15000;\n\nexport async function sendTransaction({\n  transaction,\n  wallet,\n  signers = [],\n  connection,\n  sendingMessage = 'Sending transaction...',\n  sentMessage = 'Transaction sent',\n  successMessage = 'Transaction confirmed',\n  timeout = DEFAULT_TIMEOUT,\n}: {\n  transaction: Transaction;\n  wallet: Wallet;\n  signers?: Array<Account>;\n  connection: Connection;\n  sendingMessage?: string;\n  sentMessage?: string;\n  successMessage?: string;\n  timeout?: number;\n}) {\n  const signedTransaction = await signTransaction({\n    transaction,\n    wallet,\n    signers,\n    connection,\n  });\n  return await sendSignedTransaction({\n    signedTransaction,\n    connection,\n    sendingMessage,\n    sentMessage,\n    successMessage,\n    timeout,\n  });\n}\n\nexport async function signTransaction({\n  transaction,\n  wallet,\n  signers = [],\n  connection,\n}: {\n  transaction: Transaction;\n  wallet: Wallet;\n  signers?: Array<Account>;\n  connection: Connection;\n}) {\n  transaction.recentBlockhash = (\n    await connection.getRecentBlockhash('max')\n  ).blockhash;\n  transaction.setSigners(wallet.publicKey, ...signers.map((s) => s.publicKey));\n  if (signers.length > 0) {\n    transaction.partialSign(...signers);\n  }\n  return await wallet.signTransaction(transaction);\n}\n\nexport async function sendSignedTransaction({\n  signedTransaction,\n  connection,\n  sendingMessage = 'Sending transaction...',\n  sentMessage = 'Transaction sent',\n  successMessage = 'Transaction confirmed',\n  timeout = DEFAULT_TIMEOUT,\n}: {\n  signedTransaction: Transaction;\n  connection: Connection;\n  sendingMessage?: string;\n  sentMessage?: string;\n  successMessage?: string;\n  timeout?: number;\n}): Promise<string> {\n  const rawTransaction = signedTransaction.serialize();\n  const startTime = getUnixTs();\n  notify({ message: sendingMessage });\n  const txid: TransactionSignature = await connection.sendRawTransaction(\n    rawTransaction,\n    {\n      skipPreflight: true,\n    },\n  );\n  notify({ message: sentMessage, type: 'success', txid });\n\n  console.log('Started awaiting confirmation for', txid);\n\n  let done = false;\n  (async () => {\n    while (!done && getUnixTs() - startTime < timeout) {\n      connection.sendRawTransaction(rawTransaction, {\n        skipPreflight: true,\n      });\n      await sleep(300);\n    }\n  })();\n  try {\n    await awaitTransactionSignatureConfirmation(txid, timeout, connection);\n  } catch (err) {\n    if (err.timeout) {\n      throw new Error('Timed out awaiting confirmation on transaction');\n    }\n    let simulateResult: SimulatedTransactionResponse | null = null;\n    try {\n      simulateResult = (\n        await simulateTransaction(connection, signedTransaction, 'single')\n      ).value;\n    } catch (e) {}\n    if (simulateResult && simulateResult.err) {\n      if (simulateResult.logs) {\n        for (let i = simulateResult.logs.length - 1; i >= 0; --i) {\n          const line = simulateResult.logs[i];\n          if (line.startsWith('Program log: ')) {\n            throw new Error(\n              'Transaction failed: ' + line.slice('Program log: '.length),\n            );\n          }\n        }\n      }\n      throw new Error(JSON.stringify(simulateResult.err));\n    }\n    throw new Error('Transaction failed');\n  } finally {\n    done = true;\n  }\n  notify({ message: successMessage, type: 'success', txid });\n\n  console.log('Latency', txid, getUnixTs() - startTime);\n  return txid;\n}\n\nasync function awaitTransactionSignatureConfirmation(\n  txid: TransactionSignature,\n  timeout: number,\n  connection: Connection,\n) {\n  let done = false;\n  const result = await new Promise((resolve, reject) => {\n    (async () => {\n      setTimeout(() => {\n        if (done) {\n          return;\n        }\n        done = true;\n        console.log('Timed out for txid', txid);\n        reject({ timeout: true });\n      }, timeout);\n      try {\n        connection.onSignature(\n          txid,\n          (result) => {\n            console.log('WS confirmed', txid, result);\n            done = true;\n            if (result.err) {\n              reject(result.err);\n            } else {\n              resolve(result);\n            }\n          },\n          'recent',\n        );\n        console.log('Set up WS connection', txid);\n      } catch (e) {\n        done = true;\n        console.log('WS error in setup', txid, e);\n      }\n      while (!done) {\n        // eslint-disable-next-line no-loop-func\n        (async () => {\n          try {\n            const signatureStatuses = await connection.getSignatureStatuses([\n              txid,\n            ]);\n            const result = signatureStatuses && signatureStatuses.value[0];\n            if (!done) {\n              if (!result) {\n                console.log('REST null result for', txid, result);\n              } else if (result.err) {\n                console.log('REST error for', txid, result);\n                done = true;\n                reject(result.err);\n              } else if (!result.confirmations) {\n                console.log('REST no confirmations for', txid, result);\n              } else {\n                console.log('REST confirmation for', txid, result);\n                done = true;\n                resolve(result);\n              }\n            }\n          } catch (e) {\n            if (!done) {\n              console.log('REST connection error: txid', txid, e);\n            }\n          }\n        })();\n        await sleep(300);\n      }\n    })();\n  });\n  done = true;\n  return result;\n}\n\nfunction mergeTransactions(transactions: (Transaction | undefined)[]) {\n  const transaction = new Transaction();\n  transactions\n    .filter((t): t is Transaction => t !== undefined)\n    .forEach((t) => {\n      transaction.add(t);\n    });\n  return transaction;\n}\n\nfunction jsonRpcResult(resultDescription: any) {\n  const jsonRpcVersion = struct.literal('2.0');\n  return struct.union([\n    struct({\n      jsonrpc: jsonRpcVersion,\n      id: 'string',\n      error: 'any',\n    }),\n    struct({\n      jsonrpc: jsonRpcVersion,\n      id: 'string',\n      error: 'null?',\n      result: resultDescription,\n    }),\n  ]);\n}\n\nfunction jsonRpcResultAndContext(resultDescription: any) {\n  return jsonRpcResult({\n    context: struct({\n      slot: 'number',\n    }),\n    value: resultDescription,\n  });\n}\n\nconst AccountInfoResult = struct({\n  executable: 'boolean',\n  owner: 'string',\n  lamports: 'number',\n  data: 'any',\n  rentEpoch: 'number?',\n});\n\nexport const GetMultipleAccountsAndContextRpcResult = jsonRpcResultAndContext(\n  struct.array([struct.union(['null', AccountInfoResult])]),\n);\n\nexport async function getMultipleSolanaAccounts(\n  connection: Connection,\n  publicKeys: PublicKey[],\n): Promise<\n  RpcResponseAndContext<{ [key: string]: AccountInfo<Buffer> | null }>\n> {\n  const args = [publicKeys.map((k) => k.toBase58()), { commitment: 'recent' }];\n  // @ts-ignore\n  const unsafeRes = await connection._rpcRequest('getMultipleAccounts', args);\n  const res = GetMultipleAccountsAndContextRpcResult(unsafeRes);\n  if (res.error) {\n    throw new Error(\n      'failed to get info about accounts ' +\n        publicKeys.map((k) => k.toBase58()).join(', ') +\n        ': ' +\n        res.error.message,\n    );\n  }\n  assert(typeof res.result !== 'undefined');\n  const accounts: Array<{\n    executable: any;\n    owner: PublicKey;\n    lamports: any;\n    data: Buffer;\n  } | null> = [];\n  for (const account of res.result.value) {\n    let value: {\n      executable: any;\n      owner: PublicKey;\n      lamports: any;\n      data: Buffer;\n    } | null = null;\n    if (res.result.value) {\n      const { executable, owner, lamports, data } = account;\n      assert(data[1] === 'base64');\n      value = {\n        executable,\n        owner: new PublicKey(owner),\n        lamports,\n        data: Buffer.from(data[0], 'base64'),\n      };\n    }\n    accounts.push(value);\n  }\n  return {\n    context: {\n      slot: res.result.context.slot,\n    },\n    value: Object.fromEntries(\n      accounts.map((account, i) => [publicKeys[i].toBase58(), account]),\n    ),\n  };\n}\n\n/** Copy of Connection.simulateTransaction that takes a commitment parameter. */\nasync function simulateTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  commitment: Commitment,\n): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n  // @ts-ignore\n  transaction.recentBlockhash = await connection._recentBlockhash(\n    // @ts-ignore\n    connection._disableBlockhashCaching,\n  );\n\n  const signData = transaction.serializeMessage();\n  // @ts-ignore\n  const wireTransaction = transaction._serialize(signData);\n  const encodedTransaction = wireTransaction.toString('base64');\n  const config: any = { encoding: 'base64', commitment };\n  const args = [encodedTransaction, config];\n\n  // @ts-ignore\n  const res = await connection._rpcRequest('simulateTransaction', args);\n  if (res.error) {\n    throw new Error('failed to simulate transaction: ' + res.error.message);\n  }\n  return res.result;\n}\n","import * as BufferLayout from 'buffer-layout';\nimport bs58 from 'bs58';\nimport { AccountInfo, Connection, PublicKey } from '@solana/web3.js';\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\nimport { TokenAccount } from './types';\nimport { TOKEN_MINTS } from '@project-serum/serum';\nimport { useAllMarkets, useMarket, useTokenAccounts } from './markets';\nimport { getMultipleSolanaAccounts } from './send';\nimport { useConnection } from './connection';\nimport { useAsyncData } from './fetch-loop';\nimport tuple from 'immutable-tuple';\nimport BN from 'bn.js';\nimport { useMemo } from 'react';\n\nexport const ACCOUNT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(32, 'mint'),\n  BufferLayout.blob(32, 'owner'),\n  BufferLayout.nu64('amount'),\n  BufferLayout.blob(93),\n]);\n\nexport const MINT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(36),\n  BufferLayout.blob(8, 'supply'),\n  BufferLayout.u8('decimals'),\n  BufferLayout.u8('initialized'),\n  BufferLayout.blob(36),\n]);\n\nexport function parseTokenAccountData(\n  data: Buffer,\n): { mint: PublicKey; owner: PublicKey; amount: number } {\n  let { mint, owner, amount } = ACCOUNT_LAYOUT.decode(data);\n  return {\n    mint: new PublicKey(mint),\n    owner: new PublicKey(owner),\n    amount,\n  };\n}\n\nexport interface MintInfo {\n  decimals: number;\n  initialized: boolean;\n  supply: BN;\n}\n\nexport function parseTokenMintData(data): MintInfo {\n  let { decimals, initialized, supply } = MINT_LAYOUT.decode(data);\n  return {\n    decimals,\n    initialized: !!initialized,\n    supply: new BN(supply, 10, 'le'),\n  };\n}\n\nexport function getOwnedAccountsFilters(publicKey: PublicKey) {\n  return [\n    {\n      memcmp: {\n        offset: ACCOUNT_LAYOUT.offsetOf('owner'),\n        bytes: publicKey.toBase58(),\n      },\n    },\n    {\n      dataSize: ACCOUNT_LAYOUT.span,\n    },\n  ];\n}\n\nexport const TOKEN_PROGRAM_ID = new PublicKey(\n  'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n);\n\nexport async function getOwnedTokenAccounts(\n  connection: Connection,\n  publicKey: PublicKey,\n): Promise<Array<{ publicKey: PublicKey; accountInfo: AccountInfo<Buffer> }>> {\n  let filters = getOwnedAccountsFilters(publicKey);\n  // @ts-ignore\n  let resp = await connection._rpcRequest('getProgramAccounts', [\n    TOKEN_PROGRAM_ID.toBase58(),\n    {\n      commitment: connection.commitment,\n      filters,\n    },\n  ]);\n  if (resp.error) {\n    throw new Error(\n      'failed to get token accounts owned by ' +\n        publicKey.toBase58() +\n        ': ' +\n        resp.error.message,\n    );\n  }\n  return resp.result\n    .map(({ pubkey, account: { data, executable, owner, lamports } }) => ({\n      publicKey: new PublicKey(pubkey),\n      accountInfo: {\n        data: bs58.decode(data),\n        executable,\n        owner: new PublicKey(owner),\n        lamports,\n      },\n    }))\n    .filter(({ accountInfo }) => {\n      // TODO: remove this check once mainnet is updated\n      return filters.every((filter) => {\n        if (filter.dataSize) {\n          return accountInfo.data.length === filter.dataSize;\n        } else if (filter.memcmp) {\n          let filterBytes = bs58.decode(filter.memcmp.bytes);\n          return accountInfo.data\n            .slice(\n              filter.memcmp.offset,\n              filter.memcmp.offset + filterBytes.length,\n            )\n            .equals(filterBytes);\n        }\n        return false;\n      });\n    });\n}\n\nexport async function getTokenAccountInfo(\n  connection: Connection,\n  ownerAddress: PublicKey,\n) {\n  let [splAccounts, account] = await Promise.all([\n    getOwnedTokenAccounts(connection, ownerAddress),\n    connection.getAccountInfo(ownerAddress),\n  ]);\n  const parsedSplAccounts: TokenAccount[] = splAccounts.map(\n    ({ publicKey, accountInfo }) => {\n      return {\n        pubkey: publicKey,\n        account: accountInfo,\n        effectiveMint: parseTokenAccountData(accountInfo.data).mint,\n      };\n    },\n  );\n  return parsedSplAccounts.concat({\n    pubkey: ownerAddress,\n    account,\n    effectiveMint: WRAPPED_SOL_MINT,\n  });\n}\n\nexport function useMintToTickers(): { [mint: string]: string } {\n  const { customMarkets } = useMarket();\n  const [markets] = useAllMarkets(customMarkets);\n  return useMemo(() => {\n    const mintsToTickers = Object.fromEntries(\n      TOKEN_MINTS.map((mint) => [mint.address.toBase58(), mint.name]),\n    );\n    for (let market of markets || []) {\n      const customMarketInfo = customMarkets.find(\n        (customMarket) =>\n          customMarket.address === market.market.address.toBase58(),\n      );\n      if (!(market.market.baseMintAddress.toBase58() in mintsToTickers)) {\n        if (customMarketInfo) {\n          mintsToTickers[market.market.baseMintAddress.toBase58()] =\n            customMarketInfo.baseLabel || `${customMarketInfo.name}_BASE`;\n        }\n      }\n      if (!(market.market.quoteMintAddress.toBase58() in mintsToTickers)) {\n        if (customMarketInfo) {\n          mintsToTickers[market.market.quoteMintAddress.toBase58()] =\n            customMarketInfo.quoteLabel || `${customMarketInfo.name}_QUOTE`;\n        }\n      }\n    }\n    return mintsToTickers;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [markets?.length, customMarkets.length]);\n}\n\nconst _VERY_SLOW_REFRESH_INTERVAL = 5000 * 1000;\n\nexport function useMintInfos(): [\n  (\n    | {\n        [mintAddress: string]: {\n          decimals: number;\n          initialized: boolean;\n        } | null;\n      }\n    | null\n    | undefined\n  ),\n  boolean,\n] {\n  const connection = useConnection();\n  const { customMarkets } = useMarket();\n  const [tokenAccounts] = useTokenAccounts();\n  const [allMarkets] = useAllMarkets(customMarkets);\n\n  const allMints = (tokenAccounts || [])\n    .map((account) => account.effectiveMint)\n    .concat(\n      (allMarkets || []).map((marketInfo) => marketInfo.market.baseMintAddress),\n    )\n    .concat(\n      (allMarkets || []).map(\n        (marketInfo) => marketInfo.market.quoteMintAddress,\n      ),\n    );\n  const uniqueMints = [...new Set(allMints.map((mint) => mint.toBase58()))].map(\n    (stringMint) => new PublicKey(stringMint),\n  );\n\n  const getAllMintInfo = async () => {\n    const mintInfos = await getMultipleSolanaAccounts(connection, uniqueMints);\n    return Object.fromEntries(\n      Object.entries(mintInfos.value).map(([key, accountInfo]) => [\n        key,\n        accountInfo && parseTokenMintData(accountInfo.data),\n      ]),\n    );\n  };\n\n  return useAsyncData(\n    getAllMintInfo,\n    tuple(\n      'getAllMintInfo',\n      connection,\n      (tokenAccounts || []).length,\n      (allMarkets || []).length,\n    ),\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\n  );\n}\n","import { BonfidaTrade } from './types';\n\nexport default class BonfidaApi {\n  static URL: string = 'https://serum-api.bonfida.com/';\n\n  static async get(path: string) {\n    try {\n      const response = await fetch(this.URL + path);\n      if (response.ok) {\n        const responseJson = await response.json();\n        return responseJson.success ? responseJson.data : null;\n      }\n    } catch (err) {\n      console.log(`Error fetching from Bonfida API ${path}: ${err}`);\n    }\n    return null;\n  }\n\n  static async getRecentTrades(\n    marketAddress: string,\n  ): Promise<BonfidaTrade[] | null> {\n    return BonfidaApi.get(`trades/address/${marketAddress}`);\n  }\n}\n\nexport const BONFIDA_DATA_FEED = 'https://serum-api.bonfida.com/tv';\n","import {\n  decodeEventQueue,\n  Market,\n  MARKETS,\n  OpenOrders,\n  Orderbook,\n  TOKEN_MINTS,\n  TokenInstructions,\n} from '@project-serum/serum';\nimport { PublicKey } from '@solana/web3.js';\nimport React, { useContext, useEffect, useState } from 'react';\nimport {\n  divideBnToNumber,\n  floorToDecimal,\n  getTokenMultiplierFromDecimals,\n  useLocalStorageState,\n} from './utils';\nimport { refreshCache, useAsyncData } from './fetch-loop';\nimport { useAccountData, useAccountInfo, useConnection } from './connection';\nimport { useWallet } from './wallet';\nimport tuple from 'immutable-tuple';\nimport { notify } from './notifications';\nimport BN from 'bn.js';\nimport {\n  getTokenAccountInfo,\n  parseTokenAccountData,\n  useMintInfos,\n} from './tokens';\nimport {\n  Balances,\n  CustomMarketInfo,\n  DeprecatedOpenOrdersBalances,\n  FullMarketInfo,\n  MarketContextValues,\n  MarketInfo,\n  OrderWithMarketAndMarketName,\n  SelectedTokenAccounts,\n  TokenAccount,\n  Trade,\n} from './types';\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\nimport { Order } from '@project-serum/serum/lib/market';\nimport BonfidaApi from './bonfidaConnector';\n\n// Used in debugging, should be false in production\nconst _IGNORE_DEPRECATED = false;\n\nexport const USE_MARKETS: MarketInfo[] = _IGNORE_DEPRECATED\n  ? MARKETS.map((m) => ({ ...m, deprecated: false }))\n  : MARKETS;\n\nexport function useMarketsList() {\n  return USE_MARKETS.filter(({ deprecated }) => !deprecated);\n}\n\nexport function useAllMarkets(customMarkets) {\n  const connection = useConnection();\n\n  const getAllMarkets = async () => {\n    const markets: Array<{\n      market: Market;\n      marketName: string;\n      programId: PublicKey;\n    } | null> = await Promise.all(\n      getMarketInfos(customMarkets).map(async (marketInfo) => {\n        try {\n          const market = await Market.load(\n            connection,\n            marketInfo.address,\n            {},\n            marketInfo.programId,\n          );\n          return {\n            market,\n            marketName: marketInfo.name,\n            programId: marketInfo.programId,\n          };\n        } catch (e) {\n          notify({\n            message: 'Error loading all market',\n            description: e.message,\n            type: 'error',\n          });\n          return null;\n        }\n      }),\n    );\n    return markets.filter(\n      (m): m is { market: Market; marketName: string; programId: PublicKey } =>\n        !!m,\n    );\n  };\n  return useAsyncData(\n    getAllMarkets,\n    tuple('getAllMarkets', customMarkets.length, connection),\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useUnmigratedOpenOrdersAccounts() {\n  const connection = useConnection();\n  const { wallet } = useWallet();\n\n  async function getUnmigratedOpenOrdersAccounts(): Promise<OpenOrders[]> {\n    if (!wallet || !connection || !wallet.publicKey) {\n      return [];\n    }\n    console.log('refreshing useUnmigratedOpenOrdersAccounts');\n    let deprecatedOpenOrdersAccounts: OpenOrders[] = [];\n    const deprecatedProgramIds = Array.from(\n      new Set(\n        USE_MARKETS.filter(\n          ({ deprecated }) => deprecated,\n        ).map(({ programId }) => programId.toBase58()),\n      ),\n    ).map((publicKeyStr) => new PublicKey(publicKeyStr));\n    let programId: PublicKey;\n    for (programId of deprecatedProgramIds) {\n      try {\n        const openOrdersAccounts = await OpenOrders.findForOwner(\n          connection,\n          wallet.publicKey,\n          programId,\n        );\n        deprecatedOpenOrdersAccounts = deprecatedOpenOrdersAccounts.concat(\n          openOrdersAccounts\n            .filter(\n              (openOrders) =>\n                openOrders.baseTokenTotal.toNumber() ||\n                openOrders.quoteTokenTotal.toNumber(),\n            )\n            .filter((openOrders) =>\n              USE_MARKETS.some(\n                (market) =>\n                  market.deprecated && market.address.equals(openOrders.market),\n              ),\n            ),\n        );\n      } catch (e) {\n        console.log(\n          'Error loading deprecated markets',\n          programId?.toBase58(),\n          e.message,\n        );\n      }\n    }\n    // Maybe sort\n    return deprecatedOpenOrdersAccounts;\n  }\n\n  const cacheKey = tuple(\n    'getUnmigratedOpenOrdersAccounts',\n    connection,\n    wallet?.publicKey?.toBase58(),\n  );\n  const [accounts] = useAsyncData(getUnmigratedOpenOrdersAccounts, cacheKey, {\n    refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\n  });\n\n  return {\n    accounts,\n    refresh: (clearCache: boolean) => refreshCache(cacheKey, clearCache),\n  };\n}\n\nconst MarketContext: React.Context<null | MarketContextValues> = React.createContext<null | MarketContextValues>(\n  null,\n);\n\nconst _VERY_SLOW_REFRESH_INTERVAL = 5000 * 1000;\n\n// For things that don't really change\nconst _SLOW_REFRESH_INTERVAL = 5 * 1000;\n\n// For things that change frequently\nconst _FAST_REFRESH_INTERVAL = 1000;\n\nexport const DEFAULT_MARKET = USE_MARKETS.find(\n  ({ name, deprecated }) => name === 'SRM/USDT' && !deprecated,\n);\n\nexport function getMarketDetails(\n  market: Market | undefined | null,\n  customMarkets: CustomMarketInfo[],\n): FullMarketInfo {\n  if (!market) {\n    return {};\n  }\n  const marketInfos = getMarketInfos(customMarkets);\n  const marketInfo = marketInfos.find((otherMarket) =>\n    otherMarket.address.equals(market.address),\n  );\n  const baseCurrency =\n    (market?.baseMintAddress &&\n      TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\n        ?.name) ||\n    (marketInfo?.baseLabel && `${marketInfo?.baseLabel}*`) ||\n    'UNKNOWN';\n  const quoteCurrency =\n    (market?.quoteMintAddress &&\n      TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\n        ?.name) ||\n    (marketInfo?.quoteLabel && `${marketInfo?.quoteLabel}*`) ||\n    'UNKNOWN';\n\n  return {\n    ...marketInfo,\n    marketName: marketInfo?.name,\n    baseCurrency,\n    quoteCurrency,\n    marketInfo,\n  };\n}\n\nexport function MarketProvider({ children }) {\n  const [marketAddress, setMarketAddress] = useLocalStorageState(\n    'marketAddress',\n    DEFAULT_MARKET?.address.toBase58(),\n  );\n  const [customMarkets, setCustomMarkets] = useLocalStorageState<\n    CustomMarketInfo[]\n  >('customMarkets', []);\n\n  const address = marketAddress && new PublicKey(marketAddress);\n  const connection = useConnection();\n  const marketInfos = getMarketInfos(customMarkets);\n  const marketInfo =\n    address && marketInfos.find((market) => market.address.equals(address));\n\n  // Replace existing market with a non-deprecated one on first load\n  useEffect(() => {\n    if (marketInfo && marketInfo.deprecated) {\n      console.log('Switching markets from deprecated', marketInfo);\n      if (DEFAULT_MARKET) {\n        setMarketAddress(DEFAULT_MARKET.address.toBase58());\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const [market, setMarket] = useState<Market | null>();\n  useEffect(() => {\n    if (\n      market &&\n      marketInfo &&\n      // @ts-ignore\n      market._decoded.ownAddress?.equals(marketInfo?.address)\n    ) {\n      return;\n    }\n    setMarket(null);\n    if (!marketInfo || !marketInfo.address) {\n      notify({\n        message: 'Error loading market',\n        description: 'Please select a market from the dropdown',\n        type: 'error',\n      });\n      return;\n    }\n    Market.load(connection, marketInfo.address, {}, marketInfo.programId)\n      .then(setMarket)\n      .catch((e) =>\n        notify({\n          message: 'Error loading market',\n          description: e.message,\n          type: 'error',\n        }),\n      );\n    // eslint-disable-next-line\n  }, [connection, marketInfo]);\n\n  return (\n    <MarketContext.Provider\n      value={{\n        market,\n        ...getMarketDetails(market, customMarkets),\n        setMarketAddress,\n        customMarkets,\n        setCustomMarkets,\n      }}\n    >\n      {children}\n    </MarketContext.Provider>\n  );\n}\n\nexport function useSelectedTokenAccounts(): [\n  SelectedTokenAccounts,\n  (newSelectedTokenAccounts: SelectedTokenAccounts) => void,\n] {\n  const [\n    selectedTokenAccounts,\n    setSelectedTokenAccounts,\n  ] = useLocalStorageState<SelectedTokenAccounts>('selectedTokenAccounts', {});\n  return [selectedTokenAccounts, setSelectedTokenAccounts];\n}\n\nexport function useMarket() {\n  const context = useContext(MarketContext);\n  if (!context) {\n    throw new Error('Missing market context');\n  }\n  return context;\n}\n\nexport function useMarkPrice() {\n  const [markPrice, setMarkPrice] = useState<null | number>(null);\n\n  const [orderbook] = useOrderbook();\n  const trades = useTrades();\n\n  useEffect(() => {\n    let bb = orderbook?.bids?.length > 0 && Number(orderbook.bids[0][0]);\n    let ba = orderbook?.asks?.length > 0 && Number(orderbook.asks[0][0]);\n    let last = trades && trades.length > 0 && trades[0].price;\n\n    let markPrice =\n      bb && ba\n        ? last\n          ? [bb, ba, last].sort((a, b) => a - b)[1]\n          : (bb + ba) / 2\n        : null;\n\n    setMarkPrice(markPrice);\n  }, [orderbook, trades]);\n\n  return markPrice;\n}\n\nexport function _useUnfilteredTrades(limit = 10000) {\n  const { market } = useMarket();\n  const connection = useConnection();\n  async function getUnfilteredTrades(): Promise<any[] | null> {\n    if (!market || !connection) {\n      return null;\n    }\n    return await market.loadFills(connection, limit);\n  }\n  const [trades] = useAsyncData(\n    getUnfilteredTrades,\n    tuple('getUnfilteredTrades', market, connection),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n  return trades;\n  // NOTE: For now, websocket is too expensive since the event queue is large\n  // and updates very frequently\n\n  // let data = useAccountData(market && market._decoded.eventQueue);\n  // if (!data) {\n  //   return null;\n  // }\n  // const events = decodeEventQueue(data, limit);\n  // return events\n  //   .filter((event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0))\n  //   .map(market.parseFillEvent.bind(market));\n}\n\nexport function useBonfidaTrades() {\n  const { market } = useMarket();\n  const marketAddress = market?.address.toBase58();\n\n  async function getBonfidaTrades() {\n    if (!marketAddress) {\n      return null;\n    }\n    return await BonfidaApi.getRecentTrades(marketAddress);\n  }\n\n  return useAsyncData(\n    getBonfidaTrades,\n    tuple('getBonfidaTrades', marketAddress),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n    false,\n  );\n}\n\nexport function useOrderbookAccounts() {\n  const { market } = useMarket();\n  // @ts-ignore\n  let bidData = useAccountData(market && market._decoded.bids);\n  // @ts-ignore\n  let askData = useAccountData(market && market._decoded.asks);\n  return {\n    bidOrderbook: market && bidData ? Orderbook.decode(market, bidData) : null,\n    askOrderbook: market && askData ? Orderbook.decode(market, askData) : null,\n  };\n}\n\nexport function useOrderbook(\n  depth = 20,\n): [{ bids: number[][]; asks: number[][] }, boolean] {\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\n  const { market } = useMarket();\n  const bids =\n    !bidOrderbook || !market\n      ? []\n      : bidOrderbook.getL2(depth).map(([price, size]) => [price, size]);\n  const asks =\n    !askOrderbook || !market\n      ? []\n      : askOrderbook.getL2(depth).map(([price, size]) => [price, size]);\n  return [{ bids, asks }, !!bids || !!asks];\n}\n\n// Want the balances table to be fast-updating, dont want open orders to flicker\n// TODO: Update to use websocket\nexport function useOpenOrdersAccounts(fast = false) {\n  const { market } = useMarket();\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getOpenOrdersAccounts() {\n    if (!connected) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    return await market.findOpenOrdersAccountsForOwner(\n      connection,\n      wallet.publicKey,\n    );\n  }\n  return useAsyncData(\n    getOpenOrdersAccounts,\n    tuple('getOpenOrdersAccounts', wallet, market, connected),\n    { refreshInterval: fast ? _FAST_REFRESH_INTERVAL : _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useSelectedOpenOrdersAccount(fast = false) {\n  const [accounts] = useOpenOrdersAccounts(fast);\n  if (!accounts) {\n    return null;\n  }\n  return accounts[0];\n}\n\nexport function useTokenAccounts(): [\n  TokenAccount[] | null | undefined,\n  boolean,\n] {\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getTokenAccounts() {\n    if (!connected) {\n      return null;\n    }\n    return await getTokenAccountInfo(connection, wallet.publicKey);\n  }\n  return useAsyncData(\n    getTokenAccounts,\n    tuple('getTokenAccounts', wallet, connected),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function getSelectedTokenAccountForMint(\n  accounts: TokenAccount[] | undefined | null,\n  mint: PublicKey | undefined,\n  selectedPubKey?: string | PublicKey | null,\n) {\n  if (!accounts || !mint) {\n    return null;\n  }\n  const filtered = accounts.filter(\n    ({ effectiveMint, pubkey }) =>\n      mint.equals(effectiveMint) &&\n      (!selectedPubKey ||\n        (typeof selectedPubKey === 'string'\n          ? selectedPubKey\n          : selectedPubKey.toBase58()) === pubkey.toBase58()),\n  );\n  return filtered && filtered[0];\n}\n\nexport function useSelectedQuoteCurrencyAccount() {\n  const [accounts] = useTokenAccounts();\n  const { market } = useMarket();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n  const mintAddress = market?.quoteMintAddress;\n  return getSelectedTokenAccountForMint(\n    accounts,\n    mintAddress,\n    mintAddress && selectedTokenAccounts[mintAddress.toBase58()],\n  );\n}\n\nexport function useSelectedBaseCurrencyAccount() {\n  const [accounts] = useTokenAccounts();\n  const { market } = useMarket();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n  const mintAddress = market?.baseMintAddress;\n  return getSelectedTokenAccountForMint(\n    accounts,\n    mintAddress,\n    mintAddress && selectedTokenAccounts[mintAddress.toBase58()],\n  );\n}\n\n// TODO: Update to use websocket\nexport function useSelectedQuoteCurrencyBalances() {\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const { market } = useMarket();\n  const [accountInfo, loaded] = useAccountInfo(quoteCurrencyAccount?.pubkey);\n  if (!market || !quoteCurrencyAccount || !loaded || !accountInfo) {\n    return null;\n  }\n  if (market.quoteMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\n    return accountInfo?.lamports / 1e9 ?? 0;\n  }\n  return market.quoteSplSizeToNumber(\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\n  );\n}\n\n// TODO: Update to use websocket\nexport function useSelectedBaseCurrencyBalances() {\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const { market } = useMarket();\n  const [accountInfo, loaded] = useAccountInfo(baseCurrencyAccount?.pubkey);\n  if (!market || !baseCurrencyAccount || !loaded || !accountInfo) {\n    return null;\n  }\n  if (market.baseMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\n    return accountInfo?.lamports / 1e9 ?? 0;\n  }\n  return market.baseSplSizeToNumber(\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\n  );\n}\n\nexport function useOpenOrders() {\n  const { market, marketName } = useMarket();\n  const openOrdersAccount = useSelectedOpenOrdersAccount();\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\n  if (!market || !openOrdersAccount || !bidOrderbook || !askOrderbook) {\n    return null;\n  }\n  return market\n    .filterForOpenOrders(bidOrderbook, askOrderbook, [openOrdersAccount])\n    .map((order) => ({ ...order, marketName, market }));\n}\n\nexport function useTrades(limit = 100) {\n  const trades = _useUnfilteredTrades(limit);\n  if (!trades) {\n    return null;\n  }\n  // Until partial fills are each given their own fill, use maker fills\n  return trades\n    .filter(({ eventFlags }) => eventFlags.maker)\n    .map((trade) => ({\n      ...trade,\n      side: trade.side === 'buy' ? 'sell' : 'buy',\n    }));\n}\n\nexport function useFeeDiscountKeys(): [\n  (\n    | {\n        pubkey: PublicKey;\n        feeTier: number;\n        balance: number;\n        mint: PublicKey;\n      }[]\n    | null\n    | undefined\n  ),\n  boolean,\n] {\n  const { market } = useMarket();\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getFeeDiscountKeys() {\n    if (!connected) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    return await market.findFeeDiscountKeys(connection, wallet.publicKey);\n  }\n  return useAsyncData(\n    getFeeDiscountKeys,\n    tuple('getFeeDiscountKeys', wallet, market, connected),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useFills(limit = 100) {\n  const { marketName } = useMarket();\n  const fills = _useUnfilteredTrades(limit);\n  const [openOrdersAccounts] = useOpenOrdersAccounts();\n  if (!openOrdersAccounts || openOrdersAccounts.length === 0) {\n    return null;\n  }\n  if (!fills) {\n    return null;\n  }\n  return fills\n    .filter((fill) =>\n      openOrdersAccounts.some((openOrdersAccount) =>\n        fill.openOrders.equals(openOrdersAccount.publicKey),\n      ),\n    )\n    .map((fill) => ({ ...fill, marketName }));\n}\n\n// TODO: Update to use websocket\nexport function useFillsForAllMarkets(limit = 100) {\n  const { connected, wallet } = useWallet();\n\n  const connection = useConnection();\n  // todo: add custom markets\n  const allMarkets = useAllMarkets([]);\n\n  async function getFillsForAllMarkets() {\n    let fills: Trade[] = [];\n    if (!connected) {\n      return fills;\n    }\n\n    let marketData;\n    for (marketData of allMarkets) {\n      const { market, marketName } = marketData;\n      if (!market) {\n        return fills;\n      }\n      const openOrdersAccounts = await market.findOpenOrdersAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n      const openOrdersAccount = openOrdersAccounts && openOrdersAccounts[0];\n      if (!openOrdersAccount) {\n        return fills;\n      }\n      const eventQueueData = await connection.getAccountInfo(\n        market && market._decoded.eventQueue,\n      );\n      let data = eventQueueData?.data;\n      if (!data) {\n        return fills;\n      }\n      const events = decodeEventQueue(data, limit);\n      const fillsForMarket: Trade[] = events\n        .filter(\n          (event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0),\n        )\n        .map(market.parseFillEvent.bind(market));\n      const ownFillsForMarket = fillsForMarket\n        .filter((fill) => fill.openOrders.equals(openOrdersAccount.publicKey))\n        .map((fill) => ({ ...fill, marketName }));\n      fills = fills.concat(ownFillsForMarket);\n    }\n\n    console.log(JSON.stringify(fills));\n    return fills;\n  }\n\n  return useAsyncData(\n    getFillsForAllMarkets,\n    tuple('getFillsForAllMarkets', connected, connection, allMarkets, wallet),\n    { refreshInterval: _FAST_REFRESH_INTERVAL },\n  );\n}\n\nexport function useAllOpenOrdersAccounts() {\n  const { wallet, connected } = useWallet();\n  const connection = useConnection();\n  const { customMarkets } = useMarket();\n  const marketInfos = getMarketInfos(customMarkets);\n  const programIds = [\n    ...new Set(marketInfos.map((info) => info.programId.toBase58())),\n  ].map((stringProgramId) => new PublicKey(stringProgramId));\n\n  const getAllOpenOrdersAccounts = async () => {\n    if (!connected) {\n      return [];\n    }\n    return (\n      await Promise.all(\n        programIds.map((programId) =>\n          OpenOrders.findForOwner(connection, wallet.publicKey, programId),\n        ),\n      )\n    ).flat();\n  };\n  return useAsyncData(\n    getAllOpenOrdersAccounts,\n    tuple(\n      'getAllOpenOrdersAccounts',\n      connection,\n      connected,\n      wallet?.publicKey?.toBase58(),\n      customMarkets.length,\n      (programIds || []).length,\n    ),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useAllOpenOrdersBalances() {\n  const [\n    openOrdersAccounts,\n    loadedOpenOrdersAccounts,\n  ] = useAllOpenOrdersAccounts();\n  const [mintInfos, mintInfosConnected] = useMintInfos();\n  const { customMarkets } = useMarket();\n  const [allMarkets] = useAllMarkets(customMarkets);\n  if (!loadedOpenOrdersAccounts || !mintInfosConnected) {\n    return {};\n  }\n\n  const marketsByAddress = Object.fromEntries(\n    (allMarkets || []).map((m) => [m.market.address.toBase58(), m]),\n  );\n  const openOrdersBalances: {\n    [mint: string]: { market: PublicKey; free: number; total: number }[];\n  } = {};\n  for (let account of openOrdersAccounts || []) {\n    const marketInfo = marketsByAddress[account.market.toBase58()];\n    const baseMint = marketInfo?.market.baseMintAddress.toBase58();\n    const quoteMint = marketInfo?.market.quoteMintAddress.toBase58();\n    if (!(baseMint in openOrdersBalances)) {\n      openOrdersBalances[baseMint] = [];\n    }\n    if (!(quoteMint in openOrdersBalances)) {\n      openOrdersBalances[quoteMint] = [];\n    }\n\n    const baseMintInfo = mintInfos && mintInfos[baseMint];\n    const baseFree = divideBnToNumber(\n      new BN(account.baseTokenFree),\n      getTokenMultiplierFromDecimals(baseMintInfo?.decimals || 0),\n    );\n    const baseTotal = divideBnToNumber(\n      new BN(account.baseTokenTotal),\n      getTokenMultiplierFromDecimals(baseMintInfo?.decimals || 0),\n    );\n    const quoteMintInfo = mintInfos && mintInfos[quoteMint];\n    const quoteFree = divideBnToNumber(\n      new BN(account.quoteTokenFree),\n      getTokenMultiplierFromDecimals(quoteMintInfo?.decimals || 0),\n    );\n    const quoteTotal = divideBnToNumber(\n      new BN(account.quoteTokenTotal),\n      getTokenMultiplierFromDecimals(quoteMintInfo?.decimals || 0),\n    );\n\n    openOrdersBalances[baseMint].push({\n      market: account.market,\n      free: baseFree,\n      total: baseTotal,\n    });\n    openOrdersBalances[quoteMint].push({\n      market: account.market,\n      free: quoteFree,\n      total: quoteTotal,\n    });\n  }\n  return openOrdersBalances;\n}\n\nexport function useAllOpenOrders(): {\n  openOrders: { orders: Order[]; marketAddress: string }[] | null | undefined;\n  loaded: boolean;\n  refreshOpenOrders: () => void;\n} {\n  const connection = useConnection();\n  const { connected } = useWallet();\n  const [\n    openOrdersAccounts,\n    openOrdersAccountsConnected,\n  ] = useAllOpenOrdersAccounts();\n  const { customMarkets } = useMarket();\n  const [marketInfos, marketInfosConnected] = useAllMarkets(customMarkets);\n  const openOrdersAccountsByAddress: {\n    [marketAddress: string]: OpenOrders[];\n  } = {};\n  for (let account of openOrdersAccounts || []) {\n    const marketsAddr = account.market.toBase58();\n    if (!(marketsAddr in openOrdersAccountsByAddress)) {\n      openOrdersAccountsByAddress[marketsAddr] = [];\n    }\n    openOrdersAccountsByAddress[marketsAddr].push(account);\n  }\n  const marketsByAddress = Object.fromEntries(\n    (marketInfos || []).map((info) => [info.market.publicKey.toBase58(), info]),\n  );\n  const getAllOpenOrders = async () => {\n    return await Promise.all(\n      Object.keys(openOrdersAccountsByAddress).map(async (marketAddr) => {\n        const market = marketsByAddress[marketAddr].market;\n        const [bids, asks] = await Promise.all([\n          market.loadBids(connection),\n          market.loadAsks(connection),\n        ]);\n        return {\n          orders: market.filterForOpenOrders(\n            bids,\n            asks,\n            openOrdersAccountsByAddress[marketAddr],\n          ),\n          marketAddress: marketAddr,\n        };\n      }),\n    );\n  };\n  const cacheKey = tuple(\n    'getAllOpenOrders',\n    openOrdersAccountsConnected,\n    (openOrdersAccounts || []).length,\n    connection,\n    connected,\n    marketInfosConnected,\n  );\n  const [openOrders, loaded] = useAsyncData(getAllOpenOrders, cacheKey, {\n    refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\n  });\n  return {\n    openOrders,\n    loaded,\n    refreshOpenOrders: () => refreshCache(cacheKey),\n  };\n}\n\nexport function useBalances(): Balances[] {\n  const baseCurrencyBalances = useSelectedBaseCurrencyBalances();\n  const quoteCurrencyBalances = useSelectedQuoteCurrencyBalances();\n  const openOrders = useSelectedOpenOrdersAccount(true);\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const baseExists =\n    openOrders && openOrders.baseTokenTotal && openOrders.baseTokenFree;\n  const quoteExists =\n    openOrders && openOrders.quoteTokenTotal && openOrders.quoteTokenFree;\n  if (\n    baseCurrency === 'UNKNOWN' ||\n    quoteCurrency === 'UNKNOWN' ||\n    !baseCurrency ||\n    !quoteCurrency\n  ) {\n    return [];\n  }\n  return [\n    {\n      market,\n      key: `${baseCurrency}${quoteCurrency}${baseCurrency}`,\n      coin: baseCurrency,\n      wallet: baseCurrencyBalances,\n      orders:\n        baseExists && market && openOrders\n          ? market.baseSplSizeToNumber(\n              openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\n            )\n          : null,\n      openOrders,\n      unsettled:\n        baseExists && market && openOrders\n          ? market.baseSplSizeToNumber(openOrders.baseTokenFree)\n          : null,\n    },\n    {\n      market,\n      key: `${quoteCurrency}${baseCurrency}${quoteCurrency}`,\n      coin: quoteCurrency,\n      wallet: quoteCurrencyBalances,\n      openOrders,\n      orders:\n        quoteExists && market && openOrders\n          ? market.quoteSplSizeToNumber(\n              openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\n            )\n          : null,\n      unsettled:\n        quoteExists && market && openOrders\n          ? market.quoteSplSizeToNumber(openOrders.quoteTokenFree)\n          : null,\n    },\n  ];\n}\n\nexport function useWalletBalancesForAllMarkets(): {\n  mint: string;\n  balance: number;\n}[] {\n  const [tokenAccounts] = useTokenAccounts();\n  const { connected } = useWallet();\n  const [mintInfos, mintInfosConnected] = useMintInfos();\n\n  if (!connected || !mintInfosConnected) {\n    return [];\n  }\n\n  let balances: { [mint: string]: number } = {};\n  for (let account of tokenAccounts || []) {\n    if (!account.account) {\n      continue;\n    }\n    let parsedAccount;\n    if (account.effectiveMint.equals(WRAPPED_SOL_MINT)) {\n      parsedAccount = {\n        mint: WRAPPED_SOL_MINT,\n        owner: account.pubkey,\n        amount: account.account.lamports,\n      };\n    } else {\n      parsedAccount = parseTokenAccountData(account.account.data);\n    }\n    if (!(parsedAccount.mint.toBase58() in balances)) {\n      balances[parsedAccount.mint.toBase58()] = 0;\n    }\n    const mintInfo = mintInfos && mintInfos[parsedAccount.mint.toBase58()];\n    const additionalAmount = divideBnToNumber(\n      new BN(parsedAccount.amount),\n      getTokenMultiplierFromDecimals(mintInfo?.decimals || 0),\n    );\n    balances[parsedAccount.mint.toBase58()] += additionalAmount;\n  }\n  return Object.entries(balances).map(([mint, balance]) => {\n    return { mint, balance };\n  });\n}\n\nexport function useUnmigratedDeprecatedMarkets() {\n  const connection = useConnection();\n  const { accounts } = useUnmigratedOpenOrdersAccounts();\n  const marketsList =\n    accounts &&\n    Array.from(new Set(accounts.map((openOrders) => openOrders.market)));\n  const deps = marketsList && marketsList.map((m) => m.toBase58());\n\n  const useUnmigratedDeprecatedMarketsInner = async () => {\n    if (!marketsList) {\n      return null;\n    }\n    const getMarket = async (address) => {\n      const marketInfo = USE_MARKETS.find((market) =>\n        market.address.equals(address),\n      );\n      if (!marketInfo) {\n        console.log('Failed loading market');\n        notify({\n          message: 'Error loading market',\n          type: 'error',\n        });\n        return null;\n      }\n      try {\n        console.log('Loading market', marketInfo.name);\n        // NOTE: Should this just be cached by (connection, marketInfo.address, marketInfo.programId)?\n        return await Market.load(\n          connection,\n          marketInfo.address,\n          {},\n          marketInfo.programId,\n        );\n      } catch (e) {\n        console.log('Failed loading market', marketInfo.name, e);\n        notify({\n          message: 'Error loading market',\n          description: e.message,\n          type: 'error',\n        });\n        return null;\n      }\n    };\n    return (await Promise.all(marketsList.map(getMarket))).filter((x) => x);\n  };\n  const [markets] = useAsyncData(\n    useUnmigratedDeprecatedMarketsInner,\n    tuple(\n      'useUnmigratedDeprecatedMarketsInner',\n      connection,\n      deps && deps.toString(),\n    ),\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\n  );\n  if (!markets) {\n    return null;\n  }\n  return markets.map((market) => ({\n    market,\n    openOrdersList: accounts?.filter(\n      (openOrders) => market && openOrders.market.equals(market.address),\n    ),\n  }));\n}\n\nexport function useGetOpenOrdersForDeprecatedMarkets(): {\n  openOrders: OrderWithMarketAndMarketName[] | null | undefined;\n  loaded: boolean;\n  refreshOpenOrders: () => void;\n} {\n  const { connected, wallet } = useWallet();\n  const [customMarkets] = useLocalStorageState<CustomMarketInfo[]>(\n    'customMarkets',\n    [],\n  );\n  const connection = useConnection();\n  const marketsAndOrders = useUnmigratedDeprecatedMarkets();\n  const marketsList =\n    marketsAndOrders && marketsAndOrders.map(({ market }) => market);\n\n  // This isn't quite right: open order balances could change\n  const deps =\n    marketsList &&\n    marketsList\n      .filter((market): market is Market => !!market)\n      .map((market) => market.address.toBase58());\n\n  async function getOpenOrdersForDeprecatedMarkets() {\n    if (!connected) {\n      return null;\n    }\n    if (!marketsList) {\n      return null;\n    }\n    console.log('refreshing getOpenOrdersForDeprecatedMarkets');\n    const getOrders = async (market: Market | null) => {\n      if (!market) {\n        return null;\n      }\n      const { marketName } = getMarketDetails(market, customMarkets);\n      try {\n        console.log('Fetching open orders for', marketName);\n        // Can do better than this, we have the open orders accounts already\n        return (\n          await market.loadOrdersForOwner(connection, wallet.publicKey)\n        ).map((order) => ({ marketName, market, ...order }));\n      } catch (e) {\n        console.log('Failed loading open orders', market.address.toBase58(), e);\n        notify({\n          message: `Error loading open orders for deprecated ${marketName}`,\n          description: e.message,\n          type: 'error',\n        });\n        return null;\n      }\n    };\n    return (await Promise.all(marketsList.map(getOrders)))\n      .filter((x): x is OrderWithMarketAndMarketName[] => !!x)\n      .flat();\n  }\n\n  const cacheKey = tuple(\n    'getOpenOrdersForDeprecatedMarkets',\n    connected,\n    connection,\n    wallet,\n    deps && deps.toString(),\n  );\n  const [openOrders, loaded] = useAsyncData(\n    getOpenOrdersForDeprecatedMarkets,\n    cacheKey,\n    {\n      refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\n    },\n  );\n  console.log('openOrders', openOrders);\n  return {\n    openOrders,\n    loaded,\n    refreshOpenOrders: () => refreshCache(cacheKey),\n  };\n}\n\nexport function useBalancesForDeprecatedMarkets() {\n  const markets = useUnmigratedDeprecatedMarkets();\n  const [customMarkets] = useLocalStorageState<CustomMarketInfo[]>(\n    'customMarkets',\n    [],\n  );\n  if (!markets) {\n    return null;\n  }\n\n  const openOrderAccountBalances: DeprecatedOpenOrdersBalances[] = [];\n  markets.forEach(({ market, openOrdersList }) => {\n    const { baseCurrency, quoteCurrency, marketName } = getMarketDetails(\n      market,\n      customMarkets,\n    );\n    if (!baseCurrency || !quoteCurrency || !market) {\n      return;\n    }\n    (openOrdersList || []).forEach((openOrders) => {\n      const inOrdersBase =\n        openOrders?.baseTokenTotal &&\n        openOrders?.baseTokenFree &&\n        market.baseSplSizeToNumber(\n          openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\n        );\n      const inOrdersQuote =\n        openOrders?.quoteTokenTotal &&\n        openOrders?.quoteTokenFree &&\n        market.baseSplSizeToNumber(\n          openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\n        );\n      const unsettledBase =\n        openOrders?.baseTokenFree &&\n        market.baseSplSizeToNumber(openOrders.baseTokenFree);\n      const unsettledQuote =\n        openOrders?.quoteTokenFree &&\n        market.baseSplSizeToNumber(openOrders.quoteTokenFree);\n\n      openOrderAccountBalances.push({\n        marketName,\n        market,\n        coin: baseCurrency,\n        key: `${marketName}${baseCurrency}`,\n        orders: inOrdersBase,\n        unsettled: unsettledBase,\n        openOrders,\n      });\n      openOrderAccountBalances.push({\n        marketName,\n        market,\n        coin: quoteCurrency,\n        key: `${marketName}${quoteCurrency}`,\n        orders: inOrdersQuote,\n        unsettled: unsettledQuote,\n        openOrders,\n      });\n    });\n  });\n  return openOrderAccountBalances;\n}\n\nexport function getMarketInfos(\n  customMarkets: CustomMarketInfo[],\n): MarketInfo[] {\n  const customMarketsInfo = customMarkets.map((m) => ({\n    ...m,\n    address: new PublicKey(m.address),\n    programId: new PublicKey(m.programId),\n    deprecated: false,\n  }));\n\n  return [...customMarketsInfo, ...USE_MARKETS];\n}\n\nexport function useMarketInfos() {\n  const { customMarkets } = useMarket();\n  return getMarketInfos(customMarkets);\n}\n\n/**\n * If selling, choose min tick size. If buying choose a price\n * s.t. given the state of the orderbook, the order will spend\n * `cost` cost currency.\n *\n * @param orderbook serum Orderbook object\n * @param cost quantity to spend. Base currency if selling,\n *  quote currency if buying.\n * @param tickSizeDecimals size of price increment of the market\n */\nexport function getMarketOrderPrice(\n  orderbook: Orderbook,\n  cost: number,\n  tickSizeDecimals?: number,\n) {\n  if (orderbook.isBids) {\n    return orderbook.market.tickSize;\n  }\n  let spentCost = 0;\n  let price, sizeAtLevel, costAtLevel: number;\n  const asks = orderbook.getL2(1000);\n  for ([price, sizeAtLevel] of asks) {\n    costAtLevel = price * sizeAtLevel;\n    if (spentCost + costAtLevel > cost) {\n      break;\n    }\n    spentCost += costAtLevel;\n  }\n  const sendPrice = Math.min(price * 1.02, asks[0][0] * 1.05);\n  let formattedPrice;\n  if (tickSizeDecimals) {\n    formattedPrice = floorToDecimal(sendPrice, tickSizeDecimals);\n  } else {\n    formattedPrice = sendPrice;\n  }\n  return formattedPrice;\n}\n\nexport function getExpectedFillPrice(\n  orderbook: Orderbook,\n  cost: number,\n  tickSizeDecimals?: number,\n) {\n  let spentCost = 0;\n  let avgPrice = 0;\n  let price, sizeAtLevel, costAtLevel: number;\n  for ([price, sizeAtLevel] of orderbook.getL2(1000)) {\n    costAtLevel = (orderbook.isBids ? 1 : price) * sizeAtLevel;\n    if (spentCost + costAtLevel > cost) {\n      avgPrice += (cost - spentCost) * price;\n      spentCost = cost;\n      break;\n    }\n    avgPrice += costAtLevel * price;\n    spentCost += costAtLevel;\n  }\n  const totalAvgPrice = avgPrice / Math.min(cost, spentCost);\n  let formattedPrice;\n  if (tickSizeDecimals) {\n    formattedPrice = floorToDecimal(totalAvgPrice, tickSizeDecimals);\n  } else {\n    formattedPrice = totalAvgPrice;\n  }\n  return formattedPrice;\n}\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\nhtml,body{\n  background: #11161D;\n}\ninput[type=number]::-webkit-inner-spin-button {\n  opacity: 0;\n}\ninput[type=number]:hover::-webkit-inner-spin-button,\ninput[type=number]:focus::-webkit-inner-spin-button {\n  opacity: 0.25;\n}\n/* width */\n::-webkit-scrollbar {\n  width: 15px;\n}\n/* Track */\n::-webkit-scrollbar-track {\n  background: #2d313c;\n}\n/* Handle */\n::-webkit-scrollbar-thumb {\n  background: #5b5f67;\n}\n/* Handle on hover */\n::-webkit-scrollbar-thumb:hover {\n  background: #5b5f67;\n}\n.ant-slider-track, .ant-slider:hover .ant-slider-track {\n  background-color: #2abdd2;\n  opacity: 0.75;\n}\n.ant-slider-track,\n.ant-slider ant-slider-track:hover {\n  background-color: #2abdd2;\n  opacity: 0.75;\n}\n.ant-slider-dot-active,\n.ant-slider-handle,\n.ant-slider-handle-click-focused,\n.ant-slider:hover .ant-slider-handle:not(.ant-tooltip-open)  {\n  border: 2px solid #2abdd2; \n}\n.ant-table-tbody > tr.ant-table-row:hover > td {\n  background: #273043;\n}\n.ant-table-tbody > tr > td {\n  border-bottom: 8px solid #1A2029;\n}\n.ant-table-container table > thead > tr:first-child th {\n  border-bottom: none;\n}\n.ant-divider-horizontal.ant-divider-with-text::before, .ant-divider-horizontal.ant-divider-with-text::after {\n  border-top: 1px solid #434a59 !important;\n}\n.ant-layout {\n    background: #11161D\n  }\n  .ant-table {\n    background: #212734;\n  }\n  .ant-table-thead > tr > th {\n    background: #1A2029;\n  }\n.ant-select-item-option-content {\n  img {\n    margin-right: 4px;\n  }\n}\n.ant-modal-content {\n  background-color: #212734;\n}\n\n@-webkit-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n@-moz-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n@-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n.flash {\n  -moz-animation: highlight 0.5s ease 0s 1 alternate ;\n  -webkit-animation: highlight 0.5s ease 0s 1 alternate;\n  animation: highlight 0.5s ease 0s 1 alternate;\n}`;\n","import React, { Component } from 'react';\nimport { Typography } from 'antd';\n\nconst { Title } = Typography;\n\nexport default class ErrorBoundary extends Component {\n  state = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div>\n          <div>\n            <Title level={2}>Something went wrong.</Title>\n            <Title level={4}>Please try again later.</Title>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","import { useRef, useEffect } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef<() => void>();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current && savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  margin: 5px;\n  padding: 20px;\n  background-color: #1a2029;\n`;\n\nexport default function FloatingElement({\n  style = undefined,\n  children,\n  stretchVertical = false,\n}) {\n  return (\n    <Wrapper\n      style={{\n        height: stretchVertical ? 'calc(100% - 10px)' : undefined,\n        ...style,\n      }}\n    >\n      {children}\n    </Wrapper>\n  );\n}\n","import { Col, Row } from 'antd';\nimport React, { useRef, useEffect, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useMarket, useOrderbook, useMarkPrice } from '../utils/markets';\nimport { isEqual, getDecimalCount } from '../utils/utils';\nimport { useInterval } from '../utils/useInterval';\nimport FloatingElement from './layout/FloatingElement';\nimport usePrevious from '../utils/usePrevious';\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\n\nconst SizeTitle = styled(Row)`\n  padding: 20px 0 14px;\n  color: #434a59;\n`;\n\nconst MarkPriceTitle = styled(Row)`\n  padding: 20px 0 14px;\n  font-weight: 700;\n`;\n\nconst Line = styled.div`\n  text-align: right;\n  float: right;\n  height: 100%;\n  ${(props) =>\n    props['data-width'] &&\n    css`\n      width: ${props['data-width']};\n    `}\n  ${(props) =>\n    props['data-bgcolor'] &&\n    css`\n      background-color: ${props['data-bgcolor']};\n    `}\n`;\n\nconst Price = styled.div`\n  position: absolute;\n  right: 5px;\n  color: white;\n`;\n\nexport default function Orderbook({ smallScreen, depth = 7, onPrice, onSize }) {\n  const markPrice = useMarkPrice();\n  const [orderbook] = useOrderbook();\n  const { baseCurrency, quoteCurrency } = useMarket();\n\n  const currentOrderbookData = useRef(null);\n  const lastOrderbookData = useRef(null);\n\n  const [orderbookData, setOrderbookData] = useState(null);\n\n  useInterval(() => {\n    if (\n      !currentOrderbookData.current ||\n      JSON.stringify(currentOrderbookData.current) !==\n        JSON.stringify(lastOrderbookData.current)\n    ) {\n      let bids = orderbook?.bids || [];\n      let asks = orderbook?.asks || [];\n\n      let sum = (total, [, size], index) =>\n        index < depth ? total + size : total;\n      let totalSize = bids.reduce(sum, 0) + asks.reduce(sum, 0);\n\n      let bidsToDisplay = getCumulativeOrderbookSide(bids, totalSize, false);\n      let asksToDisplay = getCumulativeOrderbookSide(asks, totalSize, true);\n\n      currentOrderbookData.current = {\n        bids: orderbook?.bids,\n        asks: orderbook?.asks,\n      };\n\n      setOrderbookData({ bids: bidsToDisplay, asks: asksToDisplay });\n    }\n  }, 250);\n\n  useEffect(() => {\n    lastOrderbookData.current = {\n      bids: orderbook?.bids,\n      asks: orderbook?.asks,\n    };\n  }, [orderbook]);\n\n  function getCumulativeOrderbookSide(orders, totalSize, backwards = false) {\n    let cumulative = orders\n      .slice(0, depth)\n      .reduce((cumulative, [price, size], i) => {\n        const cumulativeSize = (cumulative[i - 1]?.cumulativeSize || 0) + size;\n        cumulative.push({\n          price,\n          size,\n          cumulativeSize,\n          sizePercent: Math.round((cumulativeSize / (totalSize || 1)) * 100),\n        });\n        return cumulative;\n      }, []);\n    if (backwards) {\n      cumulative = cumulative.reverse();\n    }\n    return cumulative;\n  }\n\n  return (\n    <FloatingElement\n      style={\n        smallScreen ? { flex: 1 } : { height: '500px', overflow: 'hidden' }\n      }\n    >\n      <Title>Orderbook</Title>\n      <SizeTitle>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          Size ({baseCurrency})\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          Price ({quoteCurrency})\n        </Col>\n      </SizeTitle>\n      {orderbookData?.asks.map(({ price, size, sizePercent }) => (\n        <OrderbookRow\n          key={price + ''}\n          price={price}\n          size={size}\n          side={'sell'}\n          sizePercent={sizePercent}\n          onPriceClick={() => onPrice(price)}\n          onSizeClick={() => onSize(size)}\n        />\n      ))}\n      <MarkPriceComponent markPrice={markPrice} />\n      {orderbookData?.bids.map(({ price, size, sizePercent }) => (\n        <OrderbookRow\n          key={price + ''}\n          price={price}\n          size={size}\n          side={'buy'}\n          sizePercent={sizePercent}\n          onPriceClick={() => onPrice(price)}\n          onSizeClick={() => onSize(size)}\n        />\n      ))}\n    </FloatingElement>\n  );\n}\n\nconst OrderbookRow = React.memo(\n  ({ side, price, size, sizePercent, onSizeClick, onPriceClick }) => {\n    const element = useRef();\n\n    const { market } = useMarket();\n\n    useEffect(() => {\n      // eslint-disable-next-line\n      !element.current?.classList.contains('flash') &&\n        element.current?.classList.add('flash');\n      const id = setTimeout(\n        () =>\n          element.current?.classList.contains('flash') &&\n          element.current?.classList.remove('flash'),\n        250,\n      );\n      return () => clearTimeout(id);\n    }, [price, size]);\n\n    let formattedSize =\n      market?.minOrderSize && !isNaN(size)\n        ? Number(size).toFixed(getDecimalCount(market.minOrderSize) + 1)\n        : size;\n\n    let formattedPrice =\n      market?.tickSize && !isNaN(price)\n        ? Number(price).toFixed(getDecimalCount(market.tickSize) + 1)\n        : price;\n\n    return (\n      <Row ref={element} style={{ marginBottom: 1 }} onClick={onSizeClick}>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          {formattedSize}\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          <Line\n            data-width={sizePercent + '%'}\n            data-bgcolor={\n              side === 'buy'\n                ? 'rgba(65, 199, 122, 0.6)'\n                : 'rgba(242, 60, 105, 0.6)'\n            }\n          />\n          <Price onClick={onPriceClick}>{formattedPrice}</Price>\n        </Col>\n      </Row>\n    );\n  },\n  (prevProps, nextProps) =>\n    isEqual(prevProps, nextProps, ['price', 'size', 'sizePercent']),\n);\n\nconst MarkPriceComponent = React.memo(\n  ({ markPrice }) => {\n    const { market } = useMarket();\n    const previousMarkPrice = usePrevious(markPrice);\n\n    let markPriceColor =\n      markPrice > previousMarkPrice\n        ? '#41C77A'\n        : markPrice < previousMarkPrice\n        ? '#F23B69'\n        : 'white';\n\n    let formattedMarkPrice =\n      markPrice &&\n      market?.tickSize &&\n      markPrice.toFixed(getDecimalCount(market.tickSize));\n\n    return (\n      <MarkPriceTitle justify=\"center\">\n        <Col style={{ color: markPriceColor }}>\n          {markPrice > previousMarkPrice && (\n            <ArrowUpOutlined style={{ marginRight: 5 }} />\n          )}\n          {markPrice < previousMarkPrice && (\n            <ArrowDownOutlined style={{ marginRight: 5 }} />\n          )}\n          {formattedMarkPrice || '----'}\n        </Col>\n      </MarkPriceTitle>\n    );\n  },\n  (prevProps, nextProps) => isEqual(prevProps, nextProps, ['markPrice']),\n);\n","import { useEffect, useRef } from 'react';\n\nexport default function usePrevious(value) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef();\n\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n\n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\n","import React from 'react';\nimport { ConfigProvider, Table } from 'antd';\n\nexport default function DataTable({\n  dataSource,\n  columns,\n  emptyLabel = 'No data',\n  pagination = false,\n  loading = false,\n  pageSize = 10,\n}) {\n  const customizeRenderEmpty = () => (\n    <div\n      style={{\n        padding: '20px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      {emptyLabel}\n    </div>\n  );\n\n  return (\n    <ConfigProvider renderEmpty={customizeRenderEmpty}>\n      <Table\n        dataSource={dataSource}\n        columns={columns}\n        pagination={pagination ? { pagination: true, pageSize } : false}\n        loading={loading}\n      />\n    </ConfigProvider>\n  );\n}\n","import { Button } from 'antd';\nimport React from 'react';\nimport {\n  useTokenAccounts,\n  getSelectedTokenAccountForMint,\n} from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\nimport { useSendConnection } from '../../utils/connection';\nimport { useWallet } from '../../utils/wallet';\nimport { settleFunds } from '../../utils/send';\nimport { notify } from '../../utils/notifications';\n\nexport default function BalancesTable({\n  balances,\n  showMarket,\n  hideWalletBalance,\n  onSettleSuccess,\n}) {\n  const [accounts] = useTokenAccounts();\n  const connection = useSendConnection();\n  const { wallet } = useWallet();\n\n  async function onSettleFunds(market, openOrders) {\n    try {\n      await settleFunds({\n        market,\n        openOrders,\n        connection,\n        wallet,\n        baseCurrencyAccount: getSelectedTokenAccountForMint(\n          accounts,\n          market?.baseMintAddress,\n        ),\n        quoteCurrencyAccount: getSelectedTokenAccountForMint(\n          accounts,\n          market?.quoteMintAddress,\n        ),\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    }\n    onSettleSuccess && onSettleSuccess();\n  }\n\n  const columns = [\n    showMarket\n      ? {\n          title: 'Market',\n          dataIndex: 'marketName',\n          key: 'marketName',\n        }\n      : null,\n    {\n      title: 'Coin',\n      dataIndex: 'coin',\n      key: 'coin',\n    },\n    hideWalletBalance\n      ? null\n      : {\n          title: 'Wallet Balance',\n          dataIndex: 'wallet',\n          key: 'wallet',\n        },\n    {\n      title: 'Orders',\n      dataIndex: 'orders',\n      key: 'orders',\n    },\n    {\n      title: 'Unsettled',\n      dataIndex: 'unsettled',\n      key: 'unsettled',\n    },\n    {\n      key: 'action',\n      render: ({ market, openOrders, marketName }) => (\n        <div style={{ textAlign: 'right' }}>\n          <Button\n            ghost\n            style={{ marginRight: 12 }}\n            onClick={() => onSettleFunds(market, openOrders)}\n          >\n            Settle {marketName}\n          </Button>\n        </div>\n      ),\n    },\n  ].filter((x) => x);\n  return (\n    <DataTable\n      emptyLabel=\"No balances\"\n      dataSource={balances}\n      columns={columns}\n      pagination={false}\n    />\n  );\n}\n","import React, { useState } from 'react';\nimport DataTable from '../layout/DataTable';\n\nimport styled from 'styled-components';\nimport { Button, Col, Row, Tag } from 'antd';\nimport { cancelOrder } from '../../utils/send';\nimport { useWallet } from '../../utils/wallet';\nimport { useSendConnection } from '../../utils/connection';\nimport { notify } from '../../utils/notifications';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { OrderWithMarketAndMarketName } from '../../utils/types';\n\nconst CancelButton = styled(Button)`\n  color: #f23b69;\n  border: 1px solid #f23b69;\n`;\n\nexport default function OpenOrderTable({\n  openOrders,\n  onCancelSuccess,\n  pageSize,\n  loading,\n  marketFilter,\n}: {\n  openOrders: OrderWithMarketAndMarketName[] | null | undefined;\n  onCancelSuccess?: () => void;\n  pageSize?: number;\n  loading?: boolean;\n  marketFilter?: boolean;\n}) {\n  let { wallet } = useWallet();\n  let connection = useSendConnection();\n\n  const [cancelId, setCancelId] = useState(null);\n\n  async function cancel(order) {\n    setCancelId(order?.orderId);\n    try {\n      await cancelOrder({\n        order,\n        market: order.market,\n        connection,\n        wallet,\n      });\n    } catch (e) {\n      notify({\n        message: 'Error cancelling order',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    } finally {\n      setCancelId(null);\n    }\n    onCancelSuccess && onCancelSuccess();\n  }\n\n  const marketFilters = [\n    ...new Set((openOrders || []).map((orderInfos) => orderInfos.marketName)),\n  ].map((marketName) => {\n    return { text: marketName, value: marketName };\n  });\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'marketName',\n      key: 'marketName',\n      filters: marketFilter ? marketFilters : undefined,\n      onFilter: (value, record) => record.marketName.indexOf(value) === 0,\n    },\n    {\n      title: 'Side',\n      dataIndex: 'side',\n      key: 'side',\n      render: (side) => (\n        <Tag\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\n          style={{ fontWeight: 700 }}\n        >\n          {side.charAt(0).toUpperCase() + side.slice(1)}\n        </Tag>\n      ),\n      sorter: (a, b) => {\n        if (a.side === b.side) {\n          return 0;\n        } else if (a.side === 'buy') {\n          return 1;\n        } else {\n          return -1;\n        }\n      },\n      showSorterTooltip: false,\n    },\n    {\n      title: 'Size',\n      dataIndex: 'size',\n      key: 'size',\n      sorter: (a, b) => b.size - a.size,\n      showSorterTooltip: false,\n    },\n    {\n      title: 'Price',\n      dataIndex: 'price',\n      key: 'price',\n      sorter: (a, b) => b.price - a.price,\n      showSorterTooltip: false,\n    },\n    {\n      key: 'orderId',\n      render: (order) => (\n        <div style={{ textAlign: 'right' }}>\n          <CancelButton\n            icon={<DeleteOutlined />}\n            onClick={() => cancel(order)}\n            loading={cancelId + '' === order?.orderId + ''}\n          >\n            Cancel\n          </CancelButton>\n        </div>\n      ),\n    },\n  ];\n  const dataSource = (openOrders || []).map((order) => ({\n    ...order,\n    key: order.orderId,\n  }));\n\n  return (\n    <Row>\n      <Col span={24}>\n        <DataTable\n          emptyLabel=\"No open orders\"\n          dataSource={dataSource}\n          columns={columns}\n          pagination={true}\n          pageSize={pageSize ? pageSize : 5}\n          loading={loading !== undefined && loading}\n        />\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react';\nimport { Row, Col, Tag } from 'antd';\nimport { useFills, useMarket } from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\n\nexport default function FillsTable() {\n  const fills = useFills();\n\n  const { quoteCurrency } = useMarket();\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'marketName',\n      key: 'marketName',\n    },\n    {\n      title: 'Side',\n      dataIndex: 'side',\n      key: 'side',\n      render: (side) => (\n        <Tag\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\n          style={{ fontWeight: 700 }}\n        >\n          {side.charAt(0).toUpperCase() + side.slice(1)}\n        </Tag>\n      ),\n    },\n    {\n      title: `Size`,\n      dataIndex: 'size',\n      key: 'size',\n    },\n    {\n      title: `Price`,\n      dataIndex: 'price',\n      key: 'price',\n    },\n    {\n      title: `Liquidity`,\n      dataIndex: 'liquidity',\n      key: 'liquidity',\n    },\n    {\n      title: quoteCurrency ? `Fees (${quoteCurrency})` : 'Fees',\n      dataIndex: 'feeCost',\n      key: 'feeCost',\n    },\n  ];\n\n  const dataSource = (fills || []).map((fill) => ({\n    ...fill,\n    key: `${fill.orderId}${fill.side}`,\n    liquidity: fill.eventFlags.maker ? 'Maker' : 'Taker',\n  }));\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <DataTable\n            dataSource={dataSource}\n            columns={columns}\n            pagination={true}\n            pageSize={5}\n            emptyLabel=\"No fills\"\n          />\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React from 'react';\nimport { Row, Col, Typography, Tag } from 'antd';\nimport { useFeeDiscountKeys } from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\nimport { TokenInstructions, getFeeRates } from '@project-serum/serum';\nimport { percentFormat } from '../../utils/utils';\n\nexport default function FeesTable() {\n  const [feeAccounts] = useFeeDiscountKeys();\n\n  const columns = [\n    {\n      title: 'Fee Tier',\n      dataIndex: 'feeTier',\n      key: 'feeTier',\n      render: (feeTier, row) => (\n        <div style={{ display: 'flex' }}>\n          <Typography>{feeTier}</Typography>\n          {row.index === 0 ? (\n            <div style={{ marginLeft: 10 }}>\n              <Tag color={'#41C77A'} style={{ fontWeight: 700 }}>\n                Selected\n              </Tag>\n            </div>\n          ) : null}\n        </div>\n      ),\n    },\n    {\n      title: 'Taker',\n      dataIndex: 'taker',\n      key: 'taker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).taker),\n    },\n    {\n      title: 'Maker',\n      dataIndex: 'maker',\n      key: 'maker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).maker),\n    },\n    {\n      title: `Public Key`,\n      dataIndex: 'pubkey',\n      key: 'pubkey',\n      render: (pubkey) => pubkey.toBase58(),\n    },\n    {\n      title: `Balance`,\n      dataIndex: 'balance',\n      key: 'balance',\n    },\n    {\n      title: `Mint`,\n      dataIndex: 'mint',\n      key: 'mint',\n      render: (_, row) =>\n        row.mint.equals(TokenInstructions.SRM_MINT)\n          ? 'SRM'\n          : row.mint.equals(TokenInstructions.MSRM_MINT)\n          ? 'MSRM'\n          : 'UNKNOWN',\n    },\n  ];\n\n  const dataSource = (feeAccounts || []).map((account, index) => ({\n    ...account,\n    index,\n    key: account.pubkey.toBase58(),\n  }));\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <DataTable\n            dataSource={dataSource}\n            columns={columns}\n            pagination={true}\n            pageSize={5}\n            emptyLabel=\"No (M)SRM accounts\"\n          />\n        </Col>\n      </Row>\n      <Row style={{ marginTop: 8 }}>\n        <Col>\n          <Typography>\n            Holding SRM or MSRM makes you eligible for fee discounts:\n          </Typography>\n          <FeeScheduleTable />\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nfunction FeeScheduleTable() {\n  // Representation of serum-js/src/fees.ts\n  const dataSource = [\n    { feeTier: 0, taker: 0.0022, maker: -0.0003, token: '', balance: '' },\n    { feeTier: 1, taker: 0.002, maker: -0.0003, token: 'SRM', balance: 100 },\n    { feeTier: 2, taker: 0.0018, maker: -0.0003, token: 'SRM', balance: 1000 },\n    { feeTier: 3, taker: 0.0016, maker: -0.0003, token: 'SRM', balance: 10000 },\n    {\n      feeTier: 4,\n      taker: 0.0014,\n      maker: -0.0003,\n      token: 'SRM',\n      balance: 100000,\n    },\n    {\n      feeTier: 5,\n      taker: 0.0012,\n      maker: -0.0003,\n      token: 'SRM',\n      balance: 1000000,\n    },\n    { feeTier: 6, taker: 0.001, maker: -0.0005, token: 'MSRM', balance: 1 },\n  ];\n  const columns = [\n    {\n      title: 'Fee Tier',\n      dataIndex: 'feeTier',\n      key: 'feeTier',\n    },\n    {\n      title: 'Taker',\n      dataIndex: 'taker',\n      key: 'taker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).taker),\n    },\n    {\n      title: 'Maker',\n      dataIndex: 'maker',\n      key: 'maker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).maker),\n    },\n    {\n      title: 'Requirements',\n      dataIndex: 'requirements',\n      key: 'requirements',\n      render: (_, row) => (\n        <Typography>\n          {!row.balance ? 'None' : `≥ ${row.balance} ${row.token}`}\n        </Typography>\n      ),\n    },\n  ];\n  return (\n    <DataTable\n      dataSource={dataSource.map((info) => ({ ...info, key: info.feeTier }))}\n      columns={columns}\n    />\n  );\n}\n","import BalancesTable from './BalancesTable';\nimport OpenOrderTable from './OpenOrderTable';\nimport React from 'react';\nimport { Tabs, Typography } from 'antd';\nimport FillsTable from './FillsTable';\nimport FloatingElement from '../layout/FloatingElement';\nimport FeesTable from './FeesTable';\nimport { useOpenOrders, useBalances, useMarket } from '../../utils/markets';\n\nconst { Paragraph } = Typography;\nconst { TabPane } = Tabs;\n\nexport default function Index() {\n  const { market } = useMarket();\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 20 }}>\n      <Typography>\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)' }}>\n          Make sure to go to Balances and click Settle to send out your funds.\n        </Paragraph>\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)' }}>\n          To fund your wallet, <a href=\"https://www.sollet.io\">sollet.io</a>.\n          You can get SOL from FTX, Binance, BitMax, and others. You can get\n          other tokens from FTX.{' '}\n        </Paragraph>\n      </Typography>\n      <Tabs defaultActiveKey=\"orders\">\n        <TabPane tab=\"Open Orders\" key=\"orders\">\n          <OpenOrdersTab />\n        </TabPane>\n        <TabPane tab=\"Recent Trade History\" key=\"fills\">\n          <FillsTable />\n        </TabPane>\n        <TabPane tab=\"Balances\" key=\"balances\">\n          <BalancesTab />\n        </TabPane>\n        {market && market.supportsSrmFeeDiscounts ? (\n          <TabPane tab=\"Fee discounts\" key=\"fees\">\n            <FeesTable />\n          </TabPane>\n        ) : null}\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\nconst OpenOrdersTab = () => {\n  const openOrders = useOpenOrders();\n\n  return <OpenOrderTable openOrders={openOrders} />;\n};\n\nconst BalancesTab = () => {\n  const balances = useBalances();\n\n  return <BalancesTable balances={balances} />;\n};\n","import React from 'react';\nimport { Modal } from 'antd';\nimport {\n  useSelectedBaseCurrencyAccount,\n  useMarket,\n  useSelectedQuoteCurrencyAccount,\n} from '../utils/markets';\nimport { useWallet } from '../utils/wallet';\nimport Link from './Link';\n\nexport default function DepositDialog({ onClose, baseOrQuote }) {\n  const { market, baseCurrency, quoteCurrency } = useMarket();\n\n  const { providerName, providerUrl } = useWallet();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  let coinMint;\n  let account;\n  let depositCoin;\n  if (baseOrQuote === 'base') {\n    coinMint = market?.baseMintAddress;\n    account = baseCurrencyAccount;\n    depositCoin = baseCurrency;\n  } else if (baseOrQuote === 'quote') {\n    coinMint = market?.quoteMintAddress;\n    account = quoteCurrencyAccount;\n    depositCoin = quoteCurrency;\n  } else {\n    account = null;\n  }\n  if (!coinMint) {\n    return null;\n  }\n  return (\n    <Modal\n      title={depositCoin}\n      visible={!!coinMint}\n      onOk={onClose}\n      onCancel={onClose}\n    >\n      <div style={{ paddingTop: '20px' }}>\n        <p style={{ color: 'white' }}>Mint address:</p>\n        <p style={{ color: 'rgba(255,255,255,0.5)' }}>{coinMint.toBase58()}</p>\n        <div>\n          <p style={{ color: 'white' }}>SPL Deposit address:</p>\n          <p style={{ color: 'rgba(255,255,255,0.5)' }}>\n            {account ? (\n              account.pubkey.toBase58()\n            ) : (\n              <>\n                Visit{' '}\n                <Link external to={providerUrl}>\n                  {providerName}\n                </Link>{' '}\n                to create an account for this mint\n              </>\n            )}\n          </p>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport { TokenAccount } from '../utils/types';\nimport { useSelectedTokenAccounts } from '../utils/markets';\nimport { Button, Col, Select, Typography } from 'antd';\nimport { CopyOutlined } from '@ant-design/icons';\nimport { abbreviateAddress } from '../utils/utils';\nimport { notify } from '../utils/notifications';\n\nexport default function StandaloneTokenAccountsSelect({\n  accounts,\n  mint,\n  label,\n}: {\n  accounts: TokenAccount[] | null | undefined;\n  mint: string | undefined;\n  label?: boolean;\n}) {\n  const [\n    selectedTokenAccounts,\n    setSelectedTokenAccounts,\n  ] = useSelectedTokenAccounts();\n\n  let selectedValue: string | undefined;\n  if (mint && mint in selectedTokenAccounts) {\n    selectedValue = selectedTokenAccounts[mint];\n  } else if (accounts && accounts?.length > 0) {\n    selectedValue = accounts[0].pubkey.toBase58();\n  } else {\n    selectedValue = undefined;\n  }\n\n  const setTokenAccountForCoin = (value) => {\n    if (!mint) {\n      notify({\n        message: 'Error selecting token account',\n        description: 'Mint is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    const newSelectedTokenAccounts = { ...selectedTokenAccounts };\n    newSelectedTokenAccounts[mint] = value;\n    setSelectedTokenAccounts(newSelectedTokenAccounts);\n  };\n\n  return (\n    <React.Fragment>\n      {label && <Col span={8}>Token account:</Col>}\n      <Col span={label ? 13 : 21}>\n        <Select\n          style={{ width: '100%' }}\n          value={selectedValue}\n          onSelect={setTokenAccountForCoin}\n        >\n          {accounts?.map((account) => (\n            <Select.Option\n              key={account.pubkey.toBase58()}\n              value={account.pubkey.toBase58()}\n            >\n              <Typography.Text code>\n                {label\n                  ? abbreviateAddress(account.pubkey, 8)\n                  : account.pubkey.toBase58()}\n              </Typography.Text>\n            </Select.Option>\n          ))}\n        </Select>\n      </Col>\n      <Col span={2} offset={1}>\n        <Button\n          shape=\"round\"\n          icon={<CopyOutlined />}\n          size={'small'}\n          onClick={() =>\n            selectedValue && navigator.clipboard.writeText(selectedValue)\n          }\n        />\n      </Col>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { Button } from 'antd';\nimport { LinkOutlined } from '@ant-design/icons';\n\nexport default function LinkAddress({\n  title,\n  address,\n}: {\n  title?: undefined | any;\n  address: string;\n}) {\n  return (\n    <div>\n      {title && <p style={{ color: 'white' }}>{title}</p>}\n      <Button\n        type=\"link\"\n        icon={<LinkOutlined />}\n        href={'https://explorer.solana.com/address/' + address}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {address}\n      </Button>\n    </div>\n  );\n}\n","import { Button, Col, Divider, Popover, Row } from 'antd';\nimport React, { useState } from 'react';\nimport FloatingElement from './layout/FloatingElement';\nimport styled from 'styled-components';\nimport {\n  useBalances,\n  useMarket,\n  useSelectedBaseCurrencyAccount,\n  useSelectedOpenOrdersAccount,\n  useSelectedQuoteCurrencyAccount,\n  useTokenAccounts,\n} from '../utils/markets';\nimport DepositDialog from './DepositDialog';\nimport { useWallet } from '../utils/wallet';\nimport Link from './Link';\nimport { settleFunds } from '../utils/send';\nimport { useSendConnection } from '../utils/connection';\nimport { notify } from '../utils/notifications';\nimport { Balances } from '../utils/types';\nimport StandaloneTokenAccountsSelect from './StandaloneTokenAccountSelect';\nimport LinkAddress from './LinkAddress';\nimport { InfoCircleOutlined } from '@ant-design/icons';\n\nconst RowBox = styled(Row)`\n  padding-bottom: 20px;\n`;\n\nconst Tip = styled.p`\n  font-size: 12px;\n  padding-top: 6px;\n`;\n\nconst ActionButton = styled(Button)`\n  color: #2abdd2;\n  background-color: #212734;\n  border-width: 0px;\n`;\n\nexport default function StandaloneBalancesDisplay() {\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const balances = useBalances();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const connection = useSendConnection();\n  const { providerUrl, providerName, wallet, connected } = useWallet();\n  const [baseOrQuote, setBaseOrQuote] = useState('');\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const [tokenAccounts] = useTokenAccounts();\n  const baseCurrencyBalances =\n    balances && balances.find((b) => b.coin === baseCurrency);\n  const quoteCurrencyBalances =\n    balances && balances.find((b) => b.coin === quoteCurrency);\n\n  async function onSettleFunds() {\n    if (!market) {\n      notify({\n        message: 'Error settling funds',\n        description: 'market is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    if (!openOrdersAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    if (!baseCurrencyAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    if (!quoteCurrencyAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error',\n      });\n      return;\n    }\n\n    try {\n      await settleFunds({\n        market,\n        openOrders: openOrdersAccount,\n        connection,\n        wallet,\n        baseCurrencyAccount,\n        quoteCurrencyAccount,\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n    }\n  }\n\n  const formattedBalances: [\n    string | undefined,\n    Balances | undefined,\n    string,\n    string | undefined,\n  ][] = [\n    [\n      baseCurrency,\n      baseCurrencyBalances,\n      'base',\n      market?.baseMintAddress.toBase58(),\n    ],\n    [\n      quoteCurrency,\n      quoteCurrencyBalances,\n      'quote',\n      market?.quoteMintAddress.toBase58(),\n    ],\n  ];\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      {formattedBalances.map(\n        ([currency, balances, baseOrQuote, mint], index) => (\n          <React.Fragment key={index}>\n            <Divider style={{ borderColor: 'white' }}>\n              {currency}{' '}\n              {mint && (\n                <Popover\n                  content={<LinkAddress address={mint} />}\n                  placement=\"bottomRight\"\n                  title=\"Token mint\"\n                  trigger=\"hover\"\n                >\n                  <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n                </Popover>\n              )}\n            </Divider>\n            {connected && (\n              <RowBox align=\"middle\" style={{ paddingBottom: 10 }}>\n                <StandaloneTokenAccountsSelect\n                  accounts={tokenAccounts?.filter(\n                    (account) => account.effectiveMint.toBase58() === mint,\n                  )}\n                  mint={mint}\n                  label\n                />\n              </RowBox>\n            )}\n            <RowBox\n              align=\"middle\"\n              justify=\"space-between\"\n              style={{ paddingBottom: 12 }}\n            >\n              <Col>Wallet balance:</Col>\n              <Col>{balances && balances.wallet}</Col>\n            </RowBox>\n            <RowBox\n              align=\"middle\"\n              justify=\"space-between\"\n              style={{ paddingBottom: 12 }}\n            >\n              <Col>Unsettled balance:</Col>\n              <Col>{balances && balances.unsettled}</Col>\n            </RowBox>\n            <RowBox align=\"middle\" justify=\"space-around\">\n              <Col style={{ width: 150 }}>\n                <ActionButton\n                  block\n                  size=\"large\"\n                  onClick={() => setBaseOrQuote(baseOrQuote)}\n                >\n                  Deposit\n                </ActionButton>\n              </Col>\n              <Col style={{ width: 150 }}>\n                <ActionButton block size=\"large\" onClick={onSettleFunds}>\n                  Settle\n                </ActionButton>\n              </Col>\n            </RowBox>\n            <Tip>\n              All deposits go to your{' '}\n              <Link external to={providerUrl}>\n                {providerName}\n              </Link>{' '}\n              wallet\n            </Tip>\n          </React.Fragment>\n        ),\n      )}\n      <DepositDialog\n        baseOrQuote={baseOrQuote}\n        onClose={() => setBaseOrQuote('')}\n      />\n    </FloatingElement>\n  );\n}\n","import { Button, Input, Radio, Switch, Slider } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport {\n  useSelectedBaseCurrencyBalances,\n  useSelectedQuoteCurrencyBalances,\n  useMarket,\n  useMarkPrice,\n  useSelectedOpenOrdersAccount,\n  useSelectedBaseCurrencyAccount,\n  useSelectedQuoteCurrencyAccount,\n} from '../utils/markets';\nimport { useWallet } from '../utils/wallet';\nimport { notify } from '../utils/notifications';\nimport {\n  getDecimalCount,\n  roundToDecimal,\n  floorToDecimal,\n} from '../utils/utils';\nimport { useSendConnection } from '../utils/connection';\nimport FloatingElement from './layout/FloatingElement';\nimport { placeOrder } from '../utils/send';\nimport { SwitchChangeEventHandler } from 'antd/es/switch';\nimport { refreshCache } from '../utils/fetch-loop';\nimport tuple from 'immutable-tuple';\n\nconst SellButton = styled(Button)`\n  margin: 20px 0px 0px 0px;\n  background: #f23b69;\n  border-color: #f23b69;\n`;\n\nconst BuyButton = styled(Button)`\n  margin: 20px 0px 0px 0px;\n  background: #02bf76;\n  border-color: #02bf76;\n`;\n\nconst sliderMarks = {\n  0: '0%',\n  25: '25%',\n  50: '50%',\n  75: '75%',\n  100: '100%',\n};\n\nexport default function TradeForm({\n  style,\n  setChangeOrderRef,\n}: {\n  style?: any;\n  setChangeOrderRef?: (\n    ref: ({ size, price }: { size?: number; price?: number }) => void,\n  ) => void;\n}) {\n  const [side, setSide] = useState<'buy' | 'sell'>('buy');\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const baseCurrencyBalances = useSelectedBaseCurrencyBalances();\n  const quoteCurrencyBalances = useSelectedQuoteCurrencyBalances();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const { wallet, connected } = useWallet();\n  const sendConnection = useSendConnection();\n  const markPrice = useMarkPrice();\n\n  const [postOnly, setPostOnly] = useState(false);\n  const [ioc, setIoc] = useState(false);\n  const [baseSize, setBaseSize] = useState<number | undefined>(undefined);\n  const [quoteSize, setQuoteSize] = useState<number | undefined>(undefined);\n  const [price, setPrice] = useState<number | undefined>(undefined);\n  const [submitting, setSubmitting] = useState(false);\n  const [sizeFraction, setSizeFraction] = useState(0);\n\n  const availableQuote =\n    openOrdersAccount && market\n      ? market.quoteSplSizeToNumber(openOrdersAccount.quoteTokenFree)\n      : 0;\n\n  let quoteBalance = (quoteCurrencyBalances || 0) + (availableQuote || 0);\n  let baseBalance = baseCurrencyBalances || 0;\n  let sizeDecimalCount =\n    market?.minOrderSize && getDecimalCount(market.minOrderSize);\n  let priceDecimalCount = market?.tickSize && getDecimalCount(market.tickSize);\n\n  useEffect(() => {\n    setChangeOrderRef && setChangeOrderRef(doChangeOrder);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setChangeOrderRef]);\n\n  useEffect(() => {\n    baseSize && price && onSliderChange(sizeFraction);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [side]);\n\n  useEffect(() => {\n    updateSizeFraction();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [price, baseSize]);\n\n  const onSetBaseSize = (baseSize: number | undefined) => {\n    setBaseSize(baseSize);\n    if (!baseSize) {\n      setQuoteSize(undefined);\n      return;\n    }\n    let usePrice = price || markPrice;\n    if (!usePrice) {\n      setQuoteSize(undefined);\n      return;\n    }\n    const rawQuoteSize = baseSize * usePrice;\n    const quoteSize =\n      baseSize && roundToDecimal(rawQuoteSize, sizeDecimalCount);\n    setQuoteSize(quoteSize);\n  };\n\n  const onSetQuoteSize = (quoteSize: number | undefined) => {\n    setQuoteSize(quoteSize);\n    if (!quoteSize) {\n      setBaseSize(undefined);\n      return;\n    }\n    let usePrice = price || markPrice;\n    if (!usePrice) {\n      setBaseSize(undefined);\n      return;\n    }\n    const rawBaseSize = quoteSize / usePrice;\n    const baseSize = quoteSize && roundToDecimal(rawBaseSize, sizeDecimalCount);\n    setBaseSize(baseSize);\n  };\n\n  const doChangeOrder = ({\n    size,\n    price,\n  }: {\n    size?: number;\n    price?: number;\n  }) => {\n    const formattedSize = size && roundToDecimal(size, sizeDecimalCount);\n    const formattedPrice = price && roundToDecimal(price, priceDecimalCount);\n    formattedSize && onSetBaseSize(formattedSize);\n    formattedPrice && setPrice(formattedPrice);\n  };\n\n  const updateSizeFraction = () => {\n    const rawMaxSize =\n      side === 'buy' ? quoteBalance / (price || markPrice || 1) : baseBalance;\n    const maxSize = floorToDecimal(rawMaxSize, sizeDecimalCount);\n    const sizeFraction = Math.min(((baseSize || 0) / maxSize) * 100, 100);\n    setSizeFraction(sizeFraction);\n  };\n\n  const onSliderChange = (value) => {\n    if (!price && markPrice) {\n      let formattedMarkPrice: number | string = priceDecimalCount\n        ? markPrice.toFixed(priceDecimalCount)\n        : markPrice;\n      setPrice(\n        typeof formattedMarkPrice === 'number'\n          ? formattedMarkPrice\n          : parseFloat(formattedMarkPrice),\n      );\n    }\n\n    let newSize;\n    if (side === 'buy') {\n      if (price || markPrice) {\n        newSize = ((quoteBalance / (price || markPrice || 1)) * value) / 100;\n      }\n    } else {\n      newSize = (baseBalance * value) / 100;\n    }\n\n    // round down to minOrderSize increment\n    let formatted = floorToDecimal(newSize, sizeDecimalCount);\n\n    onSetBaseSize(formatted);\n  };\n\n  const postOnChange: SwitchChangeEventHandler = (checked) => {\n    if (checked) {\n      setIoc(false);\n    }\n    setPostOnly(checked);\n  };\n  const iocOnChange: SwitchChangeEventHandler = (checked) => {\n    if (checked) {\n      setPostOnly(false);\n    }\n    setIoc(checked);\n  };\n\n  async function onSubmit() {\n    if (!price) {\n      console.warn('Missing price');\n      notify({\n        message: 'Missing price',\n        type: 'error',\n      });\n      return;\n    } else if (!baseSize) {\n      console.warn('Missing size');\n      notify({\n        message: 'Missing size',\n        type: 'error',\n      });\n      return;\n    }\n\n    setSubmitting(true);\n    try {\n      await placeOrder({\n        side,\n        price,\n        size: baseSize,\n        orderType: ioc ? 'ioc' : postOnly ? 'postOnly' : 'limit',\n        market,\n        connection: sendConnection,\n        wallet,\n        baseCurrencyAccount: baseCurrencyAccount?.pubkey,\n        quoteCurrencyAccount: quoteCurrencyAccount?.pubkey,\n      });\n      refreshCache(tuple('getTokenAccounts', wallet, connected));\n      setPrice(undefined);\n      onSetBaseSize(undefined);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error placing order',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <FloatingElement\n      style={{ display: 'flex', flexDirection: 'column', ...style }}\n    >\n      <div style={{ flex: 1 }}>\n        <Radio.Group\n          onChange={(e) => setSide(e.target.value)}\n          value={side}\n          buttonStyle=\"solid\"\n          style={{\n            marginBottom: 8,\n            width: '100%',\n          }}\n        >\n          <Radio.Button\n            value=\"buy\"\n            style={{\n              width: '50%',\n              textAlign: 'center',\n              background: side === 'buy' ? '#02bf76' : '',\n              borderColor: side === 'buy' ? '#02bf76' : '',\n            }}\n          >\n            BUY\n          </Radio.Button>\n          <Radio.Button\n            value=\"sell\"\n            style={{\n              width: '50%',\n              textAlign: 'center',\n              background: side === 'sell' ? '#F23B69' : '',\n              borderColor: side === 'sell' ? '#F23B69' : '',\n            }}\n          >\n            SELL\n          </Radio.Button>\n        </Radio.Group>\n        <Input\n          style={{ textAlign: 'right', paddingBottom: 8 }}\n          addonBefore={<div style={{ width: '30px' }}>Price</div>}\n          suffix={\n            <span style={{ fontSize: 10, opacity: 0.5 }}>{quoteCurrency}</span>\n          }\n          value={price}\n          type=\"number\"\n          step={market?.tickSize || 1}\n          onChange={(e) => setPrice(parseFloat(e.target.value))}\n        />\n        <Input.Group compact style={{ paddingBottom: 8 }}>\n          <Input\n            style={{ width: 'calc(50% + 30px)', textAlign: 'right' }}\n            addonBefore={<div style={{ width: '30px' }}>Size</div>}\n            suffix={\n              <span style={{ fontSize: 10, opacity: 0.5 }}>{baseCurrency}</span>\n            }\n            value={baseSize}\n            type=\"number\"\n            step={market?.minOrderSize || 1}\n            onChange={(e) => onSetBaseSize(parseFloat(e.target.value))}\n          />\n          <Input\n            style={{ width: 'calc(50% - 30px)', textAlign: 'right' }}\n            suffix={\n              <span style={{ fontSize: 10, opacity: 0.5 }}>\n                {quoteCurrency}\n              </span>\n            }\n            value={quoteSize}\n            type=\"number\"\n            step={market?.minOrderSize || 1}\n            onChange={(e) => onSetQuoteSize(parseFloat(e.target.value))}\n          />\n        </Input.Group>\n        <Slider\n          value={sizeFraction}\n          tipFormatter={(value) => `${value}%`}\n          marks={sliderMarks}\n          onChange={onSliderChange}\n        />\n        <div style={{ paddingTop: 18 }}>\n          {'POST '}\n          <Switch\n            checked={postOnly}\n            onChange={postOnChange}\n            style={{ marginRight: 40 }}\n          />\n          {'IOC '}\n          <Switch checked={ioc} onChange={iocOnChange} />\n        </div>\n      </div>\n      {side === 'buy' ? (\n        <BuyButton\n          disabled={!price || !baseSize}\n          onClick={onSubmit}\n          block\n          type=\"primary\"\n          size=\"large\"\n          loading={submitting}\n        >\n          Buy {baseCurrency}\n        </BuyButton>\n      ) : (\n        <SellButton\n          disabled={!price || !baseSize}\n          onClick={onSubmit}\n          block\n          type=\"primary\"\n          size=\"large\"\n          loading={submitting}\n        >\n          Sell {baseCurrency}\n        </SellButton>\n      )}\n    </FloatingElement>\n  );\n}\n","import { Col, Row } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useMarket, useBonfidaTrades } from '../utils/markets';\nimport { getDecimalCount } from '../utils/utils';\nimport FloatingElement from './layout/FloatingElement';\nimport { BonfidaTrade } from '../utils/types';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\nconst SizeTitle = styled(Row)`\n  padding: 20px 0 14px;\n  color: #434a59;\n`;\n\nexport default function PublicTrades({ smallScreen }) {\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const [trades, loaded] = useBonfidaTrades();\n\n  return (\n    <FloatingElement\n      style={\n        smallScreen\n          ? { flex: 1 }\n          : {\n              marginTop: '10px',\n              minHeight: '270px',\n              maxHeight: 'calc(100vh - 700px)',\n            }\n      }\n    >\n      <Title>Recent Market trades</Title>\n      <SizeTitle>\n        <Col span={8}>Price ({quoteCurrency}) </Col>\n        <Col span={8} style={{ textAlign: 'right' }}>\n          Size ({baseCurrency})\n        </Col>\n        <Col span={8} style={{ textAlign: 'right' }}>\n          Time\n        </Col>\n      </SizeTitle>\n      {!!trades && loaded && (\n        <div\n          style={{\n            marginRight: '-20px',\n            paddingRight: '5px',\n            overflowY: 'scroll',\n            maxHeight: smallScreen\n              ? 'calc(100% - 75px)'\n              : 'calc(100vh - 800px)',\n          }}\n        >\n          {trades.map((trade: BonfidaTrade, i: number) => (\n            <Row key={i} style={{ marginBottom: 4 }}>\n              <Col\n                span={8}\n                style={{\n                  color: trade.side === 'buy' ? '#41C77A' : '#F23B69',\n                }}\n              >\n                {market?.tickSize && !isNaN(trade.price)\n                  ? Number(trade.price).toFixed(\n                      getDecimalCount(market.tickSize),\n                    )\n                  : trade.price}\n              </Col>\n              <Col span={8} style={{ textAlign: 'right' }}>\n                {market?.minOrderSize && !isNaN(trade.size)\n                  ? Number(trade.size).toFixed(\n                      getDecimalCount(market.minOrderSize),\n                    )\n                  : trade.size}\n              </Col>\n              <Col span={8} style={{ textAlign: 'right', color: '#434a59' }}>\n                {trade.time && new Date(trade.time).toLocaleTimeString()}\n              </Col>\n            </Row>\n          ))}\n        </div>\n      )}\n    </FloatingElement>\n  );\n}\n","import { Button, Divider, Spin, Typography } from 'antd';\nimport React from 'react';\nimport {\n  useGetOpenOrdersForDeprecatedMarkets,\n  useBalancesForDeprecatedMarkets,\n  useUnmigratedOpenOrdersAccounts,\n} from '../utils/markets';\nimport FloatingElement from './layout/FloatingElement';\nimport CheckOutlined from '@ant-design/icons/lib/icons/CheckOutlined';\nimport BalancesTable from './UserInfoTable/BalancesTable';\nimport Link from './Link';\nimport OpenOrderTable from './UserInfoTable/OpenOrderTable';\nimport SyncOutlined from '@ant-design/icons/lib/icons/SyncOutlined';\n\nconst { Title } = Typography;\n\nexport default function DeprecatedMarketsInstructions({ switchToLiveMarkets }) {\n  const balances = useBalancesForDeprecatedMarkets();\n  const {\n    openOrders,\n    loaded,\n    refreshOpenOrders,\n  } = useGetOpenOrdersForDeprecatedMarkets();\n\n  const { refresh } = useUnmigratedOpenOrdersAccounts();\n  const needToCancelOrders = !openOrders || openOrders.length > 0;\n  const filteredBalances =\n    balances &&\n    balances.filter(({ orders, unsettled }) => orders > 0 || unsettled > 0);\n  const needToSettleFunds = filteredBalances && filteredBalances.length > 0;\n  return (\n    <FloatingElement>\n      <Title level={4} style={{ color: 'rgba(255, 255, 255, 1)' }}>\n        Migrate to new USDC markets\n      </Title>\n      <Typography>\n        <Link\n          external\n          to={\n            'https://explorer.solana.com/address/EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v'\n          }\n        >\n          Native USDC\n        </Link>{' '}\n        has arrived on Solana! See{' '}\n        <Link\n          external\n          to={\n            'https://www.circle.com/blog/circle-partners-with-alameda-research-ftx-project-serum-to-introduce-support-for-usdc-on-solana'\n          }\n        >\n          Circle's announcement\n        </Link>{' '}\n        for more information.\n      </Typography>\n      <br />\n      <Typography>\n        Serum is transitioning from the previous{' '}\n        <Link\n          external\n          to={\n            'https://explorer.solana.com/address/BXXkv6z8ykpG1yuvUDPgh732wzVHB69RnB9YgSYh3itW'\n          }\n        >\n          Wrapped USDC\n        </Link>\n        , now called WUSDC, to Native USDC. You can convert from WUSDC to USDC\n        directly on{' '}\n        <Link external to={'https://sollet.io'}>\n          sollet.io\n        </Link>\n        , or can deposit WUSDC and be credited USDC on exchanges like{' '}\n        <Link external to={'https://ftx.com'}>\n          FTX\n        </Link>\n        .\n      </Typography>\n      <br />\n      <Typography>\n        Markets with WUSDC as the quote curency are now deprecated. To migrate\n        over to the new USDC markets, please cancel your orders and settle your\n        funds on old markets.\n      </Typography>\n      <div style={{ marginTop: 20, display: 'flex', justifyContent: 'center' }}>\n        <Button onClick={() => refresh(true)}>\n          <SyncOutlined /> Refresh data\n        </Button>\n      </div>\n      {!balances ? (\n        <Spin size=\"large\" />\n      ) : (\n        <>\n          <Divider>\n            {!needToCancelOrders && <CheckOutlined />} Cancel your orders\n          </Divider>\n          {needToCancelOrders ? (\n            loaded ? (\n              <OpenOrderTable\n                openOrders={openOrders}\n                onCancelSuccess={() => {\n                  setTimeout(() => {\n                    refresh();\n                    refreshOpenOrders();\n                  }, 1000); // Wait so that on-chain account state reflects the update\n                }}\n              />\n            ) : (\n              <Spin size=\"large\" />\n            )\n          ) : null}\n          <Divider>\n            {!needToSettleFunds && <CheckOutlined />} Settle your funds\n          </Divider>\n          {needToSettleFunds && (\n            <BalancesTable\n              balances={filteredBalances}\n              hideWalletBalance\n              showMarket\n              onSettleSuccess={() => {\n                setTimeout(refresh, 1000); // Wait so that on-chain account state reflects the update\n              }}\n            />\n          )}\n          <Divider>Switch to upgraded markets</Divider>\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\n            <Button\n              onClick={switchToLiveMarkets}\n              disabled={needToSettleFunds || needToCancelOrders}\n            >\n              Switch to new markets\n            </Button>\n          </div>\n        </>\n      )}\n    </FloatingElement>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Col, Input, Modal, Row, Typography } from 'antd';\nimport { notify } from '../utils/notifications';\nimport { isValidPublicKey } from '../utils/utils';\nimport { PublicKey } from '@solana/web3.js';\nimport { Market, MARKETS, TOKEN_MINTS } from '@project-serum/serum';\nimport { useAccountInfo, useConnection } from '../utils/connection';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nconst { Text } = Typography;\n\nexport default function CustomMarketDialog({\n  visible,\n  onAddCustomMarket,\n  onClose,\n}) {\n  const connection = useConnection();\n\n  const [marketId, setMarketId] = useState('');\n\n  const [marketLabel, setMarketLabel] = useState('');\n  const [baseLabel, setBaseLabel] = useState('');\n  const [quoteLabel, setQuoteLabel] = useState('');\n\n  const [market, setMarket] = useState(null);\n  const [loadingMarket, setLoadingMarket] = useState(false);\n\n  const wellFormedMarketId = isValidPublicKey(marketId);\n\n  const [marketAccountInfo] = useAccountInfo(\n    wellFormedMarketId ? new PublicKey(marketId) : null,\n  );\n  const programId = marketAccountInfo\n    ? marketAccountInfo.owner.toBase58()\n    : MARKETS.find(({ deprecated }) => !deprecated).programId.toBase58();\n\n  useEffect(() => {\n    if (!wellFormedMarketId || !programId) {\n      resetLabels();\n      return;\n    }\n    setLoadingMarket(true);\n    Market.load(\n      connection,\n      new PublicKey(marketId),\n      {},\n      new PublicKey(programId),\n    )\n      .then((market) => {\n        setMarket(market);\n      })\n      .catch(() => {\n        resetLabels();\n        setMarket(null);\n      })\n      .finally(() => setLoadingMarket(false));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [connection, marketId, programId]);\n\n  const resetLabels = () => {\n    setMarketLabel(null);\n    setBaseLabel(null);\n    setQuoteLabel(null);\n  };\n\n  const knownMarket = MARKETS.find(\n    (m) =>\n      m.address.toBase58() === marketId && m.programId.toBase58() === programId,\n  );\n  const knownProgram = MARKETS.find(\n    (m) => m.programId.toBase58() === programId,\n  );\n  const knownBaseCurrency =\n    market?.baseMintAddress &&\n    TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\n      ?.name;\n\n  const knownQuoteCurrency =\n    market?.quoteMintAddress &&\n    TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\n      ?.name;\n\n  const canSubmit =\n    !loadingMarket &&\n    !!market &&\n    market.publicKey.toBase58() === marketId &&\n    marketId &&\n    programId &&\n    marketLabel &&\n    (knownBaseCurrency || baseLabel) &&\n    (knownQuoteCurrency || quoteLabel) &&\n    wellFormedMarketId;\n\n  const onSubmit = () => {\n    if (!canSubmit) {\n      notify({\n        message: 'Please fill in all fields with valid values',\n        type: 'error',\n      });\n      return;\n    }\n\n    let params = {\n      address: marketId,\n      programId,\n      name: marketLabel,\n    };\n    if (!knownBaseCurrency) {\n      params.baseLabel = baseLabel;\n    }\n    if (!knownQuoteCurrency) {\n      params.quoteLabel = quoteLabel;\n    }\n    onAddCustomMarket(params);\n    onDoClose();\n  };\n\n  const onDoClose = () => {\n    resetLabels();\n    setMarket(null);\n    setMarketId(null);\n    onClose();\n  };\n\n  return (\n    <Modal\n      title={'Add custom market'}\n      visible={visible}\n      onOk={onSubmit}\n      okText={'Add'}\n      onCancel={onDoClose}\n      okButtonProps={{ disabled: !canSubmit }}\n    >\n      <div>\n        {wellFormedMarketId ? (\n          <>\n            {!market && !loadingMarket && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Not a valid market</Text>\n              </Row>\n            )}\n            {market && knownMarket && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"warning\">Market known: {knownMarket.name}</Text>\n              </Row>\n            )}\n            {market && !knownProgram && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Warning: unknown DEX program</Text>\n              </Row>\n            )}\n            {market && knownProgram && knownProgram.deprecated && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"warning\">Warning: deprecated DEX program</Text>\n              </Row>\n            )}\n          </>\n        ) : (\n          <>\n            {marketId && !wellFormedMarketId && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Invalid market ID</Text>\n              </Row>\n            )}\n          </>\n        )}\n        <Row style={{ marginBottom: 8 }}>\n          <Col span={24}>\n            <Input\n              placeholder=\"Market Id\"\n              value={marketId}\n              onChange={(e) => setMarketId(e.target.value)}\n              suffix={loadingMarket ? <LoadingOutlined /> : null}\n            />\n          </Col>\n        </Row>\n\n        <Row style={{ marginBottom: 8, marginTop: 8 }}>\n          <Col span={24}>\n            <Input\n              placeholder=\"Market Label\"\n              disabled={!market}\n              value={marketLabel}\n              onChange={(e) => setMarketLabel(e.target.value)}\n            />\n          </Col>\n        </Row>\n        <Row gutter={[8]} style={{ marginBottom: 8 }}>\n          <Col span={12}>\n            <Input\n              placeholder=\"Base label\"\n              disabled={!market || knownBaseCurrency}\n              value={knownBaseCurrency || baseLabel}\n              onChange={(e) => setBaseLabel(e.target.value)}\n            />\n            {market && !knownBaseCurrency && (\n              <div style={{ marginTop: 8 }}>\n                <Text type=\"warning\">Warning: unknown token</Text>\n              </div>\n            )}\n          </Col>\n          <Col span={12}>\n            <Input\n              placeholder=\"Quote label\"\n              disabled={!market || knownQuoteCurrency}\n              value={knownQuoteCurrency || quoteLabel}\n              onChange={(e) => setQuoteLabel(e.target.value)}\n            />\n            {market && !knownQuoteCurrency && (\n              <div style={{ marginTop: 8 }}>\n                <Text type=\"warning\">Warning: unknown token</Text>\n              </div>\n            )}\n          </Col>\n        </Row>\n      </div>\n    </Modal>\n  );\n}\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Col, Popover, Row, Select, Typography, Button } from 'antd';\nimport styled from 'styled-components';\nimport Orderbook from '../components/Orderbook';\nimport UserInfoTable from '../components/UserInfoTable';\nimport StandaloneBalancesDisplay from '../components/StandaloneBalancesDisplay';\nimport {\n  useMarket,\n  useMarketsList,\n  useUnmigratedDeprecatedMarkets,\n  getMarketInfos,\n} from '../utils/markets';\nimport TradeForm from '../components/TradeForm';\nimport TradesTable from '../components/TradesTable';\nimport LinkAddress from '../components/LinkAddress';\nimport DeprecatedMarketsInstructions from '../components/DeprecatedMarketsInstructions';\nimport {\n  InfoCircleOutlined,\n  PlusCircleOutlined,\n  DeleteOutlined,\n} from '@ant-design/icons';\nimport CustomMarketDialog from '../components/CustomMarketDialog';\nimport { notify } from '../utils/notifications';\n\nconst { Option, OptGroup } = Select;\n\nconst Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 16px 16px;\n  .borderNone .ant-select-selector {\n    border: none !important;\n  }\n`;\n\nexport default function TradePage() {\n  const {\n    market,\n    marketName,\n    customMarkets,\n    setCustomMarkets,\n    setMarketAddress,\n  } = useMarket();\n  const markets = useMarketsList();\n  const [handleDeprecated, setHandleDeprecated] = useState(false);\n  const [addMarketVisible, setAddMarketVisible] = useState(false);\n  const deprecatedMarkets = useUnmigratedDeprecatedMarkets();\n  const [dimensions, setDimensions] = useState({\n    height: window.innerHeight,\n    width: window.innerWidth,\n  });\n\n  useEffect(() => {\n    document.title = marketName ? `${marketName} — Serum` : 'Serum';\n  }, [marketName]);\n\n  const changeOrderRef = useRef<\n    ({ size, price }: { size?: number; price?: number }) => void\n  >();\n\n  useEffect(() => {\n    const handleResize = () => {\n      setDimensions({\n        height: window.innerHeight,\n        width: window.innerWidth,\n      });\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const width = dimensions?.width;\n  const componentProps = {\n    onChangeOrderRef: (ref) => (changeOrderRef.current = ref),\n    onPrice: useCallback(\n      (price) => changeOrderRef.current && changeOrderRef.current({ price }),\n      [],\n    ),\n    onSize: useCallback(\n      (size) => changeOrderRef.current && changeOrderRef.current({ size }),\n      [],\n    ),\n  };\n  const getComponent = useCallback(() => {\n    if (handleDeprecated) {\n      return (\n        <DeprecatedMarketsPage\n          switchToLiveMarkets={() => setHandleDeprecated(false)}\n        />\n      );\n    } else if (width < 1000) {\n      return <RenderSmaller {...componentProps} />;\n    } else if (width < 1450) {\n      return <RenderSmall {...componentProps} />;\n    } else {\n      return <RenderNormal {...componentProps} />;\n    }\n  }, [width, componentProps, handleDeprecated]);\n\n  const onAddCustomMarket = (customMarket) => {\n    const marketInfo = getMarketInfos(customMarkets).some(\n      (m) => m.address.toBase58() === customMarket.address,\n    );\n    if (marketInfo) {\n      notify({\n        message: `A market with the given ID already exists`,\n        type: 'error',\n      });\n      return;\n    }\n    const newCustomMarkets = [...customMarkets, customMarket];\n    setCustomMarkets(newCustomMarkets);\n    setMarketAddress(customMarket.address);\n  };\n\n  const onDeleteCustomMarket = (address) => {\n    const newCustomMarkets = customMarkets.filter((m) => m.address !== address);\n    setCustomMarkets(newCustomMarkets);\n  };\n\n  return (\n    <>\n      <CustomMarketDialog\n        visible={addMarketVisible}\n        onClose={() => setAddMarketVisible(false)}\n        onAddCustomMarket={onAddCustomMarket}\n      />\n      <Wrapper>\n        <Row\n          align=\"middle\"\n          style={{ paddingLeft: 5, paddingRight: 5 }}\n          gutter={16}\n        >\n          <Col>\n            <MarketSelector\n              markets={markets}\n              setHandleDeprecated={setHandleDeprecated}\n              placeholder={'Select market'}\n              customMarkets={customMarkets}\n              onDeleteCustomMarket={onDeleteCustomMarket}\n            />\n          </Col>\n          {market ? (\n            <Col>\n              <Popover\n                content={<LinkAddress address={market.publicKey.toBase58()} />}\n                placement=\"bottomRight\"\n                title=\"Market address\"\n                trigger=\"click\"\n              >\n                <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n              </Popover>\n            </Col>\n          ) : null}\n          <Col>\n            <PlusCircleOutlined\n              style={{ color: '#2abdd2' }}\n              onClick={() => setAddMarketVisible(true)}\n            />\n          </Col>\n          {deprecatedMarkets && deprecatedMarkets.length > 0 && (\n            <React.Fragment>\n              <Col>\n                <Typography>\n                  You have unsettled funds on old markets! Please go through\n                  them to claim your funds.\n                </Typography>\n              </Col>\n              <Col>\n                <Button onClick={() => setHandleDeprecated(!handleDeprecated)}>\n                  {handleDeprecated ? 'View new markets' : 'Handle old markets'}\n                </Button>\n              </Col>\n            </React.Fragment>\n          )}\n        </Row>\n        {getComponent()}\n      </Wrapper>\n    </>\n  );\n}\n\nfunction MarketSelector({\n  markets,\n  placeholder,\n  setHandleDeprecated,\n  customMarkets,\n  onDeleteCustomMarket,\n}) {\n  const { market, setMarketAddress } = useMarket();\n\n  const onSetMarketAddress = (marketAddress) => {\n    setHandleDeprecated(false);\n    setMarketAddress(marketAddress);\n  };\n\n  const extractBase = (a) => a.split('/')[0];\n  const extractQuote = (a) => a.split('/')[1];\n\n  const selectedMarket = getMarketInfos(customMarkets)\n    .find(\n      (proposedMarket) =>\n        market?.address && proposedMarket.address.equals(market.address),\n    )\n    ?.address?.toBase58();\n\n  return (\n    <Select\n      showSearch\n      size={'large'}\n      style={{ width: 200 }}\n      placeholder={placeholder || 'Select a market'}\n      optionFilterProp=\"name\"\n      onSelect={onSetMarketAddress}\n      listHeight={400}\n      value={selectedMarket}\n      filterOption={(input, option) =>\n        option?.name?.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      }\n    >\n      {customMarkets && customMarkets.length > 0 && (\n        <OptGroup label=\"Custom\">\n          {customMarkets.map(({ address, name }, i) => (\n            <Option\n              value={address}\n              key={address}\n              name={name}\n              style={{\n                padding: '10px',\n                // @ts-ignore\n                backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\n              }}\n            >\n              <Row>\n                <Col flex=\"auto\">{name}</Col>\n                {selectedMarket !== address && (\n                  <Col>\n                    <DeleteOutlined\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        e.nativeEvent.stopImmediatePropagation();\n                        onDeleteCustomMarket && onDeleteCustomMarket(address);\n                      }}\n                    />\n                  </Col>\n                )}\n              </Row>\n            </Option>\n          ))}\n        </OptGroup>\n      )}\n      <OptGroup label=\"Markets\">\n        {markets\n          .sort((a, b) =>\n            extractQuote(a.name) === 'USDT' && extractQuote(b.name) !== 'USDT'\n              ? -1\n              : extractQuote(a.name) !== 'USDT' &&\n                extractQuote(b.name) === 'USDT'\n              ? 1\n              : 0,\n          )\n          .sort((a, b) =>\n            extractBase(a.name) < extractBase(b.name)\n              ? -1\n              : extractBase(a.name) > extractBase(b.name)\n              ? 1\n              : 0,\n          )\n          .map(({ address, name, deprecated }, i) => (\n            <Option\n              value={address.toBase58()}\n              key={address}\n              name={name}\n              style={{\n                padding: '10px',\n                // @ts-ignore\n                backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\n              }}\n            >\n              {name} {deprecated ? ' (Deprecated)' : null}\n            </Option>\n          ))}\n      </OptGroup>\n    </Select>\n  );\n}\n\nconst DeprecatedMarketsPage = ({ switchToLiveMarkets }) => {\n  return (\n    <>\n      <Row>\n        <Col flex=\"auto\">\n          <DeprecatedMarketsInstructions\n            switchToLiveMarkets={switchToLiveMarkets}\n          />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst RenderNormal = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <Row\n      style={{\n        minHeight: '900px',\n        flexWrap: 'nowrap',\n      }}\n    >\n      <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n        <UserInfoTable />\n      </Col>\n      <Col flex={'360px'} style={{ height: '100%' }}>\n        <Orderbook smallScreen={false} onPrice={onPrice} onSize={onSize} />\n        <TradesTable smallScreen={false} />\n      </Col>\n      <Col\n        flex=\"400px\"\n        style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n      >\n        <TradeForm setChangeOrderRef={onChangeOrderRef} />\n        <StandaloneBalancesDisplay />\n      </Col>\n    </Row>\n  );\n};\n\nconst RenderSmall = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <>\n      <Row\n        style={{\n          height: '900px',\n        }}\n      >\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n          <Orderbook\n            smallScreen={true}\n            depth={13}\n            onPrice={onPrice}\n            onSize={onSize}\n          />\n        </Col>\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n          <TradesTable smallScreen={true} />\n        </Col>\n        <Col\n          flex=\"400px\"\n          style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n        >\n          <TradeForm setChangeOrderRef={onChangeOrderRef} />\n          <StandaloneBalancesDisplay />\n        </Col>\n      </Row>\n      <Row>\n        <Col flex=\"auto\">\n          <UserInfoTable />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst RenderSmaller = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <>\n      <Row>\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <TradeForm style={{ flex: 1 }} setChangeOrderRef={onChangeOrderRef} />\n        </Col>\n        <Col xs={24} sm={12}>\n          <StandaloneBalancesDisplay />\n        </Col>\n      </Row>\n      <Row\n        style={{\n          height: '500px',\n        }}\n      >\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <Orderbook smallScreen={true} onPrice={onPrice} onSize={onSize} />\n        </Col>\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <TradesTable smallScreen={true} />\n        </Col>\n      </Row>\n      <Row>\n        <Col flex=\"auto\">\n          <UserInfoTable />\n        </Col>\n      </Row>\n    </>\n  );\n};\n","import React from 'react';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport {\n  getMarketInfos,\n  useAllMarkets,\n  useAllOpenOrders,\n  useMarket,\n} from '../utils/markets';\nimport OpenOrderTable from '../components/UserInfoTable/OpenOrderTable';\nimport { Button } from 'antd';\nimport { OrderWithMarketAndMarketName } from '../utils/types';\n\nexport default function OpenOrdersPage() {\n  const { openOrders, loaded, refreshOpenOrders } = useAllOpenOrders();\n  let { customMarkets } = useMarket();\n  let marketInfos = getMarketInfos(customMarkets);\n  let marketAddressesToNames = Object.fromEntries(\n    marketInfos.map((info) => [info.address.toBase58(), info.name]),\n  );\n  let [allMarkets] = useAllMarkets(customMarkets);\n  const marketsByAddress = Object.fromEntries(\n    (allMarkets || []).map((marketInfo) => [\n      marketInfo.market.address.toBase58(),\n      marketInfo.market,\n    ]),\n  );\n\n  const dataSource: OrderWithMarketAndMarketName[] = (openOrders || [])\n    .map((orderInfos) =>\n      orderInfos.orders.map((order) => {\n        return {\n          marketName: marketAddressesToNames[orderInfos.marketAddress],\n          market: marketsByAddress[orderInfos.marketAddress],\n          ...order,\n        };\n      }),\n    )\n    .flat();\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <Button onClick={refreshOpenOrders} loading={!loaded}>\n        Refresh\n      </Button>\n      <OpenOrderTable\n        openOrders={dataSource}\n        pageSize={25}\n        loading={!loaded}\n        onCancelSuccess={refreshOpenOrders}\n        marketFilter\n      />\n    </FloatingElement>\n  );\n}\n","import React, { useState } from 'react';\nimport DataTable from '../layout/DataTable';\nimport { Button, Row } from 'antd';\nimport { settleAllFunds } from '../../utils/send';\nimport { notify } from '../../utils/notifications';\nimport { useConnection } from '../../utils/connection';\nimport { useWallet } from '../../utils/wallet';\nimport {\n  useAllMarkets,\n  useMarket,\n  useSelectedTokenAccounts,\n  useTokenAccounts,\n} from '../../utils/markets';\nimport StandaloneTokenAccountsSelect from '../StandaloneTokenAccountSelect';\nimport { abbreviateAddress } from '../../utils/utils';\nimport { PublicKey } from '@solana/web3.js';\n\nexport default function WalletBalancesTable({\n  walletBalances,\n}: {\n  walletBalances: {\n    coin: string;\n    mint: string;\n    walletBalance: number;\n    openOrdersFree: number;\n    openOrdersTotal: number;\n  }[];\n}) {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n  const [tokenAccounts, tokenAccountsConnected] = useTokenAccounts();\n  const { customMarkets } = useMarket();\n  const [allMarkets, allMarketsConnected] = useAllMarkets(customMarkets);\n  const [settlingFunds, setSettlingFunds] = useState(false);\n\n  async function onSettleFunds() {\n    setSettlingFunds(true);\n    try {\n      if (!tokenAccounts || !tokenAccountsConnected) {\n        notify({\n          message: 'Error settling funds',\n          description: 'TokenAccounts not connected',\n          type: 'error',\n        });\n        return;\n      }\n      if (!allMarkets || !allMarketsConnected) {\n        notify({\n          message: 'Error settling funds',\n          description: 'Markets not connected',\n          type: 'error',\n        });\n        return;\n      }\n      await settleAllFunds({\n        connection,\n        tokenAccounts,\n        selectedTokenAccounts,\n        wallet,\n        markets: allMarkets.map((marketInfo) => marketInfo.market),\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSettlingFunds(false);\n    }\n  }\n\n  const columns = [\n    {\n      title: 'Coin',\n      key: 'coin',\n      width: '20%',\n      render: (walletBalance) => (\n        <Row align=\"middle\">\n          <a\n            href={`https://explorer.solana.com/address/${walletBalance.mint}`}\n            target={'_blank'}\n            rel=\"noopener noreferrer\"\n          >\n            {walletBalance.coin ||\n              abbreviateAddress(new PublicKey(walletBalance.mint))}\n          </a>\n        </Row>\n      ),\n    },\n    {\n      title: 'Wallet Balance',\n      dataIndex: 'walletBalance',\n      key: 'walletBalance',\n      width: '20%',\n    },\n    {\n      title: 'Open orders total balances',\n      dataIndex: 'openOrdersTotal',\n      key: 'openOrdersTotal',\n      width: '20%',\n    },\n    {\n      title: 'Unsettled balances',\n      dataIndex: 'openOrdersFree',\n      key: 'openOrdersFree',\n      width: '20%',\n    },\n    {\n      title: 'Selected token account',\n      key: 'selectTokenAccount',\n      width: '20%',\n      render: (walletBalance) => (\n        <Row align=\"middle\" style={{ width: '430px' }}>\n          <StandaloneTokenAccountsSelect\n            accounts={tokenAccounts?.filter(\n              (t) => t.effectiveMint.toBase58() === walletBalance.mint,\n            )}\n            mint={walletBalance.mint}\n          />\n        </Row>\n      ),\n    },\n  ];\n  return (\n    <React.Fragment>\n      <DataTable\n        emptyLabel=\"No balances\"\n        dataSource={walletBalances}\n        columns={columns}\n        pagination={false}\n      />\n      {connected && (\n        <Button onClick={onSettleFunds} loading={settlingFunds}>\n          Settle all funds\n        </Button>\n      )}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { Tabs } from 'antd';\nimport {\n  useAllOpenOrdersBalances,\n  useWalletBalancesForAllMarkets,\n} from '../utils/markets';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport WalletBalancesTable from '../components/UserInfoTable/WalletBalancesTable';\nimport { useMintToTickers } from '../utils/tokens';\n\nconst { TabPane } = Tabs;\n\nexport default function BalancesPage() {\n  const walletBalances = useWalletBalancesForAllMarkets();\n  const mintToTickers = useMintToTickers();\n  const openOrdersBalances = useAllOpenOrdersBalances();\n\n  const data = (walletBalances || []).map((balance) => {\n    const balances = {\n      coin: mintToTickers[balance.mint],\n      mint: balance.mint,\n      walletBalance: balance.balance,\n      openOrdersFree: 0,\n      openOrdersTotal: 0,\n    };\n    for (let openOrdersAccount of openOrdersBalances[balance.mint] || []) {\n      balances['openOrdersFree'] += openOrdersAccount.free;\n      balances['openOrdersTotal'] += openOrdersAccount.total;\n    }\n    return balances;\n  });\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <Tabs defaultActiveKey=\"walletBalances\">\n        <TabPane tab=\"Wallet Balances\" key=\"walletBalances\">\n          <WalletBalancesTable walletBalances={data} />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n","import React from 'react';\nimport { Button, Popover } from 'antd';\nimport { InfoCircleOutlined, UserOutlined } from '@ant-design/icons';\nimport { useWallet } from '../utils/wallet';\nimport LinkAddress from './LinkAddress';\n\nexport default function WalletConnect() {\n  const { connected, wallet } = useWallet();\n  const publicKey = wallet?.publicKey?.toBase58();\n\n  return (\n    <React.Fragment>\n      <Button\n        type=\"text\"\n        size=\"large\"\n        onClick={connected ? wallet.disconnect : wallet.connect}\n        style={{ color: '#2abdd2' }}\n      >\n        <UserOutlined />\n        {!connected ? 'Connect wallet' : 'Disconnect'}\n      </Button>\n      {connected && (\n        <Popover\n          content={<LinkAddress address={publicKey} />}\n          placement=\"bottomRight\"\n          title=\"Wallet public key\"\n          trigger=\"click\"\n        >\n          <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n        </Popover>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Button, Col, Input, Row, Select, Typography } from 'antd';\nimport styled from 'styled-components';\nimport { Market, Orderbook } from '@project-serum/serum';\nimport {\n  getExpectedFillPrice,\n  getMarketDetails,\n  getMarketInfos,\n  getMarketOrderPrice,\n  getSelectedTokenAccountForMint,\n  useBalances,\n  useMarket,\n  useTokenAccounts,\n} from '../utils/markets';\nimport { notify } from '../utils/notifications';\nimport { useWallet } from '../utils/wallet';\nimport { useConnection, useSendConnection } from '../utils/connection';\nimport { placeOrder } from '../utils/send';\nimport { floorToDecimal, getDecimalCount } from '../utils/utils';\nimport FloatingElement from './layout/FloatingElement';\nimport WalletConnect from './WalletConnect';\nimport { SwapOutlined } from '@ant-design/icons';\nimport { CustomMarketInfo } from '../utils/types';\nimport Wallet from '@project-serum/sol-wallet-adapter';\n\nconst { Option } = Select;\nconst { Title } = Typography;\n\nconst ActionButton = styled(Button)`\n  color: #2abdd2;\n  background-color: #212734;\n  border-width: 0px;\n`;\n\nconst ConvertButton = styled(Button)`\n  background: #02bf76;\n  border-color: #02bf76;\n`;\n\nexport default function ConvertForm() {\n  const { connected, wallet } = useWallet();\n  const { customMarkets } = useMarket();\n  const marketInfos = getMarketInfos(customMarkets);\n  const { market, setMarketAddress } = useMarket();\n\n  const [fromToken, setFromToken] = useState<string | undefined>(undefined);\n  const [toToken, setToToken] = useState<string | undefined>(undefined);\n  const [size, setSize] = useState<number | undefined>(undefined);\n\n  const marketInfosbyName = Object.fromEntries(\n    marketInfos.map((market) => [market.name, market]),\n  );\n\n  const tokenConvertMap: Map<string, Set<string>> = new Map();\n  Object.keys(marketInfosbyName).forEach((market) => {\n    let [base, quote] = market.split('/');\n    !tokenConvertMap.has(base)\n      ? tokenConvertMap.set(base, new Set([quote]))\n      : tokenConvertMap.set(\n          base,\n          new Set([...(tokenConvertMap.get(base) || []), quote]),\n        );\n    !tokenConvertMap.has(quote)\n      ? tokenConvertMap.set(quote, new Set([base]))\n      : tokenConvertMap.set(\n          quote,\n          new Set([...(tokenConvertMap.get(quote) || []), base]),\n        );\n  });\n\n  const setMarket = (toToken) => {\n    const marketInfo = marketInfos\n      .filter((marketInfo) => !marketInfo.deprecated)\n      .find(\n        (marketInfo) =>\n          marketInfo.name === `${fromToken}/${toToken}` ||\n          marketInfo.name === `${toToken}/${fromToken}`,\n      );\n    if (!marketInfo) {\n      console.warn(\n        `Could not find market info for market names ${fromToken}/${toToken} or ${toToken}/${fromToken}`,\n      );\n      notify({\n        message: 'Invalid market',\n        type: 'error',\n      });\n      return;\n    }\n    setMarketAddress(marketInfo.address.toBase58());\n    setToToken(toToken);\n  };\n\n  return (\n    <FloatingElement style={{ maxWidth: 500 }}>\n      <Title level={3}>Convert</Title>\n      {!connected && (\n        <Row justify=\"center\">\n          <Col>\n            <WalletConnect />\n          </Col>\n        </Row>\n      )}\n      {tokenConvertMap && connected && (\n        <>\n          <Row style={{ marginBottom: 8 }}>\n            <Col>\n              <Select\n                style={{ minWidth: 300 }}\n                placeholder=\"Select a token\"\n                value={fromToken}\n                onChange={(token) => {\n                  setFromToken(token);\n                  setToToken(undefined);\n                }}\n              >\n                {Array.from(tokenConvertMap.keys()).map((token) => (\n                  <Option value={token} key={token}>\n                    {token}\n                  </Option>\n                ))}\n              </Select>\n            </Col>\n          </Row>\n          {fromToken && (\n            <Row style={{ marginBottom: 8 }}>\n              <Col>\n                <Select\n                  style={{ minWidth: 300 }}\n                  value={toToken}\n                  onChange={setMarket}\n                >\n                  {[...(tokenConvertMap.get(fromToken) || [])].map((token) => (\n                    <Option value={token} key={token}>\n                      {token}\n                    </Option>\n                  ))}\n                </Select>\n              </Col>\n            </Row>\n          )}\n          {fromToken && toToken && (\n            <ConvertFormSubmit\n              size={size}\n              setSize={setSize}\n              fromToken={fromToken}\n              toToken={toToken}\n              wallet={wallet}\n              market={market}\n              customMarkets={customMarkets}\n            />\n          )}\n        </>\n      )}\n    </FloatingElement>\n  );\n}\n\nfunction ConvertFormSubmit({\n  size,\n  setSize,\n  fromToken,\n  toToken,\n  wallet,\n  market,\n  customMarkets,\n}: {\n  size: number | null | undefined;\n  setSize: (newSize: number | undefined) => void;\n  fromToken: string;\n  toToken: string;\n  wallet: Wallet;\n  market: Market | null | undefined;\n  customMarkets: CustomMarketInfo[];\n}) {\n  const [accounts] = useTokenAccounts();\n  const balances = useBalances();\n  const [fromAmount, setFromAmount] = useState<number | undefined>();\n  const [toAmount, setToAmount] = useState<number | undefined>();\n\n  const connection = useConnection();\n  const sendConnection = useSendConnection();\n\n  const [isConverting, setIsConverting] = useState(false);\n\n  const isFromTokenBaseOfMarket = (market) => {\n    const { marketName } = getMarketDetails(market, customMarkets);\n    if (!marketName) {\n      throw Error(\n        'Cannot determine if coin is quote or base because marketName is missing',\n      );\n    }\n    const [base] = marketName.split('/');\n    return fromToken === base;\n  };\n\n  const onConvert = async () => {\n    if (!market) {\n      console.warn('Market is null when attempting convert.');\n      notify({\n        message: 'Invalid market',\n        type: 'error',\n      });\n      return;\n    }\n    // get accounts\n    const baseCurrencyAccount = getSelectedTokenAccountForMint(\n      accounts,\n      market?.baseMintAddress,\n    );\n    const quoteCurrencyAccount = getSelectedTokenAccountForMint(\n      accounts,\n      market?.quoteMintAddress,\n    );\n\n    // get approximate price\n    let side;\n    try {\n      side = isFromTokenBaseOfMarket(market) ? 'sell' : 'buy';\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error placing order',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    }\n\n    const sidedOrderbookAccount =\n      // @ts-ignore\n      side === 'buy' ? market._decoded.asks : market._decoded.bids;\n    const orderbookData = await connection.getAccountInfo(\n      sidedOrderbookAccount,\n    );\n    if (!orderbookData?.data) {\n      notify({ message: 'Invalid orderbook data', type: 'error' });\n      return;\n    }\n    const decodedOrderbookData = Orderbook.decode(market, orderbookData.data);\n    const [bbo] =\n      decodedOrderbookData &&\n      decodedOrderbookData.getL2(1).map(([price]) => price);\n    if (!bbo) {\n      notify({ message: 'No best price found', type: 'error' });\n      return;\n    }\n    if (!size) {\n      notify({ message: 'Size not specified', type: 'error' });\n      return;\n    }\n\n    const tickSizeDecimals = getDecimalCount(market.tickSize);\n    const parsedPrice = getMarketOrderPrice(\n      decodedOrderbookData,\n      size,\n      tickSizeDecimals,\n    );\n\n    // round size\n    const sizeDecimalCount = getDecimalCount(market.minOrderSize);\n    const nativeSize = side === 'sell' ? size : size / parsedPrice;\n    const parsedSize = floorToDecimal(nativeSize, sizeDecimalCount);\n\n    setIsConverting(true);\n    try {\n      await placeOrder({\n        side,\n        price: parsedPrice,\n        size: parsedSize,\n        orderType: 'ioc',\n        market,\n        connection: sendConnection,\n        wallet,\n        baseCurrencyAccount: baseCurrencyAccount?.pubkey,\n        quoteCurrencyAccount: quoteCurrencyAccount?.pubkey,\n      });\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error placing order',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setIsConverting(false);\n    }\n  };\n\n  const getPrice = async () => {\n    try {\n      const side = isFromTokenBaseOfMarket(market) ? 'sell' : 'buy';\n      const sidedOrderbookAccount =\n        // @ts-ignore\n        side === 'buy' ? market._decoded.asks : market._decoded.bids;\n      const orderbookData = await connection.getAccountInfo(\n        sidedOrderbookAccount,\n      );\n      if (!orderbookData?.data || !market) {\n        return [null, null];\n      }\n      const decodedOrderbookData = Orderbook.decode(market, orderbookData.data);\n      const [bbo] =\n        decodedOrderbookData &&\n        decodedOrderbookData.getL2(1).map(([price]) => price);\n      if (!bbo || !size) {\n        return [null, null];\n      }\n      const tickSizeDecimals = getDecimalCount(market.tickSize);\n      const expectedPrice = getExpectedFillPrice(\n        decodedOrderbookData,\n        size,\n        tickSizeDecimals,\n      );\n      if (side === 'buy') {\n        return [expectedPrice.toFixed(6), 1];\n      } else {\n        return [1, expectedPrice.toFixed(6)];\n      }\n    } catch (e) {\n      console.log(`Got error ${e}`);\n      return [null, null];\n    }\n  };\n\n  useEffect(\n    () => {\n      getPrice().then(([fromAmount, toAmount]) => {\n        setFromAmount(fromAmount || undefined);\n        setToAmount(toAmount || undefined);\n      });\n    },\n    // eslint-disable-next-line\n    [market?.address.toBase58(), size],\n  );\n\n  const canConvert = market && size && size > 0;\n  const balance = balances.find(\n    (coinBalance) => coinBalance.coin === fromToken,\n  );\n  const availableBalance =\n    ((balance?.unsettled || 0) + (balance?.wallet || 0)) * 0.99;\n\n  return (\n    <React.Fragment>\n      <Row style={{ marginBottom: 8 }}>\n        <Col>\n          <Input\n            style={{ minWidth: 300 }}\n            addonBefore={`Size (${fromToken})`}\n            placeholder=\"Size\"\n            value={size === null ? undefined : size}\n            type=\"number\"\n            onChange={(e) => setSize(parseFloat(e.target.value) || undefined)}\n          />\n        </Col>\n      </Row>\n      <Row gutter={12} style={{ marginBottom: 8 }}>\n        <Col span={12}>\n          <ActionButton\n            block\n            size=\"large\"\n            onClick={() => setSize(floorToDecimal(availableBalance, 4))}\n          >\n            Max: {availableBalance.toFixed(4)}\n          </ActionButton>\n        </Col>\n        <Col span={12}>\n          <ConvertButton\n            block\n            type=\"primary\"\n            size=\"large\"\n            loading={isConverting}\n            onClick={onConvert}\n            disabled={!canConvert}\n          >\n            Convert\n          </ConvertButton>\n        </Col>\n      </Row>\n      {canConvert && (\n        <Row align=\"middle\" justify=\"center\">\n          <Col>\n            {fromAmount} {fromToken}\n          </Col>\n          <Col offset={1}>\n            <SwapOutlined />\n          </Col>\n          <Col offset={1}>\n            {toAmount} {toToken}\n          </Col>\n        </Row>\n      )}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport ConvertForm from '../components/ConvertForm';\nimport { Row, Col } from 'antd';\n\nconst Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 16px 16px;\n  .borderNone .ant-select-selector {\n    border: none !important;\n  }\n`;\n\nexport default function ConvertPage() {\n  return (\n    <Wrapper style={{ flex: 1, paddingTop: 10 }}>\n      <Row justify=\"center\">\n        <Col>\n          <ConvertForm />\n        </Col>\n      </Row>\n    </Wrapper>\n  );\n}\n","import React, { useContext } from 'react';\nimport { useLocalStorageState } from './utils';\nimport { useInterval } from './useInterval';\nimport { useConnection } from './connection';\nimport { useWallet } from './wallet';\nimport {\n  useAllMarkets,\n  useTokenAccounts,\n  useMarket,\n  useSelectedTokenAccounts,\n} from './markets';\nimport { settleAllFunds } from './send';\nimport { PreferencesContextValues } from './types';\n\nconst PreferencesContext = React.createContext<PreferencesContextValues | null>(\n  null,\n);\n\nexport function PreferencesProvider({ children }) {\n  const [autoSettleEnabled, setAutoSettleEnabled] = useLocalStorageState(\n    'autoSettleEnabled',\n    true,\n  );\n\n  const [tokenAccounts] = useTokenAccounts();\n  const { connected, wallet } = useWallet();\n  const { customMarkets } = useMarket();\n  const [marketList] = useAllMarkets(customMarkets);\n  const connection = useConnection();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n\n  useInterval(() => {\n    const autoSettle = async () => {\n      const markets = (marketList || []).map((m) => m.market);\n      try {\n        console.log('Auto settling');\n        await settleAllFunds({\n          connection,\n          wallet,\n          tokenAccounts: tokenAccounts || [],\n          markets,\n          selectedTokenAccounts,\n        });\n      } catch (e) {\n        console.log('Error auto settling funds: ' + e.message);\n      }\n    };\n\n    connected && wallet?.autoApprove && autoSettleEnabled && autoSettle();\n  }, 10000);\n\n  return (\n    <PreferencesContext.Provider\n      value={{\n        autoSettleEnabled,\n        setAutoSettleEnabled,\n      }}\n    >\n      {children}\n    </PreferencesContext.Provider>\n  );\n}\n\nexport function usePreferences() {\n  const context = useContext(PreferencesContext);\n  if (!context) {\n    throw new Error('Missing preferences context');\n  }\n  return {\n    autoSettleEnabled: context.autoSettleEnabled,\n    setAutoSettleEnabled: context.setAutoSettleEnabled,\n  };\n}\n","import React from 'react';\nimport { Switch, Typography } from 'antd';\nimport { usePreferences } from '../utils/preferences';\n\nconst { Paragraph } = Typography;\n\nexport default function Settings({ autoApprove }) {\n  const { autoSettleEnabled, setAutoSettleEnabled } = usePreferences();\n\n  return (\n    <div>\n      <Switch\n        style={{ marginRight: 10 }}\n        disabled={!autoApprove}\n        checked={autoApprove && autoSettleEnabled}\n        onChange={setAutoSettleEnabled}\n      />{' '}\n      Auto settle\n      {!autoApprove && (\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)', marginTop: 10 }}>\n          To use auto settle, first enable auto approval in your wallet\n        </Paragraph>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { Col, Input, Modal, Row } from 'antd';\nimport { EndpointInfo } from '../utils/types';\n\nexport default function CustomClusterEndpointDialog({\n  visible,\n  testingConnection,\n  onAddCustomEndpoint,\n  onClose,\n}: {\n  visible: boolean;\n  testingConnection: boolean;\n  onAddCustomEndpoint: (info: EndpointInfo) => void;\n  onClose?: () => void;\n}) {\n  const [customEndpoint, setCustomEndpoint] = useState('');\n  const [customEndpointName, setCustomEndpointName] = useState('');\n\n  const onSubmit = () => {\n    const fullEndpoint = 'https://' + customEndpoint;\n    const params = {\n      name: customEndpointName,\n      endpoint: fullEndpoint,\n      custom: true,\n    };\n    onAddCustomEndpoint(params);\n    onDoClose();\n  };\n  const onDoClose = () => {\n    setCustomEndpoint('');\n    setCustomEndpointName('');\n    onClose && onClose();\n  };\n  const canSubmit = customEndpoint !== '' && customEndpointName !== '';\n\n  return (\n    <Modal\n      title={'Add custom endpoint'}\n      visible={visible}\n      onOk={onSubmit}\n      okText={'Add'}\n      onCancel={onDoClose}\n      okButtonProps={{ disabled: !canSubmit, loading: testingConnection }}\n    >\n      <Row style={{ marginBottom: 8 }}>\n        <Col span={24}>\n          <Input\n            placeholder=\"Cluster Name\"\n            value={customEndpointName}\n            onChange={(e) => setCustomEndpointName(e.target.value)}\n          />\n        </Col>\n      </Row>\n      <Row style={{ marginBottom: 8 }}>\n        <Col span={24}>\n          <Input\n            placeholder=\"Cluster Endpoint\"\n            value={customEndpoint}\n            addonBefore={'https://'}\n            onChange={(e) => setCustomEndpoint(e.target.value)}\n          />\n        </Col>\n      </Row>\n    </Modal>\n  );\n}\n","import React, { useRef, useState } from 'react';\nimport { Select, Typography } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { TOKEN_MINTS } from '@project-serum/serum';\nimport apps from '@project-serum/awesome-serum';\n\nconst { Option } = Select;\n\nconst appsAndTokens = apps.concat(\n  TOKEN_MINTS.map((mint) => {\n    return {\n      name: `${mint.name} SPL`,\n      url: `https://explorer.solana.com/address/${mint.address.toBase58()}`,\n      description: `${mint.name} SPL token`,\n      icon: '',\n      tags: [\n        'token',\n        'blockchain',\n        'solana',\n        'spl',\n        'solana',\n        mint.address.toBase58(),\n      ],\n    };\n  }),\n);\n\ninterface App {\n  name: string;\n  url: string;\n  description: string;\n  tags: string[];\n}\n\nexport default function AppSearch(props) {\n  const [searchMatches, setSearchMatches] = useState<App[]>([]);\n  const [searchValue, setSearchValue] = useState<string | undefined>(undefined);\n\n  const matchApp = (searchString: string, app: App) => {\n    const lowerSearchStr = searchString.toLowerCase();\n    return (\n      app.name.toLowerCase().includes(lowerSearchStr) ||\n      app.tags.some(\n        (tag) =>\n          tag.toLowerCase().includes(lowerSearchStr) ||\n          lowerSearchStr.includes(tag.toLowerCase()),\n      )\n    );\n  };\n\n  const handleSearch = (value) => {\n    setSearchValue(value === '' ? undefined : value);\n    const filteredApps = appsAndTokens.filter((app) => matchApp(value, app));\n    setSearchMatches(filteredApps);\n  };\n\n  const handleSelect = (value, option) => {\n    window.open(option.href, '_blank');\n    handleClear();\n  };\n\n  const handleClear = () => {\n    setSearchMatches([]);\n    setSearchValue(undefined);\n  };\n\n  const options = searchMatches.map((d) => (\n    <Option key={d.name} value={d.name} href={d.url}>\n      <h3>{d.name}</h3>\n      <Typography.Text type=\"secondary\">\n        {d.url.replace('https://', '')}\n      </Typography.Text>\n    </Option>\n  ));\n\n  const ref = useRef<any>();\n  return (\n    <Select\n      ref={ref}\n      showSearch\n      allowClear\n      value={searchValue}\n      placeholder={\n        props.focussed || props.focussed === undefined\n          ? 'Search for dex, swap, wallet, token...'\n          : ''\n      }\n      onSearch={handleSearch}\n      onClear={handleClear}\n      onSelect={handleSelect}\n      onFocus={props.onFocus}\n      onBlur={() => {\n        props.onBlur();\n        handleClear();\n      }}\n      notFoundContent={null} // todo: make this search history\n      style={{\n        width: props.width || '300px',\n        transition: props.focussed ? 'width 0.1s ease 0.1s' : '',\n      }}\n      dropdownStyle={{\n        width: props.width || '300px',\n      }}\n      dropdownMatchSelectWidth={false}\n      suffixIcon={\n        <SearchOutlined onClick={() => ref.current && ref.current.focus()} />\n      }\n      filterOption={false}\n    >\n      {options}\n    </Select>\n  );\n}\n","import {\n  InfoCircleOutlined,\n  PlusCircleOutlined,\n  SettingOutlined,\n} from '@ant-design/icons';\nimport { Button, Col, Menu, Popover, Row, Select } from 'antd';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport logo from '../assets/logo.svg';\nimport styled from 'styled-components';\nimport { useWallet, WALLET_PROVIDERS } from '../utils/wallet';\nimport { ENDPOINTS, useConnectionConfig } from '../utils/connection';\nimport Settings from './Settings';\nimport CustomClusterEndpointDialog from './CustomClusterEndpointDialog';\nimport { EndpointInfo } from '../utils/types';\nimport { notify } from '../utils/notifications';\nimport { Connection } from '@solana/web3.js';\nimport WalletConnect from './WalletConnect';\nimport AppSearch from './AppSearch';\n\nconst Wrapper = styled.div`\n  background-color: #0d1017;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  padding: 0px 30px;\n  flex-wrap: wrap;\n`;\nconst LogoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  color: #2abdd2;\n  font-weight: bold;\n  cursor: pointer;\n  img {\n    height: 30px;\n    margin-right: 8px;\n  }\n`;\n\nconst EXTERNAL_LINKS = {\n  '/learn': 'https://serum-academy.com/en/serum-dex/',\n  '/add-market': 'https://serum-academy.com/en/add-market/',\n  '/wallet-support': 'https://serum-academy.com/en/wallet-support',\n  '/dex-list': 'https://serum-academy.com/en/dex-list/',\n  '/developer-resources': 'https://serum-academy.com/en/developer-resources/',\n  '/explorer': 'https://explorer.solana.com',\n  '/srm-faq': 'https://projectserum.com/srm-faq',\n  '/swap': 'https://swap.projectserum.com',\n};\n\nexport default function TopBar() {\n  const { connected, wallet, providerUrl, setProvider } = useWallet();\n  const {\n    endpoint,\n    endpointInfo,\n    setEndpoint,\n    availableEndpoints,\n    setCustomEndpoints,\n  } = useConnectionConfig();\n  const [addEndpointVisible, setAddEndpointVisible] = useState(false);\n  const [testingConnection, setTestingConnection] = useState(false);\n  const location = useLocation();\n  const history = useHistory();\n  const [searchFocussed, setSearchFocussed] = useState(false);\n\n  const handleClick = useCallback(\n    (e) => {\n      if (!(e.key in EXTERNAL_LINKS)) {\n        history.push(e.key);\n      }\n    },\n    [history],\n  );\n\n  const onAddCustomEndpoint = (info: EndpointInfo) => {\n    const existingEndpoint = availableEndpoints.some(\n      (e) => e.endpoint === info.endpoint,\n    );\n    if (existingEndpoint) {\n      notify({\n        message: `An endpoint with the given url already exists`,\n        type: 'error',\n      });\n      return;\n    }\n\n    const handleError = (e) => {\n      console.log(`Connection to ${info.endpoint} failed: ${e}`);\n      notify({\n        message: `Failed to connect to ${info.endpoint}`,\n        type: 'error',\n      });\n    };\n\n    try {\n      const connection = new Connection(info.endpoint, 'recent');\n      connection\n        .getEpochInfo()\n        .then((result) => {\n          setTestingConnection(true);\n          console.log(`testing connection to ${info.endpoint}`);\n          const newCustomEndpoints = [\n            ...availableEndpoints.filter((e) => e.custom),\n            info,\n          ];\n          setEndpoint(info.endpoint);\n          setCustomEndpoints(newCustomEndpoints);\n        })\n        .catch(handleError);\n    } catch (e) {\n      handleError(e);\n    } finally {\n      setTestingConnection(false);\n    }\n  };\n\n  const endpointInfoCustom = endpointInfo && endpointInfo.custom;\n  useEffect(() => {\n    const handler = () => {\n      if (endpointInfoCustom) {\n        setEndpoint(ENDPOINTS[0].endpoint);\n      }\n    };\n    window.addEventListener('beforeunload', handler);\n    return () => window.removeEventListener('beforeunload', handler);\n  }, [endpointInfoCustom, setEndpoint]);\n\n  return (\n    <>\n      <CustomClusterEndpointDialog\n        visible={addEndpointVisible}\n        testingConnection={testingConnection}\n        onAddCustomEndpoint={onAddCustomEndpoint}\n        onClose={() => setAddEndpointVisible(false)}\n      />\n      <Wrapper>\n        <LogoWrapper onClick={() => history.push('/')}>\n          <img src={logo} alt=\"\" />\n          {'SERUM'}\n        </LogoWrapper>\n        <Menu\n          mode=\"horizontal\"\n          onClick={handleClick}\n          selectedKeys={[location.pathname]}\n          style={{\n            borderBottom: 'none',\n            backgroundColor: 'transparent',\n            display: 'flex',\n            alignItems: 'flex-end',\n            flex: 1,\n          }}\n        >\n          <Menu.Item key=\"/\" style={{ margin: '0 10px 0 20px' }}>\n            TRADE\n          </Menu.Item>\n          {!searchFocussed && (\n            <Menu.Item key=\"/swap\" style={{ margin: '0 10px' }}>\n              <a\n                href={EXTERNAL_LINKS['/swap']}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                SWAP\n              </a>\n            </Menu.Item>\n          )}\n          {connected && (!searchFocussed || location.pathname === '/balances') && (\n            <Menu.Item key=\"/balances\" style={{ margin: '0 10px' }}>\n              BALANCES\n            </Menu.Item>\n          )}\n          {connected && (!searchFocussed || location.pathname === '/orders') && (\n            <Menu.Item key=\"/orders\" style={{ margin: '0 10px' }}>\n              ORDERS\n            </Menu.Item>\n          )}\n          {connected && (!searchFocussed || location.pathname === '/convert') && (\n            <Menu.Item key=\"/convert\" style={{ margin: '0 10px' }}>\n              CONVERT\n            </Menu.Item>\n          )}\n          {(!searchFocussed || location.pathname === '/list-new-market') && (\n            <Menu.Item key=\"/list-new-market\" style={{ margin: '0 10px' }}>\n              ADD MARKET\n            </Menu.Item>\n          )}\n          {!searchFocussed && (\n            <Menu.SubMenu\n              title=\"LEARN\"\n              onTitleClick={() =>\n                window.open(EXTERNAL_LINKS['/learn'], '_blank')\n              }\n              style={{ margin: '0 0px 0 10px' }}\n            >\n              <Menu.Item key=\"/add-market\">\n                <a\n                  href={EXTERNAL_LINKS['/add-market']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Adding a market\n                </a>\n              </Menu.Item>\n              <Menu.Item key=\"/wallet-support\">\n                <a\n                  href={EXTERNAL_LINKS['/wallet-support']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Supported wallets\n                </a>\n              </Menu.Item>\n              <Menu.Item key=\"/dex-list\">\n                <a\n                  href={EXTERNAL_LINKS['/dex-list']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  DEX list\n                </a>\n              </Menu.Item>\n              <Menu.Item key=\"/developer-resources\">\n                <a\n                  href={EXTERNAL_LINKS['/developer-resources']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Developer resources\n                </a>\n              </Menu.Item>\n              <Menu.Item key=\"/explorer\">\n                <a\n                  href={EXTERNAL_LINKS['/explorer']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Solana block explorer\n                </a>\n              </Menu.Item>\n              <Menu.Item key=\"/srm-faq\">\n                <a\n                  href={EXTERNAL_LINKS['/srm-faq']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  SRM FAQ\n                </a>\n              </Menu.Item>\n            </Menu.SubMenu>\n          )}\n        </Menu>\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            paddingRight: 5,\n          }}\n        >\n          <AppSearch\n            onFocus={() => setSearchFocussed(true)}\n            onBlur={() => setSearchFocussed(false)}\n            focussed={searchFocussed}\n            width={searchFocussed ? '350px' : '35px'}\n          />\n        </div>\n        <div>\n          <Row\n            align=\"middle\"\n            style={{ paddingLeft: 5, paddingRight: 5 }}\n            gutter={16}\n          >\n            <Col>\n              <PlusCircleOutlined\n                style={{ color: '#2abdd2' }}\n                onClick={() => setAddEndpointVisible(true)}\n              />\n            </Col>\n            <Col>\n              <Popover\n                content={endpoint}\n                placement=\"bottomRight\"\n                title=\"URL\"\n                trigger=\"hover\"\n              >\n                <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n              </Popover>\n            </Col>\n            <Col>\n              <Select\n                onSelect={setEndpoint}\n                value={endpoint}\n                style={{ marginRight: 8, width: '150px' }}\n              >\n                {availableEndpoints.map(({ name, endpoint }) => (\n                  <Select.Option value={endpoint} key={endpoint}>\n                    {name}\n                  </Select.Option>\n                ))}\n              </Select>\n            </Col>\n          </Row>\n        </div>\n        {connected && (\n          <div>\n            <Popover\n              content={<Settings autoApprove={wallet?.autoApprove} />}\n              placement=\"bottomRight\"\n              title=\"Settings\"\n              trigger=\"click\"\n            >\n              <Button style={{ marginRight: 8 }}>\n                <SettingOutlined />\n                Settings\n              </Button>\n            </Popover>\n          </div>\n        )}\n        <div>\n          <Select onSelect={setProvider} value={providerUrl}>\n            {WALLET_PROVIDERS.map(({ name, url }) => (\n              <Select.Option value={url} key={url}>\n                {name}\n              </Select.Option>\n            ))}\n          </Select>\n        </div>\n        <div>\n          <WalletConnect />\n        </div>\n      </Wrapper>\n    </>\n  );\n}\n","export const helpUrls = {\n  customerSupport: 'https://t.me/ProjectSerum',\n  customerSupportZh: 'https://t.me/ProjectSerum_Chinese',\n  contactEmail: 'mailto:contact@projectserum.com',\n  discord: 'https://discord.gg/EDvudv6',\n  telegram: 'https://t.me/ProjectSerum',\n  github: 'https://github.com/project-serum',\n  projectSerum: 'https://projectserum.com/',\n  developerResources: 'https://projectserum.com/developer-resources',\n  solanaBeach: 'https://solanabeach.io',\n};\n","import React from 'react';\nimport { Layout, Row, Col, Grid } from 'antd';\nimport Link from './Link';\nimport { helpUrls } from './HelpUrls';\nconst { Footer } = Layout;\nconst { useBreakpoint } = Grid;\n\nconst footerElements = [\n  {\n    description: 'Serum Developer Resources',\n    link: helpUrls.developerResources,\n  },\n  { description: 'Discord', link: helpUrls.discord },\n  { description: 'Telegram', link: helpUrls.telegram },\n  { description: 'GitHub', link: helpUrls.github },\n  { description: 'Project Serum', link: helpUrls.projectSerum },\n  { description: 'Solana Network', link: helpUrls.solanaBeach },\n];\n\nexport const CustomFooter = () => {\n  const smallScreen = !useBreakpoint().lg;\n\n  return (\n    <Footer\n      style={{\n        height: '45px',\n        paddingBottom: 10,\n        paddingTop: 10,\n      }}\n    >\n      <Row align=\"middle\" gutter={[16, 4]}>\n        {!smallScreen && (\n          <>\n            <Col flex=\"auto\" />\n            {footerElements.map((elem, index) => {\n              return (\n                <Col key={index + ''}>\n                  <Link external to={elem.link}>\n                    {elem.description}\n                  </Link>\n                </Col>\n              );\n            })}\n          </>\n        )}\n        <Col flex=\"auto\">{/*  <DexProgramSelector />*/}</Col>\n      </Row>\n    </Footer>\n  );\n};\n","import { Layout } from 'antd';\nimport React from 'react';\nimport TopBar from './TopBar';\nimport { CustomFooter as Footer } from './Footer';\nconst { Header, Content } = Layout;\n\nexport default function BasicLayout({ children }) {\n  return (\n    <React.Fragment>\n      <Layout\n        style={{ display: 'flex', minHeight: '100vh', flexDirection: 'column' }}\n      >\n        <Header style={{ padding: 0, minHeight: 64, height: 'unset' }}>\n          <TopBar />\n        </Header>\n        <Content style={{ flex: 1 }}>{children}</Content>\n        <Footer />\n      </Layout>\n    </React.Fragment>\n  );\n}\n","import { PublicKey } from '@solana/web3.js';\nimport React, { ReactElement, useMemo, useState } from 'react';\nimport { useAccountInfo } from '../utils/connection';\nimport { isValidPublicKey } from '../utils/utils';\nimport { ValidateStatus } from 'antd/lib/form/FormItem';\nimport { TokenInstructions } from '@project-serum/serum';\nimport { parseTokenMintData, useMintToTickers } from '../utils/tokens';\nimport { AutoComplete, Form, Tooltip } from 'antd';\nimport Link from './Link';\n\nexport interface MintInfo {\n  address: PublicKey;\n  decimals: number;\n}\n\nexport function useMintInput(\n  name,\n  label: string | ReactElement,\n  tooltip?: string | ReactElement,\n): [ReactElement, MintInfo | null] {\n  const [address, setAddress] = useState('');\n  const [accountInfo, loaded] = useAccountInfo(\n    isValidPublicKey(address) ? new PublicKey(address) : null,\n  );\n\n  const mintToTickers = useMintToTickers();\n  const options = useMemo(() => {\n    return Object.entries(mintToTickers)\n      .filter(\n        ([mintAddress, ticker]) =>\n          mintAddress.includes(address) ||\n          ticker.toLowerCase().includes(address.toLowerCase()),\n      )\n      .map(([mintAddress, ticker]) => ({\n        value: mintAddress,\n        label: (\n          <>\n            {ticker} ({mintAddress})\n          </>\n        ),\n      }));\n  }, [mintToTickers, address]);\n\n  const { validateStatus, hasFeedback, help, mintInfo } = useMemo(() => {\n    let validateStatus: ValidateStatus = '';\n    let hasFeedback = false;\n    let help: string | null = null;\n    let mintInfo: MintInfo | null = null;\n    if (address) {\n      hasFeedback = true;\n      if (accountInfo) {\n        if (\n          accountInfo.owner.equals(TokenInstructions.TOKEN_PROGRAM_ID) &&\n          accountInfo.data.length === 82\n        ) {\n          let parsed = parseTokenMintData(accountInfo.data);\n          if (parsed.initialized) {\n            validateStatus = 'success';\n            mintInfo = {\n              address: new PublicKey(address),\n              decimals: parsed.decimals,\n            };\n          } else {\n            validateStatus = 'error';\n            help = 'Invalid SPL mint';\n          }\n        } else {\n          validateStatus = 'error';\n          help = 'Invalid SPL mint address';\n        }\n      } else if (isValidPublicKey(address) && !loaded) {\n        validateStatus = 'validating';\n      } else {\n        validateStatus = 'error';\n        help = 'Invalid Solana address';\n      }\n    }\n    return { validateStatus, hasFeedback, help, mintInfo };\n  }, [address, accountInfo, loaded]);\n\n  const input = (\n    <Form.Item\n      label={\n        <Tooltip\n          title={\n            <>\n              {tooltip} You can look up token mint addresses on{' '}\n              <Link external to=\"https://sollet.io\">\n                sollet.io\n              </Link>\n              .\n            </>\n          }\n        >\n          {label}\n        </Tooltip>\n      }\n      name={name}\n      validateStatus={validateStatus}\n      hasFeedback={hasFeedback}\n      help={help}\n    >\n      <AutoComplete\n        options={options}\n        value={address}\n        onChange={(value) => setAddress(value)}\n      />\n    </Form.Item>\n  );\n\n  return [input, mintInfo];\n}\n","import React, { useState } from 'react';\nimport { Button, Form, Input, Tooltip, Typography } from 'antd';\nimport { notify } from '../utils/notifications';\nimport { MARKETS } from '@project-serum/serum';\nimport { useConnection } from '../utils/connection';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport styled from 'styled-components';\nimport { useWallet } from '../utils/wallet';\nimport { listMarket } from '../utils/send';\nimport { useMintInput } from '../components/useMintInput';\n\nconst { Text, Title } = Typography;\n\nconst Wrapper = styled.div`\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nexport default function ListNewMarketPage() {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [baseMintInput, baseMintInfo] = useMintInput(\n    'baseMint',\n    <Text>\n      Base Token Mint Address{' '}\n      <Text type=\"secondary\">\n        (e.g. BTC solana address:{' '}\n        {\n          <Text type=\"secondary\" code>\n            9n4nbM75f5Ui33ZbPYXn59EwSgE8CGsHtAeTH5YFeJ9E\n          </Text>\n        }\n        )\n      </Text>\n    </Text>,\n    'The base token is the token being traded. For example, the base token of a BTC/USDT market is BTC.',\n  );\n  const [quoteMintInput, quoteMintInfo] = useMintInput(\n    'quoteMint',\n    <Text>\n      Quote Token Mint Address{' '}\n      <Text type=\"secondary\">\n        (e.g. USDT solana address:{' '}\n        {\n          <Text type=\"secondary\" code>\n            BQcdHdAQW1hczDbBi9hiegXAR7A98Q9jx3X3iBBBDiq4\n          </Text>\n        }\n        )\n      </Text>\n    </Text>,\n    'The quote token is the token used to price trades. For example, the quote token of a BTC/USDT market is USDT.',\n  );\n  const [lotSize, setLotSize] = useState('1');\n  const [tickSize, setTickSize] = useState('0.01');\n  const dexProgramId = MARKETS.find(({ deprecated }) => !deprecated).programId;\n  const [submitting, setSubmitting] = useState(false);\n\n  const [listedMarket, setListedMarket] = useState(null);\n\n  let baseLotSize;\n  let quoteLotSize;\n  if (baseMintInfo && parseFloat(lotSize) > 0) {\n    baseLotSize = Math.round(10 ** baseMintInfo.decimals * parseFloat(lotSize));\n    if (quoteMintInfo && parseFloat(tickSize) > 0) {\n      quoteLotSize = Math.round(\n        parseFloat(lotSize) *\n          10 ** quoteMintInfo.decimals *\n          parseFloat(tickSize),\n      );\n    }\n  }\n\n  const canSubmit =\n    connected &&\n    !!baseMintInfo &&\n    !!quoteMintInfo &&\n    !!baseLotSize &&\n    !!quoteLotSize;\n\n  async function onSubmit() {\n    if (!canSubmit) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const marketAddress = await listMarket({\n        connection,\n        wallet,\n        baseMint: baseMintInfo.address,\n        quoteMint: quoteMintInfo.address,\n        baseLotSize,\n        quoteLotSize,\n        dexProgramId,\n      });\n      setListedMarket(marketAddress);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error listing new market',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <Wrapper>\n      <FloatingElement>\n        <Title level={4}>List New Market</Title>\n        <Form\n          labelCol={{ span: 24 }}\n          wrapperCol={{ span: 24 }}\n          layout={'vertical'}\n          onFinish={onSubmit}\n        >\n          {baseMintInput}\n          {quoteMintInput}\n          <Form.Item\n            label={\n              <Tooltip title=\"Smallest allowed order size. For a BTC/USDT market, this would be in units of BTC.\">\n                Minimum Order Size{' '}\n                <Text type=\"secondary\">(Lot size in e.g. BTC)</Text>\n              </Tooltip>\n            }\n            name=\"lotSize\"\n            initialValue=\"1\"\n            validateStatus={\n              baseMintInfo && quoteMintInfo\n                ? baseLotSize\n                  ? 'success'\n                  : 'error'\n                : null\n            }\n            hasFeedback={baseMintInfo && quoteMintInfo}\n          >\n            <Input\n              value={lotSize}\n              onChange={(e) => setLotSize(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Tooltip title=\"Smallest amount by which prices can move. For a BTC/USDT market, this would be in units of USDT.\">\n                Tick Size{' '}\n                <Text type=\"secondary\">(Price increment in e.g. USDT)</Text>\n              </Tooltip>\n            }\n            name=\"tickSize\"\n            initialValue=\"0.01\"\n            validateStatus={\n              baseMintInfo && quoteMintInfo\n                ? quoteLotSize\n                  ? 'success'\n                  : 'error'\n                : null\n            }\n            hasFeedback={baseMintInfo && quoteMintInfo}\n          >\n            <Input\n              value={tickSize}\n              onChange={(e) => setTickSize(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <Form.Item label=\" \" colon={false}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              disabled={!canSubmit}\n              loading={submitting}\n            >\n              {connected ? 'Submit' : 'Not connected to wallet'}\n            </Button>\n          </Form.Item>\n        </Form>\n      </FloatingElement>\n      {listedMarket ? (\n        <FloatingElement>\n          <Text>New market address: {listedMarket.toBase58()}</Text>\n        </FloatingElement>\n      ) : null}\n    </Wrapper>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Button, Form, Input, Switch, Tooltip, Typography } from 'antd';\nimport { PublicKey } from '@solana/web3.js';\nimport { useConnection } from '../../utils/connection';\nimport FloatingElement from '../../components/layout/FloatingElement';\nimport styled from 'styled-components';\nimport { useWallet } from '../../utils/wallet';\nimport { sendSignedTransaction, signTransaction } from '../../utils/send';\nimport { useMintInput } from '../../components/useMintInput';\nimport { PoolTransactions } from '@project-serum/pool';\nimport { useTokenAccounts } from '../../utils/markets';\nimport BN from 'bn.js';\nimport { notify } from '../../utils/notifications';\nimport Link from '../../components/Link';\n\nconst { Text, Title } = Typography;\n\nconst Wrapper = styled.div`\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nconst AddRemoveTokenButtons = styled.div`\n  margin-top: 16px;\n  margin-bottom: 16px;\n`;\n\nconst DEFAULT_PROGRAM_ID = 'CkMC9rHPB6xu7pQ3L49KUEYL6rcLJ25aKLLPcrNe5wLv';\n\nexport default function NewPoolPage() {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [poolName, setPoolName] = useState('');\n  const [programId, setProgramId] = useState(DEFAULT_PROGRAM_ID);\n  const [initialSupply, setInitialSupply] = useState('1');\n  const [initialAssets, setInitialAssets] = useState<InitialAsset[]>([\n    { valid: false },\n    { valid: false },\n  ]);\n  const [adminControlled, setAdminControlled] = useState(false);\n  const [tokenAccounts] = useTokenAccounts();\n  const [submitting, setSubmitting] = useState(false);\n  const [newPoolAddress, setNewPoolAddress] = useState<PublicKey | null>(null);\n\n  const canSubmit =\n    connected &&\n    poolName.trim() &&\n    programId &&\n    parseFloat(initialSupply) > 0 &&\n    initialAssets.every((asset) => asset.valid) &&\n    tokenAccounts;\n\n  async function onSubmit() {\n    if (!canSubmit) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const assets = initialAssets as ValidInitialAsset[];\n      const [\n        poolAddress,\n        transactions,\n      ] = await PoolTransactions.initializeSimplePool({\n        connection,\n        programId: new PublicKey(programId),\n        poolName,\n        poolStateSpace: 1024,\n        poolMintDecimals: 6,\n        initialPoolMintSupply: new BN(\n          Math.round(10 ** 6 * parseFloat(initialSupply)),\n        ),\n        assetMints: assets.map((asset) => asset.mint),\n        initialAssetQuantities: assets.map((asset) => new BN(asset.quantity)),\n        creator: wallet.publicKey,\n        creatorAssets: assets.map((asset) => {\n          const found = tokenAccounts?.find((tokenAccount) =>\n            tokenAccount.effectiveMint.equals(asset.mint),\n          );\n          if (!found) {\n            throw new Error('No token account for ' + asset.mint.toBase58());\n          }\n          return found.pubkey;\n        }),\n        additionalAccounts: adminControlled\n          ? [{ pubkey: wallet.publicKey, isSigner: false, isWritable: false }]\n          : [],\n      });\n      const signed = await Promise.all(\n        transactions.map(({ transaction, signers }) =>\n          signTransaction({ transaction, wallet, signers, connection }),\n        ),\n      );\n      for (let signedTransaction of signed) {\n        await sendSignedTransaction({ signedTransaction, connection });\n      }\n      setNewPoolAddress(poolAddress);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error creating new pool',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <Wrapper>\n      <FloatingElement>\n        <Title level={4}>Create new pool</Title>\n        <Form layout=\"vertical\" onFinish={onSubmit}>\n          <Form.Item\n            label={\n              <Tooltip title=\"Public name of the pool.\">Pool Name</Tooltip>\n            }\n            name=\"name\"\n          >\n            <Input\n              value={poolName}\n              onChange={(e) => setPoolName(e.target.value)}\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Tooltip title=\"Address of the pool program.\">\n                Program ID{' '}\n                <Text type=\"secondary\">(e.g. {DEFAULT_PROGRAM_ID})</Text>\n              </Tooltip>\n            }\n            name=\"programId\"\n            initialValue={DEFAULT_PROGRAM_ID}\n          >\n            <Input\n              value={programId}\n              onChange={(e) => setProgramId(e.target.value)}\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Tooltip title=\"Initial number of pool tokens to mint to your account.\">\n                Initial Pool Token Supply\n              </Tooltip>\n            }\n            name=\"initialSupply\"\n            initialValue=\"1\"\n          >\n            <Input\n              value={initialSupply}\n              onChange={(e) => setInitialSupply(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <AddRemoveTokenButtons>\n            <Button\n              onClick={() =>\n                setInitialAssets((assets) => assets.concat({ valid: false }))\n              }\n            >\n              Add token\n            </Button>{' '}\n            <Button\n              onClick={() =>\n                setInitialAssets((assets) => assets.slice(0, assets.length - 1))\n              }\n              disabled={initialAssets.length <= 1}\n            >\n              Remove token\n            </Button>\n          </AddRemoveTokenButtons>\n          {initialAssets.map((asset, i) => (\n            <AssetInput setInitialAssets={setInitialAssets} index={i} key={i} />\n          ))}\n          <Form.Item\n            label={\n              <Tooltip title=\"Whether the assets in the pool can be controlled by the pool admin.\">\n                Admin Controlled\n              </Tooltip>\n            }\n            name=\"adminControlled\"\n          >\n            <Switch\n              checked={adminControlled}\n              onChange={(checked) => setAdminControlled(checked)}\n            />\n          </Form.Item>\n          <Form.Item label=\" \" colon={false}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              disabled={!canSubmit}\n              loading={submitting}\n            >\n              {connected ? 'Submit' : 'Not connected to wallet'}\n            </Button>\n          </Form.Item>\n        </Form>\n      </FloatingElement>\n      {newPoolAddress ? (\n        <FloatingElement>\n          <Text>\n            New pool address:{' '}\n            <Link to={`/pools/${newPoolAddress.toBase58()}`}>\n              {newPoolAddress.toBase58()}\n            </Link>\n          </Text>\n        </FloatingElement>\n      ) : null}\n    </Wrapper>\n  );\n}\n\ntype InitialAsset = { valid: false } | ValidInitialAsset;\ninterface ValidInitialAsset {\n  valid: true;\n  mint: PublicKey;\n  quantity: number;\n}\n\nfunction AssetInput({ setInitialAssets, index }) {\n  const [mintInput, mintInfo] = useMintInput(\n    `mint${index}`,\n    <Text>Token {index + 1} Mint Address</Text>,\n    <>Token mint address for token {index + 1}.</>,\n  );\n  const [quantity, setQuantity] = useState('');\n\n  useEffect(() => {\n    let change: InitialAsset;\n    if (mintInfo && parseFloat(quantity) >= 0) {\n      let parsedQuantity = Math.round(\n        10 ** mintInfo.decimals * parseFloat(quantity),\n      );\n      change = {\n        mint: mintInfo.address,\n        quantity: parsedQuantity,\n        valid: true,\n      };\n    } else {\n      change = { valid: false };\n    }\n    setInitialAssets((assets: InitialAsset[]) =>\n      assets.map((old, i) => (i === index ? change : old)),\n    );\n  }, [setInitialAssets, index, mintInfo, quantity]);\n\n  return (\n    <>\n      {mintInput}\n      <Form.Item\n        label={\n          <Tooltip\n            title={\n              <>\n                Initial quantity of token {index + 1} to deposit into the pool.\n              </>\n            }\n          >\n            Token {index + 1} Initial Quantity\n          </Tooltip>\n        }\n        name={`quantity${index}`}\n        validateStatus={'success'}\n      >\n        <Input\n          value={quantity}\n          onChange={(e) => setQuantity(e.target.value.trim())}\n          type=\"number\"\n          min=\"0\"\n          step=\"any\"\n        />\n      </Form.Item>\n    </>\n  );\n}\n","import React from 'react';\nimport { PublicKey } from '@solana/web3.js';\nimport { abbreviateAddress } from '../utils/utils';\nimport { useMintToTickers } from '../utils/tokens';\nimport { Popover } from 'antd';\nimport LinkAddress from './LinkAddress';\nimport { InfoCircleOutlined } from '@ant-design/icons';\n\nexport function MintName({\n  mint,\n  showAddress = false,\n}: {\n  mint: string | PublicKey | null | undefined;\n  showAddress?: boolean;\n}) {\n  const mintToTickers = useMintToTickers();\n  if (!mint) {\n    return null;\n  }\n  const mintKey = typeof mint === 'string' ? new PublicKey(mint) : mint;\n  const mintAddress = typeof mint === 'string' ? mint : mint.toBase58();\n  const ticker = mintToTickers[mintAddress] ?? abbreviateAddress(mintKey);\n\n  return (\n    <>\n      {ticker}\n      {showAddress ? (\n        <>\n          {' '}\n          <Popover\n            content={<LinkAddress address={mintAddress} />}\n            placement=\"bottomRight\"\n            title=\"Token mint\"\n            trigger=\"hover\"\n          >\n            <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n          </Popover>\n        </>\n      ) : null}\n    </>\n  );\n}\n","import { Basket, PoolInfo } from '@project-serum/pool';\nimport React from 'react';\nimport BN from 'bn.js';\nimport { PublicKey } from '@solana/web3.js';\nimport { useAccountInfo } from '../../../utils/connection';\nimport { parseTokenMintData } from '../../../utils/tokens';\nimport { Spin } from 'antd';\nimport { MintName } from '../../../components/MintName';\n\ninterface BasketDisplayProps {\n  poolInfo: PoolInfo;\n  basket?: Basket | null | undefined;\n}\n\nexport default function PoolBasketDisplay({\n  poolInfo,\n  basket,\n}: BasketDisplayProps) {\n  return (\n    <ul>\n      {poolInfo.state.assets.map((asset, index) => (\n        <BasketItem\n          key={index}\n          mint={asset.mint}\n          quantity={basket?.quantities[index]}\n        />\n      ))}\n    </ul>\n  );\n}\n\ninterface BasketItemProps {\n  mint: PublicKey;\n  quantity?: BN;\n}\n\nfunction BasketItem({ mint, quantity }: BasketItemProps) {\n  const [mintAccountInfo] = useAccountInfo(mint);\n  let quantityDisplay = <Spin size=\"small\" />;\n  if (mintAccountInfo && quantity) {\n    const mintInfo = parseTokenMintData(mintAccountInfo.data);\n    quantityDisplay = <>{quantity.toNumber() / 10 ** mintInfo.decimals}</>;\n  }\n\n  return (\n    <li>\n      {quantityDisplay} <MintName mint={mint} showAddress />\n    </li>\n  );\n}\n","import { getPoolBasket, PoolInfo } from '@project-serum/pool';\nimport React from 'react';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { Typography } from 'antd';\nimport { MintInfo } from '../../../utils/tokens';\nimport { useAsyncData } from '../../../utils/fetch-loop';\nimport { useConnection } from '../../../utils/connection';\nimport tuple from 'immutable-tuple';\nimport PoolBasketDisplay from './PoolBasketDisplay';\n\nconst { Text, Paragraph } = Typography;\n\ninterface PoolInfoProps {\n  poolInfo: PoolInfo;\n  mintInfo: MintInfo;\n}\n\nconst feeFormat = new Intl.NumberFormat(undefined, {\n  style: 'percent',\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 6,\n});\n\nexport default function PoolInfoPanel({ poolInfo, mintInfo }: PoolInfoProps) {\n  const connection = useConnection();\n\n  const [totalBasket] = useAsyncData(\n    () => getPoolBasket(connection, poolInfo, { redeem: mintInfo.supply }),\n    tuple(getPoolBasket, connection, poolInfo, 'total', mintInfo),\n  );\n\n  return (\n    <FloatingElement stretchVertical>\n      <Paragraph>Name: {poolInfo.state.name}</Paragraph>\n      <Paragraph>\n        Address: <Text copyable>{poolInfo.address.toBase58()}</Text>\n      </Paragraph>\n      <Paragraph>\n        Pool token mint address:{' '}\n        <Text copyable>{poolInfo.state.poolTokenMint.toBase58()}</Text>\n      </Paragraph>\n      {poolInfo.state.adminKey ? (\n        <Paragraph>\n          Pool admin: <Text copyable>{poolInfo.state.adminKey.toBase58()}</Text>\n        </Paragraph>\n      ) : null}\n      <Paragraph>\n        Fee rate: {feeFormat.format(poolInfo.state.feeRate / 1_000_000)}\n      </Paragraph>\n      <Paragraph>\n        Total supply: {mintInfo.supply.toNumber() / 10 ** mintInfo.decimals}\n      </Paragraph>\n      <Text>Total assets:</Text>\n      <div>\n        <PoolBasketDisplay poolInfo={poolInfo} basket={totalBasket} />\n      </div>\n    </FloatingElement>\n  );\n}\n","import { getPoolBasket, PoolInfo, PoolTransactions } from '@project-serum/pool';\nimport React, { useMemo, useState } from 'react';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { Button, Input, Spin, Tabs, Typography } from 'antd';\nimport { MintInfo } from '../../../utils/tokens';\nimport { useAsyncData } from '../../../utils/fetch-loop';\nimport { useConnection } from '../../../utils/connection';\nimport { PublicKey } from '@solana/web3.js';\nimport tuple from 'immutable-tuple';\nimport PoolBasketDisplay from './PoolBasketDisplay';\nimport BN from 'bn.js';\nimport { notify } from '../../../utils/notifications';\nimport { useWallet } from '../../../utils/wallet';\nimport { useTokenAccounts } from '../../../utils/markets';\nimport { sendTransaction } from '../../../utils/send';\n\nconst { Text } = Typography;\nconst { TabPane } = Tabs;\n\ninterface PoolCreateRedeemPanel {\n  poolInfo: PoolInfo;\n  mintInfo: MintInfo;\n}\n\nexport default function PoolCreateRedeemPanel({\n  poolInfo,\n  mintInfo,\n}: PoolCreateRedeemPanel) {\n  return (\n    <FloatingElement stretchVertical>\n      <Tabs>\n        <TabPane tab=\"Create\" key=\"create\">\n          <CreateRedeemTab\n            poolInfo={poolInfo}\n            mintInfo={mintInfo}\n            tab=\"create\"\n          />\n        </TabPane>\n        <TabPane tab=\"Redeem\" key=\"redeem\">\n          <CreateRedeemTab\n            poolInfo={poolInfo}\n            mintInfo={mintInfo}\n            tab=\"redeem\"\n          />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\ninterface CreateRedeemInnerPanel {\n  poolInfo: PoolInfo;\n  mintInfo: MintInfo;\n  tab: string;\n}\n\nfunction CreateRedeemTab({ poolInfo, mintInfo, tab }: CreateRedeemInnerPanel) {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [quantity, setQuantity] = useState('');\n  const [tokenAccounts] = useTokenAccounts();\n  const [submitting, setSubmitting] = useState(false);\n\n  const action = useMemo(() => {\n    const parsedQuantity = Math.round(\n      parseFloat(quantity) * 10 ** mintInfo.decimals,\n    );\n    if (parsedQuantity > 0) {\n      if (tab === 'create') {\n        return { create: new BN(parsedQuantity) };\n      } else {\n        return { redeem: new BN(parsedQuantity) };\n      }\n    }\n    return null;\n  }, [mintInfo.decimals, quantity, tab]);\n\n  const [basket, basketLoaded] = useAsyncData(\n    async () =>\n      action ? await getPoolBasket(connection, poolInfo, action) : null,\n    tuple(getPoolBasket, connection, poolInfo.address.toBase58(), action),\n  );\n\n  function findTokenAccount(mint: PublicKey): PublicKey {\n    const account = tokenAccounts?.find((account) =>\n      account.effectiveMint.equals(mint),\n    );\n    if (account) {\n      return account.pubkey;\n    }\n    throw new Error('No token account for ' + mint.toBase58());\n  }\n\n  const canSubmit = connected && action && basket;\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    if (!action || !basket || !connected || !canSubmit) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const { transaction, signers } = PoolTransactions.execute(\n        poolInfo,\n        action,\n        {\n          owner: wallet.publicKey,\n          poolTokenAccount: findTokenAccount(poolInfo.state.poolTokenMint),\n          assetAccounts: poolInfo.state.assets.map((asset) =>\n            findTokenAccount(asset.mint),\n          ),\n        },\n        basket,\n      );\n      await sendTransaction({ connection, wallet, transaction, signers });\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message:\n          'Error ' +\n          (tab === 'create' ? 'creating' : 'redeeming') +\n          ' pool tokens',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Input\n        addonBefore={<>Quantity</>}\n        value={quantity}\n        onChange={(e) => setQuantity(e.target.value.trim())}\n        style={{ marginBottom: 24 }}\n      />\n      <div>\n        {!basket ? (\n          basketLoaded ? null : (\n            <Spin />\n          )\n        ) : (\n          <>\n            <Text>{tab === 'create' ? 'Cost' : 'Proceeds'}: </Text>\n            <Text type=\"secondary\">(indicative only)</Text>\n            <PoolBasketDisplay poolInfo={poolInfo} basket={basket} />\n          </>\n        )}\n      </div>\n      <Button\n        htmlType=\"submit\"\n        type=\"primary\"\n        disabled={!canSubmit || submitting}\n      >\n        {!connected ? 'Wallet not connected' : 'Submit'}\n      </Button>\n    </form>\n  );\n}\n","import { PoolInfo } from '@project-serum/pool';\nimport React from 'react';\nimport { PublicKey } from '@solana/web3.js';\nimport { useAccountInfo } from '../../../utils/connection';\nimport {\n  parseTokenAccountData,\n  parseTokenMintData,\n} from '../../../utils/tokens';\nimport { Button, Spin, Tabs } from 'antd';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { useTokenAccounts } from '../../../utils/markets';\nimport { MintName } from '../../../components/MintName';\nimport { LinkOutlined } from '@ant-design/icons';\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\n\nconst { TabPane } = Tabs;\n\nexport default function PoolBalancesPanel({\n  poolInfo,\n}: {\n  poolInfo: PoolInfo;\n}) {\n  return (\n    <FloatingElement>\n      <Tabs>\n        <TabPane tab=\"Wallet Balances\" key=\"wallet\">\n          <WalletBalancesTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Pool Balances\" key=\"pool\">\n          <PoolBalancesTab poolInfo={poolInfo} />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\nfunction WalletBalancesTab({ poolInfo }: { poolInfo: PoolInfo }) {\n  const [tokenAccounts] = useTokenAccounts();\n  return (\n    <ul>\n      {[\n        poolInfo.state.poolTokenMint,\n        ...poolInfo.state.assets.map((asset) => asset.mint),\n      ].map((mint, index) => {\n        const tokenAccount = tokenAccounts?.find((account) =>\n          account.effectiveMint.equals(mint),\n        );\n        if (!tokenAccount) {\n          return null;\n        }\n        return (\n          <BalanceItem\n            key={index}\n            mint={mint}\n            publicKey={tokenAccount.pubkey}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction PoolBalancesTab({ poolInfo }: { poolInfo: PoolInfo }) {\n  return (\n    <ul>\n      {poolInfo.state.assets.map((asset, index) => {\n        return (\n          <BalanceItem\n            key={index}\n            mint={asset.mint}\n            publicKey={asset.vaultAddress}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\ninterface BalanceItemProps {\n  mint: PublicKey;\n  publicKey: PublicKey;\n}\n\nfunction BalanceItem({ mint, publicKey }: BalanceItemProps) {\n  const [mintAccountInfo] = useAccountInfo(mint);\n  const [balanceAccountInfo] = useAccountInfo(publicKey);\n  let quantityDisplay = <Spin size=\"small\" />;\n  if (mintAccountInfo && balanceAccountInfo) {\n    const mintInfo = parseTokenMintData(mintAccountInfo.data);\n    if (mint.equals(WRAPPED_SOL_MINT)) {\n      quantityDisplay = (\n        <>{balanceAccountInfo.lamports / 10 ** mintInfo.decimals}</>\n      );\n    } else {\n      const accountInfo = parseTokenAccountData(balanceAccountInfo.data);\n      quantityDisplay = <>{accountInfo.amount / 10 ** mintInfo.decimals}</>;\n    }\n  }\n\n  return (\n    <li>\n      {quantityDisplay} <MintName mint={mint} />{' '}\n      <Button\n        type=\"link\"\n        icon={<LinkOutlined />}\n        href={'https://explorer.solana.com/address/' + publicKey.toBase58()}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      />\n    </li>\n  );\n}\n","import React, { FormEvent, useMemo, useState } from 'react';\nimport { AdminControlledPoolInstructions, PoolInfo } from '@project-serum/pool';\nimport { TokenInstructions } from '@project-serum/serum';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { useConnection } from '../../../utils/connection';\nimport { useWallet } from '../../../utils/wallet';\nimport {\n  getSelectedTokenAccountForMint,\n  useTokenAccounts,\n} from '../../../utils/markets';\nimport { sendTransaction } from '../../../utils/send';\nimport { notify } from '../../../utils/notifications';\nimport { PublicKey, Transaction } from '@solana/web3.js';\nimport { AutoComplete, Button, Input, Select, Tabs } from 'antd';\nimport {\n  createAssociatedTokenAccount,\n  getAssociatedTokenAddress,\n} from '@project-serum/associated-token';\nimport { parseTokenMintData, useMintToTickers } from '../../../utils/tokens';\nimport BN from 'bn.js';\nimport { refreshAllCaches } from '../../../utils/fetch-loop';\n\nconst { TabPane } = Tabs;\nconst { Option } = Select;\n\nexport function PoolAdminPanel({ poolInfo }: { poolInfo: PoolInfo }) {\n  return (\n    <FloatingElement>\n      <Tabs>\n        <TabPane tab=\"Pause/Unpause\" key=\"pause\">\n          <PauseUnpauseTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Add Token\" key=\"addAsset\">\n          <AddAssetTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Remove Token\" key=\"removeAsset\">\n          <RemoveAssetTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Deposit\" key=\"deposit\">\n          <DepositTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Withdraw\" key=\"withdraw\">\n          <WithdrawTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Modify Fee\" key=\"updateFee\">\n          <UpdateFeeTab poolInfo={poolInfo} />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\ninterface TabParams {\n  poolInfo: PoolInfo;\n}\n\nfunction PauseUnpauseTab({ poolInfo }: TabParams) {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [submitting, setSubmitting] = useState(false);\n\n  async function sendPause() {\n    if (!connected) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const transaction = new Transaction();\n      transaction.add(AdminControlledPoolInstructions.pause(poolInfo));\n      await sendTransaction({ connection, wallet, transaction });\n    } catch (e) {\n      notify({\n        message: 'Error pausing pool',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  async function sendUnpause() {\n    if (!connected) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const transaction = new Transaction();\n      transaction.add(AdminControlledPoolInstructions.unpause(poolInfo));\n      await sendTransaction({ connection, wallet, transaction });\n    } catch (e) {\n      notify({\n        message: 'Error unpausing pool',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <>\n      <Button onClick={sendPause} disabled={submitting}>\n        Pause\n      </Button>{' '}\n      <Button onClick={sendUnpause} disabled={submitting}>\n        Unpause\n      </Button>\n    </>\n  );\n}\n\nfunction AddAssetTab({ poolInfo }: TabParams) {\n  const connection = useConnection();\n  const [address, setAddress] = useState('');\n  const { wallet, connected } = useWallet();\n  const canSubmit = connected && address;\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'adding asset to pool',\n    async () => {\n      const mintAddress = new PublicKey(address);\n      const vaultAddress = await getAssociatedTokenAddress(\n        poolInfo.state.vaultSigner,\n        mintAddress,\n      );\n      const transaction = new Transaction();\n      if (!(await connection.getAccountInfo(vaultAddress))) {\n        transaction.add(\n          await createAssociatedTokenAccount(\n            wallet.publicKey,\n            poolInfo.state.vaultSigner,\n            mintAddress,\n          ),\n        );\n      }\n      transaction.add(\n        AdminControlledPoolInstructions.addAsset(poolInfo, vaultAddress),\n      );\n      return transaction;\n    },\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <MintSelector\n        label=\"Token Mint Address\"\n        value={address}\n        onChange={(value) => setAddress(value)}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction RemoveAssetTab({ poolInfo }: TabParams) {\n  const [address, setAddress] = useState('');\n  const { connected } = useWallet();\n  const canSubmit = connected && address;\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'removing asset from pool',\n    async () => {\n      const mintAddress = new PublicKey(address);\n      const vaultAddress = poolInfo.state.assets.find((asset) =>\n        asset.mint.equals(mintAddress),\n      )?.vaultAddress;\n      if (!vaultAddress) {\n        throw new Error('Asset not in pool');\n      }\n      const transaction = new Transaction();\n      transaction.add(\n        AdminControlledPoolInstructions.removeAsset(poolInfo, vaultAddress),\n      );\n      return transaction;\n    },\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <MintInPoolSelector\n        poolInfo={poolInfo}\n        label=\"Token Mint Address\"\n        value={address}\n        onChange={(value) => setAddress(value)}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction DepositTab({ poolInfo }: TabParams) {\n  const [address, setAddress] = useState('');\n  const [quantity, setQuantity] = useState('');\n\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [tokenAccounts] = useTokenAccounts();\n  const canSubmit =\n    connected && address && tokenAccounts && parseFloat(quantity);\n\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'depositing to pool',\n    async () => {\n      const mintAddress = new PublicKey(address);\n      const vaultAddress = poolInfo.state.assets.find((asset) =>\n        asset.mint.equals(mintAddress),\n      )?.vaultAddress;\n      if (!vaultAddress) {\n        throw new Error('Asset not in pool');\n      }\n\n      const walletTokenAccount = getSelectedTokenAccountForMint(\n        tokenAccounts,\n        mintAddress,\n      );\n      if (!walletTokenAccount) {\n        throw new Error('Asset not in wallet');\n      }\n\n      const mintAccountInfo = await connection.getAccountInfo(mintAddress);\n      if (!mintAccountInfo) {\n        throw new Error('Mint not found');\n      }\n      const mintDecimals = parseTokenMintData(mintAccountInfo.data).decimals;\n      const parsedQuantity = Math.round(\n        parseFloat(quantity) * 10 ** mintDecimals,\n      );\n\n      const transaction = new Transaction();\n      transaction.add(\n        TokenInstructions.transfer({\n          source: walletTokenAccount.pubkey,\n          destination: vaultAddress,\n          amount: parsedQuantity,\n          owner: wallet.publicKey,\n        }),\n      );\n      return transaction;\n    },\n    true,\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <MintInPoolSelector\n        poolInfo={poolInfo}\n        label=\"Token Mint Address\"\n        value={address}\n        onChange={(value) => setAddress(value)}\n        style={{ marginBottom: 24 }}\n      />\n      <Input\n        addonBefore={<>Quantity</>}\n        value={quantity}\n        onChange={(e) => setQuantity(e.target.value.trim())}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction WithdrawTab({ poolInfo }: TabParams) {\n  const [address, setAddress] = useState('');\n  const [quantity, setQuantity] = useState('');\n\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [tokenAccounts] = useTokenAccounts();\n  const canSubmit =\n    connected && address && tokenAccounts && parseFloat(quantity);\n\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'withdrawing from pool',\n    async () => {\n      const mintAddress = new PublicKey(address);\n      const vaultAddress = poolInfo.state.assets.find((asset) =>\n        asset.mint.equals(mintAddress),\n      )?.vaultAddress;\n      if (!vaultAddress) {\n        throw new Error('Asset not in pool');\n      }\n\n      const walletTokenAccount = getSelectedTokenAccountForMint(\n        tokenAccounts,\n        mintAddress,\n      );\n      if (!walletTokenAccount) {\n        throw new Error('Asset not in wallet');\n      }\n\n      const mintAccountInfo = await connection.getAccountInfo(mintAddress);\n      if (!mintAccountInfo) {\n        throw new Error('Mint not found');\n      }\n      const mintDecimals = parseTokenMintData(mintAccountInfo.data).decimals;\n      const parsedQuantity = Math.round(\n        parseFloat(quantity) * 10 ** mintDecimals,\n      );\n\n      const transaction = new Transaction();\n      transaction.add(\n        AdminControlledPoolInstructions.approveDelegate(\n          poolInfo,\n          vaultAddress,\n          wallet.publicKey,\n          new BN(parsedQuantity),\n        ),\n        TokenInstructions.transfer({\n          source: vaultAddress,\n          destination: walletTokenAccount.pubkey,\n          amount: parsedQuantity,\n          owner: wallet.publicKey,\n        }),\n      );\n      return transaction;\n    },\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <MintInPoolSelector\n        poolInfo={poolInfo}\n        label=\"Token Mint Address\"\n        value={address}\n        onChange={(value) => setAddress(value)}\n        style={{ marginBottom: 24 }}\n      />\n      <Input\n        addonBefore={<>Quantity</>}\n        value={quantity}\n        onChange={(e) => setQuantity(e.target.value.trim())}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction UpdateFeeTab({ poolInfo }: TabParams) {\n  const [feeRate, setFeeRate] = useState('');\n\n  const { connected } = useWallet();\n  const [tokenAccounts] = useTokenAccounts();\n  const canSubmit = connected && tokenAccounts && parseFloat(feeRate);\n\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'changing pool fee',\n    async () => {\n      const transaction = new Transaction();\n      transaction.add(\n        AdminControlledPoolInstructions.updateFee(\n          poolInfo,\n          Math.round(parseFloat(feeRate) * 1_000_000),\n        ),\n      );\n      return transaction;\n    },\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Input\n        addonBefore={<>Fee Rate</>}\n        value={feeRate}\n        onChange={(e) => setFeeRate(e.target.value.trim())}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction useOnSubmitHandler(\n  description: string,\n  makeTransaction: () => Promise<Transaction | null | undefined>,\n  refresh = false,\n): [(FormEvent) => void, boolean] {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [submitting, setSubmitting] = useState(false);\n\n  async function onSubmit(e: FormEvent) {\n    e.preventDefault();\n    if (submitting) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      if (!connected) {\n        throw new Error('Wallet not connected');\n      }\n      const transaction = await makeTransaction();\n      if (!transaction) {\n        return;\n      }\n      await sendTransaction({ connection, wallet, transaction });\n      if (refresh) {\n        refreshAllCaches();\n      }\n    } catch (e) {\n      notify({\n        message: `Error ${description}`,\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return [onSubmit, submitting];\n}\n\nfunction SubmitButton({ canSubmit, submitting }) {\n  const { connected } = useWallet();\n  return (\n    <Button\n      htmlType=\"submit\"\n      type=\"primary\"\n      disabled={!canSubmit || submitting}\n    >\n      {!connected ? 'Wallet not connected' : 'Submit'}\n    </Button>\n  );\n}\n\nfunction MintInPoolSelector({\n  poolInfo,\n  label,\n  value,\n  onChange,\n  style,\n}: {\n  poolInfo: PoolInfo;\n  label: string;\n  value: string;\n  onChange: (string) => void;\n  style: any;\n}) {\n  const mintToTickers = useMintToTickers();\n  return (\n    <Input.Group style={style}>\n      <span className=\"ant-input-group-addon\">{label}</span>\n      <Select onChange={onChange} value={value} style={{ width: '100%' }}>\n        {poolInfo.state.assets.map((asset) => (\n          <Option value={asset.mint.toBase58()} key={asset.mint.toBase58()}>\n            {mintToTickers[asset.mint.toBase58()] ? (\n              <>\n                {mintToTickers[asset.mint.toBase58()]} ({asset.mint.toBase58()})\n              </>\n            ) : (\n              asset.mint.toBase58()\n            )}\n          </Option>\n        ))}\n      </Select>\n    </Input.Group>\n  );\n}\n\nfunction MintSelector({ label, style, value, onChange }) {\n  const mintToTickers = useMintToTickers();\n  const options = useMemo(() => {\n    return Object.entries(mintToTickers)\n      .filter(\n        ([mintAddress, ticker]) =>\n          mintAddress.includes(value) ||\n          ticker.toLowerCase().includes(value.toLowerCase()),\n      )\n      .map(([mintAddress, ticker]) => ({\n        value: mintAddress,\n        label: (\n          <>\n            {ticker} ({mintAddress})\n          </>\n        ),\n      }));\n  }, [mintToTickers, value]);\n  return (\n    <Input.Group style={style}>\n      <span className=\"ant-input-group-addon\">{label}</span>\n      <AutoComplete\n        options={options}\n        value={value}\n        onChange={(e) => onChange(e)}\n        style={{ width: '100%' }}\n      />\n    </Input.Group>\n  );\n}\n","import React, { useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Col, PageHeader, Row, Spin, Typography } from 'antd';\nimport { PublicKey } from '@solana/web3.js';\nimport { useAccountInfo } from '../../../utils/connection';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport {\n  decodePoolState,\n  isAdminControlledPool,\n  PoolInfo,\n} from '@project-serum/pool';\nimport PoolInfoPanel from './PoolInfoPanel';\nimport { parseTokenMintData } from '../../../utils/tokens';\nimport PoolCreateRedeemPanel from './PoolCreateRedeemPanel';\nimport PoolBalancesPanel from './PoolBalancesPanel';\nimport { useHistory } from 'react-router-dom';\nimport { PoolAdminPanel } from './PoolAdminPanel';\nimport { useWallet } from '../../../utils/wallet';\n\nconst { Text } = Typography;\n\nexport default function PoolPage() {\n  const { poolAddress } = useParams();\n  const [poolAccountInfo, poolAccountLoaded] = useAccountInfo(\n    isPublicKey(poolAddress) ? new PublicKey(poolAddress) : null,\n  );\n  const history = useHistory();\n\n  const poolInfo: PoolInfo | null = useMemo(() => {\n    if (!poolAccountInfo) {\n      return null;\n    }\n    try {\n      return {\n        address: new PublicKey(poolAddress),\n        state: decodePoolState(poolAccountInfo.data),\n        program: poolAccountInfo.owner,\n      };\n    } catch (e) {\n      return null;\n    }\n  }, [poolAddress, poolAccountInfo]);\n  const [mintAccountInfo, mintAccountInfoLoaded] = useAccountInfo(\n    poolInfo?.state.poolTokenMint,\n  );\n  const mintInfo = useMemo(\n    () => (mintAccountInfo ? parseTokenMintData(mintAccountInfo.data) : null),\n    [mintAccountInfo],\n  );\n  const { wallet } = useWallet();\n\n  if (poolInfo && mintInfo) {\n    return (\n      <>\n        <PageHeader\n          title={<>Pool {poolInfo.address.toBase58()}</>}\n          onBack={() => history.push('/pools')}\n          subTitle={poolInfo.state.name}\n        />\n        <Row>\n          <Col xs={24} lg={12}>\n            <PoolInfoPanel poolInfo={poolInfo} mintInfo={mintInfo} />\n          </Col>\n          <Col xs={24} lg={12}>\n            <PoolCreateRedeemPanel poolInfo={poolInfo} mintInfo={mintInfo} />\n          </Col>\n          <Col xs={24}>\n            <PoolBalancesPanel poolInfo={poolInfo} />\n          </Col>\n          {wallet.connected &&\n          poolInfo.state.adminKey?.equals(wallet.publicKey) &&\n          isAdminControlledPool(poolInfo) ? (\n            <Col xs={24}>\n              <PoolAdminPanel poolInfo={poolInfo} />\n            </Col>\n          ) : null}\n        </Row>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <PageHeader\n        title={<>Pool {poolAddress}</>}\n        onBack={() => history.push('/pools')}\n      />\n      <FloatingElement>\n        {!poolAccountLoaded || !mintAccountInfoLoaded ? (\n          <Spin />\n        ) : (\n          <Text>Invalid pool</Text>\n        )}\n      </FloatingElement>\n    </>\n  );\n}\n\nfunction isPublicKey(address) {\n  try {\n    new PublicKey(address);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n","import styled from 'styled-components';\nimport FloatingElement from '../../components/layout/FloatingElement';\nimport React, { useState } from 'react';\nimport { Button, Input, Typography } from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport Link from '../../components/Link';\n\nconst { Title } = Typography;\n\nconst Wrapper = styled.div`\n  max-width: 700px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  margin-top: 16px;\n  margin-bottom: 48px;\n`;\n\nexport default function PoolListPage() {\n  const [poolAddress, setPoolAddress] = useState('');\n  const history = useHistory();\n\n  function onSubmit(e) {\n    e.preventDefault();\n    history.push(`/pools/${poolAddress}`);\n  }\n  return (\n    <Wrapper>\n      <FloatingElement>\n        <Title level={3}>Pools</Title>\n        <Form onSubmit={onSubmit}>\n          <Input\n            value={poolAddress}\n            onChange={(e) => setPoolAddress(e.target.value.trim())}\n            placeholder=\"Pool address\"\n          />\n          <Button type=\"primary\" htmlType=\"submit\">\n            Go\n          </Button>\n        </Form>\n        <Link to=\"/pools/new\">Create new pool</Link>\n      </FloatingElement>\n    </Wrapper>\n  );\n}\n","import { HashRouter, Route, Switch } from 'react-router-dom';\nimport TradePage from './pages/TradePage';\nimport OpenOrdersPage from './pages/OpenOrdersPage';\nimport React from 'react';\nimport BalancesPage from './pages/BalancesPage';\nimport ConvertPage from './pages/ConvertPage';\nimport BasicLayout from './components/BasicLayout';\nimport ListNewMarketPage from './pages/ListNewMarketPage';\nimport NewPoolPage from './pages/pools/NewPoolPage';\nimport PoolPage from './pages/pools/PoolPage';\nimport PoolListPage from './pages/pools/PoolListPage';\n\nexport function Routes() {\n  return (\n    <>\n      <HashRouter basename={'/'}>\n        <BasicLayout>\n          <Switch>\n            <Route exact path=\"/\" component={TradePage} />\n            <Route exact path=\"/orders\" component={OpenOrdersPage} />\n            <Route exact path=\"/balances\" component={BalancesPage} />\n            <Route exact path=\"/convert\" component={ConvertPage} />\n            <Route\n              exact\n              path=\"/list-new-market\"\n              component={ListNewMarketPage}\n            />\n            <Route exact path=\"/pools\">\n              <PoolListPage />\n            </Route>\n            <Route exact path=\"/pools/new\">\n              <NewPoolPage />\n            </Route>\n            <Route exact path=\"/pools/:poolAddress\">\n              <PoolPage />\n            </Route>\n          </Switch>\n        </BasicLayout>\n      </HashRouter>\n    </>\n  );\n}\n","import React, { Suspense } from 'react';\nimport './App.less';\nimport { ConnectionProvider } from './utils/connection';\nimport { MarketProvider } from './utils/markets';\nimport { WalletProvider } from './utils/wallet';\nimport { GlobalStyle } from './global_style';\nimport { Spin } from 'antd';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { Routes } from './routes';\nimport { PreferencesProvider } from './utils/preferences';\n\nexport default function App() {\n  return (\n    <Suspense fallback={() => <Spin size=\"large\" />}>\n      <GlobalStyle />\n      <ErrorBoundary>\n        <ConnectionProvider>\n          <MarketProvider>\n            <WalletProvider>\n              <PreferencesProvider>\n                <Suspense fallback={() => <Spin size=\"large\" />}>\n                  <Routes />\n                </Suspense>\n              </PreferencesProvider>\n            </WalletProvider>\n          </MarketProvider>\n        </ConnectionProvider>\n      </ErrorBoundary>\n    </Suspense>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}