{"version":3,"sources":["../../src/token-instructions.js","../../src/layout.js","../../src/tokens_and_markets.ts","../../src/instructions.js","../../src/queue.ts","../../src/fees.ts","../../src/index.js","assets/logo.svg","../../src/market.ts","../../src/slab.ts","utils/utils.tsx","utils/fetch-loop.tsx","utils/connection.tsx","components/Link.js","utils/notifications.tsx","utils/wallet.tsx","utils/send.tsx","utils/tokens.tsx","utils/bonfidaConnector.tsx","utils/markets.tsx","global_style.ts","components/ErrorBoundary.jsx","utils/useInterval.tsx","components/layout/FloatingElement.jsx","components/Orderbook.jsx","utils/usePrevious.tsx","components/layout/DataTable.jsx","components/UserInfoTable/BalancesTable.jsx","components/UserInfoTable/OpenOrderTable.tsx","components/UserInfoTable/FillsTable.jsx","components/UserInfoTable/FeesTable.js","components/UserInfoTable/index.jsx","components/DepositDialog.jsx","components/StandaloneTokenAccountSelect.tsx","components/StandaloneBalancesDisplay.tsx","components/TradeForm.tsx","components/TradesTable.tsx","components/LinkAddress.tsx","components/DeprecatedMarketsInstructions.js","components/CustomMarketDialog.jsx","pages/TradePage.tsx","pages/OpenOrdersPage.tsx","components/UserInfoTable/WalletBalancesTable.tsx","pages/BalancesPage.tsx","components/WalletConnect.tsx","components/ConvertForm.tsx","pages/ConvertPage.tsx","utils/preferences.tsx","components/Settings.jsx","components/CustomClusterEndpointDialog.tsx","components/TopBar.tsx","components/HelpUrls.ts","components/Footer.tsx","components/BasicLayout.js","components/useMintInput.tsx","pages/ListNewMarketPage.jsx","pages/pools/NewPoolPage.tsx","pages/pools/PoolPage/PoolBasketDisplay.tsx","pages/pools/PoolPage/PoolInfoPanel.tsx","pages/pools/PoolPage/PoolCreateRedeemPanel.tsx","pages/pools/PoolPage/PoolBalancesPanel.tsx","pages/pools/PoolPage/index.tsx","pages/pools/PoolListPage.tsx","routes.tsx","App.tsx","serviceWorker.js","index.js"],"names":["BufferLayout","u8","layout_1","publicKeyLayout","LAYOUT","addVariant","struct","programId","exports","BNLayout","buffer_layout_1","Blob","b","feeTier","module","transaction","this","u32","zeros","isValidPublicKey","key","PublicKey","sleep","ms","a","Promise","resolve","setTimeout","percentFormat","Intl","NumberFormat","undefined","style","minimumFractionDigits","maximumFractionDigits","floorToDecimal","value","decimals","Math","floor","roundToDecimal","round","getDecimalCount","isNaN","toString","split","length","divideBnToNumber","numerator","denominator","quotient","div","toNumber","rem","umod","gcd","getTokenMultiplierFromDecimals","BN","pow","localStorageListeners","useLocalStorageStringState","defaultState","state","localStorage","getItem","useState","notify","useEffect","push","filter","listener","setState","useCallback","newState","removeItem","setItem","forEach","useLocalStorageState","JSON","stringify","stringState","setStringState","parse","isEqual","obj1","obj2","keys","Object","k","pageLoadTime","Date","globalCache","Map","FetchLoopListener","cacheKey","fn","refreshInterval","refreshIntervalOnError","callback","cacheNullValues","FetchLoopInternal","timeoutId","listeners","errors","refresh","clearTimeout","stopped","errored","data","console","log","set","notifyListeners","warn","waitTime","min","timeSincePageLoad","document","visibilityState","hasFocus","random","Set","previousRefreshInterval","add","assert","delete","map","refreshIntervalsOnError","x","size","globalLoops","loops","has","get","addListener","loop","removeListener","all","values","useAsyncData","asyncFn","useReducer","i","rerender","loaded","refreshCache","clearCache","ENDPOINTS","name","endpoint","custom","accountListenerCount","ConnectionContext","React","createContext","ConnectionProvider","children","setEndpoint","customEndpoints","setCustomEndpoints","availableEndpoints","concat","connection","useMemo","Connection","sendConnection","id","onAccountChange","Account","publicKey","removeAccountChangeListener","onSlotChange","removeSlotChangeListener","Provider","useConnection","context","useContext","Error","useSendConnection","useConnectionConfig","endpointInfo","find","info","useAccountInfo","tuple","toBase58","getAccountInfo","accountInfo","count","previousData","subscriptionId","e","equals","initializeOnly","setCache","currentItem","useAccountData","Link","external","props","to","rest","href","target","rel","message","description","txid","type","placement","color","slice","notification","opacity","backgroundColor","WALLET_PROVIDERS","url","WalletContext","WalletProvider","providerUrl","savedProviderUrl","setProviderUrl","wallet","Wallet","connected","setConnected","on","walletPublicKey","substring","disconnect","providerName","useWallet","setProvider","createTokenAccountTransaction","mintPublicKey","newAccount","Transaction","SystemProgram","getMinimumBalanceForRentExemption","TokenInstructions","TOKEN_PROGRAM_ID","fromPubkey","newAccountPubkey","lamports","space","instruction","createAccount","initializeAccount","account","mint","owner","signer","settleFunds","market","openOrders","baseCurrencyAccount","quoteCurrencyAccount","baseCurrencyAccountPubkey","pubkey","quoteCurrencyAccountPubkey","baseMintAddress","result","createAccountTransaction","createAccountSigner","quoteMintAddress","supportsReferralFees","TOKEN_MINTS","makeSettleFundsTransaction","settleFundsTransaction","settleFundsSigners","signers","mergeTransactions","sendTransaction","sendingMessage","settleAllFunds","tokenAccounts","markets","selectedTokenAccounts","programIds","reduce","cumulative","m","_programId","p","getOpenOrdersAccountsForProgramId","OpenOrders","findForOwner","openOrdersAccounts","baseTokenFree","quoteTokenFree","openOrdersAccountsForProgramIds","accounts","current","openOrdersAccount","_decoded","ownAddress","baseMint","quoteMint","selectedBaseTokenAccount","getSelectedTokenAccountForMint","selectedQuoteTokenAccount","settleTransactions","transactions","t","s","cancelOrder","params","cancelOrders","orders","order","makeMatchOrdersTransaction","makeCancelOrderInstruction","placeOrder","side","price","orderType","formattedMinOrderSize","minOrderSize","toFixed","formattedTickSize","tickSize","isIncrement","num","step","abs","payer","makePlaceOrderTransaction","placeOrderTx","listMarket","getVaultOwnerAndNonce","nonce","createProgramAddress","toBuffer","toArrayLike","Buffer","dexProgramId","vaultOwner","iaddn","baseLotSize","quoteLotSize","requestQueue","eventQueue","bids","asks","baseVault","quoteVault","feeRateBps","quoteDustThreshold","vaultSignerNonce","tx1","tx2","Market","getLayout","span","DexInstructions","initializeMarket","signTransaction","signedTransactions","signedTransaction","sendSignedTransaction","getUnixTs","getTime","sentMessage","successMessage","timeout","getRecentBlockhash","recentBlockhash","blockhash","setSigners","partialSign","rawTransaction","serialize","startTime","sendRawTransaction","skipPreflight","done","awaitTransactionSignatureConfirmation","reject","onSignature","err","getSignatureStatuses","signatureStatuses","confirmations","resultDescription","AccountInfoResult","executable","rentEpoch","GetMultipleAccountsAndContextRpcResult","array","union","jsonRpcVersion","literal","jsonrpc","error","jsonRpcResult","slot","getMultipleSolanaAccounts","publicKeys","args","commitment","_rpcRequest","unsafeRes","res","join","from","fromEntries","ACCOUNT_LAYOUT","MINT_LAYOUT","parseTokenAccountData","decode","amount","parseTokenMintData","initialized","supply","getOwnedAccountsFilters","memcmp","offset","offsetOf","bytes","dataSize","getOwnedTokenAccounts","filters","resp","bs58","every","filterBytes","getTokenAccountInfo","ownerAddress","splAccounts","parsedSplAccounts","effectiveMint","WRAPPED_SOL_MINT","useMintInfos","customMarkets","useMarket","useTokenAccounts","useAllMarkets","allMarkets","allMints","marketInfo","uniqueMints","stringMint","mintInfos","entries","BonfidaApi","path","fetch","URL","response","ok","json","responseJson","success","marketAddress","USE_MARKETS","MARKETS","getMarketInfos","load","address","marketName","_VERY_SLOW_REFRESH_INTERVAL","useUnmigratedOpenOrdersAccounts","deprecatedOpenOrdersAccounts","deprecatedProgramIds","Array","deprecated","publicKeyStr","baseTokenTotal","quoteTokenTotal","some","MarketContext","DEFAULT_MARKET","getMarketDetails","otherMarket","baseCurrency","token","baseLabel","quoteCurrency","quoteLabel","MarketProvider","setMarketAddress","setCustomMarkets","marketInfos","setMarket","then","catch","useSelectedTokenAccounts","useMarkPrice","markPrice","setMarkPrice","useOrderbook","orderbook","trades","limit","_useUnfilteredTrades","eventFlags","maker","trade","useTrades","bb","Number","ba","last","sort","getUnfilteredTrades","loadFills","useOrderbookAccounts","bidData","askData","bidOrderbook","Orderbook","askOrderbook","depth","getL2","useOpenOrdersAccounts","fast","getOpenOrdersAccounts","findOpenOrdersAccountsForOwner","useSelectedOpenOrdersAccount","selectedPubKey","filtered","useSelectedQuoteCurrencyAccount","mintAddress","useSelectedBaseCurrencyAccount","useSelectedQuoteCurrencyBalances","quoteSplSizeToNumber","useSelectedBaseCurrencyBalances","baseSplSizeToNumber","useAllOpenOrdersAccounts","stringProgramId","flat","useBalances","baseCurrencyBalances","quoteCurrencyBalances","baseExists","quoteExists","coin","sub","unsettled","useUnmigratedDeprecatedMarkets","marketsList","deps","getMarket","openOrdersList","customMarketsInfo","getMarketOrderPrice","cost","tickSizeDecimals","isBids","costAtLevel","spentCost","sendPrice","getExpectedFillPrice","sizeAtLevel","avgPrice","totalAvgPrice","GlobalStyle","createGlobalStyle","Title","Typography","ErrorBoundary","hasError","level","Component","useInterval","delay","savedCallback","useRef","setInterval","clearInterval","Wrapper","styled","FloatingElement","stretchVertical","height","SizeTitle","Row","MarkPriceTitle","Line","css","Price","smallScreen","onPrice","onSize","currentOrderbookData","lastOrderbookData","orderbookData","setOrderbookData","getCumulativeOrderbookSide","totalSize","backwards","cumulativeSize","sizePercent","reverse","sum","total","index","bidsToDisplay","asksToDisplay","flex","overflow","textAlign","OrderbookRow","onPriceClick","onSizeClick","MarkPriceComponent","memo","element","classList","contains","remove","formattedSize","formattedPrice","ref","marginBottom","onClick","data-width","data-bgcolor","prevProps","nextProps","previousMarkPrice","usePrevious","markPriceColor","formattedMarkPrice","justify","ArrowUpOutlined","marginRight","ArrowDownOutlined","DataTable","dataSource","columns","emptyLabel","pagination","loading","pageSize","renderEmpty","padding","display","justifyContent","alignItems","BalancesTable","balances","showMarket","hideWalletBalance","onSettleSuccess","title","dataIndex","render","ghost","onSettleFunds","CancelButton","Button","OpenOrderTable","onCancelSuccess","marketFilter","cancelId","setCancelId","orderId","marketFilters","orderInfos","text","onFilter","record","indexOf","fontWeight","charAt","toUpperCase","sorter","showSorterTooltip","icon","DeleteOutlined","cancel","FillsTable","fills","fill","useFills","liquidity","FeesTable","findFeeDiscountKeys","useFeeDiscountKeys","row","marginLeft","format","getFeeRates","taker","_","SRM_MINT","MSRM_MINT","marginTop","FeeScheduleTable","balance","Paragraph","TabPane","Tabs","Index","paddingTop","defaultActiveKey","tab","supportsSrmFeeDiscounts","OpenOrdersTab","filterForOpenOrders","useOpenOrders","BalancesTab","DepositDialog","coinMint","depositCoin","onClose","baseOrQuote","visible","onOk","onCancel","StandaloneTokenAccountsSelect","selectedValue","label","setSelectedTokenAccounts","Fragment","width","onSelect","newSelectedTokenAccounts","Option","Text","code","base58","abbreviateAddress","shape","CopyOutlined","navigator","clipboard","writeText","RowBox","Tip","ActionButton","StandaloneBalancesDisplay","setBaseOrQuote","formattedBalances","currency","borderColor","align","paddingBottom","block","SellButton","BuyButton","sliderMarks","0","25","50","75","100","TradeForm","setChangeOrderRef","setSide","postOnly","setPostOnly","ioc","setIoc","baseSize","setBaseSize","quoteSize","setQuoteSize","setPrice","submitting","setSubmitting","sizeFraction","setSizeFraction","quoteBalance","baseBalance","sizeDecimalCount","priceDecimalCount","doChangeOrder","onSliderChange","updateSizeFraction","onSetBaseSize","usePrice","maxSize","parseFloat","newSize","formatted","onSubmit","flexDirection","Group","onChange","buttonStyle","background","addonBefore","suffix","fontSize","compact","onSetQuoteSize","tipFormatter","marks","checked","disabled","PublicTrades","getRecentTrades","useBonfidaTrades","minHeight","maxHeight","paddingRight","overflowY","time","toLocaleTimeString","LinkAddress","LinkOutlined","DeprecatedMarketsInstructions","switchToLiveMarkets","openOrderAccountBalances","inOrdersBase","inOrdersQuote","unsettledBase","unsettledQuote","useBalancesForDeprecatedMarkets","marketsAndOrders","getOrders","loadOrdersForOwner","refreshOpenOrders","useGetOpenOrdersForDeprecatedMarkets","needToCancelOrders","filteredBalances","needToSettleFunds","CustomMarketDialog","onAddCustomMarket","marketId","setMarketId","marketLabel","setMarketLabel","setBaseLabel","setQuoteLabel","loadingMarket","setLoadingMarket","wellFormedMarketId","marketAccountInfo","resetLabels","finally","knownMarket","knownProgram","knownBaseCurrency","knownQuoteCurrency","canSubmit","onDoClose","okText","okButtonProps","placeholder","LoadingOutlined","gutter","Select","OptGroup","TradePage","handleDeprecated","setHandleDeprecated","addMarketVisible","setAddMarketVisible","deprecatedMarkets","window","innerHeight","innerWidth","dimensions","setDimensions","changeOrderRef","handleResize","addEventListener","removeEventListener","componentProps","onChangeOrderRef","getComponent","customMarket","newCustomMarkets","paddingLeft","MarketSelector","onDeleteCustomMarket","content","trigger","InfoCircleOutlined","PlusCircleOutlined","extractBase","extractQuote","selectedMarket","proposedMarket","showSearch","optionFilterProp","listHeight","filterOption","input","option","toLowerCase","stopPropagation","nativeEvent","stopImmediatePropagation","DeprecatedMarketsPage","RenderNormal","flexWrap","RenderSmall","RenderSmaller","xs","sm","OpenOrdersPage","openOrdersAccountsConnected","marketInfosConnected","openOrdersAccountsByAddress","marketsAddr","marketsByAddress","getAllOpenOrders","marketAddr","loadBids","loadAsks","useAllOpenOrders","marketAddressesToNames","WalletBalancesTable","walletBalances","tokenAccountsConnected","allMarketsConnected","settlingFunds","setSettlingFunds","walletBalance","BalancesPage","mintInfosConnected","parsedAccount","mintInfo","additionalAmount","useWalletBalancesForAllMarkets","mintToTickers","mintsToTickers","customMarketInfo","useMintToTickers","openOrdersBalances","loadedOpenOrdersAccounts","baseMintInfo","baseFree","baseTotal","quoteMintInfo","quoteFree","quoteTotal","free","useAllOpenOrdersBalances","openOrdersFree","openOrdersTotal","WalletConnect","connect","UserOutlined","ConvertButton","ConvertForm","fromToken","setFromToken","toToken","setToToken","setSize","marketInfosbyName","tokenConvertMap","base","quote","maxWidth","minWidth","ConvertFormSubmit","fromAmount","setFromAmount","toAmount","setToAmount","isConverting","setIsConverting","isFromTokenBaseOfMarket","onConvert","sidedOrderbookAccount","decodedOrderbookData","parsedPrice","parsedSize","getPrice","expectedPrice","canConvert","coinBalance","availableBalance","SwapOutlined","ConvertPage","PreferencesContext","PreferencesProvider","autoSettleEnabled","setAutoSettleEnabled","marketList","autoSettle","autoApprove","Settings","usePreferences","CustomClusterEndpointDialog","testingConnection","onAddCustomEndpoint","customEndpoint","setCustomEndpoint","customEndpointName","setCustomEndpointName","LogoWrapper","EXTERNAL_LINKS","TopBar","addEndpointVisible","setAddEndpointVisible","setTestingConnection","location","useLocation","history","useHistory","handleClick","endpointInfoCustom","handler","handleError","getEpochInfo","newCustomEndpoints","src","logo","alt","mode","selectedKeys","pathname","borderBottom","Item","SubMenu","onTitleClick","open","SettingOutlined","helpUrls","Footer","Layout","useBreakpoint","Grid","footerElements","link","CustomFooter","lg","elem","Header","Content","BasicLayout","useMintInput","tooltip","setAddress","validateStatus","hasFeedback","help","parsed","trim","ListNewMarketPage","baseMintInput","quoteMintInput","lotSize","setLotSize","setTickSize","listedMarket","setListedMarket","labelCol","wrapperCol","layout","onFinish","initialValue","colon","htmlType","AddRemoveTokenButtons","DEFAULT_PROGRAM_ID","NewPoolPage","poolName","setPoolName","setProgramId","initialSupply","setInitialSupply","valid","initialAssets","setInitialAssets","newPoolAddress","setNewPoolAddress","asset","assets","PoolTransactions","initializeSimplePool","poolStateSpace","poolMintDecimals","initialPoolMintSupply","assetMints","initialAssetQuantities","quantity","creator","creatorAssets","found","tokenAccount","poolAddress","signed","AssetInput","mintInput","setQuantity","change","parsedQuantity","old","PoolBasketDisplay","poolInfo","basket","BasketItem","quantities","mintAccountInfo","quantityDisplay","PoolInfoPanel","getPoolBasket","redeem","totalBasket","copyable","poolTokenMint","PoolCreateRedeemPanel","CreateRedeemTab","action","create","basketLoaded","findTokenAccount","preventDefault","execute","poolTokenAccount","assetAccounts","PoolBalancesPanel","WalletBalancesTab","PoolBalancesTab","BalanceItem","vaultAddress","balanceAccountInfo","PoolPage","useParams","isPublicKey","poolAccountInfo","poolAccountLoaded","decodePoolState","program","mintAccountInfoLoaded","onBack","subTitle","Form","form","PoolListPage","setPoolAddress","Routes","basename","exact","component","App","fallback","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.20dbdcc2.chunk.js","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.closeAccount = exports.mintTo = exports.setAuthority = exports.revoke = exports.approve = exports.transfer = exports.initializeAccount = exports.initializeMint = exports.decodeTokenInstructionData = exports.SRM_DECIMALS = exports.SRM_MINT = exports.MSRM_DECIMALS = exports.MSRM_MINT = exports.WRAPPED_SOL_MINT = exports.TOKEN_PROGRAM_ID = exports.CLOSE_ACCOUNT_OWNER_INDEX = exports.CLOSE_ACCOUNT_DESTINATION_INDEX = exports.CLOSE_ACCOUNT_SOURCE_INDEX = exports.TRANSFER_OWNER_INDEX = exports.TRANSFER_DESTINATION_INDEX = exports.TRANSFER_SOURCE_INDEX = exports.INITIALIZE_ACCOUNT_OWNER_INDEX = exports.INITIALIZE_ACCOUNT_MINT_INDEX = exports.INITIALIZE_ACCOUNT_ACCOUNT_INDEX = void 0;\nconst BufferLayout = __importStar(require(\"buffer-layout\"));\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst layout_1 = require(\"./layout\");\n// NOTE: Update these if the position of arguments for the initializeAccount instruction changes\nexports.INITIALIZE_ACCOUNT_ACCOUNT_INDEX = 0;\nexports.INITIALIZE_ACCOUNT_MINT_INDEX = 1;\nexports.INITIALIZE_ACCOUNT_OWNER_INDEX = 2;\n// NOTE: Update these if the position of arguments for the transfer instruction changes\nexports.TRANSFER_SOURCE_INDEX = 0;\nexports.TRANSFER_DESTINATION_INDEX = 1;\nexports.TRANSFER_OWNER_INDEX = 2;\n// NOTE: Update these if the position of arguments for the closeAccount instruction changes\nexports.CLOSE_ACCOUNT_SOURCE_INDEX = 0;\nexports.CLOSE_ACCOUNT_DESTINATION_INDEX = 1;\nexports.CLOSE_ACCOUNT_OWNER_INDEX = 2;\nexports.TOKEN_PROGRAM_ID = new web3_js_1.PublicKey('TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA');\nexports.WRAPPED_SOL_MINT = new web3_js_1.PublicKey('So11111111111111111111111111111111111111112');\nexports.MSRM_MINT = new web3_js_1.PublicKey('MSRMcoVyrFxnSgo5uXwone5SKcGhT1KEJMFEkMEWf9L');\nexports.MSRM_DECIMALS = 0;\nexports.SRM_MINT = new web3_js_1.PublicKey('SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt');\nexports.SRM_DECIMALS = 6;\nconst LAYOUT = BufferLayout.union(BufferLayout.u8('instruction'));\nLAYOUT.addVariant(0, BufferLayout.struct([\n    BufferLayout.u8('decimals'),\n    layout_1.publicKeyLayout('mintAuthority'),\n    BufferLayout.u8('freezeAuthorityOption'),\n    layout_1.publicKeyLayout('freezeAuthority'),\n]), 'initializeMint');\nLAYOUT.addVariant(1, BufferLayout.struct([]), 'initializeAccount');\nLAYOUT.addVariant(3, BufferLayout.struct([BufferLayout.nu64('amount')]), 'transfer');\nLAYOUT.addVariant(4, BufferLayout.struct([BufferLayout.nu64('amount')]), 'approve');\nLAYOUT.addVariant(5, BufferLayout.struct([]), 'revoke');\nLAYOUT.addVariant(6, BufferLayout.struct([\n    BufferLayout.u8('authorityType'),\n    BufferLayout.u8('newAuthorityOption'),\n    layout_1.publicKeyLayout('newAuthority'),\n]), 'setAuthority');\nLAYOUT.addVariant(7, BufferLayout.struct([BufferLayout.nu64('amount')]), 'mintTo');\nLAYOUT.addVariant(8, BufferLayout.struct([BufferLayout.nu64('amount')]), 'burn');\nLAYOUT.addVariant(9, BufferLayout.struct([]), 'closeAccount');\nconst instructionMaxSpan = Math.max(...Object.values(LAYOUT.registry).map((r) => r.span));\nfunction encodeTokenInstructionData(instruction) {\n    const b = Buffer.alloc(instructionMaxSpan);\n    const span = LAYOUT.encode(instruction, b);\n    return b.slice(0, span);\n}\nfunction decodeTokenInstructionData(instruction) {\n    return LAYOUT.decode(instruction);\n}\nexports.decodeTokenInstructionData = decodeTokenInstructionData;\nfunction initializeMint({ mint, decimals, mintAuthority, freezeAuthority = null, }) {\n    const keys = [\n        { pubkey: mint, isSigner: false, isWritable: true },\n        { pubkey: web3_js_1.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            initializeMint: {\n                decimals,\n                mintAuthority,\n                freezeAuthorityOption: !!freezeAuthority,\n                freezeAuthority: freezeAuthority || new web3_js_1.PublicKey(0),\n            },\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.initializeMint = initializeMint;\nfunction initializeAccount({ account, mint, owner }) {\n    const keys = [\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: mint, isSigner: false, isWritable: false },\n        { pubkey: owner, isSigner: false, isWritable: false },\n        { pubkey: web3_js_1.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            initializeAccount: {},\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.initializeAccount = initializeAccount;\nfunction transfer({ source, destination, amount, owner }) {\n    const keys = [\n        { pubkey: source, isSigner: false, isWritable: true },\n        { pubkey: destination, isSigner: false, isWritable: true },\n        { pubkey: owner, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            transfer: { amount },\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.transfer = transfer;\nfunction approve({ source, delegate, amount, owner }) {\n    const keys = [\n        { pubkey: source, isSigner: false, isWritable: true },\n        { pubkey: delegate, isSigner: false, isWritable: false },\n        { pubkey: owner, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            approve: { amount },\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.approve = approve;\nfunction revoke({ source, owner }) {\n    const keys = [\n        { pubkey: source, isSigner: false, isWritable: true },\n        { pubkey: owner, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            revoke: {},\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.revoke = revoke;\nfunction setAuthority({ target, currentAuthority, newAuthority, authorityType, }) {\n    const keys = [\n        { pubkey: target, isSigner: false, isWritable: true },\n        { pubkey: currentAuthority, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            setAuthority: {\n                authorityType,\n                newAuthorityOption: !!newAuthority,\n                newAuthority,\n            },\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.setAuthority = setAuthority;\nfunction mintTo({ mint, destination, amount, mintAuthority }) {\n    const keys = [\n        { pubkey: mint, isSigner: false, isWritable: true },\n        { pubkey: destination, isSigner: false, isWritable: true },\n        { pubkey: mintAuthority, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            mintTo: { amount },\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.mintTo = mintTo;\nfunction closeAccount({ source, destination, owner }) {\n    const keys = [\n        { pubkey: source, isSigner: false, isWritable: true },\n        { pubkey: destination, isSigner: false, isWritable: true },\n        { pubkey: owner, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            closeAccount: {},\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.closeAccount = closeAccount;\n//# sourceMappingURL=token-instructions.js.map","\"use strict\";\n// @ts-nocheck\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setLayoutEncoder = exports.setLayoutDecoder = exports.accountFlagsLayout = exports.orderTypeLayout = exports.sideLayout = exports.VersionedLayout = exports.WideBits = exports.u128 = exports.u64 = exports.publicKeyLayout = exports.zeros = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nclass Zeros extends buffer_layout_1.Blob {\n    decode(b, offset) {\n        const slice = super.decode(b, offset);\n        if (!slice.every((v) => v === 0)) {\n            throw new Error('nonzero padding bytes');\n        }\n        return slice;\n    }\n}\nfunction zeros(length) {\n    return new Zeros(length);\n}\nexports.zeros = zeros;\nclass PublicKeyLayout extends buffer_layout_1.Blob {\n    constructor(property) {\n        super(32, property);\n    }\n    decode(b, offset) {\n        return new web3_js_1.PublicKey(super.decode(b, offset));\n    }\n    encode(src, b, offset) {\n        return super.encode(src.toBuffer(), b, offset);\n    }\n}\nfunction publicKeyLayout(property) {\n    return new PublicKeyLayout(property);\n}\nexports.publicKeyLayout = publicKeyLayout;\nclass BNLayout extends buffer_layout_1.Blob {\n    decode(b, offset) {\n        return new bn_js_1.default(super.decode(b, offset), 10, 'le');\n    }\n    encode(src, b, offset) {\n        return super.encode(src.toArrayLike(Buffer, 'le', this.span), b, offset);\n    }\n}\nfunction u64(property) {\n    return new BNLayout(8, property);\n}\nexports.u64 = u64;\nfunction u128(property) {\n    return new BNLayout(16, property);\n}\nexports.u128 = u128;\nclass WideBits extends buffer_layout_1.Layout {\n    constructor(property) {\n        super(8, property);\n        this._lower = buffer_layout_1.bits(buffer_layout_1.u32(), false);\n        this._upper = buffer_layout_1.bits(buffer_layout_1.u32(), false);\n    }\n    addBoolean(property) {\n        if (this._lower.fields.length < 32) {\n            this._lower.addBoolean(property);\n        }\n        else {\n            this._upper.addBoolean(property);\n        }\n    }\n    decode(b, offset = 0) {\n        const lowerDecoded = this._lower.decode(b, offset);\n        const upperDecoded = this._upper.decode(b, offset + this._lower.span);\n        return { ...lowerDecoded, ...upperDecoded };\n    }\n    encode(src, b, offset = 0) {\n        return (this._lower.encode(src, b, offset) +\n            this._upper.encode(src, b, offset + this._lower.span));\n    }\n}\nexports.WideBits = WideBits;\nclass VersionedLayout extends buffer_layout_1.Layout {\n    constructor(version, inner, property) {\n        super(inner.span > 0 ? inner.span + 1 : inner.span, property);\n        this.version = version;\n        this.inner = inner;\n    }\n    decode(b, offset = 0) {\n        // if (b.readUInt8(offset) !== this._version) {\n        //   throw new Error('invalid version');\n        // }\n        return this.inner.decode(b, offset + 1);\n    }\n    encode(src, b, offset = 0) {\n        b.writeUInt8(this.version, offset);\n        return 1 + this.inner.encode(src, b, offset + 1);\n    }\n    getSpan(b, offset = 0) {\n        return 1 + this.inner.getSpan(b, offset + 1);\n    }\n}\nexports.VersionedLayout = VersionedLayout;\nclass EnumLayout extends buffer_layout_1.UInt {\n    constructor(values, span, property) {\n        super(span, property);\n        this.values = values;\n    }\n    encode(src, b, offset) {\n        if (this.values[src] !== undefined) {\n            return super.encode(this.values[src], b, offset);\n        }\n        throw new Error('Invalid ' + this.property);\n    }\n    decode(b, offset) {\n        const decodedValue = super.decode(b, offset);\n        const entry = Object.entries(this.values).find(([, value]) => value === decodedValue);\n        if (entry) {\n            return entry[0];\n        }\n        throw new Error('Invalid ' + this.property);\n    }\n}\nfunction sideLayout(property) {\n    return new EnumLayout({ buy: 0, sell: 1 }, 4, property);\n}\nexports.sideLayout = sideLayout;\nfunction orderTypeLayout(property) {\n    return new EnumLayout({ limit: 0, ioc: 1, postOnly: 2 }, 4, property);\n}\nexports.orderTypeLayout = orderTypeLayout;\nconst ACCOUNT_FLAGS_LAYOUT = new WideBits();\nACCOUNT_FLAGS_LAYOUT.addBoolean('initialized');\nACCOUNT_FLAGS_LAYOUT.addBoolean('market');\nACCOUNT_FLAGS_LAYOUT.addBoolean('openOrders');\nACCOUNT_FLAGS_LAYOUT.addBoolean('requestQueue');\nACCOUNT_FLAGS_LAYOUT.addBoolean('eventQueue');\nACCOUNT_FLAGS_LAYOUT.addBoolean('bids');\nACCOUNT_FLAGS_LAYOUT.addBoolean('asks');\nfunction accountFlagsLayout(property = 'accountFlags') {\n    return ACCOUNT_FLAGS_LAYOUT.replicate(property);\n}\nexports.accountFlagsLayout = accountFlagsLayout;\nfunction setLayoutDecoder(layout, decoder) {\n    const originalDecode = layout.decode;\n    layout.decode = function decode(b, offset = 0) {\n        return decoder(originalDecode.call(this, b, offset));\n    };\n}\nexports.setLayoutDecoder = setLayoutDecoder;\nfunction setLayoutEncoder(layout, encoder) {\n    const originalEncode = layout.encode;\n    layout.encode = function encode(src, b, offset) {\n        return originalEncode.call(this, encoder(src), b, offset);\n    };\n    return layout;\n}\nexports.setLayoutEncoder = setLayoutEncoder;\n//# sourceMappingURL=layout.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MARKETS = exports.TOKEN_MINTS = exports.getLayoutVersion = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst markets_json_1 = __importDefault(require(\"./markets.json\"));\nconst token_mints_json_1 = __importDefault(require(\"./token-mints.json\"));\nfunction getLayoutVersion(programId) {\n    if (programId.equals(new web3_js_1.PublicKey('4ckmDgGdxQoPDLUkDT3vHgSAkzA3QRdNq5ywwY4sUSJn')) ||\n        programId.equals(new web3_js_1.PublicKey('BJ3jrUzddfuSrZHXSCxMUUQsjKEyLmuuyZebkcaFp2fg'))) {\n        return 1;\n    }\n    return 2;\n}\nexports.getLayoutVersion = getLayoutVersion;\nexports.TOKEN_MINTS = token_mints_json_1.default.map(mint => {\n    return {\n        address: new web3_js_1.PublicKey(mint.address),\n        name: mint.name\n    };\n});\nexports.MARKETS = markets_json_1.default.map(market => {\n    return {\n        address: new web3_js_1.PublicKey(market.address),\n        name: market.name,\n        programId: new web3_js_1.PublicKey(market.programId),\n        deprecated: market.deprecated,\n    };\n});\n//# sourceMappingURL=tokens_and_markets.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DexInstructions = exports.decodeInstruction = exports.encodeInstruction = exports.INSTRUCTION_LAYOUT = exports.NEW_ORDER_OWNER_INDEX = exports.NEW_ORDER_OPEN_ORDERS_INDEX = exports.SETTLE_FUNDS_QUOTE_WALLET_INDEX = exports.SETTLE_FUNDS_BASE_WALLET_INDEX = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst layout_1 = require(\"./layout\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst token_instructions_1 = require(\"./token-instructions\");\n// NOTE: Update these if the position of arguments for the settleFunds instruction changes\nexports.SETTLE_FUNDS_BASE_WALLET_INDEX = 5;\nexports.SETTLE_FUNDS_QUOTE_WALLET_INDEX = 6;\n// NOTE: Update these if the position of arguments for the newOrder instruction changes\nexports.NEW_ORDER_OPEN_ORDERS_INDEX = 1;\nexports.NEW_ORDER_OWNER_INDEX = 4;\nexports.INSTRUCTION_LAYOUT = new layout_1.VersionedLayout(0, buffer_layout_1.union(buffer_layout_1.u32('instruction')));\nexports.INSTRUCTION_LAYOUT.inner.addVariant(0, buffer_layout_1.struct([\n    layout_1.u64('baseLotSize'),\n    layout_1.u64('quoteLotSize'),\n    buffer_layout_1.u16('feeRateBps'),\n    layout_1.u64('vaultSignerNonce'),\n    layout_1.u64('quoteDustThreshold'),\n]), 'initializeMarket');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(1, buffer_layout_1.struct([\n    layout_1.sideLayout('side'),\n    layout_1.u64('limitPrice'),\n    layout_1.u64('maxQuantity'),\n    layout_1.orderTypeLayout('orderType'),\n    layout_1.u64('clientId'),\n]), 'newOrder');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(2, buffer_layout_1.struct([buffer_layout_1.u16('limit')]), 'matchOrders');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(3, buffer_layout_1.struct([buffer_layout_1.u16('limit')]), 'consumeEvents');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(4, buffer_layout_1.struct([\n    layout_1.sideLayout('side'),\n    layout_1.u128('orderId'),\n    layout_1.publicKeyLayout('openOrders'),\n    buffer_layout_1.u8('openOrdersSlot'),\n]), 'cancelOrder');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(5, buffer_layout_1.struct([]), 'settleFunds');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(6, buffer_layout_1.struct([layout_1.u64('clientId')]), 'cancelOrderByClientId');\nfunction encodeInstruction(instruction) {\n    const b = Buffer.alloc(100);\n    return b.slice(0, exports.INSTRUCTION_LAYOUT.encode(instruction, b));\n}\nexports.encodeInstruction = encodeInstruction;\nfunction decodeInstruction(message) {\n    return exports.INSTRUCTION_LAYOUT.decode(message);\n}\nexports.decodeInstruction = decodeInstruction;\nclass DexInstructions {\n    static initializeMarket({ market, requestQueue, eventQueue, bids, asks, baseVault, quoteVault, baseMint, quoteMint, baseLotSize, quoteLotSize, feeRateBps, vaultSignerNonce, quoteDustThreshold, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n                { pubkey: bids, isSigner: false, isWritable: true },\n                { pubkey: asks, isSigner: false, isWritable: true },\n                { pubkey: baseVault, isSigner: false, isWritable: true },\n                { pubkey: quoteVault, isSigner: false, isWritable: true },\n                { pubkey: baseMint, isSigner: false, isWritable: false },\n                { pubkey: quoteMint, isSigner: false, isWritable: false },\n            ],\n            programId,\n            data: encodeInstruction({\n                initializeMarket: {\n                    baseLotSize,\n                    quoteLotSize,\n                    feeRateBps,\n                    vaultSignerNonce,\n                    quoteDustThreshold,\n                },\n            }),\n        });\n    }\n    static newOrder({ market, openOrders, payer, owner, requestQueue, baseVault, quoteVault, side, limitPrice, maxQuantity, orderType, clientId, programId, feeDiscountPubkey = null, }) {\n        const keys = [\n            { pubkey: market, isSigner: false, isWritable: true },\n            { pubkey: openOrders, isSigner: false, isWritable: true },\n            { pubkey: requestQueue, isSigner: false, isWritable: true },\n            { pubkey: payer, isSigner: false, isWritable: true },\n            { pubkey: owner, isSigner: true, isWritable: false },\n            { pubkey: baseVault, isSigner: false, isWritable: true },\n            { pubkey: quoteVault, isSigner: false, isWritable: true },\n            { pubkey: token_instructions_1.TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n            { pubkey: web3_js_1.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n        ];\n        if (feeDiscountPubkey) {\n            keys.push({\n                pubkey: feeDiscountPubkey,\n                isSigner: false,\n                isWritable: false,\n            });\n        }\n        return new web3_js_1.TransactionInstruction({\n            keys,\n            programId,\n            data: encodeInstruction({\n                newOrder: clientId\n                    ? { side, limitPrice, maxQuantity, orderType, clientId }\n                    : { side, limitPrice, maxQuantity, orderType },\n            }),\n        });\n    }\n    static matchOrders({ market, requestQueue, eventQueue, bids, asks, baseVault, quoteVault, limit, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n                { pubkey: bids, isSigner: false, isWritable: true },\n                { pubkey: asks, isSigner: false, isWritable: true },\n                { pubkey: baseVault, isSigner: false, isWritable: true },\n                { pubkey: quoteVault, isSigner: false, isWritable: true },\n            ],\n            programId,\n            data: encodeInstruction({ matchOrders: { limit } }),\n        });\n    }\n    static consumeEvents({ market, eventQueue, openOrdersAccounts, limit, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                ...openOrdersAccounts.map((account) => ({\n                    pubkey: account,\n                    isSigner: false,\n                    isWritable: true,\n                })),\n                { pubkey: market, isSigner: false, isWritable: true },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n            ],\n            programId,\n            data: encodeInstruction({ consumeEvents: { limit } }),\n        });\n    }\n    static cancelOrder({ market, openOrders, owner, requestQueue, side, orderId, openOrdersSlot, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: false },\n                { pubkey: openOrders, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: owner, isSigner: true, isWritable: false },\n            ],\n            programId,\n            data: encodeInstruction({\n                cancelOrder: { side, orderId, openOrders, openOrdersSlot },\n            }),\n        });\n    }\n    static cancelOrderByClientId({ market, openOrders, owner, requestQueue, clientId, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: false },\n                { pubkey: openOrders, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: owner, isSigner: true, isWritable: false },\n            ],\n            programId,\n            data: encodeInstruction({\n                cancelOrderByClientId: { clientId },\n            }),\n        });\n    }\n    static settleFunds({ market, openOrders, owner, baseVault, quoteVault, baseWallet, quoteWallet, vaultSigner, programId, referrerQuoteWallet = null, }) {\n        const keys = [\n            { pubkey: market, isSigner: false, isWritable: true },\n            { pubkey: openOrders, isSigner: false, isWritable: true },\n            { pubkey: owner, isSigner: true, isWritable: false },\n            { pubkey: baseVault, isSigner: false, isWritable: true },\n            { pubkey: quoteVault, isSigner: false, isWritable: true },\n            { pubkey: baseWallet, isSigner: false, isWritable: true },\n            { pubkey: quoteWallet, isSigner: false, isWritable: true },\n            { pubkey: vaultSigner, isSigner: false, isWritable: false },\n            { pubkey: token_instructions_1.TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n        ];\n        if (referrerQuoteWallet) {\n            keys.push({\n                pubkey: referrerQuoteWallet,\n                isSigner: false,\n                isWritable: true,\n            });\n        }\n        return new web3_js_1.TransactionInstruction({\n            keys,\n            programId,\n            data: encodeInstruction({\n                settleFunds: {},\n            }),\n        });\n    }\n}\nexports.DexInstructions = DexInstructions;\n//# sourceMappingURL=instructions.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EVENT_QUEUE_LAYOUT = exports.REQUEST_QUEUE_LAYOUT = exports.decodeEventQueue = exports.decodeRequestQueue = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst layout_1 = require(\"./layout\");\nconst REQUEST_QUEUE_HEADER = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    buffer_layout_1.u32('head'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('count'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('nextSeqNum'),\n    layout_1.zeros(4),\n]);\nconst REQUEST_FLAGS = buffer_layout_1.bits(buffer_layout_1.u8(), false, 'requestFlags');\nREQUEST_FLAGS.addBoolean('newOrder');\nREQUEST_FLAGS.addBoolean('cancelOrder');\nREQUEST_FLAGS.addBoolean('bid');\nREQUEST_FLAGS.addBoolean('postOnly');\nREQUEST_FLAGS.addBoolean('ioc');\nconst REQUEST = buffer_layout_1.struct([\n    REQUEST_FLAGS,\n    buffer_layout_1.u8('openOrdersSlot'),\n    buffer_layout_1.u8('feeTier'),\n    buffer_layout_1.blob(5),\n    layout_1.u64('maxBaseSizeOrCancelId'),\n    layout_1.u64('nativeQuoteQuantityLocked'),\n    layout_1.u128('orderId'),\n    layout_1.publicKeyLayout('openOrders'),\n    layout_1.u64('clientOrderId'),\n]);\nconst EVENT_QUEUE_HEADER = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    buffer_layout_1.u32('head'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('count'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('seqNum'),\n    layout_1.zeros(4),\n]);\nconst EVENT_FLAGS = buffer_layout_1.bits(buffer_layout_1.u8(), false, 'eventFlags');\nEVENT_FLAGS.addBoolean('fill');\nEVENT_FLAGS.addBoolean('out');\nEVENT_FLAGS.addBoolean('bid');\nEVENT_FLAGS.addBoolean('maker');\nconst EVENT = buffer_layout_1.struct([\n    EVENT_FLAGS,\n    buffer_layout_1.u8('openOrdersSlot'),\n    buffer_layout_1.u8('feeTier'),\n    buffer_layout_1.blob(5),\n    layout_1.u64('nativeQuantityReleased'),\n    layout_1.u64('nativeQuantityPaid'),\n    layout_1.u64('nativeFeeOrRebate'),\n    layout_1.u128('orderId'),\n    layout_1.publicKeyLayout('openOrders'),\n    layout_1.u64('clientOrderId'),\n]);\nfunction decodeQueue(headerLayout, nodeLayout, buffer, history) {\n    const header = headerLayout.decode(buffer);\n    const allocLen = Math.floor((buffer.length - headerLayout.span) / nodeLayout.span);\n    const nodes = [];\n    if (history) {\n        for (let i = 0; i < Math.min(history, allocLen); ++i) {\n            const nodeIndex = (header.head + header.count + allocLen - 1 - i) % allocLen;\n            nodes.push(nodeLayout.decode(buffer, headerLayout.span + nodeIndex * nodeLayout.span));\n        }\n    }\n    else {\n        for (let i = 0; i < header.count; ++i) {\n            const nodeIndex = (header.head + i) % allocLen;\n            nodes.push(nodeLayout.decode(buffer, headerLayout.span + nodeIndex * nodeLayout.span));\n        }\n    }\n    return { header, nodes };\n}\nfunction decodeRequestQueue(buffer, history) {\n    const { header, nodes } = decodeQueue(REQUEST_QUEUE_HEADER, REQUEST, buffer, history);\n    if (!header.accountFlags.initialized || !header.accountFlags.requestQueue) {\n        throw new Error('Invalid requests queue');\n    }\n    return nodes;\n}\nexports.decodeRequestQueue = decodeRequestQueue;\nfunction decodeEventQueue(buffer, history) {\n    const { header, nodes } = decodeQueue(EVENT_QUEUE_HEADER, EVENT, buffer, history);\n    if (!header.accountFlags.initialized || !header.accountFlags.eventQueue) {\n        throw new Error('Invalid events queue');\n    }\n    return nodes;\n}\nexports.decodeEventQueue = decodeEventQueue;\nexports.REQUEST_QUEUE_LAYOUT = {\n    HEADER: REQUEST_QUEUE_HEADER,\n    NODE: REQUEST,\n};\nexports.EVENT_QUEUE_LAYOUT = {\n    HEADER: EVENT_QUEUE_HEADER,\n    NODE: EVENT,\n};\n//# sourceMappingURL=queue.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFeeTier = exports.getFeeRates = exports.supportsSrmFeeDiscounts = void 0;\nconst tokens_and_markets_1 = require(\"./tokens_and_markets\");\nfunction supportsSrmFeeDiscounts(programId) {\n    return tokens_and_markets_1.getLayoutVersion(programId) > 1;\n}\nexports.supportsSrmFeeDiscounts = supportsSrmFeeDiscounts;\nfunction getFeeRates(feeTier) {\n    if (feeTier === 1) {\n        // SRM2\n        return { taker: 0.002, maker: -0.0003 };\n    }\n    else if (feeTier === 2) {\n        // SRM3\n        return { taker: 0.0018, maker: -0.0003 };\n    }\n    else if (feeTier === 3) {\n        // SRM4\n        return { taker: 0.0016, maker: -0.0003 };\n    }\n    else if (feeTier === 4) {\n        // SRM5\n        return { taker: 0.0014, maker: -0.0003 };\n    }\n    else if (feeTier === 5) {\n        // SRM6\n        return { taker: 0.0012, maker: -0.0003 };\n    }\n    else if (feeTier === 6) {\n        // MSRM\n        return { taker: 0.001, maker: -0.0005 };\n    }\n    // Base\n    return { taker: 0.0022, maker: -0.0003 };\n}\nexports.getFeeRates = getFeeRates;\nfunction getFeeTier(msrmBalance, srmBalance) {\n    if (msrmBalance >= 1) {\n        return 6;\n    }\n    else if (srmBalance >= 1000000) {\n        return 5;\n    }\n    else if (srmBalance >= 100000) {\n        return 4;\n    }\n    else if (srmBalance >= 10000) {\n        return 3;\n    }\n    else if (srmBalance >= 1000) {\n        return 2;\n    }\n    else if (srmBalance >= 100) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nexports.getFeeTier = getFeeTier;\n//# sourceMappingURL=fees.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TokenInstructions = exports.EVENT_QUEUE_LAYOUT = exports.REQUEST_QUEUE_LAYOUT = exports.decodeRequestQueue = exports.decodeEventQueue = exports.getLayoutVersion = exports.MARKETS = exports.TOKEN_MINTS = exports.supportsSrmFeeDiscounts = exports.getFeeRates = exports.getFeeTier = exports.NEW_ORDER_OWNER_INDEX = exports.NEW_ORDER_OPEN_ORDERS_INDEX = exports.SETTLE_FUNDS_QUOTE_WALLET_INDEX = exports.SETTLE_FUNDS_BASE_WALLET_INDEX = exports.decodeInstruction = exports.DexInstructions = exports.OpenOrders = exports.Orderbook = exports.Market = void 0;\nvar market_1 = require(\"./market\");\nObject.defineProperty(exports, \"Market\", { enumerable: true, get: function () { return market_1.Market; } });\nObject.defineProperty(exports, \"Orderbook\", { enumerable: true, get: function () { return market_1.Orderbook; } });\nObject.defineProperty(exports, \"OpenOrders\", { enumerable: true, get: function () { return market_1.OpenOrders; } });\nvar instructions_1 = require(\"./instructions\");\nObject.defineProperty(exports, \"DexInstructions\", { enumerable: true, get: function () { return instructions_1.DexInstructions; } });\nObject.defineProperty(exports, \"decodeInstruction\", { enumerable: true, get: function () { return instructions_1.decodeInstruction; } });\nObject.defineProperty(exports, \"SETTLE_FUNDS_BASE_WALLET_INDEX\", { enumerable: true, get: function () { return instructions_1.SETTLE_FUNDS_BASE_WALLET_INDEX; } });\nObject.defineProperty(exports, \"SETTLE_FUNDS_QUOTE_WALLET_INDEX\", { enumerable: true, get: function () { return instructions_1.SETTLE_FUNDS_QUOTE_WALLET_INDEX; } });\nObject.defineProperty(exports, \"NEW_ORDER_OPEN_ORDERS_INDEX\", { enumerable: true, get: function () { return instructions_1.NEW_ORDER_OPEN_ORDERS_INDEX; } });\nObject.defineProperty(exports, \"NEW_ORDER_OWNER_INDEX\", { enumerable: true, get: function () { return instructions_1.NEW_ORDER_OWNER_INDEX; } });\nvar fees_1 = require(\"./fees\");\nObject.defineProperty(exports, \"getFeeTier\", { enumerable: true, get: function () { return fees_1.getFeeTier; } });\nObject.defineProperty(exports, \"getFeeRates\", { enumerable: true, get: function () { return fees_1.getFeeRates; } });\nObject.defineProperty(exports, \"supportsSrmFeeDiscounts\", { enumerable: true, get: function () { return fees_1.supportsSrmFeeDiscounts; } });\nvar tokens_and_markets_1 = require(\"./tokens_and_markets\");\nObject.defineProperty(exports, \"TOKEN_MINTS\", { enumerable: true, get: function () { return tokens_and_markets_1.TOKEN_MINTS; } });\nObject.defineProperty(exports, \"MARKETS\", { enumerable: true, get: function () { return tokens_and_markets_1.MARKETS; } });\nObject.defineProperty(exports, \"getLayoutVersion\", { enumerable: true, get: function () { return tokens_and_markets_1.getLayoutVersion; } });\nvar queue_1 = require(\"./queue\");\nObject.defineProperty(exports, \"decodeEventQueue\", { enumerable: true, get: function () { return queue_1.decodeEventQueue; } });\nObject.defineProperty(exports, \"decodeRequestQueue\", { enumerable: true, get: function () { return queue_1.decodeRequestQueue; } });\nObject.defineProperty(exports, \"REQUEST_QUEUE_LAYOUT\", { enumerable: true, get: function () { return queue_1.REQUEST_QUEUE_LAYOUT; } });\nObject.defineProperty(exports, \"EVENT_QUEUE_LAYOUT\", { enumerable: true, get: function () { return queue_1.EVENT_QUEUE_LAYOUT; } });\nexports.TokenInstructions = __importStar(require(\"./token-instructions\"));\n//# sourceMappingURL=index.js.map","module.exports = __webpack_public_path__ + \"static/media/logo.49174c73.svg\";","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getMintDecimals = exports.Orderbook = exports.ORDERBOOK_LAYOUT = exports.OpenOrders = exports._OPEN_ORDERS_LAYOUT_V2 = exports._OPEN_ORDERS_LAYOUT_V1 = exports.Market = exports._MARKET_STATE_LAYOUT_V2 = exports._MARKET_STAT_LAYOUT_V1 = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst layout_1 = require(\"./layout\");\nconst slab_1 = require(\"./slab\");\nconst instructions_1 = require(\"./instructions\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst queue_1 = require(\"./queue\");\nconst buffer_1 = require(\"buffer\");\nconst fees_1 = require(\"./fees\");\nconst token_instructions_1 = require(\"./token-instructions\");\nconst tokens_and_markets_1 = require(\"./tokens_and_markets\");\nexports._MARKET_STAT_LAYOUT_V1 = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    layout_1.publicKeyLayout('ownAddress'),\n    layout_1.u64('vaultSignerNonce'),\n    layout_1.publicKeyLayout('baseMint'),\n    layout_1.publicKeyLayout('quoteMint'),\n    layout_1.publicKeyLayout('baseVault'),\n    layout_1.u64('baseDepositsTotal'),\n    layout_1.u64('baseFeesAccrued'),\n    layout_1.publicKeyLayout('quoteVault'),\n    layout_1.u64('quoteDepositsTotal'),\n    layout_1.u64('quoteFeesAccrued'),\n    layout_1.u64('quoteDustThreshold'),\n    layout_1.publicKeyLayout('requestQueue'),\n    layout_1.publicKeyLayout('eventQueue'),\n    layout_1.publicKeyLayout('bids'),\n    layout_1.publicKeyLayout('asks'),\n    layout_1.u64('baseLotSize'),\n    layout_1.u64('quoteLotSize'),\n    layout_1.u64('feeRateBps'),\n    buffer_layout_1.blob(7),\n]);\nexports._MARKET_STATE_LAYOUT_V2 = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    layout_1.publicKeyLayout('ownAddress'),\n    layout_1.u64('vaultSignerNonce'),\n    layout_1.publicKeyLayout('baseMint'),\n    layout_1.publicKeyLayout('quoteMint'),\n    layout_1.publicKeyLayout('baseVault'),\n    layout_1.u64('baseDepositsTotal'),\n    layout_1.u64('baseFeesAccrued'),\n    layout_1.publicKeyLayout('quoteVault'),\n    layout_1.u64('quoteDepositsTotal'),\n    layout_1.u64('quoteFeesAccrued'),\n    layout_1.u64('quoteDustThreshold'),\n    layout_1.publicKeyLayout('requestQueue'),\n    layout_1.publicKeyLayout('eventQueue'),\n    layout_1.publicKeyLayout('bids'),\n    layout_1.publicKeyLayout('asks'),\n    layout_1.u64('baseLotSize'),\n    layout_1.u64('quoteLotSize'),\n    layout_1.u64('feeRateBps'),\n    layout_1.u64('referrerRebatesAccrued'),\n    buffer_layout_1.blob(7),\n]);\nclass Market {\n    constructor(decoded, baseMintDecimals, quoteMintDecimals, options = {}, programId) {\n        const { skipPreflight = false, commitment = 'recent' } = options;\n        if (!decoded.accountFlags.initialized || !decoded.accountFlags.market) {\n            throw new Error('Invalid market state');\n        }\n        this._decoded = decoded;\n        this._baseSplTokenDecimals = baseMintDecimals;\n        this._quoteSplTokenDecimals = quoteMintDecimals;\n        this._skipPreflight = skipPreflight;\n        this._commitment = commitment;\n        this._programId = programId;\n        this._openOrdersAccountsCache = {};\n        this._feeDiscountKeysCache = {};\n    }\n    static getLayout(programId) {\n        if (tokens_and_markets_1.getLayoutVersion(programId) === 1) {\n            return exports._MARKET_STAT_LAYOUT_V1;\n        }\n        return exports._MARKET_STATE_LAYOUT_V2;\n    }\n    static async load(connection, address, options = {}, programId) {\n        const { owner, data } = throwIfNull(await connection.getAccountInfo(address), 'Market not found');\n        if (!owner.equals(programId)) {\n            throw new Error('Address not owned by program: ' + owner.toBase58());\n        }\n        const decoded = this.getLayout(programId).decode(data);\n        if (!decoded.accountFlags.initialized ||\n            !decoded.accountFlags.market ||\n            !decoded.ownAddress.equals(address)) {\n            throw new Error('Invalid market');\n        }\n        const [baseMintDecimals, quoteMintDecimals] = await Promise.all([\n            getMintDecimals(connection, decoded.baseMint),\n            getMintDecimals(connection, decoded.quoteMint),\n        ]);\n        return new Market(decoded, baseMintDecimals, quoteMintDecimals, options, programId);\n    }\n    get programId() {\n        return this._programId;\n    }\n    get address() {\n        return this._decoded.ownAddress;\n    }\n    get publicKey() {\n        return this.address;\n    }\n    get baseMintAddress() {\n        return this._decoded.baseMint;\n    }\n    get quoteMintAddress() {\n        return this._decoded.quoteMint;\n    }\n    get bidsAddress() {\n        return this._decoded.bids;\n    }\n    get asksAddress() {\n        return this._decoded.asks;\n    }\n    async loadBids(connection) {\n        const { data } = throwIfNull(await connection.getAccountInfo(this._decoded.bids));\n        return Orderbook.decode(this, data);\n    }\n    async loadAsks(connection) {\n        const { data } = throwIfNull(await connection.getAccountInfo(this._decoded.asks));\n        return Orderbook.decode(this, data);\n    }\n    async loadOrdersForOwner(connection, ownerAddress, cacheDurationMs = 0) {\n        const [bids, asks, openOrdersAccounts] = await Promise.all([\n            this.loadBids(connection),\n            this.loadAsks(connection),\n            this.findOpenOrdersAccountsForOwner(connection, ownerAddress, cacheDurationMs),\n        ]);\n        return this.filterForOpenOrders(bids, asks, openOrdersAccounts);\n    }\n    filterForOpenOrders(bids, asks, openOrdersAccounts) {\n        return [...bids, ...asks].filter((order) => openOrdersAccounts.some((openOrders) => order.openOrdersAddress.equals(openOrders.address)));\n    }\n    async findBaseTokenAccountsForOwner(connection, ownerAddress, includeUnwrappedSol = false) {\n        if (this.baseMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT) && includeUnwrappedSol) {\n            const [wrapped, unwrapped] = await Promise.all([\n                this.findBaseTokenAccountsForOwner(connection, ownerAddress, false),\n                connection.getAccountInfo(ownerAddress),\n            ]);\n            if (unwrapped !== null) {\n                return [{ pubkey: ownerAddress, account: unwrapped }, ...wrapped];\n            }\n            return wrapped;\n        }\n        return await this.getTokenAccountsByOwnerForMint(connection, ownerAddress, this.baseMintAddress);\n    }\n    async getTokenAccountsByOwnerForMint(connection, ownerAddress, mintAddress) {\n        return (await connection.getTokenAccountsByOwner(ownerAddress, {\n            mint: mintAddress,\n        })).value;\n    }\n    async findQuoteTokenAccountsForOwner(connection, ownerAddress, includeUnwrappedSol = false) {\n        if (this.quoteMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT) && includeUnwrappedSol) {\n            const [wrapped, unwrapped] = await Promise.all([\n                this.findQuoteTokenAccountsForOwner(connection, ownerAddress, false),\n                connection.getAccountInfo(ownerAddress),\n            ]);\n            if (unwrapped !== null) {\n                return [{ pubkey: ownerAddress, account: unwrapped }, ...wrapped];\n            }\n            return wrapped;\n        }\n        return await this.getTokenAccountsByOwnerForMint(connection, ownerAddress, this.quoteMintAddress);\n    }\n    async findOpenOrdersAccountsForOwner(connection, ownerAddress, cacheDurationMs = 0) {\n        const strOwner = ownerAddress.toBase58();\n        const now = new Date().getTime();\n        if (strOwner in this._openOrdersAccountsCache &&\n            now - this._openOrdersAccountsCache[strOwner].ts < cacheDurationMs) {\n            return this._openOrdersAccountsCache[strOwner].accounts;\n        }\n        const openOrdersAccountsForOwner = await OpenOrders.findForMarketAndOwner(connection, this.address, ownerAddress, this._programId);\n        this._openOrdersAccountsCache[strOwner] = {\n            accounts: openOrdersAccountsForOwner,\n            ts: now,\n        };\n        return openOrdersAccountsForOwner;\n    }\n    async placeOrder(connection, { owner, payer, side, price, size, orderType = 'limit', clientId, openOrdersAddressKey, feeDiscountPubkey, }) {\n        const { transaction, signers } = await this.makePlaceOrderTransaction(connection, {\n            owner,\n            payer,\n            side,\n            price,\n            size,\n            orderType,\n            clientId,\n            openOrdersAddressKey,\n            feeDiscountPubkey,\n        });\n        return await this._sendTransaction(connection, transaction, [\n            owner,\n            ...signers,\n        ]);\n    }\n    getSplTokenBalanceFromAccountInfo(accountInfo, decimals) {\n        return divideBnToNumber(new bn_js_1.default(accountInfo.data.slice(64, 72), 10, 'le'), new bn_js_1.default(10).pow(new bn_js_1.default(decimals)));\n    }\n    get supportsSrmFeeDiscounts() {\n        return fees_1.supportsSrmFeeDiscounts(this._programId);\n    }\n    get supportsReferralFees() {\n        return tokens_and_markets_1.getLayoutVersion(this._programId) > 1;\n    }\n    async findFeeDiscountKeys(connection, ownerAddress, cacheDurationMs = 0) {\n        let sortedAccounts = [];\n        const now = new Date().getTime();\n        const strOwner = ownerAddress.toBase58();\n        if (strOwner in this._feeDiscountKeysCache &&\n            now - this._feeDiscountKeysCache[strOwner].ts < cacheDurationMs) {\n            return this._feeDiscountKeysCache[strOwner].accounts;\n        }\n        if (this.supportsSrmFeeDiscounts) {\n            // Fee discounts based on (M)SRM holdings supported in newer versions\n            const msrmAccounts = (await this.getTokenAccountsByOwnerForMint(connection, ownerAddress, token_instructions_1.MSRM_MINT)).map(({ pubkey, account }) => {\n                const balance = this.getSplTokenBalanceFromAccountInfo(account, token_instructions_1.MSRM_DECIMALS);\n                return {\n                    pubkey,\n                    mint: token_instructions_1.MSRM_MINT,\n                    balance,\n                    feeTier: fees_1.getFeeTier(balance, 0),\n                };\n            });\n            const srmAccounts = (await this.getTokenAccountsByOwnerForMint(connection, ownerAddress, token_instructions_1.SRM_MINT)).map(({ pubkey, account }) => {\n                const balance = this.getSplTokenBalanceFromAccountInfo(account, token_instructions_1.SRM_DECIMALS);\n                return {\n                    pubkey,\n                    mint: token_instructions_1.SRM_MINT,\n                    balance,\n                    feeTier: fees_1.getFeeTier(0, balance),\n                };\n            });\n            sortedAccounts = msrmAccounts.concat(srmAccounts).sort((a, b) => {\n                if (a.feeTier > b.feeTier) {\n                    return -1;\n                }\n                else if (a.feeTier < b.feeTier) {\n                    return 1;\n                }\n                else {\n                    if (a.balance > b.balance) {\n                        return -1;\n                    }\n                    else if (a.balance < b.balance) {\n                        return 1;\n                    }\n                    else {\n                        return 0;\n                    }\n                }\n            });\n        }\n        this._feeDiscountKeysCache[strOwner] = {\n            accounts: sortedAccounts,\n            ts: now,\n        };\n        return sortedAccounts;\n    }\n    async findBestFeeDiscountKey(connection, ownerAddress, cacheDurationMs = 0) {\n        const accounts = await this.findFeeDiscountKeys(connection, ownerAddress, cacheDurationMs);\n        if (accounts.length > 0) {\n            return {\n                pubkey: accounts[0].pubkey,\n                feeTier: accounts[0].feeTier,\n            };\n        }\n        return {\n            pubkey: null,\n            feeTier: 0,\n        };\n    }\n    async makePlaceOrderTransaction(connection, { owner, payer, side, price, size, orderType = 'limit', clientId, openOrdersAddressKey, feeDiscountPubkey = null, }, cacheDurationMs = 0, feeDiscountPubkeyCacheDurationMs = 0) {\n        var _a, _b;\n        // @ts-ignore\n        const ownerAddress = (_a = owner.publicKey) !== null && _a !== void 0 ? _a : owner;\n        const openOrdersAccounts = await this.findOpenOrdersAccountsForOwner(connection, ownerAddress, cacheDurationMs);\n        const transaction = new web3_js_1.Transaction();\n        const signers = [];\n        // Fetch an SRM fee discount key if the market supports discounts and it is not supplied\n        feeDiscountPubkey =\n            feeDiscountPubkey ||\n                (this.supportsSrmFeeDiscounts\n                    ? (await this.findBestFeeDiscountKey(connection, ownerAddress, feeDiscountPubkeyCacheDurationMs)).pubkey\n                    : null);\n        let openOrdersAddress;\n        if (openOrdersAccounts.length === 0) {\n            const newOpenOrdersAccount = new web3_js_1.Account();\n            transaction.add(await OpenOrders.makeCreateAccountTransaction(connection, this.address, ownerAddress, newOpenOrdersAccount.publicKey, this._programId));\n            openOrdersAddress = newOpenOrdersAccount.publicKey;\n            signers.push(newOpenOrdersAccount);\n            // refresh the cache of open order accounts on next fetch\n            this._openOrdersAccountsCache[ownerAddress.toBase58()].ts = 0;\n        }\n        else if (openOrdersAddressKey) {\n            openOrdersAddress = openOrdersAddressKey;\n        }\n        else {\n            openOrdersAddress = openOrdersAccounts[0].address;\n        }\n        let wrappedSolAccount = null;\n        if (payer.equals(ownerAddress)) {\n            if ((side === 'buy' && this.quoteMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT)) ||\n                (side === 'sell' && this.baseMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT))) {\n                wrappedSolAccount = new web3_js_1.Account();\n                let lamports;\n                if (side === 'buy') {\n                    lamports = Math.round(price * size * 1.01 * web3_js_1.LAMPORTS_PER_SOL);\n                    if (openOrdersAccounts.length > 0) {\n                        lamports -= openOrdersAccounts[0].quoteTokenFree.toNumber();\n                    }\n                }\n                else {\n                    lamports = Math.round(size * web3_js_1.LAMPORTS_PER_SOL);\n                    if (openOrdersAccounts.length > 0) {\n                        lamports -= openOrdersAccounts[0].baseTokenFree.toNumber();\n                    }\n                }\n                lamports = Math.max(lamports, 0) + 1e7;\n                transaction.add(web3_js_1.SystemProgram.createAccount({\n                    fromPubkey: ownerAddress,\n                    newAccountPubkey: wrappedSolAccount.publicKey,\n                    lamports,\n                    space: 165,\n                    programId: token_instructions_1.TOKEN_PROGRAM_ID,\n                }));\n                transaction.add(token_instructions_1.initializeAccount({\n                    account: wrappedSolAccount.publicKey,\n                    mint: token_instructions_1.WRAPPED_SOL_MINT,\n                    owner: ownerAddress,\n                }));\n                signers.push(wrappedSolAccount);\n            }\n            else {\n                throw new Error('Invalid payer account');\n            }\n        }\n        const placeOrderInstruction = this.makePlaceOrderInstruction(connection, {\n            owner,\n            payer: (_b = wrappedSolAccount === null || wrappedSolAccount === void 0 ? void 0 : wrappedSolAccount.publicKey) !== null && _b !== void 0 ? _b : payer,\n            side,\n            price,\n            size,\n            orderType,\n            clientId,\n            openOrdersAddressKey: openOrdersAddress,\n            feeDiscountPubkey,\n        });\n        transaction.add(placeOrderInstruction);\n        if (wrappedSolAccount) {\n            transaction.add(token_instructions_1.closeAccount({\n                source: wrappedSolAccount.publicKey,\n                destination: ownerAddress,\n                owner: ownerAddress,\n            }));\n        }\n        return { transaction, signers, payer: owner };\n    }\n    makePlaceOrderInstruction(connection, { owner, payer, side, price, size, orderType = 'limit', clientId, openOrdersAddressKey, feeDiscountPubkey = null, }) {\n        var _a;\n        // @ts-ignore\n        const ownerAddress = (_a = owner.publicKey) !== null && _a !== void 0 ? _a : owner;\n        if (this.baseSizeNumberToLots(size).lte(new bn_js_1.default(0))) {\n            throw new Error('size too small');\n        }\n        if (this.priceNumberToLots(price).lte(new bn_js_1.default(0))) {\n            throw new Error('invalid price');\n        }\n        if (!this.supportsSrmFeeDiscounts) {\n            feeDiscountPubkey = null;\n        }\n        return instructions_1.DexInstructions.newOrder({\n            market: this.address,\n            requestQueue: this._decoded.requestQueue,\n            baseVault: this._decoded.baseVault,\n            quoteVault: this._decoded.quoteVault,\n            openOrders: openOrdersAddressKey,\n            owner: ownerAddress,\n            payer,\n            side,\n            limitPrice: this.priceNumberToLots(price),\n            maxQuantity: this.baseSizeNumberToLots(size),\n            orderType,\n            clientId,\n            programId: this._programId,\n            feeDiscountPubkey,\n        });\n    }\n    async _sendTransaction(connection, transaction, signers) {\n        const signature = await connection.sendTransaction(transaction, signers, {\n            skipPreflight: this._skipPreflight,\n        });\n        const { value } = await connection.confirmTransaction(signature, this._commitment);\n        if (value === null || value === void 0 ? void 0 : value.err) {\n            throw new Error(JSON.stringify(value.err));\n        }\n        return signature;\n    }\n    async cancelOrderByClientId(connection, owner, openOrders, clientId) {\n        const transaction = await this.makeCancelOrderByClientIdTransaction(connection, owner.publicKey, openOrders, clientId);\n        return await this._sendTransaction(connection, transaction, [owner]);\n    }\n    async makeCancelOrderByClientIdTransaction(connection, owner, openOrders, clientId) {\n        const transaction = new web3_js_1.Transaction();\n        transaction.add(instructions_1.DexInstructions.cancelOrderByClientId({\n            market: this.address,\n            owner,\n            openOrders,\n            requestQueue: this._decoded.requestQueue,\n            clientId,\n            programId: this._programId,\n        }));\n        return transaction;\n    }\n    async cancelOrder(connection, owner, order) {\n        const transaction = await this.makeCancelOrderTransaction(connection, owner.publicKey, order);\n        return await this._sendTransaction(connection, transaction, [owner]);\n    }\n    async makeCancelOrderTransaction(connection, owner, order) {\n        const transaction = new web3_js_1.Transaction();\n        transaction.add(this.makeCancelOrderInstruction(connection, owner, order));\n        return transaction;\n    }\n    makeCancelOrderInstruction(connection, owner, order) {\n        return instructions_1.DexInstructions.cancelOrder({\n            market: this.address,\n            owner,\n            openOrders: order.openOrdersAddress,\n            requestQueue: this._decoded.requestQueue,\n            side: order.side,\n            orderId: order.orderId,\n            openOrdersSlot: order.openOrdersSlot,\n            programId: this._programId,\n        });\n    }\n    async settleFunds(connection, owner, openOrders, baseWallet, quoteWallet, referrerQuoteWallet = null) {\n        if (!openOrders.owner.equals(owner.publicKey)) {\n            throw new Error('Invalid open orders account');\n        }\n        if (referrerQuoteWallet && !this.supportsReferralFees) {\n            throw new Error('This program ID does not support referrerQuoteWallet');\n        }\n        const { transaction, signers } = await this.makeSettleFundsTransaction(connection, openOrders, baseWallet, quoteWallet, referrerQuoteWallet);\n        return await this._sendTransaction(connection, transaction, [\n            owner,\n            ...signers,\n        ]);\n    }\n    async makeSettleFundsTransaction(connection, openOrders, baseWallet, quoteWallet, referrerQuoteWallet = null) {\n        // @ts-ignore\n        const vaultSigner = await web3_js_1.PublicKey.createProgramAddress([\n            this.address.toBuffer(),\n            this._decoded.vaultSignerNonce.toArrayLike(buffer_1.Buffer, 'le', 8),\n        ], this._programId);\n        const transaction = new web3_js_1.Transaction();\n        const signers = [];\n        let wrappedSolAccount = null;\n        if ((this.baseMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT) &&\n            baseWallet.equals(openOrders.owner)) ||\n            (this.quoteMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT) &&\n                quoteWallet.equals(openOrders.owner))) {\n            wrappedSolAccount = new web3_js_1.Account();\n            transaction.add(web3_js_1.SystemProgram.createAccount({\n                fromPubkey: openOrders.owner,\n                newAccountPubkey: wrappedSolAccount.publicKey,\n                lamports: await connection.getMinimumBalanceForRentExemption(165),\n                space: 165,\n                programId: token_instructions_1.TOKEN_PROGRAM_ID,\n            }));\n            transaction.add(token_instructions_1.initializeAccount({\n                account: wrappedSolAccount.publicKey,\n                mint: token_instructions_1.WRAPPED_SOL_MINT,\n                owner: openOrders.owner,\n            }));\n            signers.push(wrappedSolAccount);\n        }\n        transaction.add(instructions_1.DexInstructions.settleFunds({\n            market: this.address,\n            openOrders: openOrders.address,\n            owner: openOrders.owner,\n            baseVault: this._decoded.baseVault,\n            quoteVault: this._decoded.quoteVault,\n            baseWallet: baseWallet.equals(openOrders.owner) && wrappedSolAccount\n                ? wrappedSolAccount.publicKey\n                : baseWallet,\n            quoteWallet: quoteWallet.equals(openOrders.owner) && wrappedSolAccount\n                ? wrappedSolAccount.publicKey\n                : quoteWallet,\n            vaultSigner,\n            programId: this._programId,\n            referrerQuoteWallet,\n        }));\n        if (wrappedSolAccount) {\n            transaction.add(token_instructions_1.closeAccount({\n                source: wrappedSolAccount.publicKey,\n                destination: openOrders.owner,\n                owner: openOrders.owner,\n            }));\n        }\n        return { transaction, signers, payer: openOrders.owner };\n    }\n    async matchOrders(connection, feePayer, limit) {\n        const tx = this.makeMatchOrdersTransaction(limit);\n        return await this._sendTransaction(connection, tx, [feePayer]);\n    }\n    makeMatchOrdersTransaction(limit) {\n        const tx = new web3_js_1.Transaction();\n        tx.add(instructions_1.DexInstructions.matchOrders({\n            market: this.address,\n            requestQueue: this._decoded.requestQueue,\n            eventQueue: this._decoded.eventQueue,\n            bids: this._decoded.bids,\n            asks: this._decoded.asks,\n            baseVault: this._decoded.baseVault,\n            quoteVault: this._decoded.quoteVault,\n            limit,\n            programId: this._programId,\n        }));\n        return tx;\n    }\n    async loadRequestQueue(connection) {\n        const { data } = throwIfNull(await connection.getAccountInfo(this._decoded.requestQueue));\n        return queue_1.decodeRequestQueue(data);\n    }\n    async loadEventQueue(connection) {\n        const { data } = throwIfNull(await connection.getAccountInfo(this._decoded.eventQueue));\n        return queue_1.decodeEventQueue(data);\n    }\n    async loadFills(connection, limit = 100) {\n        // TODO: once there's a separate source of fills use that instead\n        const { data } = throwIfNull(await connection.getAccountInfo(this._decoded.eventQueue));\n        const events = queue_1.decodeEventQueue(data, limit);\n        return events\n            .filter((event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0))\n            .map(this.parseFillEvent.bind(this));\n    }\n    parseFillEvent(event) {\n        let size, price, side, priceBeforeFees;\n        if (event.eventFlags.bid) {\n            side = 'buy';\n            priceBeforeFees = event.eventFlags.maker\n                ? event.nativeQuantityPaid.add(event.nativeFeeOrRebate)\n                : event.nativeQuantityPaid.sub(event.nativeFeeOrRebate);\n            price = divideBnToNumber(priceBeforeFees.mul(this._baseSplTokenMultiplier), this._quoteSplTokenMultiplier.mul(event.nativeQuantityReleased));\n            size = divideBnToNumber(event.nativeQuantityReleased, this._baseSplTokenMultiplier);\n        }\n        else {\n            side = 'sell';\n            priceBeforeFees = event.eventFlags.maker\n                ? event.nativeQuantityReleased.sub(event.nativeFeeOrRebate)\n                : event.nativeQuantityReleased.add(event.nativeFeeOrRebate);\n            price = divideBnToNumber(priceBeforeFees.mul(this._baseSplTokenMultiplier), this._quoteSplTokenMultiplier.mul(event.nativeQuantityPaid));\n            size = divideBnToNumber(event.nativeQuantityPaid, this._baseSplTokenMultiplier);\n        }\n        return {\n            ...event,\n            side,\n            price,\n            feeCost: this.quoteSplSizeToNumber(event.nativeFeeOrRebate) *\n                (event.eventFlags.maker ? -1 : 1),\n            size,\n        };\n    }\n    get _baseSplTokenMultiplier() {\n        return new bn_js_1.default(10).pow(new bn_js_1.default(this._baseSplTokenDecimals));\n    }\n    get _quoteSplTokenMultiplier() {\n        return new bn_js_1.default(10).pow(new bn_js_1.default(this._quoteSplTokenDecimals));\n    }\n    priceLotsToNumber(price) {\n        return divideBnToNumber(price.mul(this._decoded.quoteLotSize).mul(this._baseSplTokenMultiplier), this._decoded.baseLotSize.mul(this._quoteSplTokenMultiplier));\n    }\n    priceNumberToLots(price) {\n        return new bn_js_1.default(Math.round((price *\n            Math.pow(10, this._quoteSplTokenDecimals) *\n            this._decoded.baseLotSize.toNumber()) /\n            (Math.pow(10, this._baseSplTokenDecimals) *\n                this._decoded.quoteLotSize.toNumber())));\n    }\n    baseSplSizeToNumber(size) {\n        return divideBnToNumber(size, this._baseSplTokenMultiplier);\n    }\n    quoteSplSizeToNumber(size) {\n        return divideBnToNumber(size, this._quoteSplTokenMultiplier);\n    }\n    baseSizeLotsToNumber(size) {\n        return divideBnToNumber(size.mul(this._decoded.baseLotSize), this._baseSplTokenMultiplier);\n    }\n    baseSizeNumberToLots(size) {\n        const native = new bn_js_1.default(Math.round(size * Math.pow(10, this._baseSplTokenDecimals)));\n        // rounds down to the nearest lot size\n        return native.div(this._decoded.baseLotSize);\n    }\n    quoteSizeLotsToNumber(size) {\n        return divideBnToNumber(size.mul(this._decoded.quoteLotSize), this._quoteSplTokenMultiplier);\n    }\n    quoteSizeNumberToLots(size) {\n        const native = new bn_js_1.default(Math.round(size * Math.pow(10, this._quoteSplTokenDecimals)));\n        // rounds down to the nearest lot size\n        return native.div(this._decoded.quoteLotSize);\n    }\n    get minOrderSize() {\n        return this.baseSizeLotsToNumber(new bn_js_1.default(1));\n    }\n    get tickSize() {\n        return this.priceLotsToNumber(new bn_js_1.default(1));\n    }\n}\nexports.Market = Market;\nexports._OPEN_ORDERS_LAYOUT_V1 = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    layout_1.publicKeyLayout('market'),\n    layout_1.publicKeyLayout('owner'),\n    // These are in spl-token (i.e. not lot) units\n    layout_1.u64('baseTokenFree'),\n    layout_1.u64('baseTokenTotal'),\n    layout_1.u64('quoteTokenFree'),\n    layout_1.u64('quoteTokenTotal'),\n    layout_1.u128('freeSlotBits'),\n    layout_1.u128('isBidBits'),\n    buffer_layout_1.seq(layout_1.u128(), 128, 'orders'),\n    buffer_layout_1.seq(layout_1.u64(), 128, 'clientIds'),\n    buffer_layout_1.blob(7),\n]);\nexports._OPEN_ORDERS_LAYOUT_V2 = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    layout_1.publicKeyLayout('market'),\n    layout_1.publicKeyLayout('owner'),\n    // These are in spl-token (i.e. not lot) units\n    layout_1.u64('baseTokenFree'),\n    layout_1.u64('baseTokenTotal'),\n    layout_1.u64('quoteTokenFree'),\n    layout_1.u64('quoteTokenTotal'),\n    layout_1.u128('freeSlotBits'),\n    layout_1.u128('isBidBits'),\n    buffer_layout_1.seq(layout_1.u128(), 128, 'orders'),\n    buffer_layout_1.seq(layout_1.u64(), 128, 'clientIds'),\n    layout_1.u64('referrerRebatesAccrued'),\n    buffer_layout_1.blob(7),\n]);\nclass OpenOrders {\n    constructor(address, decoded, programId) {\n        this.address = address;\n        this._programId = programId;\n        Object.assign(this, decoded);\n    }\n    static getLayout(programId) {\n        if (tokens_and_markets_1.getLayoutVersion(programId) === 1) {\n            return exports._OPEN_ORDERS_LAYOUT_V1;\n        }\n        return exports._OPEN_ORDERS_LAYOUT_V2;\n    }\n    static async findForOwner(connection, ownerAddress, programId) {\n        const filters = [\n            {\n                memcmp: {\n                    offset: this.getLayout(programId).offsetOf('owner'),\n                    bytes: ownerAddress.toBase58(),\n                },\n            },\n            {\n                dataSize: this.getLayout(programId).span,\n            },\n        ];\n        const accounts = await getFilteredProgramAccounts(connection, programId, filters);\n        return accounts.map(({ publicKey, accountInfo }) => OpenOrders.fromAccountInfo(publicKey, accountInfo, programId));\n    }\n    static async findForMarketAndOwner(connection, marketAddress, ownerAddress, programId) {\n        const filters = [\n            {\n                memcmp: {\n                    offset: this.getLayout(programId).offsetOf('market'),\n                    bytes: marketAddress.toBase58(),\n                },\n            },\n            {\n                memcmp: {\n                    offset: this.getLayout(programId).offsetOf('owner'),\n                    bytes: ownerAddress.toBase58(),\n                },\n            },\n            {\n                dataSize: this.getLayout(programId).span,\n            },\n        ];\n        const accounts = await getFilteredProgramAccounts(connection, programId, filters);\n        return accounts.map(({ publicKey, accountInfo }) => OpenOrders.fromAccountInfo(publicKey, accountInfo, programId));\n    }\n    static async load(connection, address, programId) {\n        const accountInfo = await connection.getAccountInfo(address);\n        if (accountInfo === null) {\n            throw new Error('Open orders account not found');\n        }\n        return OpenOrders.fromAccountInfo(address, accountInfo, programId);\n    }\n    static fromAccountInfo(address, accountInfo, programId) {\n        const { owner, data } = accountInfo;\n        if (!owner.equals(programId)) {\n            throw new Error('Address not owned by program');\n        }\n        const decoded = this.getLayout(programId).decode(data);\n        if (!decoded.accountFlags.initialized || !decoded.accountFlags.openOrders) {\n            throw new Error('Invalid open orders account');\n        }\n        return new OpenOrders(address, decoded, programId);\n    }\n    static async makeCreateAccountTransaction(connection, marketAddress, ownerAddress, newAccountAddress, programId) {\n        return web3_js_1.SystemProgram.createAccount({\n            fromPubkey: ownerAddress,\n            newAccountPubkey: newAccountAddress,\n            lamports: await connection.getMinimumBalanceForRentExemption(this.getLayout(programId).span),\n            space: this.getLayout(programId).span,\n            programId,\n        });\n    }\n    get publicKey() {\n        return this.address;\n    }\n}\nexports.OpenOrders = OpenOrders;\nexports.ORDERBOOK_LAYOUT = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    slab_1.SLAB_LAYOUT.replicate('slab'),\n    buffer_layout_1.blob(7),\n]);\nclass Orderbook {\n    constructor(market, accountFlags, slab) {\n        if (!accountFlags.initialized || !(accountFlags.bids ^ accountFlags.asks)) {\n            throw new Error('Invalid orderbook');\n        }\n        this.market = market;\n        this.isBids = accountFlags.bids;\n        this.slab = slab;\n    }\n    static get LAYOUT() {\n        return exports.ORDERBOOK_LAYOUT;\n    }\n    static decode(market, buffer) {\n        const { accountFlags, slab } = exports.ORDERBOOK_LAYOUT.decode(buffer);\n        return new Orderbook(market, accountFlags, slab);\n    }\n    getL2(depth) {\n        const descending = this.isBids;\n        const levels = []; // (price, size)\n        for (const { key, quantity } of this.slab.items(descending)) {\n            const price = getPriceFromKey(key);\n            if (levels.length > 0 && levels[levels.length - 1][0].eq(price)) {\n                levels[levels.length - 1][1].iadd(quantity);\n            }\n            else if (levels.length === depth) {\n                break;\n            }\n            else {\n                levels.push([price, quantity]);\n            }\n        }\n        return levels.map(([priceLots, sizeLots]) => [\n            this.market.priceLotsToNumber(priceLots),\n            this.market.baseSizeLotsToNumber(sizeLots),\n            priceLots,\n            sizeLots,\n        ]);\n    }\n    *[Symbol.iterator]() {\n        for (const { key, ownerSlot, owner, quantity, feeTier, clientOrderId, } of this.slab) {\n            const price = getPriceFromKey(key);\n            yield {\n                orderId: key,\n                clientId: clientOrderId,\n                openOrdersAddress: owner,\n                openOrdersSlot: ownerSlot,\n                feeTier,\n                price: this.market.priceLotsToNumber(price),\n                priceLots: price,\n                size: this.market.baseSizeLotsToNumber(quantity),\n                sizeLots: quantity,\n                side: (this.isBids ? 'buy' : 'sell'),\n            };\n        }\n    }\n}\nexports.Orderbook = Orderbook;\nfunction getPriceFromKey(key) {\n    return key.ushrn(64);\n}\nfunction divideBnToNumber(numerator, denominator) {\n    const quotient = numerator.div(denominator).toNumber();\n    const rem = numerator.umod(denominator);\n    const gcd = rem.gcd(denominator);\n    return quotient + rem.div(gcd).toNumber() / denominator.div(gcd).toNumber();\n}\nconst MINT_LAYOUT = buffer_layout_1.struct([buffer_layout_1.blob(44), buffer_layout_1.u8('decimals'), buffer_layout_1.blob(37)]);\nasync function getMintDecimals(connection, mint) {\n    if (mint.equals(token_instructions_1.WRAPPED_SOL_MINT)) {\n        return 9;\n    }\n    const { data } = throwIfNull(await connection.getAccountInfo(mint), 'mint not found');\n    const { decimals } = MINT_LAYOUT.decode(data);\n    return decimals;\n}\nexports.getMintDecimals = getMintDecimals;\nasync function getFilteredProgramAccounts(connection, programId, filters) {\n    // @ts-ignore\n    const resp = await connection._rpcRequest('getProgramAccounts', [\n        programId.toBase58(),\n        {\n            commitment: connection.commitment,\n            filters,\n            encoding: 'base64',\n        },\n    ]);\n    if (resp.error) {\n        throw new Error(resp.error.message);\n    }\n    return resp.result.map(({ pubkey, account: { data, executable, owner, lamports } }) => ({\n        publicKey: new web3_js_1.PublicKey(pubkey),\n        accountInfo: {\n            data: buffer_1.Buffer.from(data[0], 'base64'),\n            executable,\n            owner: new web3_js_1.PublicKey(owner),\n            lamports,\n        },\n    }));\n}\nfunction throwIfNull(value, message = 'account not found') {\n    if (value === null) {\n        throw new Error(message);\n    }\n    return value;\n}\n//# sourceMappingURL=market.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Slab = exports.SLAB_LAYOUT = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst layout_1 = require(\"./layout\");\nconst SLAB_HEADER_LAYOUT = buffer_layout_1.struct([\n    // Number of modified slab nodes\n    buffer_layout_1.u32('bumpIndex'),\n    layout_1.zeros(4),\n    // Linked list of unused nodes\n    buffer_layout_1.u32('freeListLen'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('freeListHead'),\n    buffer_layout_1.u32('root'),\n    buffer_layout_1.u32('leafCount'),\n    layout_1.zeros(4),\n], 'header');\nconst SLAB_NODE_LAYOUT = buffer_layout_1.union(buffer_layout_1.u32('tag'), buffer_layout_1.blob(68), 'node');\nSLAB_NODE_LAYOUT.addVariant(0, buffer_layout_1.struct([]), 'uninitialized');\nSLAB_NODE_LAYOUT.addVariant(1, buffer_layout_1.struct([\n    // Only the first prefixLen high-order bits of key are meaningful\n    buffer_layout_1.u32('prefixLen'),\n    layout_1.u128('key'),\n    buffer_layout_1.seq(buffer_layout_1.u32(), 2, 'children'),\n]), 'innerNode');\nSLAB_NODE_LAYOUT.addVariant(2, buffer_layout_1.struct([\n    buffer_layout_1.u8('ownerSlot'),\n    buffer_layout_1.u8('feeTier'),\n    buffer_layout_1.blob(2),\n    layout_1.u128('key'),\n    layout_1.publicKeyLayout('owner'),\n    layout_1.u64('quantity'),\n    layout_1.u64('clientOrderId'),\n]), 'leafNode');\nSLAB_NODE_LAYOUT.addVariant(3, buffer_layout_1.struct([buffer_layout_1.u32('next')]), 'freeNode');\nSLAB_NODE_LAYOUT.addVariant(4, buffer_layout_1.struct([]), 'lastFreeNode');\nexports.SLAB_LAYOUT = buffer_layout_1.struct([\n    SLAB_HEADER_LAYOUT,\n    buffer_layout_1.seq(SLAB_NODE_LAYOUT, buffer_layout_1.offset(SLAB_HEADER_LAYOUT.layoutFor('bumpIndex'), SLAB_HEADER_LAYOUT.offsetOf('bumpIndex') - SLAB_HEADER_LAYOUT.span), 'nodes'),\n]);\nclass Slab {\n    constructor(header, nodes) {\n        this.header = header;\n        this.nodes = nodes;\n    }\n    static decode(buffer) {\n        return exports.SLAB_LAYOUT.decode(buffer);\n    }\n    get(searchKey) {\n        if (this.header.leafCount === 0) {\n            return null;\n        }\n        if (!(searchKey instanceof bn_js_1.default)) {\n            searchKey = new bn_js_1.default(searchKey);\n        }\n        let index = this.header.root;\n        while (true) {\n            const { leafNode, innerNode } = this.nodes[index];\n            if (leafNode) {\n                if (leafNode.key.eq(searchKey)) {\n                    return leafNode;\n                }\n                return null;\n            }\n            else if (innerNode) {\n                if (!innerNode.key\n                    .xor(searchKey)\n                    .iushrn(128 - innerNode.prefixLen)\n                    .isZero()) {\n                    return null;\n                }\n                index =\n                    innerNode.children[searchKey.testn(128 - innerNode.prefixLen - 1) ? 1 : 0];\n            }\n            else {\n                throw new Error('Invalid slab');\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this.items(false);\n    }\n    *items(descending = false) {\n        if (this.header.leafCount === 0) {\n            return;\n        }\n        const stack = [this.header.root];\n        while (stack.length > 0) {\n            const index = stack.pop();\n            const { leafNode, innerNode } = this.nodes[index];\n            if (leafNode) {\n                yield leafNode;\n            }\n            else if (innerNode) {\n                if (descending) {\n                    stack.push(innerNode.children[0], innerNode.children[1]);\n                }\n                else {\n                    stack.push(innerNode.children[1], innerNode.children[0]);\n                }\n            }\n        }\n    }\n}\nexports.Slab = Slab;\nlayout_1.setLayoutDecoder(exports.SLAB_LAYOUT, ({ header, nodes }) => new Slab(header, nodes));\n//# sourceMappingURL=slab.js.map","import { useCallback, useEffect, useState } from 'react';\nimport { PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\n\nexport function isValidPublicKey(key) {\n  if (!key) {\n    return false;\n  }\n  try {\n    new PublicKey(key);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport async function sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport const percentFormat = new Intl.NumberFormat(undefined, {\n  style: 'percent',\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n});\n\nexport function floorToDecimal(\n  value: number,\n  decimals: number | undefined | null,\n) {\n  return decimals ? Math.floor(value * 10 ** decimals) / 10 ** decimals : value;\n}\n\nexport function roundToDecimal(\n  value: number,\n  decimals: number | undefined | null,\n) {\n  return decimals ? Math.round(value * 10 ** decimals) / 10 ** decimals : value;\n}\n\nexport function getDecimalCount(value): number {\n  if (!isNaN(value) && Math.floor(value) !== value)\n    return value.toString().split('.')[1].length || 0;\n  return 0;\n}\n\nexport function divideBnToNumber(numerator: BN, denominator: BN): number {\n  const quotient = numerator.div(denominator).toNumber();\n  const rem = numerator.umod(denominator);\n  const gcd = rem.gcd(denominator);\n  return quotient + rem.div(gcd).toNumber() / denominator.div(gcd).toNumber();\n}\n\nexport function getTokenMultiplierFromDecimals(decimals: number): BN {\n  return new BN(10).pow(new BN(decimals));\n}\n\nconst localStorageListeners = {};\n\nexport function useLocalStorageStringState(\n  key: string,\n  defaultState: string | null = null,\n): [string | null, (newState: string | null) => void] {\n  const state = localStorage.getItem(key) || defaultState;\n\n  const [, notify] = useState(key + '\\n' + state);\n\n  useEffect(() => {\n    if (!localStorageListeners[key]) {\n      localStorageListeners[key] = [];\n    }\n    localStorageListeners[key].push(notify);\n    return () => {\n      localStorageListeners[key] = localStorageListeners[key].filter(\n        (listener) => listener !== notify,\n      );\n      if (localStorageListeners[key].length === 0) {\n        delete localStorageListeners[key];\n      }\n    };\n  }, [key]);\n\n  const setState = useCallback<(newState: string | null) => void>(\n    (newState) => {\n      const changed = state !== newState;\n      if (!changed) {\n        return;\n      }\n\n      if (newState === null) {\n        localStorage.removeItem(key);\n      } else {\n        localStorage.setItem(key, newState);\n      }\n      localStorageListeners[key].forEach((listener) =>\n        listener(key + '\\n' + newState),\n      );\n    },\n    [state, key],\n  );\n\n  return [state, setState];\n}\n\nexport function useLocalStorageState<T = any>(\n  key: string,\n  defaultState: T | null = null,\n): [T, (newState: T) => void] {\n  let [stringState, setStringState] = useLocalStorageStringState(\n    key,\n    JSON.stringify(defaultState),\n  );\n  return [\n    stringState && JSON.parse(stringState),\n    (newState) => setStringState(JSON.stringify(newState)),\n  ];\n}\n\nexport function useEffectAfterTimeout(effect, timeout) {\n  useEffect(() => {\n    const handle = setTimeout(effect, timeout);\n    return () => clearTimeout(handle);\n  });\n}\n\nexport function useListener(emitter, eventName) {\n  const [, forceUpdate] = useState(0);\n  useEffect(() => {\n    const listener = () => forceUpdate((i) => i + 1);\n    emitter.on(eventName, listener);\n    return () => emitter.removeListener(eventName, listener);\n  }, [emitter, eventName]);\n}\n\nexport function abbreviateAddress(address, size = 4) {\n  const base58 = address.toBase58();\n  return base58.slice(0, size) + '…' + base58.slice(-size);\n}\n\nexport function isEqual(obj1, obj2, keys) {\n  if (!keys && Object.keys(obj1).length !== Object.keys(obj2).length) {\n    return false;\n  }\n  keys = keys || Object.keys(obj1);\n  for (const k of keys) {\n    if (obj1[k] !== obj2[k]) {\n      // shallow comparison\n      return false;\n    }\n  }\n  return true;\n}\n","import { useEffect, useReducer } from 'react';\n\nimport assert from 'assert';\n\nconst pageLoadTime = new Date();\n\nconst globalCache: Map<any, any> = new Map();\n\nclass FetchLoopListener<T = any> {\n  cacheKey: any;\n  fn: () => Promise<T>;\n  refreshInterval: number;\n  refreshIntervalOnError: number | null;\n  callback: () => void;\n  cacheNullValues: Boolean = true;\n\n  constructor(\n    cacheKey: any,\n    fn: () => Promise<T>,\n    refreshInterval: number,\n    refreshIntervalOnError: number | null,\n    callback: () => void,\n    cacheNullValues: Boolean,\n  ) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.refreshInterval = refreshInterval;\n    this.refreshIntervalOnError = refreshIntervalOnError;\n    this.callback = callback;\n    this.cacheNullValues = cacheNullValues;\n  }\n}\n\nclass FetchLoopInternal<T = any> {\n  cacheKey: any;\n  fn: () => Promise<T>;\n  timeoutId: null | any;\n  listeners: Set<FetchLoopListener<T>>;\n  errors: number;\n  cacheNullValues: Boolean = true;\n\n  constructor(cacheKey: any, fn: () => Promise<T>, cacheNullValues: Boolean) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.timeoutId = null;\n    this.listeners = new Set();\n    this.errors = 0;\n    this.cacheNullValues = cacheNullValues;\n  }\n\n  get refreshInterval(): number {\n    return Math.min(\n      ...[...this.listeners].map((listener) => listener.refreshInterval),\n    );\n  }\n\n  get refreshIntervalOnError(): number | null {\n    const refreshIntervalsOnError: number[] = [...this.listeners]\n      .map((listener) => listener.refreshIntervalOnError)\n      .filter((x): x is number => x !== null);\n    if (refreshIntervalsOnError.length === 0) {\n      return null;\n    }\n    return Math.min(...refreshIntervalsOnError);\n  }\n\n  get stopped(): boolean {\n    return this.listeners.size === 0;\n  }\n\n  addListener(listener: FetchLoopListener<T>): void {\n    const previousRefreshInterval = this.refreshInterval;\n    this.listeners.add(listener);\n    if (this.refreshInterval < previousRefreshInterval) {\n      this.refresh();\n    }\n  }\n\n  removeListener(listener: FetchLoopListener<T>): void {\n    assert(this.listeners.delete(listener));\n    if (this.stopped) {\n      if (this.timeoutId) {\n        clearTimeout(this.timeoutId);\n        this.timeoutId = null;\n      }\n    }\n  }\n\n  notifyListeners(): void {\n    this.listeners.forEach((listener) => listener.callback());\n  }\n\n  refresh = async () => {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    }\n    if (this.stopped) {\n      return;\n    }\n\n    let errored = false;\n    try {\n      const data = await this.fn();\n      if (!this.cacheNullValues && data === null) {\n        console.log(`Not caching null value for ${this.cacheKey}`);\n        // cached data has not changed so no need to re-render\n        this.errors = 0;\n        return data;\n      } else {\n        globalCache.set(this.cacheKey, data);\n        this.errors = 0;\n        this.notifyListeners();\n        return data;\n      }\n    } catch (error) {\n      ++this.errors;\n      console.warn(error);\n      errored = true;\n    } finally {\n      if (!this.timeoutId && !this.stopped) {\n        let waitTime = this.refreshInterval;\n        if (\n          errored &&\n          this.refreshIntervalOnError &&\n          this.refreshIntervalOnError > 0\n        ) {\n          waitTime = this.refreshIntervalOnError;\n        }\n\n        // Back off on errors.\n        if (this.errors > 0) {\n          waitTime = Math.min(1000 * 2 ** (this.errors - 1), 60000);\n        }\n\n        // Don't do any refreshing for the first five seconds, to make way for other things to load.\n        const timeSincePageLoad = +new Date() - +pageLoadTime;\n        if (timeSincePageLoad < 5000) {\n          waitTime += 5000 - timeSincePageLoad / 2;\n        }\n\n        // Refresh background pages slowly.\n        if (document.visibilityState === 'hidden') {\n          waitTime = 60000;\n        } else if (!document.hasFocus()) {\n          waitTime *= 1.5;\n        }\n\n        // Add jitter so we don't send all requests at the same time.\n        waitTime *= 0.8 + 0.4 * Math.random();\n\n        this.timeoutId = setTimeout(this.refresh, waitTime);\n      }\n    }\n  };\n}\n\nclass FetchLoops {\n  loops = new Map();\n\n  addListener<T>(listener: FetchLoopListener<T>) {\n    if (!this.loops.has(listener.cacheKey)) {\n      this.loops.set(\n        listener.cacheKey,\n        new FetchLoopInternal<T>(\n          listener.cacheKey,\n          listener.fn,\n          listener.cacheNullValues,\n        ),\n      );\n    }\n    this.loops.get(listener.cacheKey).addListener(listener);\n  }\n\n  removeListener<T>(listener: FetchLoopListener<T>) {\n    const loop = this.loops.get(listener.cacheKey);\n    loop.removeListener(listener);\n    if (loop.stopped) {\n      this.loops.delete(listener.cacheKey);\n    }\n  }\n\n  refresh(cacheKey) {\n    if (this.loops.has(cacheKey)) {\n      this.loops.get(cacheKey).refresh();\n    }\n  }\n\n  refreshAll() {\n    return Promise.all([...this.loops.values()].map((loop) => loop.refresh()));\n  }\n}\nconst globalLoops = new FetchLoops();\n\nexport function useAsyncData<T = any>(\n  asyncFn: () => Promise<T>,\n  cacheKey: any,\n  { refreshInterval = 60000, refreshIntervalOnError = null } = {},\n  cacheNullValues: Boolean = true,\n): [null | undefined | T, boolean] {\n  const [, rerender] = useReducer((i) => i + 1, 0);\n\n  useEffect(() => {\n    if (!cacheKey) {\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      return () => {};\n    }\n    const listener = new FetchLoopListener<T>(\n      cacheKey,\n      asyncFn,\n      refreshInterval,\n      refreshIntervalOnError,\n      rerender,\n      cacheNullValues,\n    );\n    globalLoops.addListener(listener);\n    return () => globalLoops.removeListener(listener);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey, refreshInterval]);\n\n  if (!cacheKey) {\n    return [null, false];\n  }\n\n  const loaded = globalCache.has(cacheKey);\n  const data = loaded ? globalCache.get(cacheKey) : undefined;\n  return [data, loaded];\n}\n\nexport function refreshCache(cacheKey: any, clearCache = false): void {\n  if (clearCache) {\n    globalCache.delete(cacheKey);\n  }\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.refresh();\n    if (clearCache) {\n      loop.notifyListeners();\n    }\n  }\n}\n\nexport function refreshAllCaches(): void {\n  for (const loop of globalLoops.loops.values()) {\n    loop.refresh();\n  }\n}\n\nexport function setCache(\n  cacheKey: any,\n  value: any,\n  { initializeOnly = false } = {},\n): void {\n  if (initializeOnly && globalCache.has(cacheKey)) {\n    return;\n  }\n  globalCache.set(cacheKey, value);\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.notifyListeners();\n  }\n}\n","import { useLocalStorageState } from './utils';\nimport { Account, AccountInfo, Connection, PublicKey } from '@solana/web3.js';\nimport React, { useContext, useEffect, useMemo } from 'react';\nimport { setCache, useAsyncData } from './fetch-loop';\nimport tuple from 'immutable-tuple';\nimport { ConnectionContextValues, EndpointInfo } from './types';\n\nexport const ENDPOINTS: EndpointInfo[] = [\n  {\n    name: 'mainnet-beta',\n    endpoint: 'https://solana-api.projectserum.com',\n    custom: false,\n  },\n  { name: 'localnet', endpoint: 'http://127.0.0.1:8899', custom: false },\n];\n\nconst accountListenerCount = new Map();\n\nconst ConnectionContext: React.Context<null | ConnectionContextValues> = React.createContext<null | ConnectionContextValues>(\n  null,\n);\n\nexport function ConnectionProvider({ children }) {\n  const [endpoint, setEndpoint] = useLocalStorageState<string>(\n    'connectionEndpts',\n    ENDPOINTS[0].endpoint,\n  );\n  const [customEndpoints, setCustomEndpoints] = useLocalStorageState<\n    EndpointInfo[]\n  >('customConnectionEndpoints', []);\n  const availableEndpoints = ENDPOINTS.concat(customEndpoints);\n\n  const connection = useMemo(() => new Connection(endpoint, 'recent'), [\n    endpoint,\n  ]);\n  const sendConnection = useMemo(() => new Connection(endpoint, 'recent'), [\n    endpoint,\n  ]);\n\n  // The websocket library solana/web3.js uses closes its websocket connection when the subscription list\n  // is empty after opening its first time, preventing subsequent subscriptions from receiving responses.\n  // This is a hack to prevent the list from every getting empty\n  useEffect(() => {\n    const id = connection.onAccountChange(new Account().publicKey, () => {});\n    return () => {\n      connection.removeAccountChangeListener(id);\n    };\n  }, [connection]);\n\n  useEffect(() => {\n    const id = connection.onSlotChange(() => null);\n    return () => {\n      connection.removeSlotChangeListener(id);\n    };\n  }, [connection]);\n\n  useEffect(() => {\n    const id = sendConnection.onAccountChange(\n      new Account().publicKey,\n      () => {},\n    );\n    return () => {\n      sendConnection.removeAccountChangeListener(id);\n    };\n  }, [sendConnection]);\n\n  useEffect(() => {\n    const id = sendConnection.onSlotChange(() => null);\n    return () => {\n      sendConnection.removeSlotChangeListener(id);\n    };\n  }, [sendConnection]);\n\n  return (\n    <ConnectionContext.Provider\n      value={{\n        endpoint,\n        setEndpoint,\n        connection,\n        sendConnection,\n        availableEndpoints,\n        setCustomEndpoints,\n      }}\n    >\n      {children}\n    </ConnectionContext.Provider>\n  );\n}\n\nexport function useConnection() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context');\n  }\n  return context.connection;\n}\n\nexport function useSendConnection() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context');\n  }\n  return context.sendConnection;\n}\n\nexport function useConnectionConfig() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context');\n  }\n  return {\n    endpoint: context.endpoint,\n    endpointInfo: context.availableEndpoints.find(\n      (info) => info.endpoint === context.endpoint,\n    ),\n    setEndpoint: context.setEndpoint,\n    availableEndpoints: context.availableEndpoints,\n    setCustomEndpoints: context.setCustomEndpoints,\n  };\n}\n\nexport function useAccountInfo(\n  publicKey: PublicKey | undefined | null,\n): [AccountInfo<Buffer> | null | undefined, boolean] {\n  const connection = useConnection();\n  const cacheKey = tuple(connection, publicKey?.toBase58());\n  const [accountInfo, loaded] = useAsyncData<AccountInfo<Buffer> | null>(\n    async () => (publicKey ? connection.getAccountInfo(publicKey) : null),\n    cacheKey,\n    { refreshInterval: 60_000 },\n  );\n  useEffect(() => {\n    if (!publicKey) {\n      return;\n    }\n    if (accountListenerCount.has(cacheKey)) {\n      let currentItem = accountListenerCount.get(cacheKey);\n      ++currentItem.count;\n    } else {\n      let previousData: Buffer | null = null;\n      const subscriptionId = connection.onAccountChange(publicKey, (e) => {\n        if (e.data) {\n          if (!previousData || !previousData.equals(e.data)) {\n            setCache(cacheKey, e);\n          } else {\n          }\n          previousData = e.data;\n        }\n      });\n      accountListenerCount.set(cacheKey, { count: 1, subscriptionId });\n    }\n    return () => {\n      let currentItem = accountListenerCount.get(cacheKey);\n      let nextCount = currentItem.count - 1;\n      if (nextCount <= 0) {\n        connection.removeAccountChangeListener(currentItem.subscriptionId);\n        accountListenerCount.delete(cacheKey);\n      } else {\n        --currentItem.count;\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey]);\n  return [accountInfo, loaded];\n}\n\nexport function useAccountData(publicKey) {\n  const [accountInfo] = useAccountInfo(publicKey);\n  return accountInfo && accountInfo.data;\n}\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nexport default function Link({ external = false, ...props }) {\n  let { to, children, ...rest } = props;\n  if (external) {\n    return (\n      <a href={to} target=\"_blank\" rel=\"noopener noreferrer\" {...rest}>\n        {children}\n      </a>\n    );\n  }\n  return (\n    <RouterLink to={to} {...rest}>\n      {children}\n    </RouterLink>\n  );\n}\n","import React from 'react';\nimport { notification } from 'antd';\nimport Link from '../components/Link';\n\nexport function notify({\n  message,\n  description,\n  txid,\n  type = 'info',\n  placement = 'bottomLeft',\n}: {\n  message: string;\n  description?: string | JSX.Element;\n  txid?: string;\n  type?: string;\n  placement?: string;\n}) {\n  if (txid) {\n    description = (\n      <Link\n        external\n        to={'https://explorer.solana.com/tx/' + txid}\n        style={{ color: '#0000ff' }}\n      >\n        View transaction {txid.slice(0, 8)}...{txid.slice(txid.length - 8)}\n      </Link>\n    );\n  }\n  notification[type]({\n    message: <span style={{ color: 'black' }}>{message}</span>,\n    description: (\n      <span style={{ color: 'black', opacity: 0.5 }}>{description}</span>\n    ),\n    placement,\n    style: {\n      backgroundColor: 'white',\n    },\n  });\n}\n","import React, { useContext, useEffect, useMemo, useState } from 'react';\nimport Wallet from '@project-serum/sol-wallet-adapter';\nimport { notify } from './notifications';\nimport { useConnectionConfig } from './connection';\nimport { useLocalStorageState } from './utils';\nimport { WalletContextValues } from './types';\n\nexport const WALLET_PROVIDERS = [\n  { name: 'sollet.io', url: 'https://www.sollet.io' },\n];\n\nconst WalletContext = React.createContext<null | WalletContextValues>(null);\n\nexport function WalletProvider({ children }) {\n  const { endpoint } = useConnectionConfig();\n\n  const [savedProviderUrl, setProviderUrl] = useLocalStorageState(\n    'walletProvider',\n    'https://www.sollet.io',\n  );\n  let providerUrl;\n  if (!savedProviderUrl) {\n    providerUrl = 'https://www.sollet.io';\n  } else {\n    providerUrl = savedProviderUrl;\n  }\n\n  const wallet = useMemo(() => new Wallet(providerUrl, endpoint), [\n    providerUrl,\n    endpoint,\n  ]);\n\n  const [connected, setConnected] = useState(false);\n\n  useEffect(() => {\n    console.log('trying to connect');\n    wallet.on('connect', () => {\n      console.log('connected');\n      setConnected(true);\n      let walletPublicKey = wallet.publicKey.toBase58();\n      let keyToDisplay =\n        walletPublicKey.length > 20\n          ? `${walletPublicKey.substring(0, 7)}.....${walletPublicKey.substring(\n              walletPublicKey.length - 7,\n              walletPublicKey.length,\n            )}`\n          : walletPublicKey;\n      notify({\n        message: 'Wallet update',\n        description: 'Connected to wallet ' + keyToDisplay,\n      });\n    });\n    wallet.on('disconnect', () => {\n      setConnected(false);\n      notify({\n        message: 'Wallet update',\n        description: 'Disconnected from wallet',\n      });\n    });\n    return () => {\n      wallet.disconnect();\n      setConnected(false);\n    };\n  }, [wallet]);\n\n  return (\n    <WalletContext.Provider\n      value={{\n        wallet,\n        connected,\n        providerUrl,\n        setProviderUrl,\n        providerName:\n          WALLET_PROVIDERS.find(({ url }) => url === providerUrl)?.name ??\n          providerUrl,\n      }}\n    >\n      {children}\n    </WalletContext.Provider>\n  );\n}\n\nexport function useWallet() {\n  const context = useContext(WalletContext);\n  if (!context) {\n    throw new Error('Missing wallet context');\n  }\n  return {\n    connected: context.connected,\n    wallet: context.wallet,\n    providerUrl: context.providerUrl,\n    setProvider: context.setProviderUrl,\n    providerName: context.providerName,\n  };\n}\n","import { notify } from './notifications';\nimport { getDecimalCount, sleep } from './utils';\nimport { getSelectedTokenAccountForMint } from './markets';\nimport {\n  Account,\n  AccountInfo,\n  Connection,\n  PublicKey,\n  RpcResponseAndContext,\n  SystemProgram,\n  Transaction,\n  TransactionSignature,\n} from '@solana/web3.js';\nimport BN from 'bn.js';\nimport {\n  DexInstructions,\n  Market,\n  OpenOrders,\n  TOKEN_MINTS,\n  TokenInstructions,\n} from '@project-serum/serum';\nimport Wallet from '@project-serum/sol-wallet-adapter';\nimport { SelectedTokenAccounts, TokenAccount } from './types';\nimport { Order } from '@project-serum/serum/lib/market';\nimport { Buffer } from 'buffer';\nimport assert from 'assert';\nimport { struct } from 'superstruct';\n\nexport async function createTokenAccountTransaction({\n  connection,\n  wallet,\n  mintPublicKey,\n}: {\n  connection: Connection;\n  wallet: Wallet;\n  mintPublicKey: PublicKey;\n}): Promise<{\n  transaction: Transaction;\n  signer: Account;\n  newAccountPubkey: PublicKey;\n}> {\n  const newAccount = new Account();\n  const transaction = new Transaction();\n  const instruction = SystemProgram.createAccount({\n    fromPubkey: wallet.publicKey,\n    newAccountPubkey: newAccount.publicKey,\n    lamports: await connection.getMinimumBalanceForRentExemption(165),\n    space: 165,\n    programId: TokenInstructions.TOKEN_PROGRAM_ID,\n  });\n  transaction.add(instruction);\n  transaction.add(\n    TokenInstructions.initializeAccount({\n      account: newAccount.publicKey,\n      mint: mintPublicKey,\n      owner: wallet.publicKey,\n    }),\n  );\n  return {\n    transaction,\n    signer: newAccount,\n    newAccountPubkey: newAccount.publicKey,\n  };\n}\n\nexport async function settleFunds({\n  market,\n  openOrders,\n  connection,\n  wallet,\n  baseCurrencyAccount,\n  quoteCurrencyAccount,\n}: {\n  market: Market;\n  openOrders: OpenOrders;\n  connection: Connection;\n  wallet: Wallet;\n  baseCurrencyAccount: TokenAccount;\n  quoteCurrencyAccount: TokenAccount;\n}): Promise<string | undefined> {\n  if (\n    !market ||\n    !wallet ||\n    !connection ||\n    !openOrders ||\n    (!baseCurrencyAccount && !quoteCurrencyAccount)\n  ) {\n    notify({ message: 'Not connected' });\n    return;\n  }\n\n  let createAccountTransaction: Transaction | undefined;\n  let createAccountSigner: Account | undefined;\n  let baseCurrencyAccountPubkey = baseCurrencyAccount?.pubkey;\n  let quoteCurrencyAccountPubkey = quoteCurrencyAccount?.pubkey;\n\n  if (!baseCurrencyAccountPubkey) {\n    const result = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.baseMintAddress,\n    });\n    baseCurrencyAccountPubkey = result?.newAccountPubkey;\n    createAccountTransaction = result?.transaction;\n    createAccountSigner = result?.signer;\n  }\n  if (!quoteCurrencyAccountPubkey) {\n    const result = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.quoteMintAddress,\n    });\n    quoteCurrencyAccountPubkey = result?.newAccountPubkey;\n    createAccountTransaction = result?.transaction;\n    createAccountSigner = result?.signer;\n  }\n  let referrerQuoteWallet: PublicKey | null = null;\n  if (market.supportsReferralFees) {\n    const usdt = TOKEN_MINTS.find(({ name }) => name === 'USDT');\n    const usdc = TOKEN_MINTS.find(({ name }) => name === 'USDC');\n    if (\n      process.env.REACT_APP_USDT_REFERRAL_FEES_ADDRESS &&\n      usdt &&\n      market.quoteMintAddress.equals(usdt.address)\n    ) {\n      referrerQuoteWallet = new PublicKey(\n        process.env.REACT_APP_USDT_REFERRAL_FEES_ADDRESS,\n      );\n    } else if (\n      process.env.REACT_APP_USDC_REFERRAL_FEES_ADDRESS &&\n      usdc &&\n      market.quoteMintAddress.equals(usdc.address)\n    ) {\n      referrerQuoteWallet = new PublicKey(\n        process.env.REACT_APP_USDC_REFERRAL_FEES_ADDRESS,\n      );\n    }\n  }\n  const {\n    transaction: settleFundsTransaction,\n    signers: settleFundsSigners,\n  } = await market.makeSettleFundsTransaction(\n    connection,\n    openOrders,\n    baseCurrencyAccountPubkey,\n    quoteCurrencyAccountPubkey,\n    referrerQuoteWallet,\n  );\n\n  let transaction = mergeTransactions([\n    createAccountTransaction,\n    settleFundsTransaction,\n  ]);\n  let signers = createAccountSigner\n    ? [...settleFundsSigners, createAccountSigner]\n    : settleFundsSigners;\n\n  return await sendTransaction({\n    transaction,\n    signers,\n    wallet,\n    connection,\n    sendingMessage: 'Settling funds...',\n  });\n}\n\nexport async function settleAllFunds({\n  connection,\n  wallet,\n  tokenAccounts,\n  markets,\n  selectedTokenAccounts,\n}: {\n  connection: Connection;\n  wallet: Wallet;\n  tokenAccounts: TokenAccount[];\n  markets: Market[];\n  selectedTokenAccounts?: SelectedTokenAccounts;\n}) {\n  if (!markets || !wallet || !connection || !tokenAccounts) {\n    return;\n  }\n\n  const programIds: PublicKey[] = [];\n  markets\n    .reduce((cumulative, m) => {\n      // @ts-ignore\n      cumulative.push(m._programId);\n      return cumulative;\n    }, [])\n    .forEach((programId) => {\n      if (!programIds.find((p) => p.equals(programId))) {\n        programIds.push(programId);\n      }\n    });\n\n  const getOpenOrdersAccountsForProgramId = async (programId) => {\n    const openOrdersAccounts = await OpenOrders.findForOwner(\n      connection,\n      wallet.publicKey,\n      programId,\n    );\n    return openOrdersAccounts.filter(\n      (openOrders) =>\n        openOrders.baseTokenFree.toNumber() ||\n        openOrders.quoteTokenFree.toNumber(),\n    );\n  };\n\n  const openOrdersAccountsForProgramIds = await Promise.all(\n    programIds.map((programId) => getOpenOrdersAccountsForProgramId(programId)),\n  );\n  const openOrdersAccounts = openOrdersAccountsForProgramIds.reduce(\n    (accounts, current) => accounts.concat(current),\n    [],\n  );\n\n  const settleTransactions = (\n    await Promise.all(\n      openOrdersAccounts.map((openOrdersAccount) => {\n        const market = markets.find((m) =>\n          // @ts-ignore\n          m._decoded?.ownAddress?.equals(openOrdersAccount.market),\n        );\n        const baseMint = market?.baseMintAddress;\n        const quoteMint = market?.quoteMintAddress;\n\n        const selectedBaseTokenAccount = getSelectedTokenAccountForMint(\n          tokenAccounts,\n          baseMint,\n          baseMint &&\n            selectedTokenAccounts &&\n            selectedTokenAccounts[baseMint.toBase58()],\n        )?.pubkey;\n        const selectedQuoteTokenAccount = getSelectedTokenAccountForMint(\n          tokenAccounts,\n          quoteMint,\n          quoteMint &&\n            selectedTokenAccounts &&\n            selectedTokenAccounts[quoteMint.toBase58()],\n        )?.pubkey;\n        if (!selectedBaseTokenAccount || !selectedQuoteTokenAccount) {\n          return null;\n        }\n        return (\n          market &&\n          market.makeSettleFundsTransaction(\n            connection,\n            openOrdersAccount,\n            selectedBaseTokenAccount,\n            selectedQuoteTokenAccount,\n          )\n        );\n      }),\n    )\n  ).filter(\n    (\n      x,\n    ): x is {\n      signers: Account[];\n      transaction: Transaction;\n      payer: PublicKey;\n    } => !!x,\n  );\n  if (!settleTransactions || settleTransactions.length === 0) return;\n\n  const transactions = settleTransactions.slice(0, 4).map((t) => t.transaction);\n  const signers: Array<Account> = [];\n  settleTransactions\n    .reduce((cumulative: Array<Account>, t) => cumulative.concat(t.signers), [])\n    .forEach((signer) => {\n      if (!signers.find((s) => s.publicKey.equals(signer.publicKey))) {\n        signers.push(signer);\n      }\n    });\n\n  const transaction = mergeTransactions(transactions);\n\n  return await sendTransaction({\n    transaction,\n    signers,\n    wallet,\n    connection,\n  });\n}\n\nexport async function cancelOrder(params: {\n  market: Market;\n  connection: Connection;\n  wallet: Wallet;\n  order: Order;\n}) {\n  return cancelOrders({ ...params, orders: [params.order] });\n}\n\nexport async function cancelOrders({\n  market,\n  wallet,\n  connection,\n  orders,\n}: {\n  market: Market;\n  wallet: Wallet;\n  connection: Connection;\n  orders: Order[];\n}) {\n  const transaction = market.makeMatchOrdersTransaction(5);\n  orders.forEach((order) => {\n    transaction.add(\n      market.makeCancelOrderInstruction(connection, wallet.publicKey, order),\n    );\n  });\n  transaction.add(market.makeMatchOrdersTransaction(5));\n  return await sendTransaction({\n    transaction,\n    wallet,\n    connection,\n    sendingMessage: 'Sending cancel...',\n  });\n}\n\nexport async function placeOrder({\n  side,\n  price,\n  size,\n  orderType,\n  market,\n  connection,\n  wallet,\n  baseCurrencyAccount,\n  quoteCurrencyAccount,\n}: {\n  side: 'buy' | 'sell';\n  price: number;\n  size: number;\n  orderType: 'ioc' | 'postOnly' | 'limit';\n  market: Market | undefined | null;\n  connection: Connection;\n  wallet: Wallet;\n  baseCurrencyAccount: PublicKey | undefined;\n  quoteCurrencyAccount: PublicKey | undefined;\n}) {\n  let formattedMinOrderSize =\n    market?.minOrderSize?.toFixed(getDecimalCount(market.minOrderSize)) ||\n    market?.minOrderSize;\n  let formattedTickSize =\n    market?.tickSize?.toFixed(getDecimalCount(market.tickSize)) ||\n    market?.tickSize;\n  const isIncrement = (num, step) =>\n    Math.abs((num / step) % 1) < 1e-5 ||\n    Math.abs(((num / step) % 1) - 1) < 1e-5;\n  if (isNaN(price)) {\n    notify({ message: 'Invalid price', type: 'error' });\n    return;\n  }\n  if (isNaN(size)) {\n    notify({ message: 'Invalid size', type: 'error' });\n    return;\n  }\n  if (!wallet || !wallet.publicKey) {\n    notify({ message: 'Connect wallet', type: 'error' });\n    return;\n  }\n  if (!market) {\n    notify({ message: 'Invalid  market', type: 'error' });\n    return;\n  }\n  if (!isIncrement(size, market.minOrderSize)) {\n    notify({\n      message: `Size must be an increment of ${formattedMinOrderSize}`,\n      type: 'error',\n    });\n    return;\n  }\n  if (size < market.minOrderSize) {\n    notify({ message: 'Size too small', type: 'error' });\n    return;\n  }\n  if (!isIncrement(price, market.tickSize)) {\n    notify({\n      message: `Price must be an increment of ${formattedTickSize}`,\n      type: 'error',\n    });\n    return;\n  }\n  if (price < market.tickSize) {\n    notify({ message: 'Price under tick size', type: 'error' });\n    return;\n  }\n  const owner = wallet.publicKey;\n\n  const payer = side === 'sell' ? baseCurrencyAccount : quoteCurrencyAccount;\n  if (!payer) {\n    notify({\n      message: 'Need an SPL token account for cost currency',\n      type: 'error',\n    });\n    return;\n  }\n  const params = {\n    owner,\n    payer,\n    side,\n    price,\n    size,\n    orderType,\n  };\n  console.log(params);\n\n  const transaction = market.makeMatchOrdersTransaction(5);\n  let {\n    transaction: placeOrderTx,\n    signers,\n  } = await market.makePlaceOrderTransaction(\n    connection,\n    params,\n    10_000,\n    10_000,\n  );\n  transaction.add(placeOrderTx);\n  transaction.add(market.makeMatchOrdersTransaction(5));\n\n  return await sendTransaction({\n    transaction,\n    wallet,\n    connection,\n    signers,\n    sendingMessage: 'Sending order...',\n  });\n}\n\nexport async function listMarket({\n  connection,\n  wallet,\n  baseMint,\n  quoteMint,\n  baseLotSize,\n  quoteLotSize,\n  dexProgramId,\n}: {\n  connection: Connection;\n  wallet: Wallet;\n  baseMint: PublicKey;\n  quoteMint: PublicKey;\n  baseLotSize: number;\n  quoteLotSize: number;\n  dexProgramId: PublicKey;\n}) {\n  const market = new Account();\n  const requestQueue = new Account();\n  const eventQueue = new Account();\n  const bids = new Account();\n  const asks = new Account();\n  const baseVault = new Account();\n  const quoteVault = new Account();\n  const feeRateBps = 0;\n  const quoteDustThreshold = new BN(100);\n\n  async function getVaultOwnerAndNonce() {\n    const nonce = new BN(0);\n    while (true) {\n      try {\n        const vaultOwner = await PublicKey.createProgramAddress(\n          [market.publicKey.toBuffer(), nonce.toArrayLike(Buffer, 'le', 8)],\n          dexProgramId,\n        );\n        return [vaultOwner, nonce];\n      } catch (e) {\n        nonce.iaddn(1);\n      }\n    }\n  }\n  const [vaultOwner, vaultSignerNonce] = await getVaultOwnerAndNonce();\n\n  const tx1 = new Transaction();\n  tx1.add(\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: baseVault.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(165),\n      space: 165,\n      programId: TokenInstructions.TOKEN_PROGRAM_ID,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: quoteVault.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(165),\n      space: 165,\n      programId: TokenInstructions.TOKEN_PROGRAM_ID,\n    }),\n    TokenInstructions.initializeAccount({\n      account: baseVault.publicKey,\n      mint: baseMint,\n      owner: vaultOwner,\n    }),\n    TokenInstructions.initializeAccount({\n      account: quoteVault.publicKey,\n      mint: quoteMint,\n      owner: vaultOwner,\n    }),\n  );\n\n  const tx2 = new Transaction();\n  tx2.add(\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: market.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(\n        Market.getLayout(dexProgramId).span,\n      ),\n      space: Market.getLayout(dexProgramId).span,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: requestQueue.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(5120 + 12),\n      space: 5120 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: eventQueue.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(262144 + 12),\n      space: 262144 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: bids.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(65536 + 12),\n      space: 65536 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: asks.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(65536 + 12),\n      space: 65536 + 12,\n      programId: dexProgramId,\n    }),\n    DexInstructions.initializeMarket({\n      market: market.publicKey,\n      requestQueue: requestQueue.publicKey,\n      eventQueue: eventQueue.publicKey,\n      bids: bids.publicKey,\n      asks: asks.publicKey,\n      baseVault: baseVault.publicKey,\n      quoteVault: quoteVault.publicKey,\n      baseMint,\n      quoteMint,\n      baseLotSize: new BN(baseLotSize),\n      quoteLotSize: new BN(quoteLotSize),\n      feeRateBps,\n      vaultSignerNonce,\n      quoteDustThreshold,\n      programId: dexProgramId,\n    }),\n  );\n\n  const signedTransactions = await Promise.all([\n    signTransaction({\n      transaction: tx1,\n      wallet,\n      connection,\n      signers: [baseVault, quoteVault],\n    }),\n    signTransaction({\n      transaction: tx2,\n      wallet,\n      connection,\n      signers: [market, requestQueue, eventQueue, bids, asks],\n    }),\n  ]);\n  for (let signedTransaction of signedTransactions) {\n    await sendSignedTransaction({\n      signedTransaction,\n      connection,\n    });\n  }\n\n  return market.publicKey;\n}\n\nconst getUnixTs = () => {\n  return new Date().getTime() / 1000;\n};\n\nconst DEFAULT_TIMEOUT = 15000;\n\nexport async function sendTransaction({\n  transaction,\n  wallet,\n  signers = [],\n  connection,\n  sendingMessage = 'Sending transaction...',\n  sentMessage = 'Transaction sent',\n  successMessage = 'Transaction confirmed',\n  timeout = DEFAULT_TIMEOUT,\n}: {\n  transaction: Transaction;\n  wallet: Wallet;\n  signers?: Array<Account>;\n  connection: Connection;\n  sendingMessage?: string;\n  sentMessage?: string;\n  successMessage?: string;\n  timeout?: number;\n}) {\n  const signedTransaction = await signTransaction({\n    transaction,\n    wallet,\n    signers,\n    connection,\n  });\n  return await sendSignedTransaction({\n    signedTransaction,\n    connection,\n    sendingMessage,\n    sentMessage,\n    successMessage,\n    timeout,\n  });\n}\n\nexport async function signTransaction({\n  transaction,\n  wallet,\n  signers = [],\n  connection,\n}: {\n  transaction: Transaction;\n  wallet: Wallet;\n  signers?: Array<Account>;\n  connection: Connection;\n}) {\n  transaction.recentBlockhash = (\n    await connection.getRecentBlockhash('max')\n  ).blockhash;\n  transaction.setSigners(wallet.publicKey, ...signers.map((s) => s.publicKey));\n  if (signers.length > 0) {\n    transaction.partialSign(...signers);\n  }\n  return await wallet.signTransaction(transaction);\n}\n\nexport async function sendSignedTransaction({\n  signedTransaction,\n  connection,\n  sendingMessage = 'Sending transaction...',\n  sentMessage = 'Transaction sent',\n  successMessage = 'Transaction confirmed',\n  timeout = DEFAULT_TIMEOUT,\n}: {\n  signedTransaction: Transaction;\n  connection: Connection;\n  sendingMessage?: string;\n  sentMessage?: string;\n  successMessage?: string;\n  timeout?: number;\n}): Promise<string> {\n  const rawTransaction = signedTransaction.serialize();\n  const startTime = getUnixTs();\n  notify({ message: sendingMessage });\n  const txid: TransactionSignature = await connection.sendRawTransaction(\n    rawTransaction,\n    {\n      skipPreflight: true,\n    },\n  );\n  notify({ message: sentMessage, type: 'success', txid });\n\n  console.log('Started awaiting confirmation for', txid);\n\n  let done = false;\n  (async () => {\n    while (!done && getUnixTs() - startTime < timeout) {\n      connection.sendRawTransaction(rawTransaction, {\n        skipPreflight: true,\n      });\n      await sleep(300);\n    }\n  })();\n  try {\n    await awaitTransactionSignatureConfirmation(txid, timeout, connection);\n  } catch (err) {\n    if (err.timeout) {\n      throw new Error('Timed out awaiting confirmation on transaction');\n    }\n    throw new Error('Transaction failed');\n  } finally {\n    done = true;\n  }\n  notify({ message: successMessage, type: 'success', txid });\n\n  console.log('Latency', txid, getUnixTs() - startTime);\n  return txid;\n}\n\nasync function awaitTransactionSignatureConfirmation(\n  txid: TransactionSignature,\n  timeout: number,\n  connection: Connection,\n) {\n  let done = false;\n  const result = await new Promise((resolve, reject) => {\n    (async () => {\n      setTimeout(() => {\n        if (done) {\n          return;\n        }\n        done = true;\n        console.log('Timed out for txid', txid);\n        reject({ timeout: true });\n      }, timeout);\n      try {\n        connection.onSignature(\n          txid,\n          (result) => {\n            console.log('WS confirmed', txid, result);\n            done = true;\n            if (result.err) {\n              reject(result.err);\n            } else {\n              resolve(result);\n            }\n          },\n          'recent',\n        );\n        console.log('Set up WS connection', txid);\n      } catch (e) {\n        done = true;\n        console.log('WS error in setup', txid, e);\n      }\n      while (!done) {\n        // eslint-disable-next-line no-loop-func\n        (async () => {\n          try {\n            const signatureStatuses = await connection.getSignatureStatuses([\n              txid,\n            ]);\n            const result = signatureStatuses && signatureStatuses.value[0];\n            if (!done) {\n              if (!result) {\n                console.log('REST null result for', txid, result);\n              } else if (result.err) {\n                console.log('REST error for', txid, result);\n                done = true;\n                reject(result.err);\n              } else if (!result.confirmations) {\n                console.log('REST no confirmations for', txid, result);\n              } else {\n                console.log('REST confirmation for', txid, result);\n                done = true;\n                resolve(result);\n              }\n            }\n          } catch (e) {\n            if (!done) {\n              console.log('REST connection error: txid', txid, e);\n            }\n          }\n        })();\n        await sleep(300);\n      }\n    })();\n  });\n  done = true;\n  return result;\n}\n\nfunction mergeTransactions(transactions: (Transaction | undefined)[]) {\n  const transaction = new Transaction();\n  transactions\n    .filter((t): t is Transaction => t !== undefined)\n    .forEach((t) => {\n      transaction.add(t);\n    });\n  return transaction;\n}\n\nfunction jsonRpcResult(resultDescription: any) {\n  const jsonRpcVersion = struct.literal('2.0');\n  return struct.union([\n    struct({\n      jsonrpc: jsonRpcVersion,\n      id: 'string',\n      error: 'any',\n    }),\n    struct({\n      jsonrpc: jsonRpcVersion,\n      id: 'string',\n      error: 'null?',\n      result: resultDescription,\n    }),\n  ]);\n}\n\nfunction jsonRpcResultAndContext(resultDescription: any) {\n  return jsonRpcResult({\n    context: struct({\n      slot: 'number',\n    }),\n    value: resultDescription,\n  });\n}\n\nconst AccountInfoResult = struct({\n  executable: 'boolean',\n  owner: 'string',\n  lamports: 'number',\n  data: 'any',\n  rentEpoch: 'number?',\n});\n\nexport const GetMultipleAccountsAndContextRpcResult = jsonRpcResultAndContext(\n  struct.array([struct.union(['null', AccountInfoResult])]),\n);\n\nexport async function getMultipleSolanaAccounts(\n  connection: Connection,\n  publicKeys: PublicKey[],\n): Promise<\n  RpcResponseAndContext<{ [key: string]: AccountInfo<Buffer> | null }>\n> {\n  const args = [publicKeys.map((k) => k.toBase58()), { commitment: 'recent' }];\n  // @ts-ignore\n  const unsafeRes = await connection._rpcRequest('getMultipleAccounts', args);\n  const res = GetMultipleAccountsAndContextRpcResult(unsafeRes);\n  if (res.error) {\n    throw new Error(\n      'failed to get info about accounts ' +\n        publicKeys.map((k) => k.toBase58()).join(', ') +\n        ': ' +\n        res.error.message,\n    );\n  }\n  assert(typeof res.result !== 'undefined');\n  const accounts: Array<{\n    executable: any;\n    owner: PublicKey;\n    lamports: any;\n    data: Buffer;\n  } | null> = [];\n  for (const account of res.result.value) {\n    let value: {\n      executable: any;\n      owner: PublicKey;\n      lamports: any;\n      data: Buffer;\n    } | null = null;\n    if (res.result.value) {\n      const { executable, owner, lamports, data } = account;\n      assert(data[1] === 'base64');\n      value = {\n        executable,\n        owner: new PublicKey(owner),\n        lamports,\n        data: Buffer.from(data[0], 'base64'),\n      };\n    }\n    accounts.push(value);\n  }\n  return {\n    context: {\n      slot: res.result.context.slot,\n    },\n    value: Object.fromEntries(\n      accounts.map((account, i) => [publicKeys[i].toBase58(), account]),\n    ),\n  };\n}\n","import * as BufferLayout from 'buffer-layout';\nimport bs58 from 'bs58';\nimport { AccountInfo, Connection, PublicKey } from '@solana/web3.js';\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\nimport { TokenAccount } from './types';\nimport { TOKEN_MINTS } from '@project-serum/serum';\nimport { useAllMarkets, useMarket, useTokenAccounts } from './markets';\nimport { getMultipleSolanaAccounts } from './send';\nimport { useConnection } from './connection';\nimport { useAsyncData } from './fetch-loop';\nimport tuple from 'immutable-tuple';\nimport BN from 'bn.js';\n\nexport const ACCOUNT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(32, 'mint'),\n  BufferLayout.blob(32, 'owner'),\n  BufferLayout.nu64('amount'),\n  BufferLayout.blob(93),\n]);\n\nexport const MINT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(36),\n  BufferLayout.blob(8, 'supply'),\n  BufferLayout.u8('decimals'),\n  BufferLayout.u8('initialized'),\n  BufferLayout.blob(36),\n]);\n\nexport function parseTokenAccountData(\n  data: Buffer,\n): { mint: PublicKey; owner: PublicKey; amount: number } {\n  let { mint, owner, amount } = ACCOUNT_LAYOUT.decode(data);\n  return {\n    mint: new PublicKey(mint),\n    owner: new PublicKey(owner),\n    amount,\n  };\n}\n\nexport interface MintInfo {\n  decimals: number;\n  initialized: boolean;\n  supply: BN;\n}\n\nexport function parseTokenMintData(data): MintInfo {\n  let { decimals, initialized, supply } = MINT_LAYOUT.decode(data);\n  return {\n    decimals,\n    initialized: !!initialized,\n    supply: new BN(supply, 10, 'le'),\n  };\n}\n\nexport function getOwnedAccountsFilters(publicKey: PublicKey) {\n  return [\n    {\n      memcmp: {\n        offset: ACCOUNT_LAYOUT.offsetOf('owner'),\n        bytes: publicKey.toBase58(),\n      },\n    },\n    {\n      dataSize: ACCOUNT_LAYOUT.span,\n    },\n  ];\n}\n\nexport const TOKEN_PROGRAM_ID = new PublicKey(\n  'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n);\n\nexport async function getOwnedTokenAccounts(\n  connection: Connection,\n  publicKey: PublicKey,\n): Promise<Array<{ publicKey: PublicKey; accountInfo: AccountInfo<Buffer> }>> {\n  let filters = getOwnedAccountsFilters(publicKey);\n  // @ts-ignore\n  let resp = await connection._rpcRequest('getProgramAccounts', [\n    TOKEN_PROGRAM_ID.toBase58(),\n    {\n      commitment: connection.commitment,\n      filters,\n    },\n  ]);\n  if (resp.error) {\n    throw new Error(\n      'failed to get token accounts owned by ' +\n        publicKey.toBase58() +\n        ': ' +\n        resp.error.message,\n    );\n  }\n  return resp.result\n    .map(({ pubkey, account: { data, executable, owner, lamports } }) => ({\n      publicKey: new PublicKey(pubkey),\n      accountInfo: {\n        data: bs58.decode(data),\n        executable,\n        owner: new PublicKey(owner),\n        lamports,\n      },\n    }))\n    .filter(({ accountInfo }) => {\n      // TODO: remove this check once mainnet is updated\n      return filters.every((filter) => {\n        if (filter.dataSize) {\n          return accountInfo.data.length === filter.dataSize;\n        } else if (filter.memcmp) {\n          let filterBytes = bs58.decode(filter.memcmp.bytes);\n          return accountInfo.data\n            .slice(\n              filter.memcmp.offset,\n              filter.memcmp.offset + filterBytes.length,\n            )\n            .equals(filterBytes);\n        }\n        return false;\n      });\n    });\n}\n\nexport async function getTokenAccountInfo(\n  connection: Connection,\n  ownerAddress: PublicKey,\n) {\n  let [splAccounts, account] = await Promise.all([\n    getOwnedTokenAccounts(connection, ownerAddress),\n    connection.getAccountInfo(ownerAddress),\n  ]);\n  const parsedSplAccounts: TokenAccount[] = splAccounts.map(\n    ({ publicKey, accountInfo }) => {\n      return {\n        pubkey: publicKey,\n        account: accountInfo,\n        effectiveMint: parseTokenAccountData(accountInfo.data).mint,\n      };\n    },\n  );\n  return parsedSplAccounts.concat({\n    pubkey: ownerAddress,\n    account,\n    effectiveMint: WRAPPED_SOL_MINT,\n  });\n}\n\nexport function useMintToTickers(): { [mint: string]: string } {\n  const { customMarkets } = useMarket();\n  const [markets] = useAllMarkets(customMarkets);\n  const mintsToTickers = Object.fromEntries(\n    TOKEN_MINTS.map((mint) => [mint.address.toBase58(), mint.name]),\n  );\n  for (let market of markets || []) {\n    const customMarketInfo = customMarkets.find(\n      (customMarket) =>\n        customMarket.address === market.market.address.toBase58(),\n    );\n    if (!(market.market.baseMintAddress.toBase58() in mintsToTickers)) {\n      if (customMarketInfo) {\n        mintsToTickers[market.market.baseMintAddress.toBase58()] =\n          customMarketInfo.baseLabel || `${customMarketInfo.name}_BASE`;\n      }\n    }\n    if (!(market.market.quoteMintAddress.toBase58() in mintsToTickers)) {\n      if (customMarketInfo) {\n        mintsToTickers[market.market.quoteMintAddress.toBase58()] =\n          customMarketInfo.quoteLabel || `${customMarketInfo.name}_QUOTE`;\n      }\n    }\n  }\n  return mintsToTickers;\n}\n\nconst _VERY_SLOW_REFRESH_INTERVAL = 5000 * 1000;\n\nexport function useMintInfos(): [\n  (\n    | {\n        [mintAddress: string]: {\n          decimals: number;\n          initialized: boolean;\n        } | null;\n      }\n    | null\n    | undefined\n  ),\n  boolean,\n] {\n  const connection = useConnection();\n  const { customMarkets } = useMarket();\n  const [tokenAccounts] = useTokenAccounts();\n  const [allMarkets] = useAllMarkets(customMarkets);\n\n  const allMints = (tokenAccounts || [])\n    .map((account) => account.effectiveMint)\n    .concat(\n      (allMarkets || []).map((marketInfo) => marketInfo.market.baseMintAddress),\n    )\n    .concat(\n      (allMarkets || []).map(\n        (marketInfo) => marketInfo.market.quoteMintAddress,\n      ),\n    );\n  const uniqueMints = [...new Set(allMints.map((mint) => mint.toBase58()))].map(\n    (stringMint) => new PublicKey(stringMint),\n  );\n\n  const getAllMintInfo = async () => {\n    const mintInfos = await getMultipleSolanaAccounts(connection, uniqueMints);\n    return Object.fromEntries(\n      Object.entries(mintInfos.value).map(([key, accountInfo]) => [\n        key,\n        accountInfo && parseTokenMintData(accountInfo.data),\n      ]),\n    );\n  };\n\n  return useAsyncData(\n    getAllMintInfo,\n    tuple(\n      'getAllMintInfo',\n      connection,\n      (tokenAccounts || []).length,\n      (allMarkets || []).length,\n    ),\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\n  );\n}\n","import { BonfidaTrade } from './types';\n\nexport default class BonfidaApi {\n  static URL: string = 'https://serum-api.bonfida.com/';\n\n  static async get(path: string) {\n    try {\n      const response = await fetch(this.URL + path);\n      if (response.ok) {\n        const responseJson = await response.json();\n        return responseJson.success ? responseJson.data : null;\n      }\n    } catch (err) {\n      console.log(`Error fetching from Bonfida API ${path}: ${err}`);\n    }\n    return null;\n  }\n\n  static async getRecentTrades(\n    marketAddress: string,\n  ): Promise<BonfidaTrade[] | null> {\n    return BonfidaApi.get(`trades/address/${marketAddress}`);\n  }\n}\n","import {\n  decodeEventQueue,\n  Market,\n  MARKETS,\n  OpenOrders,\n  Orderbook,\n  TOKEN_MINTS,\n  TokenInstructions,\n} from '@project-serum/serum';\nimport { PublicKey } from '@solana/web3.js';\nimport React, { useContext, useEffect, useState } from 'react';\nimport {\n  divideBnToNumber,\n  floorToDecimal,\n  getTokenMultiplierFromDecimals,\n  useLocalStorageState,\n} from './utils';\nimport { refreshCache, useAsyncData } from './fetch-loop';\nimport { useAccountData, useAccountInfo, useConnection } from './connection';\nimport { useWallet } from './wallet';\nimport tuple from 'immutable-tuple';\nimport { notify } from './notifications';\nimport BN from 'bn.js';\nimport {\n  getTokenAccountInfo,\n  parseTokenAccountData,\n  useMintInfos,\n} from './tokens';\nimport {\n  Balances,\n  CustomMarketInfo,\n  DeprecatedOpenOrdersBalances,\n  FullMarketInfo,\n  MarketContextValues,\n  MarketInfo,\n  OrderWithMarketAndMarketName,\n  SelectedTokenAccounts,\n  TokenAccount,\n  Trade,\n} from './types';\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\nimport { Order } from '@project-serum/serum/lib/market';\nimport BonfidaApi from './bonfidaConnector';\n\n// Used in debugging, should be false in production\nconst _IGNORE_DEPRECATED = false;\n\nconst USE_MARKETS: MarketInfo[] = _IGNORE_DEPRECATED\n  ? MARKETS.map((m) => ({ ...m, deprecated: false }))\n  : MARKETS;\n\nexport function useMarketsList() {\n  return USE_MARKETS.filter(({ deprecated }) => !deprecated);\n}\n\nexport function useAllMarkets(customMarkets) {\n  const connection = useConnection();\n\n  const getAllMarkets = async () => {\n    const markets: Array<{\n      market: Market;\n      marketName: string;\n      programId: PublicKey;\n    } | null> = await Promise.all(\n      getMarketInfos(customMarkets).map(async (marketInfo) => {\n        try {\n          const market = await Market.load(\n            connection,\n            marketInfo.address,\n            {},\n            marketInfo.programId,\n          );\n          return {\n            market,\n            marketName: marketInfo.name,\n            programId: marketInfo.programId,\n          };\n        } catch (e) {\n          notify({\n            message: 'Error loading all market',\n            description: e.message,\n            type: 'error',\n          });\n          return null;\n        }\n      }),\n    );\n    return markets.filter(\n      (m): m is { market: Market; marketName: string; programId: PublicKey } =>\n        !!m,\n    );\n  };\n  return useAsyncData(\n    getAllMarkets,\n    tuple('getAllMarkets', customMarkets.length, connection),\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useUnmigratedOpenOrdersAccounts() {\n  const connection = useConnection();\n  const { wallet } = useWallet();\n\n  async function getUnmigratedOpenOrdersAccounts(): Promise<OpenOrders[]> {\n    if (!wallet || !connection || !wallet.publicKey) {\n      return [];\n    }\n    console.log('refreshing useUnmigratedOpenOrdersAccounts');\n    let deprecatedOpenOrdersAccounts: OpenOrders[] = [];\n    const deprecatedProgramIds = Array.from(\n      new Set(\n        USE_MARKETS.filter(\n          ({ deprecated }) => deprecated,\n        ).map(({ programId }) => programId.toBase58()),\n      ),\n    ).map((publicKeyStr) => new PublicKey(publicKeyStr));\n    let programId: PublicKey;\n    for (programId of deprecatedProgramIds) {\n      try {\n        const openOrdersAccounts = await OpenOrders.findForOwner(\n          connection,\n          wallet.publicKey,\n          programId,\n        );\n        deprecatedOpenOrdersAccounts = deprecatedOpenOrdersAccounts.concat(\n          openOrdersAccounts\n            .filter(\n              (openOrders) =>\n                openOrders.baseTokenTotal.toNumber() ||\n                openOrders.quoteTokenTotal.toNumber(),\n            )\n            .filter((openOrders) =>\n              USE_MARKETS.some(\n                (market) =>\n                  market.deprecated && market.address.equals(openOrders.market),\n              ),\n            ),\n        );\n      } catch (e) {\n        console.log(\n          'Error loading deprecated markets',\n          programId?.toBase58(),\n          e.message,\n        );\n      }\n    }\n    // Maybe sort\n    return deprecatedOpenOrdersAccounts;\n  }\n\n  const cacheKey = tuple(\n    'getUnmigratedOpenOrdersAccounts',\n    connection,\n    wallet?.publicKey?.toBase58(),\n  );\n  const [accounts] = useAsyncData(getUnmigratedOpenOrdersAccounts, cacheKey, {\n    refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\n  });\n\n  return {\n    accounts,\n    refresh: (clearCache: boolean) => refreshCache(cacheKey, clearCache),\n  };\n}\n\nconst MarketContext: React.Context<null | MarketContextValues> = React.createContext<null | MarketContextValues>(\n  null,\n);\n\nconst _VERY_SLOW_REFRESH_INTERVAL = 5000 * 1000;\n\n// For things that don't really change\nconst _SLOW_REFRESH_INTERVAL = 5 * 1000;\n\n// For things that change frequently\nconst _FAST_REFRESH_INTERVAL = 1000;\n\nexport const DEFAULT_MARKET = USE_MARKETS.find(\n  ({ name, deprecated }) => name === 'SRM/USDT' && !deprecated,\n);\n\nexport function getMarketDetails(\n  market: Market | undefined | null,\n  customMarkets: CustomMarketInfo[],\n): FullMarketInfo {\n  if (!market) {\n    return {};\n  }\n  const marketInfos = getMarketInfos(customMarkets);\n  const marketInfo = marketInfos.find((otherMarket) =>\n    otherMarket.address.equals(market.address),\n  );\n  const baseCurrency =\n    (market?.baseMintAddress &&\n      TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\n        ?.name) ||\n    (marketInfo?.baseLabel && `${marketInfo?.baseLabel}*`) ||\n    'UNKNOWN';\n  const quoteCurrency =\n    (market?.quoteMintAddress &&\n      TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\n        ?.name) ||\n    (marketInfo?.quoteLabel && `${marketInfo?.quoteLabel}*`) ||\n    'UNKNOWN';\n\n  return {\n    ...marketInfo,\n    marketName: marketInfo?.name,\n    baseCurrency,\n    quoteCurrency,\n    marketInfo,\n  };\n}\n\nexport function MarketProvider({ children }) {\n  const [marketAddress, setMarketAddress] = useLocalStorageState(\n    'marketAddress',\n    DEFAULT_MARKET?.address.toBase58(),\n  );\n  const [customMarkets, setCustomMarkets] = useLocalStorageState<\n    CustomMarketInfo[]\n  >('customMarkets', []);\n\n  const address = marketAddress && new PublicKey(marketAddress);\n  const connection = useConnection();\n  const marketInfos = getMarketInfos(customMarkets);\n  const marketInfo =\n    address && marketInfos.find((market) => market.address.equals(address));\n\n  // Replace existing market with a non-deprecated one on first load\n  useEffect(() => {\n    if (marketInfo && marketInfo.deprecated) {\n      console.log('Switching markets from deprecated', marketInfo);\n      if (DEFAULT_MARKET) {\n        setMarketAddress(DEFAULT_MARKET.address.toBase58());\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const [market, setMarket] = useState<Market | null>();\n  useEffect(() => {\n    if (\n      market &&\n      marketInfo &&\n      // @ts-ignore\n      market._decoded.ownAddress?.equals(marketInfo?.address)\n    ) {\n      return;\n    }\n    setMarket(null);\n    if (!marketInfo || !marketInfo.address) {\n      notify({\n        message: 'Error loading market',\n        description: 'Please select a market from the dropdown',\n        type: 'error',\n      });\n      return;\n    }\n    Market.load(connection, marketInfo.address, {}, marketInfo.programId)\n      .then(setMarket)\n      .catch((e) =>\n        notify({\n          message: 'Error loading market',\n          description: e.message,\n          type: 'error',\n        }),\n      );\n    // eslint-disable-next-line\n  }, [connection, marketInfo]);\n\n  return (\n    <MarketContext.Provider\n      value={{\n        market,\n        ...getMarketDetails(market, customMarkets),\n        setMarketAddress,\n        customMarkets,\n        setCustomMarkets,\n      }}\n    >\n      {children}\n    </MarketContext.Provider>\n  );\n}\n\nexport function useSelectedTokenAccounts(): [\n  SelectedTokenAccounts,\n  (newSelectedTokenAccounts: SelectedTokenAccounts) => void,\n] {\n  const [\n    selectedTokenAccounts,\n    setSelectedTokenAccounts,\n  ] = useLocalStorageState<SelectedTokenAccounts>('selectedTokenAccounts', {});\n  return [selectedTokenAccounts, setSelectedTokenAccounts];\n}\n\nexport function useMarket() {\n  const context = useContext(MarketContext);\n  if (!context) {\n    throw new Error('Missing market context');\n  }\n  return context;\n}\n\nexport function useMarkPrice() {\n  const [markPrice, setMarkPrice] = useState<null | number>(null);\n\n  const [orderbook] = useOrderbook();\n  const trades = useTrades();\n\n  useEffect(() => {\n    let bb = orderbook?.bids?.length > 0 && Number(orderbook.bids[0][0]);\n    let ba = orderbook?.asks?.length > 0 && Number(orderbook.asks[0][0]);\n    let last = trades && trades.length > 0 && trades[0].price;\n\n    let markPrice =\n      bb && ba\n        ? last\n          ? [bb, ba, last].sort((a, b) => a - b)[1]\n          : (bb + ba) / 2\n        : null;\n\n    setMarkPrice(markPrice);\n  }, [orderbook, trades]);\n\n  return markPrice;\n}\n\nexport function _useUnfilteredTrades(limit = 10000) {\n  const { market } = useMarket();\n  const connection = useConnection();\n  async function getUnfilteredTrades(): Promise<any[] | null> {\n    if (!market || !connection) {\n      return null;\n    }\n    return await market.loadFills(connection, limit);\n  }\n  const [trades] = useAsyncData(\n    getUnfilteredTrades,\n    tuple('getUnfilteredTrades', market, connection),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n  return trades;\n  // NOTE: For now, websocket is too expensive since the event queue is large\n  // and updates very frequently\n\n  // let data = useAccountData(market && market._decoded.eventQueue);\n  // if (!data) {\n  //   return null;\n  // }\n  // const events = decodeEventQueue(data, limit);\n  // return events\n  //   .filter((event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0))\n  //   .map(market.parseFillEvent.bind(market));\n}\n\nexport function useBonfidaTrades() {\n  const { market } = useMarket();\n  const marketAddress = market?.address.toBase58();\n\n  async function getBonfidaTrades() {\n    if (!marketAddress) {\n      return null;\n    }\n    return await BonfidaApi.getRecentTrades(marketAddress);\n  }\n\n  return useAsyncData(\n    getBonfidaTrades,\n    tuple('getBonfidaTrades', marketAddress),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n    false,\n  );\n}\n\nexport function useOrderbookAccounts() {\n  const { market } = useMarket();\n  // @ts-ignore\n  let bidData = useAccountData(market && market._decoded.bids);\n  // @ts-ignore\n  let askData = useAccountData(market && market._decoded.asks);\n  return {\n    bidOrderbook: market && bidData ? Orderbook.decode(market, bidData) : null,\n    askOrderbook: market && askData ? Orderbook.decode(market, askData) : null,\n  };\n}\n\nexport function useOrderbook(\n  depth = 20,\n): [{ bids: number[][]; asks: number[][] }, boolean] {\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\n  const { market } = useMarket();\n  const bids =\n    !bidOrderbook || !market\n      ? []\n      : bidOrderbook.getL2(depth).map(([price, size]) => [price, size]);\n  const asks =\n    !askOrderbook || !market\n      ? []\n      : askOrderbook.getL2(depth).map(([price, size]) => [price, size]);\n  return [{ bids, asks }, !!bids || !!asks];\n}\n\n// Want the balances table to be fast-updating, dont want open orders to flicker\n// TODO: Update to use websocket\nexport function useOpenOrdersAccounts(fast = false) {\n  const { market } = useMarket();\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getOpenOrdersAccounts() {\n    if (!connected) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    return await market.findOpenOrdersAccountsForOwner(\n      connection,\n      wallet.publicKey,\n    );\n  }\n  return useAsyncData(\n    getOpenOrdersAccounts,\n    tuple('getOpenOrdersAccounts', wallet, market, connected),\n    { refreshInterval: fast ? _FAST_REFRESH_INTERVAL : _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useSelectedOpenOrdersAccount(fast = false) {\n  const [accounts] = useOpenOrdersAccounts(fast);\n  if (!accounts) {\n    return null;\n  }\n  return accounts[0];\n}\n\nexport function useTokenAccounts(): [\n  TokenAccount[] | null | undefined,\n  boolean,\n] {\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getTokenAccounts() {\n    if (!connected) {\n      return null;\n    }\n    return await getTokenAccountInfo(connection, wallet.publicKey);\n  }\n  return useAsyncData(\n    getTokenAccounts,\n    tuple('getTokenAccounts', wallet, connected),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function getSelectedTokenAccountForMint(\n  accounts: TokenAccount[] | undefined | null,\n  mint: PublicKey | undefined,\n  selectedPubKey?: string | PublicKey | null,\n) {\n  if (!accounts || !mint) {\n    return null;\n  }\n  const filtered = accounts.filter(\n    ({ effectiveMint, pubkey }) =>\n      mint.equals(effectiveMint) &&\n      (!selectedPubKey ||\n        (typeof selectedPubKey === 'string'\n          ? selectedPubKey\n          : selectedPubKey.toBase58()) === pubkey.toBase58()),\n  );\n  return filtered && filtered[0];\n}\n\nexport function useSelectedQuoteCurrencyAccount() {\n  const [accounts] = useTokenAccounts();\n  const { market } = useMarket();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n  const mintAddress = market?.quoteMintAddress;\n  return getSelectedTokenAccountForMint(\n    accounts,\n    mintAddress,\n    mintAddress && selectedTokenAccounts[mintAddress.toBase58()],\n  );\n}\n\nexport function useSelectedBaseCurrencyAccount() {\n  const [accounts] = useTokenAccounts();\n  const { market } = useMarket();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n  const mintAddress = market?.baseMintAddress;\n  return getSelectedTokenAccountForMint(\n    accounts,\n    mintAddress,\n    mintAddress && selectedTokenAccounts[mintAddress.toBase58()],\n  );\n}\n\n// TODO: Update to use websocket\nexport function useSelectedQuoteCurrencyBalances() {\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const { market } = useMarket();\n  const [accountInfo, loaded] = useAccountInfo(quoteCurrencyAccount?.pubkey);\n  if (!market || !quoteCurrencyAccount || !loaded || !accountInfo) {\n    return null;\n  }\n  if (market.quoteMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\n    return accountInfo?.lamports / 1e9 ?? 0;\n  }\n  return market.quoteSplSizeToNumber(\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\n  );\n}\n\n// TODO: Update to use websocket\nexport function useSelectedBaseCurrencyBalances() {\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const { market } = useMarket();\n  const [accountInfo, loaded] = useAccountInfo(baseCurrencyAccount?.pubkey);\n  if (!market || !baseCurrencyAccount || !loaded || !accountInfo) {\n    return null;\n  }\n  if (market.baseMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\n    return accountInfo?.lamports / 1e9 ?? 0;\n  }\n  return market.baseSplSizeToNumber(\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\n  );\n}\n\nexport function useOpenOrders() {\n  const { market, marketName } = useMarket();\n  const openOrdersAccount = useSelectedOpenOrdersAccount();\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\n  if (!market || !openOrdersAccount || !bidOrderbook || !askOrderbook) {\n    return null;\n  }\n  return market\n    .filterForOpenOrders(bidOrderbook, askOrderbook, [openOrdersAccount])\n    .map((order) => ({ ...order, marketName, market }));\n}\n\nexport function useTrades(limit = 100) {\n  const trades = _useUnfilteredTrades(limit);\n  if (!trades) {\n    return null;\n  }\n  // Until partial fills are each given their own fill, use maker fills\n  return trades\n    .filter(({ eventFlags }) => eventFlags.maker)\n    .map((trade) => ({\n      ...trade,\n      side: trade.side === 'buy' ? 'sell' : 'buy',\n    }));\n}\n\nexport function useFeeDiscountKeys(): [\n  (\n    | {\n        pubkey: PublicKey;\n        feeTier: number;\n        balance: number;\n        mint: PublicKey;\n      }[]\n    | null\n    | undefined\n  ),\n  boolean,\n] {\n  const { market } = useMarket();\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getFeeDiscountKeys() {\n    if (!connected) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    return await market.findFeeDiscountKeys(connection, wallet.publicKey);\n  }\n  return useAsyncData(\n    getFeeDiscountKeys,\n    tuple('getFeeDiscountKeys', wallet, market, connected),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useFills(limit = 100) {\n  const { marketName } = useMarket();\n  const fills = _useUnfilteredTrades(limit);\n  const [openOrdersAccounts] = useOpenOrdersAccounts();\n  if (!openOrdersAccounts || openOrdersAccounts.length === 0) {\n    return null;\n  }\n  if (!fills) {\n    return null;\n  }\n  return fills\n    .filter((fill) =>\n      openOrdersAccounts.some((openOrdersAccount) =>\n        fill.openOrders.equals(openOrdersAccount.publicKey),\n      ),\n    )\n    .map((fill) => ({ ...fill, marketName }));\n}\n\n// TODO: Update to use websocket\nexport function useFillsForAllMarkets(limit = 100) {\n  const { connected, wallet } = useWallet();\n\n  const connection = useConnection();\n  // todo: add custom markets\n  const allMarkets = useAllMarkets([]);\n\n  async function getFillsForAllMarkets() {\n    let fills: Trade[] = [];\n    if (!connected) {\n      return fills;\n    }\n\n    let marketData;\n    for (marketData of allMarkets) {\n      const { market, marketName } = marketData;\n      if (!market) {\n        return fills;\n      }\n      const openOrdersAccounts = await market.findOpenOrdersAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n      const openOrdersAccount = openOrdersAccounts && openOrdersAccounts[0];\n      if (!openOrdersAccount) {\n        return fills;\n      }\n      const eventQueueData = await connection.getAccountInfo(\n        market && market._decoded.eventQueue,\n      );\n      let data = eventQueueData?.data;\n      if (!data) {\n        return fills;\n      }\n      const events = decodeEventQueue(data, limit);\n      const fillsForMarket: Trade[] = events\n        .filter(\n          (event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0),\n        )\n        .map(market.parseFillEvent.bind(market));\n      const ownFillsForMarket = fillsForMarket\n        .filter((fill) => fill.openOrders.equals(openOrdersAccount.publicKey))\n        .map((fill) => ({ ...fill, marketName }));\n      fills = fills.concat(ownFillsForMarket);\n    }\n\n    console.log(JSON.stringify(fills));\n    return fills;\n  }\n\n  return useAsyncData(\n    getFillsForAllMarkets,\n    tuple('getFillsForAllMarkets', connected, connection, allMarkets, wallet),\n    { refreshInterval: _FAST_REFRESH_INTERVAL },\n  );\n}\n\nexport function useAllOpenOrdersAccounts() {\n  const { wallet, connected } = useWallet();\n  const connection = useConnection();\n  const { customMarkets } = useMarket();\n  const marketInfos = getMarketInfos(customMarkets);\n  const programIds = [\n    ...new Set(marketInfos.map((info) => info.programId.toBase58())),\n  ].map((stringProgramId) => new PublicKey(stringProgramId));\n\n  const getAllOpenOrdersAccounts = async () => {\n    if (!connected) {\n      return [];\n    }\n    return (\n      await Promise.all(\n        programIds.map((programId) =>\n          OpenOrders.findForOwner(connection, wallet.publicKey, programId),\n        ),\n      )\n    ).flat();\n  };\n  return useAsyncData(\n    getAllOpenOrdersAccounts,\n    tuple(\n      'getAllOpenOrdersAccounts',\n      connection,\n      connected,\n      wallet?.publicKey?.toBase58(),\n      customMarkets.length,\n      (programIds || []).length,\n    ),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useAllOpenOrdersBalances() {\n  const [\n    openOrdersAccounts,\n    loadedOpenOrdersAccounts,\n  ] = useAllOpenOrdersAccounts();\n  const [mintInfos, mintInfosConnected] = useMintInfos();\n  const { customMarkets } = useMarket();\n  const [allMarkets] = useAllMarkets(customMarkets);\n  if (!loadedOpenOrdersAccounts || !mintInfosConnected) {\n    return {};\n  }\n\n  const marketsByAddress = Object.fromEntries(\n    (allMarkets || []).map((m) => [m.market.address.toBase58(), m]),\n  );\n  const openOrdersBalances: {\n    [mint: string]: { market: PublicKey; free: number; total: number }[];\n  } = {};\n  for (let account of openOrdersAccounts || []) {\n    const marketInfo = marketsByAddress[account.market.toBase58()];\n    const baseMint = marketInfo?.market.baseMintAddress.toBase58();\n    const quoteMint = marketInfo?.market.quoteMintAddress.toBase58();\n    if (!(baseMint in openOrdersBalances)) {\n      openOrdersBalances[baseMint] = [];\n    }\n    if (!(quoteMint in openOrdersBalances)) {\n      openOrdersBalances[quoteMint] = [];\n    }\n\n    const baseMintInfo = mintInfos && mintInfos[baseMint];\n    const baseFree = divideBnToNumber(\n      new BN(account.baseTokenFree),\n      getTokenMultiplierFromDecimals(baseMintInfo?.decimals || 0),\n    );\n    const baseTotal = divideBnToNumber(\n      new BN(account.baseTokenTotal),\n      getTokenMultiplierFromDecimals(baseMintInfo?.decimals || 0),\n    );\n    const quoteMintInfo = mintInfos && mintInfos[quoteMint];\n    const quoteFree = divideBnToNumber(\n      new BN(account.quoteTokenFree),\n      getTokenMultiplierFromDecimals(quoteMintInfo?.decimals || 0),\n    );\n    const quoteTotal = divideBnToNumber(\n      new BN(account.quoteTokenTotal),\n      getTokenMultiplierFromDecimals(quoteMintInfo?.decimals || 0),\n    );\n\n    openOrdersBalances[baseMint].push({\n      market: account.market,\n      free: baseFree,\n      total: baseTotal,\n    });\n    openOrdersBalances[quoteMint].push({\n      market: account.market,\n      free: quoteFree,\n      total: quoteTotal,\n    });\n  }\n  return openOrdersBalances;\n}\n\nexport function useAllOpenOrders(): {\n  openOrders: { orders: Order[]; marketAddress: string }[] | null | undefined;\n  loaded: boolean;\n  refreshOpenOrders: () => void;\n} {\n  const connection = useConnection();\n  const { connected } = useWallet();\n  const [\n    openOrdersAccounts,\n    openOrdersAccountsConnected,\n  ] = useAllOpenOrdersAccounts();\n  const { customMarkets } = useMarket();\n  const [marketInfos, marketInfosConnected] = useAllMarkets(customMarkets);\n  const openOrdersAccountsByAddress: {\n    [marketAddress: string]: OpenOrders[];\n  } = {};\n  for (let account of openOrdersAccounts || []) {\n    const marketsAddr = account.market.toBase58();\n    if (!(marketsAddr in openOrdersAccountsByAddress)) {\n      openOrdersAccountsByAddress[marketsAddr] = [];\n    }\n    openOrdersAccountsByAddress[marketsAddr].push(account);\n  }\n  const marketsByAddress = Object.fromEntries(\n    (marketInfos || []).map((info) => [info.market.publicKey.toBase58(), info]),\n  );\n  const getAllOpenOrders = async () => {\n    return await Promise.all(\n      Object.keys(openOrdersAccountsByAddress).map(async (marketAddr) => {\n        const market = marketsByAddress[marketAddr].market;\n        const [bids, asks] = await Promise.all([\n          market.loadBids(connection),\n          market.loadAsks(connection),\n        ]);\n        return {\n          orders: market.filterForOpenOrders(\n            bids,\n            asks,\n            openOrdersAccountsByAddress[marketAddr],\n          ),\n          marketAddress: marketAddr,\n        };\n      }),\n    );\n  };\n  const cacheKey = tuple(\n    'getAllOpenOrders',\n    openOrdersAccountsConnected,\n    (openOrdersAccounts || []).length,\n    connection,\n    connected,\n    marketInfosConnected,\n  );\n  const [openOrders, loaded] = useAsyncData(getAllOpenOrders, cacheKey, {\n    refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\n  });\n  return {\n    openOrders,\n    loaded,\n    refreshOpenOrders: () => refreshCache(cacheKey),\n  };\n}\n\nexport function useBalances(): Balances[] {\n  const baseCurrencyBalances = useSelectedBaseCurrencyBalances();\n  const quoteCurrencyBalances = useSelectedQuoteCurrencyBalances();\n  const openOrders = useSelectedOpenOrdersAccount(true);\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const baseExists =\n    openOrders && openOrders.baseTokenTotal && openOrders.baseTokenFree;\n  const quoteExists =\n    openOrders && openOrders.quoteTokenTotal && openOrders.quoteTokenFree;\n  if (\n    baseCurrency === 'UNKNOWN' ||\n    quoteCurrency === 'UNKNOWN' ||\n    !baseCurrency ||\n    !quoteCurrency\n  ) {\n    return [];\n  }\n  return [\n    {\n      market,\n      key: `${baseCurrency}${quoteCurrency}${baseCurrency}`,\n      coin: baseCurrency,\n      wallet: baseCurrencyBalances,\n      orders:\n        baseExists && market && openOrders\n          ? market.baseSplSizeToNumber(\n              openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\n            )\n          : null,\n      openOrders,\n      unsettled:\n        baseExists && market && openOrders\n          ? market.baseSplSizeToNumber(openOrders.baseTokenFree)\n          : null,\n    },\n    {\n      market,\n      key: `${quoteCurrency}${baseCurrency}${quoteCurrency}`,\n      coin: quoteCurrency,\n      wallet: quoteCurrencyBalances,\n      openOrders,\n      orders:\n        quoteExists && market && openOrders\n          ? market.quoteSplSizeToNumber(\n              openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\n            )\n          : null,\n      unsettled:\n        quoteExists && market && openOrders\n          ? market.quoteSplSizeToNumber(openOrders.quoteTokenFree)\n          : null,\n    },\n  ];\n}\n\nexport function useWalletBalancesForAllMarkets(): {\n  mint: string;\n  balance: number;\n}[] {\n  const [tokenAccounts] = useTokenAccounts();\n  const { connected } = useWallet();\n  const [mintInfos, mintInfosConnected] = useMintInfos();\n\n  if (!connected || !mintInfosConnected) {\n    return [];\n  }\n\n  let balances: { [mint: string]: number } = {};\n  for (let account of tokenAccounts || []) {\n    if (!account.account) {\n      continue;\n    }\n    let parsedAccount;\n    if (account.effectiveMint.equals(WRAPPED_SOL_MINT)) {\n      parsedAccount = {\n        mint: WRAPPED_SOL_MINT,\n        owner: account.pubkey,\n        amount: account.account.lamports,\n      };\n    } else {\n      parsedAccount = parseTokenAccountData(account.account.data);\n    }\n    if (!(parsedAccount.mint.toBase58() in balances)) {\n      balances[parsedAccount.mint.toBase58()] = 0;\n    }\n    const mintInfo = mintInfos && mintInfos[parsedAccount.mint.toBase58()];\n    const additionalAmount = divideBnToNumber(\n      new BN(parsedAccount.amount),\n      getTokenMultiplierFromDecimals(mintInfo?.decimals || 0),\n    );\n    balances[parsedAccount.mint.toBase58()] += additionalAmount;\n  }\n  return Object.entries(balances).map(([mint, balance]) => {\n    return { mint, balance };\n  });\n}\n\nexport function useUnmigratedDeprecatedMarkets() {\n  const connection = useConnection();\n  const { accounts } = useUnmigratedOpenOrdersAccounts();\n  const marketsList =\n    accounts &&\n    Array.from(new Set(accounts.map((openOrders) => openOrders.market)));\n  const deps = marketsList && marketsList.map((m) => m.toBase58());\n\n  const useUnmigratedDeprecatedMarketsInner = async () => {\n    if (!marketsList) {\n      return null;\n    }\n    const getMarket = async (address) => {\n      const marketInfo = USE_MARKETS.find((market) =>\n        market.address.equals(address),\n      );\n      if (!marketInfo) {\n        console.log('Failed loading market');\n        notify({\n          message: 'Error loading market',\n          type: 'error',\n        });\n        return null;\n      }\n      try {\n        console.log('Loading market', marketInfo.name);\n        // NOTE: Should this just be cached by (connection, marketInfo.address, marketInfo.programId)?\n        return await Market.load(\n          connection,\n          marketInfo.address,\n          {},\n          marketInfo.programId,\n        );\n      } catch (e) {\n        console.log('Failed loading market', marketInfo.name, e);\n        notify({\n          message: 'Error loading market',\n          description: e.message,\n          type: 'error',\n        });\n        return null;\n      }\n    };\n    return (await Promise.all(marketsList.map(getMarket))).filter((x) => x);\n  };\n  const [markets] = useAsyncData(\n    useUnmigratedDeprecatedMarketsInner,\n    tuple(\n      'useUnmigratedDeprecatedMarketsInner',\n      connection,\n      deps && deps.toString(),\n    ),\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\n  );\n  if (!markets) {\n    return null;\n  }\n  return markets.map((market) => ({\n    market,\n    openOrdersList: accounts?.filter(\n      (openOrders) => market && openOrders.market.equals(market.address),\n    ),\n  }));\n}\n\nexport function useGetOpenOrdersForDeprecatedMarkets(): {\n  openOrders: OrderWithMarketAndMarketName[] | null | undefined;\n  loaded: boolean;\n  refreshOpenOrders: () => void;\n} {\n  const { connected, wallet } = useWallet();\n  const [customMarkets] = useLocalStorageState<CustomMarketInfo[]>(\n    'customMarkets',\n    [],\n  );\n  const connection = useConnection();\n  const marketsAndOrders = useUnmigratedDeprecatedMarkets();\n  const marketsList =\n    marketsAndOrders && marketsAndOrders.map(({ market }) => market);\n\n  // This isn't quite right: open order balances could change\n  const deps =\n    marketsList &&\n    marketsList\n      .filter((market): market is Market => !!market)\n      .map((market) => market.address.toBase58());\n\n  async function getOpenOrdersForDeprecatedMarkets() {\n    if (!connected) {\n      return null;\n    }\n    if (!marketsList) {\n      return null;\n    }\n    console.log('refreshing getOpenOrdersForDeprecatedMarkets');\n    const getOrders = async (market: Market | null) => {\n      if (!market) {\n        return null;\n      }\n      const { marketName } = getMarketDetails(market, customMarkets);\n      try {\n        console.log('Fetching open orders for', marketName);\n        // Can do better than this, we have the open orders accounts already\n        return (\n          await market.loadOrdersForOwner(connection, wallet.publicKey)\n        ).map((order) => ({ marketName, market, ...order }));\n      } catch (e) {\n        console.log('Failed loading open orders', market.address.toBase58(), e);\n        notify({\n          message: `Error loading open orders for deprecated ${marketName}`,\n          description: e.message,\n          type: 'error',\n        });\n        return null;\n      }\n    };\n    return (await Promise.all(marketsList.map(getOrders)))\n      .filter((x): x is OrderWithMarketAndMarketName[] => !!x)\n      .flat();\n  }\n\n  const cacheKey = tuple(\n    'getOpenOrdersForDeprecatedMarkets',\n    connected,\n    connection,\n    wallet,\n    deps && deps.toString(),\n  );\n  const [openOrders, loaded] = useAsyncData(\n    getOpenOrdersForDeprecatedMarkets,\n    cacheKey,\n    {\n      refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\n    },\n  );\n  console.log('openOrders', openOrders);\n  return {\n    openOrders,\n    loaded,\n    refreshOpenOrders: () => refreshCache(cacheKey),\n  };\n}\n\nexport function useBalancesForDeprecatedMarkets() {\n  const markets = useUnmigratedDeprecatedMarkets();\n  const [customMarkets] = useLocalStorageState<CustomMarketInfo[]>(\n    'customMarkets',\n    [],\n  );\n  if (!markets) {\n    return null;\n  }\n\n  const openOrderAccountBalances: DeprecatedOpenOrdersBalances[] = [];\n  markets.forEach(({ market, openOrdersList }) => {\n    const { baseCurrency, quoteCurrency, marketName } = getMarketDetails(\n      market,\n      customMarkets,\n    );\n    if (!baseCurrency || !quoteCurrency || !market) {\n      return;\n    }\n    (openOrdersList || []).forEach((openOrders) => {\n      const inOrdersBase =\n        openOrders?.baseTokenTotal &&\n        openOrders?.baseTokenFree &&\n        market.baseSplSizeToNumber(\n          openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\n        );\n      const inOrdersQuote =\n        openOrders?.quoteTokenTotal &&\n        openOrders?.quoteTokenFree &&\n        market.baseSplSizeToNumber(\n          openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\n        );\n      const unsettledBase =\n        openOrders?.baseTokenFree &&\n        market.baseSplSizeToNumber(openOrders.baseTokenFree);\n      const unsettledQuote =\n        openOrders?.quoteTokenFree &&\n        market.baseSplSizeToNumber(openOrders.quoteTokenFree);\n\n      openOrderAccountBalances.push({\n        marketName,\n        market,\n        coin: baseCurrency,\n        key: `${marketName}${baseCurrency}`,\n        orders: inOrdersBase,\n        unsettled: unsettledBase,\n        openOrders,\n      });\n      openOrderAccountBalances.push({\n        marketName,\n        market,\n        coin: quoteCurrency,\n        key: `${marketName}${quoteCurrency}`,\n        orders: inOrdersQuote,\n        unsettled: unsettledQuote,\n        openOrders,\n      });\n    });\n  });\n  return openOrderAccountBalances;\n}\n\nexport function getMarketInfos(\n  customMarkets: CustomMarketInfo[],\n): MarketInfo[] {\n  const customMarketsInfo = customMarkets.map((m) => ({\n    ...m,\n    address: new PublicKey(m.address),\n    programId: new PublicKey(m.programId),\n    deprecated: false,\n  }));\n\n  return [...customMarketsInfo, ...USE_MARKETS];\n}\n\nexport function useMarketInfos() {\n  const { customMarkets } = useMarket();\n  return getMarketInfos(customMarkets);\n}\n\n/**\n * If selling, choose min tick size. If buying choose a price\n * s.t. given the state of the orderbook, the order will spend\n * `cost` cost currency.\n *\n * @param orderbook serum Orderbook object\n * @param cost quantity to spend. Base currency if selling,\n *  quote currency if buying.\n * @param tickSizeDecimals size of price increment of the market\n */\nexport function getMarketOrderPrice(\n  orderbook: Orderbook,\n  cost: number,\n  tickSizeDecimals?: number,\n) {\n  if (orderbook.isBids) {\n    return orderbook.market.tickSize;\n  }\n  let spentCost = 0;\n  let price, sizeAtLevel, costAtLevel: number;\n  const asks = orderbook.getL2(1000);\n  for ([price, sizeAtLevel] of asks) {\n    costAtLevel = price * sizeAtLevel;\n    if (spentCost + costAtLevel > cost) {\n      break;\n    }\n    spentCost += costAtLevel;\n  }\n  const sendPrice = Math.min(price * 1.02, asks[0][0] * 1.05);\n  let formattedPrice;\n  if (tickSizeDecimals) {\n    formattedPrice = floorToDecimal(sendPrice, tickSizeDecimals);\n  } else {\n    formattedPrice = sendPrice;\n  }\n  return formattedPrice;\n}\n\nexport function getExpectedFillPrice(\n  orderbook: Orderbook,\n  cost: number,\n  tickSizeDecimals?: number,\n) {\n  let spentCost = 0;\n  let avgPrice = 0;\n  let price, sizeAtLevel, costAtLevel: number;\n  for ([price, sizeAtLevel] of orderbook.getL2(1000)) {\n    costAtLevel = (orderbook.isBids ? 1 : price) * sizeAtLevel;\n    if (spentCost + costAtLevel > cost) {\n      avgPrice += (cost - spentCost) * price;\n      spentCost = cost;\n      break;\n    }\n    avgPrice += costAtLevel * price;\n    spentCost += costAtLevel;\n  }\n  const totalAvgPrice = avgPrice / Math.min(cost, spentCost);\n  let formattedPrice;\n  if (tickSizeDecimals) {\n    formattedPrice = floorToDecimal(totalAvgPrice, tickSizeDecimals);\n  } else {\n    formattedPrice = totalAvgPrice;\n  }\n  return formattedPrice;\n}\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\nhtml,body{\n  background: #11161D;\n}\ninput[type=number]::-webkit-inner-spin-button {\n  opacity: 0;\n}\ninput[type=number]:hover::-webkit-inner-spin-button,\ninput[type=number]:focus::-webkit-inner-spin-button {\n  opacity: 0.25;\n}\n/* width */\n::-webkit-scrollbar {\n  width: 15px;\n}\n/* Track */\n::-webkit-scrollbar-track {\n  background: #2d313c;\n}\n/* Handle */\n::-webkit-scrollbar-thumb {\n  background: #5b5f67;\n}\n/* Handle on hover */\n::-webkit-scrollbar-thumb:hover {\n  background: #5b5f67;\n}\n.ant-slider-track, .ant-slider:hover .ant-slider-track {\n  background-color: #2abdd2;\n  opacity: 0.75;\n}\n.ant-slider-track,\n.ant-slider ant-slider-track:hover {\n  background-color: #2abdd2;\n  opacity: 0.75;\n}\n.ant-slider-dot-active,\n.ant-slider-handle,\n.ant-slider-handle-click-focused,\n.ant-slider:hover .ant-slider-handle:not(.ant-tooltip-open)  {\n  border: 2px solid #2abdd2; \n}\n.ant-table-tbody > tr.ant-table-row:hover > td {\n  background: #273043;\n}\n.ant-table-tbody > tr > td {\n  border-bottom: 8px solid #1A2029;\n}\n.ant-table-container table > thead > tr:first-child th {\n  border-bottom: none;\n}\n.ant-divider-horizontal.ant-divider-with-text::before, .ant-divider-horizontal.ant-divider-with-text::after {\n  border-top: 1px solid #434a59 !important;\n}\n.ant-layout {\n    background: #11161D\n  }\n  .ant-table {\n    background: #212734;\n  }\n  .ant-table-thead > tr > th {\n    background: #1A2029;\n  }\n.ant-select-item-option-content {\n  img {\n    margin-right: 4px;\n  }\n}\n.ant-modal-content {\n  background-color: #212734;\n}\n\n@-webkit-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n@-moz-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n@-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n.flash {\n  -moz-animation: highlight 0.5s ease 0s 1 alternate ;\n  -webkit-animation: highlight 0.5s ease 0s 1 alternate;\n  animation: highlight 0.5s ease 0s 1 alternate;\n}`;\n","import React, { Component } from 'react';\nimport { Typography } from 'antd';\n\nconst { Title } = Typography;\n\nexport default class ErrorBoundary extends Component {\n  state = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div>\n          <div>\n            <Title level={2}>Something went wrong.</Title>\n            <Title level={4}>Please try again later.</Title>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","import { useRef, useEffect } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef<() => void>();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current && savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  margin: 5px;\n  padding: 20px;\n  background-color: #1a2029;\n`;\n\nexport default function FloatingElement({\n  style = undefined,\n  children,\n  stretchVertical = false,\n}) {\n  return (\n    <Wrapper\n      style={{\n        height: stretchVertical ? 'calc(100% - 10px)' : undefined,\n        ...style,\n      }}\n    >\n      {children}\n    </Wrapper>\n  );\n}\n","import { Col, Row } from 'antd';\nimport React, { useRef, useEffect, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useMarket, useOrderbook, useMarkPrice } from '../utils/markets';\nimport { isEqual, getDecimalCount } from '../utils/utils';\nimport { useInterval } from '../utils/useInterval';\nimport FloatingElement from './layout/FloatingElement';\nimport usePrevious from '../utils/usePrevious';\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\n\nconst SizeTitle = styled(Row)`\n  padding: 20px 0 14px;\n  color: #434a59;\n`;\n\nconst MarkPriceTitle = styled(Row)`\n  padding: 20px 0 14px;\n  font-weight: 700;\n`;\n\nconst Line = styled.div`\n  text-align: right;\n  float: right;\n  height: 100%;\n  ${(props) =>\n    props['data-width'] &&\n    css`\n      width: ${props['data-width']};\n    `}\n  ${(props) =>\n    props['data-bgcolor'] &&\n    css`\n      background-color: ${props['data-bgcolor']};\n    `}\n`;\n\nconst Price = styled.div`\n  position: absolute;\n  right: 5px;\n  color: white;\n`;\n\nexport default function Orderbook({ smallScreen, depth = 7, onPrice, onSize }) {\n  const markPrice = useMarkPrice();\n  const [orderbook] = useOrderbook();\n  const { baseCurrency, quoteCurrency } = useMarket();\n\n  const currentOrderbookData = useRef(null);\n  const lastOrderbookData = useRef(null);\n\n  const [orderbookData, setOrderbookData] = useState(null);\n\n  useInterval(() => {\n    if (\n      !currentOrderbookData.current ||\n      JSON.stringify(currentOrderbookData.current) !==\n        JSON.stringify(lastOrderbookData.current)\n    ) {\n      let bids = orderbook?.bids || [];\n      let asks = orderbook?.asks || [];\n\n      let sum = (total, [, size], index) =>\n        index < depth ? total + size : total;\n      let totalSize = bids.reduce(sum, 0) + asks.reduce(sum, 0);\n\n      let bidsToDisplay = getCumulativeOrderbookSide(bids, totalSize, false);\n      let asksToDisplay = getCumulativeOrderbookSide(asks, totalSize, true);\n\n      currentOrderbookData.current = {\n        bids: orderbook?.bids,\n        asks: orderbook?.asks,\n      };\n\n      setOrderbookData({ bids: bidsToDisplay, asks: asksToDisplay });\n    }\n  }, 250);\n\n  useEffect(() => {\n    lastOrderbookData.current = {\n      bids: orderbook?.bids,\n      asks: orderbook?.asks,\n    };\n  }, [orderbook]);\n\n  function getCumulativeOrderbookSide(orders, totalSize, backwards = false) {\n    let cumulative = orders\n      .slice(0, depth)\n      .reduce((cumulative, [price, size], i) => {\n        const cumulativeSize = (cumulative[i - 1]?.cumulativeSize || 0) + size;\n        cumulative.push({\n          price,\n          size,\n          cumulativeSize,\n          sizePercent: Math.round((cumulativeSize / (totalSize || 1)) * 100),\n        });\n        return cumulative;\n      }, []);\n    if (backwards) {\n      cumulative = cumulative.reverse();\n    }\n    return cumulative;\n  }\n\n  return (\n    <FloatingElement\n      style={\n        smallScreen ? { flex: 1 } : { height: '500px', overflow: 'hidden' }\n      }\n    >\n      <Title>Orderbook</Title>\n      <SizeTitle>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          Size ({baseCurrency})\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          Price ({quoteCurrency})\n        </Col>\n      </SizeTitle>\n      {orderbookData?.asks.map(({ price, size, sizePercent }) => (\n        <OrderbookRow\n          key={price + ''}\n          price={price}\n          size={size}\n          side={'sell'}\n          sizePercent={sizePercent}\n          onPriceClick={() => onPrice(price)}\n          onSizeClick={() => onSize(size)}\n        />\n      ))}\n      <MarkPriceComponent markPrice={markPrice} />\n      {orderbookData?.bids.map(({ price, size, sizePercent }) => (\n        <OrderbookRow\n          key={price + ''}\n          price={price}\n          size={size}\n          side={'buy'}\n          sizePercent={sizePercent}\n          onPriceClick={() => onPrice(price)}\n          onSizeClick={() => onSize(size)}\n        />\n      ))}\n    </FloatingElement>\n  );\n}\n\nconst OrderbookRow = React.memo(\n  ({ side, price, size, sizePercent, onSizeClick, onPriceClick }) => {\n    const element = useRef();\n\n    const { market } = useMarket();\n\n    useEffect(() => {\n      // eslint-disable-next-line\n      !element.current?.classList.contains('flash') &&\n        element.current?.classList.add('flash');\n      const id = setTimeout(\n        () =>\n          element.current?.classList.contains('flash') &&\n          element.current?.classList.remove('flash'),\n        250,\n      );\n      return () => clearTimeout(id);\n    }, [price, size]);\n\n    let formattedSize =\n      market?.minOrderSize && !isNaN(size)\n        ? Number(size).toFixed(getDecimalCount(market.minOrderSize) + 1)\n        : size;\n\n    let formattedPrice =\n      market?.tickSize && !isNaN(price)\n        ? Number(price).toFixed(getDecimalCount(market.tickSize) + 1)\n        : price;\n\n    return (\n      <Row ref={element} style={{ marginBottom: 1 }} onClick={onSizeClick}>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          {formattedSize}\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          <Line\n            data-width={sizePercent + '%'}\n            data-bgcolor={\n              side === 'buy'\n                ? 'rgba(65, 199, 122, 0.6)'\n                : 'rgba(242, 60, 105, 0.6)'\n            }\n          />\n          <Price onClick={onPriceClick}>{formattedPrice}</Price>\n        </Col>\n      </Row>\n    );\n  },\n  (prevProps, nextProps) =>\n    isEqual(prevProps, nextProps, ['price', 'size', 'sizePercent']),\n);\n\nconst MarkPriceComponent = React.memo(\n  ({ markPrice }) => {\n    const { market } = useMarket();\n    const previousMarkPrice = usePrevious(markPrice);\n\n    let markPriceColor =\n      markPrice > previousMarkPrice\n        ? '#41C77A'\n        : markPrice < previousMarkPrice\n        ? '#F23B69'\n        : 'white';\n\n    let formattedMarkPrice =\n      markPrice &&\n      market?.tickSize &&\n      markPrice.toFixed(getDecimalCount(market.tickSize));\n\n    return (\n      <MarkPriceTitle justify=\"center\">\n        <Col style={{ color: markPriceColor }}>\n          {markPrice > previousMarkPrice && (\n            <ArrowUpOutlined style={{ marginRight: 5 }} />\n          )}\n          {markPrice < previousMarkPrice && (\n            <ArrowDownOutlined style={{ marginRight: 5 }} />\n          )}\n          {formattedMarkPrice || '----'}\n        </Col>\n      </MarkPriceTitle>\n    );\n  },\n  (prevProps, nextProps) => isEqual(prevProps, nextProps, ['markPrice']),\n);\n","import { useEffect, useRef } from 'react';\n\nexport default function usePrevious(value) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef();\n\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n\n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\n","import React from 'react';\nimport { ConfigProvider, Table } from 'antd';\n\nexport default function DataTable({\n  dataSource,\n  columns,\n  emptyLabel = 'No data',\n  pagination = false,\n  loading = false,\n  pageSize = 10,\n}) {\n  const customizeRenderEmpty = () => (\n    <div\n      style={{\n        padding: '20px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      {emptyLabel}\n    </div>\n  );\n\n  return (\n    <ConfigProvider renderEmpty={customizeRenderEmpty}>\n      <Table\n        dataSource={dataSource}\n        columns={columns}\n        pagination={pagination ? { pagination: true, pageSize } : false}\n        loading={loading}\n      />\n    </ConfigProvider>\n  );\n}\n","import { Button } from 'antd';\nimport React from 'react';\nimport {\n  useTokenAccounts,\n  getSelectedTokenAccountForMint,\n} from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\nimport { useSendConnection } from '../../utils/connection';\nimport { useWallet } from '../../utils/wallet';\nimport { settleFunds } from '../../utils/send';\nimport { notify } from '../../utils/notifications';\n\nexport default function BalancesTable({\n  balances,\n  showMarket,\n  hideWalletBalance,\n  onSettleSuccess,\n}) {\n  const [accounts] = useTokenAccounts();\n  const connection = useSendConnection();\n  const { wallet } = useWallet();\n\n  async function onSettleFunds(market, openOrders) {\n    try {\n      await settleFunds({\n        market,\n        openOrders,\n        connection,\n        wallet,\n        baseCurrencyAccount: getSelectedTokenAccountForMint(\n          accounts,\n          market?.baseMintAddress,\n        ),\n        quoteCurrencyAccount: getSelectedTokenAccountForMint(\n          accounts,\n          market?.quoteMintAddress,\n        ),\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    }\n    onSettleSuccess && onSettleSuccess();\n  }\n\n  const columns = [\n    showMarket\n      ? {\n          title: 'Market',\n          dataIndex: 'marketName',\n          key: 'marketName',\n        }\n      : null,\n    {\n      title: 'Coin',\n      dataIndex: 'coin',\n      key: 'coin',\n    },\n    hideWalletBalance\n      ? null\n      : {\n          title: 'Wallet Balance',\n          dataIndex: 'wallet',\n          key: 'wallet',\n        },\n    {\n      title: 'Orders',\n      dataIndex: 'orders',\n      key: 'orders',\n    },\n    {\n      title: 'Unsettled',\n      dataIndex: 'unsettled',\n      key: 'unsettled',\n    },\n    {\n      key: 'action',\n      render: ({ market, openOrders, marketName }) => (\n        <div style={{ textAlign: 'right' }}>\n          <Button\n            ghost\n            style={{ marginRight: 12 }}\n            onClick={() => onSettleFunds(market, openOrders)}\n          >\n            Settle {marketName}\n          </Button>\n        </div>\n      ),\n    },\n  ].filter((x) => x);\n  return (\n    <DataTable\n      emptyLabel=\"No balances\"\n      dataSource={balances}\n      columns={columns}\n      pagination={false}\n    />\n  );\n}\n","import React, { useState } from 'react';\nimport DataTable from '../layout/DataTable';\n\nimport styled from 'styled-components';\nimport { Button, Col, Row, Tag } from 'antd';\nimport { cancelOrder } from '../../utils/send';\nimport { useWallet } from '../../utils/wallet';\nimport { useSendConnection } from '../../utils/connection';\nimport { notify } from '../../utils/notifications';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { OrderWithMarketAndMarketName } from '../../utils/types';\n\nconst CancelButton = styled(Button)`\n  color: #f23b69;\n  border: 1px solid #f23b69;\n`;\n\nexport default function OpenOrderTable({\n  openOrders,\n  onCancelSuccess,\n  pageSize,\n  loading,\n  marketFilter,\n}: {\n  openOrders: OrderWithMarketAndMarketName[] | null | undefined;\n  onCancelSuccess?: () => void;\n  pageSize?: number;\n  loading?: boolean;\n  marketFilter?: boolean;\n}) {\n  let { wallet } = useWallet();\n  let connection = useSendConnection();\n\n  const [cancelId, setCancelId] = useState(null);\n\n  async function cancel(order) {\n    setCancelId(order?.orderId);\n    try {\n      await cancelOrder({\n        order,\n        market: order.market,\n        connection,\n        wallet,\n      });\n    } catch (e) {\n      notify({\n        message: 'Error cancelling order',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    } finally {\n      setCancelId(null);\n    }\n    onCancelSuccess && onCancelSuccess();\n  }\n\n  const marketFilters = [\n    ...new Set((openOrders || []).map((orderInfos) => orderInfos.marketName)),\n  ].map((marketName) => {\n    return { text: marketName, value: marketName };\n  });\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'marketName',\n      key: 'marketName',\n      filters: marketFilter ? marketFilters : undefined,\n      onFilter: (value, record) => record.marketName.indexOf(value) === 0,\n    },\n    {\n      title: 'Side',\n      dataIndex: 'side',\n      key: 'side',\n      render: (side) => (\n        <Tag\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\n          style={{ fontWeight: 700 }}\n        >\n          {side.charAt(0).toUpperCase() + side.slice(1)}\n        </Tag>\n      ),\n      sorter: (a, b) => {\n        if (a.side === b.side) {\n          return 0;\n        } else if (a.side === 'buy') {\n          return 1;\n        } else {\n          return -1;\n        }\n      },\n      showSorterTooltip: false,\n    },\n    {\n      title: 'Size',\n      dataIndex: 'size',\n      key: 'size',\n      sorter: (a, b) => b.size - a.size,\n      showSorterTooltip: false,\n    },\n    {\n      title: 'Price',\n      dataIndex: 'price',\n      key: 'price',\n      sorter: (a, b) => b.price - a.price,\n      showSorterTooltip: false,\n    },\n    {\n      key: 'orderId',\n      render: (order) => (\n        <div style={{ textAlign: 'right' }}>\n          <CancelButton\n            icon={<DeleteOutlined />}\n            onClick={() => cancel(order)}\n            loading={cancelId + '' === order?.orderId + ''}\n          >\n            Cancel\n          </CancelButton>\n        </div>\n      ),\n    },\n  ];\n  const dataSource = (openOrders || []).map((order) => ({\n    ...order,\n    key: order.orderId,\n  }));\n\n  return (\n    <Row>\n      <Col span={24}>\n        <DataTable\n          emptyLabel=\"No open orders\"\n          dataSource={dataSource}\n          columns={columns}\n          pagination={true}\n          pageSize={pageSize ? pageSize : 5}\n          loading={loading !== undefined && loading}\n        />\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react';\nimport { Row, Col, Tag } from 'antd';\nimport { useFills, useMarket } from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\n\nexport default function FillsTable() {\n  const fills = useFills();\n\n  const { quoteCurrency } = useMarket();\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'marketName',\n      key: 'marketName',\n    },\n    {\n      title: 'Side',\n      dataIndex: 'side',\n      key: 'side',\n      render: (side) => (\n        <Tag\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\n          style={{ fontWeight: 700 }}\n        >\n          {side.charAt(0).toUpperCase() + side.slice(1)}\n        </Tag>\n      ),\n    },\n    {\n      title: `Size`,\n      dataIndex: 'size',\n      key: 'size',\n    },\n    {\n      title: `Price`,\n      dataIndex: 'price',\n      key: 'price',\n    },\n    {\n      title: `Liquidity`,\n      dataIndex: 'liquidity',\n      key: 'liquidity',\n    },\n    {\n      title: quoteCurrency ? `Fees (${quoteCurrency})` : 'Fees',\n      dataIndex: 'feeCost',\n      key: 'feeCost',\n    },\n  ];\n\n  const dataSource = (fills || []).map((fill) => ({\n    ...fill,\n    key: `${fill.orderId}${fill.side}`,\n    liquidity: fill.eventFlags.maker ? 'Maker' : 'Taker',\n  }));\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <DataTable\n            dataSource={dataSource}\n            columns={columns}\n            pagination={true}\n            pageSize={5}\n            emptyLabel=\"No fills\"\n          />\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React from 'react';\nimport { Row, Col, Typography, Tag } from 'antd';\nimport { useFeeDiscountKeys } from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\nimport { TokenInstructions, getFeeRates } from '@project-serum/serum';\nimport { percentFormat } from '../../utils/utils';\n\nexport default function FeesTable() {\n  const [feeAccounts] = useFeeDiscountKeys();\n\n  const columns = [\n    {\n      title: 'Fee Tier',\n      dataIndex: 'feeTier',\n      key: 'feeTier',\n      render: (feeTier, row) => (\n        <div style={{ display: 'flex' }}>\n          <Typography>{feeTier}</Typography>\n          {row.index === 0 ? (\n            <div style={{ marginLeft: 10 }}>\n              <Tag color={'#41C77A'} style={{ fontWeight: 700 }}>\n                Selected\n              </Tag>\n            </div>\n          ) : null}\n        </div>\n      ),\n    },\n    {\n      title: 'Taker',\n      dataIndex: 'taker',\n      key: 'taker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).taker),\n    },\n    {\n      title: 'Maker',\n      dataIndex: 'maker',\n      key: 'maker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).maker),\n    },\n    {\n      title: `Public Key`,\n      dataIndex: 'pubkey',\n      key: 'pubkey',\n      render: (pubkey) => pubkey.toBase58(),\n    },\n    {\n      title: `Balance`,\n      dataIndex: 'balance',\n      key: 'balance',\n    },\n    {\n      title: `Mint`,\n      dataIndex: 'mint',\n      key: 'mint',\n      render: (_, row) =>\n        row.mint.equals(TokenInstructions.SRM_MINT)\n          ? 'SRM'\n          : row.mint.equals(TokenInstructions.MSRM_MINT)\n          ? 'MSRM'\n          : 'UNKNOWN',\n    },\n  ];\n\n  const dataSource = (feeAccounts || []).map((account, index) => ({\n    ...account,\n    index,\n    key: account.pubkey.toBase58(),\n  }));\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <DataTable\n            dataSource={dataSource}\n            columns={columns}\n            pagination={true}\n            pageSize={5}\n            emptyLabel=\"No (M)SRM accounts\"\n          />\n        </Col>\n      </Row>\n      <Row style={{ marginTop: 8 }}>\n        <Col>\n          <Typography>\n            Holding SRM or MSRM makes you eligible for fee discounts:\n          </Typography>\n          <FeeScheduleTable />\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nfunction FeeScheduleTable() {\n  // Representation of serum-js/src/fees.ts\n  const dataSource = [\n    { feeTier: 0, taker: 0.0022, maker: -0.0003, token: '', balance: '' },\n    { feeTier: 1, taker: 0.002, maker: -0.0003, token: 'SRM', balance: 100 },\n    { feeTier: 2, taker: 0.0018, maker: -0.0003, token: 'SRM', balance: 1000 },\n    { feeTier: 3, taker: 0.0016, maker: -0.0003, token: 'SRM', balance: 10000 },\n    {\n      feeTier: 4,\n      taker: 0.0014,\n      maker: -0.0003,\n      token: 'SRM',\n      balance: 100000,\n    },\n    {\n      feeTier: 5,\n      taker: 0.0012,\n      maker: -0.0003,\n      token: 'SRM',\n      balance: 1000000,\n    },\n    { feeTier: 6, taker: 0.001, maker: -0.0005, token: 'MSRM', balance: 1 },\n  ];\n  const columns = [\n    {\n      title: 'Fee Tier',\n      dataIndex: 'feeTier',\n      key: 'feeTier',\n    },\n    {\n      title: 'Taker',\n      dataIndex: 'taker',\n      key: 'taker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).taker),\n    },\n    {\n      title: 'Maker',\n      dataIndex: 'maker',\n      key: 'maker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).maker),\n    },\n    {\n      title: 'Requirements',\n      dataIndex: 'requirements',\n      key: 'requirements',\n      render: (_, row) => (\n        <Typography>\n          {!row.balance ? 'None' : `≥ ${row.balance} ${row.token}`}\n        </Typography>\n      ),\n    },\n  ];\n  return (\n    <DataTable\n      dataSource={dataSource.map((info) => ({ ...info, key: info.feeTier }))}\n      columns={columns}\n    />\n  );\n}\n","import BalancesTable from './BalancesTable';\nimport OpenOrderTable from './OpenOrderTable';\nimport React from 'react';\nimport { Tabs, Typography } from 'antd';\nimport FillsTable from './FillsTable';\nimport FloatingElement from '../layout/FloatingElement';\nimport FeesTable from './FeesTable';\nimport { useOpenOrders, useBalances, useMarket } from '../../utils/markets';\n\nconst { Paragraph } = Typography;\nconst { TabPane } = Tabs;\n\nexport default function Index() {\n  const { market } = useMarket();\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 20 }}>\n      <Typography>\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)' }}>\n          Make sure to go to Balances and click Settle to send out your funds.\n        </Paragraph>\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)' }}>\n          To fund your wallet, <a href=\"https://www.sollet.io\">sollet.io</a>.\n          You can get SOL from FTX, Binance, BitMax, and others. You can get\n          other tokens from FTX.{' '}\n        </Paragraph>\n      </Typography>\n      <Tabs defaultActiveKey=\"orders\">\n        <TabPane tab=\"Open Orders\" key=\"orders\">\n          <OpenOrdersTab />\n        </TabPane>\n        <TabPane tab=\"Recent Trade History\" key=\"fills\">\n          <FillsTable />\n        </TabPane>\n        <TabPane tab=\"Balances\" key=\"balances\">\n          <BalancesTab />\n        </TabPane>\n        {market && market.supportsSrmFeeDiscounts ? (\n          <TabPane tab=\"Fee discounts\" key=\"fees\">\n            <FeesTable />\n          </TabPane>\n        ) : null}\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\nconst OpenOrdersTab = () => {\n  const openOrders = useOpenOrders();\n\n  return <OpenOrderTable openOrders={openOrders} />;\n};\n\nconst BalancesTab = () => {\n  const balances = useBalances();\n\n  return <BalancesTable balances={balances} />;\n};\n","import React from 'react';\nimport { Modal } from 'antd';\nimport {\n  useSelectedBaseCurrencyAccount,\n  useMarket,\n  useSelectedQuoteCurrencyAccount,\n} from '../utils/markets';\nimport { useWallet } from '../utils/wallet';\nimport Link from './Link';\n\nexport default function DepositDialog({ onClose, baseOrQuote }) {\n  const { market, baseCurrency, quoteCurrency } = useMarket();\n\n  const { providerName, providerUrl } = useWallet();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  let coinMint;\n  let account;\n  let depositCoin;\n  if (baseOrQuote === 'base') {\n    coinMint = market?.baseMintAddress;\n    account = baseCurrencyAccount;\n    depositCoin = baseCurrency;\n  } else if (baseOrQuote === 'quote') {\n    coinMint = market?.quoteMintAddress;\n    account = quoteCurrencyAccount;\n    depositCoin = quoteCurrency;\n  } else {\n    account = null;\n  }\n  if (!coinMint) {\n    return null;\n  }\n  return (\n    <Modal\n      title={depositCoin}\n      visible={!!coinMint}\n      onOk={onClose}\n      onCancel={onClose}\n    >\n      <div style={{ paddingTop: '20px' }}>\n        <p style={{ color: 'white' }}>Mint address:</p>\n        <p style={{ color: 'rgba(255,255,255,0.5)' }}>{coinMint.toBase58()}</p>\n        <div>\n          <p style={{ color: 'white' }}>SPL Deposit address:</p>\n          <p style={{ color: 'rgba(255,255,255,0.5)' }}>\n            {account ? (\n              account.pubkey.toBase58()\n            ) : (\n              <>\n                Visit{' '}\n                <Link external to={providerUrl}>\n                  {providerName}\n                </Link>{' '}\n                to create an account for this mint\n              </>\n            )}\n          </p>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport { TokenAccount } from '../utils/types';\nimport { useSelectedTokenAccounts } from '../utils/markets';\nimport { Button, Col, Select, Typography } from 'antd';\nimport { CopyOutlined } from '@ant-design/icons';\nimport { abbreviateAddress } from '../utils/utils';\nimport { notify } from '../utils/notifications';\n\nexport default function StandaloneTokenAccountsSelect({\n  accounts,\n  mint,\n  label,\n}: {\n  accounts: TokenAccount[] | null | undefined;\n  mint: string | undefined;\n  label?: boolean;\n}) {\n  const [\n    selectedTokenAccounts,\n    setSelectedTokenAccounts,\n  ] = useSelectedTokenAccounts();\n\n  let selectedValue: string | undefined;\n  if (mint && mint in selectedTokenAccounts) {\n    selectedValue = selectedTokenAccounts[mint];\n  } else if (accounts && accounts?.length > 0) {\n    selectedValue = accounts[0].pubkey.toBase58();\n  } else {\n    selectedValue = undefined;\n  }\n\n  const setTokenAccountForCoin = (value) => {\n    if (!mint) {\n      notify({\n        message: 'Error selecting token account',\n        description: 'Mint is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    const newSelectedTokenAccounts = { ...selectedTokenAccounts };\n    newSelectedTokenAccounts[mint] = value;\n    setSelectedTokenAccounts(newSelectedTokenAccounts);\n  };\n\n  return (\n    <React.Fragment>\n      {label && <Col span={8}>Token account:</Col>}\n      <Col span={label ? 13 : 21}>\n        <Select\n          style={{ width: '100%' }}\n          value={selectedValue}\n          onSelect={setTokenAccountForCoin}\n        >\n          {accounts?.map((account) => (\n            <Select.Option\n              key={account.pubkey.toBase58()}\n              value={account.pubkey.toBase58()}\n            >\n              <Typography.Text code>\n                {label\n                  ? abbreviateAddress(account.pubkey, 8)\n                  : account.pubkey.toBase58()}\n              </Typography.Text>\n            </Select.Option>\n          ))}\n        </Select>\n      </Col>\n      <Col span={2} offset={1}>\n        <Button\n          shape=\"round\"\n          icon={<CopyOutlined />}\n          size={'small'}\n          onClick={() =>\n            selectedValue && navigator.clipboard.writeText(selectedValue)\n          }\n        />\n      </Col>\n    </React.Fragment>\n  );\n}\n","import { Button, Col, Divider, Row } from 'antd';\nimport React, { useState } from 'react';\nimport FloatingElement from './layout/FloatingElement';\nimport styled from 'styled-components';\nimport {\n  useBalances,\n  useMarket,\n  useSelectedBaseCurrencyAccount,\n  useSelectedOpenOrdersAccount,\n  useSelectedQuoteCurrencyAccount,\n  useTokenAccounts,\n} from '../utils/markets';\nimport DepositDialog from './DepositDialog';\nimport { useWallet } from '../utils/wallet';\nimport Link from './Link';\nimport { settleFunds } from '../utils/send';\nimport { useSendConnection } from '../utils/connection';\nimport { notify } from '../utils/notifications';\nimport { Balances } from '../utils/types';\nimport StandaloneTokenAccountsSelect from './StandaloneTokenAccountSelect';\n\nconst RowBox = styled(Row)`\n  padding-bottom: 20px;\n`;\n\nconst Tip = styled.p`\n  font-size: 12px;\n  padding-top: 6px;\n`;\n\nconst ActionButton = styled(Button)`\n  color: #2abdd2;\n  background-color: #212734;\n  border-width: 0px;\n`;\n\nexport default function StandaloneBalancesDisplay() {\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const balances = useBalances();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const connection = useSendConnection();\n  const { providerUrl, providerName, wallet, connected } = useWallet();\n  const [baseOrQuote, setBaseOrQuote] = useState('');\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const [tokenAccounts] = useTokenAccounts();\n  const baseCurrencyBalances =\n    balances && balances.find((b) => b.coin === baseCurrency);\n  const quoteCurrencyBalances =\n    balances && balances.find((b) => b.coin === quoteCurrency);\n\n  async function onSettleFunds() {\n    if (!market) {\n      notify({\n        message: 'Error settling funds',\n        description: 'market is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    if (!openOrdersAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    if (!baseCurrencyAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    if (!quoteCurrencyAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error',\n      });\n      return;\n    }\n\n    try {\n      await settleFunds({\n        market,\n        openOrders: openOrdersAccount,\n        connection,\n        wallet,\n        baseCurrencyAccount,\n        quoteCurrencyAccount,\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n    }\n  }\n\n  const formattedBalances: [\n    string | undefined,\n    Balances | undefined,\n    string,\n    string | undefined,\n  ][] = [\n    [\n      baseCurrency,\n      baseCurrencyBalances,\n      'base',\n      market?.baseMintAddress.toBase58(),\n    ],\n    [\n      quoteCurrency,\n      quoteCurrencyBalances,\n      'quote',\n      market?.quoteMintAddress.toBase58(),\n    ],\n  ];\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      {formattedBalances.map(\n        ([currency, balances, baseOrQuote, mint], index) => (\n          <React.Fragment key={index}>\n            <Divider style={{ borderColor: 'white' }}>{currency}</Divider>\n            {connected && (\n              <RowBox align=\"middle\" style={{ paddingBottom: 10 }}>\n                <StandaloneTokenAccountsSelect\n                  accounts={tokenAccounts?.filter(\n                    (account) => account.effectiveMint.toBase58() === mint,\n                  )}\n                  mint={mint}\n                  label\n                />\n              </RowBox>\n            )}\n            <RowBox\n              align=\"middle\"\n              justify=\"space-between\"\n              style={{ paddingBottom: 12 }}\n            >\n              <Col>Wallet balance:</Col>\n              <Col>{balances && balances.wallet}</Col>\n            </RowBox>\n            <RowBox\n              align=\"middle\"\n              justify=\"space-between\"\n              style={{ paddingBottom: 12 }}\n            >\n              <Col>Unsettled balance:</Col>\n              <Col>{balances && balances.unsettled}</Col>\n            </RowBox>\n            <RowBox align=\"middle\" justify=\"space-around\">\n              <Col style={{ width: 150 }}>\n                <ActionButton\n                  block\n                  size=\"large\"\n                  onClick={() => setBaseOrQuote(baseOrQuote)}\n                >\n                  Deposit\n                </ActionButton>\n              </Col>\n              <Col style={{ width: 150 }}>\n                <ActionButton block size=\"large\" onClick={onSettleFunds}>\n                  Settle\n                </ActionButton>\n              </Col>\n            </RowBox>\n            <Tip>\n              All deposits go to your{' '}\n              <Link external to={providerUrl}>\n                {providerName}\n              </Link>{' '}\n              wallet\n            </Tip>\n          </React.Fragment>\n        ),\n      )}\n      <DepositDialog\n        baseOrQuote={baseOrQuote}\n        onClose={() => setBaseOrQuote('')}\n      />\n    </FloatingElement>\n  );\n}\n","import { Button, Input, Radio, Switch, Slider } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport {\n  useSelectedBaseCurrencyBalances,\n  useSelectedQuoteCurrencyBalances,\n  useMarket,\n  useMarkPrice,\n  useSelectedOpenOrdersAccount,\n  useSelectedBaseCurrencyAccount,\n  useSelectedQuoteCurrencyAccount,\n} from '../utils/markets';\nimport { useWallet } from '../utils/wallet';\nimport { notify } from '../utils/notifications';\nimport {\n  getDecimalCount,\n  roundToDecimal,\n  floorToDecimal,\n} from '../utils/utils';\nimport { useSendConnection } from '../utils/connection';\nimport FloatingElement from './layout/FloatingElement';\nimport { placeOrder } from '../utils/send';\nimport { SwitchChangeEventHandler } from 'antd/es/switch';\n\nconst SellButton = styled(Button)`\n  margin: 20px 0px 0px 0px;\n  background: #f23b69;\n  border-color: #f23b69;\n`;\n\nconst BuyButton = styled(Button)`\n  margin: 20px 0px 0px 0px;\n  background: #02bf76;\n  border-color: #02bf76;\n`;\n\nconst sliderMarks = {\n  0: '0%',\n  25: '25%',\n  50: '50%',\n  75: '75%',\n  100: '100%',\n};\n\nexport default function TradeForm({\n  style,\n  setChangeOrderRef,\n}: {\n  style?: any;\n  setChangeOrderRef?: (\n    ref: ({ size, price }: { size?: number; price?: number }) => void,\n  ) => void;\n}) {\n  const [side, setSide] = useState<'buy' | 'sell'>('buy');\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const baseCurrencyBalances = useSelectedBaseCurrencyBalances();\n  const quoteCurrencyBalances = useSelectedQuoteCurrencyBalances();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const { wallet } = useWallet();\n  const sendConnection = useSendConnection();\n  const markPrice = useMarkPrice();\n\n  const [postOnly, setPostOnly] = useState(false);\n  const [ioc, setIoc] = useState(false);\n  const [baseSize, setBaseSize] = useState<number | undefined>(undefined);\n  const [quoteSize, setQuoteSize] = useState<number | undefined>(undefined);\n  const [price, setPrice] = useState<number | undefined>(undefined);\n  const [submitting, setSubmitting] = useState(false);\n  const [sizeFraction, setSizeFraction] = useState(0);\n\n  const availableQuote =\n    openOrdersAccount && market\n      ? market.quoteSplSizeToNumber(openOrdersAccount.quoteTokenFree)\n      : 0;\n\n  let quoteBalance = (quoteCurrencyBalances || 0) + (availableQuote || 0);\n  let baseBalance = baseCurrencyBalances || 0;\n  let sizeDecimalCount =\n    market?.minOrderSize && getDecimalCount(market.minOrderSize);\n  let priceDecimalCount = market?.tickSize && getDecimalCount(market.tickSize);\n\n  useEffect(() => {\n    setChangeOrderRef && setChangeOrderRef(doChangeOrder);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setChangeOrderRef]);\n\n  useEffect(() => {\n    baseSize && price && onSliderChange(sizeFraction);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [side]);\n\n  useEffect(() => {\n    updateSizeFraction();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [price, baseSize]);\n\n  const onSetBaseSize = (baseSize: number | undefined) => {\n    setBaseSize(baseSize);\n    if (!baseSize) {\n      setQuoteSize(undefined);\n      return;\n    }\n    let usePrice = price || markPrice;\n    if (!usePrice) {\n      setQuoteSize(undefined);\n      return;\n    }\n    const rawQuoteSize = baseSize * usePrice;\n    const quoteSize =\n      baseSize && roundToDecimal(rawQuoteSize, sizeDecimalCount);\n    setQuoteSize(quoteSize);\n  };\n\n  const onSetQuoteSize = (quoteSize: number | undefined) => {\n    setQuoteSize(quoteSize);\n    if (!quoteSize) {\n      setBaseSize(undefined);\n      return;\n    }\n    let usePrice = price || markPrice;\n    if (!usePrice) {\n      setBaseSize(undefined);\n      return;\n    }\n    const rawBaseSize = quoteSize / usePrice;\n    const baseSize = quoteSize && roundToDecimal(rawBaseSize, sizeDecimalCount);\n    setBaseSize(baseSize);\n  };\n\n  const doChangeOrder = ({\n    size,\n    price,\n  }: {\n    size?: number;\n    price?: number;\n  }) => {\n    const formattedSize = size && roundToDecimal(size, sizeDecimalCount);\n    const formattedPrice = price && roundToDecimal(price, priceDecimalCount);\n    formattedSize && onSetBaseSize(formattedSize);\n    formattedPrice && setPrice(formattedPrice);\n  };\n\n  const updateSizeFraction = () => {\n    const rawMaxSize =\n      side === 'buy' ? quoteBalance / (price || markPrice || 1) : baseBalance;\n    const maxSize = floorToDecimal(rawMaxSize, sizeDecimalCount);\n    const sizeFraction = Math.min(((baseSize || 0) / maxSize) * 100, 100);\n    setSizeFraction(sizeFraction);\n  };\n\n  const onSliderChange = (value) => {\n    if (!price && markPrice) {\n      let formattedMarkPrice: number | string = priceDecimalCount\n        ? markPrice.toFixed(priceDecimalCount)\n        : markPrice;\n      setPrice(\n        typeof formattedMarkPrice === 'number'\n          ? formattedMarkPrice\n          : parseFloat(formattedMarkPrice),\n      );\n    }\n\n    let newSize;\n    if (side === 'buy') {\n      if (price || markPrice) {\n        newSize = ((quoteBalance / (price || markPrice || 1)) * value) / 100;\n      }\n    } else {\n      newSize = (baseBalance * value) / 100;\n    }\n\n    // round down to minOrderSize increment\n    let formatted = floorToDecimal(newSize, sizeDecimalCount);\n\n    onSetBaseSize(formatted);\n  };\n\n  const postOnChange: SwitchChangeEventHandler = (checked) => {\n    if (checked) {\n      setIoc(false);\n    }\n    setPostOnly(checked);\n  };\n  const iocOnChange: SwitchChangeEventHandler = (checked) => {\n    if (checked) {\n      setPostOnly(false);\n    }\n    setIoc(checked);\n  };\n\n  async function onSubmit() {\n    if (!price) {\n      console.warn('Missing price');\n      notify({\n        message: 'Missing price',\n        type: 'error',\n      });\n      return;\n    } else if (!baseSize) {\n      console.warn('Missing size');\n      notify({\n        message: 'Missing size',\n        type: 'error',\n      });\n      return;\n    }\n\n    setSubmitting(true);\n    try {\n      await placeOrder({\n        side,\n        price,\n        size: baseSize,\n        orderType: ioc ? 'ioc' : postOnly ? 'postOnly' : 'limit',\n        market,\n        connection: sendConnection,\n        wallet,\n        baseCurrencyAccount: baseCurrencyAccount?.pubkey,\n        quoteCurrencyAccount: quoteCurrencyAccount?.pubkey,\n      });\n      setPrice(undefined);\n      onSetBaseSize(undefined);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error placing order',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <FloatingElement\n      style={{ display: 'flex', flexDirection: 'column', ...style }}\n    >\n      <div style={{ flex: 1 }}>\n        <Radio.Group\n          onChange={(e) => setSide(e.target.value)}\n          value={side}\n          buttonStyle=\"solid\"\n          style={{\n            marginBottom: 8,\n            width: '100%',\n          }}\n        >\n          <Radio.Button\n            value=\"buy\"\n            style={{\n              width: '50%',\n              textAlign: 'center',\n              background: side === 'buy' ? '#02bf76' : '',\n              borderColor: side === 'buy' ? '#02bf76' : '',\n            }}\n          >\n            BUY\n          </Radio.Button>\n          <Radio.Button\n            value=\"sell\"\n            style={{\n              width: '50%',\n              textAlign: 'center',\n              background: side === 'sell' ? '#F23B69' : '',\n              borderColor: side === 'sell' ? '#F23B69' : '',\n            }}\n          >\n            SELL\n          </Radio.Button>\n        </Radio.Group>\n        <Input\n          style={{ textAlign: 'right', paddingBottom: 8 }}\n          addonBefore={<div style={{ width: '30px' }}>Price</div>}\n          suffix={\n            <span style={{ fontSize: 10, opacity: 0.5 }}>{quoteCurrency}</span>\n          }\n          value={price}\n          type=\"number\"\n          step={market?.tickSize || 1}\n          onChange={(e) => setPrice(parseFloat(e.target.value))}\n        />\n        <Input.Group compact style={{ paddingBottom: 8 }}>\n          <Input\n            style={{ width: 'calc(50% + 30px)', textAlign: 'right' }}\n            addonBefore={<div style={{ width: '30px' }}>Size</div>}\n            suffix={\n              <span style={{ fontSize: 10, opacity: 0.5 }}>{baseCurrency}</span>\n            }\n            value={baseSize}\n            type=\"number\"\n            step={market?.minOrderSize || 1}\n            onChange={(e) => onSetBaseSize(parseFloat(e.target.value))}\n          />\n          <Input\n            style={{ width: 'calc(50% - 30px)', textAlign: 'right' }}\n            suffix={\n              <span style={{ fontSize: 10, opacity: 0.5 }}>\n                {quoteCurrency}\n              </span>\n            }\n            value={quoteSize}\n            type=\"number\"\n            step={market?.minOrderSize || 1}\n            onChange={(e) => onSetQuoteSize(parseFloat(e.target.value))}\n          />\n        </Input.Group>\n        <Slider\n          value={sizeFraction}\n          tipFormatter={(value) => `${value}%`}\n          marks={sliderMarks}\n          onChange={onSliderChange}\n        />\n        <div style={{ paddingTop: 18 }}>\n          {'POST '}\n          <Switch\n            checked={postOnly}\n            onChange={postOnChange}\n            style={{ marginRight: 40 }}\n          />\n          {'IOC '}\n          <Switch checked={ioc} onChange={iocOnChange} />\n        </div>\n      </div>\n      {side === 'buy' ? (\n        <BuyButton\n          disabled={!price || !baseSize}\n          onClick={onSubmit}\n          block\n          type=\"primary\"\n          size=\"large\"\n          loading={submitting}\n        >\n          Buy {baseCurrency}\n        </BuyButton>\n      ) : (\n        <SellButton\n          disabled={!price || !baseSize}\n          onClick={onSubmit}\n          block\n          type=\"primary\"\n          size=\"large\"\n          loading={submitting}\n        >\n          Sell {baseCurrency}\n        </SellButton>\n      )}\n    </FloatingElement>\n  );\n}\n","import { Col, Row } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useMarket, useBonfidaTrades } from '../utils/markets';\nimport { getDecimalCount } from '../utils/utils';\nimport FloatingElement from './layout/FloatingElement';\nimport { BonfidaTrade } from '../utils/types';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\nconst SizeTitle = styled(Row)`\n  padding: 20px 0 14px;\n  color: #434a59;\n`;\n\nexport default function PublicTrades({ smallScreen }) {\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const [trades, loaded] = useBonfidaTrades();\n\n  return (\n    <FloatingElement\n      style={\n        smallScreen\n          ? { flex: 1 }\n          : {\n              marginTop: '10px',\n              minHeight: '270px',\n              maxHeight: 'calc(100vh - 700px)',\n            }\n      }\n    >\n      <Title>Recent Market trades</Title>\n      <SizeTitle>\n        <Col span={8}>Price ({quoteCurrency}) </Col>\n        <Col span={8} style={{ textAlign: 'right' }}>\n          Size ({baseCurrency})\n        </Col>\n        <Col span={8} style={{ textAlign: 'right' }}>\n          Time\n        </Col>\n      </SizeTitle>\n      {!!trades && loaded && (\n        <div\n          style={{\n            marginRight: '-20px',\n            paddingRight: '5px',\n            overflowY: 'scroll',\n            maxHeight: smallScreen\n              ? 'calc(100% - 75px)'\n              : 'calc(100vh - 800px)',\n          }}\n        >\n          {trades.map((trade: BonfidaTrade, i: number) => (\n            <Row key={i} style={{ marginBottom: 4 }}>\n              <Col\n                span={8}\n                style={{\n                  color: trade.side === 'buy' ? '#41C77A' : '#F23B69',\n                }}\n              >\n                {market?.tickSize && !isNaN(trade.price)\n                  ? Number(trade.price).toFixed(\n                      getDecimalCount(market.tickSize),\n                    )\n                  : trade.price}\n              </Col>\n              <Col span={8} style={{ textAlign: 'right' }}>\n                {market?.minOrderSize && !isNaN(trade.size)\n                  ? Number(trade.size).toFixed(\n                      getDecimalCount(market.minOrderSize),\n                    )\n                  : trade.size}\n              </Col>\n              <Col span={8} style={{ textAlign: 'right', color: '#434a59' }}>\n                {trade.time && new Date(trade.time).toLocaleTimeString()}\n              </Col>\n            </Row>\n          ))}\n        </div>\n      )}\n    </FloatingElement>\n  );\n}\n","import React from 'react';\nimport { Button } from 'antd';\nimport { LinkOutlined } from '@ant-design/icons';\n\nexport default function LinkAddress({\n  title,\n  address,\n}: {\n  title?: undefined | any;\n  address: string;\n}) {\n  return (\n    <div>\n      {title && <p style={{ color: 'white' }}>{title}</p>}\n      <Button\n        type=\"link\"\n        icon={<LinkOutlined />}\n        href={'https://explorer.solana.com/address/' + address}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {address}\n      </Button>\n    </div>\n  );\n}\n","import { Button, Divider, Spin, Typography } from 'antd';\nimport React from 'react';\nimport {\n  useGetOpenOrdersForDeprecatedMarkets,\n  useBalancesForDeprecatedMarkets,\n  useUnmigratedOpenOrdersAccounts,\n} from '../utils/markets';\nimport FloatingElement from './layout/FloatingElement';\nimport CheckOutlined from '@ant-design/icons/lib/icons/CheckOutlined';\nimport BalancesTable from './UserInfoTable/BalancesTable';\nimport Link from './Link';\nimport OpenOrderTable from './UserInfoTable/OpenOrderTable';\nimport SyncOutlined from '@ant-design/icons/lib/icons/SyncOutlined';\n\nconst { Title } = Typography;\n\nexport default function DeprecatedMarketsInstructions({ switchToLiveMarkets }) {\n  const balances = useBalancesForDeprecatedMarkets();\n  const {\n    openOrders,\n    loaded,\n    refreshOpenOrders,\n  } = useGetOpenOrdersForDeprecatedMarkets();\n\n  const { refresh } = useUnmigratedOpenOrdersAccounts();\n  const needToCancelOrders = !openOrders || openOrders.length > 0;\n  const filteredBalances =\n    balances &&\n    balances.filter(({ orders, unsettled }) => orders > 0 || unsettled > 0);\n  const needToSettleFunds = filteredBalances && filteredBalances.length > 0;\n  return (\n    <FloatingElement>\n      <Title level={4} style={{ color: 'rgba(255, 255, 255, 1)' }}>\n        Migrate to new USDC markets\n      </Title>\n      <Typography>\n        <Link\n          external\n          to={\n            'https://explorer.solana.com/address/EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v'\n          }\n        >\n          Native USDC\n        </Link>{' '}\n        has arrived on Solana! See{' '}\n        <Link\n          external\n          to={\n            'https://www.circle.com/blog/circle-partners-with-alameda-research-ftx-project-serum-to-introduce-support-for-usdc-on-solana'\n          }\n        >\n          Circle's announcement\n        </Link>{' '}\n        for more information.\n      </Typography>\n      <br />\n      <Typography>\n        Serum is transitioning from the previous{' '}\n        <Link\n          external\n          to={\n            'https://explorer.solana.com/address/BXXkv6z8ykpG1yuvUDPgh732wzVHB69RnB9YgSYh3itW'\n          }\n        >\n          Wrapped USDC\n        </Link>\n        , now called WUSDC, to Native USDC. You can convert from WUSDC to USDC\n        directly on{' '}\n        <Link external to={'https://sollet.io'}>\n          sollet.io\n        </Link>\n        , or can deposit WUSDC and be credited USDC on exchanges like{' '}\n        <Link external to={'https://ftx.com'}>\n          FTX\n        </Link>\n        .\n      </Typography>\n      <br />\n      <Typography>\n        Markets with WUSDC as the quote curency are now deprecated. To migrate\n        over to the new USDC markets, please cancel your orders and settle your\n        funds on old markets.\n      </Typography>\n      <div style={{ marginTop: 20, display: 'flex', justifyContent: 'center' }}>\n        <Button onClick={() => refresh(true)}>\n          <SyncOutlined /> Refresh data\n        </Button>\n      </div>\n      {!balances ? (\n        <Spin size=\"large\" />\n      ) : (\n        <>\n          <Divider>\n            {!needToCancelOrders && <CheckOutlined />} Cancel your orders\n          </Divider>\n          {needToCancelOrders ? (\n            loaded ? (\n              <OpenOrderTable\n                openOrders={openOrders}\n                onCancelSuccess={() => {\n                  setTimeout(() => {\n                    refresh();\n                    refreshOpenOrders();\n                  }, 1000); // Wait so that on-chain account state reflects the update\n                }}\n              />\n            ) : (\n              <Spin size=\"large\" />\n            )\n          ) : null}\n          <Divider>\n            {!needToSettleFunds && <CheckOutlined />} Settle your funds\n          </Divider>\n          {needToSettleFunds && (\n            <BalancesTable\n              balances={filteredBalances}\n              hideWalletBalance\n              showMarket\n              onSettleSuccess={() => {\n                setTimeout(refresh, 1000); // Wait so that on-chain account state reflects the update\n              }}\n            />\n          )}\n          <Divider>Switch to upgraded markets</Divider>\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\n            <Button\n              onClick={switchToLiveMarkets}\n              disabled={needToSettleFunds || needToCancelOrders}\n            >\n              Switch to new markets\n            </Button>\n          </div>\n        </>\n      )}\n    </FloatingElement>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Col, Input, Modal, Row, Typography } from 'antd';\nimport { notify } from '../utils/notifications';\nimport { isValidPublicKey } from '../utils/utils';\nimport { PublicKey } from '@solana/web3.js';\nimport { Market, MARKETS, TOKEN_MINTS } from '@project-serum/serum';\nimport { useAccountInfo, useConnection } from '../utils/connection';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nconst { Text } = Typography;\n\nexport default function CustomMarketDialog({\n  visible,\n  onAddCustomMarket,\n  onClose,\n}) {\n  const connection = useConnection();\n\n  const [marketId, setMarketId] = useState('');\n\n  const [marketLabel, setMarketLabel] = useState('');\n  const [baseLabel, setBaseLabel] = useState('');\n  const [quoteLabel, setQuoteLabel] = useState('');\n\n  const [market, setMarket] = useState(null);\n  const [loadingMarket, setLoadingMarket] = useState(false);\n\n  const wellFormedMarketId = isValidPublicKey(marketId);\n\n  const [marketAccountInfo] = useAccountInfo(\n    wellFormedMarketId ? new PublicKey(marketId) : null,\n  );\n  const programId = marketAccountInfo\n    ? marketAccountInfo.owner.toBase58()\n    : MARKETS.find(({ deprecated }) => !deprecated).programId.toBase58();\n\n  useEffect(() => {\n    if (!wellFormedMarketId || !programId) {\n      resetLabels();\n      return;\n    }\n    setLoadingMarket(true);\n    Market.load(\n      connection,\n      new PublicKey(marketId),\n      {},\n      new PublicKey(programId),\n    )\n      .then((market) => {\n        setMarket(market);\n      })\n      .catch(() => {\n        resetLabels();\n        setMarket(null);\n      })\n      .finally(() => setLoadingMarket(false));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [connection, marketId, programId]);\n\n  const resetLabels = () => {\n    setMarketLabel(null);\n    setBaseLabel(null);\n    setQuoteLabel(null);\n  };\n\n  const knownMarket = MARKETS.find(\n    (m) =>\n      m.address.toBase58() === marketId && m.programId.toBase58() === programId,\n  );\n  const knownProgram = MARKETS.find(\n    (m) => m.programId.toBase58() === programId,\n  );\n  const knownBaseCurrency =\n    market?.baseMintAddress &&\n    TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\n      ?.name;\n\n  const knownQuoteCurrency =\n    market?.quoteMintAddress &&\n    TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\n      ?.name;\n\n  const canSubmit =\n    !loadingMarket &&\n    !!market &&\n    market.publicKey.toBase58() === marketId &&\n    marketId &&\n    programId &&\n    marketLabel &&\n    (knownBaseCurrency || baseLabel) &&\n    (knownQuoteCurrency || quoteLabel) &&\n    wellFormedMarketId;\n\n  const onSubmit = () => {\n    if (!canSubmit) {\n      notify({\n        message: 'Please fill in all fields with valid values',\n        type: 'error',\n      });\n      return;\n    }\n\n    let params = {\n      address: marketId,\n      programId,\n      name: marketLabel,\n    };\n    if (!knownBaseCurrency) {\n      params.baseLabel = baseLabel;\n    }\n    if (!knownQuoteCurrency) {\n      params.quoteLabel = quoteLabel;\n    }\n    onAddCustomMarket(params);\n    onDoClose();\n  };\n\n  const onDoClose = () => {\n    resetLabels();\n    setMarket(null);\n    setMarketId(null);\n    onClose();\n  };\n\n  return (\n    <Modal\n      title={'Add custom market'}\n      visible={visible}\n      onOk={onSubmit}\n      okText={'Add'}\n      onCancel={onDoClose}\n      okButtonProps={{ disabled: !canSubmit }}\n    >\n      <div>\n        {wellFormedMarketId ? (\n          <>\n            {!market && !loadingMarket && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Not a valid market</Text>\n              </Row>\n            )}\n            {market && knownMarket && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"warning\">Market known: {knownMarket.name}</Text>\n              </Row>\n            )}\n            {market && !knownProgram && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Warning: unknown DEX program</Text>\n              </Row>\n            )}\n            {market && knownProgram && knownProgram.deprecated && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"warning\">Warning: deprecated DEX program</Text>\n              </Row>\n            )}\n          </>\n        ) : (\n          <>\n            {marketId && !wellFormedMarketId && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Invalid market ID</Text>\n              </Row>\n            )}\n          </>\n        )}\n        <Row style={{ marginBottom: 8 }}>\n          <Col span={24}>\n            <Input\n              placeholder=\"Market Id\"\n              value={marketId}\n              onChange={(e) => setMarketId(e.target.value)}\n              suffix={loadingMarket ? <LoadingOutlined /> : null}\n            />\n          </Col>\n        </Row>\n\n        <Row style={{ marginBottom: 8, marginTop: 8 }}>\n          <Col span={24}>\n            <Input\n              placeholder=\"Market Label\"\n              disabled={!market}\n              value={marketLabel}\n              onChange={(e) => setMarketLabel(e.target.value)}\n            />\n          </Col>\n        </Row>\n        <Row gutter={[8]} style={{ marginBottom: 8 }}>\n          <Col span={12}>\n            <Input\n              placeholder=\"Base label\"\n              disabled={!market || knownBaseCurrency}\n              value={knownBaseCurrency || baseLabel}\n              onChange={(e) => setBaseLabel(e.target.value)}\n            />\n            {market && !knownBaseCurrency && (\n              <div style={{ marginTop: 8 }}>\n                <Text type=\"warning\">Warning: unknown token</Text>\n              </div>\n            )}\n          </Col>\n          <Col span={12}>\n            <Input\n              placeholder=\"Quote label\"\n              disabled={!market || knownQuoteCurrency}\n              value={knownQuoteCurrency || quoteLabel}\n              onChange={(e) => setQuoteLabel(e.target.value)}\n            />\n            {market && !knownQuoteCurrency && (\n              <div style={{ marginTop: 8 }}>\n                <Text type=\"warning\">Warning: unknown token</Text>\n              </div>\n            )}\n          </Col>\n        </Row>\n      </div>\n    </Modal>\n  );\n}\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Col, Popover, Row, Select, Typography, Button } from 'antd';\nimport styled from 'styled-components';\nimport Orderbook from '../components/Orderbook';\nimport UserInfoTable from '../components/UserInfoTable';\nimport StandaloneBalancesDisplay from '../components/StandaloneBalancesDisplay';\nimport {\n  useMarket,\n  useMarketsList,\n  useUnmigratedDeprecatedMarkets,\n  getMarketInfos,\n} from '../utils/markets';\nimport TradeForm from '../components/TradeForm';\nimport TradesTable from '../components/TradesTable';\nimport LinkAddress from '../components/LinkAddress';\nimport DeprecatedMarketsInstructions from '../components/DeprecatedMarketsInstructions';\nimport {\n  InfoCircleOutlined,\n  PlusCircleOutlined,\n  DeleteOutlined,\n} from '@ant-design/icons';\nimport CustomMarketDialog from '../components/CustomMarketDialog';\nimport { notify } from '../utils/notifications';\n\nconst { Option, OptGroup } = Select;\n\nconst Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 16px 16px;\n  .borderNone .ant-select-selector {\n    border: none !important;\n  }\n`;\n\nexport default function TradePage() {\n  const {\n    market,\n    marketName,\n    customMarkets,\n    setCustomMarkets,\n    setMarketAddress,\n  } = useMarket();\n  const markets = useMarketsList();\n  const [handleDeprecated, setHandleDeprecated] = useState(false);\n  const [addMarketVisible, setAddMarketVisible] = useState(false);\n  const deprecatedMarkets = useUnmigratedDeprecatedMarkets();\n  const [dimensions, setDimensions] = useState({\n    height: window.innerHeight,\n    width: window.innerWidth,\n  });\n\n  useEffect(() => {\n    document.title = marketName ? `${marketName} — Serum` : 'Serum';\n  }, [marketName]);\n\n  const changeOrderRef = useRef<\n    ({ size, price }: { size?: number; price?: number }) => void\n  >();\n\n  useEffect(() => {\n    const handleResize = () => {\n      setDimensions({\n        height: window.innerHeight,\n        width: window.innerWidth,\n      });\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const width = dimensions?.width;\n  const componentProps = {\n    onChangeOrderRef: (ref) => (changeOrderRef.current = ref),\n    onPrice: useCallback(\n      (price) => changeOrderRef.current && changeOrderRef.current({ price }),\n      [],\n    ),\n    onSize: useCallback(\n      (size) => changeOrderRef.current && changeOrderRef.current({ size }),\n      [],\n    ),\n  };\n  const getComponent = useCallback(() => {\n    if (handleDeprecated) {\n      return (\n        <DeprecatedMarketsPage\n          switchToLiveMarkets={() => setHandleDeprecated(false)}\n        />\n      );\n    } else if (width < 1000) {\n      return <RenderSmaller {...componentProps} />;\n    } else if (width < 1450) {\n      return <RenderSmall {...componentProps} />;\n    } else {\n      return <RenderNormal {...componentProps} />;\n    }\n  }, [width, componentProps, handleDeprecated]);\n\n  const onAddCustomMarket = (customMarket) => {\n    const marketInfo = getMarketInfos(customMarkets).some(\n      (m) => m.address.toBase58() === customMarket.address,\n    );\n    if (marketInfo) {\n      notify({\n        message: `A market with the given ID already exists`,\n        type: 'error',\n      });\n      return;\n    }\n    const newCustomMarkets = [...customMarkets, customMarket];\n    setCustomMarkets(newCustomMarkets);\n    setMarketAddress(customMarket.address);\n  };\n\n  const onDeleteCustomMarket = (address) => {\n    const newCustomMarkets = customMarkets.filter((m) => m.address !== address);\n    setCustomMarkets(newCustomMarkets);\n  };\n\n  return (\n    <>\n      <CustomMarketDialog\n        visible={addMarketVisible}\n        onClose={() => setAddMarketVisible(false)}\n        onAddCustomMarket={onAddCustomMarket}\n      />\n      <Wrapper>\n        <Row\n          align=\"middle\"\n          style={{ paddingLeft: 5, paddingRight: 5 }}\n          gutter={16}\n        >\n          <Col>\n            <MarketSelector\n              markets={markets}\n              setHandleDeprecated={setHandleDeprecated}\n              placeholder={'Select market'}\n              customMarkets={customMarkets}\n              onDeleteCustomMarket={onDeleteCustomMarket}\n            />\n          </Col>\n          {market ? (\n            <Col>\n              <Popover\n                content={<LinkAddress address={market.publicKey.toBase58()} />}\n                placement=\"bottomRight\"\n                title=\"Market address\"\n                trigger=\"click\"\n              >\n                <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n              </Popover>\n            </Col>\n          ) : null}\n          <Col>\n            <PlusCircleOutlined\n              style={{ color: '#2abdd2' }}\n              onClick={() => setAddMarketVisible(true)}\n            />\n          </Col>\n          {deprecatedMarkets && deprecatedMarkets.length > 0 && (\n            <React.Fragment>\n              <Col>\n                <Typography>\n                  You have unsettled funds on old markets! Please go through\n                  them to claim your funds.\n                </Typography>\n              </Col>\n              <Col>\n                <Button onClick={() => setHandleDeprecated(!handleDeprecated)}>\n                  {handleDeprecated ? 'View new markets' : 'Handle old markets'}\n                </Button>\n              </Col>\n            </React.Fragment>\n          )}\n        </Row>\n        {getComponent()}\n      </Wrapper>\n    </>\n  );\n}\n\nfunction MarketSelector({\n  markets,\n  placeholder,\n  setHandleDeprecated,\n  customMarkets,\n  onDeleteCustomMarket,\n}) {\n  const { market, setMarketAddress } = useMarket();\n\n  const onSetMarketAddress = (marketAddress) => {\n    setHandleDeprecated(false);\n    setMarketAddress(marketAddress);\n  };\n\n  const extractBase = (a) => a.split('/')[0];\n  const extractQuote = (a) => a.split('/')[1];\n\n  const selectedMarket = getMarketInfos(customMarkets)\n    .find(\n      (proposedMarket) =>\n        market?.address && proposedMarket.address.equals(market.address),\n    )\n    ?.address?.toBase58();\n\n  return (\n    <Select\n      showSearch\n      size={'large'}\n      style={{ width: 200 }}\n      placeholder={placeholder || 'Select a market'}\n      optionFilterProp=\"name\"\n      onSelect={onSetMarketAddress}\n      listHeight={400}\n      value={selectedMarket}\n      filterOption={(input, option) =>\n        option?.name?.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      }\n    >\n      {customMarkets && customMarkets.length > 0 && (\n        <OptGroup label=\"Custom\">\n          {customMarkets.map(({ address, name }, i) => (\n            <Option\n              value={address}\n              key={address}\n              name={name}\n              style={{\n                padding: '10px',\n                // @ts-ignore\n                backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\n              }}\n            >\n              <Row>\n                <Col flex=\"auto\">{name}</Col>\n                {selectedMarket !== address && (\n                  <Col>\n                    <DeleteOutlined\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        e.nativeEvent.stopImmediatePropagation();\n                        onDeleteCustomMarket && onDeleteCustomMarket(address);\n                      }}\n                    />\n                  </Col>\n                )}\n              </Row>\n            </Option>\n          ))}\n        </OptGroup>\n      )}\n      <OptGroup label=\"Markets\">\n        {markets\n          .sort((a, b) =>\n            extractQuote(a.name) === 'USDT' && extractQuote(b.name) !== 'USDT'\n              ? -1\n              : extractQuote(a.name) !== 'USDT' &&\n                extractQuote(b.name) === 'USDT'\n              ? 1\n              : 0,\n          )\n          .sort((a, b) =>\n            extractBase(a.name) < extractBase(b.name)\n              ? -1\n              : extractBase(a.name) > extractBase(b.name)\n              ? 1\n              : 0,\n          )\n          .map(({ address, name, deprecated }, i) => (\n            <Option\n              value={address.toBase58()}\n              key={address}\n              name={name}\n              style={{\n                padding: '10px',\n                // @ts-ignore\n                backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\n              }}\n            >\n              {name} {deprecated ? ' (Deprecated)' : null}\n            </Option>\n          ))}\n      </OptGroup>\n    </Select>\n  );\n}\n\nconst DeprecatedMarketsPage = ({ switchToLiveMarkets }) => {\n  return (\n    <>\n      <Row>\n        <Col flex=\"auto\">\n          <DeprecatedMarketsInstructions\n            switchToLiveMarkets={switchToLiveMarkets}\n          />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst RenderNormal = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <Row\n      style={{\n        minHeight: '900px',\n        flexWrap: 'nowrap',\n      }}\n    >\n      <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n        <UserInfoTable />\n      </Col>\n      <Col flex={'360px'} style={{ height: '100%' }}>\n        <Orderbook smallScreen={false} onPrice={onPrice} onSize={onSize} />\n        <TradesTable smallScreen={false} />\n      </Col>\n      <Col\n        flex=\"400px\"\n        style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n      >\n        <TradeForm setChangeOrderRef={onChangeOrderRef} />\n        <StandaloneBalancesDisplay />\n      </Col>\n    </Row>\n  );\n};\n\nconst RenderSmall = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <>\n      <Row\n        style={{\n          height: '900px',\n        }}\n      >\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n          <Orderbook\n            smallScreen={true}\n            depth={13}\n            onPrice={onPrice}\n            onSize={onSize}\n          />\n        </Col>\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n          <TradesTable smallScreen={true} />\n        </Col>\n        <Col\n          flex=\"400px\"\n          style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n        >\n          <TradeForm setChangeOrderRef={onChangeOrderRef} />\n          <StandaloneBalancesDisplay />\n        </Col>\n      </Row>\n      <Row>\n        <Col flex=\"auto\">\n          <UserInfoTable />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst RenderSmaller = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <>\n      <Row>\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <TradeForm style={{ flex: 1 }} setChangeOrderRef={onChangeOrderRef} />\n        </Col>\n        <Col xs={24} sm={12}>\n          <StandaloneBalancesDisplay />\n        </Col>\n      </Row>\n      <Row\n        style={{\n          height: '500px',\n        }}\n      >\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <Orderbook smallScreen={true} onPrice={onPrice} onSize={onSize} />\n        </Col>\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <TradesTable smallScreen={true} />\n        </Col>\n      </Row>\n      <Row>\n        <Col flex=\"auto\">\n          <UserInfoTable />\n        </Col>\n      </Row>\n    </>\n  );\n};\n","import React from 'react';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport {\n  getMarketInfos,\n  useAllMarkets,\n  useAllOpenOrders,\n  useMarket,\n} from '../utils/markets';\nimport OpenOrderTable from '../components/UserInfoTable/OpenOrderTable';\nimport { Button } from 'antd';\nimport { OrderWithMarketAndMarketName } from '../utils/types';\n\nexport default function OpenOrdersPage() {\n  const { openOrders, loaded, refreshOpenOrders } = useAllOpenOrders();\n  let { customMarkets } = useMarket();\n  let marketInfos = getMarketInfos(customMarkets);\n  let marketAddressesToNames = Object.fromEntries(\n    marketInfos.map((info) => [info.address.toBase58(), info.name]),\n  );\n  let [allMarkets] = useAllMarkets(customMarkets);\n  const marketsByAddress = Object.fromEntries(\n    (allMarkets || []).map((marketInfo) => [\n      marketInfo.market.address.toBase58(),\n      marketInfo.market,\n    ]),\n  );\n\n  const dataSource: OrderWithMarketAndMarketName[] = (openOrders || [])\n    .map((orderInfos) =>\n      orderInfos.orders.map((order) => {\n        return {\n          marketName: marketAddressesToNames[orderInfos.marketAddress],\n          market: marketsByAddress[orderInfos.marketAddress],\n          ...order,\n        };\n      }),\n    )\n    .flat();\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <Button onClick={refreshOpenOrders} loading={!loaded}>\n        Refresh\n      </Button>\n      <OpenOrderTable\n        openOrders={dataSource}\n        pageSize={25}\n        loading={!loaded}\n        onCancelSuccess={refreshOpenOrders}\n        marketFilter\n      />\n    </FloatingElement>\n  );\n}\n","import React, { useState } from 'react';\nimport DataTable from '../layout/DataTable';\nimport { Button, Row } from 'antd';\nimport { settleAllFunds } from '../../utils/send';\nimport { notify } from '../../utils/notifications';\nimport { useConnection } from '../../utils/connection';\nimport { useWallet } from '../../utils/wallet';\nimport {\n  useAllMarkets,\n  useMarket,\n  useSelectedTokenAccounts,\n  useTokenAccounts,\n} from '../../utils/markets';\nimport StandaloneTokenAccountsSelect from '../StandaloneTokenAccountSelect';\n\nexport default function WalletBalancesTable({\n  walletBalances,\n}: {\n  walletBalances: {\n    coin: string;\n    mint: string;\n    walletBalance: number;\n    openOrdersFree: number;\n    openOrdersTotal: number;\n  }[];\n}) {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n  const [tokenAccounts, tokenAccountsConnected] = useTokenAccounts();\n  const { customMarkets } = useMarket();\n  const [allMarkets, allMarketsConnected] = useAllMarkets(customMarkets);\n  const [settlingFunds, setSettlingFunds] = useState(false);\n\n  async function onSettleFunds() {\n    setSettlingFunds(true);\n    try {\n      if (!tokenAccounts || !tokenAccountsConnected) {\n        notify({\n          message: 'Error settling funds',\n          description: 'TokenAccounts not connected',\n          type: 'error',\n        });\n        return;\n      }\n      if (!allMarkets || !allMarketsConnected) {\n        notify({\n          message: 'Error settling funds',\n          description: 'Markets not connected',\n          type: 'error',\n        });\n        return;\n      }\n      await settleAllFunds({\n        connection,\n        tokenAccounts,\n        selectedTokenAccounts,\n        wallet,\n        markets: allMarkets.map((marketInfo) => marketInfo.market),\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSettlingFunds(false);\n    }\n  }\n\n  const columns = [\n    {\n      title: 'Coin',\n      dataIndex: 'coin',\n      key: 'coin',\n      width: '20%',\n    },\n    {\n      title: 'Wallet Balance',\n      dataIndex: 'walletBalance',\n      key: 'walletBalance',\n      width: '20%',\n    },\n    {\n      title: 'Open orders total balances',\n      dataIndex: 'openOrdersTotal',\n      key: 'openOrdersTotal',\n      width: '20%',\n    },\n    {\n      title: 'Unsettled balances',\n      dataIndex: 'openOrdersFree',\n      key: 'openOrdersFree',\n      width: '20%',\n    },\n    {\n      title: 'Selected token account',\n      key: 'selectTokenAccount',\n      width: '20%',\n      render: (walletBalance) => (\n        <Row align=\"middle\" style={{ width: '430px' }}>\n          <StandaloneTokenAccountsSelect\n            accounts={tokenAccounts?.filter(\n              (t) => t.effectiveMint.toBase58() === walletBalance.mint,\n            )}\n            mint={walletBalance.mint}\n          />\n        </Row>\n      ),\n    },\n  ];\n  return (\n    <React.Fragment>\n      <DataTable\n        emptyLabel=\"No balances\"\n        dataSource={walletBalances}\n        columns={columns}\n        pagination={false}\n      />\n      {connected && (\n        <Button onClick={onSettleFunds} loading={settlingFunds}>\n          Settle all funds\n        </Button>\n      )}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { Tabs } from 'antd';\nimport {\n  useAllOpenOrdersBalances,\n  useWalletBalancesForAllMarkets,\n} from '../utils/markets';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport WalletBalancesTable from '../components/UserInfoTable/WalletBalancesTable';\nimport { useMintToTickers } from '../utils/tokens';\n\nconst { TabPane } = Tabs;\n\nexport default function BalancesPage() {\n  const walletBalances = useWalletBalancesForAllMarkets();\n  const mintToTickers = useMintToTickers();\n  const openOrdersBalances = useAllOpenOrdersBalances();\n\n  const data = (walletBalances || []).map((balance) => {\n    const balances = {\n      coin: mintToTickers[balance.mint],\n      mint: balance.mint,\n      walletBalance: balance.balance,\n      openOrdersFree: 0,\n      openOrdersTotal: 0,\n    };\n    for (let openOrdersAccount of openOrdersBalances[balance.mint] || []) {\n      balances['openOrdersFree'] += openOrdersAccount.free;\n      balances['openOrdersTotal'] += openOrdersAccount.total;\n    }\n    return balances;\n  });\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <Tabs defaultActiveKey=\"walletBalances\">\n        <TabPane tab=\"Wallet Balances\" key=\"walletBalances\">\n          <WalletBalancesTable walletBalances={data} />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n","import React from 'react';\nimport { Button, Popover } from 'antd';\nimport { InfoCircleOutlined, UserOutlined } from '@ant-design/icons';\nimport { useWallet } from '../utils/wallet';\nimport LinkAddress from './LinkAddress';\n\nexport default function WalletConnect() {\n  const { connected, wallet } = useWallet();\n  const publicKey = wallet?.publicKey?.toBase58();\n\n  return (\n    <React.Fragment>\n      <Button\n        type=\"text\"\n        size=\"large\"\n        onClick={connected ? wallet.disconnect : wallet.connect}\n        style={{ color: '#2abdd2' }}\n      >\n        <UserOutlined />\n        {!connected ? 'Connect wallet' : 'Disconnect'}\n      </Button>\n      {connected && (\n        <Popover\n          content={<LinkAddress address={publicKey} />}\n          placement=\"bottomRight\"\n          title=\"Wallet public key\"\n          trigger=\"click\"\n        >\n          <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n        </Popover>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Button, Col, Input, Row, Select, Typography } from 'antd';\nimport styled from 'styled-components';\nimport { Market, Orderbook } from '@project-serum/serum';\nimport {\n  getExpectedFillPrice,\n  getMarketDetails,\n  getMarketInfos,\n  getMarketOrderPrice,\n  getSelectedTokenAccountForMint,\n  useBalances,\n  useMarket,\n  useTokenAccounts,\n} from '../utils/markets';\nimport { notify } from '../utils/notifications';\nimport { useWallet } from '../utils/wallet';\nimport { useConnection, useSendConnection } from '../utils/connection';\nimport { placeOrder } from '../utils/send';\nimport { floorToDecimal, getDecimalCount } from '../utils/utils';\nimport FloatingElement from './layout/FloatingElement';\nimport WalletConnect from './WalletConnect';\nimport { SwapOutlined } from '@ant-design/icons';\nimport { CustomMarketInfo } from '../utils/types';\nimport Wallet from '@project-serum/sol-wallet-adapter';\n\nconst { Option } = Select;\nconst { Title } = Typography;\n\nconst ActionButton = styled(Button)`\n  color: #2abdd2;\n  background-color: #212734;\n  border-width: 0px;\n`;\n\nconst ConvertButton = styled(Button)`\n  background: #02bf76;\n  border-color: #02bf76;\n`;\n\nexport default function ConvertForm() {\n  const { connected, wallet } = useWallet();\n  const { customMarkets } = useMarket();\n  const marketInfos = getMarketInfos(customMarkets);\n  const { market, setMarketAddress } = useMarket();\n\n  const [fromToken, setFromToken] = useState<string | undefined>(undefined);\n  const [toToken, setToToken] = useState<string | undefined>(undefined);\n  const [size, setSize] = useState<number | undefined>(undefined);\n\n  const marketInfosbyName = Object.fromEntries(\n    marketInfos.map((market) => [market.name, market]),\n  );\n\n  const tokenConvertMap: Map<string, Set<string>> = new Map();\n  Object.keys(marketInfosbyName).forEach((market) => {\n    let [base, quote] = market.split('/');\n    !tokenConvertMap.has(base)\n      ? tokenConvertMap.set(base, new Set([quote]))\n      : tokenConvertMap.set(\n          base,\n          new Set([...(tokenConvertMap.get(base) || []), quote]),\n        );\n    !tokenConvertMap.has(quote)\n      ? tokenConvertMap.set(quote, new Set([base]))\n      : tokenConvertMap.set(\n          quote,\n          new Set([...(tokenConvertMap.get(quote) || []), base]),\n        );\n  });\n\n  const setMarket = (toToken) => {\n    const marketInfo = marketInfos\n      .filter((marketInfo) => !marketInfo.deprecated)\n      .find(\n        (marketInfo) =>\n          marketInfo.name === `${fromToken}/${toToken}` ||\n          marketInfo.name === `${toToken}/${fromToken}`,\n      );\n    if (!marketInfo) {\n      console.warn(\n        `Could not find market info for market names ${fromToken}/${toToken} or ${toToken}/${fromToken}`,\n      );\n      notify({\n        message: 'Invalid market',\n        type: 'error',\n      });\n      return;\n    }\n    setMarketAddress(marketInfo.address.toBase58());\n    setToToken(toToken);\n  };\n\n  return (\n    <FloatingElement style={{ maxWidth: 500 }}>\n      <Title level={3}>Convert</Title>\n      {!connected && (\n        <Row justify=\"center\">\n          <Col>\n            <WalletConnect />\n          </Col>\n        </Row>\n      )}\n      {tokenConvertMap && connected && (\n        <>\n          <Row style={{ marginBottom: 8 }}>\n            <Col>\n              <Select\n                style={{ minWidth: 300 }}\n                placeholder=\"Select a token\"\n                value={fromToken}\n                onChange={(token) => {\n                  setFromToken(token);\n                  setToToken(undefined);\n                }}\n              >\n                {Array.from(tokenConvertMap.keys()).map((token) => (\n                  <Option value={token} key={token}>\n                    {token}\n                  </Option>\n                ))}\n              </Select>\n            </Col>\n          </Row>\n          {fromToken && (\n            <Row style={{ marginBottom: 8 }}>\n              <Col>\n                <Select\n                  style={{ minWidth: 300 }}\n                  value={toToken}\n                  onChange={setMarket}\n                >\n                  {[...(tokenConvertMap.get(fromToken) || [])].map((token) => (\n                    <Option value={token} key={token}>\n                      {token}\n                    </Option>\n                  ))}\n                </Select>\n              </Col>\n            </Row>\n          )}\n          {fromToken && toToken && (\n            <ConvertFormSubmit\n              size={size}\n              setSize={setSize}\n              fromToken={fromToken}\n              toToken={toToken}\n              wallet={wallet}\n              market={market}\n              customMarkets={customMarkets}\n            />\n          )}\n        </>\n      )}\n    </FloatingElement>\n  );\n}\n\nfunction ConvertFormSubmit({\n  size,\n  setSize,\n  fromToken,\n  toToken,\n  wallet,\n  market,\n  customMarkets,\n}: {\n  size: number | null | undefined;\n  setSize: (newSize: number | undefined) => void;\n  fromToken: string;\n  toToken: string;\n  wallet: Wallet;\n  market: Market | null | undefined;\n  customMarkets: CustomMarketInfo[];\n}) {\n  const [accounts] = useTokenAccounts();\n  const balances = useBalances();\n  const [fromAmount, setFromAmount] = useState<number | undefined>();\n  const [toAmount, setToAmount] = useState<number | undefined>();\n\n  const connection = useConnection();\n  const sendConnection = useSendConnection();\n\n  const [isConverting, setIsConverting] = useState(false);\n\n  const isFromTokenBaseOfMarket = (market) => {\n    const { marketName } = getMarketDetails(market, customMarkets);\n    if (!marketName) {\n      throw Error(\n        'Cannot determine if coin is quote or base because marketName is missing',\n      );\n    }\n    const [base] = marketName.split('/');\n    return fromToken === base;\n  };\n\n  const onConvert = async () => {\n    if (!market) {\n      console.warn('Market is null when attempting convert.');\n      notify({\n        message: 'Invalid market',\n        type: 'error',\n      });\n      return;\n    }\n    // get accounts\n    const baseCurrencyAccount = getSelectedTokenAccountForMint(\n      accounts,\n      market?.baseMintAddress,\n    );\n    const quoteCurrencyAccount = getSelectedTokenAccountForMint(\n      accounts,\n      market?.quoteMintAddress,\n    );\n\n    // get approximate price\n    let side;\n    try {\n      side = isFromTokenBaseOfMarket(market) ? 'sell' : 'buy';\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error placing order',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    }\n\n    const sidedOrderbookAccount =\n      // @ts-ignore\n      side === 'buy' ? market._decoded.asks : market._decoded.bids;\n    const orderbookData = await connection.getAccountInfo(\n      sidedOrderbookAccount,\n    );\n    if (!orderbookData?.data) {\n      notify({ message: 'Invalid orderbook data', type: 'error' });\n      return;\n    }\n    const decodedOrderbookData = Orderbook.decode(market, orderbookData.data);\n    const [bbo] =\n      decodedOrderbookData &&\n      decodedOrderbookData.getL2(1).map(([price]) => price);\n    if (!bbo) {\n      notify({ message: 'No best price found', type: 'error' });\n      return;\n    }\n    if (!size) {\n      notify({ message: 'Size not specified', type: 'error' });\n      return;\n    }\n\n    const tickSizeDecimals = getDecimalCount(market.tickSize);\n    const parsedPrice = getMarketOrderPrice(\n      decodedOrderbookData,\n      size,\n      tickSizeDecimals,\n    );\n\n    // round size\n    const sizeDecimalCount = getDecimalCount(market.minOrderSize);\n    const nativeSize = side === 'sell' ? size : size / parsedPrice;\n    const parsedSize = floorToDecimal(nativeSize, sizeDecimalCount);\n\n    setIsConverting(true);\n    try {\n      await placeOrder({\n        side,\n        price: parsedPrice,\n        size: parsedSize,\n        orderType: 'ioc',\n        market,\n        connection: sendConnection,\n        wallet,\n        baseCurrencyAccount: baseCurrencyAccount?.pubkey,\n        quoteCurrencyAccount: quoteCurrencyAccount?.pubkey,\n      });\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error placing order',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setIsConverting(false);\n    }\n  };\n\n  const getPrice = async () => {\n    try {\n      const side = isFromTokenBaseOfMarket(market) ? 'sell' : 'buy';\n      const sidedOrderbookAccount =\n        // @ts-ignore\n        side === 'buy' ? market._decoded.asks : market._decoded.bids;\n      const orderbookData = await connection.getAccountInfo(\n        sidedOrderbookAccount,\n      );\n      if (!orderbookData?.data || !market) {\n        return [null, null];\n      }\n      const decodedOrderbookData = Orderbook.decode(market, orderbookData.data);\n      const [bbo] =\n        decodedOrderbookData &&\n        decodedOrderbookData.getL2(1).map(([price]) => price);\n      if (!bbo || !size) {\n        return [null, null];\n      }\n      const tickSizeDecimals = getDecimalCount(market.tickSize);\n      const expectedPrice = getExpectedFillPrice(\n        decodedOrderbookData,\n        size,\n        tickSizeDecimals,\n      );\n      if (side === 'buy') {\n        return [expectedPrice.toFixed(6), 1];\n      } else {\n        return [1, expectedPrice.toFixed(6)];\n      }\n    } catch (e) {\n      console.log(`Got error ${e}`);\n      return [null, null];\n    }\n  };\n\n  useEffect(\n    () => {\n      getPrice().then(([fromAmount, toAmount]) => {\n        setFromAmount(fromAmount || undefined);\n        setToAmount(toAmount || undefined);\n      });\n    },\n    // eslint-disable-next-line\n    [market?.address.toBase58(), size],\n  );\n\n  const canConvert = market && size && size > 0;\n  const balance = balances.find(\n    (coinBalance) => coinBalance.coin === fromToken,\n  );\n  const availableBalance =\n    ((balance?.unsettled || 0) + (balance?.wallet || 0)) * 0.99;\n\n  return (\n    <React.Fragment>\n      <Row style={{ marginBottom: 8 }}>\n        <Col>\n          <Input\n            style={{ minWidth: 300 }}\n            addonBefore={`Size (${fromToken})`}\n            placeholder=\"Size\"\n            value={size === null ? undefined : size}\n            type=\"number\"\n            onChange={(e) => setSize(parseFloat(e.target.value) || undefined)}\n          />\n        </Col>\n      </Row>\n      <Row gutter={12} style={{ marginBottom: 8 }}>\n        <Col span={12}>\n          <ActionButton\n            block\n            size=\"large\"\n            onClick={() => setSize(floorToDecimal(availableBalance, 4))}\n          >\n            Max: {availableBalance.toFixed(4)}\n          </ActionButton>\n        </Col>\n        <Col span={12}>\n          <ConvertButton\n            block\n            type=\"primary\"\n            size=\"large\"\n            loading={isConverting}\n            onClick={onConvert}\n            disabled={!canConvert}\n          >\n            Convert\n          </ConvertButton>\n        </Col>\n      </Row>\n      {canConvert && (\n        <Row align=\"middle\" justify=\"center\">\n          <Col>\n            {fromAmount} {fromToken}\n          </Col>\n          <Col offset={1}>\n            <SwapOutlined />\n          </Col>\n          <Col offset={1}>\n            {toAmount} {toToken}\n          </Col>\n        </Row>\n      )}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport ConvertForm from '../components/ConvertForm';\nimport { Row, Col } from 'antd';\n\nconst Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 16px 16px;\n  .borderNone .ant-select-selector {\n    border: none !important;\n  }\n`;\n\nexport default function ConvertPage() {\n  return (\n    <Wrapper style={{ flex: 1, paddingTop: 10 }}>\n      <Row justify=\"center\">\n        <Col>\n          <ConvertForm />\n        </Col>\n      </Row>\n    </Wrapper>\n  );\n}\n","import React, { useContext } from 'react';\nimport { useLocalStorageState } from './utils';\nimport { useInterval } from './useInterval';\nimport { useConnection } from './connection';\nimport { useWallet } from './wallet';\nimport {\n  useAllMarkets,\n  useTokenAccounts,\n  useMarket,\n  useSelectedTokenAccounts,\n} from './markets';\nimport { settleAllFunds } from './send';\nimport { PreferencesContextValues } from './types';\n\nconst PreferencesContext = React.createContext<PreferencesContextValues | null>(\n  null,\n);\n\nexport function PreferencesProvider({ children }) {\n  const [autoSettleEnabled, setAutoSettleEnabled] = useLocalStorageState(\n    'autoSettleEnabled',\n    true,\n  );\n\n  const [tokenAccounts] = useTokenAccounts();\n  const { connected, wallet } = useWallet();\n  const { customMarkets } = useMarket();\n  const [marketList] = useAllMarkets(customMarkets);\n  const connection = useConnection();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n\n  useInterval(() => {\n    const autoSettle = async () => {\n      const markets = (marketList || []).map((m) => m.market);\n      try {\n        console.log('Auto settling');\n        await settleAllFunds({\n          connection,\n          wallet,\n          tokenAccounts: tokenAccounts || [],\n          markets,\n          selectedTokenAccounts,\n        });\n      } catch (e) {\n        console.log('Error auto settling funds: ' + e.message);\n      }\n    };\n\n    connected && wallet?.autoApprove && autoSettleEnabled && autoSettle();\n  }, 10000);\n\n  return (\n    <PreferencesContext.Provider\n      value={{\n        autoSettleEnabled,\n        setAutoSettleEnabled,\n      }}\n    >\n      {children}\n    </PreferencesContext.Provider>\n  );\n}\n\nexport function usePreferences() {\n  const context = useContext(PreferencesContext);\n  if (!context) {\n    throw new Error('Missing preferences context');\n  }\n  return {\n    autoSettleEnabled: context.autoSettleEnabled,\n    setAutoSettleEnabled: context.setAutoSettleEnabled,\n  };\n}\n","import React from 'react';\nimport { Switch, Typography } from 'antd';\nimport { usePreferences } from '../utils/preferences';\n\nconst { Paragraph } = Typography;\n\nexport default function Settings({ autoApprove }) {\n  const { autoSettleEnabled, setAutoSettleEnabled } = usePreferences();\n\n  return (\n    <div>\n      <Switch\n        style={{ marginRight: 10 }}\n        disabled={!autoApprove}\n        checked={autoApprove && autoSettleEnabled}\n        onChange={setAutoSettleEnabled}\n      />{' '}\n      Auto settle\n      {!autoApprove && (\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)', marginTop: 10 }}>\n          To use auto settle, first enable auto approval in your wallet\n        </Paragraph>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { Col, Input, Modal, Row } from 'antd';\nimport { EndpointInfo } from '../utils/types';\n\nexport default function CustomClusterEndpointDialog({\n  visible,\n  testingConnection,\n  onAddCustomEndpoint,\n  onClose,\n}: {\n  visible: boolean;\n  testingConnection: boolean;\n  onAddCustomEndpoint: (info: EndpointInfo) => void;\n  onClose?: () => void;\n}) {\n  const [customEndpoint, setCustomEndpoint] = useState('');\n  const [customEndpointName, setCustomEndpointName] = useState('');\n\n  const onSubmit = () => {\n    const fullEndpoint = 'https://' + customEndpoint;\n    const params = {\n      name: customEndpointName,\n      endpoint: fullEndpoint,\n      custom: true,\n    };\n    onAddCustomEndpoint(params);\n    onDoClose();\n  };\n  const onDoClose = () => {\n    setCustomEndpoint('');\n    setCustomEndpointName('');\n    onClose && onClose();\n  };\n  const canSubmit = customEndpoint !== '' && customEndpointName !== '';\n\n  return (\n    <Modal\n      title={'Add custom endpoint'}\n      visible={visible}\n      onOk={onSubmit}\n      okText={'Add'}\n      onCancel={onDoClose}\n      okButtonProps={{ disabled: !canSubmit, loading: testingConnection }}\n    >\n      <Row style={{ marginBottom: 8 }}>\n        <Col span={24}>\n          <Input\n            placeholder=\"Cluster Name\"\n            value={customEndpointName}\n            onChange={(e) => setCustomEndpointName(e.target.value)}\n          />\n        </Col>\n      </Row>\n      <Row style={{ marginBottom: 8 }}>\n        <Col span={24}>\n          <Input\n            placeholder=\"Cluster Endpoint\"\n            value={customEndpoint}\n            addonBefore={'https://'}\n            onChange={(e) => setCustomEndpoint(e.target.value)}\n          />\n        </Col>\n      </Row>\n    </Modal>\n  );\n}\n","import {\n  InfoCircleOutlined,\n  PlusCircleOutlined,\n  SettingOutlined,\n} from '@ant-design/icons';\nimport { Button, Col, Menu, Popover, Row, Select } from 'antd';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport logo from '../assets/logo.svg';\nimport styled from 'styled-components';\nimport { useWallet, WALLET_PROVIDERS } from '../utils/wallet';\nimport { ENDPOINTS, useConnectionConfig } from '../utils/connection';\nimport Settings from './Settings';\nimport CustomClusterEndpointDialog from './CustomClusterEndpointDialog';\nimport { EndpointInfo } from '../utils/types';\nimport { notify } from '../utils/notifications';\nimport { Connection } from '@solana/web3.js';\nimport WalletConnect from './WalletConnect';\n\nconst Wrapper = styled.div`\n  background-color: #0d1017;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  padding: 0px 30px;\n  flex-wrap: wrap;\n`;\nconst LogoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  color: #2abdd2;\n  font-weight: bold;\n  cursor: pointer;\n  img {\n    height: 30px;\n    margin-right: 8px;\n  }\n`;\n\nconst EXTERNAL_LINKS = {\n  '/learn': 'https://serum-academy.com/en/serum-dex/',\n  '/add-market': 'https://serum-academy.com/en/add-market/',\n  '/wallet-support': 'https://serum-academy.com/en/wallet-support',\n  '/dex-list': 'https://serum-academy.com/en/dex-list/',\n  '/developer-resources': 'https://serum-academy.com/en/developer-resources/',\n  '/explorer': 'https://explorer.solana.com',\n  '/srm-faq': 'https://projectserum.com/srm-faq',\n  '/swap': 'https://swap.projectserum.com'\n};\n\nexport default function TopBar() {\n  const { connected, wallet, providerUrl, setProvider } = useWallet();\n  const {\n    endpoint,\n    endpointInfo,\n    setEndpoint,\n    availableEndpoints,\n    setCustomEndpoints,\n  } = useConnectionConfig();\n  const [addEndpointVisible, setAddEndpointVisible] = useState(false);\n  const [testingConnection, setTestingConnection] = useState(false);\n  const location = useLocation();\n  const history = useHistory();\n\n  const handleClick = useCallback(\n    (e) => {\n      if (!(e.key in EXTERNAL_LINKS)) {\n        history.push(e.key);\n      }\n    },\n    [history],\n  );\n\n  const onAddCustomEndpoint = (info: EndpointInfo) => {\n    const existingEndpoint = availableEndpoints.some(\n      (e) => e.endpoint === info.endpoint,\n    );\n    if (existingEndpoint) {\n      notify({\n        message: `An endpoint with the given url already exists`,\n        type: 'error',\n      });\n      return;\n    }\n\n    const handleError = (e) => {\n      console.log(`Connection to ${info.endpoint} failed: ${e}`);\n      notify({\n        message: `Failed to connect to ${info.endpoint}`,\n        type: 'error',\n      });\n    };\n\n    try {\n      const connection = new Connection(info.endpoint, 'recent');\n      connection\n        .getEpochInfo()\n        .then((result) => {\n          setTestingConnection(true);\n          console.log(`testing connection to ${info.endpoint}`);\n          const newCustomEndpoints = [\n            ...availableEndpoints.filter((e) => e.custom),\n            info,\n          ];\n          setEndpoint(info.endpoint);\n          setCustomEndpoints(newCustomEndpoints);\n        })\n        .catch(handleError);\n    } catch (e) {\n      handleError(e);\n    } finally {\n      setTestingConnection(false);\n    }\n  };\n\n  const endpointInfoCustom = endpointInfo && endpointInfo.custom;\n  useEffect(() => {\n    const handler = () => {\n      if (endpointInfoCustom) {\n        setEndpoint(ENDPOINTS[0].endpoint);\n      }\n    };\n    window.addEventListener('beforeunload', handler);\n    return () => window.removeEventListener('beforeunload', handler);\n  }, [endpointInfoCustom, setEndpoint]);\n\n  return (\n    <>\n      <CustomClusterEndpointDialog\n        visible={addEndpointVisible}\n        testingConnection={testingConnection}\n        onAddCustomEndpoint={onAddCustomEndpoint}\n        onClose={() => setAddEndpointVisible(false)}\n      />\n      <Wrapper>\n        <LogoWrapper>\n          <img src={logo} alt=\"\" onClick={() => history.push('/')} />\n          {'SERUM'}\n        </LogoWrapper>\n        <Menu\n          mode=\"horizontal\"\n          onClick={handleClick}\n          selectedKeys={[location.pathname]}\n          style={{\n            borderBottom: 'none',\n            backgroundColor: 'transparent',\n            display: 'flex',\n            alignItems: 'flex-end',\n            flex: 1,\n          }}\n        >\n          <Menu.Item key=\"/\">TRADE</Menu.Item>\n          <Menu.Item key=\"/swap\">\n            <a\n              href={EXTERNAL_LINKS['/swap']}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              SWAP\n            </a>\n          </Menu.Item>\n          {connected && <Menu.Item key=\"/balances\">BALANCES</Menu.Item>}\n          {connected && <Menu.Item key=\"/orders\">ORDERS</Menu.Item>}\n          {connected && <Menu.Item key=\"/convert\">CONVERT</Menu.Item>}\n          <Menu.Item key=\"/list-new-market\">ADD MARKET</Menu.Item>\n          <Menu.SubMenu\n            title=\"LEARN\"\n            onTitleClick={() => window.open(EXTERNAL_LINKS['/learn'], '_blank')}\n          >\n            <Menu.Item key=\"/add-market\">\n              <a\n                href={EXTERNAL_LINKS['/add-market']}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Adding a market\n              </a>\n            </Menu.Item>\n            <Menu.Item key=\"/wallet-support\">\n              <a\n                href={EXTERNAL_LINKS['/wallet-support']}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Supported wallets\n              </a>\n            </Menu.Item>\n            <Menu.Item key=\"/dex-list\">\n              <a\n                href={EXTERNAL_LINKS['/dex-list']}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                DEX list\n              </a>\n            </Menu.Item>\n            <Menu.Item key=\"/developer-resources\">\n              <a\n                href={EXTERNAL_LINKS['/developer-resources']}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Developer resources\n              </a>\n            </Menu.Item>\n            <Menu.Item key=\"/explorer\">\n              <a\n                href={EXTERNAL_LINKS['/explorer']}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Solana block explorer\n              </a>\n            </Menu.Item>\n            <Menu.Item key=\"/srm-faq\">\n              <a\n                href={EXTERNAL_LINKS['/srm-faq']}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                SRM FAQ\n              </a>\n            </Menu.Item>\n          </Menu.SubMenu>\n        </Menu>\n        <div>\n          <Row\n            align=\"middle\"\n            style={{ paddingLeft: 5, paddingRight: 5 }}\n            gutter={16}\n          >\n            <Col>\n              <PlusCircleOutlined\n                style={{ color: '#2abdd2' }}\n                onClick={() => setAddEndpointVisible(true)}\n              />\n            </Col>\n            <Col>\n              <Popover\n                content={endpoint}\n                placement=\"bottomRight\"\n                title=\"URL\"\n                trigger=\"hover\"\n              >\n                <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n              </Popover>\n            </Col>\n            <Col>\n              <Select\n                onSelect={setEndpoint}\n                value={endpoint}\n                style={{ marginRight: 8, width: '150px' }}\n              >\n                {availableEndpoints.map(({ name, endpoint }) => (\n                  <Select.Option value={endpoint} key={endpoint}>\n                    {name}\n                  </Select.Option>\n                ))}\n              </Select>\n            </Col>\n          </Row>\n        </div>\n        {connected && (\n          <div>\n            <Popover\n              content={<Settings autoApprove={wallet?.autoApprove} />}\n              placement=\"bottomRight\"\n              title=\"Settings\"\n              trigger=\"click\"\n            >\n              <Button style={{ marginRight: 8 }}>\n                <SettingOutlined />\n                Settings\n              </Button>\n            </Popover>\n          </div>\n        )}\n        <div>\n          <Select onSelect={setProvider} value={providerUrl}>\n            {WALLET_PROVIDERS.map(({ name, url }) => (\n              <Select.Option value={url} key={url}>\n                {name}\n              </Select.Option>\n            ))}\n          </Select>\n        </div>\n        <div>\n          <WalletConnect />\n        </div>\n      </Wrapper>\n    </>\n  );\n}\n","export const helpUrls = {\n  customerSupport: 'https://t.me/ProjectSerum',\n  customerSupportZh: 'https://t.me/ProjectSerum_Chinese',\n  contactEmail: 'mailto:contact@projectserum.com',\n  discord: 'https://discord.gg/EDvudv6',\n  telegram: 'https://t.me/ProjectSerum',\n  github: 'https://github.com/project-serum',\n  projectSerum: 'https://projectserum.com/',\n  developerResources: 'https://projectserum.com/developer-resources',\n  solanaBeach: 'https://solanabeach.io',\n};\n","import React from 'react';\nimport { Layout, Row, Col, Grid } from 'antd';\nimport Link from './Link';\nimport { helpUrls } from './HelpUrls';\nconst { Footer } = Layout;\nconst { useBreakpoint } = Grid;\n\nconst footerElements = [\n  {\n    description: 'Serum Developer Resources',\n    link: helpUrls.developerResources,\n  },\n  { description: 'Discord', link: helpUrls.discord },\n  { description: 'Telegram', link: helpUrls.telegram },\n  { description: 'GitHub', link: helpUrls.github },\n  { description: 'Project Serum', link: helpUrls.projectSerum },\n  { description: 'Solana Network', link: helpUrls.solanaBeach },\n];\n\nexport const CustomFooter = () => {\n  const smallScreen = !useBreakpoint().lg;\n\n  return (\n    <Footer\n      style={{\n        height: '45px',\n        paddingBottom: 10,\n        paddingTop: 10,\n      }}\n    >\n      <Row align=\"middle\" gutter={[16, 4]}>\n        {!smallScreen && (\n          <>\n            <Col flex=\"auto\" />\n            {footerElements.map((elem, index) => {\n              return (\n                <Col key={index + ''}>\n                  <Link external to={elem.link}>\n                    {elem.description}\n                  </Link>\n                </Col>\n              );\n            })}\n          </>\n        )}\n        <Col flex=\"auto\">{/*  <DexProgramSelector />*/}</Col>\n      </Row>\n    </Footer>\n  );\n};\n","import { Layout } from 'antd';\nimport React from 'react';\nimport TopBar from './TopBar';\nimport { CustomFooter as Footer } from './Footer';\nconst { Header, Content } = Layout;\n\nexport default function BasicLayout({ children }) {\n  return (\n    <React.Fragment>\n      <Layout\n        style={{ display: 'flex', minHeight: '100vh', flexDirection: 'column' }}\n      >\n        <Header style={{ padding: 0, minHeight: 64, height: 'unset' }}>\n          <TopBar />\n        </Header>\n        <Content style={{ flex: 1 }}>{children}</Content>\n        <Footer />\n      </Layout>\n    </React.Fragment>\n  );\n}\n","import { PublicKey } from '@solana/web3.js';\nimport React, { ReactElement, useMemo, useState } from 'react';\nimport { useAccountInfo } from '../utils/connection';\nimport { isValidPublicKey } from '../utils/utils';\nimport { ValidateStatus } from 'antd/lib/form/FormItem';\nimport { TokenInstructions } from '@project-serum/serum';\nimport { parseTokenMintData } from '../utils/tokens';\nimport { Form, Input, Tooltip } from 'antd';\nimport Link from './Link';\n\nexport interface MintInfo {\n  address: PublicKey;\n  decimals: number;\n}\n\nexport function useMintInput(\n  name,\n  label: string | ReactElement,\n  tooltip?: string | ReactElement,\n): [ReactElement, MintInfo | null] {\n  const [address, setAddress] = useState('');\n  const [accountInfo, loaded] = useAccountInfo(\n    isValidPublicKey(address) ? new PublicKey(address) : null,\n  );\n\n  const { validateStatus, hasFeedback, help, mintInfo } = useMemo(() => {\n    let validateStatus: ValidateStatus = '';\n    let hasFeedback = false;\n    let help: string | null = null;\n    let mintInfo: MintInfo | null = null;\n    if (address) {\n      hasFeedback = true;\n      if (accountInfo) {\n        if (\n          accountInfo.owner.equals(TokenInstructions.TOKEN_PROGRAM_ID) &&\n          accountInfo.data.length === 82\n        ) {\n          let parsed = parseTokenMintData(accountInfo.data);\n          if (parsed.initialized) {\n            validateStatus = 'success';\n            mintInfo = {\n              address: new PublicKey(address),\n              decimals: parsed.decimals,\n            };\n          } else {\n            validateStatus = 'error';\n            help = 'Invalid SPL mint';\n          }\n        } else {\n          validateStatus = 'error';\n          help = 'Invalid SPL mint address';\n        }\n      } else if (isValidPublicKey(address) && !loaded) {\n        validateStatus = 'validating';\n      } else {\n        validateStatus = 'error';\n        help = 'Invalid Solana address';\n      }\n    }\n    return { validateStatus, hasFeedback, help, mintInfo };\n  }, [address, accountInfo, loaded]);\n\n  const input = (\n    <Form.Item\n      label={\n        <Tooltip\n          title={\n            <>\n              {tooltip} You can look up token mint addresses on{' '}\n              <Link external to=\"https://sollet.io\">\n                sollet.io\n              </Link>\n              .\n            </>\n          }\n        >\n          {label}\n        </Tooltip>\n      }\n      name={name}\n      validateStatus={validateStatus}\n      hasFeedback={hasFeedback}\n      help={help}\n    >\n      <Input\n        value={address}\n        onChange={(e) => setAddress(e.target.value.trim())}\n      />\n    </Form.Item>\n  );\n\n  return [input, mintInfo];\n}\n","import React, { useState } from 'react';\nimport { Button, Form, Input, Tooltip, Typography } from 'antd';\nimport { notify } from '../utils/notifications';\nimport { MARKETS } from '@project-serum/serum';\nimport { useConnection } from '../utils/connection';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport styled from 'styled-components';\nimport { useWallet } from '../utils/wallet';\nimport { listMarket } from '../utils/send';\nimport { useMintInput } from '../components/useMintInput';\n\nconst { Text, Title } = Typography;\n\nconst Wrapper = styled.div`\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nexport default function ListNewMarketPage() {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [baseMintInput, baseMintInfo] = useMintInput(\n    'baseMint',\n    <Text>\n      Base Token Mint Address{' '}\n      <Text type=\"secondary\">\n        (e.g. BTC solana address:{' '}\n        {\n          <Text type=\"secondary\" code>\n            9n4nbM75f5Ui33ZbPYXn59EwSgE8CGsHtAeTH5YFeJ9E\n          </Text>\n        }\n        )\n      </Text>\n    </Text>,\n    'The base token is the token being traded. For example, the base token of a BTC/USDT market is BTC.',\n  );\n  const [quoteMintInput, quoteMintInfo] = useMintInput(\n    'quoteMint',\n    <Text>\n      Quote Token Mint Address{' '}\n      <Text type=\"secondary\">\n        (e.g. USDT solana address:{' '}\n        {\n          <Text type=\"secondary\" code>\n            BQcdHdAQW1hczDbBi9hiegXAR7A98Q9jx3X3iBBBDiq4\n          </Text>\n        }\n        )\n      </Text>\n    </Text>,\n    'The quote token is the token used to price trades. For example, the quote token of a BTC/USDT market is USDT.',\n  );\n  const [lotSize, setLotSize] = useState('1');\n  const [tickSize, setTickSize] = useState('0.01');\n  const dexProgramId = MARKETS.find(({ deprecated }) => !deprecated).programId;\n  const [submitting, setSubmitting] = useState(false);\n\n  const [listedMarket, setListedMarket] = useState(null);\n\n  let baseLotSize;\n  let quoteLotSize;\n  if (baseMintInfo && parseFloat(lotSize) > 0) {\n    baseLotSize = Math.round(10 ** baseMintInfo.decimals * parseFloat(lotSize));\n    if (quoteMintInfo && parseFloat(tickSize) > 0) {\n      quoteLotSize = Math.round(\n        parseFloat(lotSize) *\n          10 ** quoteMintInfo.decimals *\n          parseFloat(tickSize),\n      );\n    }\n  }\n\n  const canSubmit =\n    connected &&\n    !!baseMintInfo &&\n    !!quoteMintInfo &&\n    !!baseLotSize &&\n    !!quoteLotSize;\n\n  async function onSubmit() {\n    if (!canSubmit) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const marketAddress = await listMarket({\n        connection,\n        wallet,\n        baseMint: baseMintInfo.address,\n        quoteMint: quoteMintInfo.address,\n        baseLotSize,\n        quoteLotSize,\n        dexProgramId,\n      });\n      setListedMarket(marketAddress);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error listing new market: ' + e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <Wrapper>\n      <FloatingElement>\n        <Title level={4}>List New Market</Title>\n        <Form\n          labelCol={{ span: 24 }}\n          wrapperCol={{ span: 24 }}\n          layout={'vertical'}\n          onFinish={onSubmit}\n        >\n          {baseMintInput}\n          {quoteMintInput}\n          <Form.Item\n            label={\n              <Tooltip title=\"Smallest allowed order size. For a BTC/USDT market, this would be in units of BTC.\">\n                Minimum Order Size{' '}\n                <Text type=\"secondary\">(Lot size in e.g. BTC)</Text>\n              </Tooltip>\n            }\n            name=\"lotSize\"\n            initialValue=\"1\"\n            validateStatus={\n              baseMintInfo && quoteMintInfo\n                ? baseLotSize\n                  ? 'success'\n                  : 'error'\n                : null\n            }\n            hasFeedback={baseMintInfo && quoteMintInfo}\n          >\n            <Input\n              value={lotSize}\n              onChange={(e) => setLotSize(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Tooltip title=\"Smallest amount by which prices can move. For a BTC/USDT market, this would be in units of USDT.\">\n                Tick Size{' '}\n                <Text type=\"secondary\">(Price increment in e.g. USDT)</Text>\n              </Tooltip>\n            }\n            name=\"tickSize\"\n            initialValue=\"0.01\"\n            validateStatus={\n              baseMintInfo && quoteMintInfo\n                ? quoteLotSize\n                  ? 'success'\n                  : 'error'\n                : null\n            }\n            hasFeedback={baseMintInfo && quoteMintInfo}\n          >\n            <Input\n              value={tickSize}\n              onChange={(e) => setTickSize(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <Form.Item label=\" \" colon={false}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              disabled={!canSubmit}\n              loading={submitting}\n            >\n              {connected ? 'Submit' : 'Not connected to wallet'}\n            </Button>\n          </Form.Item>\n        </Form>\n      </FloatingElement>\n      {listedMarket ? (\n        <FloatingElement>\n          <Text>New market address: {listedMarket.toBase58()}</Text>\n        </FloatingElement>\n      ) : null}\n    </Wrapper>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Button, Form, Input, Tooltip, Typography } from 'antd';\nimport { PublicKey } from '@solana/web3.js';\nimport { useConnection } from '../../utils/connection';\nimport FloatingElement from '../../components/layout/FloatingElement';\nimport styled from 'styled-components';\nimport { useWallet } from '../../utils/wallet';\nimport { sendSignedTransaction, signTransaction } from '../../utils/send';\nimport { useMintInput } from '../../components/useMintInput';\nimport { PoolTransactions } from '@project-serum/pool';\nimport { useTokenAccounts } from '../../utils/markets';\nimport BN from 'bn.js';\nimport { notify } from '../../utils/notifications';\nimport Link from '../../components/Link';\n\nconst { Text, Title } = Typography;\n\nconst Wrapper = styled.div`\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nconst AddRemoveTokenButtons = styled.div`\n  margin-top: 16px;\n  margin-bottom: 16px;\n`;\n\nconst DEFAULT_PROGRAM_ID = '8qZoqDMXTfLZz6BYrDfD5Cuy65JKkaNwktb54hj1yaoK';\n\nexport default function NewPoolPage() {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [poolName, setPoolName] = useState('');\n  const [programId, setProgramId] = useState(DEFAULT_PROGRAM_ID);\n  const [initialSupply, setInitialSupply] = useState('1');\n  const [initialAssets, setInitialAssets] = useState<InitialAsset[]>([\n    { valid: false },\n    { valid: false },\n  ]);\n  const [tokenAccounts] = useTokenAccounts();\n  const [submitting, setSubmitting] = useState(false);\n  const [newPoolAddress, setNewPoolAddress] = useState<PublicKey | null>(null);\n\n  const canSubmit =\n    connected &&\n    poolName.trim() &&\n    programId &&\n    parseFloat(initialSupply) > 0 &&\n    initialAssets.every((asset) => asset.valid) &&\n    tokenAccounts;\n\n  async function onSubmit() {\n    if (!canSubmit) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const assets = initialAssets as ValidInitialAsset[];\n      const [\n        poolAddress,\n        transactions,\n      ] = await PoolTransactions.initializeSimplePool({\n        connection,\n        programId: new PublicKey(programId),\n        poolName,\n        poolStateSpace: 1024,\n        poolMintDecimals: 6,\n        initialPoolMintSupply: new BN(\n          Math.round(10 ** 6 * parseFloat(initialSupply)),\n        ),\n        assetMints: assets.map((asset) => asset.mint),\n        initialAssetQuantities: assets.map((asset) => new BN(asset.quantity)),\n        creator: wallet.publicKey,\n        creatorAssets: assets.map((asset) => {\n          const found = tokenAccounts?.find((tokenAccount) =>\n            tokenAccount.effectiveMint.equals(asset.mint),\n          );\n          if (!found) {\n            throw new Error('No token account for ' + asset.mint.toBase58());\n          }\n          return found.pubkey;\n        }),\n      });\n      const signed = await Promise.all(\n        transactions.map(({ transaction, signers }) =>\n          signTransaction({ transaction, wallet, signers, connection }),\n        ),\n      );\n      for (let signedTransaction of signed) {\n        await sendSignedTransaction({ signedTransaction, connection });\n      }\n      setNewPoolAddress(poolAddress);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error creating new pool: ' + e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <Wrapper>\n      <FloatingElement>\n        <Title level={4}>Create new pool</Title>\n        <Form layout=\"vertical\" onFinish={onSubmit}>\n          <Form.Item\n            label={\n              <Tooltip title=\"Public name of the pool.\">Pool Name</Tooltip>\n            }\n            name=\"name\"\n          >\n            <Input\n              value={poolName}\n              onChange={(e) => setPoolName(e.target.value)}\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Tooltip title=\"Address of the pool program.\">\n                Program ID{' '}\n                <Text type=\"secondary\">(e.g. {DEFAULT_PROGRAM_ID})</Text>\n              </Tooltip>\n            }\n            name=\"programId\"\n            initialValue={DEFAULT_PROGRAM_ID}\n          >\n            <Input\n              value={programId}\n              onChange={(e) => setProgramId(e.target.value)}\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Tooltip title=\"Initial number of pool tokens to mint to your account.\">\n                Initial Pool Token Supply\n              </Tooltip>\n            }\n            name=\"initialSupply\"\n            initialValue=\"1\"\n          >\n            <Input\n              value={initialSupply}\n              onChange={(e) => setInitialSupply(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <AddRemoveTokenButtons>\n            <Button\n              onClick={() =>\n                setInitialAssets((assets) => assets.concat({ valid: false }))\n              }\n            >\n              Add token\n            </Button>{' '}\n            <Button\n              onClick={() =>\n                setInitialAssets((assets) => assets.slice(0, assets.length - 1))\n              }\n              disabled={initialAssets.length <= 1}\n            >\n              Remove token\n            </Button>\n          </AddRemoveTokenButtons>\n          {initialAssets.map((asset, i) => (\n            <AssetInput setInitialAssets={setInitialAssets} index={i} key={i} />\n          ))}\n          <Form.Item label=\" \" colon={false}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              disabled={!canSubmit}\n              loading={submitting}\n            >\n              {connected ? 'Submit' : 'Not connected to wallet'}\n            </Button>\n          </Form.Item>\n        </Form>\n      </FloatingElement>\n      {newPoolAddress ? (\n        <FloatingElement>\n          <Text>\n            New pool address:{' '}\n            <Link to={`/pools/${newPoolAddress.toBase58()}`}>\n              {newPoolAddress.toBase58()}\n            </Link>\n          </Text>\n        </FloatingElement>\n      ) : null}\n    </Wrapper>\n  );\n}\n\ntype InitialAsset = { valid: false } | ValidInitialAsset;\ninterface ValidInitialAsset {\n  valid: true;\n  mint: PublicKey;\n  quantity: number;\n}\n\nfunction AssetInput({ setInitialAssets, index }) {\n  const [mintInput, mintInfo] = useMintInput(\n    `mint${index}`,\n    <Text>Token {index + 1} Mint Address</Text>,\n    <>Token mint address for token {index + 1}.</>,\n  );\n  const [quantity, setQuantity] = useState('');\n\n  useEffect(() => {\n    let change: InitialAsset;\n    if (mintInfo && parseFloat(quantity) >= 0) {\n      let parsedQuantity = Math.round(\n        10 ** mintInfo.decimals * parseFloat(quantity),\n      );\n      change = {\n        mint: mintInfo.address,\n        quantity: parsedQuantity,\n        valid: true,\n      };\n    } else {\n      change = { valid: false };\n    }\n    setInitialAssets((assets: InitialAsset[]) =>\n      assets.map((old, i) => (i === index ? change : old)),\n    );\n  }, [setInitialAssets, index, mintInfo, quantity]);\n\n  return (\n    <>\n      {mintInput}\n      <Form.Item\n        label={\n          <Tooltip\n            title={\n              <>\n                Initial quantity of token {index + 1} to deposit into the pool.\n              </>\n            }\n          >\n            Token {index + 1} Initial Quantity\n          </Tooltip>\n        }\n        name={`quantity${index}`}\n        validateStatus={'success'}\n      >\n        <Input\n          value={quantity}\n          onChange={(e) => setQuantity(e.target.value.trim())}\n          type=\"number\"\n          min=\"0\"\n          step=\"any\"\n        />\n      </Form.Item>\n    </>\n  );\n}\n","import { Basket, PoolInfo } from '@project-serum/pool';\nimport React from 'react';\nimport BN from 'bn.js';\nimport { PublicKey } from '@solana/web3.js';\nimport { useAccountInfo } from '../../../utils/connection';\nimport { parseTokenMintData } from '../../../utils/tokens';\nimport { Spin } from 'antd';\n\ninterface BasketDisplayProps {\n  poolInfo: PoolInfo;\n  basket: Basket;\n}\n\nexport default function PoolBasketDisplay({\n  poolInfo,\n  basket,\n}: BasketDisplayProps) {\n  return (\n    <ul>\n      {poolInfo.state.assets.map((asset, index) => (\n        <BasketItem\n          key={index}\n          mint={asset.mint}\n          quantity={basket.quantities[index]}\n        />\n      ))}\n    </ul>\n  );\n}\n\ninterface BasketItemProps {\n  mint: PublicKey;\n  quantity: BN;\n}\n\nfunction BasketItem({ mint, quantity }: BasketItemProps) {\n  const [mintAccountInfo] = useAccountInfo(mint);\n  let quantityDisplay = <Spin size=\"small\" />;\n  if (mintAccountInfo) {\n    const mintInfo = parseTokenMintData(mintAccountInfo.data);\n    quantityDisplay = <>{quantity.toNumber() / 10 ** mintInfo.decimals}</>;\n  }\n\n  return (\n    <li>\n      {quantityDisplay} {mint.toBase58()}\n    </li>\n  );\n}\n","import { getPoolBasket, PoolInfo } from '@project-serum/pool';\nimport React from 'react';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { Spin, Typography } from 'antd';\nimport { MintInfo } from '../../../utils/tokens';\nimport { useAsyncData } from '../../../utils/fetch-loop';\nimport { useConnection } from '../../../utils/connection';\nimport tuple from 'immutable-tuple';\nimport PoolBasketDisplay from './PoolBasketDisplay';\n\nconst { Text, Paragraph } = Typography;\n\ninterface PoolInfoProps {\n  poolInfo: PoolInfo;\n  mintInfo: MintInfo;\n}\n\nexport default function PoolInfoPanel({ poolInfo, mintInfo }: PoolInfoProps) {\n  const connection = useConnection();\n\n  const [totalBasket] = useAsyncData(\n    () => getPoolBasket(connection, poolInfo, { redeem: mintInfo.supply }),\n    tuple(\n      getPoolBasket,\n      connection,\n      poolInfo.address.toBase58(),\n      'total',\n      mintInfo.supply.toString(),\n    ),\n  );\n\n  return (\n    <FloatingElement stretchVertical>\n      <Paragraph>Name: {poolInfo.state.name}</Paragraph>\n      <Paragraph>\n        Address: <Text copyable>{poolInfo.address.toBase58()}</Text>\n      </Paragraph>\n      <Paragraph>\n        Pool token mint address:{' '}\n        <Text copyable>{poolInfo.state.poolTokenMint.toBase58()}</Text>\n      </Paragraph>\n      <Paragraph>\n        Total supply: {mintInfo.supply.toNumber() / 10 ** mintInfo.decimals}\n      </Paragraph>\n      <Text>Total assets:</Text>\n      <div>\n        {!totalBasket ? (\n          <Spin />\n        ) : (\n          <PoolBasketDisplay poolInfo={poolInfo} basket={totalBasket} />\n        )}\n      </div>\n    </FloatingElement>\n  );\n}\n","import { getPoolBasket, PoolInfo, PoolTransactions } from '@project-serum/pool';\nimport React, { useMemo, useState } from 'react';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { Button, Input, Spin, Tabs, Typography } from 'antd';\nimport { MintInfo } from '../../../utils/tokens';\nimport { useAsyncData } from '../../../utils/fetch-loop';\nimport { useConnection } from '../../../utils/connection';\nimport { PublicKey } from '@solana/web3.js';\nimport tuple from 'immutable-tuple';\nimport PoolBasketDisplay from './PoolBasketDisplay';\nimport BN from 'bn.js';\nimport { notify } from '../../../utils/notifications';\nimport { useWallet } from '../../../utils/wallet';\nimport { useTokenAccounts } from '../../../utils/markets';\nimport { sendTransaction } from '../../../utils/send';\n\nconst { Text } = Typography;\nconst { TabPane } = Tabs;\n\ninterface PoolCreateRedeemPanel {\n  poolInfo: PoolInfo;\n  mintInfo: MintInfo;\n}\n\nexport default function PoolCreateRedeemPanel({\n  poolInfo,\n  mintInfo,\n}: PoolCreateRedeemPanel) {\n  return (\n    <FloatingElement stretchVertical>\n      <Tabs>\n        <TabPane tab=\"Create\" key=\"create\">\n          <CreateRedeemTab\n            poolInfo={poolInfo}\n            mintInfo={mintInfo}\n            tab=\"create\"\n          />\n        </TabPane>\n        <TabPane tab=\"Redeem\" key=\"redeem\">\n          <CreateRedeemTab\n            poolInfo={poolInfo}\n            mintInfo={mintInfo}\n            tab=\"redeem\"\n          />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\ninterface CreateRedeemInnerPanel {\n  poolInfo: PoolInfo;\n  mintInfo: MintInfo;\n  tab: string;\n}\n\nfunction CreateRedeemTab({ poolInfo, mintInfo, tab }: CreateRedeemInnerPanel) {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [quantity, setQuantity] = useState('');\n  const [tokenAccounts] = useTokenAccounts();\n  const [submitting, setSubmitting] = useState(false);\n\n  const action = useMemo(() => {\n    const parsedQuantity = Math.round(\n      parseFloat(quantity) * 10 ** mintInfo.decimals,\n    );\n    if (parsedQuantity > 0) {\n      if (tab === 'create') {\n        return { create: new BN(parsedQuantity) };\n      } else {\n        return { redeem: new BN(parsedQuantity) };\n      }\n    }\n    return null;\n  }, [mintInfo.decimals, quantity, tab]);\n\n  const [basket, basketLoaded] = useAsyncData(\n    async () =>\n      action ? await getPoolBasket(connection, poolInfo, action) : null,\n    tuple(getPoolBasket, connection, poolInfo.address.toBase58(), action),\n  );\n\n  function findTokenAccount(mint: PublicKey): PublicKey {\n    const account = tokenAccounts?.find((account) =>\n      account.effectiveMint.equals(mint),\n    );\n    if (account) {\n      return account.pubkey;\n    }\n    throw new Error('No token account for ' + mint.toBase58());\n  }\n\n  const canSubmit = connected && action && basket;\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    if (!action || !basket || !connected || !canSubmit) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const { transaction, signers } = PoolTransactions.execute(\n        poolInfo,\n        action,\n        {\n          owner: wallet.publicKey,\n          poolTokenAccount: findTokenAccount(poolInfo.state.poolTokenMint),\n          assetAccounts: poolInfo.state.assets.map((asset) =>\n            findTokenAccount(asset.mint),\n          ),\n        },\n        basket,\n      );\n      await sendTransaction({ connection, wallet, transaction, signers });\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message:\n          'Error ' +\n          (tab === 'create' ? 'creating' : 'redeeming') +\n          ' pool tokens: ' +\n          e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Input\n        addonBefore={<>Quantity</>}\n        value={quantity}\n        onChange={(e) => setQuantity(e.target.value.trim())}\n        style={{ marginBottom: 24 }}\n      />\n      <div>\n        {!basket ? (\n          basketLoaded ? null : (\n            <Spin />\n          )\n        ) : (\n          <>\n            <Text>{tab === 'create' ? 'Cost' : 'Proceeds'}: </Text>\n            <Text type=\"secondary\">(indicative only)</Text>\n            <PoolBasketDisplay poolInfo={poolInfo} basket={basket} />\n          </>\n        )}\n      </div>\n      <Button\n        htmlType=\"submit\"\n        type=\"primary\"\n        disabled={!canSubmit || submitting}\n      >\n        {!connected ? 'Wallet not connected' : 'Submit'}\n      </Button>\n    </form>\n  );\n}\n","import { PoolInfo } from '@project-serum/pool';\nimport React from 'react';\nimport { PublicKey } from '@solana/web3.js';\nimport { useAccountInfo } from '../../../utils/connection';\nimport {\n  parseTokenAccountData,\n  parseTokenMintData,\n} from '../../../utils/tokens';\nimport { Spin, Tabs } from 'antd';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { useTokenAccounts } from '../../../utils/markets';\n\nconst { TabPane } = Tabs;\n\nexport default function PoolBalancesPanel({\n  poolInfo,\n}: {\n  poolInfo: PoolInfo;\n}) {\n  return (\n    <FloatingElement>\n      <Tabs>\n        <TabPane tab=\"Wallet Balances\" key=\"wallet\">\n          <WalletBalancesTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Pool Balances\" key=\"pool\">\n          <PoolBalancesTab poolInfo={poolInfo} />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\nfunction WalletBalancesTab({ poolInfo }: { poolInfo: PoolInfo }) {\n  const [tokenAccounts] = useTokenAccounts();\n  return (\n    <ul>\n      {[\n        poolInfo.state.poolTokenMint,\n        ...poolInfo.state.assets.map((asset) => asset.mint),\n      ].map((mint, index) => {\n        const tokenAccount = tokenAccounts?.find((account) =>\n          account.effectiveMint.equals(mint),\n        );\n        if (!tokenAccount) {\n          return null;\n        }\n        return (\n          <BalanceItem\n            key={index}\n            mint={mint}\n            publicKey={tokenAccount.pubkey}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction PoolBalancesTab({ poolInfo }: { poolInfo: PoolInfo }) {\n  return (\n    <ul>\n      {poolInfo.state.assets.map((asset, index) => {\n        return (\n          <BalanceItem\n            key={index}\n            mint={asset.mint}\n            publicKey={asset.vaultAddress}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\ninterface BalanceItemProps {\n  mint: PublicKey;\n  publicKey: PublicKey;\n}\n\nfunction BalanceItem({ mint, publicKey }: BalanceItemProps) {\n  const [mintAccountInfo] = useAccountInfo(mint);\n  const [balanceAccountInfo] = useAccountInfo(publicKey);\n  let quantityDisplay = <Spin size=\"small\" />;\n  if (mintAccountInfo && balanceAccountInfo) {\n    const mintInfo = parseTokenMintData(mintAccountInfo.data);\n    const accountInfo = parseTokenAccountData(balanceAccountInfo.data);\n    quantityDisplay = <>{accountInfo.amount / 10 ** mintInfo.decimals}</>;\n  }\n\n  return (\n    <li>\n      {quantityDisplay} {mint.toBase58()} {publicKey.toBase58()}\n    </li>\n  );\n}\n","import React, { useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Col, PageHeader, Row, Spin, Typography } from 'antd';\nimport { PublicKey } from '@solana/web3.js';\nimport { useAccountInfo } from '../../../utils/connection';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { decodePoolState, PoolInfo } from '@project-serum/pool';\nimport PoolInfoPanel from './PoolInfoPanel';\nimport { parseTokenMintData } from '../../../utils/tokens';\nimport PoolCreateRedeemPanel from './PoolCreateRedeemPanel';\nimport PoolBalancesPanel from './PoolBalancesPanel';\nimport { useHistory } from 'react-router-dom';\n\nconst { Text } = Typography;\n\nexport default function PoolPage() {\n  const { poolAddress } = useParams();\n  const [poolAccountInfo, poolAccountLoaded] = useAccountInfo(\n    isPublicKey(poolAddress) ? new PublicKey(poolAddress) : null,\n  );\n  const history = useHistory();\n\n  const poolInfo: PoolInfo | null = useMemo(() => {\n    if (!poolAccountInfo) {\n      return null;\n    }\n    try {\n      return {\n        address: new PublicKey(poolAddress),\n        state: decodePoolState(poolAccountInfo.data),\n        program: poolAccountInfo.owner,\n      };\n    } catch (e) {\n      return null;\n    }\n  }, [poolAddress, poolAccountInfo]);\n  const [mintAccountInfo, mintAccountInfoLoaded] = useAccountInfo(\n    poolInfo?.state.poolTokenMint,\n  );\n  const mintInfo = useMemo(\n    () => (mintAccountInfo ? parseTokenMintData(mintAccountInfo.data) : null),\n    [mintAccountInfo],\n  );\n\n  if (poolInfo && mintInfo) {\n    return (\n      <>\n        <PageHeader\n          title={<>Pool {poolInfo.address.toBase58()}</>}\n          onBack={() => history.push('/pools')}\n          subTitle={poolInfo.state.name}\n        />\n        <Row>\n          <Col xs={24} lg={12}>\n            <PoolInfoPanel poolInfo={poolInfo} mintInfo={mintInfo} />\n          </Col>\n          <Col xs={24} lg={12}>\n            <PoolCreateRedeemPanel poolInfo={poolInfo} mintInfo={mintInfo} />\n          </Col>\n          <Col xs={24}>\n            <PoolBalancesPanel poolInfo={poolInfo} />\n          </Col>\n        </Row>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <PageHeader\n        title={<>Pool {poolAddress}</>}\n        onBack={() => history.push('/pools')}\n      />\n      <FloatingElement>\n        {!poolAccountLoaded || !mintAccountInfoLoaded ? (\n          <Spin />\n        ) : (\n          <Text>Invalid pool</Text>\n        )}\n      </FloatingElement>\n    </>\n  );\n}\n\nfunction isPublicKey(address) {\n  try {\n    new PublicKey(address);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n","import styled from 'styled-components';\nimport FloatingElement from '../../components/layout/FloatingElement';\nimport React, { useState } from 'react';\nimport { Button, Input, Typography } from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport Link from '../../components/Link';\n\nconst { Title } = Typography;\n\nconst Wrapper = styled.div`\n  max-width: 700px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  margin-top: 16px;\n  margin-bottom: 48px;\n`;\n\nexport default function PoolListPage() {\n  const [poolAddress, setPoolAddress] = useState('');\n  const history = useHistory();\n\n  function onSubmit(e) {\n    e.preventDefault();\n    history.push(`/pools/${poolAddress}`);\n  }\n  return (\n    <Wrapper>\n      <FloatingElement>\n        <Title level={3}>Pools</Title>\n        <Form onSubmit={onSubmit}>\n          <Input\n            value={poolAddress}\n            onChange={(e) => setPoolAddress(e.target.value.trim())}\n            placeholder=\"Pool address\"\n          />\n          <Button type=\"primary\" htmlType=\"submit\">\n            Go\n          </Button>\n        </Form>\n        <Link to=\"/pools/new\">Create new pool</Link>\n      </FloatingElement>\n    </Wrapper>\n  );\n}\n","import { HashRouter, Route, Switch } from 'react-router-dom';\nimport TradePage from './pages/TradePage';\nimport OpenOrdersPage from './pages/OpenOrdersPage';\nimport React from 'react';\nimport BalancesPage from './pages/BalancesPage';\nimport ConvertPage from './pages/ConvertPage';\nimport BasicLayout from './components/BasicLayout';\nimport ListNewMarketPage from './pages/ListNewMarketPage';\nimport NewPoolPage from './pages/pools/NewPoolPage';\nimport PoolPage from './pages/pools/PoolPage';\nimport PoolListPage from './pages/pools/PoolListPage';\n\nexport function Routes() {\n  return (\n    <>\n      <HashRouter basename={'/'}>\n        <BasicLayout>\n          <Switch>\n            <Route exact path=\"/\" component={TradePage} />\n            <Route exact path=\"/orders\" component={OpenOrdersPage} />\n            <Route exact path=\"/balances\" component={BalancesPage} />\n            <Route exact path=\"/convert\" component={ConvertPage} />\n            <Route\n              exact\n              path=\"/list-new-market\"\n              component={ListNewMarketPage}\n            />\n            <Route exact path=\"/pools\">\n              <PoolListPage />\n            </Route>\n            <Route exact path=\"/pools/new\">\n              <NewPoolPage />\n            </Route>\n            <Route exact path=\"/pools/:poolAddress\">\n              <PoolPage />\n            </Route>\n          </Switch>\n        </BasicLayout>\n      </HashRouter>\n    </>\n  );\n}\n","import React, { Suspense } from 'react';\nimport './App.less';\nimport { ConnectionProvider } from './utils/connection';\nimport { MarketProvider } from './utils/markets';\nimport { WalletProvider } from './utils/wallet';\nimport { GlobalStyle } from './global_style';\nimport { Spin } from 'antd';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { Routes } from './routes';\nimport { PreferencesProvider } from './utils/preferences';\n\nexport default function App() {\n  return (\n    <Suspense fallback={() => <Spin size=\"large\" />}>\n      <GlobalStyle />\n      <ErrorBoundary>\n        <ConnectionProvider>\n          <MarketProvider>\n            <WalletProvider>\n              <PreferencesProvider>\n                <Suspense fallback={() => <Spin size=\"large\" />}>\n                  <Routes />\n                </Suspense>\n              </PreferencesProvider>\n            </WalletProvider>\n          </MarketProvider>\n        </ConnectionProvider>\n      </ErrorBoundary>\n    </Suspense>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}