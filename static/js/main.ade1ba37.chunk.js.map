{"version":3,"sources":["utils/markets.tsx","utils/tokens.tsx","assets/logo.svg","utils/notifications.tsx","utils/utils.tsx","utils/connection.tsx","global_style.ts","components/ErrorBoundary.jsx","utils/useInterval.tsx","components/layout/FloatingElement.jsx","components/Orderbook.jsx","utils/usePrevious.tsx","components/layout/DataTable.jsx","components/UserInfoTable/BalancesTable.jsx","components/UserInfoTable/OpenOrderTable.jsx","components/UserInfoTable/FillsTable.jsx","components/UserInfoTable/FeesTable.js","components/UserInfoTable/index.jsx","components/DepositDialog.jsx","components/StandaloneTokenAccountSelect.tsx","components/StandaloneBalancesDisplay.tsx","components/TradeForm.tsx","components/TradesTable.jsx","components/LinkAddress.tsx","components/DeprecatedMarketsInstructions.js","components/CustomMarketDialog.jsx","pages/TradePage.tsx","pages/OpenOrdersPage.jsx","components/UserInfoTable/WalletBalancesTable.jsx","components/UserInfoTable/AccountsTable.jsx","pages/BalancesPage.jsx","utils/preferences.tsx","components/Settings.jsx","components/CustomClusterEndpointDialog.tsx","components/TopBar.tsx","components/HelpUrls.js","components/Footer.jsx","components/BasicLayout.js","pages/ListNewMarketPage.jsx","routes.js","App.js","serviceWorker.js","index.js","utils/wallet.tsx","utils/fetch-loop.tsx","utils/send.tsx","components/Link.js"],"names":["USE_MARKETS","MARKETS","useMarketsList","filter","deprecated","useAllMarkets","customMarkets","connection","useConnection","useState","markets","setMarkets","useEffect","a","getMarketInfos","marketInfo","Market","load","address","programId","market","push","marketName","name","notify","message","description","type","getAllMarkets","useUnmigratedOpenOrdersAccounts","wallet","useWallet","publicKey","console","log","deprecatedOpenOrdersAccounts","deprecatedProgramIds","Array","from","Set","map","toBase58","publicKeyStr","PublicKey","OpenOrders","findForOwner","openOrdersAccounts","concat","openOrders","baseTokenTotal","toNumber","quoteTokenTotal","some","equals","cacheKey","tuple","useAsyncData","refreshInterval","_VERY_SLOW_REFRESH_INTERVAL","accounts","refresh","clearCache","refreshCache","MarketContext","React","createContext","DEFAULT_MARKET","find","getMarketDetails","otherMarket","baseCurrency","baseMintAddress","TOKEN_MINTS","token","baseLabel","quoteCurrency","quoteMintAddress","quoteLabel","MarketProvider","children","useLocalStorageState","marketAddress","setMarketAddress","setCustomMarkets","marketInfos","setMarket","_decoded","ownAddress","then","catch","e","Provider","value","useSelectedTokenAccounts","useMarket","context","useContext","Error","useMarkPrice","markPrice","setMarkPrice","useOrderbook","orderbook","trades","useTrades","bb","bids","length","Number","ba","asks","last","price","sort","b","_useUnfilteredTrades","limit","getUnfilteredTrades","loadFills","useOrderbookAccounts","bidData","useAccountData","askData","bidOrderbook","Orderbook","decode","askOrderbook","depth","getL2","useOpenOrdersAccounts","fast","connected","getOpenOrdersAccounts","findOpenOrdersAccountsForOwner","useSelectedOpenOrdersAccount","useTokenAccounts","getTokenAccountInfo","getSelectedTokenAccountForMint","mint","selectedPubKey","filtered","effectiveMint","pubkey","useSelectedQuoteCurrencyAccount","selectedTokenAccounts","mintAddress","useSelectedBaseCurrencyAccount","useSelectedQuoteCurrencyBalances","quoteCurrencyAccount","useAccountInfo","accountInfo","loaded","TokenInstructions","WRAPPED_SOL_MINT","lamports","quoteSplSizeToNumber","BN","data","slice","useSelectedBaseCurrencyBalances","baseCurrencyAccount","baseSplSizeToNumber","useOpenOrders","openOrdersAccount","filterForOpenOrders","order","eventFlags","maker","trade","side","useFeeDiscountKeys","findFeeDiscountKeys","useFills","fills","fill","useOpenOrdersForAllMarkets","allMarkets","orders","marketData","Promise","all","loadBids","loadAsks","ordersForMarket","openOrdersAddress","useBalances","baseCurrencyBalances","quoteCurrencyBalances","baseExists","baseTokenFree","quoteExists","quoteTokenFree","key","coin","sub","unsettled","useWalletBalancesForAllMarkets","useOpenOrderAccountBalancesForAllMarkets","useUnmigratedDeprecatedMarkets","marketsList","deps","m","useUnmigratedDeprecatedMarketsInner","getMarket","x","toString","openOrdersList","useGetOpenOrdersForDeprecatedMarkets","marketsAndOrders","getOrders","loadOrdersForOwner","flat","refreshOpenOrders","useBalancesForDeprecatedMarkets","openOrderAccountBalances","forEach","inOrdersBase","inOrdersQuote","unsettledBase","unsettledQuote","customMarketsInfo","ACCOUNT_LAYOUT","BufferLayout","MINT_LAYOUT","parseTokenAccountData","owner","amount","parseTokenMintData","decimals","initialized","getOwnedAccountsFilters","memcmp","offset","offsetOf","bytes","dataSize","span","TOKEN_PROGRAM_ID","getOwnedTokenAccounts","filters","_rpcRequest","commitment","resp","error","result","account","executable","bs58","every","filterBytes","ownerAddress","getAccountInfo","splAccounts","parsedSplAccounts","module","exports","txid","placement","external","to","style","color","notification","opacity","backgroundColor","isValidPublicKey","sleep","ms","resolve","setTimeout","percentFormat","Intl","NumberFormat","undefined","minimumFractionDigits","maximumFractionDigits","floorToDecimal","Math","floor","roundToDecimal","round","getDecimalCount","isNaN","split","localStorageListeners","useLocalStorageStringState","defaultState","state","localStorage","getItem","listener","setState","useCallback","newState","removeItem","setItem","JSON","stringify","stringState","setStringState","parse","abbreviateAddress","size","base58","isEqual","obj1","obj2","keys","Object","k","ENDPOINTS","endpoint","custom","clusterApiUrl","accountListenerCount","Map","ConnectionContext","ConnectionProvider","setEndpoint","customEndpoints","setCustomEndpoints","availableEndpoints","useMemo","Connection","sendConnection","id","onAccountChange","Account","removeAccountChangeListener","onSlotChange","removeSlotChangeListener","useSendConnection","useConnectionConfig","endpointInfo","info","has","get","count","previousData","subscriptionId","setCache","set","currentItem","delete","GlobalStyle","createGlobalStyle","Title","Typography","ErrorBoundary","hasError","this","level","props","Component","useInterval","callback","delay","savedCallback","useRef","current","setInterval","clearInterval","Wrapper","styled","div","FloatingElement","SizeTitle","Row","MarkPriceTitle","Line","css","Price","smallScreen","onPrice","onSize","currentOrderbookData","lastOrderbookData","orderbookData","setOrderbookData","getCumulativeOrderbookSide","totalSize","backwards","cumulative","reduce","i","cumulativeSize","sizePercent","reverse","sum","total","index","bidsToDisplay","asksToDisplay","flex","height","overflow","textAlign","OrderbookRow","onPriceClick","onSizeClick","MarkPriceComponent","memo","element","classList","contains","add","remove","clearTimeout","formattedSize","minOrderSize","toFixed","formattedPrice","tickSize","ref","marginBottom","onClick","data-width","data-bgcolor","prevProps","nextProps","previousMarkPrice","usePrevious","markPriceColor","formattedMarkPrice","justify","ArrowUpOutlined","marginRight","ArrowDownOutlined","DataTable","dataSource","columns","emptyLabel","pagination","loading","pageSize","renderEmpty","padding","display","justifyContent","alignItems","BalancesTable","balances","showMarket","hideWalletBalance","onSettleSuccess","settleFunds","title","dataIndex","render","ghost","onSettleFunds","CancelButton","Button","OpenOrderTable","onCancelSuccess","cancelId","setCancelId","orderId","cancelOrder","fontWeight","charAt","toUpperCase","icon","DeleteOutlined","cancel","assign","FillsTable","liquidity","FeesTable","feeTier","row","marginLeft","format","getFeeRates","taker","_","SRM_MINT","MSRM_MINT","marginTop","FeeScheduleTable","balance","Paragraph","TabPane","Tabs","Index","paddingTop","href","defaultActiveKey","tab","supportsSrmFeeDiscounts","OpenOrdersTab","BalancesTab","DepositDialog","coinMint","depositCoin","onClose","baseOrQuote","providerName","providerUrl","visible","onOk","onCancel","Link","RowBox","StandaloneTokenAccountsSelect","selectedValue","setSelectedTokenAccounts","Fragment","align","width","onSelect","newSelectedTokenAccounts","Option","Text","code","shape","CopyOutlined","navigator","clipboard","writeText","Tip","p","ActionButton","StandaloneBalancesDisplay","setBaseOrQuote","tokenAccounts","formattedBalances","currency","borderColor","paddingBottom","block","SellButton","BuyButton","sliderMarks","0","25","50","75","100","TradeForm","setChangeOrderRef","setSide","postOnly","setPostOnly","ioc","setIoc","baseSize","setBaseSize","quoteSize","setQuoteSize","setPrice","submitting","setSubmitting","sizeFraction","setSizeFraction","quoteBalance","baseBalance","sizeDecimalCount","priceDecimalCount","doChangeOrder","onSliderChange","updateSizeFraction","onSetBaseSize","usePrice","rawQuoteSize","rawMaxSize","maxSize","min","parseFloat","newSize","formatted","onSubmit","warn","placeOrder","orderType","flexDirection","Group","onChange","target","buttonStyle","background","addonBefore","suffix","fontSize","step","compact","rawBaseSize","onSetQuoteSize","tipFormatter","marks","checked","disabled","TradesContainer","PublicTrades","minHeight","LinkAddress","LinkOutlined","rel","DeprecatedMarketsInstructions","switchToLiveMarkets","needToCancelOrders","filteredBalances","needToSettleFunds","CustomMarketDialog","onAddCustomMarket","marketId","setMarketId","marketLabel","setMarketLabel","setBaseLabel","setQuoteLabel","loadingMarket","setLoadingMarket","wellFormedMarketId","marketAccountInfo","resetLabels","finally","knownMarket","knownProgram","knownBaseCurrency","knownQuoteCurrency","canSubmit","onDoClose","params","okText","okButtonProps","placeholder","LoadingOutlined","gutter","Select","OptGroup","TradePage","handleDeprecated","setHandleDeprecated","addMarketVisible","setAddMarketVisible","deprecatedMarkets","window","innerHeight","innerWidth","dimensions","setDimensions","document","changeOrderRef","handleResize","addEventListener","removeEventListener","componentProps","onChangeOrderRef","getComponent","customMarket","newCustomMarkets","paddingLeft","paddingRight","MarketSelector","onDeleteCustomMarket","content","trigger","InfoCircleOutlined","PlusCircleOutlined","extractBase","extractQuote","selectedMarket","proposedMarket","showSearch","optionFilterProp","listHeight","filterOption","input","option","toLowerCase","indexOf","label","stopPropagation","nativeEvent","stopImmediatePropagation","DeprecatedMarketsPage","RenderNormal","flexWrap","RenderSmall","RenderSmaller","xs","sm","OpenOrdersPage","WalletBalancesTable","walletBalances","AccountsTable","accountBalances","BalancesPage","loadedWalletBalances","accountBalancesLoaded","PreferencesContext","PreferencesProvider","autoSettleEnabled","setAutoSettleEnabled","marketList","autoSettle","settleAllFunds","autoApprove","Settings","usePreferences","CustomClusterEndpointDialog","testingConnection","onAddCustomEndpoint","customEndpoint","setCustomEndpoint","customEndpointName","setCustomEndpointName","LogoWrapper","EXTERNAL_LINKS","TopBar","setProvider","addEndpointVisible","setAddEndpointVisible","setTestingConnection","location","useLocation","history","useHistory","handleClick","endpointInfoCustom","handler","handleError","getEpochInfo","newCustomEndpoints","src","logo","alt","mode","selectedKeys","pathname","borderBottom","Item","SubMenu","onTitleClick","open","SettingOutlined","WALLET_PROVIDERS","url","disconnect","connect","UserOutlined","helpUrls","Footer","Layout","useBreakpoint","Grid","footerElements","link","CustomFooter","lg","elem","Header","Content","BasicLayout","ListNewMarketPage","baseLotSize","quoteLotSize","useMintInput","baseMintInput","baseMintInfo","quoteMintInput","quoteMintInfo","lotSize","setLotSize","setTickSize","dexProgramId","listedMarket","setListedMarket","listMarket","baseMint","quoteMint","labelCol","wrapperCol","layout","onFinish","initialValue","validateStatus","hasFeedback","trim","colon","htmlType","tooltip","setAddress","help","mintInfo","parsed","Routes","basename","exact","path","component","TradePageContents","OpenOrdersPageContents","BalancesPageContents","App","fallback","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","serviceWorker","ready","registration","unregister","WalletContext","WalletProvider","savedProviderUrl","setProviderUrl","Wallet","setConnected","on","walletPublicKey","keyToDisplay","substring","pageLoadTime","Date","globalCache","FetchLoopListener","fn","refreshIntervalOnError","FetchLoopInternal","timeoutId","listeners","errors","stopped","errored","notifyListeners","waitTime","timeSincePageLoad","visibilityState","hasFocus","random","previousRefreshInterval","assert","refreshIntervalsOnError","globalLoops","loops","addListener","loop","removeListener","values","asyncFn","useReducer","rerender","initializeOnly","createTokenAccountTransaction","mintPublicKey","newAccount","SystemProgram","getMinimumBalanceForRentExemption","fromPubkey","newAccountPubkey","space","transaction","createAccount","initializeAccount","signer","baseCurrencyAccountPubkey","quoteCurrencyAccountPubkey","createAccountTransaction","createAccountSigner","supportsReferralFees","makeSettleFundsTransaction","settleFundsTransaction","settleFundsSigners","signers","mergeTransactions","sendTransaction","sendingMessage","programIds","_programId","getOpenOrdersAccountsForProgramId","openOrdersAccountsForProgramIds","selectedBaseTokenAccount","selectedQuoteTokenAccount","settleTransactions","transactions","t","s","constructor","cancelOrders","makeMatchOrdersTransaction","makeCancelOrderInstruction","formattedMinOrderSize","formattedTickSize","isIncrement","num","abs","payer","makePlaceOrderTransaction","placeOrderTx","getVaultOwnerAndNonce","nonce","createProgramAddress","toBuffer","toArrayLike","Buffer","vaultOwner","iaddn","requestQueue","eventQueue","baseVault","quoteVault","feeRateBps","quoteDustThreshold","vaultSignerNonce","tx1","Transaction","tx2","getLayout","DexInstructions","initializeMarket","signTransaction","signedTransactions","signedTransaction","sendSignedTransaction","getUnixTs","getTime","sentMessage","successMessage","timeout","getRecentBlockhash","recentBlockhash","blockhash","signPartial","rawTransaction","serialize","startTime","sendRawTransaction","skipPreflight","done","awaitTransactionSignatureConfirmation","reject","onSignature","err","getSignatureStatuses","signatureStatuses","confirmations","rest"],"mappings":"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","file":"static/js/main.ade1ba37.chunk.js","sourcesContent":["import {\n  decodeEventQueue,\n  Market,\n  MARKETS,\n  OpenOrders,\n  Orderbook,\n  TOKEN_MINTS,\n  TokenInstructions,\n} from '@project-serum/serum';\nimport {PublicKey} from '@solana/web3.js';\nimport React, {useContext, useEffect, useState} from 'react';\nimport {useLocalStorageState} from './utils';\nimport {refreshCache, useAsyncData} from './fetch-loop';\nimport {useAccountData, useAccountInfo, useConnection} from './connection';\nimport {useWallet} from './wallet';\nimport tuple from 'immutable-tuple';\nimport {notify} from './notifications';\nimport {BN} from 'bn.js';\nimport {getTokenAccountInfo} from './tokens';\nimport {\n  Balances,\n  CustomMarketInfo,\n  DeprecatedOpenOrdersBalances,\n  FullMarketInfo,\n  MarketContextValues,\n  MarketInfo,\n  OrderWithMarket,\n  OrderWithMarketAndMarketName,\n  SelectedTokenAccounts,\n  TokenAccount,\n  Trade,\n} from \"./types\";\n\n// Used in debugging, should be false in production\nconst _IGNORE_DEPRECATED = false;\n\nconst USE_MARKETS: MarketInfo[] = _IGNORE_DEPRECATED\n  ? MARKETS.map((m) => ({ ...m, deprecated: false }))\n  : MARKETS;\n\nexport function useMarketsList() {\n  return USE_MARKETS.filter(({ deprecated }) => !deprecated);\n}\n\nexport function useAllMarkets(customMarkets) {\n  const connection = useConnection();\n  const [markets, setMarkets] = useState<{market: Market; marketName: string; programId: PublicKey;}[]>([]);\n\n  useEffect(() => {\n    const getAllMarkets = async () => {\n      const markets: {market: Market; marketName: string; programId: PublicKey;}[] = [];\n      for (let marketInfo of getMarketInfos(customMarkets)) {\n        try {\n          const market = await Market.load(\n            connection,\n            marketInfo.address,\n            {},\n            marketInfo.programId,\n          );\n          markets.push({\n            market,\n            marketName: marketInfo.name,\n            programId: marketInfo.programId,\n          });\n        } catch (e) {\n          notify({\n            message: 'Error loading all market',\n            description: e.message,\n            type: 'error',\n          });\n        }\n      }\n      setMarkets(markets);\n    };\n\n    getAllMarkets();\n  }, [connection, customMarkets]);\n\n  return markets;\n}\n\nexport function useUnmigratedOpenOrdersAccounts() {\n  const connection = useConnection();\n  const { wallet } = useWallet();\n\n  async function getUnmigratedOpenOrdersAccounts(): Promise<OpenOrders[]> {\n    if (!wallet || !connection || !wallet.publicKey) {\n      return [];\n    }\n    console.log('refreshing useUnmigratedOpenOrdersAccounts');\n    let deprecatedOpenOrdersAccounts: OpenOrders[] = [];\n    const deprecatedProgramIds = Array.from(\n      new Set(\n        USE_MARKETS.filter(\n          ({ deprecated }) => deprecated,\n        ).map(({ programId }) => programId.toBase58()),\n      ),\n    ).map((publicKeyStr) => new PublicKey(publicKeyStr));\n    let programId: PublicKey;\n    for (programId of deprecatedProgramIds) {\n      try {\n        const openOrdersAccounts = await OpenOrders.findForOwner(\n          connection,\n          wallet.publicKey,\n          programId,\n        );\n        deprecatedOpenOrdersAccounts = deprecatedOpenOrdersAccounts.concat(\n          openOrdersAccounts\n            .filter(\n              (openOrders) =>\n                openOrders.baseTokenTotal.toNumber() ||\n                openOrders.quoteTokenTotal.toNumber(),\n            )\n            .filter((openOrders) =>\n              USE_MARKETS.some(\n                (market) =>\n                  market.deprecated && market.address.equals(openOrders.market),\n              ),\n            ),\n        );\n      } catch (e) {\n        console.log(\n          'Error loading deprecated markets',\n          programId?.toBase58(),\n          e.message,\n        );\n      }\n    }\n    // Maybe sort\n    return deprecatedOpenOrdersAccounts;\n  }\n\n  const cacheKey = tuple(\n    'getUnmigratedOpenOrdersAccounts',\n    connection,\n    wallet?.publicKey?.toBase58(),\n  );\n  const [accounts] = useAsyncData(getUnmigratedOpenOrdersAccounts, cacheKey, {\n    refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\n  });\n\n  return {\n    accounts,\n    refresh: (clearCache: boolean) => refreshCache(cacheKey, clearCache),\n  };\n}\n\nconst MarketContext: React.Context<null | MarketContextValues> = React.createContext<null | MarketContextValues>(null);\n\nconst _VERY_SLOW_REFRESH_INTERVAL = 5000 * 1000;\n\n// For things that don't really change\nconst _SLOW_REFRESH_INTERVAL = 5 * 1000;\n\n// For things that change frequently\nconst _FAST_REFRESH_INTERVAL = 1000;\n\nexport const DEFAULT_MARKET = USE_MARKETS.find(\n  ({ name, deprecated }) => name === 'SRM/USDT' && !deprecated,\n);\n\nfunction getMarketDetails(market: Market | undefined | null, customMarkets: CustomMarketInfo[]): FullMarketInfo {\n  if (!market) {\n    return {};\n  }\n  const marketInfos = getMarketInfos(customMarkets);\n  const marketInfo = marketInfos.find((otherMarket) =>\n    otherMarket.address.equals(market.address),\n  );\n  const baseCurrency =\n    (market?.baseMintAddress &&\n      TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\n        ?.name) ||\n    (marketInfo?.baseLabel && `${marketInfo?.baseLabel}*`) ||\n    'UNKNOWN';\n  const quoteCurrency =\n    (market?.quoteMintAddress &&\n      TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\n        ?.name) ||\n    (marketInfo?.quoteLabel && `${marketInfo?.quoteLabel}*`) ||\n    'UNKNOWN';\n\n  return {\n    ...marketInfo,\n    marketName: marketInfo?.name,\n    baseCurrency,\n    quoteCurrency,\n    marketInfo,\n  };\n}\n\nexport function MarketProvider({ children }) {\n  const [marketAddress, setMarketAddress] = useLocalStorageState(\n    'marketAddress',\n    DEFAULT_MARKET?.address.toBase58(),\n  );\n  const [customMarkets, setCustomMarkets] = useLocalStorageState<CustomMarketInfo[]>(\n    'customMarkets',\n    [],\n  );\n\n  const address = marketAddress && new PublicKey(marketAddress);\n  const connection = useConnection();\n  const marketInfos = getMarketInfos(customMarkets);\n  const marketInfo = address && marketInfos.find((market) =>\n    market.address.equals(address),\n  );\n\n  // Replace existing market with a non-deprecated one on first load\n  useEffect(() => {\n    if (marketInfo && marketInfo.deprecated) {\n      console.log('Switching markets from deprecated', marketInfo);\n      if (DEFAULT_MARKET) {\n        setMarketAddress(DEFAULT_MARKET.address.toBase58());\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const [market, setMarket] = useState<Market | null>();\n  useEffect(() => {\n    if (\n      market &&\n      marketInfo &&\n      // @ts-ignore\n      market._decoded.ownAddress?.equals(marketInfo?.address)\n    ) {\n      return;\n    }\n    setMarket(null);\n    if (!marketInfo || !marketInfo.address) {\n      notify({\n        message: 'Error loading market',\n        description: 'Please select a market from the dropdown',\n        type: 'error',\n      });\n      return;\n    }\n    Market.load(connection, marketInfo.address, {}, marketInfo.programId)\n      .then(setMarket)\n      .catch((e) =>\n        notify({\n          message: 'Error loading market',\n          description: e.message,\n          type: 'error',\n        }),\n      );\n    // eslint-disable-next-line\n  }, [connection, marketInfo]);\n\n  return (\n    <MarketContext.Provider\n      value={{\n        market,\n        ...getMarketDetails(market, customMarkets),\n        setMarketAddress,\n        customMarkets,\n        setCustomMarkets,\n      }}\n    >\n      {children}\n    </MarketContext.Provider>\n  );\n}\n\nexport function useSelectedTokenAccounts(): [SelectedTokenAccounts, (newSelectedTokenAccounts: SelectedTokenAccounts) => void] {\n  const [selectedTokenAccounts, setSelectedTokenAccounts] = useLocalStorageState<SelectedTokenAccounts>(\n    'selectedTokenAccounts', {}\n    );\n  return [selectedTokenAccounts, setSelectedTokenAccounts]\n}\n\nexport function useMarket() {\n  const context = useContext(MarketContext);\n  if (!context) {\n    throw new Error('Missing market context')\n  }\n  return context\n}\n\nexport function useMarkPrice() {\n  const [markPrice, setMarkPrice] = useState<null | number>(null);\n\n  const [orderbook] = useOrderbook();\n  const trades = useTrades();\n\n  useEffect(() => {\n    let bb = orderbook?.bids?.length > 0 && Number(orderbook.bids[0][0]);\n    let ba = orderbook?.asks?.length > 0 && Number(orderbook.asks[0][0]);\n    let last = trades && trades.length > 0 && trades[0].price;\n\n    let markPrice =\n      bb && ba\n        ? last\n          ? [bb, ba, last].sort((a, b) => a - b)[1]\n          : (bb + ba) / 2\n        : null;\n\n    setMarkPrice(markPrice);\n  }, [orderbook, trades]);\n\n  return markPrice;\n}\n\nexport function _useUnfilteredTrades(limit = 10000) {\n  const { market } = useMarket();\n  const connection = useConnection();\n  async function getUnfilteredTrades(): Promise<any[] | null> {\n    if (!market || !connection) {\n      return null;\n    }\n    return await market.loadFills(connection, limit);\n  }\n  const [trades] = useAsyncData(\n    getUnfilteredTrades,\n    tuple('getUnfilteredTrades', market, connection),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n  return trades;\n  // NOTE: For now, websocket is too expensive since the event queue is large\n  // and updates very frequently\n\n  // let data = useAccountData(market && market._decoded.eventQueue);\n  // if (!data) {\n  //   return null;\n  // }\n  // const events = decodeEventQueue(data, limit);\n  // return events\n  //   .filter((event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0))\n  //   .map(market.parseFillEvent.bind(market));\n}\n\nexport function useOrderbookAccounts() {\n  const { market } = useMarket();\n  // @ts-ignore\n  let bidData = useAccountData(market && market._decoded.bids);\n  // @ts-ignore\n  let askData = useAccountData(market && market._decoded.asks);\n  return {\n    bidOrderbook: market && bidData ? Orderbook.decode(market, bidData) : null,\n    askOrderbook: market && askData ? Orderbook.decode(market, askData) : null,\n  };\n}\n\nexport function useOrderbook(depth = 20): [{bids: number[][]; asks: number[][];}, boolean] {\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\n  const { market } = useMarket();\n  const bids =\n    !bidOrderbook || !market\n      ? []\n      : bidOrderbook.getL2(depth).map(([price, size]) => [price, size]);\n  const asks =\n    !askOrderbook || !market\n      ? []\n      : askOrderbook.getL2(depth).map(([price, size]) => [price, size]);\n  return [{ bids, asks }, !!bids || !!asks];\n}\n\n// Want the balances table to be fast-updating, dont want open orders to flicker\n// TODO: Update to use websocket\nexport function useOpenOrdersAccounts(fast = false) {\n  const { market } = useMarket();\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getOpenOrdersAccounts() {\n    if (!connected) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    return await market.findOpenOrdersAccountsForOwner(\n      connection,\n      wallet.publicKey,\n    );\n  }\n  return useAsyncData(\n    getOpenOrdersAccounts,\n    tuple('getOpenOrdersAccounts', wallet, market, connected),\n    { refreshInterval: fast ? _FAST_REFRESH_INTERVAL : _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useSelectedOpenOrdersAccount(fast = false) {\n  const [accounts] = useOpenOrdersAccounts(fast);\n  if (!accounts) {\n    return null;\n  }\n  return accounts[0];\n}\n\nexport function useTokenAccounts(): [TokenAccount[] | null | undefined, boolean] {\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getTokenAccounts() {\n    if (!connected) {\n      return null;\n    }\n    return await getTokenAccountInfo(connection, wallet.publicKey);\n  }\n  return useAsyncData(\n    getTokenAccounts,\n    tuple('getTokenAccounts', wallet, connected),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function getSelectedTokenAccountForMint(\n  accounts: TokenAccount[] | undefined | null,\n  mint: PublicKey | undefined,\n  selectedPubKey?: string | PublicKey | null,\n) {\n  if (!accounts || !mint) {\n    return null;\n  }\n  const filtered = accounts.filter(({ effectiveMint, pubkey }) =>\n    mint.equals(effectiveMint) && (!selectedPubKey ||\n    (typeof selectedPubKey === 'string' ? selectedPubKey : selectedPubKey.toBase58()) === pubkey.toBase58())\n  );\n  return filtered && filtered[0];\n}\n\nexport function useSelectedQuoteCurrencyAccount() {\n  const [accounts] = useTokenAccounts();\n  const { market } = useMarket();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n  const mintAddress =  market?.quoteMintAddress;\n  return getSelectedTokenAccountForMint(\n    accounts,\n    mintAddress,\n    mintAddress && selectedTokenAccounts[mintAddress.toBase58()]\n  );\n}\n\nexport function useSelectedBaseCurrencyAccount() {\n  const [accounts] = useTokenAccounts();\n  const { market } = useMarket();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n  const mintAddress =  market?.baseMintAddress;\n  return getSelectedTokenAccountForMint(\n    accounts,\n    mintAddress,\n    mintAddress && selectedTokenAccounts[mintAddress.toBase58()]\n  );\n}\n\n// TODO: Update to use websocket\nexport function useSelectedQuoteCurrencyBalances() {\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const { market } = useMarket();\n  const [accountInfo, loaded] = useAccountInfo(quoteCurrencyAccount?.pubkey);\n  if (!market || !quoteCurrencyAccount || !loaded || !accountInfo) {\n    return null;\n  }\n  if (market.quoteMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\n    return accountInfo?.lamports / 1e9 ?? 0;\n  }\n  return market.quoteSplSizeToNumber(\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\n  );\n}\n\n// TODO: Update to use websocket\nexport function useSelectedBaseCurrencyBalances() {\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const { market } = useMarket();\n  const [accountInfo, loaded] = useAccountInfo(baseCurrencyAccount?.pubkey);\n  if (!market || !baseCurrencyAccount || !loaded || !accountInfo) {\n    return null;\n  }\n  if (market.baseMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\n    return accountInfo?.lamports / 1e9 ?? 0;\n  }\n  return market.baseSplSizeToNumber(\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\n  );\n}\n\nexport function useOpenOrders() {\n  const { market, marketName } = useMarket();\n  const openOrdersAccount = useSelectedOpenOrdersAccount();\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\n  if (!market || !openOrdersAccount || !bidOrderbook || !askOrderbook) {\n    return null;\n  }\n  return market\n    .filterForOpenOrders(bidOrderbook, askOrderbook, [openOrdersAccount])\n    .map((order) => ({ ...order, marketName, market }));\n}\n\nexport function useTrades(limit = 100) {\n  const trades = _useUnfilteredTrades(limit);\n  if (!trades) {\n    return null;\n  }\n  // Until partial fills are each given their own fill, use maker fills\n  return trades\n    .filter(({ eventFlags }) => eventFlags.maker)\n    .map((trade) => ({\n      ...trade,\n      side: trade.side === 'buy' ? 'sell' : 'buy',\n    }));\n}\n\nexport function useFeeDiscountKeys(): [{\n  pubkey: PublicKey;\n  feeTier: number;\n  balance: number;\n  mint: PublicKey;\n}[] | null | undefined, boolean] {\n  const { market } = useMarket();\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getFeeDiscountKeys() {\n    if (!connected) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    return await market.findFeeDiscountKeys(connection, wallet.publicKey);\n  }\n  return useAsyncData(\n    getFeeDiscountKeys,\n    tuple('getFeeDiscountKeys', wallet, market, connected),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useFills(limit = 100) {\n  const { marketName } = useMarket();\n  const fills = _useUnfilteredTrades(limit);\n  const [openOrdersAccounts] = useOpenOrdersAccounts();\n  if (!openOrdersAccounts || openOrdersAccounts.length === 0) {\n    return null;\n  }\n  if (!fills) {\n    return null;\n  }\n  return fills\n    .filter((fill) =>\n      openOrdersAccounts.some((openOrdersAccount) =>\n        fill.openOrders.equals(openOrdersAccount.publicKey),\n      ),\n    )\n    .map((fill) => ({ ...fill, marketName }));\n}\n\n// TODO: Update to use websocket\nexport function useFillsForAllMarkets(limit = 100) {\n  const { connected, wallet } = useWallet();\n\n  const connection = useConnection();\n  // todo: add custom markets\n  const allMarkets = useAllMarkets([]);\n\n  async function getFillsForAllMarkets() {\n    let fills: Trade[] = [];\n    if (!connected) {\n      return fills;\n    }\n\n    let marketData;\n    for (marketData of allMarkets) {\n      const { market, marketName } = marketData;\n      if (!market) {\n        return fills;\n      }\n      const openOrdersAccounts = await market.findOpenOrdersAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n      const openOrdersAccount = openOrdersAccounts && openOrdersAccounts[0];\n      if (!openOrdersAccount) {\n        return fills;\n      }\n      const eventQueueData = await connection.getAccountInfo(\n        market && market._decoded.eventQueue,\n      );\n      let data = eventQueueData?.data;\n      if (!data) {\n        return fills;\n      }\n      const events = decodeEventQueue(data, limit);\n      const fillsForMarket: Trade[] = events\n        .filter(\n          (event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0),\n        )\n        .map(market.parseFillEvent.bind(market));\n      const ownFillsForMarket = fillsForMarket\n        .filter((fill) => fill.openOrders.equals(openOrdersAccount.publicKey))\n        .map((fill) => ({ ...fill, marketName }));\n      fills = fills.concat(ownFillsForMarket);\n    }\n\n    console.log(JSON.stringify(fills));\n    return fills;\n  }\n\n  return useAsyncData(\n    getFillsForAllMarkets,\n    tuple('getFillsForAllMarkets', connected, connection, allMarkets, wallet),\n    { refreshInterval: _FAST_REFRESH_INTERVAL },\n  );\n}\n\n// TODO: Update to use websocket\nexport function useOpenOrdersForAllMarkets() {\n  const { connected, wallet } = useWallet();\n\n  const connection = useConnection();\n  // todo: use custom markets\n  const allMarkets: {market: Market; marketName: string; programId: PublicKey;}[] = useAllMarkets([]);\n\n  async function getOpenOrdersForAllMarkets() {\n    let orders: OrderWithMarket[] = [];\n    if (!connected) {\n      return orders;\n    }\n\n    let marketData: {market: Market; marketName: string; programId: PublicKey;};\n    for (marketData of allMarkets) {\n      const { market, marketName } = marketData;\n      if (!market) {\n        return orders;\n      }\n      const openOrdersAccounts = await market.findOpenOrdersAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n      const openOrdersAccount = openOrdersAccounts && openOrdersAccounts[0];\n      if (!openOrdersAccount) {\n        return orders;\n      }\n      const [bids, asks] = await Promise.all([\n        market.loadBids(connection),\n        market.loadAsks(connection),\n      ]);\n      const ordersForMarket = [...bids, ...asks]\n        .filter((order) => {\n          return order.openOrdersAddress.equals(openOrdersAccount.publicKey);\n        })\n        .map((order) => {\n          return { ...order, marketName };\n        });\n      orders = orders.concat(ordersForMarket);\n    }\n\n    return orders;\n  }\n\n  return useAsyncData(\n    getOpenOrdersForAllMarkets,\n    tuple(\n      'getOpenOrdersForAllMarkets',\n      connected,\n      connection,\n      wallet,\n      allMarkets,\n    ),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useBalances(): Balances[] {\n  const baseCurrencyBalances = useSelectedBaseCurrencyBalances();\n  const quoteCurrencyBalances = useSelectedQuoteCurrencyBalances();\n  const openOrders = useSelectedOpenOrdersAccount(true);\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const baseExists =\n    openOrders && openOrders.baseTokenTotal && openOrders.baseTokenFree;\n  const quoteExists =\n    openOrders && openOrders.quoteTokenTotal && openOrders.quoteTokenFree;\n  if (\n    baseCurrency === 'UNKNOWN' ||\n    quoteCurrency === 'UNKNOWN' ||\n    !baseCurrency ||\n    !quoteCurrency\n  ) {\n    return [];\n  }\n  return [\n    {\n      market,\n      key: `${baseCurrency}${quoteCurrency}${baseCurrency}`,\n      coin: baseCurrency,\n      wallet: baseCurrencyBalances,\n      orders:\n        baseExists && market && openOrders\n          ? market.baseSplSizeToNumber(\n              openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\n            )\n          : null,\n      openOrders,\n      unsettled:\n        baseExists && market && openOrders\n          ? market.baseSplSizeToNumber(openOrders.baseTokenFree)\n          : null,\n    },\n    {\n      market,\n      key: `${quoteCurrency}${baseCurrency}${quoteCurrency}`,\n      coin: quoteCurrency,\n      wallet: quoteCurrencyBalances,\n      openOrders,\n      orders:\n        quoteExists && market && openOrders\n          ? market.quoteSplSizeToNumber(\n              openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\n            )\n          : null,\n      unsettled:\n        quoteExists && market && openOrders\n          ? market.quoteSplSizeToNumber(openOrders.quoteTokenFree)\n          : null,\n    },\n  ];\n}\n\nexport function useWalletBalancesForAllMarkets() {\n  return [[], true]\n  // Note: This is too expensive on validators to poll. Switch over to websockets or cache accounts\n  // const { connected, wallet } = useWallet();\n  //\n  // const connection = useConnection();\n  // // todo: use custom markets\n  // const allMarkets = useAllMarkets([]);\n  //\n  // async function getWalletBalancesForAllMarkets() {\n  //   let balances: Balances[] = [];\n  //   if (!connected) {\n  //     return balances;\n  //   }\n  //\n  //   let marketData: {market: Market; marketName: string; programId: PublicKey;};\n  //   for (marketData of allMarkets) {\n  //     const { market, marketName } = marketData;\n  //     if (!market) {\n  //       return balances;\n  //     }\n  //     const baseCurrency = marketName.includes('/') && marketName.split('/')[0];\n  //     if (baseCurrency && !balances.find((balance) => balance.coin === baseCurrency)) {\n  //       const baseBalance = await getCurrencyBalance(\n  //         market,\n  //         connection,\n  //         wallet,\n  //         true,\n  //       );\n  //       balances.push({\n  //         key: baseCurrency,\n  //         coin: baseCurrency,\n  //         wallet: baseBalance,\n  //       });\n  //     }\n  //     const quoteCurrency =\n  //       marketName.includes('/') && marketName.split('/')[1];\n  //     if (quoteCurrency && !balances.find((balance) => balance.coin === quoteCurrency)) {\n  //       const quoteBalance = await getCurrencyBalance(\n  //         market,\n  //         connection,\n  //         wallet,\n  //         false,\n  //       );\n  //       balances.push({\n  //         key: quoteCurrency,\n  //         coin: quoteCurrency,\n  //         wallet: quoteBalance,\n  //       });\n  //     }\n  //   }\n  //\n  //   return balances;\n  // }\n  //\n  // return useAsyncData(\n  //   getWalletBalancesForAllMarkets,\n  //   tuple(\n  //     'getWalletBalancesForAllMarkets',\n  //     connected,\n  //     connection,\n  //     wallet,\n  //     allMarkets,\n  //   ),\n  //   { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  // );\n}\n\n// async function getCurrencyBalance(market: Market, connection, wallet, base = true) {\n//   const currencyAccounts: { pubkey: PublicKey; account: AccountInfo<Buffer> }[] = base\n//     ? await market.findBaseTokenAccountsForOwner(connection, wallet.publicKey)\n//     : await market.findQuoteTokenAccountsForOwner(connection, wallet.publicKey);\n//   const currencyAccount = currencyAccounts && currencyAccounts[0];\n//   const tokenAccountBalances: RpcResponseAndContext<TokenAmount> = await connection.getTokenAccountBalance(\n//     currencyAccount.pubkey,\n//   );\n//   return tokenAccountBalances?.value?.uiAmount;\n// }\n\nexport function useOpenOrderAccountBalancesForAllMarkets() {\n  return [[], true]\n  // Note: This is too expensive on validators to poll. Switch over to websockets or cache accounts\n  // const { connected, wallet } = useWallet();\n  //\n  // const connection = useConnection();\n  // // todo: use custom markets\n  // const allMarkets = useAllMarkets([]);\n  //\n  // async function getOpenOrderAccountsForAllMarkets() {\n  //   let accounts: OpenOrdersBalances[] = [];\n  //   if (!connected) {\n  //     return accounts;\n  //   }\n  //\n  //   let marketData: {market: Market; marketName: string; programId: PublicKey;};\n  //   for (marketData of allMarkets) {\n  //     const { market, marketName } = marketData;\n  //     if (!market) {\n  //       return accounts;\n  //     }\n  //     const openOrderAccounts = await market.findOpenOrdersAccountsForOwner(\n  //       connection,\n  //       wallet.publicKey,\n  //     );\n  //     if (!openOrderAccounts) {\n  //       continue;\n  //     }\n  //     const baseCurrencyAccounts = await market.findBaseTokenAccountsForOwner(\n  //       connection,\n  //       wallet.publicKey,\n  //     );\n  //     const quoteCurrencyAccounts = await market.findQuoteTokenAccountsForOwner(\n  //       connection,\n  //       wallet.publicKey,\n  //     );\n  //\n  //     const baseCurrency = marketName.includes('/') && marketName.split('/')[0];\n  //     const quoteCurrency =\n  //       marketName.includes('/') && marketName.split('/')[1];\n  //\n  //     const openOrderAccountBalances: OpenOrdersBalances[] = [];\n  //     openOrderAccounts.forEach((openOrdersAccount) => {\n  //       const inOrdersBase =\n  //         openOrdersAccount?.baseTokenTotal &&\n  //         openOrdersAccount?.baseTokenFree &&\n  //         market.baseSplSizeToNumber(\n  //           openOrdersAccount.baseTokenTotal.sub(\n  //             openOrdersAccount.baseTokenFree,\n  //           ),\n  //         );\n  //       const inOrdersQuote =\n  //         openOrdersAccount?.quoteTokenTotal &&\n  //         openOrdersAccount?.quoteTokenFree &&\n  //         market.baseSplSizeToNumber(\n  //           openOrdersAccount.quoteTokenTotal.sub(\n  //             openOrdersAccount.quoteTokenFree,\n  //           ),\n  //         );\n  //       const unsettledBase =\n  //         openOrdersAccount?.baseTokenFree &&\n  //         market.baseSplSizeToNumber(openOrdersAccount.baseTokenFree);\n  //       const unsettledQuote =\n  //         openOrdersAccount?.quoteTokenFree &&\n  //         market.baseSplSizeToNumber(openOrdersAccount.quoteTokenFree);\n  //       openOrderAccountBalances.push({\n  //         market: marketName,\n  //         coin: baseCurrency || '',\n  //         key: baseCurrency || '',\n  //         orders: inOrdersBase,\n  //         unsettled: unsettledBase,\n  //         openOrders: openOrdersAccount,\n  //         baseCurrencyAccount: baseCurrencyAccounts && baseCurrencyAccounts[0],\n  //         quoteCurrencyAccount:\n  //           quoteCurrencyAccounts && quoteCurrencyAccounts[0],\n  //       });\n  //       openOrderAccountBalances.push({\n  //         market: marketName,\n  //         coin: quoteCurrency || '',\n  //         key: quoteCurrency || '',\n  //         orders: inOrdersQuote,\n  //         unsettled: unsettledQuote,\n  //         openOrders: openOrdersAccount,\n  //         baseCurrencyAccount: baseCurrencyAccounts && baseCurrencyAccounts[0],\n  //         quoteCurrencyAccount:\n  //           quoteCurrencyAccounts && quoteCurrencyAccounts[0],\n  //       });\n  //     });\n  //     accounts = accounts.concat(openOrderAccountBalances);\n  //   }\n  //\n  //   return accounts;\n  // }\n  //\n  // return useAsyncData(\n  //   getOpenOrderAccountsForAllMarkets,\n  //   tuple(\n  //     'getOpenOrderAccountsForAllMarkets',\n  //     connected,\n  //     connection,\n  //     wallet,\n  //     allMarkets,\n  //   ),\n  //   { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  // );\n}\n\nexport function useUnmigratedDeprecatedMarkets() {\n  const connection = useConnection();\n  const { accounts } = useUnmigratedOpenOrdersAccounts();\n  const marketsList =\n    accounts &&\n    Array.from(new Set(accounts.map((openOrders) => openOrders.market)));\n  const deps = marketsList && marketsList.map((m) => m.toBase58());\n\n  const useUnmigratedDeprecatedMarketsInner = async () => {\n    if (!marketsList) {\n      return null;\n    }\n    const getMarket = async (address) => {\n      const marketInfo = USE_MARKETS.find((market) =>\n        market.address.equals(address),\n      );\n      if (!marketInfo) {\n        console.log('Failed loading market');\n        notify({\n          message: 'Error loading market',\n          type: 'error',\n        });\n        return null;\n      }\n      try {\n        console.log('Loading market', marketInfo.name);\n        // NOTE: Should this just be cached by (connection, marketInfo.address, marketInfo.programId)?\n        return await Market.load(\n          connection,\n          marketInfo.address,\n          {},\n          marketInfo.programId,\n        );\n      } catch (e) {\n        console.log('Failed loading market', marketInfo.name, e);\n        notify({\n          message: 'Error loading market',\n          description: e.message,\n          type: 'error',\n        });\n        return null;\n      }\n    };\n    return (await Promise.all(marketsList.map(getMarket))).filter((x) => x);\n  };\n  const [markets] = useAsyncData(\n    useUnmigratedDeprecatedMarketsInner,\n    tuple(\n      'useUnmigratedDeprecatedMarketsInner',\n      connection,\n      deps && deps.toString(),\n    ),\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\n  );\n  if (!markets) {\n    return null;\n  }\n  return markets.map((market) => ({\n    market,\n    openOrdersList: accounts?.filter((openOrders) =>\n      market && openOrders.market.equals(market.address),\n    ),\n  }));\n}\n\nexport function useGetOpenOrdersForDeprecatedMarkets(): {\n  openOrders: OrderWithMarketAndMarketName[] | null | undefined;\n  loaded: boolean;\n  refreshOpenOrders: () => void;\n} {\n  const { connected, wallet } = useWallet();\n  const [customMarkets] = useLocalStorageState<CustomMarketInfo[]>('customMarkets', []);\n  const connection = useConnection();\n  const marketsAndOrders = useUnmigratedDeprecatedMarkets();\n  const marketsList =\n    marketsAndOrders && marketsAndOrders.map(({ market }) => market);\n\n  // This isn't quite right: open order balances could change\n  const deps =\n    marketsList && marketsList.filter((market): market is Market => !!market).map((market) => market.address.toBase58());\n\n  async function getOpenOrdersForDeprecatedMarkets() {\n    if (!connected) {\n      return null;\n    }\n    if (!marketsList) {\n      return null;\n    }\n    console.log('refreshing getOpenOrdersForDeprecatedMarkets');\n    const getOrders = async (market: Market | null) => {\n      if (!market) {\n        return null;\n      }\n      const { marketName } = getMarketDetails(market, customMarkets);\n      try {\n        console.log('Fetching open orders for', marketName);\n        // Can do better than this, we have the open orders accounts already\n        return (\n          await market.loadOrdersForOwner(connection, wallet.publicKey)\n        ).map((order) => ({ marketName, market, ...order }));\n      } catch (e) {\n        console.log('Failed loading open orders', market.address.toBase58(), e);\n        notify({\n          message: `Error loading open orders for deprecated ${marketName}`,\n          description: e.message,\n          type: 'error',\n        });\n        return null;\n      }\n    };\n    return (await Promise.all(marketsList.map(getOrders))).filter(\n        (x): x is OrderWithMarketAndMarketName[] => !!x\n    ).flat();\n  }\n\n  const cacheKey = tuple(\n    'getOpenOrdersForDeprecatedMarkets',\n    connected,\n    connection,\n    wallet,\n    deps && deps.toString(),\n  );\n  const [openOrders, loaded] = useAsyncData(\n    getOpenOrdersForDeprecatedMarkets,\n    cacheKey,\n    {\n      refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\n    },\n  );\n  console.log('openOrders', openOrders);\n  return {\n    openOrders,\n    loaded,\n    refreshOpenOrders: () => refreshCache(cacheKey),\n  };\n}\n\nexport function useBalancesForDeprecatedMarkets() {\n  const markets = useUnmigratedDeprecatedMarkets();\n  const [customMarkets] = useLocalStorageState<CustomMarketInfo[]>('customMarkets', []);\n  if (!markets) {\n    return null;\n  }\n\n  const openOrderAccountBalances: DeprecatedOpenOrdersBalances[] = [];\n  markets.forEach(({ market, openOrdersList }) => {\n    const { baseCurrency, quoteCurrency, marketName } = getMarketDetails(\n      market,\n      customMarkets,\n    );\n    if (!baseCurrency || !quoteCurrency || !market) {\n      return;\n    }\n    (openOrdersList || []).forEach((openOrders) => {\n      const inOrdersBase =\n        openOrders?.baseTokenTotal &&\n        openOrders?.baseTokenFree &&\n        market.baseSplSizeToNumber(\n          openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\n        );\n      const inOrdersQuote =\n        openOrders?.quoteTokenTotal &&\n        openOrders?.quoteTokenFree &&\n        market.baseSplSizeToNumber(\n          openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\n        );\n      const unsettledBase =\n        openOrders?.baseTokenFree &&\n        market.baseSplSizeToNumber(openOrders.baseTokenFree);\n      const unsettledQuote =\n        openOrders?.quoteTokenFree &&\n        market.baseSplSizeToNumber(openOrders.quoteTokenFree);\n\n      openOrderAccountBalances.push({\n        marketName,\n        market,\n        coin: baseCurrency,\n        key: `${marketName}${baseCurrency}`,\n        orders: inOrdersBase,\n        unsettled: unsettledBase,\n        openOrders,\n      });\n      openOrderAccountBalances.push({\n        marketName,\n        market,\n        coin: quoteCurrency,\n        key: `${marketName}${quoteCurrency}`,\n        orders: inOrdersQuote,\n        unsettled: unsettledQuote,\n        openOrders,\n      });\n    });\n  });\n  return openOrderAccountBalances;\n}\n\nexport function getMarketInfos(customMarkets: CustomMarketInfo[]): MarketInfo[] {\n  const customMarketsInfo = customMarkets.map((m) => ({\n    ...m,\n    address: new PublicKey(m.address),\n    programId: new PublicKey(m.programId),\n    deprecated: false,\n  }));\n\n  return [...customMarketsInfo, ...USE_MARKETS];\n}\n","import * as BufferLayout from 'buffer-layout';\nimport bs58 from 'bs58';\nimport {AccountInfo, Connection, PublicKey} from '@solana/web3.js';\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\nimport {TokenAccount} from \"./types\";\n\nexport const ACCOUNT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(32, 'mint'),\n  BufferLayout.blob(32, 'owner'),\n  BufferLayout.nu64('amount'),\n  BufferLayout.blob(93),\n]);\n\nexport const MINT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(44),\n  BufferLayout.u8('decimals'),\n  BufferLayout.u8('initialized'),\n  BufferLayout.blob(36),\n]);\n\nexport function parseTokenAccountData(data) {\n  let { mint, owner, amount } = ACCOUNT_LAYOUT.decode(data);\n  return {\n    mint: new PublicKey(mint),\n    owner: new PublicKey(owner),\n    amount,\n  };\n}\n\nexport function parseTokenMintData(data) {\n  let { decimals, initialized } = MINT_LAYOUT.decode(data);\n  return { decimals, initialized };\n}\n\nexport function getOwnedAccountsFilters(publicKey: PublicKey) {\n  return [\n    {\n      memcmp: {\n        offset: ACCOUNT_LAYOUT.offsetOf('owner'),\n        bytes: publicKey.toBase58(),\n      },\n    },\n    {\n      dataSize: ACCOUNT_LAYOUT.span,\n    },\n  ];\n}\n\nexport const TOKEN_PROGRAM_ID = new PublicKey(\n  'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n);\n\nexport async function getOwnedTokenAccounts(\n    connection: Connection, publicKey: PublicKey\n): Promise<Array<{publicKey: PublicKey, accountInfo: AccountInfo<Buffer>}>> {\n  let filters = getOwnedAccountsFilters(publicKey);\n  // @ts-ignore\n  let resp = await connection._rpcRequest('getProgramAccounts', [\n    TOKEN_PROGRAM_ID.toBase58(),\n    {\n      commitment: connection.commitment,\n      filters,\n    },\n  ]);\n  if (resp.error) {\n    throw new Error(\n      'failed to get token accounts owned by ' +\n        publicKey.toBase58() +\n        ': ' +\n        resp.error.message,\n    );\n  }\n  return resp.result\n    .map(({ pubkey, account: { data, executable, owner, lamports } }) => ({\n      publicKey: new PublicKey(pubkey),\n      accountInfo: {\n        data: bs58.decode(data),\n        executable,\n        owner: new PublicKey(owner),\n        lamports,\n      },\n    }))\n    .filter(({ accountInfo }) => {\n      // TODO: remove this check once mainnet is updated\n      return filters.every((filter) => {\n        if (filter.dataSize) {\n          return accountInfo.data.length === filter.dataSize;\n        } else if (filter.memcmp) {\n          let filterBytes = bs58.decode(filter.memcmp.bytes);\n          return accountInfo.data\n            .slice(\n              filter.memcmp.offset,\n              filter.memcmp.offset + filterBytes.length,\n            )\n            .equals(filterBytes);\n        }\n        return false;\n      });\n    });\n}\n\nexport async function getTokenAccountInfo(connection: Connection, ownerAddress: PublicKey) {\n  let [splAccounts, account] = await Promise.all([\n    getOwnedTokenAccounts(connection, ownerAddress),\n    connection.getAccountInfo(ownerAddress),\n  ]);\n  const parsedSplAccounts: TokenAccount[] = splAccounts.map(({ publicKey, accountInfo }) => {\n    return {\n      pubkey: publicKey,\n      account: accountInfo,\n      effectiveMint: parseTokenAccountData(accountInfo.data).mint,\n    };\n  });\n  return parsedSplAccounts.concat({\n    pubkey: ownerAddress,\n    account,\n    effectiveMint: WRAPPED_SOL_MINT,\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/logo.49174c73.svg\";","import React from 'react';\nimport { notification } from 'antd';\nimport Link from '../components/Link';\n\nexport function notify({\n  message,\n  description,\n  txid,\n  type = 'info',\n  placement = 'bottomLeft',\n}: {\n  message: string;\n  description?: string | JSX.Element;\n  txid?: string;\n  type?: string;\n  placement?: string;\n}) {\n  if (txid) {\n    description = (\n      <Link\n        external\n        to={'https://explorer.solana.com/tx/' + txid}\n        style={{ color: '#0000ff' }}\n      >\n        View transaction {txid.slice(0, 8)}...{txid.slice(txid.length - 8)}\n      </Link>\n    );\n  }\n  notification[type]({\n    message: <span style={{ color: 'black' }}>{message}</span>,\n    description: (\n      <span style={{ color: 'black', opacity: 0.5 }}>{description}</span>\n    ),\n    placement,\n    style: {\n      backgroundColor: 'white',\n    },\n  });\n}\n","import { useCallback, useEffect, useState } from 'react';\nimport { PublicKey } from '@solana/web3.js';\n\nexport function isValidPublicKey(key) {\n  if (!key) {\n    return false;\n  }\n  try {\n    new PublicKey(key);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport async function sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport const percentFormat = new Intl.NumberFormat(undefined, {\n  style: 'percent',\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n});\n\nexport function floorToDecimal(value: number, decimals: number | undefined | null) {\n  return decimals ? Math.floor(value * 10 ** decimals) / 10 ** decimals : value;\n}\n\nexport function roundToDecimal(value: number, decimals: number | undefined | null) {\n  return decimals ? Math.round(value * 10 ** decimals) / 10 ** decimals : value;\n}\n\nexport function getDecimalCount(value): number {\n  if (!isNaN(value) && Math.floor(value) !== value)\n    return value.toString().split('.')[1].length || 0;\n  return 0;\n}\n\nconst localStorageListeners = {};\n\nexport function useLocalStorageStringState(\n  key: string,\n  defaultState: string | null = null,\n): [string | null, (newState: string | null) => void] {\n  const state = localStorage.getItem(key) || defaultState;\n\n  const [, notify] = useState(key + '\\n' + state);\n\n  useEffect(() => {\n    if (!localStorageListeners[key]) {\n      localStorageListeners[key] = [];\n    }\n    localStorageListeners[key].push(notify);\n    return () => {\n      localStorageListeners[key] = localStorageListeners[key].filter(\n        listener => listener !== notify,\n      );\n      if (localStorageListeners[key].length === 0) {\n        delete localStorageListeners[key];\n      }\n    };\n  }, [key]);\n\n  const setState = useCallback<(newState: string | null) => void>(\n    newState => {\n      const changed = state !== newState;\n      if (!changed) {\n        return;\n      }\n\n      if (newState === null) {\n        localStorage.removeItem(key);\n      } else {\n        localStorage.setItem(key, newState);\n      }\n      localStorageListeners[key].forEach(listener => listener(key + '\\n' + newState));\n    },\n    [state, key],\n  );\n\n  return [state, setState];\n}\n\nexport function useLocalStorageState<T = any>(key: string, defaultState: T | null = null): [T, (newState: T) => void] {\n  let [stringState, setStringState] = useLocalStorageStringState(key, JSON.stringify(defaultState));\n  return [stringState && JSON.parse(stringState), newState => setStringState(JSON.stringify(newState))];\n}\n\nexport function useEffectAfterTimeout(effect, timeout) {\n  useEffect(() => {\n    const handle = setTimeout(effect, timeout);\n    return () => clearTimeout(handle);\n  });\n}\n\nexport function useListener(emitter, eventName) {\n  const [, forceUpdate] = useState(0);\n  useEffect(() => {\n    const listener = () => forceUpdate((i) => i + 1);\n    emitter.on(eventName, listener);\n    return () => emitter.removeListener(eventName, listener);\n  }, [emitter, eventName]);\n}\n\nexport function abbreviateAddress(address, size = 4) {\n  const base58 = address.toBase58();\n  return base58.slice(0, size) + '…' + base58.slice(-size);\n}\n\nexport function isEqual(obj1, obj2, keys) {\n  if (!keys && Object.keys(obj1).length !== Object.keys(obj2).length) {\n    return false;\n  }\n  keys = keys || Object.keys(obj1);\n  for (const k of keys) {\n    if (obj1[k] !== obj2[k]) {\n      // shallow comparison\n      return false;\n    }\n  }\n  return true;\n}\n","import {useLocalStorageState} from './utils';\nimport {Account, AccountInfo, clusterApiUrl, Connection, PublicKey} from '@solana/web3.js';\nimport React, {useContext, useEffect, useMemo} from 'react';\nimport {setCache, useAsyncData} from './fetch-loop';\nimport tuple from 'immutable-tuple';\nimport {ConnectionContextValues, EndpointInfo} from \"./types\";\n\nexport const ENDPOINTS: EndpointInfo[] = [\n  {\n    name: 'mainnet-beta',\n    endpoint: 'https://solana-api.projectserum.com',\n    custom: false\n  },\n  { name: 'testnet', endpoint: clusterApiUrl('testnet'), custom: false },\n  { name: 'devnet', endpoint: clusterApiUrl('devnet'), custom: false },\n  { name: 'localnet', endpoint: 'http://127.0.0.1:8899', custom: false },\n];\n\nconst accountListenerCount = new Map();\n\nconst ConnectionContext: React.Context<null | ConnectionContextValues> = React.createContext<null | ConnectionContextValues>(null);\n\nexport function ConnectionProvider({ children }) {\n  const [endpoint, setEndpoint] = useLocalStorageState<string>(\n    'connectionEndpts',\n    ENDPOINTS[0].endpoint,\n  );\n  const [customEndpoints, setCustomEndpoints] = useLocalStorageState<EndpointInfo[]>(\n    'customConnectionEndpoints',\n    []\n  )\n  const availableEndpoints = ENDPOINTS.concat(customEndpoints);\n\n  const connection = useMemo(() => new Connection(endpoint, 'recent'), [\n    endpoint,\n  ]);\n  const sendConnection = useMemo(() => new Connection(endpoint, 'recent'), [\n    endpoint,\n  ]);\n\n  // The websocket library solana/web3.js uses closes its websocket connection when the subscription list\n  // is empty after opening its first time, preventing subsequent subscriptions from receiving responses.\n  // This is a hack to prevent the list from every getting empty\n  useEffect(() => {\n    const id = connection.onAccountChange(new Account().publicKey, () => {});\n    return () => {connection.removeAccountChangeListener(id)};\n  }, [connection]);\n\n  useEffect(() => {\n    const id = connection.onSlotChange(() => null);\n    return () => {connection.removeSlotChangeListener(id)};\n  }, [connection]);\n\n  useEffect(() => {\n    const id = sendConnection.onAccountChange(\n      new Account().publicKey,\n      () => {},\n    );\n    return () => {sendConnection.removeAccountChangeListener(id)};\n  }, [sendConnection]);\n\n  useEffect(() => {\n    const id = sendConnection.onSlotChange(() => null);\n    return () => {sendConnection.removeSlotChangeListener(id)};\n  }, [sendConnection]);\n\n  return (\n    <ConnectionContext.Provider\n      value={{ endpoint, setEndpoint, connection, sendConnection, availableEndpoints, setCustomEndpoints }}\n    >\n      {children}\n    </ConnectionContext.Provider>\n  );\n}\n\nexport function useConnection() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context')\n  }\n  return context.connection;\n}\n\nexport function useSendConnection() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context')\n  }\n  return context.sendConnection;\n}\n\nexport function useConnectionConfig() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context')\n  }\n  return {\n    endpoint: context.endpoint,\n    endpointInfo: context.availableEndpoints.find(info => info.endpoint === context.endpoint),\n    setEndpoint: context.setEndpoint,\n    availableEndpoints: context.availableEndpoints,\n    setCustomEndpoints: context.setCustomEndpoints,\n  };\n}\n\nexport function useAccountInfo(publicKey: PublicKey | undefined | null): [AccountInfo<Buffer> | null | undefined, boolean] {\n  const connection = useConnection();\n  const cacheKey = tuple(connection, publicKey?.toBase58());\n  const [accountInfo, loaded] = useAsyncData<AccountInfo<Buffer> | null>(\n    async () => (publicKey ? connection.getAccountInfo(publicKey) : null),\n    cacheKey,\n    { refreshInterval: 60_000 },\n  );\n  useEffect(() => {\n    if (!publicKey) {\n      return;\n    }\n    if (accountListenerCount.has(cacheKey)) {\n      let currentItem = accountListenerCount.get(cacheKey);\n      ++currentItem.count;\n    } else {\n      let previousData: Buffer | null = null;\n      const subscriptionId = connection.onAccountChange(publicKey, (e) => {\n        if (e.data) {\n          if (!previousData || !previousData.equals(e.data)) {\n            setCache(cacheKey, e);\n          } else {\n          }\n          previousData = e.data;\n        }\n      });\n      accountListenerCount.set(cacheKey, { count: 1, subscriptionId });\n    }\n    return () => {\n      let currentItem = accountListenerCount.get(cacheKey);\n      let nextCount = currentItem.count - 1;\n      if (nextCount <= 0) {\n        connection.removeAccountChangeListener(currentItem.subscriptionId);\n        accountListenerCount.delete(cacheKey);\n      } else {\n        --currentItem.count;\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey]);\n  return [accountInfo, loaded];\n}\n\nexport function useAccountData(publicKey) {\n  const [accountInfo] = useAccountInfo(publicKey);\n  return accountInfo && accountInfo.data;\n}\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\nhtml,body{\n  background: #11161D;\n}\ninput[type=number]::-webkit-inner-spin-button {\n  opacity: 0;\n}\ninput[type=number]:hover::-webkit-inner-spin-button,\ninput[type=number]:focus::-webkit-inner-spin-button {\n  opacity: 0.25;\n}\n/* width */\n::-webkit-scrollbar {\n  width: 15px;\n}\n/* Track */\n::-webkit-scrollbar-track {\n  background: #2d313c;\n}\n/* Handle */\n::-webkit-scrollbar-thumb {\n  background: #5b5f67;\n}\n/* Handle on hover */\n::-webkit-scrollbar-thumb:hover {\n  background: #5b5f67;\n}\n.ant-slider-track, .ant-slider:hover .ant-slider-track {\n  background-color: #2abdd2;\n  opacity: 0.75;\n}\n.ant-slider-track,\n.ant-slider ant-slider-track:hover {\n  background-color: #2abdd2;\n  opacity: 0.75;\n}\n.ant-slider-dot-active,\n.ant-slider-handle,\n.ant-slider-handle-click-focused,\n.ant-slider:hover .ant-slider-handle:not(.ant-tooltip-open)  {\n  border: 2px solid #2abdd2; \n}\n.ant-table-tbody > tr.ant-table-row:hover > td {\n  background: #273043;\n}\n.ant-table-tbody > tr > td {\n  border-bottom: 8px solid #1A2029;\n}\n.ant-table-container table > thead > tr:first-child th {\n  border-bottom: none;\n}\n.ant-divider-horizontal.ant-divider-with-text::before, .ant-divider-horizontal.ant-divider-with-text::after {\n  border-top: 1px solid #434a59 !important;\n}\n.ant-layout {\n    background: #11161D\n  }\n  .ant-table {\n    background: #212734;\n  }\n  .ant-table-thead > tr > th {\n    background: #1A2029;\n  }\n.ant-select-item-option-content {\n  img {\n    margin-right: 4px;\n  }\n}\n.ant-modal-content {\n  background-color: #212734;\n}\n\n@-webkit-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n@-moz-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n@-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n.flash {\n  -moz-animation: highlight 0.5s ease 0s 1 alternate ;\n  -webkit-animation: highlight 0.5s ease 0s 1 alternate;\n  animation: highlight 0.5s ease 0s 1 alternate;\n}`;\n","import React, { Component } from 'react';\nimport { Typography } from 'antd';\n\nconst { Title } = Typography;\n\nexport default class ErrorBoundary extends Component {\n  state = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div>\n          <div>\n            <Title level={2}>Something went wrong.</Title>\n            <Title level={4}>Please try again later.</Title>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","import { useRef, useEffect } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef<() => void>();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current && savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  margin: 5px;\n  padding: 20px;\n  background-color: #1a2029;\n`;\n\nexport default function FloatingElement({ style, children }) {\n  return <Wrapper style={{ ...style }}>{children}</Wrapper>;\n}\n","import { Col, Row } from 'antd';\nimport React, { useRef, useEffect, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useMarket, useOrderbook, useMarkPrice } from '../utils/markets';\nimport { isEqual, getDecimalCount } from '../utils/utils';\nimport { useInterval } from '../utils/useInterval';\nimport FloatingElement from './layout/FloatingElement';\nimport usePrevious from '../utils/usePrevious';\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\n\nconst SizeTitle = styled(Row)`\n  padding: 20px 0 14px;\n  color: #434a59;\n`;\n\nconst MarkPriceTitle = styled(Row)`\n  padding: 20px 0 14px;\n  font-weight: 700;\n`;\n\nconst Line = styled.div`\n  text-align: right;\n  float: right;\n  height: 100%;\n  ${(props) =>\n    props['data-width'] &&\n    css`\n      width: ${props['data-width']};\n    `}\n  ${(props) =>\n    props['data-bgcolor'] &&\n    css`\n      background-color: ${props['data-bgcolor']};\n    `}\n`;\n\nconst Price = styled.div`\n  position: absolute;\n  right: 5px;\n  color: white;\n`;\n\nexport default function Orderbook({ smallScreen, depth = 7, onPrice, onSize }) {\n  const markPrice = useMarkPrice();\n  const [orderbook] = useOrderbook();\n  const { baseCurrency, quoteCurrency } = useMarket();\n\n  const currentOrderbookData = useRef(null);\n  const lastOrderbookData = useRef(null);\n\n  const [orderbookData, setOrderbookData] = useState(null);\n\n  useInterval(() => {\n    if (\n      !currentOrderbookData.current ||\n      JSON.stringify(currentOrderbookData.current) !==\n        JSON.stringify(lastOrderbookData.current)\n    ) {\n      let bids = orderbook?.bids || [];\n      let asks = orderbook?.asks || [];\n\n      let sum = (total, [, size], index) =>\n        index < depth ? total + size : total;\n      let totalSize = bids.reduce(sum, 0) + asks.reduce(sum, 0);\n\n      let bidsToDisplay = getCumulativeOrderbookSide(bids, totalSize, false);\n      let asksToDisplay = getCumulativeOrderbookSide(asks, totalSize, true);\n\n      currentOrderbookData.current = {\n        bids: orderbook?.bids,\n        asks: orderbook?.asks,\n      };\n\n      setOrderbookData({ bids: bidsToDisplay, asks: asksToDisplay });\n    }\n  }, 250);\n\n  useEffect(() => {\n    lastOrderbookData.current = {\n      bids: orderbook?.bids,\n      asks: orderbook?.asks,\n    };\n  }, [orderbook]);\n\n  function getCumulativeOrderbookSide(orders, totalSize, backwards = false) {\n    let cumulative = orders\n      .slice(0, depth)\n      .reduce((cumulative, [price, size], i) => {\n        const cumulativeSize = (cumulative[i - 1]?.cumulativeSize || 0) + size;\n        cumulative.push({\n          price,\n          size,\n          cumulativeSize,\n          sizePercent: Math.round((cumulativeSize / (totalSize || 1)) * 100),\n        });\n        return cumulative;\n      }, []);\n    if (backwards) {\n      cumulative = cumulative.reverse();\n    }\n    return cumulative;\n  }\n\n  return (\n    <FloatingElement\n      style={\n        smallScreen ? { flex: 1 } : { height: '500px', overflow: 'hidden' }\n      }\n    >\n      <Title>Orderbook</Title>\n      <SizeTitle>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          Size ({baseCurrency})\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          Price ({quoteCurrency})\n        </Col>\n      </SizeTitle>\n      {orderbookData?.asks.map(({ price, size, sizePercent }) => (\n        <OrderbookRow\n          key={price + ''}\n          price={price}\n          size={size}\n          side={'sell'}\n          sizePercent={sizePercent}\n          onPriceClick={() => onPrice(price)}\n          onSizeClick={() => onSize(size)}\n        />\n      ))}\n      <MarkPriceComponent markPrice={markPrice} />\n      {orderbookData?.bids.map(({ price, size, sizePercent }) => (\n        <OrderbookRow\n          key={price + ''}\n          price={price}\n          size={size}\n          side={'buy'}\n          sizePercent={sizePercent}\n          onPriceClick={() => onPrice(price)}\n          onSizeClick={() => onSize(size)}\n        />\n      ))}\n    </FloatingElement>\n  );\n}\n\nconst OrderbookRow = React.memo(\n  ({ side, price, size, sizePercent, onSizeClick, onPriceClick }) => {\n    const element = useRef();\n\n    const { market } = useMarket();\n\n    useEffect(() => {\n      // eslint-disable-next-line\n      !element.current?.classList.contains('flash') &&\n        element.current?.classList.add('flash');\n      const id = setTimeout(\n        () =>\n          element.current?.classList.contains('flash') &&\n          element.current?.classList.remove('flash'),\n        250,\n      );\n      return () => clearTimeout(id);\n    }, [price, size]);\n\n    let formattedSize =\n      market?.minOrderSize && !isNaN(size)\n        ? Number(size).toFixed(getDecimalCount(market.minOrderSize) + 1)\n        : size;\n\n    let formattedPrice =\n      market?.tickSize && !isNaN(price)\n        ? Number(price).toFixed(getDecimalCount(market.tickSize) + 1)\n        : price;\n\n    return (\n      <Row ref={element} style={{ marginBottom: 1 }} onClick={onSizeClick}>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          {formattedSize}\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          <Line\n            data-width={sizePercent + '%'}\n            data-bgcolor={\n              side === 'buy'\n                ? 'rgba(65, 199, 122, 0.6)'\n                : 'rgba(242, 60, 105, 0.6)'\n            }\n          />\n          <Price onClick={onPriceClick}>{formattedPrice}</Price>\n        </Col>\n      </Row>\n    );\n  },\n  (prevProps, nextProps) =>\n    isEqual(prevProps, nextProps, ['price', 'size', 'sizePercent']),\n);\n\nconst MarkPriceComponent = React.memo(\n  ({ markPrice }) => {\n    const { market } = useMarket();\n    const previousMarkPrice = usePrevious(markPrice);\n\n    let markPriceColor =\n      markPrice > previousMarkPrice\n        ? '#41C77A'\n        : markPrice < previousMarkPrice\n        ? '#F23B69'\n        : 'white';\n\n    let formattedMarkPrice =\n      markPrice &&\n      market?.tickSize &&\n      markPrice.toFixed(getDecimalCount(market.tickSize));\n\n    return (\n      <MarkPriceTitle justify=\"center\">\n        <Col style={{ color: markPriceColor }}>\n          {markPrice > previousMarkPrice && (\n            <ArrowUpOutlined style={{ marginRight: 5 }} />\n          )}\n          {markPrice < previousMarkPrice && (\n            <ArrowDownOutlined style={{ marginRight: 5 }} />\n          )}\n          {formattedMarkPrice || '----'}\n        </Col>\n      </MarkPriceTitle>\n    );\n  },\n  (prevProps, nextProps) => isEqual(prevProps, nextProps, ['markPrice']),\n);\n","import { useEffect, useRef } from 'react';\n\nexport default function usePrevious(value) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef();\n\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n\n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\n","import React from 'react';\nimport { ConfigProvider, Table } from 'antd';\n\nexport default function DataTable({\n  dataSource,\n  columns,\n  emptyLabel = 'No data',\n  pagination = false,\n  loading = false,\n  pageSize = 10,\n}) {\n  const customizeRenderEmpty = () => (\n    <div\n      style={{\n        padding: '20px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      {emptyLabel}\n    </div>\n  );\n\n  return (\n    <ConfigProvider renderEmpty={customizeRenderEmpty}>\n      <Table\n        dataSource={dataSource}\n        columns={columns}\n        pagination={pagination ? { pagination: true, pageSize } : false}\n        loading={loading}\n      />\n    </ConfigProvider>\n  );\n}\n","import { Button } from 'antd';\nimport React from 'react';\nimport {\n  useTokenAccounts,\n  getSelectedTokenAccountForMint,\n} from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\nimport { useSendConnection } from '../../utils/connection';\nimport { useWallet } from '../../utils/wallet';\nimport { settleFunds } from '../../utils/send';\nimport { notify } from '../../utils/notifications';\n\nexport default function BalancesTable({\n  balances,\n  showMarket,\n  hideWalletBalance,\n  onSettleSuccess,\n}) {\n  const [accounts] = useTokenAccounts();\n  const connection = useSendConnection();\n  const { wallet } = useWallet();\n\n  async function onSettleFunds(market, openOrders) {\n    try {\n      await settleFunds({\n        market,\n        openOrders,\n        connection,\n        wallet,\n        baseCurrencyAccount: getSelectedTokenAccountForMint(\n          accounts,\n          market?.baseMintAddress,\n        ),\n        quoteCurrencyAccount: getSelectedTokenAccountForMint(\n          accounts,\n          market?.quoteMintAddress,\n        ),\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    }\n    onSettleSuccess && onSettleSuccess();\n  }\n\n  const columns = [\n    showMarket\n      ? {\n          title: 'Market',\n          dataIndex: 'marketName',\n          key: 'marketName',\n        }\n      : null,\n    {\n      title: 'Coin',\n      dataIndex: 'coin',\n      key: 'coin',\n    },\n    hideWalletBalance\n      ? null\n      : {\n          title: 'Wallet Balance',\n          dataIndex: 'wallet',\n          key: 'wallet',\n        },\n    {\n      title: 'Orders',\n      dataIndex: 'orders',\n      key: 'orders',\n    },\n    {\n      title: 'Unsettled',\n      dataIndex: 'unsettled',\n      key: 'unsettled',\n    },\n    {\n      key: 'action',\n      render: ({ market, openOrders, marketName }) => (\n        <div style={{ textAlign: 'right' }}>\n          <Button\n            ghost\n            style={{ marginRight: 12 }}\n            onClick={() => onSettleFunds(market, openOrders)}\n          >\n            Settle {marketName}\n          </Button>\n        </div>\n      ),\n    },\n  ].filter((x) => x);\n  return (\n    <DataTable\n      emptyLabel=\"No balances\"\n      dataSource={balances}\n      columns={columns}\n      pagination={false}\n    />\n  );\n}\n","import React, { useState } from 'react';\nimport DataTable from '../layout/DataTable';\n\nimport styled from 'styled-components';\nimport { Button, Row, Col, Tag } from 'antd';\nimport { cancelOrder } from '../../utils/send';\nimport { useWallet } from '../../utils/wallet';\nimport { useSendConnection } from '../../utils/connection';\nimport { notify } from '../../utils/notifications';\nimport { DeleteOutlined } from '@ant-design/icons';\n\nconst CancelButton = styled(Button)`\n  color: #f23b69;\n  border: 1px solid #f23b69;\n`;\n\nexport default function OpenOrderTable({ openOrders, onCancelSuccess }) {\n  let { wallet } = useWallet();\n  let connection = useSendConnection();\n\n  const [cancelId, setCancelId] = useState(null);\n\n  async function cancel(order) {\n    setCancelId(order?.orderId);\n    try {\n      await cancelOrder({\n        order,\n        market: order.market,\n        connection,\n        wallet,\n      });\n    } catch (e) {\n      notify({\n        message: 'Error cancelling order',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    } finally {\n      setCancelId(null);\n    }\n    onCancelSuccess && onCancelSuccess();\n  }\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'marketName',\n      key: 'marketName',\n    },\n    {\n      title: 'Side',\n      dataIndex: 'side',\n      key: 'side',\n      render: (side) => (\n        <Tag\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\n          style={{ fontWeight: 700 }}\n        >\n          {side.charAt(0).toUpperCase() + side.slice(1)}\n        </Tag>\n      ),\n    },\n    {\n      title: 'Size',\n      dataIndex: 'size',\n      key: 'size',\n    },\n    {\n      title: 'Price',\n      dataIndex: 'price',\n      key: 'price',\n    },\n    {\n      key: 'orderId',\n      render: (order) => (\n        <div style={{ textAlign: 'right' }}>\n          <CancelButton\n            icon={<DeleteOutlined />}\n            onClick={() => cancel(order)}\n            loading={cancelId + '' === order?.orderId + ''}\n          >\n            Cancel\n          </CancelButton>\n        </div>\n      ),\n    },\n  ];\n  const dataSource = (openOrders || []).map((order) =>\n    Object.assign(order, { key: order.orderId }),\n  );\n\n  return (\n    <Row>\n      <Col span={24}>\n        <DataTable\n          emptyLabel=\"No open orders\"\n          dataSource={dataSource}\n          columns={columns}\n          pagination={true}\n          pageSize={5}\n        />\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react';\nimport { Row, Col, Tag } from 'antd';\nimport { useFills, useMarket } from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\n\nexport default function FillsTable() {\n  const fills = useFills();\n\n  const { quoteCurrency } = useMarket();\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'marketName',\n      key: 'marketName',\n    },\n    {\n      title: 'Side',\n      dataIndex: 'side',\n      key: 'side',\n      render: (side) => (\n        <Tag\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\n          style={{ fontWeight: 700 }}\n        >\n          {side.charAt(0).toUpperCase() + side.slice(1)}\n        </Tag>\n      ),\n    },\n    {\n      title: `Size`,\n      dataIndex: 'size',\n      key: 'size',\n    },\n    {\n      title: `Price`,\n      dataIndex: 'price',\n      key: 'price',\n    },\n    {\n      title: `Liquidity`,\n      dataIndex: 'liquidity',\n      key: 'liquidity',\n    },\n    {\n      title: quoteCurrency ? `Fees (${quoteCurrency})` : 'Fees',\n      dataIndex: 'feeCost',\n      key: 'feeCost',\n    },\n  ];\n\n  const dataSource = (fills || []).map((fill) => ({\n    ...fill,\n    key: `${fill.orderId}${fill.side}`,\n    liquidity: fill.eventFlags.maker ? 'Maker' : 'Taker',\n  }));\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <DataTable\n            dataSource={dataSource}\n            columns={columns}\n            pagination={true}\n            pageSize={5}\n            emptyLabel=\"No fills\"\n          />\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React from 'react';\nimport { Row, Col, Typography, Tag } from 'antd';\nimport { useFeeDiscountKeys } from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\nimport { TokenInstructions, getFeeRates } from '@project-serum/serum';\nimport { percentFormat } from '../../utils/utils';\n\nexport default function FeesTable() {\n  const [feeAccounts] = useFeeDiscountKeys();\n\n  const columns = [\n    {\n      title: 'Fee Tier',\n      dataIndex: 'feeTier',\n      key: 'feeTier',\n      render: (feeTier, row) => (\n        <div style={{ display: 'flex' }}>\n          <Typography>{feeTier}</Typography>\n          {row.index === 0 ? (\n            <div style={{ marginLeft: 10 }}>\n              <Tag color={'#41C77A'} style={{ fontWeight: 700 }}>\n                Selected\n              </Tag>\n            </div>\n          ) : null}\n        </div>\n      ),\n    },\n    {\n      title: 'Taker',\n      dataIndex: 'taker',\n      key: 'taker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).taker),\n    },\n    {\n      title: 'Maker',\n      dataIndex: 'maker',\n      key: 'maker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).maker),\n    },\n    {\n      title: `Public Key`,\n      dataIndex: 'pubkey',\n      key: 'pubkey',\n      render: (pubkey) => pubkey.toBase58(),\n    },\n    {\n      title: `Balance`,\n      dataIndex: 'balance',\n      key: 'balance',\n    },\n    {\n      title: `Mint`,\n      dataIndex: 'mint',\n      key: 'mint',\n      render: (_, row) =>\n        row.mint.equals(TokenInstructions.SRM_MINT)\n          ? 'SRM'\n          : row.mint.equals(TokenInstructions.MSRM_MINT)\n          ? 'MSRM'\n          : 'UNKNOWN',\n    },\n  ];\n\n  const dataSource = (feeAccounts || []).map((account, index) => ({\n    ...account,\n    index,\n    key: account.pubkey.toBase58(),\n  }));\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <DataTable\n            dataSource={dataSource}\n            columns={columns}\n            pagination={true}\n            pageSize={5}\n            emptyLabel=\"No (M)SRM accounts\"\n          />\n        </Col>\n      </Row>\n      <Row style={{ marginTop: 8 }}>\n        <Col>\n          <Typography>\n            Holding SRM or MSRM makes you eligible for fee discounts:\n          </Typography>\n          <FeeScheduleTable />\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nfunction FeeScheduleTable() {\n  // Representation of serum-js/src/fees.ts\n  const dataSource = [\n    { feeTier: 0, taker: 0.0022, maker: -0.0003, token: '', balance: '' },\n    { feeTier: 1, taker: 0.002, maker: -0.0003, token: 'SRM', balance: 100 },\n    { feeTier: 2, taker: 0.0018, maker: -0.0003, token: 'SRM', balance: 1000 },\n    { feeTier: 3, taker: 0.0016, maker: -0.0003, token: 'SRM', balance: 10000 },\n    {\n      feeTier: 4,\n      taker: 0.0014,\n      maker: -0.0003,\n      token: 'SRM',\n      balance: 100000,\n    },\n    {\n      feeTier: 5,\n      taker: 0.0012,\n      maker: -0.0003,\n      token: 'SRM',\n      balance: 1000000,\n    },\n    { feeTier: 6, taker: 0.001, maker: -0.0005, token: 'MSRM', balance: 1 },\n  ];\n  const columns = [\n    {\n      title: 'Fee Tier',\n      dataIndex: 'feeTier',\n      key: 'feeTier',\n    },\n    {\n      title: 'Taker',\n      dataIndex: 'taker',\n      key: 'taker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).taker),\n    },\n    {\n      title: 'Maker',\n      dataIndex: 'maker',\n      key: 'maker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).maker),\n    },\n    {\n      title: 'Requirements',\n      dataIndex: 'requirements',\n      key: 'requirements',\n      render: (_, row) => (\n        <Typography>\n          {!row.balance ? 'None' : `≥ ${row.balance} ${row.token}`}\n        </Typography>\n      ),\n    },\n  ];\n  return (\n    <DataTable\n      dataSource={dataSource.map((info) => ({ ...info, key: info.feeTier }))}\n      columns={columns}\n    />\n  );\n}\n","import BalancesTable from './BalancesTable';\nimport OpenOrderTable from './OpenOrderTable';\nimport React from 'react';\nimport { Tabs, Typography } from 'antd';\nimport FillsTable from './FillsTable';\nimport FloatingElement from '../layout/FloatingElement';\nimport FeesTable from './FeesTable';\nimport { useOpenOrders, useBalances, useMarket } from '../../utils/markets';\n\nconst { Paragraph } = Typography;\nconst { TabPane } = Tabs;\n\nexport default function Index() {\n  const { market } = useMarket();\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 20 }}>\n      <Typography>\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)' }}>\n          Make sure to go to Balances and click Settle to send out your funds.\n        </Paragraph>\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)' }}>\n          To fund your wallet, <a href=\"https://www.sollet.io\">sollet.io</a>.\n          You can get SOL from FTX, Binance, BitMax, and others. You can get\n          other tokens from FTX.{' '}\n        </Paragraph>\n      </Typography>\n      <Tabs defaultActiveKey=\"orders\">\n        <TabPane tab=\"Open Orders\" key=\"orders\">\n          <OpenOrdersTab />\n        </TabPane>\n        <TabPane tab=\"Recent Trade History\" key=\"fills\">\n          <FillsTable />\n        </TabPane>\n        <TabPane tab=\"Balances\" key=\"balances\">\n          <BalancesTab />\n        </TabPane>\n        {market && market.supportsSrmFeeDiscounts ? (\n          <TabPane tab=\"Fee discounts\" key=\"fees\">\n            <FeesTable />\n          </TabPane>\n        ) : null}\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\nconst OpenOrdersTab = () => {\n  const openOrders = useOpenOrders();\n\n  return <OpenOrderTable openOrders={openOrders} />;\n};\n\nconst BalancesTab = () => {\n  const balances = useBalances();\n\n  return <BalancesTable balances={balances} />;\n};\n","import React from 'react';\nimport { Modal } from 'antd';\nimport {\n  useSelectedBaseCurrencyAccount,\n  useMarket,\n  useSelectedQuoteCurrencyAccount,\n} from '../utils/markets';\nimport { useWallet } from '../utils/wallet';\nimport Link from './Link';\n\nexport default function DepositDialog({ onClose, baseOrQuote }) {\n  const { market, baseCurrency, quoteCurrency } = useMarket();\n\n  const { providerName, providerUrl } = useWallet();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  let coinMint;\n  let account;\n  let depositCoin;\n  if (baseOrQuote === 'base') {\n    coinMint = market?.baseMintAddress;\n    account = baseCurrencyAccount;\n    depositCoin = baseCurrency;\n  } else if (baseOrQuote === 'quote') {\n    coinMint = market?.quoteMintAddress;\n    account = quoteCurrencyAccount;\n    depositCoin = quoteCurrency;\n  } else {\n    account = null;\n  }\n  if (!coinMint) {\n    return null;\n  }\n  return (\n    <Modal\n      title={depositCoin}\n      visible={!!coinMint}\n      onOk={onClose}\n      onCancel={onClose}\n    >\n      <div style={{ paddingTop: '20px' }}>\n        <p style={{ color: 'white' }}>Mint address:</p>\n        <p style={{ color: 'rgba(255,255,255,0.5)' }}>{coinMint.toBase58()}</p>\n        <div>\n          <p style={{ color: 'white' }}>SPL Deposit address:</p>\n          <p style={{ color: 'rgba(255,255,255,0.5)' }}>\n            {account ? (\n              account.pubkey.toBase58()\n            ) : (\n              <>\n                Visit{' '}\n                <Link external to={providerUrl}>\n                  {providerName}\n                </Link>{' '}\n                to create an account for this mint\n              </>\n            )}\n          </p>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport {TokenAccount} from \"../utils/types\";\nimport styled from 'styled-components';\nimport {useSelectedTokenAccounts} from \"../utils/markets\";\nimport {Button, Col, Row, Select, Typography} from \"antd\";\nimport {CopyOutlined} from '@ant-design/icons';\nimport {abbreviateAddress} from \"../utils/utils\";\nimport {notify} from \"../utils/notifications\";\n\nconst RowBox = styled(Row)`\n  padding-bottom: 10px;\n`;\n\nexport default function StandaloneTokenAccountsSelect({\n  accounts,\n  mint\n}: {\n  accounts: TokenAccount[] | null | undefined,\n  mint: string | undefined\n}) {\n  const [selectedTokenAccounts, setSelectedTokenAccounts] = useSelectedTokenAccounts();\n\n  let selectedValue: string | undefined;\n  if (mint && mint in selectedTokenAccounts) {\n    selectedValue = selectedTokenAccounts[mint];\n  } else if (accounts && accounts?.length > 0) {\n    selectedValue = accounts[0].pubkey.toBase58();\n  } else {\n    selectedValue = undefined;\n  }\n\n  const setTokenAccountForCoin = (value) => {\n    if (!mint) {\n      notify({\n        message: 'Error selecting token account',\n        description: 'Mint is undefined',\n        type: 'error',\n      })\n      return;\n    }\n    const newSelectedTokenAccounts = {...selectedTokenAccounts};\n    newSelectedTokenAccounts[mint] = value;\n    setSelectedTokenAccounts(newSelectedTokenAccounts);\n  }\n\n  return (\n    <React.Fragment>\n      <RowBox align=\"middle\" >\n        <Col span={8}>\n          Token account:\n        </Col>\n        <Col span={13}>\n          <Select\n            style={{ width: '100%' }}\n            value={selectedValue}\n            onSelect={setTokenAccountForCoin}\n          >\n            {accounts?.map(account => (\n              <Select.Option key={account.pubkey.toBase58()} value={account.pubkey.toBase58()}>\n                <Typography.Text code>{abbreviateAddress(account.pubkey, 8)}</Typography.Text>\n              </Select.Option>)\n            )}\n          </Select>\n        </Col>\n        <Col span={2} offset={1}>\n          <Button\n            shape=\"round\"\n            icon={<CopyOutlined />}\n            size={'small'}\n            onClick={() => selectedValue && navigator.clipboard.writeText(selectedValue)}\n          />\n        </Col>\n      </RowBox>\n    </React.Fragment>\n  );\n}\n","import {Button, Col, Divider, Row} from 'antd';\nimport React, {useState} from 'react';\nimport FloatingElement from './layout/FloatingElement';\nimport styled from 'styled-components';\nimport {\n  useBalances,\n  useMarket,\n  useSelectedBaseCurrencyAccount,\n  useSelectedOpenOrdersAccount,\n  useSelectedQuoteCurrencyAccount,\n  useTokenAccounts,\n} from '../utils/markets';\nimport DepositDialog from './DepositDialog';\nimport {useWallet} from '../utils/wallet';\nimport Link from './Link';\nimport {settleFunds} from '../utils/send';\nimport {useSendConnection} from '../utils/connection';\nimport {notify} from '../utils/notifications';\nimport {Balances} from \"../utils/types\";\nimport StandaloneTokenAccountsSelect from \"./StandaloneTokenAccountSelect\";\n\nconst RowBox = styled(Row)`\n  padding-bottom: 20px;\n`;\n\nconst Tip = styled.p`\n  font-size: 12px;\n  padding-top: 6px;\n`;\n\nconst ActionButton = styled(Button)`\n  color: #2abdd2;\n  background-color: #212734;\n  border-width: 0px;\n`;\n\nexport default function StandaloneBalancesDisplay() {\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const balances = useBalances();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const connection = useSendConnection();\n  const { providerUrl, providerName, wallet, connected } = useWallet();\n  const [baseOrQuote, setBaseOrQuote] = useState('');\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const [tokenAccounts] = useTokenAccounts();\n  const baseCurrencyBalances =\n    balances && balances.find((b) => b.coin === baseCurrency);\n  const quoteCurrencyBalances =\n    balances && balances.find((b) => b.coin === quoteCurrency);\n\n  async function onSettleFunds() {\n    if (!market) {\n      notify({\n        message: 'Error settling funds',\n        description: 'market is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    if (!openOrdersAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    if (!baseCurrencyAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    if (!quoteCurrencyAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error',\n      });\n      return;\n    }\n\n    try {\n      await settleFunds({\n        market,\n        openOrders: openOrdersAccount,\n        connection,\n        wallet,\n        baseCurrencyAccount,\n        quoteCurrencyAccount,\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n    }\n  }\n\n  const formattedBalances: [string | undefined, Balances | undefined, string, string | undefined][] = [\n    [baseCurrency, baseCurrencyBalances, 'base', market?.baseMintAddress.toBase58()],\n    [quoteCurrency, quoteCurrencyBalances, 'quote', market?.quoteMintAddress.toBase58()],\n  ]\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      {formattedBalances.map(([currency, balances, baseOrQuote, mint], index) => (\n        <React.Fragment key={index}>\n          <Divider style={{ borderColor: 'white' }}>{currency}</Divider>\n          {connected && (\n            <StandaloneTokenAccountsSelect\n              accounts={tokenAccounts?.filter(account => account.effectiveMint.toBase58() === mint)}\n              mint={mint}\n            />\n          )}\n          <RowBox\n            align=\"middle\"\n            justify=\"space-between\"\n            style={{ paddingBottom: 12 }}\n          >\n            <Col>Wallet balance:</Col>\n            <Col>{balances && balances.wallet}</Col>\n          </RowBox>\n          <RowBox\n            align=\"middle\"\n            justify=\"space-between\"\n            style={{ paddingBottom: 12 }}\n          >\n            <Col>Unsettled balance:</Col>\n            <Col>{balances && balances.unsettled}</Col>\n          </RowBox>\n          <RowBox align=\"middle\" justify=\"space-around\">\n            <Col style={{ width: 150 }}>\n              <ActionButton\n                block\n                size=\"large\"\n                onClick={() => setBaseOrQuote(baseOrQuote)}\n              >\n                Deposit\n              </ActionButton>\n            </Col>\n            <Col style={{ width: 150 }}>\n              <ActionButton block size=\"large\" onClick={onSettleFunds}>\n                Settle\n              </ActionButton>\n            </Col>\n          </RowBox>\n          <Tip>\n            All deposits go to your{' '}\n            <Link external to={providerUrl}>\n              {providerName}\n            </Link>{' '}\n            wallet\n          </Tip>\n        </React.Fragment>\n      ))}\n      <DepositDialog\n        baseOrQuote={baseOrQuote}\n        onClose={() => setBaseOrQuote('')}\n      />\n    </FloatingElement>\n  );\n}\n","import { Button, Input, Radio, Switch, Slider } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport {\n  useSelectedBaseCurrencyBalances,\n  useSelectedQuoteCurrencyBalances,\n  useMarket,\n  useMarkPrice,\n  useSelectedOpenOrdersAccount,\n  useSelectedBaseCurrencyAccount,\n  useSelectedQuoteCurrencyAccount,\n} from '../utils/markets';\nimport { useWallet } from '../utils/wallet';\nimport { notify } from '../utils/notifications';\nimport {\n  getDecimalCount,\n  roundToDecimal,\n  floorToDecimal,\n} from '../utils/utils';\nimport { useSendConnection } from '../utils/connection';\nimport FloatingElement from './layout/FloatingElement';\nimport { placeOrder } from '../utils/send';\nimport {SwitchChangeEventHandler} from \"antd/es/switch\";\n\nconst SellButton = styled(Button)`\n  margin: 20px 0px 0px 0px;\n  background: #f23b69;\n  border-color: #f23b69;\n`;\n\nconst BuyButton = styled(Button)`\n  margin: 20px 0px 0px 0px;\n  background: #02bf76;\n  border-color: #02bf76;\n`;\n\nconst sliderMarks = {\n  0: '0%',\n  25: '25%',\n  50: '50%',\n  75: '75%',\n  100: '100%',\n};\n\nexport default function TradeForm({ style, setChangeOrderRef }: {\n  style?: any;\n  setChangeOrderRef?: (ref: ({ size, price }: {size?: number; price?: number;}) => void) => void;\n}) {\n  const [side, setSide] = useState<'buy' | 'sell'>('buy');\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const baseCurrencyBalances = useSelectedBaseCurrencyBalances();\n  const quoteCurrencyBalances = useSelectedQuoteCurrencyBalances();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const { wallet } = useWallet();\n  const sendConnection = useSendConnection();\n  const markPrice = useMarkPrice();\n\n  const [postOnly, setPostOnly] = useState(false);\n  const [ioc, setIoc] = useState(false);\n  const [baseSize, setBaseSize] = useState<number | undefined>(undefined);\n  const [quoteSize, setQuoteSize] = useState<number | undefined>(undefined);\n  const [price, setPrice] = useState<number | undefined>(undefined);\n  const [submitting, setSubmitting] = useState(false);\n  const [sizeFraction, setSizeFraction] = useState(0);\n\n  const availableQuote = openOrdersAccount && market\n    ? market.quoteSplSizeToNumber(openOrdersAccount.quoteTokenFree)\n    : 0;\n\n  let quoteBalance = (quoteCurrencyBalances || 0) + (availableQuote || 0);\n  let baseBalance = baseCurrencyBalances || 0;\n  let sizeDecimalCount =\n    market?.minOrderSize && getDecimalCount(market.minOrderSize);\n  let priceDecimalCount = market?.tickSize && getDecimalCount(market.tickSize);\n\n  useEffect(() => {\n    setChangeOrderRef && setChangeOrderRef(doChangeOrder);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setChangeOrderRef]);\n\n  useEffect(() => {\n    baseSize && price && onSliderChange(sizeFraction);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [side]);\n\n  useEffect(() => {\n    updateSizeFraction();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [price, baseSize]);\n\n  const onSetBaseSize = (baseSize: number | undefined) => {\n    setBaseSize(baseSize);\n    if (!baseSize) {\n      setQuoteSize(undefined);\n      return;\n    }\n    let usePrice = price || markPrice;\n    if (!usePrice) {\n      setQuoteSize(undefined);\n      return;\n    }\n    const rawQuoteSize = baseSize * usePrice;\n    const quoteSize =\n      baseSize && roundToDecimal(rawQuoteSize, sizeDecimalCount);\n    setQuoteSize(quoteSize);\n  };\n\n  const onSetQuoteSize = (quoteSize: number | undefined) => {\n    setQuoteSize(quoteSize);\n    if (!quoteSize) {\n      setBaseSize(undefined);\n      return;\n    }\n    let usePrice = price || markPrice;\n    if (!usePrice) {\n      setBaseSize(undefined);\n      return;\n    }\n    const rawBaseSize = quoteSize / usePrice;\n    const baseSize = quoteSize && roundToDecimal(rawBaseSize, sizeDecimalCount);\n    setBaseSize(baseSize);\n  };\n\n  const doChangeOrder = ({ size, price }: {size?: number; price?: number;}) => {\n    const formattedSize = size && roundToDecimal(size, sizeDecimalCount);\n    const formattedPrice = price && roundToDecimal(price, priceDecimalCount);\n    formattedSize && onSetBaseSize(formattedSize);\n    formattedPrice && setPrice(formattedPrice);\n  };\n\n  const updateSizeFraction = () => {\n    const rawMaxSize = side === 'buy' ? quoteBalance / (price || markPrice || 1.) : baseBalance;\n    const maxSize = floorToDecimal(rawMaxSize, sizeDecimalCount);\n    const sizeFraction = Math.min(((baseSize || 0.) / maxSize) * 100, 100);\n    setSizeFraction(sizeFraction);\n  };\n\n  const onSliderChange = (value) => {\n    if (!price && markPrice) {\n      let formattedMarkPrice: number | string = priceDecimalCount\n        ? markPrice.toFixed(priceDecimalCount)\n        : markPrice;\n      setPrice(typeof formattedMarkPrice === 'number' ? formattedMarkPrice : parseFloat(formattedMarkPrice));\n    }\n\n    let newSize;\n    if (side === 'buy') {\n      if (price || markPrice) {\n        newSize = ((quoteBalance / (price || markPrice || 1.)) * value) / 100;\n      }\n    } else {\n      newSize = (baseBalance * value) / 100;\n    }\n\n    // round down to minOrderSize increment\n    let formatted = floorToDecimal(newSize, sizeDecimalCount);\n\n    onSetBaseSize(formatted);\n  };\n\n  const postOnChange: SwitchChangeEventHandler = (checked) => {\n    if (checked) {\n      setIoc(false);\n    }\n    setPostOnly(checked);\n  };\n  const iocOnChange: SwitchChangeEventHandler = (checked) => {\n    if (checked) {\n      setPostOnly(false);\n    }\n    setIoc(checked);\n  };\n\n  async function onSubmit() {\n    if (!price) {\n      console.warn('Missing price');\n      notify({\n        message: 'Missing price',\n        type: 'error',\n      });\n      return;\n    } else if (!baseSize) {\n      console.warn('Missing size');\n      notify({\n        message: 'Missing size',\n        type: 'error',\n      });\n      return;\n    }\n\n    setSubmitting(true);\n    try {\n      await placeOrder({\n        side,\n        price,\n        size: baseSize,\n        orderType: ioc ? 'ioc' : postOnly ? 'postOnly' : 'limit',\n        market,\n        connection: sendConnection,\n        wallet,\n        baseCurrencyAccount: baseCurrencyAccount?.pubkey,\n        quoteCurrencyAccount: quoteCurrencyAccount?.pubkey,\n      });\n      setPrice(undefined);\n      onSetBaseSize(undefined);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error placing order',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <FloatingElement\n      style={{ display: 'flex', flexDirection: 'column', ...style }}\n    >\n      <div style={{ flex: 1 }}>\n        <Radio.Group\n          onChange={(e) => setSide(e.target.value)}\n          value={side}\n          buttonStyle=\"solid\"\n          style={{\n            marginBottom: 8,\n            width: '100%',\n          }}\n        >\n          <Radio.Button\n            value=\"buy\"\n            style={{\n              width: '50%',\n              textAlign: 'center',\n              background: side === 'buy' ? '#02bf76' : '',\n              borderColor: side === 'buy' ? '#02bf76' : '',\n            }}\n          >\n            BUY\n          </Radio.Button>\n          <Radio.Button\n            value=\"sell\"\n            style={{\n              width: '50%',\n              textAlign: 'center',\n              background: side === 'sell' ? '#F23B69' : '',\n              borderColor: side === 'sell' ? '#F23B69' : '',\n            }}\n          >\n            SELL\n          </Radio.Button>\n        </Radio.Group>\n        <Input\n          style={{ textAlign: 'right', paddingBottom: 8 }}\n          addonBefore={<div style={{ width: '30px' }}>Price</div>}\n          suffix={\n            <span style={{ fontSize: 10, opacity: 0.5 }}>{quoteCurrency}</span>\n          }\n          value={price}\n          type=\"number\"\n          step={market?.tickSize || 1}\n          onChange={(e) => setPrice(parseFloat(e.target.value))}\n        />\n        <Input.Group compact style={{ paddingBottom: 8 }}>\n          <Input\n            style={{ width: 'calc(50% + 30px)', textAlign: 'right' }}\n            addonBefore={<div style={{ width: '30px' }}>Size</div>}\n            suffix={\n              <span style={{ fontSize: 10, opacity: 0.5 }}>{baseCurrency}</span>\n            }\n            value={baseSize}\n            type=\"number\"\n            step={market?.minOrderSize || 1}\n            onChange={(e) => onSetBaseSize(parseFloat(e.target.value))}\n          />\n          <Input\n            style={{ width: 'calc(50% - 30px)', textAlign: 'right' }}\n            suffix={\n              <span style={{ fontSize: 10, opacity: 0.5 }}>\n                {quoteCurrency}\n              </span>\n            }\n            value={quoteSize}\n            type=\"number\"\n            step={market?.minOrderSize || 1}\n            onChange={(e) => onSetQuoteSize(parseFloat(e.target.value))}\n          />\n        </Input.Group>\n        <Slider\n          value={sizeFraction}\n          tipFormatter={(value) => `${value}%`}\n          marks={sliderMarks}\n          onChange={onSliderChange}\n        />\n        <div style={{ paddingTop: 18 }}>\n          {'POST '}\n          <Switch\n            checked={postOnly}\n            onChange={postOnChange}\n            style={{ marginRight: 40 }}\n          />\n          {'IOC '}\n          <Switch checked={ioc} onChange={iocOnChange} />\n        </div>\n      </div>\n      {side === 'buy' ? (\n        <BuyButton\n          disabled={!price || !baseSize}\n          onClick={onSubmit}\n          block\n          type=\"primary\"\n          size=\"large\"\n          loading={submitting}\n        >\n          Buy {baseCurrency}\n        </BuyButton>\n      ) : (\n        <SellButton\n          disabled={!price || !baseSize}\n          onClick={onSubmit}\n          block\n          type=\"primary\"\n          size=\"large\"\n          loading={submitting}\n        >\n          Sell {baseCurrency}\n        </SellButton>\n      )}\n    </FloatingElement>\n  );\n}\n","import { Col, Row } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useMarket, useTrades } from '../utils/markets';\nimport { getDecimalCount } from '../utils/utils';\nimport FloatingElement from './layout/FloatingElement';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\nconst SizeTitle = styled(Row)`\n  padding: 20px 0 14px;\n  color: #434a59;\n`;\n\n// TODO: Put in some scrolling\nconst TradesContainer = styled.div`\n  height: calc(100% - 75px);\n  margin-right: -20px;\n  padding-right: 5px;\n  overflow-y: scroll;\n`;\n\nexport default function PublicTrades({ smallScreen }) {\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const trades = useTrades();\n  return (\n    <FloatingElement\n      style={\n        smallScreen\n          ? { flex: 1 }\n          : {\n              marginTop: '10px',\n              minHeight: '270px',\n              height: 'calc(100vh - 710px)',\n            }\n      }\n    >\n      <Title>Recent Market trades</Title>\n      <SizeTitle>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          Size ({baseCurrency})\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          Price ({quoteCurrency}){' '}\n        </Col>\n      </SizeTitle>\n      {!!trades && (\n        <TradesContainer>\n          {trades.map((trade, i) => (\n            <Row key={i} style={{ marginBottom: 4 }}>\n              <Col span={12} style={{ textAlign: 'left' }}>\n                {market?.minOrderSize && !isNaN(trade.size)\n                  ? Number(trade.size).toFixed(\n                      getDecimalCount(market.minOrderSize),\n                    )\n                  : trade.size}\n              </Col>\n              <Col\n                span={12}\n                style={{\n                  textAlign: 'right',\n                  color: trade.side === 'buy' ? '#41C77A' : '#F23B69',\n                }}\n              >\n                {market?.tickSize && !isNaN(trade.price)\n                  ? Number(trade.price).toFixed(\n                      getDecimalCount(market.tickSize),\n                    )\n                  : trade.price}\n              </Col>\n            </Row>\n          ))}\n        </TradesContainer>\n      )}\n    </FloatingElement>\n  );\n}\n","import React from 'react';\nimport { Button } from 'antd';\nimport { LinkOutlined } from '@ant-design/icons';\n\nexport default function LinkAddress({ title, address }: {title?: undefined | any; address: string;}) {\n  return (\n    <div>\n      {title && <p style={{ color: 'white' }}>{title}</p>}\n      <Button\n        type=\"link\"\n        icon={<LinkOutlined />}\n        href={'https://explorer.solana.com/address/' + address}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {address}\n      </Button>\n    </div>\n  );\n}\n","import { Button, Divider, Spin, Typography } from 'antd';\nimport React from 'react';\nimport {\n  useGetOpenOrdersForDeprecatedMarkets,\n  useBalancesForDeprecatedMarkets,\n  useUnmigratedOpenOrdersAccounts,\n} from '../utils/markets';\nimport FloatingElement from './layout/FloatingElement';\nimport CheckOutlined from '@ant-design/icons/lib/icons/CheckOutlined';\nimport BalancesTable from './UserInfoTable/BalancesTable';\nimport OpenOrderTable from './UserInfoTable/OpenOrderTable';\nimport SyncOutlined from '@ant-design/icons/lib/icons/SyncOutlined';\n\nconst { Title } = Typography;\n\nexport default function DeprecatedMarketsInstructions({ switchToLiveMarkets }) {\n  const balances = useBalancesForDeprecatedMarkets();\n  const {\n    openOrders,\n    loaded,\n    refreshOpenOrders,\n  } = useGetOpenOrdersForDeprecatedMarkets();\n\n  const { refresh } = useUnmigratedOpenOrdersAccounts();\n  const needToCancelOrders = !openOrders || openOrders.length > 0;\n  const filteredBalances =\n    balances &&\n    balances.filter(({ orders, unsettled }) => orders > 0 || unsettled > 0);\n  const needToSettleFunds = filteredBalances && filteredBalances.length > 0;\n  return (\n    <FloatingElement>\n      <Title level={4} style={{ color: 'rgba(255, 255, 255, 1)' }}>\n        Migrate to new markets\n      </Title>\n      <Typography>\n        Serum has rolled out upgraded markets! They're faster and support fee\n        discounts based on SRM holdings.\n      </Typography>\n      <br />\n      <Typography>\n        To migrate over to the new markets, please cancel your orders and settle\n        your funds on old markets.\n      </Typography>\n      <div style={{ marginTop: 20, display: 'flex', justifyContent: 'center' }}>\n        <Button onClick={() => refresh(true)}>\n          <SyncOutlined /> Refresh data\n        </Button>\n      </div>\n      {!balances ? (\n        <Spin size=\"large\" />\n      ) : (\n        <>\n          <Divider>\n            {!needToCancelOrders && <CheckOutlined />} Cancel your orders\n          </Divider>\n          {needToCancelOrders ? (\n            loaded ? (\n              <OpenOrderTable\n                openOrders={openOrders}\n                onCancelSuccess={() => {\n                  setTimeout(() => {\n                    refresh();\n                    refreshOpenOrders();\n                  }, 1000); // Wait so that on-chain account state reflects the update\n                }}\n              />\n            ) : (\n              <Spin size=\"large\" />\n            )\n          ) : null}\n          <Divider>\n            {!needToSettleFunds && <CheckOutlined />} Settle your funds\n          </Divider>\n          {needToSettleFunds && (\n            <BalancesTable\n              balances={filteredBalances}\n              hideWalletBalance\n              showMarket\n              onSettleSuccess={() => {\n                setTimeout(refresh, 1000); // Wait so that on-chain account state reflects the update\n              }}\n            />\n          )}\n          <Divider>Switch to upgraded markets</Divider>\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\n            <Button\n              onClick={switchToLiveMarkets}\n              disabled={needToSettleFunds || needToCancelOrders}\n            >\n              Switch to new markets\n            </Button>\n          </div>\n        </>\n      )}\n    </FloatingElement>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Col, Input, Modal, Row, Typography } from 'antd';\nimport { notify } from '../utils/notifications';\nimport { isValidPublicKey } from '../utils/utils';\nimport { PublicKey } from '@solana/web3.js';\nimport { Market, MARKETS, TOKEN_MINTS } from '@project-serum/serum';\nimport { useAccountInfo, useConnection } from '../utils/connection';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nconst { Text } = Typography;\n\nexport default function CustomMarketDialog({\n  visible,\n  onAddCustomMarket,\n  onClose,\n}) {\n  const connection = useConnection();\n\n  const [marketId, setMarketId] = useState('');\n\n  const [marketLabel, setMarketLabel] = useState('');\n  const [baseLabel, setBaseLabel] = useState('');\n  const [quoteLabel, setQuoteLabel] = useState('');\n\n  const [market, setMarket] = useState(null);\n  const [loadingMarket, setLoadingMarket] = useState(false);\n\n  const wellFormedMarketId = isValidPublicKey(marketId);\n\n  const [marketAccountInfo] = useAccountInfo(\n    wellFormedMarketId ? new PublicKey(marketId) : null,\n  );\n  const programId = marketAccountInfo\n    ? marketAccountInfo.owner.toBase58()\n    : MARKETS.find(({ deprecated }) => !deprecated).programId.toBase58();\n\n  useEffect(() => {\n    if (!wellFormedMarketId || !programId) {\n      resetLabels();\n      return;\n    }\n    setLoadingMarket(true);\n    Market.load(\n      connection,\n      new PublicKey(marketId),\n      {},\n      new PublicKey(programId),\n    )\n      .then((market) => {\n        setMarket(market);\n      })\n      .catch(() => {\n        resetLabels();\n        setMarket(null);\n      })\n      .finally(() => setLoadingMarket(false));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [connection, marketId, programId]);\n\n  const resetLabels = () => {\n    setMarketLabel(null);\n    setBaseLabel(null);\n    setQuoteLabel(null);\n  };\n\n  const knownMarket = MARKETS.find(\n    (m) =>\n      m.address.toBase58() === marketId && m.programId.toBase58() === programId,\n  );\n  const knownProgram = MARKETS.find(\n    (m) => m.programId.toBase58() === programId,\n  );\n  const knownBaseCurrency =\n    market?.baseMintAddress &&\n    TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\n      ?.name;\n\n  const knownQuoteCurrency =\n    market?.quoteMintAddress &&\n    TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\n      ?.name;\n\n  const canSubmit =\n    !loadingMarket &&\n    !!market &&\n    market.publicKey.toBase58() === marketId &&\n    marketId &&\n    programId &&\n    marketLabel &&\n    (knownBaseCurrency || baseLabel) &&\n    (knownQuoteCurrency || quoteLabel) &&\n    wellFormedMarketId;\n\n  const onSubmit = () => {\n    if (!canSubmit) {\n      notify({\n        message: 'Please fill in all fields with valid values',\n        type: 'error',\n      });\n      return;\n    }\n\n    let params = {\n      address: marketId,\n      programId,\n      name: marketLabel,\n    };\n    if (!knownBaseCurrency) {\n      params.baseLabel = baseLabel;\n    }\n    if (!knownQuoteCurrency) {\n      params.quoteLabel = quoteLabel;\n    }\n    onAddCustomMarket(params);\n    onDoClose();\n  };\n\n  const onDoClose = () => {\n    resetLabels();\n    setMarket(null);\n    setMarketId(null);\n    onClose();\n  };\n\n  return (\n    <Modal\n      title={'Add custom market'}\n      visible={visible}\n      onOk={onSubmit}\n      okText={'Add'}\n      onCancel={onDoClose}\n      okButtonProps={{ disabled: !canSubmit }}\n    >\n      <div>\n        {wellFormedMarketId ? (\n          <>\n            {!market && !loadingMarket && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Not a valid market</Text>\n              </Row>\n            )}\n            {market && knownMarket && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"warning\">Market known: {knownMarket.name}</Text>\n              </Row>\n            )}\n            {market && !knownProgram && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Warning: unknown DEX program</Text>\n              </Row>\n            )}\n            {market && knownProgram && knownProgram.deprecated && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"warning\">Warning: deprecated DEX program</Text>\n              </Row>\n            )}\n          </>\n        ) : (\n          <>\n            {marketId && !wellFormedMarketId && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Invalid market ID</Text>\n              </Row>\n            )}\n          </>\n        )}\n        <Row style={{ marginBottom: 8 }}>\n          <Col span={24}>\n            <Input\n              placeholder=\"Market Id\"\n              value={marketId}\n              onChange={(e) => setMarketId(e.target.value)}\n              suffix={loadingMarket ? <LoadingOutlined /> : null}\n            />\n          </Col>\n        </Row>\n\n        <Row style={{ marginBottom: 8, marginTop: 8 }}>\n          <Col span={24}>\n            <Input\n              placeholder=\"Market Label\"\n              disabled={!market}\n              value={marketLabel}\n              onChange={(e) => setMarketLabel(e.target.value)}\n            />\n          </Col>\n        </Row>\n        <Row gutter={[8]} style={{ marginBottom: 8 }}>\n          <Col span={12}>\n            <Input\n              placeholder=\"Base label\"\n              disabled={!market || knownBaseCurrency}\n              value={knownBaseCurrency || baseLabel}\n              onChange={(e) => setBaseLabel(e.target.value)}\n            />\n            {market && !knownBaseCurrency && (\n              <div style={{ marginTop: 8 }}>\n                <Text type=\"warning\">Warning: unknown token</Text>\n              </div>\n            )}\n          </Col>\n          <Col span={12}>\n            <Input\n              placeholder=\"Quote label\"\n              disabled={!market || knownQuoteCurrency}\n              value={knownQuoteCurrency || quoteLabel}\n              onChange={(e) => setQuoteLabel(e.target.value)}\n            />\n            {market && !knownQuoteCurrency && (\n              <div style={{ marginTop: 8 }}>\n                <Text type=\"warning\">Warning: unknown token</Text>\n              </div>\n            )}\n          </Col>\n        </Row>\n      </div>\n    </Modal>\n  );\n}\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Col, Popover, Row, Select, Typography, Button } from 'antd';\nimport styled from 'styled-components';\nimport Orderbook from '../components/Orderbook';\nimport UserInfoTable from '../components/UserInfoTable';\nimport StandaloneBalancesDisplay from '../components/StandaloneBalancesDisplay';\nimport {\n  useMarket,\n  useMarketsList,\n  useUnmigratedDeprecatedMarkets,\n  getMarketInfos,\n} from '../utils/markets';\nimport TradeForm from '../components/TradeForm';\nimport TradesTable from '../components/TradesTable';\nimport LinkAddress from '../components/LinkAddress';\nimport DeprecatedMarketsInstructions from '../components/DeprecatedMarketsInstructions';\nimport {\n  InfoCircleOutlined,\n  PlusCircleOutlined,\n  DeleteOutlined,\n} from '@ant-design/icons';\nimport CustomMarketDialog from '../components/CustomMarketDialog';\nimport { notify } from '../utils/notifications';\n\nconst { Option, OptGroup } = Select;\n\nconst Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 16px 16px;\n  .borderNone .ant-select-selector {\n    border: none !important;\n  }\n`;\n\nexport default function TradePage() {\n  const {\n    market,\n    marketName,\n    customMarkets,\n    setCustomMarkets,\n    setMarketAddress,\n  } = useMarket();\n  const markets = useMarketsList();\n  const [handleDeprecated, setHandleDeprecated] = useState(false);\n  const [addMarketVisible, setAddMarketVisible] = useState(false);\n  const deprecatedMarkets = useUnmigratedDeprecatedMarkets();\n  const [dimensions, setDimensions] = useState({\n    height: window.innerHeight,\n    width: window.innerWidth,\n  });\n\n  useEffect(() => {\n    document.title = marketName ? `${marketName} — Serum` : 'Serum';\n  }, [marketName]);\n\n  const changeOrderRef = useRef<({ size, price }: {size?: number; price?: number;}) => void>();\n\n  useEffect(() => {\n    const handleResize = () => {\n      setDimensions({\n        height: window.innerHeight,\n        width: window.innerWidth,\n      });\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const width = dimensions?.width;\n  const componentProps = {\n    onChangeOrderRef: (ref) => (changeOrderRef.current = ref),\n    onPrice: useCallback(\n      (price) => changeOrderRef.current && changeOrderRef.current({ price }),\n      [],\n    ),\n    onSize: useCallback(\n      (size) => changeOrderRef.current && changeOrderRef.current({ size }),\n      [],\n    ),\n  };\n  const getComponent = useCallback(() => {\n    if (handleDeprecated) {\n      return (\n        <DeprecatedMarketsPage\n          switchToLiveMarkets={() => setHandleDeprecated(false)}\n        />\n      );\n    } else if (width < 1000) {\n      return <RenderSmaller {...componentProps} />;\n    } else if (width < 1450) {\n      return <RenderSmall {...componentProps} />;\n    } else {\n      return <RenderNormal {...componentProps} />;\n    }\n  }, [width, componentProps, handleDeprecated]);\n\n  const onAddCustomMarket = (customMarket) => {\n    const marketInfo = getMarketInfos(customMarkets).some(\n      (m) => m.address.toBase58() === customMarket.address,\n    );\n    if (marketInfo) {\n      notify({\n        message: `A market with the given ID already exists`,\n        type: 'error',\n      });\n      return;\n    }\n    const newCustomMarkets = [...customMarkets, customMarket];\n    setCustomMarkets(newCustomMarkets);\n    setMarketAddress(customMarket.address);\n  };\n\n  const onDeleteCustomMarket = (address) => {\n    const newCustomMarkets = customMarkets.filter((m) => m.address !== address);\n    setCustomMarkets(newCustomMarkets);\n  };\n\n  return (\n    <>\n      <CustomMarketDialog\n        visible={addMarketVisible}\n        onClose={() => setAddMarketVisible(false)}\n        onAddCustomMarket={onAddCustomMarket}\n      />\n      <Wrapper>\n        <Row\n          align=\"middle\"\n          style={{ paddingLeft: 5, paddingRight: 5 }}\n          gutter={16}\n        >\n          <Col>\n            <MarketSelector\n              markets={markets}\n              setHandleDeprecated={setHandleDeprecated}\n              placeholder={'Select market'}\n              customMarkets={customMarkets}\n              onDeleteCustomMarket={onDeleteCustomMarket}\n            />\n          </Col>\n          {market ? (\n            <Col>\n              <Popover\n                content={<LinkAddress address={market.publicKey.toBase58()} />}\n                placement=\"bottomRight\"\n                title=\"Market address\"\n                trigger=\"click\"\n              >\n                <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n              </Popover>\n            </Col>\n          ) : null}\n          <Col>\n            <PlusCircleOutlined\n              style={{ color: '#2abdd2' }}\n              onClick={() => setAddMarketVisible(true)}\n            />\n          </Col>\n          {deprecatedMarkets && deprecatedMarkets.length > 0 && (\n            <React.Fragment>\n              <Col>\n                <Typography>\n                  You have unsettled funds on old markets! Please go through\n                  them to claim your funds.\n                </Typography>\n              </Col>\n              <Col>\n                <Button onClick={() => setHandleDeprecated(!handleDeprecated)}>\n                  {handleDeprecated ? 'View new markets' : 'Handle old markets'}\n                </Button>\n              </Col>\n            </React.Fragment>\n          )}\n        </Row>\n        {getComponent()}\n      </Wrapper>\n    </>\n  );\n}\n\nfunction MarketSelector({\n  markets,\n  placeholder,\n  setHandleDeprecated,\n  customMarkets,\n  onDeleteCustomMarket,\n}) {\n  const { market, setMarketAddress } = useMarket();\n\n  const onSetMarketAddress = (marketAddress) => {\n    setHandleDeprecated(false);\n    setMarketAddress(marketAddress);\n  };\n\n  const extractBase = (a) => a.split('/')[0];\n  const extractQuote = (a) => a.split('/')[1];\n\n  const selectedMarket = getMarketInfos(customMarkets)\n    .find(\n      (proposedMarket) =>\n        market?.address && proposedMarket.address.equals(market.address),\n    )\n    ?.address?.toBase58();\n\n  return (\n    <Select\n      showSearch\n      size={'large'}\n      style={{ width: 200 }}\n      placeholder={placeholder || 'Select a market'}\n      optionFilterProp=\"name\"\n      onSelect={onSetMarketAddress}\n      listHeight={400}\n      value={selectedMarket}\n      filterOption={(input, option) =>\n        option?.name?.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      }\n    >\n      {customMarkets && customMarkets.length > 0 && (\n        <OptGroup label=\"Custom\">\n          {customMarkets.map(({ address, name }, i) => (\n            <Option\n              value={address}\n              key={address}\n              name={name}\n              style={{\n                padding: '10px',\n                // @ts-ignore\n                backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\n              }}\n            >\n              <Row>\n                <Col flex=\"auto\">{name}</Col>\n                {selectedMarket !== address && (\n                  <Col>\n                    <DeleteOutlined\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        e.nativeEvent.stopImmediatePropagation();\n                        onDeleteCustomMarket && onDeleteCustomMarket(address);\n                      }}\n                    />\n                  </Col>\n                )}\n              </Row>\n            </Option>\n          ))}\n        </OptGroup>\n      )}\n      <OptGroup label=\"Markets\">\n        {markets\n          .sort((a, b) =>\n            extractQuote(a.name) === 'USDT' && extractQuote(b.name) !== 'USDT'\n              ? -1\n              : extractQuote(a.name) !== 'USDT' &&\n                extractQuote(b.name) === 'USDT'\n              ? 1\n              : 0,\n          )\n          .sort((a, b) =>\n            extractBase(a.name) < extractBase(b.name)\n              ? -1\n              : extractBase(a.name) > extractBase(b.name)\n              ? 1\n              : 0,\n          )\n          .map(({ address, name, deprecated }, i) => (\n            <Option\n              value={address.toBase58()}\n              key={address}\n              name={name}\n              style={{\n                padding: '10px',\n                // @ts-ignore\n                backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\n              }}\n            >\n              {name} {deprecated ? ' (Deprecated)' : null}\n            </Option>\n          ))}\n      </OptGroup>\n    </Select>\n  );\n}\n\nconst DeprecatedMarketsPage = ({ switchToLiveMarkets }) => {\n  return (\n    <>\n      <Row>\n        <Col flex=\"auto\">\n          <DeprecatedMarketsInstructions\n            switchToLiveMarkets={switchToLiveMarkets}\n          />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst RenderNormal = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <Row\n      style={{\n        minHeight: '900px',\n        flexWrap: 'nowrap',\n      }}\n    >\n      <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n        <UserInfoTable />\n      </Col>\n      <Col flex={'360px'} style={{ height: '100%' }}>\n        <Orderbook smallScreen={false} onPrice={onPrice} onSize={onSize} />\n        <TradesTable smallScreen={false} />\n      </Col>\n      <Col\n        flex=\"400px\"\n        style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n      >\n        <TradeForm setChangeOrderRef={onChangeOrderRef} />\n        <StandaloneBalancesDisplay />\n      </Col>\n    </Row>\n  );\n};\n\nconst RenderSmall = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <>\n      <Row\n        style={{\n          height: '900px',\n        }}\n      >\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n          <Orderbook\n            smallScreen={true}\n            depth={13}\n            onPrice={onPrice}\n            onSize={onSize}\n          />\n        </Col>\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n          <TradesTable smallScreen={true} />\n        </Col>\n        <Col\n          flex=\"400px\"\n          style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n        >\n          <TradeForm setChangeOrderRef={onChangeOrderRef} />\n          <StandaloneBalancesDisplay />\n        </Col>\n      </Row>\n      <Row>\n        <Col flex=\"auto\">\n          <UserInfoTable />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst RenderSmaller = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <>\n      <Row>\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <TradeForm style={{ flex: 1 }} setChangeOrderRef={onChangeOrderRef} />\n        </Col>\n        <Col xs={24} sm={12}>\n          <StandaloneBalancesDisplay />\n        </Col>\n      </Row>\n      <Row\n        style={{\n          height: '500px',\n        }}\n      >\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <Orderbook smallScreen={true} onPrice={onPrice} onSize={onSize} />\n        </Col>\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <TradesTable smallScreen={true} />\n        </Col>\n      </Row>\n      <Row>\n        <Col flex=\"auto\">\n          <UserInfoTable />\n        </Col>\n      </Row>\n    </>\n  );\n};\n","import React from 'react';\nimport { useOpenOrdersForAllMarkets } from '../utils/markets';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport OpenOrderTable from '../components/UserInfoTable/OpenOrderTable';\n\nexport default function OpenOrdersPage() {\n  const [openOrders] = useOpenOrdersForAllMarkets();\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <OpenOrderTable openOrders={openOrders} />\n    </FloatingElement>\n  );\n}\n","import React from 'react';\nimport DataTable from '../layout/DataTable';\n\nexport default function WalletBalancesTable({\n  loaded = false,\n  walletBalances,\n}) {\n  const columns = [\n    {\n      title: 'Coin',\n      dataIndex: 'key',\n      key: 'key',\n    },\n    {\n      title: 'Wallet Balance',\n      dataIndex: 'wallet',\n      key: 'wallet',\n    },\n  ];\n  return (\n    <DataTable\n      emptyLabel=\"No balances\"\n      dataSource={walletBalances}\n      columns={columns}\n      pagination={false}\n      loading={!loaded}\n    />\n  );\n}\n","import { Button } from 'antd';\nimport React from 'react';\nimport DataTable from '../layout/DataTable';\nimport { useConnection } from '../../utils/connection';\nimport { useWallet } from '../../utils/wallet';\nimport { settleFunds } from '../../utils/send';\nimport { notify } from '../../utils/notifications';\n\nexport default function AccountsTable({ accountBalances }) {\n  const connection = useConnection();\n  const { wallet } = useWallet();\n\n  async function onSettleFunds(account) {\n    try {\n      const {\n        market,\n        openOrders,\n        baseCurrencyAccount,\n        quoteCurrencyAccount,\n      } = account;\n      return await settleFunds({\n        market,\n        openOrders,\n        connection,\n        wallet,\n        baseCurrencyAccount,\n        quoteCurrencyAccount,\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n    }\n  }\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'key',\n      key: 'key',\n    },\n    {\n      title: 'Orders',\n      dataIndex: 'orders',\n      key: 'orders',\n    },\n    {\n      title: 'Unsettled',\n      dataIndex: 'unsettled',\n      key: 'unsettled',\n    },\n    {\n      key: 'action',\n      render: (account) => (\n        <div style={{ textAlign: 'right' }}>\n          <Button\n            ghost\n            style={{ marginRight: 12 }}\n            onClick={() => onSettleFunds(account)}\n          >\n            Settle\n          </Button>\n        </div>\n      ),\n    },\n  ];\n  return (\n    <DataTable\n      emptyLabel=\"No balances\"\n      dataSource={accountBalances}\n      columns={columns.map((data) => ({\n        ...data,\n        key: `${data.market}${data.coin}`,\n      }))}\n      pagination={false}\n    />\n  );\n}\n","import React from 'react';\nimport { Tabs } from 'antd';\nimport {\n  useWalletBalancesForAllMarkets,\n  useOpenOrderAccountBalancesForAllMarkets,\n} from '../utils/markets';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport WalletBalancesTable from '../components/UserInfoTable/WalletBalancesTable';\nimport AccountsTable from '../components/UserInfoTable/AccountsTable';\n\nconst { TabPane } = Tabs;\n\nexport default function BalancesPage() {\n  const [\n    walletBalances,\n    loadedWalletBalances,\n  ] = useWalletBalancesForAllMarkets();\n  const [\n    accountBalances,\n    accountBalancesLoaded,\n  ] = useOpenOrderAccountBalancesForAllMarkets();\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <Tabs defaultActiveKey=\"walletBalances\">\n        <TabPane tab=\"Wallet Balances\" key=\"walletBalances\">\n          <WalletBalancesTable\n            loaded={loadedWalletBalances}\n            walletBalances={walletBalances}\n          />\n        </TabPane>\n        <TabPane tab=\"Market balances\" key=\"marketBalances\">\n          <AccountsTable\n            loaded={accountBalancesLoaded}\n            accountBalances={accountBalances}\n          />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n","import React, { useContext } from 'react';\nimport { useLocalStorageState } from './utils';\nimport { useInterval } from './useInterval';\nimport { useConnection } from './connection';\nimport { useWallet } from './wallet';\nimport {useAllMarkets, useTokenAccounts, useMarket, useSelectedTokenAccounts} from './markets';\nimport { settleAllFunds } from './send';\nimport {PreferencesContextValues} from \"./types\";\n\nconst PreferencesContext = React.createContext<PreferencesContextValues | null>(null);\n\nexport function PreferencesProvider({ children }) {\n  const [autoSettleEnabled, setAutoSettleEnabled] = useLocalStorageState(\n    'autoSettleEnabled',\n    false,\n  );\n\n  const [tokenAccounts] = useTokenAccounts();\n  const { connected, wallet } = useWallet();\n  const { customMarkets } = useMarket();\n  const marketList = useAllMarkets(customMarkets);\n  const connection = useConnection();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n\n  useInterval(() => {\n    const autoSettle = async () => {\n      const markets = marketList.map((m) => m.market);\n      try {\n        console.log('Auto settling');\n        await settleAllFunds({ connection, wallet, tokenAccounts: (tokenAccounts || []), markets, selectedTokenAccounts });\n      } catch (e) {\n        console.log('Error auto settling funds: ' + e.message);\n      }\n    };\n\n    connected && wallet?.autoApprove && autoSettleEnabled && autoSettle();\n  }, 10000);\n\n  return (\n    <PreferencesContext.Provider\n      value={{\n        autoSettleEnabled,\n        setAutoSettleEnabled,\n      }}\n    >\n      {children}\n    </PreferencesContext.Provider>\n  );\n}\n\nexport function usePreferences() {\n  const context = useContext(PreferencesContext);\n  if (!context) {\n    throw new Error('Missing preferences context')\n  }\n  return {\n    autoSettleEnabled: context.autoSettleEnabled,\n    setAutoSettleEnabled: context.setAutoSettleEnabled,\n  };\n}\n","import React from 'react';\nimport { Switch, Typography } from 'antd';\nimport { usePreferences } from '../utils/preferences';\n\nconst { Paragraph } = Typography;\n\nexport default function Settings({ autoApprove }) {\n  const { autoSettleEnabled, setAutoSettleEnabled } = usePreferences();\n\n  return (\n    <div>\n      <Switch\n        style={{ marginRight: 10 }}\n        disabled={!autoApprove}\n        checked={autoApprove && autoSettleEnabled}\n        onChange={setAutoSettleEnabled}\n      />{' '}\n      Auto settle\n      {!autoApprove && (\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)', marginTop: 10 }}>\n          To use auto settle, first enable auto approval in your wallet\n        </Paragraph>\n      )}\n    </div>\n  );\n}\n","import React, {useState} from \"react\";\nimport {Col, Input, Modal, Row} from \"antd\";\nimport {EndpointInfo} from \"../utils/types\";\n\nexport default function CustomClusterEndpointDialog({\n  visible,\n  testingConnection,\n  onAddCustomEndpoint,\n  onClose,\n} : {\n  visible: boolean;\n  testingConnection: boolean;\n  onAddCustomEndpoint: (info: EndpointInfo) => void;\n  onClose?: () => void;\n}) {\n  const [ customEndpoint, setCustomEndpoint] = useState('');\n  const [ customEndpointName, setCustomEndpointName] = useState('');\n\n  const onSubmit = () => {\n    const fullEndpoint = 'https://' + customEndpoint;\n    const params = {\n      name: customEndpointName,\n      endpoint: fullEndpoint,\n      custom: true,\n    }\n    onAddCustomEndpoint(params);\n    onDoClose();\n  };\n  const onDoClose = () => {\n    setCustomEndpoint('')\n    setCustomEndpointName('')\n    onClose && onClose();\n  };\n  const canSubmit = customEndpoint !== '' && customEndpointName !== '';\n\n  return (\n    <Modal\n      title={'Add custom endpoint'}\n      visible={visible}\n      onOk={onSubmit}\n      okText={'Add'}\n      onCancel={onDoClose}\n      okButtonProps={{ disabled: !canSubmit, loading: testingConnection }}\n    >\n      <Row style={{ marginBottom: 8 }}>\n        <Col span={24}>\n          <Input\n            placeholder=\"Cluster Name\"\n            value={customEndpointName}\n            onChange={(e) => setCustomEndpointName(e.target.value)}\n          />\n        </Col>\n      </Row>\n      <Row style={{ marginBottom: 8 }}>\n        <Col span={24}>\n          <Input\n            placeholder=\"Cluster Endpoint\"\n            value={customEndpoint}\n            addonBefore={'https://'}\n            onChange={(e) => setCustomEndpoint(e.target.value)}\n          />\n        </Col>\n      </Row>\n    </Modal>\n  );\n}\n","import {InfoCircleOutlined, PlusCircleOutlined, SettingOutlined, UserOutlined,} from '@ant-design/icons';\nimport {Button, Col, Menu, Popover, Row, Select} from 'antd';\nimport React, {useCallback, useEffect, useState} from 'react';\nimport {useHistory, useLocation} from 'react-router-dom';\nimport logo from '../assets/logo.svg';\nimport styled from 'styled-components';\nimport {useWallet, WALLET_PROVIDERS} from '../utils/wallet';\nimport {ENDPOINTS, useConnectionConfig} from '../utils/connection';\nimport LinkAddress from './LinkAddress';\nimport Settings from './Settings';\nimport CustomClusterEndpointDialog from \"./CustomClusterEndpointDialog\";\nimport {EndpointInfo} from \"../utils/types\";\nimport {notify} from \"../utils/notifications\";\nimport {Connection} from \"@solana/web3.js\";\n\nconst Wrapper = styled.div`\n  background-color: #0d1017;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  padding: 0px 30px;\n  flex-wrap: wrap;\n`;\nconst LogoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  color: #2abdd2;\n  font-weight: bold;\n  cursor: pointer;\n  img {\n    height: 30px;\n    margin-right: 8px;\n  }\n`;\n\nconst EXTERNAL_LINKS = {\n  '/learn': 'https://serum-academy.com/en/serum-dex/',\n  '/add-market': 'https://serum-academy.com/en/add-market/',\n  '/wallet-support': 'https://serum-academy.com/en/wallet-support',\n  '/dex-list': 'https://serum-academy.com/en/dex-list/',\n  '/developer-resources': 'https://serum-academy.com/en/developer-resources/',\n  '/explorer': 'https://explorer.solana.com',\n  '/srm-faq': 'https://projectserum.com/srm-faq',\n}\n\nexport default function TopBar() {\n  const { connected, wallet, providerUrl, setProvider } = useWallet();\n  const { endpoint, endpointInfo, setEndpoint, availableEndpoints, setCustomEndpoints } = useConnectionConfig();\n  const [ addEndpointVisible, setAddEndpointVisible ] = useState(false)\n  const [ testingConnection, setTestingConnection] = useState(false)\n  const location = useLocation();\n  const history = useHistory();\n\n  const publicKey = wallet?.publicKey?.toBase58();\n\n  const handleClick = useCallback(\n    (e) => {\n      if (!(e.key in EXTERNAL_LINKS)) {\n        history.push(e.key);\n      }\n    },\n    [history],\n  );\n\n  const onAddCustomEndpoint = (info: EndpointInfo) => {\n    const existingEndpoint = availableEndpoints.some(\n      (e) => e.endpoint === info.endpoint,\n    );\n    if (existingEndpoint) {\n      notify({\n        message: `An endpoint with the given url already exists`,\n        type: 'error',\n      });\n      return;\n    }\n\n    const handleError = (e) => {\n      console.log(`Connection to ${info.endpoint} failed: ${e}`)\n      notify({\n        message: `Failed to connect to ${info.endpoint}`,\n        type: 'error',\n      });\n    }\n\n    try {\n      const connection = new Connection(info.endpoint, 'recent');\n      connection.getEpochInfo().then(result => {\n        setTestingConnection(true);\n        console.log(`testing connection to ${info.endpoint}`);\n        const newCustomEndpoints = [...availableEndpoints.filter(e => e.custom), info];\n        setEndpoint(info.endpoint);\n        setCustomEndpoints(newCustomEndpoints);\n      }).catch(handleError);\n    } catch (e) {\n      handleError(e);\n    } finally {\n      setTestingConnection(false);\n    }\n  }\n\n  const endpointInfoCustom = endpointInfo && endpointInfo.custom\n  useEffect(() => {\n    const handler = () => {\n      if (endpointInfoCustom) {\n        setEndpoint(ENDPOINTS[0].endpoint)\n      }\n    }\n    window.addEventListener(\"beforeunload\", handler)\n    return () => window.removeEventListener(\"beforeunload\", handler)\n  }, [endpointInfoCustom, setEndpoint])\n\n  return (\n    <>\n      <CustomClusterEndpointDialog\n        visible={addEndpointVisible}\n        testingConnection={testingConnection}\n        onAddCustomEndpoint={onAddCustomEndpoint}\n        onClose={() => setAddEndpointVisible(false)}\n      />\n      <Wrapper>\n        <LogoWrapper>\n          <img src={logo} alt=\"\" onClick={() => history.push('/')} />\n          {'SERUM'}\n        </LogoWrapper>\n        <Menu\n          mode=\"horizontal\"\n          onClick={handleClick}\n          selectedKeys={[location.pathname]}\n          style={{\n            borderBottom: 'none',\n            backgroundColor: 'transparent',\n            display: 'flex',\n            alignItems: 'flex-end',\n            flex: 1,\n          }}\n        >\n          <Menu.Item key=\"/\">TRADE</Menu.Item>\n          <Menu.SubMenu title=\"LEARN\" onTitleClick={() => window.open(EXTERNAL_LINKS['/learn'], '_blank')}>\n            <Menu.Item key=\"/add-market\">\n              <a href={EXTERNAL_LINKS['/add-market']} target=\"_blank\" rel=\"noopener noreferrer\">\n                Adding a market\n              </a>\n            </Menu.Item>\n            <Menu.Item key=\"/wallet-support\">\n              <a href={EXTERNAL_LINKS['/wallet-support']} target=\"_blank\" rel=\"noopener noreferrer\">\n                Supported wallets\n              </a>\n            </Menu.Item>\n            <Menu.Item key=\"/dex-list\">\n              <a href={EXTERNAL_LINKS['/dex-list']} target=\"_blank\" rel=\"noopener noreferrer\">\n                DEX list\n              </a>\n            </Menu.Item>\n            <Menu.Item key=\"/developer-resources\">\n              <a href={EXTERNAL_LINKS['/developer-resources']} target=\"_blank\" rel=\"noopener noreferrer\">\n                Developer resources\n              </a>\n            </Menu.Item>\n            <Menu.Item key=\"/explorer\">\n              <a href={EXTERNAL_LINKS['/explorer']} target=\"_blank\" rel=\"noopener noreferrer\">\n                Solana block explorer\n              </a>\n            </Menu.Item>\n            <Menu.Item key=\"/srm-faq\">\n              <a href={EXTERNAL_LINKS['/srm-faq']} target=\"_blank\" rel=\"noopener noreferrer\">\n                SRM FAQ\n              </a>\n            </Menu.Item>\n          </Menu.SubMenu>\n        </Menu>\n        <div>\n          <Row\n            align=\"middle\"\n            style={{ paddingLeft: 5, paddingRight: 5 }}\n            gutter={16}\n          >\n            <Col>\n              <PlusCircleOutlined\n                style={{ color: '#2abdd2' }}\n                onClick={() => setAddEndpointVisible(true)}\n              />\n            </Col>\n             <Col>\n              <Popover\n                content={endpoint}\n                placement=\"bottomRight\"\n                title=\"URL\"\n                trigger=\"hover\"\n              >\n                <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n              </Popover>\n            </Col>\n            <Col>\n              <Select\n                onSelect={setEndpoint}\n                value={endpoint}\n                style={{ marginRight: 8, width: '150px' }}\n              >\n                {availableEndpoints.map(({ name, endpoint }) => (\n                  <Select.Option value={endpoint} key={endpoint}>\n                    {name}\n                  </Select.Option>\n                ))}\n              </Select>\n            </Col>\n          </Row>\n        </div>\n        {connected && (\n          <div>\n            <Popover\n              content={<Settings autoApprove={wallet?.autoApprove} />}\n              placement=\"bottomRight\"\n              title=\"Settings\"\n              trigger=\"click\"\n            >\n              <Button style={{ marginRight: 8 }}>\n                <SettingOutlined />\n                Settings\n              </Button>\n            </Popover>\n          </div>\n        )}\n        <div>\n          <Select onSelect={setProvider} value={providerUrl}>\n            {WALLET_PROVIDERS.map(({ name, url }) => (\n              <Select.Option value={url} key={url}>\n                {name}\n              </Select.Option>\n            ))}\n          </Select>\n        </div>\n        <div>\n          <Button\n            type=\"text\"\n            size=\"large\"\n            onClick={connected ? wallet.disconnect : wallet.connect}\n            style={{ color: '#2abdd2' }}\n          >\n            <UserOutlined />\n            {!connected ? 'Connect wallet' : 'Disconnect'}\n          </Button>\n          {connected && (\n            <Popover\n              content={<LinkAddress address={publicKey} />}\n              placement=\"bottomRight\"\n              title=\"Wallet public key\"\n              trigger=\"click\"\n            >\n              <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n            </Popover>\n          )}\n        </div>\n      </Wrapper>\n    </>\n  );\n}\n","export const helpUrls = {\n  customerSupport: 'https://t.me/ProjectSerum',\n  customerSupportZh: 'https://t.me/ProjectSerum_Chinese',\n  contactEmail: 'mailto:contact@projectserum.com',\n  discord: 'https://discord.gg/MxZFT4v',\n  telegram: 'https://t.me/ProjectSerum',\n  github: 'https://github.com/project-serum',\n  projectSerum: 'https://projectserum.com/',\n  developerResources: 'https://projectserum.com/developer-resources',\n  solanaBeach: 'https://solanabeach.io',\n};\n","import React from 'react';\nimport { Layout, Row, Col, Grid } from 'antd';\nimport Link from './Link';\nimport { helpUrls } from './HelpUrls';\nconst { Footer } = Layout;\nconst { useBreakpoint } = Grid;\n\nconst footerElements = [\n  {\n    description: 'Serum Developer Resources',\n    link: helpUrls.developerResources,\n  },\n  { description: 'Discord', link: helpUrls.discord },\n  { description: 'Telegram', link: helpUrls.telegram },\n  { description: 'GitHub', link: helpUrls.github },\n  { description: 'Project Serum', link: helpUrls.projectSerum },\n  { description: 'Solana Network', link: helpUrls.solanaBeach },\n];\n\nexport const CustomFooter = () => {\n  const smallScreen = !useBreakpoint().lg;\n\n  return (\n    <Footer\n      style={{\n        height: '45px',\n        paddingBottom: 10,\n        paddingTop: 10,\n      }}\n    >\n      <Row align=\"middle\" gutter={[16, 4]}>\n        {!smallScreen && (\n          <>\n            <Col flex=\"auto\" />\n            {footerElements.map((elem, index) => {\n              return (\n                <Col key={index + ''}>\n                  <Link external to={elem.link}>\n                    {elem.description}\n                  </Link>\n                </Col>\n              );\n            })}\n          </>\n        )}\n        <Col flex=\"auto\">{/*  <DexProgramSelector />*/}</Col>\n      </Row>\n    </Footer>\n  );\n};\n","import { Layout } from 'antd';\nimport React from 'react';\nimport TopBar from './TopBar';\nimport { CustomFooter as Footer } from './Footer';\nconst { Header, Content } = Layout;\n\nexport default function BasicLayout({ children }) {\n  return (\n    <React.Fragment>\n      <Layout\n        style={{ display: 'flex', minHeight: '100vh', flexDirection: 'column' }}\n      >\n        <Header style={{ padding: 0, minHeight: 64, height: 'unset' }}>\n          <TopBar />\n        </Header>\n        <Content style={{ flex: 1 }}>{children}</Content>\n        <Footer />\n      </Layout>\n    </React.Fragment>\n  );\n}\n","import React, { useState } from 'react';\nimport { Button, Form, Input, Tooltip, Typography } from 'antd';\nimport { notify } from '../utils/notifications';\nimport { isValidPublicKey } from '../utils/utils';\nimport { PublicKey } from '@solana/web3.js';\nimport { MARKETS, TokenInstructions } from '@project-serum/serum';\nimport { useAccountInfo, useConnection } from '../utils/connection';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport styled from 'styled-components';\nimport { parseTokenMintData } from '../utils/tokens';\nimport { useWallet } from '../utils/wallet';\nimport { listMarket } from '../utils/send';\nimport Link from '../components/Link';\n\nconst { Text, Title } = Typography;\n\nconst Wrapper = styled.div`\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nexport default function ListNewMarketPage() {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [baseMintInput, baseMintInfo] = useMintInput(\n    'baseMint',\n    <Text>\n      Base Token Mint Address{' '}\n      <Text type=\"secondary\">\n        (e.g. BTC solana address: {<Text type=\"secondary\" code>9n4nbM75f5Ui33ZbPYXn59EwSgE8CGsHtAeTH5YFeJ9E</Text>})\n      </Text>\n    </Text>,\n    'The base token is the token being traded. For example, the base token of a BTC/USDT market is BTC.',\n  );\n  const [quoteMintInput, quoteMintInfo] = useMintInput(\n    'quoteMint',\n    <Text>\n      Quote Token Mint Address{' '}\n      <Text type=\"secondary\">\n        (e.g. USDT solana address: {<Text type=\"secondary\" code>BQcdHdAQW1hczDbBi9hiegXAR7A98Q9jx3X3iBBBDiq4</Text>})\n      </Text>\n    </Text>,\n    'The quote token is the token used to price trades. For example, the quote token of a BTC/USDT market is USDT.',\n  );\n  const [lotSize, setLotSize] = useState('1');\n  const [tickSize, setTickSize] = useState('0.01');\n  const dexProgramId = MARKETS.find(({ deprecated }) => !deprecated).programId;\n  const [submitting, setSubmitting] = useState(false);\n\n  const [listedMarket, setListedMarket] = useState(null);\n\n  let baseLotSize;\n  let quoteLotSize;\n  if (baseMintInfo && parseFloat(lotSize) > 0) {\n    baseLotSize = Math.round(10 ** baseMintInfo.decimals * parseFloat(lotSize));\n    if (quoteMintInfo && parseFloat(tickSize) > 0) {\n      quoteLotSize = Math.round(\n        parseFloat(lotSize) *\n          10 ** quoteMintInfo.decimals *\n          parseFloat(tickSize),\n      );\n    }\n  }\n\n  const canSubmit =\n    connected &&\n    !!baseMintInfo &&\n    !!quoteMintInfo &&\n    !!baseLotSize &&\n    !!quoteLotSize;\n\n  async function onSubmit() {\n    if (!canSubmit) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const marketAddress = await listMarket({\n        connection,\n        wallet,\n        baseMint: baseMintInfo.address,\n        quoteMint: quoteMintInfo.address,\n        baseLotSize,\n        quoteLotSize,\n        dexProgramId,\n      });\n      setListedMarket(marketAddress);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error listing new market: ' + e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <Wrapper>\n      <FloatingElement>\n        <Title level={4}>List New Market</Title>\n        <Form\n          labelCol={{ span: 24 }}\n          wrapperCol={{ span: 24 }}\n          layout={\"vertical\"}\n          onFinish={onSubmit}\n        >\n          {baseMintInput}\n          {quoteMintInput}\n          <Form.Item\n            label={\n              <Tooltip title=\"Smallest allowed order size. For a BTC/USDT market, this would be in units of BTC.\">\n                Minimum Order Size <Text type=\"secondary\">(Lot size in e.g. BTC)</Text>\n              </Tooltip>\n            }\n            name=\"lotSize\"\n            initialValue=\"1\"\n            validateStatus={\n              baseMintInfo && quoteMintInfo\n                ? baseLotSize\n                  ? 'success'\n                  : 'error'\n                : null\n            }\n            hasFeedback={baseMintInfo && quoteMintInfo}\n          >\n            <Input\n              value={lotSize}\n              onChange={(e) => setLotSize(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Tooltip title=\"Smallest amount by which prices can move. For a BTC/USDT market, this would be in units of USDT.\">\n                Tick Size <Text type=\"secondary\">(Price increment in e.g. USDT)</Text>\n              </Tooltip>\n            }\n            name=\"tickSize\"\n            initialValue=\"0.01\"\n            validateStatus={\n              baseMintInfo && quoteMintInfo\n                ? quoteLotSize\n                  ? 'success'\n                  : 'error'\n                : null\n            }\n            hasFeedback={baseMintInfo && quoteMintInfo}\n          >\n            <Input\n              value={tickSize}\n              onChange={(e) => setTickSize(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <Form.Item label=\" \" colon={false}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              disabled={!canSubmit}\n              loading={submitting}\n            >\n              {connected ? 'Submit' : 'Not connected to wallet'}\n            </Button>\n          </Form.Item>\n        </Form>\n      </FloatingElement>\n      {listedMarket ? (\n        <FloatingElement>\n          <Text>New market address: {listedMarket.toBase58()}</Text>\n        </FloatingElement>\n      ) : null}\n    </Wrapper>\n  );\n}\n\nfunction useMintInput(name, label, tooltip) {\n  const [address, setAddress] = useState('');\n  const [accountInfo, loaded] = useAccountInfo(\n    isValidPublicKey(address) ? new PublicKey(address) : null,\n  );\n\n  let validateStatus = null;\n  let hasFeedback = false;\n  let help = null;\n  let mintInfo = null;\n  if (address) {\n    hasFeedback = true;\n    if (accountInfo) {\n      if (\n        accountInfo.owner.equals(TokenInstructions.TOKEN_PROGRAM_ID) &&\n        accountInfo.data.length === 82\n      ) {\n        let parsed = parseTokenMintData(accountInfo.data);\n        if (parsed.initialized) {\n          validateStatus = 'success';\n          mintInfo = {\n            address: new PublicKey(address),\n            decimals: parsed.decimals,\n          };\n        } else {\n          validateStatus = 'error';\n          help = 'Invalid SPL mint';\n        }\n      } else {\n        validateStatus = 'error';\n        help = 'Invalid SPL mint address';\n      }\n    } else if (isValidPublicKey(address) && !loaded) {\n      validateStatus = 'loading';\n    } else {\n      validateStatus = 'error';\n      help = 'Invalid Solana address';\n    }\n  }\n\n  const input = (\n    <Form.Item\n      label={\n        <Tooltip\n          title={\n            <>\n              {tooltip} You can look up token mint addresses on{' '}\n              <Link external to=\"https://sollet.io\">\n                sollet.io\n              </Link>\n              .\n            </>\n          }\n        >\n          {label}\n        </Tooltip>\n      }\n      name={name}\n      validateStatus={validateStatus}\n      hasFeedback={hasFeedback}\n      help={help}\n    >\n      <Input\n        value={address}\n        onChange={(e) => setAddress(e.target.value.trim())}\n      />\n    </Form.Item>\n  );\n\n  return [input, mintInfo];\n}\n","import { HashRouter, Route } from 'react-router-dom';\nimport TradePage from './pages/TradePage';\nimport OpenOrdersPage from './pages/OpenOrdersPage';\nimport React from 'react';\nimport BalancesPage from './pages/BalancesPage';\nimport BasicLayout from './components/BasicLayout';\nimport ListNewMarketPage from './pages/ListNewMarketPage';\n\nexport function Routes() {\n  return (\n    <HashRouter basename={'/'}>\n      <Route exact path=\"/\" component={TradePageContents} />\n      <Route exact path=\"/orders\" component={OpenOrdersPageContents} />\n      <Route exact path=\"/balances\" component={BalancesPageContents} />\n      <Route exact path=\"/list-new-market\">\n        <BasicLayout>\n          <ListNewMarketPage />\n        </BasicLayout>\n      </Route>\n    </HashRouter>\n  );\n}\n\nfunction TradePageContents() {\n  return (\n    <BasicLayout>\n      <TradePage />\n    </BasicLayout>\n  );\n}\n\nfunction OpenOrdersPageContents() {\n  return (\n    <BasicLayout>\n      <OpenOrdersPage />\n    </BasicLayout>\n  );\n}\n\nfunction BalancesPageContents() {\n  return (\n    <BasicLayout>\n      <BalancesPage />\n    </BasicLayout>\n  );\n}\n","import React, { Suspense } from 'react';\nimport './App.less';\nimport { ConnectionProvider } from './utils/connection';\nimport { MarketProvider } from './utils/markets';\nimport { WalletProvider } from './utils/wallet';\nimport { GlobalStyle } from './global_style';\nimport { Spin } from 'antd';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { Routes } from './routes';\nimport { PreferencesProvider } from './utils/preferences';\n\nexport default function App() {\n  return (\n    <Suspense fallback={() => <Spin size=\"large\" />}>\n      <GlobalStyle />\n      <ErrorBoundary>\n        <ConnectionProvider>\n          <MarketProvider>\n            <WalletProvider>\n              <PreferencesProvider>\n                <Suspense fallback={() => <Spin size=\"large\" />}>\n                  <Routes />\n                </Suspense>\n              </PreferencesProvider>\n            </WalletProvider>\n          </MarketProvider>\n        </ConnectionProvider>\n      </ErrorBoundary>\n    </Suspense>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useContext, useEffect, useMemo, useState } from 'react';\nimport Wallet from '@project-serum/sol-wallet-adapter';\nimport { notify } from './notifications';\nimport { useConnectionConfig } from './connection';\nimport { useLocalStorageState } from './utils';\nimport {WalletContextValues} from \"./types\";\n\nexport const WALLET_PROVIDERS = [\n  { name: 'sollet.io', url: 'https://www.sollet.io' },\n];\n\nconst WalletContext = React.createContext<null | WalletContextValues>(null);\n\nexport function WalletProvider({ children }) {\n  const { endpoint } = useConnectionConfig();\n\n  const [savedProviderUrl, setProviderUrl] = useLocalStorageState(\n    'walletProvider',\n    'https://www.sollet.io',\n  );\n  let providerUrl;\n  if (!savedProviderUrl) {\n    providerUrl = 'https://www.sollet.io';\n  } else {\n    providerUrl = savedProviderUrl;\n  }\n\n  const wallet = useMemo(() => new Wallet(providerUrl, endpoint), [\n    providerUrl,\n    endpoint,\n  ]);\n\n  const [connected, setConnected] = useState(false);\n\n  useEffect(() => {\n    console.log('trying to connect');\n    wallet.on('connect', () => {\n      console.log('connected');\n      setConnected(true);\n      let walletPublicKey = wallet.publicKey.toBase58();\n      let keyToDisplay =\n        walletPublicKey.length > 20\n          ? `${walletPublicKey.substring(0, 7)}.....${walletPublicKey.substring(\n              walletPublicKey.length - 7,\n              walletPublicKey.length,\n            )}`\n          : walletPublicKey;\n      notify({\n        message: 'Wallet update',\n        description: 'Connected to wallet ' + keyToDisplay,\n      });\n    });\n    wallet.on('disconnect', () => {\n      setConnected(false);\n      notify({\n        message: 'Wallet update',\n        description: 'Disconnected from wallet',\n      });\n    });\n    return () => {\n      wallet.disconnect();\n      setConnected(false);\n    };\n  }, [wallet]);\n\n  return (\n    <WalletContext.Provider\n      value={{\n        wallet,\n        connected,\n        providerUrl,\n        setProviderUrl,\n        providerName:\n          WALLET_PROVIDERS.find(({ url }) => url === providerUrl)?.name ??\n          providerUrl,\n      }}\n    >\n      {children}\n    </WalletContext.Provider>\n  );\n}\n\nexport function useWallet() {\n  const context = useContext(WalletContext);\n  if (!context) {\n    throw new Error('Missing wallet context')\n  }\n  return {\n    connected: context.connected,\n    wallet: context.wallet,\n    providerUrl: context.providerUrl,\n    setProvider: context.setProviderUrl,\n    providerName: context.providerName,\n  };\n}\n","import {useEffect, useReducer} from 'react';\n\nimport assert from 'assert';\n\nconst pageLoadTime = new Date();\n\nconst globalCache: Map<any, any> = new Map();\n\nclass FetchLoopListener<T = any> {\n  cacheKey: any;\n  fn: () => Promise<T>;\n  refreshInterval: number;\n  refreshIntervalOnError: number | null;\n  callback: () => void;\n\n  constructor(\n      cacheKey: any,\n      fn: () => Promise<T>,\n      refreshInterval: number,\n      refreshIntervalOnError: number | null,\n      callback: () => void\n  ) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.refreshInterval = refreshInterval;\n    this.refreshIntervalOnError = refreshIntervalOnError;\n    this.callback = callback;\n  }\n}\n\nclass FetchLoopInternal<T = any> {\n  cacheKey: any;\n  fn: () => Promise<T>;\n  timeoutId: null | any;\n  listeners: Set<FetchLoopListener<T>>;\n  errors: number;\n\n  constructor(cacheKey, fn) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.timeoutId = null;\n    this.listeners = new Set();\n    this.errors = 0;\n  }\n\n  get refreshInterval(): number {\n    return Math.min(\n      ...[...this.listeners].map((listener) => listener.refreshInterval),\n    );\n  }\n\n  get refreshIntervalOnError(): number | null {\n    const refreshIntervalsOnError: number[] = [...this.listeners]\n        .map((listener) => listener.refreshIntervalOnError)\n        .filter((x): x is number => x !== null);\n    if (refreshIntervalsOnError.length === 0) {\n      return null;\n    }\n    return Math.min(\n      ...refreshIntervalsOnError,\n    );\n  }\n\n  get stopped(): boolean {\n    return this.listeners.size === 0;\n  }\n\n  addListener(listener: FetchLoopListener<T>): void {\n    const previousRefreshInterval = this.refreshInterval;\n    this.listeners.add(listener);\n    if (this.refreshInterval < previousRefreshInterval) {\n      this.refresh();\n    }\n  }\n\n  removeListener(listener: FetchLoopListener<T>): void {\n    assert(this.listeners.delete(listener));\n    if (this.stopped) {\n      if (this.timeoutId) {\n        clearTimeout(this.timeoutId);\n        this.timeoutId = null;\n      }\n    }\n  }\n\n  notifyListeners(): void {\n    this.listeners.forEach((listener) => listener.callback());\n  }\n\n  refresh = async () => {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    }\n    if (this.stopped) {\n      return;\n    }\n\n    let errored = false;\n    try {\n      const data = await this.fn();\n      globalCache.set(this.cacheKey, data);\n      this.errors = 0;\n      this.notifyListeners();\n      return data;\n    } catch (error) {\n      ++this.errors;\n      console.warn(error);\n      errored = true;\n    } finally {\n      if (!this.timeoutId && !this.stopped) {\n        let waitTime = this.refreshInterval;\n        if (\n          errored &&\n          this.refreshIntervalOnError &&\n          this.refreshIntervalOnError > 0\n        ) {\n          waitTime = this.refreshIntervalOnError;\n        }\n\n        // Back off on errors.\n        if (this.errors > 0) {\n          waitTime = Math.min(1000 * 2 ** (this.errors - 1), 60000);\n        }\n\n        // Don't do any refreshing for the first five seconds, to make way for other things to load.\n        const timeSincePageLoad = +new Date() - +pageLoadTime;\n        if (timeSincePageLoad < 5000) {\n          waitTime += 5000 - timeSincePageLoad / 2;\n        }\n\n        // Refresh background pages slowly.\n        if (document.visibilityState === 'hidden') {\n          waitTime = 60000;\n        } else if (!document.hasFocus()) {\n          waitTime *= 1.5;\n        }\n\n        // Add jitter so we don't send all requests at the same time.\n        waitTime *= 0.8 + 0.4 * Math.random();\n\n        this.timeoutId = setTimeout(this.refresh, waitTime);\n      }\n    }\n  };\n}\n\nclass FetchLoops {\n  loops = new Map();\n\n  addListener<T>(listener: FetchLoopListener<T>) {\n    if (!this.loops.has(listener.cacheKey)) {\n      this.loops.set(\n        listener.cacheKey,\n        new FetchLoopInternal<T>(listener.cacheKey, listener.fn),\n      );\n    }\n    this.loops.get(listener.cacheKey).addListener(listener);\n  }\n\n  removeListener<T>(listener: FetchLoopListener<T>) {\n    const loop = this.loops.get(listener.cacheKey);\n    loop.removeListener(listener);\n    if (loop.stopped) {\n      this.loops.delete(listener.cacheKey);\n    }\n  }\n\n  refresh(cacheKey) {\n    if (this.loops.has(cacheKey)) {\n      this.loops.get(cacheKey).refresh();\n    }\n  }\n\n  refreshAll() {\n    return Promise.all([...this.loops.values()].map((loop) => loop.refresh()));\n  }\n}\nconst globalLoops = new FetchLoops();\n\nexport function useAsyncData<T = any>(\n  asyncFn: () => Promise<T>,\n  cacheKey: any,\n  { refreshInterval = 60000, refreshIntervalOnError = null } = {},\n): [null | undefined | T, boolean] {\n  const [, rerender] = useReducer((i) => i + 1, 0);\n\n  useEffect(() => {\n    if (!cacheKey) {\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      return () => {};\n    }\n    const listener = new FetchLoopListener<T>(\n      cacheKey,\n      asyncFn,\n      refreshInterval,\n      refreshIntervalOnError,\n      rerender,\n    );\n    globalLoops.addListener(listener);\n    return () => globalLoops.removeListener(listener);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey, refreshInterval]);\n\n  if (!cacheKey) {\n    return [null, false];\n  }\n\n  const loaded = globalCache.has(cacheKey);\n  const data = loaded ? globalCache.get(cacheKey) : undefined;\n  return [data, loaded];\n}\n\nexport function refreshCache(cacheKey: any, clearCache = false): void {\n  if (clearCache) {\n    globalCache.delete(cacheKey);\n  }\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.refresh();\n    if (clearCache) {\n      loop.notifyListeners();\n    }\n  }\n}\n\nexport function refreshAllCaches(): void {\n  for (const loop of globalLoops.loops.values()) {\n    loop.refresh();\n  }\n}\n\nexport function setCache(cacheKey: any, value: any, { initializeOnly = false } = {}): void {\n  if (initializeOnly && globalCache.has(cacheKey)) {\n    return;\n  }\n  globalCache.set(cacheKey, value);\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.notifyListeners();\n  }\n}\n","import { notify } from './notifications';\nimport { getDecimalCount, sleep } from './utils';\nimport { getSelectedTokenAccountForMint } from './markets';\nimport {\n  Account, Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction, TransactionSignature,\n} from '@solana/web3.js';\nimport { BN } from 'bn.js';\nimport {\n  DexInstructions,\n  Market,\n  TOKEN_MINTS,\n  TokenInstructions,\n  OpenOrders,\n} from '@project-serum/serum';\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\nimport {SelectedTokenAccounts, TokenAccount} from \"./types\";\nimport {Order} from \"@project-serum/serum/lib/market\";\n\nexport async function createTokenAccountTransaction({\n  connection,\n  wallet,\n  mintPublicKey,\n} : {\n  connection: Connection;\n  wallet: Wallet;\n  mintPublicKey: PublicKey;\n}): Promise<{\n  transaction: Transaction;\n  signer: Account;\n  newAccountPubkey: PublicKey;\n}> {\n  const newAccount = new Account();\n  const transaction = SystemProgram.createAccount({\n    fromPubkey: wallet.publicKey,\n    newAccountPubkey: newAccount.publicKey,\n    lamports: await connection.getMinimumBalanceForRentExemption(165),\n    space: 165,\n    programId: TokenInstructions.TOKEN_PROGRAM_ID,\n  });\n  transaction.add(\n    TokenInstructions.initializeAccount({\n      account: newAccount.publicKey,\n      mint: mintPublicKey,\n      owner: wallet.publicKey,\n    }),\n  );\n  return {\n    transaction,\n    signer: newAccount,\n    newAccountPubkey: newAccount.publicKey,\n  };\n}\n\nexport async function settleFunds({\n  market,\n  openOrders,\n  connection,\n  wallet,\n  baseCurrencyAccount,\n  quoteCurrencyAccount,\n} : {\n  market: Market;\n  openOrders: OpenOrders;\n  connection: Connection;\n  wallet: Wallet;\n  baseCurrencyAccount: TokenAccount;\n  quoteCurrencyAccount: TokenAccount;\n}): Promise<string | undefined> {\n  if (\n    !market ||\n    !wallet ||\n    !connection ||\n    !openOrders ||\n    (!baseCurrencyAccount && !quoteCurrencyAccount)\n  ) {\n    notify({ message: 'Not connected' });\n    return;\n  }\n\n  let createAccountTransaction: Transaction | undefined;\n  let createAccountSigner: Account | undefined;\n  let baseCurrencyAccountPubkey = baseCurrencyAccount?.pubkey;\n  let quoteCurrencyAccountPubkey = quoteCurrencyAccount?.pubkey;\n\n  if (!baseCurrencyAccountPubkey) {\n    const result = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.baseMintAddress,\n    });\n    baseCurrencyAccountPubkey = result?.newAccountPubkey;\n    createAccountTransaction = result?.transaction;\n    createAccountSigner = result?.signer;\n  }\n  if (!quoteCurrencyAccountPubkey) {\n    const result = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.quoteMintAddress,\n    });\n    quoteCurrencyAccountPubkey = result?.newAccountPubkey;\n    createAccountTransaction = result?.transaction;\n    createAccountSigner = result?.signer;\n  }\n  let referrerQuoteWallet: PublicKey | null = null;\n  if (market.supportsReferralFees) {\n    const usdt = TOKEN_MINTS.find(({ name }) => name === 'USDT')\n    const usdc = TOKEN_MINTS.find(({ name }) => name === 'USDC')\n    if (\n      process.env.REACT_APP_USDT_REFERRAL_FEES_ADDRESS &&\n      usdt &&\n      market.quoteMintAddress.equals(usdt.address)\n    ) {\n      referrerQuoteWallet = new PublicKey(\n        process.env.REACT_APP_USDT_REFERRAL_FEES_ADDRESS,\n      );\n    } else if (\n      process.env.REACT_APP_USDC_REFERRAL_FEES_ADDRESS &&\n      usdc &&\n      market.quoteMintAddress.equals(usdc.address)\n    ) {\n      referrerQuoteWallet = new PublicKey(\n        process.env.REACT_APP_USDC_REFERRAL_FEES_ADDRESS,\n      );\n    }\n  }\n  const {\n    transaction: settleFundsTransaction,\n    signers: settleFundsSigners,\n  } = await market.makeSettleFundsTransaction(\n    connection,\n    openOrders,\n    baseCurrencyAccountPubkey,\n    quoteCurrencyAccountPubkey,\n    referrerQuoteWallet,\n  );\n\n  let transaction = mergeTransactions([\n    createAccountTransaction,\n    settleFundsTransaction,\n  ]);\n  let signers = createAccountSigner\n    ? [...settleFundsSigners, createAccountSigner]\n    : settleFundsSigners;\n\n  return await sendTransaction({\n    transaction,\n    signers,\n    wallet,\n    connection,\n    sendingMessage: 'Settling funds...',\n  });\n}\n\nexport async function settleAllFunds({\n  connection,\n  wallet,\n  tokenAccounts,\n  markets,\n  selectedTokenAccounts,\n} : {\n  connection: Connection;\n  wallet: Wallet;\n  tokenAccounts: TokenAccount[];\n  markets: Market[];\n  selectedTokenAccounts?: SelectedTokenAccounts;\n}) {\n  if (!markets || !wallet || !connection || !tokenAccounts) {\n    return;\n  }\n\n  const programIds: PublicKey[] = [];\n  markets\n    .reduce((cumulative, m) => {\n      // @ts-ignore\n      cumulative.push(m._programId);\n      return cumulative;\n    }, [])\n    .forEach((programId) => {\n      if (!programIds.find((p) => p.equals(programId))) {\n        programIds.push(programId);\n      }\n    });\n\n  const getOpenOrdersAccountsForProgramId = async (programId) => {\n    const openOrdersAccounts = await OpenOrders.findForOwner(\n      connection,\n      wallet.publicKey,\n      programId,\n    );\n    return openOrdersAccounts.filter(\n      (openOrders) =>\n        openOrders.baseTokenFree.toNumber() ||\n        openOrders.quoteTokenFree.toNumber(),\n    );\n  };\n\n  const openOrdersAccountsForProgramIds = await Promise.all(\n    programIds.map((programId) => getOpenOrdersAccountsForProgramId(programId)),\n  );\n  const openOrdersAccounts = openOrdersAccountsForProgramIds.reduce(\n    (accounts, current) => accounts.concat(current),\n    [],\n  );\n\n  const settleTransactions = (await Promise.all(\n    openOrdersAccounts.map((openOrdersAccount) => {\n      const market = markets.find((m) =>\n        // @ts-ignore\n        m._decoded?.ownAddress?.equals(openOrdersAccount.market),\n      );\n      const baseMint = market?.baseMintAddress;\n      const quoteMint = market?.quoteMintAddress;\n\n      const selectedBaseTokenAccount = getSelectedTokenAccountForMint(\n        tokenAccounts,\n        baseMint,\n        baseMint && selectedTokenAccounts && selectedTokenAccounts[baseMint.toBase58()]\n      )?.pubkey;\n      const selectedQuoteTokenAccount = getSelectedTokenAccountForMint(\n        tokenAccounts,\n        quoteMint,\n        quoteMint && selectedTokenAccounts && selectedTokenAccounts[quoteMint.toBase58()]\n      )?.pubkey;\n      if (!selectedBaseTokenAccount || !selectedQuoteTokenAccount) {\n        return null;\n      }\n      return (\n        market &&\n        market.makeSettleFundsTransaction(\n          connection,\n          openOrdersAccount,\n          selectedBaseTokenAccount,\n          selectedQuoteTokenAccount,\n        )\n      );\n    }),\n  )).filter((x): x is {signers: [PublicKey | Account]; transaction: Transaction} => !!x);\n  if (!settleTransactions || settleTransactions.length === 0) return;\n\n  const transactions = settleTransactions.slice(0, 4).map((t) => t.transaction);\n  const signers: Array<Account | PublicKey> = [];\n  settleTransactions\n    .reduce((cumulative: Array<Account | PublicKey>, t) => cumulative.concat(t.signers), [])\n    .forEach((signer) => {\n      if (!signers.find((s) => {\n        if (s.constructor.name !== signer.constructor.name) {\n          return false;\n        } else if (s.constructor.name === 'PublicKey') {\n          // @ts-ignore\n          return s.equals(signer);\n        } else {\n          // @ts-ignore\n          return s.publicKey.equals(signer.publicKey);\n        }\n      })) {\n        signers.push(signer);\n      }\n    });\n\n  const transaction = mergeTransactions(transactions);\n\n  return await sendTransaction({\n    transaction,\n    signers,\n    wallet,\n    connection,\n  });\n}\n\nexport async function cancelOrder(params: {market: Market; connection: Connection; wallet: Wallet; order: Order;}) {\n  return cancelOrders({ ...params, orders: [params.order] });\n}\n\nexport async function cancelOrders({ market, wallet, connection, orders }: {\n  market: Market;\n  wallet: Wallet;\n  connection: Connection;\n  orders: Order[];\n}) {\n  const transaction = market.makeMatchOrdersTransaction(5);\n  orders.forEach((order) => {\n    transaction.add(\n      market.makeCancelOrderInstruction(connection, wallet.publicKey, order),\n    );\n  });\n  transaction.add(market.makeMatchOrdersTransaction(5));\n  return await sendTransaction({\n    transaction,\n    wallet,\n    connection,\n    sendingMessage: 'Sending cancel...',\n  });\n}\n\nexport async function placeOrder({\n  side,\n  price,\n  size,\n  orderType,\n  market,\n  connection,\n  wallet,\n  baseCurrencyAccount,\n  quoteCurrencyAccount,\n}: {\n  side: \"buy\" | \"sell\";\n  price: number;\n  size: number;\n  orderType: \"ioc\" | \"postOnly\" | \"limit\";\n  market: Market | undefined | null;\n  connection: Connection;\n  wallet: Wallet;\n  baseCurrencyAccount: PublicKey | undefined;\n  quoteCurrencyAccount: PublicKey | undefined;\n}) {\n  let formattedMinOrderSize =\n    market?.minOrderSize?.toFixed(getDecimalCount(market.minOrderSize)) ||\n    market?.minOrderSize;\n  let formattedTickSize =\n    market?.tickSize?.toFixed(getDecimalCount(market.tickSize)) ||\n    market?.tickSize;\n  const isIncrement = (num, step) =>\n    Math.abs((num / step) % 1) < 1e-5 ||\n    Math.abs(((num / step) % 1) - 1) < 1e-5;\n  if (isNaN(price)) {\n    notify({ message: 'Invalid price', type: 'error' });\n    return;\n  }\n  if (isNaN(size)) {\n    notify({ message: 'Invalid size', type: 'error' });\n    return;\n  }\n  if (!wallet || !wallet.publicKey) {\n    notify({ message: 'Connect wallet', type: 'error' });\n    return;\n  }\n  if (!market) {\n    notify({ message: 'Invalid  market', type: 'error' });\n    return;\n  }\n  if (!isIncrement(size, market.minOrderSize)) {\n    notify({\n      message: `Size must be an increment of ${formattedMinOrderSize}`,\n      type: 'error',\n    });\n    return;\n  }\n  if (size < market.minOrderSize) {\n    notify({ message: 'Size too small', type: 'error' });\n    return;\n  }\n  if (!isIncrement(price, market.tickSize)) {\n    notify({\n      message: `Price must be an increment of ${formattedTickSize}`,\n      type: 'error',\n    });\n    return;\n  }\n  if (price < market.tickSize) {\n    notify({ message: 'Price under tick size', type: 'error' });\n    return;\n  }\n  const owner = wallet.publicKey;\n\n  const payer = side === 'sell' ? baseCurrencyAccount : quoteCurrencyAccount;\n  if (!payer) {\n    notify({\n      message: 'Need an SPL token account for cost currency',\n      type: 'error',\n    });\n    return;\n  }\n  const params = {\n    owner,\n    payer,\n    side,\n    price,\n    size,\n    orderType,\n  };\n  console.log(params);\n\n  const transaction = market.makeMatchOrdersTransaction(5);\n  let {\n    transaction: placeOrderTx,\n    signers,\n  } = await market.makePlaceOrderTransaction(\n    connection,\n    params,\n    10_000,\n    10_000,\n  );\n  transaction.add(placeOrderTx);\n  transaction.add(market.makeMatchOrdersTransaction(5));\n\n  return await sendTransaction({\n    transaction,\n    wallet,\n    connection,\n    signers,\n    sendingMessage: 'Sending order...',\n  });\n}\n\nexport async function listMarket({\n  connection,\n  wallet,\n  baseMint,\n  quoteMint,\n  baseLotSize,\n  quoteLotSize,\n  dexProgramId,\n} : {\n  connection: Connection;\n  wallet: Wallet;\n  baseMint: PublicKey;\n  quoteMint: PublicKey;\n  baseLotSize: number;\n  quoteLotSize: number;\n  dexProgramId: PublicKey;\n}) {\n  const market = new Account();\n  const requestQueue = new Account();\n  const eventQueue = new Account();\n  const bids = new Account();\n  const asks = new Account();\n  const baseVault = new Account();\n  const quoteVault = new Account();\n  const feeRateBps = 0;\n  const quoteDustThreshold = new BN(100);\n\n  async function getVaultOwnerAndNonce() {\n    const nonce = new BN(0);\n    while (true) {\n      try {\n        const vaultOwner = await PublicKey.createProgramAddress(\n          [market.publicKey.toBuffer(), nonce.toArrayLike(Buffer, 'le', 8)],\n          dexProgramId,\n        );\n        return [vaultOwner, nonce];\n      } catch (e) {\n        nonce.iaddn(1);\n      }\n    }\n  }\n  const [vaultOwner, vaultSignerNonce] = await getVaultOwnerAndNonce();\n\n  const tx1 = new Transaction();\n  tx1.add(\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: baseVault.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(165),\n      space: 165,\n      programId: TokenInstructions.TOKEN_PROGRAM_ID,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: quoteVault.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(165),\n      space: 165,\n      programId: TokenInstructions.TOKEN_PROGRAM_ID,\n    }),\n    TokenInstructions.initializeAccount({\n      account: baseVault.publicKey,\n      mint: baseMint,\n      owner: vaultOwner,\n    }),\n    TokenInstructions.initializeAccount({\n      account: quoteVault.publicKey,\n      mint: quoteMint,\n      owner: vaultOwner,\n    }),\n  );\n\n  const tx2 = new Transaction();\n  tx2.add(\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: market.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(\n        Market.getLayout(dexProgramId).span,\n      ),\n      space: Market.getLayout(dexProgramId).span,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: requestQueue.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(5120 + 12),\n      space: 5120 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: eventQueue.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(262144 + 12),\n      space: 262144 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: bids.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(65536 + 12),\n      space: 65536 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: asks.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(65536 + 12),\n      space: 65536 + 12,\n      programId: dexProgramId,\n    }),\n    DexInstructions.initializeMarket({\n      market: market.publicKey,\n      requestQueue: requestQueue.publicKey,\n      eventQueue: eventQueue.publicKey,\n      bids: bids.publicKey,\n      asks: asks.publicKey,\n      baseVault: baseVault.publicKey,\n      quoteVault: quoteVault.publicKey,\n      baseMint,\n      quoteMint,\n      baseLotSize: new BN(baseLotSize),\n      quoteLotSize: new BN(quoteLotSize),\n      feeRateBps,\n      vaultSignerNonce,\n      quoteDustThreshold,\n      programId: dexProgramId,\n    }),\n  );\n\n  const signedTransactions = await Promise.all([\n    signTransaction({\n      transaction: tx1,\n      wallet,\n      connection,\n      signers: [wallet.publicKey, baseVault, quoteVault],\n    }),\n    signTransaction({\n      transaction: tx2,\n      wallet,\n      connection,\n      signers: [wallet.publicKey, market, requestQueue, eventQueue, bids, asks],\n    }),\n  ]);\n  for (let signedTransaction of signedTransactions) {\n    await sendSignedTransaction({\n      signedTransaction,\n      connection,\n    });\n  }\n\n  return market.publicKey;\n}\n\nconst getUnixTs = () => {\n  return new Date().getTime() / 1000;\n};\n\nconst DEFAULT_TIMEOUT = 15000;\n\nasync function sendTransaction({\n  transaction,\n  wallet,\n  signers = [wallet.publicKey],\n  connection,\n  sendingMessage = 'Sending transaction...',\n  sentMessage = 'Transaction sent',\n  successMessage = 'Transaction confirmed',\n  timeout = DEFAULT_TIMEOUT,\n} : {\n  transaction: Transaction;\n  wallet: Wallet;\n  signers?: Array<PublicKey | Account>;\n  connection: Connection;\n  sendingMessage?: string;\n  sentMessage?: string;\n  successMessage?: string;\n  timeout?: number;\n}): Promise<string> {\n  const signedTransaction = await signTransaction({\n    transaction,\n    wallet,\n    signers,\n    connection,\n  });\n  return await sendSignedTransaction({\n    signedTransaction,\n    connection,\n    sendingMessage,\n    sentMessage,\n    successMessage,\n    timeout,\n  });\n}\n\nasync function signTransaction({\n  transaction,\n  wallet,\n  signers = [wallet.publicKey],\n  connection,\n} : {\n  transaction: Transaction;\n  wallet: Wallet;\n  signers: Array<Account | PublicKey>;\n  connection: Connection;\n}) {\n  transaction.recentBlockhash = (\n    await connection.getRecentBlockhash('max')\n  ).blockhash;\n  transaction.signPartial(...signers);\n  return await wallet.signTransaction(transaction);\n}\n\nasync function sendSignedTransaction({\n  signedTransaction,\n  connection,\n  sendingMessage = 'Sending transaction...',\n  sentMessage = 'Transaction sent',\n  successMessage = 'Transaction confirmed',\n  timeout = DEFAULT_TIMEOUT,\n} : {\n  signedTransaction: Transaction;\n  connection: Connection;\n  sendingMessage?: string;\n  sentMessage?: string;\n  successMessage?: string;\n  timeout?: number;\n}): Promise<string> {\n  const rawTransaction = signedTransaction.serialize();\n  const startTime = getUnixTs();\n  notify({ message: sendingMessage });\n  const txid: TransactionSignature = await connection.sendRawTransaction(rawTransaction, {\n    skipPreflight: true,\n  });\n  notify({ message: sentMessage, type: 'success', txid });\n\n  console.log('Started awaiting confirmation for', txid);\n\n  let done = false;\n  (async () => {\n    while (!done && getUnixTs() - startTime < timeout) {\n      connection.sendRawTransaction(rawTransaction, {\n        skipPreflight: true,\n      });\n      await sleep(300);\n    }\n  })();\n  try {\n    await awaitTransactionSignatureConfirmation(txid, timeout, connection);\n  } catch (err) {\n    if (err.timeout) {\n      throw new Error('Timed out awaiting confirmation on transaction');\n    }\n    throw new Error('Transaction failed');\n  } finally {\n    done = true;\n  }\n  notify({ message: successMessage, type: 'success', txid });\n\n  console.log('Latency', txid, getUnixTs() - startTime);\n  return txid;\n}\n\nasync function awaitTransactionSignatureConfirmation(\n  txid: TransactionSignature,\n  timeout: number,\n  connection: Connection,\n) {\n  let done = false;\n  const result = await new Promise((resolve, reject) => {\n    (async () => {\n      setTimeout(() => {\n        if (done) {\n          return;\n        }\n        done = true;\n        console.log('Timed out for txid', txid);\n        reject({ timeout: true });\n      }, timeout);\n      try {\n        connection.onSignature(\n          txid,\n          (result) => {\n            console.log('WS confirmed', txid, result);\n            done = true;\n            if (result.err) {\n              reject(result.err);\n            } else {\n              resolve(result);\n            }\n          },\n          'recent',\n        );\n        console.log('Set up WS connection', txid);\n      } catch (e) {\n        done = true;\n        console.log('WS error in setup', txid, e);\n      }\n      while (!done) {\n        // eslint-disable-next-line no-loop-func\n        (async () => {\n          try {\n            const signatureStatuses = await connection.getSignatureStatuses([\n              txid,\n            ]);\n            const result = signatureStatuses && signatureStatuses.value[0];\n            if (!done) {\n              if (!result) {\n                console.log('REST null result for', txid, result);\n              } else if (result.err) {\n                console.log('REST error for', txid, result);\n                done = true;\n                reject(result.err);\n              } else if (!result.confirmations) {\n                console.log('REST no confirmations for', txid, result);\n              } else {\n                console.log('REST confirmation for', txid, result);\n                done = true;\n                resolve(result);\n              }\n            }\n          } catch (e) {\n            if (!done) {\n              console.log('REST connection error: txid', txid, e);\n            }\n          }\n        })();\n        await sleep(300);\n      }\n    })();\n  });\n  done = true;\n  return result;\n}\n\nfunction mergeTransactions(transactions: (Transaction | undefined)[]) {\n  const transaction = new Transaction();\n  transactions\n    .filter((t): t is Transaction => t !== undefined)\n    .forEach((t) => {\n      transaction.add(t);\n    });\n  return transaction;\n}\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nexport default function Link({ external = false, ...props }) {\n  let { to, children, ...rest } = props;\n  if (external) {\n    return (\n      <a href={to} target=\"_blank\" rel=\"noopener noreferrer\" {...rest}>\n        {children}\n      </a>\n    );\n  }\n  return (\n    <RouterLink to={to} {...rest}>\n      {children}\n    </RouterLink>\n  );\n}\n"],"sourceRoot":""}