{"version":3,"sources":["wallet-adapters/ledger/core.ts","assets/logo.svg","utils/utils.tsx","utils/fetch-loop.tsx","utils/connection.tsx","components/Link.js","utils/notifications.tsx","wallet-adapters/types.ts","wallet-adapters/ledger/index.tsx","wallet-adapters/phantom/index.tsx","wallet-adapters/math/index.tsx","wallet-adapters/solflare-extension/index.tsx","utils/wallet.tsx","wallet-adapters/sollet-extension/index.tsx","global_style.ts","components/ErrorBoundary.jsx","utils/send.tsx","utils/tokens.tsx","utils/bonfidaConnector.tsx","utils/markets.tsx","utils/useInterval.tsx","components/layout/FloatingElement.jsx","components/Orderbook.jsx","utils/usePrevious.tsx","components/layout/DataTable.jsx","utils/referrer.tsx","components/UserInfoTable/BalancesTable.jsx","components/UserInfoTable/OpenOrderTable.tsx","components/UserInfoTable/FillsTable.jsx","components/UserInfoTable/FeesTable.js","components/UserInfoTable/index.jsx","components/DepositDialog.jsx","components/StandaloneTokenAccountSelect.tsx","components/LinkAddress.tsx","utils/preferences.tsx","components/StandaloneBalancesDisplay.tsx","components/TradeForm.tsx","components/TradesTable.tsx","components/DeprecatedMarketsInstructions.js","components/CustomMarketDialog.jsx","charting_library/charting_library.esm.js","components/TradingView/saveLoadAdapter.tsx","components/TradingView/index.tsx","pages/TradePage.tsx","components/WalletConnect.tsx","pages/OpenOrdersPage.tsx","components/UserInfoTable/WalletBalancesTable.tsx","pages/BalancesPage.tsx","components/ConvertForm.tsx","pages/ConvertPage.tsx","components/Settings.jsx","components/CustomClusterEndpointDialog.tsx","components/AppSearch.tsx","components/TopBar.tsx","components/HelpUrls.ts","components/Footer.tsx","components/BasicLayout.js","components/useMintInput.tsx","pages/ListNewMarketPage.jsx","pages/pools/NewPoolPage.tsx","components/MintName.tsx","pages/pools/PoolPage/PoolBasketDisplay.tsx","pages/pools/PoolPage/PoolInfoPanel.tsx","pages/pools/PoolPage/PoolCreateRedeemPanel.tsx","pages/pools/PoolPage/PoolBalancesPanel.tsx","pages/pools/PoolPage/PoolAdminPanel.tsx","pages/pools/PoolPage/index.tsx","pages/pools/PoolListPage.tsx","routes.tsx","App.tsx","serviceWorker.js","index.js"],"names":["ledgerSend","transport","instruction","p1","payload","a","p2","payloadOffset","length","chunk","slice","console","log","toString","send","Error","reply","harden","n","getSolanaDerivationPath","account","change","undefined","derivationPath","Buffer","alloc","offset","writeUInt8","writeUInt32BE","signTransaction","transaction","messageBytes","serializeMessage","signBytes","bytes","numPaths","concat","getPublicKey","publicKeyBytes","PublicKey","module","exports","isValidPublicKey","key","sleep","ms","Promise","resolve","setTimeout","percentFormat","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","floorToDecimal","value","decimals","Math","floor","roundToDecimal","round","getDecimalCount","isNaN","includes","split","parseInt","divideBnToNumber","numerator","denominator","quotient","div","toNumber","rem","umod","gcd","getTokenMultiplierFromDecimals","BN","pow","localStorageListeners","useLocalStorageStringState","defaultState","state","localStorage","getItem","useState","notify","useEffect","push","filter","listener","setState","useCallback","newState","removeItem","setItem","forEach","useLocalStorageState","JSON","stringify","stringState","setStringState","useMemo","parse","abbreviateAddress","address","size","base58","toBase58","isEqual","obj1","obj2","keys","Object","k","pageLoadTime","Date","globalCache","Map","FetchLoopListener","cacheKey","fn","refreshInterval","refreshIntervalOnError","callback","cacheNullValues","this","FetchLoopInternal","timeoutId","listeners","errors","refresh","clearTimeout","stopped","errored","data","set","notifyListeners","warn","waitTime","min","timeSincePageLoad","document","visibilityState","hasFocus","random","Set","map","refreshIntervalsOnError","x","previousRefreshInterval","add","assert","delete","globalLoops","loops","has","get","addListener","loop","removeListener","all","values","useAsyncData","asyncFn","useReducer","i","rerender","loaded","refreshCache","clearCache","refreshAllCaches","ENDPOINTS","name","endpoint","custom","accountListenerCount","ConnectionContext","React","createContext","ConnectionProvider","children","setEndpoint","customEndpoints","setCustomEndpoints","availableEndpoints","connection","Connection","sendConnection","id","onAccountChange","Account","publicKey","removeAccountChangeListener","onSlotChange","removeSlotChangeListener","Provider","useConnection","context","useContext","useSendConnection","useConnectionConfig","endpointInfo","find","info","useAccountInfo","tuple","getAccountInfo","accountInfo","count","previousInfo","subscriptionId","equals","lamports","initializeOnly","setCache","currentItem","previousInfoRef","useRef","current","useAccountData","Link","external","props","to","rest","href","target","rel","message","description","txid","type","placement","color","notification","opacity","backgroundColor","DEFAULT_PUBLIC_KEY","LedgerWalletAdapter","_connecting","_publicKey","_transport","transactions","result","signed","signature","addSignature","TransportWebUSB","create","emit","disconnect","close","EventEmitter","PhantomWalletAdapter","_handleConnect","args","_handleDisconnect","connect","bind","window","solana","isPhantom","_provider","isConnected","autoApprove","signAllTransactions","open","on","MathWalletAdapter","_onProcess","_connected","isMathWallet","getAccount","then","catch","finally","SolflareExtensionWalletAdapter","off","solflare","isSolflare","ASSET_URL","WALLET_PROVIDERS","url","icon","adapter","_","network","sollet","Wallet","WalletContext","WalletProvider","autoConnect","setAutoConnect","providerUrl","setProviderUrl","provider","wallet","setWallet","updateWallet","readyState","removeEventListener","addEventListener","connected","setConnected","walletPublicKey","substring","isModalVisible","setIsModalVisible","select","providerName","title","okText","visible","okButtonProps","display","onCancel","width","onClick","alt","height","src","marginRight","textAlign","marginBottom","useWallet","setProvider","GlobalStyle","createGlobalStyle","Title","Typography","ErrorBoundary","hasError","level","error","Component","createTokenAccountTransaction","mintPublicKey","Token","getAssociatedTokenAddress","ASSOCIATED_TOKEN_PROGRAM_ID","TOKEN_PROGRAM_ID","ata","Transaction","createAssociatedTokenAccountInstruction","newAccountPubkey","settleFunds","market","openOrders","baseCurrencyAccount","quoteCurrencyAccount","sendNotification","usdcRef","usdtRef","baseCurrencyAccountPubkey","pubkey","quoteCurrencyAccountPubkey","baseMintAddress","createAccountTransaction","quoteMintAddress","referrerQuoteWallet","supportsReferralFees","usdt","TOKEN_MINTS","usdc","makeSettleFundsTransaction","settleFundsTransaction","settleFundsSigners","signers","mergeTransactions","sendTransaction","sendingMessage","settleAllFunds","tokenAccounts","markets","selectedTokenAccounts","programIds","reduce","cumulative","m","_programId","programId","p","getOpenOrdersAccountsForProgramId","OpenOrders","findForOwner","openOrdersAccounts","baseTokenFree","quoteTokenFree","openOrdersAccountsForProgramIds","accounts","openOrdersAccount","_decoded","ownAddress","isZero","baseMint","quoteMint","selectedBaseTokenAccount","getSelectedTokenAccountForMint","selectedQuoteTokenAccount","settleTransactions","t","signer","s","cancelOrder","params","cancelOrders","orders","order","makeMatchOrdersTransaction","makeCancelOrderInstruction","placeOrder","side","price","orderType","feeDiscountPubkey","formattedMinOrderSize","minOrderSize","toFixed","formattedTickSize","tickSize","isIncrement","num","step","abs","owner","payer","matchOrderstransaction","startTime","getUnixTs","makePlaceOrderTransaction","placeOrderTx","placeOrderSigners","endTime","listMarket","getVaultOwnerAndNonce","nonce","createProgramAddress","toBuffer","toArrayLike","dexProgramId","vaultOwner","iaddn","baseLotSize","quoteLotSize","requestQueue","eventQueue","bids","asks","baseVault","quoteVault","feeRateBps","quoteDustThreshold","vaultSignerNonce","tx1","SystemProgram","getMinimumBalanceForRentExemption","TokenInstructions","fromPubkey","space","createAccount","initializeAccount","mint","tx2","Market","getLayout","span","DexInstructions","initializeMarket","authority","signTransactions","transactionsAndSigners","signedTransactions","signedTransaction","sendSignedTransaction","getTime","sentMessage","successMessage","timeout","getRecentBlockhash","recentBlockhash","blockhash","setSigners","partialSign","rawTransaction","serialize","sendRawTransaction","skipPreflight","done","awaitTransactionSignatureConfirmation","simulateResult","simulateTransaction","err","logs","line","startsWith","parsedErrorInfo","parseInstructionErrorResponse","parsedError","reject","onSignature","e","getSignatureStatuses","signatureStatuses","confirmations","resultDescription","AccountInfoResult","struct","executable","rentEpoch","GetMultipleAccountsAndContextRpcResult","array","union","jsonRpcVersion","literal","jsonrpc","jsonRpcResult","slot","getMultipleSolanaAccounts","publicKeys","commitment","_rpcRequest","unsafeRes","res","join","from","fromEntries","_recentBlockhash","_disableBlockhashCaching","signData","wireTransaction","_serialize","encodedTransaction","encoding","ACCOUNT_LAYOUT","BufferLayout","MINT_LAYOUT","parseTokenAccountData","decode","amount","parseTokenMintData","initialized","supply","getOwnedAccountsFilters","memcmp","offsetOf","dataSize","getOwnedTokenAccounts","filters","getProgramAccounts","resp","getTokenAccountInfo","ownerAddress","splAccounts","parsedSplAccounts","effectiveMint","WRAPPED_SOL_MINT","useMintToTickers","customMarkets","useCustomMarkets","useMintInfos","useTokenAccounts","useAllMarkets","allMarkets","allMints","marketInfo","uniqueMints","stringMint","mintInfos","entries","BonfidaApi","path","fetch","URL","response","ok","json","responseJson","success","marketAddress","USE_MARKETS","MARKETS","getMarketInfos","load","marketName","_VERY_SLOW_REFRESH_INTERVAL","useUnmigratedOpenOrdersAccounts","deprecatedOpenOrdersAccounts","deprecatedProgramIds","Array","deprecated","publicKeyStr","baseTokenTotal","quoteTokenTotal","some","MarketContext","DEFAULT_MARKET","getMarketDetails","otherMarket","baseCurrency","token","baseLabel","quoteCurrency","quoteLabel","setCustomMarkets","MarketProvider","setMarketAddress","marketInfos","setMarket","getTradePageUrl","saved","useSelectedTokenAccounts","useMarket","useMarkPrice","markPrice","setMarkPrice","useOrderbook","orderbook","trades","limit","_useUnfilteredTrades","eventFlags","maker","trade","useTrades","bb","Number","ba","last","sort","b","getUnfilteredTrades","loadFills","useOrderbookAccounts","bidData","askData","bidOrderbook","Orderbook","askOrderbook","depth","getL2","useOpenOrdersAccounts","fast","getOpenOrdersAccounts","findOpenOrdersAccountsForOwner","useSelectedOpenOrdersAccount","selectedPubKey","filtered","useSelectedQuoteCurrencyAccount","mintAddress","useSelectedBaseCurrencyAccount","useSelectedQuoteCurrencyBalances","quoteSplSizeToNumber","useSelectedBaseCurrencyBalances","baseSplSizeToNumber","useLocallyStoredFeeDiscountKey","storedFeeDiscountKey","setStoredFeeDiscountKey","useFeeDiscountKeys","findFeeDiscountKeys","feeDiscountKey","useAllOpenOrdersBalances","useMarketInfos","stringProgramId","flat","useAllOpenOrdersAccounts","loadedOpenOrdersAccounts","mintInfosConnected","marketsByAddress","openOrdersBalances","baseMintInfo","baseFree","baseTotal","quoteMintInfo","quoteFree","quoteTotal","free","total","useBalances","baseCurrencyBalances","quoteCurrencyBalances","baseExists","quoteExists","coin","sub","unsettled","useUnmigratedDeprecatedMarkets","marketsList","deps","getMarket","openOrdersList","customMarketsInfo","getMarketOrderPrice","cost","tickSizeDecimals","isBids","costAtLevel","spentCost","sendPrice","getExpectedFillPrice","sizeAtLevel","avgPrice","totalAvgPrice","useInterval","delay","savedCallback","setInterval","clearInterval","Wrapper","styled","FloatingElement","stretchVertical","SizeTitle","Row","MarkPriceTitle","Line","css","Price","smallScreen","onPrice","onSize","currentOrderbookData","lastOrderbookData","orderbookData","setOrderbookData","getCumulativeOrderbookSide","totalSize","backwards","cumulativeSize","sizePercent","reverse","sum","index","bidsToDisplay","asksToDisplay","flex","overflow","OrderbookRow","onPriceClick","onSizeClick","MarkPriceComponent","memo","element","classList","contains","remove","formattedSize","formattedPrice","ref","data-width","data-bgcolor","prevProps","nextProps","previousMarkPrice","usePrevious","markPriceColor","formattedMarkPrice","justify","ArrowUpOutlined","ArrowDownOutlined","DataTable","dataSource","columns","emptyLabel","pagination","loading","pageSize","renderEmpty","padding","justifyContent","alignItems","ReferrerContext","USDC_MINT","USDT_MINT","findAssociatedTokenAddress","walletAddress","tokenMintAddress","findProgramAddress","SOL_TLD_AUTHORITY","getInputKey","input","getHashedName","hashed_input_name","getNameAccountKey","inputDomainKey","hashedInputName","ReferrerProvider","allowRefLink","process","REACT_APP_ALLOW_REF_LINK","refCode","setRefCode","setUsdc","setUsdt","usdcAddress","usdtAddress","REACT_APP_USDC_REFERRAL_FEES_ADDRESS","REACT_APP_USDT_REFERRAL_FEES_ADDRESS","replace","NameRegistryState","retrieve","nameRegistryState","getTwitterRegistry","usdcAccountInfo","usdtAccountInfo","useFeesAccountsFromRefCode","useReferrer","BalancesTable","balances","showMarket","hideWalletBalance","onSettleSuccess","dataIndex","render","ghost","onSettleFunds","CancelButton","Button","OpenOrderTable","onCancelSuccess","marketFilter","cancelId","setCancelId","orderId","marketFilters","orderInfos","text","onFilter","record","indexOf","fontWeight","charAt","toUpperCase","sorter","showSorterTooltip","DeleteOutlined","cancel","FillsTable","fills","fill","useFills","liquidity","FeesTable","feeTier","row","marginLeft","format","getFeeRates","taker","SRM_MINT","MSRM_MINT","marginTop","FeeScheduleTable","balance","Paragraph","TabPane","Tabs","Index","paddingTop","defaultActiveKey","tab","supportsSrmFeeDiscounts","OpenOrdersTab","filterForOpenOrders","useOpenOrders","BalancesTab","DepositDialog","coinMint","depositCoin","onClose","baseOrQuote","onOk","StandaloneTokenAccountsSelect","selectedValue","label","setSelectedTokenAccounts","Fragment","onSelect","newSelectedTokenAccounts","Option","Text","code","shape","CopyOutlined","navigator","clipboard","writeText","LinkAddress","shorten","LinkOutlined","cursor","PreferencesContext","PreferencesProvider","autoSettleEnabled","setAutoSettleEnabled","marketInfoList","currentlyFetchingMarkets","setCurrentlyFetchingMarkets","setMarkets","addToMarketsMap","marketId","prev","autoSettle","fetchMarkets","RowBox","Tip","ActionButton","StandaloneBalancesDisplay","setBaseOrQuote","lastSettledAt","setLastSettledAt","now","formattedBalances","currency","borderColor","content","trigger","InfoCircleOutlined","align","paddingBottom","block","SellButton","BuyButton","sliderMarks","0","25","50","75","100","TradeForm","setChangeOrderRef","setSide","postOnly","setPostOnly","ioc","setIoc","baseSize","setBaseSize","quoteSize","setQuoteSize","setPrice","submitting","setSubmitting","sizeFraction","setSizeFraction","quoteBalance","baseBalance","sizeDecimalCount","priceDecimalCount","doChangeOrder","onSliderChange","updateSizeFraction","warmUpCache","findBestFeeDiscountKey","onSetBaseSize","usePrice","maxSize","parseFloat","newSize","formatted","onSubmit","flexDirection","Group","onChange","buttonStyle","background","addonBefore","suffix","fontSize","compact","onSetQuoteSize","tipFormatter","marks","checked","disabled","PublicTrades","getRecentTrades","useBonfidaTrades","minHeight","maxHeight","paddingRight","overflowY","time","toLocaleTimeString","DeprecatedMarketsInstructions","switchToLiveMarkets","openOrderAccountBalances","inOrdersBase","inOrdersQuote","unsettledBase","unsettledQuote","useBalancesForDeprecatedMarkets","marketsAndOrders","getOrders","loadOrdersForOwner","refreshOpenOrders","useGetOpenOrdersForDeprecatedMarkets","needToCancelOrders","filteredBalances","needToSettleFunds","CustomMarketDialog","onAddCustomMarket","setMarketId","marketLabel","setMarketLabel","setBaseLabel","setQuoteLabel","loadingMarket","setLoadingMarket","wellFormedMarketId","marketAccountInfo","resetLabels","knownMarket","knownProgram","knownBaseCurrency","knownQuoteCurrency","canSubmit","onDoClose","placeholder","LoadingOutlined","gutter","assign","o","arguments","r","prototype","hasOwnProperty","call","apply","isArray","mobile","disabled_features","enabled_features","interval","timezone","container_id","library_path","locale","widgetbar","details","watchlist","watchlist_settings","default_symbols","overrides","studies_overrides","trading_customization","position","brokerConfig","configFlags","fullscreen","autosize","debug","logo","time_frames","resolution","client_id","user_id","charts_storage_api_version","favorites","intervals","chartTypes","_id","_ready","_readyHandlers","_onWindowResize","_autoResizeChart","datafeed","_options","preset","theme","loading_screen","_create","onChartReady","headerReady","_innerWindowLoaded","_innerWindow","onGrayedObjectClicked","_innerAPI","onShortcut","createShortcutAction","subscribe","unsubscribe","chart","getLanguage","setSymbol","changeSymbol","splice","_iFrame","parentNode","removeChild","closePopupsAndDialogs","selectLineTool","selectedLineTool","save","saveChart","loadChart","extendedData","getSavedCharts","loadChartFromServer","saveChartToServer","removeChartFromServer","onContextMenu","createButton","showNoticeDialog","showConfirmDialog","showLoadChartDialog","showSaveAsChartDialog","symbolInterval","getSymbolInterval","mainSeriesPriceFormatter","getIntervals","getStudiesList","addCustomCSSFile","applyOverrides","applyStudiesOverrides","watchList","activeChart","chartsCount","layout","setLayout","layoutName","changeTheme","getTheme","takeScreenshot","lockAllDrawingTools","hideAllDrawingTools","drawOnAllCharts","magnetEnabled","magnetMode","undoRedoState","setIntervalLinkingEnabled","setTimeFrame","symbolSync","intervalSync","crosshairSync","timeSync","getAllFeatures","takeClientScreenshot","tradingViewApi","contentWindow","innerHeight","_render","getElementById","innerHTML","querySelector","widgetReady","initializationFinished","customFormatters","custom_formatters","brokerFactory","broker_factory","studiesOverrides","tradingCustomization","disabledFeatures","enabledFeatures","broker_config","restConfig","numeric_formatting","rss_news_feed","newsProvider","news_provider","loadLastChart","load_last_chart","saveLoadAdapter","save_load_adapter","settingsAdapter","settings_adapter","getCustomIndicators","custom_indicators_getter","saved_data","chartContent","symbol","encodeURIComponent","timeframe","toolbar_bg","studies_access","drawings_access","String","charts_storage_url","custom_css_url","auto_save_delay","snapshot_url","study_count_limit","symbol_search_request_delay","compare_symbols","TradingView","version","CHARTS_KEY","STUDIES_KEY","getAllCharts","charts","removeChart","chartId","chartData","timestamp","getChartContent","getAllStudyTemplates","studies","removeStudyTemplate","study","saveStudyTemplate","getStudyTemplateContent","TVChartContainer","defaultProps","containerId","libraryPath","chartsStorageApiVersion","clientId","userId","datafeedUrl","tvWidgetRef","chartProperties","savedProperties","obj","prefix","restrict","restrictTo","recurse","newKey","flatten","widgetOptions","Datafeeds","UDFCompatibleDatafeed","initialSettings","showRelativePriceControl","showCurrencyRiskInQty","showPercentRiskInQty","showBracketsInCurrency","showBracketsInPercent","hideFloatingPanel","setValue","removeValue","tvWidget","widget","className","Select","OptGroup","TradePage","useParams","history","useHistory","TradePageInner","REACT_APP_EXCLUDE_MARKETS","handleDeprecated","setHandleDeprecated","addMarketVisible","setAddMarketVisible","deprecatedMarkets","innerWidth","dimensions","setDimensions","changeOrderRef","handleResize","componentProps","onChangeOrderRef","component","customMarket","newCustomMarkets","paddingLeft","MarketSelector","onDeleteCustomMarket","PlusCircleOutlined","extractBase","extractQuote","selectedMarket","proposedMarket","showSearch","optionFilterProp","listHeight","filterOption","option","toLowerCase","nanoid","stopPropagation","nativeEvent","stopImmediatePropagation","DeprecatedMarketsPage","RenderNormal","flexWrap","RenderSmall","RenderSmaller","xs","sm","WalletConnect","menu","Item","overlay","OpenOrdersPage","setLoaded","setRefresh","setOpenOrders","lastRefresh","setLastRefresh","_openOrders","getOpenOrdersForMarket","getAllOpenOrders","useAllOpenOrders","marketAddressesToNames","WalletBalancesTable","walletBalances","tokenAccountsConnected","allMarketsConnected","settlingFunds","setSettlingFunds","walletBalance","BalancesPage","parsedAccount","mintInfo","additionalAmount","useWalletBalancesForAllMarkets","mintToTickers","openOrdersFree","openOrdersTotal","ConvertButton","ConvertForm","fromToken","setFromToken","toToken","setToToken","setSize","marketInfosbyName","tokenConvertMap","base","quote","maxWidth","minWidth","ConvertFormSubmit","fromAmount","setFromAmount","toAmount","setToAmount","isConverting","setIsConverting","isFromTokenBaseOfMarket","onConvert","sidedOrderbookAccount","decodedOrderbookData","parsedPrice","parsedSize","getPrice","expectedPrice","canConvert","coinBalance","availableBalance","SwapOutlined","ConvertPage","Settings","usePreferences","CustomClusterEndpointDialog","testingConnection","onAddCustomEndpoint","customEndpoint","setCustomEndpoint","customEndpointName","setCustomEndpointName","appsAndTokens","apps","tags","AppSearch","searchMatches","setSearchMatches","searchValue","setSearchValue","handleClear","options","d","allowClear","focussed","onSearch","filteredApps","app","searchString","lowerSearchStr","tag","matchApp","onClear","onFocus","onBlur","notFoundContent","transition","dropdownStyle","dropdownMatchSelectWidth","suffixIcon","SearchOutlined","focus","LogoWrapper","EXTERNAL_LINKS","TopBar","addEndpointVisible","setAddEndpointVisible","setTestingConnection","location","useLocation","searchFocussed","setSearchFocussed","handleClick","endpointInfoCustom","handler","tradePageUrl","pathname","handleError","getBlockTime","newCustomEndpoints","mode","selectedKeys","borderBottom","margin","SubMenu","onTitleClick","SettingOutlined","helpUrls","Footer","Layout","useBreakpoint","Grid","footerElements","link","CustomFooter","lg","elem","Header","Content","BasicLayout","search","parsed","queryString","useMintInput","tooltip","setAddress","ticker","validateStatus","hasFeedback","help","ListNewMarketPage","baseMintInput","quoteMintInput","lotSize","setLotSize","setTickSize","listedMarket","setListedMarket","labelCol","wrapperCol","onFinish","initialValue","trim","colon","htmlType","AddRemoveTokenButtons","SIMPLE_POOL_PROGRAM_ID","DEFAULT_PROGRAM_ID","PROGRAM_ID_OPTIONS","NewPoolPage","poolName","setPoolName","setProgramId","initialSupply","setInitialSupply","valid","initialAssets","setInitialAssets","adminControlled","setAdminControlled","adminAddress","setAdminAddress","newPoolAddress","setNewPoolAddress","every","asset","assets","PoolTransactions","initializeSimplePool","poolStateSpace","poolMintDecimals","initialPoolMintSupply","assetMints","initialAssetQuantities","quantity","creator","creatorAssets","found","tokenAccount","additionalAccounts","isSigner","isWritable","poolAddress","AssetInput","mintInput","setQuantity","parsedQuantity","old","MintName","showAddress","mintKey","PoolBasketDisplay","poolInfo","basket","BasketItem","quantities","mintAccountInfo","quantityDisplay","feeFormat","PoolInfoPanel","getPoolBasket","redeem","totalBasket","copyable","poolTokenMint","adminKey","feeRate","PoolCreateRedeemPanel","CreateRedeemTab","action","basketLoaded","findTokenAccount","preventDefault","execute","poolTokenAccount","assetAccounts","PoolBalancesPanel","WalletBalancesTab","PoolBalancesTab","BalanceItem","isPoolToken","vaultAddress","balanceAccountInfo","PoolAdminPanel","PauseUnpauseTab","AddAssetTab","RemoveAssetTab","DepositTab","WithdrawTab","UpdateFeeTab","AdminControlledPoolInstructions","pause","unpause","useOnSubmitHandler","vaultSigner","createAssociatedTokenAccount","addAsset","MintSelector","SubmitButton","removeAsset","MintInPoolSelector","walletTokenAccount","mintDecimals","wrappedSolAccount","transfer","source","destination","closeAccount","approveDelegate","setFeeRate","updateFee","makeTransaction","PoolPage","isPublicKey","poolAccountInfo","poolAccountLoaded","decodePoolState","program","mintAccountInfoLoaded","onBack","subTitle","isAdminControlledPool","Form","form","PoolListPage","setPoolAddress","Routes","basename","exact","App","fallback","Boolean","hostname","match","ReactDOM","StrictMode","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.40dc8d41.chunk.js","sourcesContent":["import type Transport from '@ledgerhq/hw-transport';\nimport type { Transaction } from '@solana/web3.js';\n\nimport { PublicKey } from '@solana/web3.js';\n\nconst INS_GET_PUBKEY = 0x05;\nconst INS_SIGN_MESSAGE = 0x06;\n\nconst P1_NON_CONFIRM = 0x00;\nconst P1_CONFIRM = 0x01;\n\nconst P2_EXTEND = 0x01;\nconst P2_MORE = 0x02;\n\nconst MAX_PAYLOAD = 255;\n\nconst LEDGER_CLA = 0xe0;\n\n/*\n * Helper for chunked send of large payloads\n */\nasync function ledgerSend(\n  transport: Transport,\n  instruction: number,\n  p1: number,\n  payload: Buffer,\n) {\n  let p2 = 0;\n  let payloadOffset = 0;\n\n  if (payload.length > MAX_PAYLOAD) {\n    while (payload.length - payloadOffset > MAX_PAYLOAD) {\n      const chunk = payload.slice(payloadOffset, payloadOffset + MAX_PAYLOAD);\n      payloadOffset += MAX_PAYLOAD;\n      console.log(\n        'send',\n        (p2 | P2_MORE).toString(16),\n        chunk.length.toString(16),\n        chunk,\n      );\n      const reply = await transport.send(\n        LEDGER_CLA,\n        instruction,\n        p1,\n        p2 | P2_MORE,\n        chunk,\n      );\n      if (reply.length !== 2) {\n        throw new Error('Received unexpected reply payload');\n      }\n      p2 |= P2_EXTEND;\n    }\n  }\n\n  const chunk = payload.slice(payloadOffset);\n  console.log('send', p2.toString(16), chunk.length.toString(16), chunk);\n  const reply = await transport.send(LEDGER_CLA, instruction, p1, p2, chunk);\n\n  return reply.slice(0, reply.length - 2);\n}\n\nconst BIP32_HARDENED_BIT = (1 << 31) >>> 0;\nfunction harden(n: number = 0) {\n  return (n | BIP32_HARDENED_BIT) >>> 0;\n}\n\nexport function getSolanaDerivationPath(account?: number, change?: number) {\n  var length;\n  if (account !== undefined) {\n    if (change !== undefined) {\n      length = 4;\n    } else {\n      length = 3;\n    }\n  } else {\n    length = 2;\n  }\n\n  var derivationPath = Buffer.alloc(1 + length * 4);\n  // eslint-disable-next-line\n  var offset = 0;\n  offset = derivationPath.writeUInt8(length, offset);\n  offset = derivationPath.writeUInt32BE(harden(44), offset); // Using BIP44\n  offset = derivationPath.writeUInt32BE(harden(501), offset); // Solana's BIP44 path\n\n  if (length > 2) {\n    offset = derivationPath.writeUInt32BE(harden(account), offset);\n    if (length === 4) {\n      // @FIXME: https://github.com/project-serum/spl-token-wallet/issues/59\n      offset = derivationPath.writeUInt32BE(harden(change), offset);\n    }\n  }\n\n  return derivationPath;\n}\n\nexport async function signTransaction(\n  transport: Transport,\n  transaction: Transaction,\n  derivationPath: Buffer = getSolanaDerivationPath(),\n) {\n  const messageBytes = transaction.serializeMessage();\n  return signBytes(transport, messageBytes, derivationPath);\n}\n\nexport async function signBytes(\n  transport: Transport,\n  bytes: Buffer,\n  derivationPath: Buffer = getSolanaDerivationPath(),\n) {\n  const numPaths = Buffer.alloc(1);\n  numPaths.writeUInt8(1, 0);\n\n  const payload = Buffer.concat([numPaths, derivationPath, bytes]);\n\n  // @FIXME: must enable blind signing in Solana Ledger App per https://github.com/project-serum/spl-token-wallet/issues/71\n  // See also https://github.com/project-serum/spl-token-wallet/pull/23#issuecomment-712317053\n  return ledgerSend(transport, INS_SIGN_MESSAGE, P1_CONFIRM, payload);\n}\n\nexport async function getPublicKey(\n  transport: Transport,\n  derivationPath: Buffer = getSolanaDerivationPath(),\n) {\n  const publicKeyBytes = await ledgerSend(\n    transport,\n    INS_GET_PUBKEY,\n    P1_NON_CONFIRM,\n    derivationPath,\n  );\n\n  return new PublicKey(publicKeyBytes);\n}\n","module.exports = __webpack_public_path__ + \"static/media/logo.49174c73.svg\";","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\n\nexport function isValidPublicKey(key) {\n  if (!key) {\n    return false;\n  }\n  try {\n    new PublicKey(key);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport async function sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport const percentFormat = new Intl.NumberFormat(undefined, {\n  style: 'percent',\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n});\n\nexport function floorToDecimal(\n  value: number,\n  decimals: number | undefined | null,\n) {\n  return decimals\n    ? Math.floor(value * 10 ** decimals) / 10 ** decimals\n    : Math.floor(value);\n}\n\nexport function roundToDecimal(\n  value: number,\n  decimals: number | undefined | null,\n) {\n  return decimals ? Math.round(value * 10 ** decimals) / 10 ** decimals : value;\n}\n\nexport function getDecimalCount(value): number {\n  if (\n    !isNaN(value) &&\n    Math.floor(value) !== value &&\n    value.toString().includes('.')\n  )\n    return value.toString().split('.')[1].length || 0;\n  if (\n    !isNaN(value) &&\n    Math.floor(value) !== value &&\n    value.toString().includes('e')\n  )\n    return parseInt(value.toString().split('e-')[1] || '0');\n  return 0;\n}\n\nexport function divideBnToNumber(numerator: BN, denominator: BN): number {\n  const quotient = numerator.div(denominator).toNumber();\n  const rem = numerator.umod(denominator);\n  const gcd = rem.gcd(denominator);\n  return quotient + rem.div(gcd).toNumber() / denominator.div(gcd).toNumber();\n}\n\nexport function getTokenMultiplierFromDecimals(decimals: number): BN {\n  return new BN(10).pow(new BN(decimals));\n}\n\nconst localStorageListeners = {};\n\nexport function useLocalStorageStringState(\n  key: string,\n  defaultState: string | null = null,\n): [string | null, (newState: string | null) => void] {\n  const state = localStorage.getItem(key) || defaultState;\n\n  const [, notify] = useState(key + '\\n' + state);\n\n  useEffect(() => {\n    if (!localStorageListeners[key]) {\n      localStorageListeners[key] = [];\n    }\n    localStorageListeners[key].push(notify);\n    return () => {\n      localStorageListeners[key] = localStorageListeners[key].filter(\n        (listener) => listener !== notify,\n      );\n      if (localStorageListeners[key].length === 0) {\n        delete localStorageListeners[key];\n      }\n    };\n  }, [key]);\n\n  const setState = useCallback<(newState: string | null) => void>(\n    (newState) => {\n      const changed = state !== newState;\n      if (!changed) {\n        return;\n      }\n\n      if (newState === null) {\n        localStorage.removeItem(key);\n      } else {\n        localStorage.setItem(key, newState);\n      }\n      localStorageListeners[key]?.forEach((listener) =>\n        listener(key + '\\n' + newState),\n      );\n    },\n    [state, key],\n  );\n\n  return [state, setState];\n}\n\nexport function useLocalStorageState<T = any>(\n  key: string,\n  defaultState: T | null = null,\n): [T, (newState: T) => void] {\n  let [stringState, setStringState] = useLocalStorageStringState(\n    key,\n    JSON.stringify(defaultState),\n  );\n  return [\n    useMemo(() => stringState && JSON.parse(stringState), [stringState]),\n    (newState) => setStringState(JSON.stringify(newState)),\n  ];\n}\n\nexport function useEffectAfterTimeout(effect, timeout) {\n  useEffect(() => {\n    const handle = setTimeout(effect, timeout);\n    return () => clearTimeout(handle);\n  });\n}\n\nexport function useListener(emitter, eventName) {\n  const [, forceUpdate] = useState(0);\n  useEffect(() => {\n    const listener = () => forceUpdate((i) => i + 1);\n    emitter.on(eventName, listener);\n    return () => emitter.removeListener(eventName, listener);\n  }, [emitter, eventName]);\n}\n\nexport function abbreviateAddress(address: PublicKey, size = 4) {\n  const base58 = address.toBase58();\n  return base58.slice(0, size) + '…' + base58.slice(-size);\n}\n\nexport function isEqual(obj1, obj2, keys) {\n  if (!keys && Object.keys(obj1).length !== Object.keys(obj2).length) {\n    return false;\n  }\n  keys = keys || Object.keys(obj1);\n  for (const k of keys) {\n    if (obj1[k] !== obj2[k]) {\n      // shallow comparison\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function flatten(obj, { prefix = '', restrictTo }) {\n  let restrict = restrictTo;\n  if (restrict) {\n    restrict = restrict.filter((k) => obj.hasOwnProperty(k));\n  }\n  const result = {};\n  (function recurse(obj, current, keys) {\n    (keys || Object.keys(obj)).forEach((key) => {\n      const value = obj[key];\n      const newKey = current ? current + '.' + key : key; // joined key with dot\n      if (value && typeof value === 'object') {\n        // @ts-ignore\n        recurse(value, newKey); // nested object\n      } else {\n        result[newKey] = value;\n      }\n    });\n  })(obj, prefix, restrict);\n  return result;\n}\n","import { useEffect, useReducer } from 'react';\n\nimport assert from 'assert';\n\nconst pageLoadTime = new Date();\n\nconst globalCache: Map<any, any> = new Map();\n\nclass FetchLoopListener<T = any> {\n  cacheKey: any;\n  fn: () => Promise<T>;\n  refreshInterval: number;\n  refreshIntervalOnError: number | null;\n  callback: () => void;\n  cacheNullValues: Boolean = true;\n\n  constructor(\n    cacheKey: any,\n    fn: () => Promise<T>,\n    refreshInterval: number,\n    refreshIntervalOnError: number | null,\n    callback: () => void,\n    cacheNullValues: Boolean,\n  ) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.refreshInterval = refreshInterval;\n    this.refreshIntervalOnError = refreshIntervalOnError;\n    this.callback = callback;\n    this.cacheNullValues = cacheNullValues;\n  }\n}\n\nclass FetchLoopInternal<T = any> {\n  cacheKey: any;\n  fn: () => Promise<T>;\n  timeoutId: null | any;\n  listeners: Set<FetchLoopListener<T>>;\n  errors: number;\n  cacheNullValues: Boolean = true;\n\n  constructor(cacheKey: any, fn: () => Promise<T>, cacheNullValues: Boolean) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.timeoutId = null;\n    this.listeners = new Set();\n    this.errors = 0;\n    this.cacheNullValues = cacheNullValues;\n  }\n\n  get refreshInterval(): number {\n    return Math.min(\n      ...[...this.listeners].map((listener) => listener.refreshInterval),\n    );\n  }\n\n  get refreshIntervalOnError(): number | null {\n    const refreshIntervalsOnError: number[] = [...this.listeners]\n      .map((listener) => listener.refreshIntervalOnError)\n      .filter((x): x is number => x !== null);\n    if (refreshIntervalsOnError.length === 0) {\n      return null;\n    }\n    return Math.min(...refreshIntervalsOnError);\n  }\n\n  get stopped(): boolean {\n    return this.listeners.size === 0;\n  }\n\n  addListener(listener: FetchLoopListener<T>): void {\n    const previousRefreshInterval = this.refreshInterval;\n    this.listeners.add(listener);\n    if (this.refreshInterval < previousRefreshInterval) {\n      this.refresh();\n    }\n  }\n\n  removeListener(listener: FetchLoopListener<T>): void {\n    assert(this.listeners.delete(listener));\n    if (this.stopped) {\n      if (this.timeoutId) {\n        clearTimeout(this.timeoutId);\n        this.timeoutId = null;\n      }\n    }\n  }\n\n  notifyListeners(): void {\n    this.listeners.forEach((listener) => listener.callback());\n  }\n\n  refresh = async () => {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    }\n    if (this.stopped) {\n      return;\n    }\n\n    let errored = false;\n    try {\n      const data = await this.fn();\n      if (!this.cacheNullValues && data === null) {\n        console.log(`Not caching null value for ${this.cacheKey}`);\n        // cached data has not changed so no need to re-render\n        this.errors = 0;\n        return data;\n      } else {\n        globalCache.set(this.cacheKey, data);\n        this.errors = 0;\n        this.notifyListeners();\n        return data;\n      }\n    } catch (error) {\n      ++this.errors;\n      console.warn(error);\n      errored = true;\n    } finally {\n      if (!this.timeoutId && !this.stopped) {\n        let waitTime = this.refreshInterval;\n        if (\n          errored &&\n          this.refreshIntervalOnError &&\n          this.refreshIntervalOnError > 0\n        ) {\n          waitTime = this.refreshIntervalOnError;\n        }\n\n        // Back off on errors.\n        if (this.errors > 0) {\n          waitTime = Math.min(1000 * 2 ** (this.errors - 1), 60000);\n        }\n\n        // Don't do any refreshing for the first five seconds, to make way for other things to load.\n        const timeSincePageLoad = +new Date() - +pageLoadTime;\n        if (timeSincePageLoad < 5000) {\n          waitTime += 5000 - timeSincePageLoad / 2;\n        }\n\n        // Refresh background pages slowly.\n        if (document.visibilityState === 'hidden') {\n          waitTime = 60000;\n        } else if (!document.hasFocus()) {\n          waitTime *= 1.5;\n        }\n\n        // Add jitter so we don't send all requests at the same time.\n        waitTime *= 0.8 + 0.4 * Math.random();\n\n        this.timeoutId = setTimeout(this.refresh, waitTime);\n      }\n    }\n  };\n}\n\nclass FetchLoops {\n  loops = new Map();\n\n  addListener<T>(listener: FetchLoopListener<T>) {\n    if (!this.loops.has(listener.cacheKey)) {\n      this.loops.set(\n        listener.cacheKey,\n        new FetchLoopInternal<T>(\n          listener.cacheKey,\n          listener.fn,\n          listener.cacheNullValues,\n        ),\n      );\n    }\n    this.loops.get(listener.cacheKey).addListener(listener);\n  }\n\n  removeListener<T>(listener: FetchLoopListener<T>) {\n    const loop = this.loops.get(listener.cacheKey);\n    loop.removeListener(listener);\n    if (loop.stopped) {\n      this.loops.delete(listener.cacheKey);\n      globalCache.delete(listener.cacheKey);\n    }\n  }\n\n  refresh(cacheKey) {\n    if (this.loops.has(cacheKey)) {\n      this.loops.get(cacheKey).refresh();\n    }\n  }\n\n  refreshAll() {\n    return Promise.all([...this.loops.values()].map((loop) => loop.refresh()));\n  }\n}\nconst globalLoops = new FetchLoops();\n\nexport function useAsyncData<T = any>(\n  asyncFn: () => Promise<T>,\n  cacheKey: any,\n  { refreshInterval = 60000, refreshIntervalOnError = null } = {},\n  cacheNullValues: Boolean = true,\n): [null | undefined | T, boolean] {\n  const [, rerender] = useReducer((i) => i + 1, 0);\n\n  useEffect(() => {\n    if (!cacheKey) {\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      return () => {};\n    }\n    const listener = new FetchLoopListener<T>(\n      cacheKey,\n      asyncFn,\n      refreshInterval,\n      refreshIntervalOnError,\n      rerender,\n      cacheNullValues,\n    );\n    globalLoops.addListener(listener);\n    return () => globalLoops.removeListener(listener);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey, refreshInterval]);\n\n  if (!cacheKey) {\n    return [null, false];\n  }\n\n  const loaded = globalCache.has(cacheKey);\n  const data = loaded ? globalCache.get(cacheKey) : undefined;\n  return [data, loaded];\n}\n\nexport function refreshCache(cacheKey: any, clearCache = false): void {\n  if (clearCache) {\n    globalCache.delete(cacheKey);\n  }\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.refresh();\n    if (clearCache) {\n      loop.notifyListeners();\n    }\n  }\n}\n\nexport function refreshAllCaches(): void {\n  for (const loop of globalLoops.loops.values()) {\n    loop.refresh();\n  }\n}\n\nexport function setCache(\n  cacheKey: any,\n  value: any,\n  { initializeOnly = false } = {},\n): void {\n  if (initializeOnly && globalCache.has(cacheKey)) {\n    return;\n  }\n  globalCache.set(cacheKey, value);\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.notifyListeners();\n  }\n}\n\nexport function getCache(\n  cacheKey: any\n) {\n  return globalCache.get(cacheKey);\n}\n","import { useLocalStorageState } from './utils';\nimport { Account, AccountInfo, Connection, PublicKey } from '@solana/web3.js';\nimport React, { useContext, useEffect, useMemo, useRef } from 'react';\nimport { setCache, useAsyncData } from './fetch-loop';\nimport tuple from 'immutable-tuple';\nimport { ConnectionContextValues, EndpointInfo } from './types';\n\nexport const ENDPOINTS: EndpointInfo[] = [\n  {\n    name: 'mainnet-beta',\n    endpoint: 'https://solana-api.projectserum.com',\n    custom: false,\n  },\n  { name: 'localnet', endpoint: 'http://127.0.0.1:8899', custom: false },\n];\n\nconst accountListenerCount = new Map();\n\nconst ConnectionContext: React.Context<null | ConnectionContextValues> = React.createContext<null | ConnectionContextValues>(\n  null,\n);\n\nexport function ConnectionProvider({ children }) {\n  const [endpoint, setEndpoint] = useLocalStorageState<string>(\n    'connectionEndpts',\n    ENDPOINTS[0].endpoint,\n  );\n  const [customEndpoints, setCustomEndpoints] = useLocalStorageState<\n    EndpointInfo[]\n  >('customConnectionEndpoints', []);\n  const availableEndpoints = ENDPOINTS.concat(customEndpoints);\n\n  const connection = useMemo(() => new Connection(endpoint, 'recent'), [\n    endpoint,\n  ]);\n  const sendConnection = useMemo(() => new Connection(endpoint, 'recent'), [\n    endpoint,\n  ]);\n\n  // The websocket library solana/web3.js uses closes its websocket connection when the subscription list\n  // is empty after opening its first time, preventing subsequent subscriptions from receiving responses.\n  // This is a hack to prevent the list from every getting empty\n  useEffect(() => {\n    const id = connection.onAccountChange(new Account().publicKey, () => {});\n    return () => {\n      connection.removeAccountChangeListener(id);\n    };\n  }, [connection]);\n\n  useEffect(() => {\n    const id = connection.onSlotChange(() => null);\n    return () => {\n      connection.removeSlotChangeListener(id);\n    };\n  }, [connection]);\n\n  useEffect(() => {\n    const id = sendConnection.onAccountChange(\n      new Account().publicKey,\n      () => {},\n    );\n    return () => {\n      sendConnection.removeAccountChangeListener(id);\n    };\n  }, [sendConnection]);\n\n  useEffect(() => {\n    const id = sendConnection.onSlotChange(() => null);\n    return () => {\n      sendConnection.removeSlotChangeListener(id);\n    };\n  }, [sendConnection]);\n\n  return (\n    <ConnectionContext.Provider\n      value={{\n        endpoint,\n        setEndpoint,\n        connection,\n        sendConnection,\n        availableEndpoints,\n        setCustomEndpoints,\n      }}\n    >\n      {children}\n    </ConnectionContext.Provider>\n  );\n}\n\nexport function useConnection() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context');\n  }\n  return context.connection;\n}\n\nexport function useSendConnection() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context');\n  }\n  return context.sendConnection;\n}\n\nexport function useConnectionConfig() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context');\n  }\n  return {\n    endpoint: context.endpoint,\n    endpointInfo: context.availableEndpoints.find(\n      (info) => info.endpoint === context.endpoint,\n    ),\n    setEndpoint: context.setEndpoint,\n    availableEndpoints: context.availableEndpoints,\n    setCustomEndpoints: context.setCustomEndpoints,\n  };\n}\n\nexport function useAccountInfo(\n  publicKey: PublicKey | undefined | null,\n): [AccountInfo<Buffer> | null | undefined, boolean] {\n  const connection = useConnection();\n  const cacheKey = tuple(connection, publicKey?.toBase58());\n  const [accountInfo, loaded] = useAsyncData<AccountInfo<Buffer> | null>(\n    async () => (publicKey ? connection.getAccountInfo(publicKey) : null),\n    cacheKey,\n    { refreshInterval: 60_000 },\n  );\n  useEffect(() => {\n    if (!publicKey) {\n      return;\n    }\n    if (accountListenerCount.has(cacheKey)) {\n      let currentItem = accountListenerCount.get(cacheKey);\n      ++currentItem.count;\n    } else {\n      let previousInfo: AccountInfo<Buffer> | null = null;\n      const subscriptionId = connection.onAccountChange(publicKey, (info) => {\n        if (\n          !previousInfo ||\n          !previousInfo.data.equals(info.data) ||\n          previousInfo.lamports !== info.lamports\n        ) {\n          previousInfo = info;\n          setCache(cacheKey, info);\n        }\n      });\n      accountListenerCount.set(cacheKey, { count: 1, subscriptionId });\n    }\n    return () => {\n      let currentItem = accountListenerCount.get(cacheKey);\n      let nextCount = currentItem.count - 1;\n      if (nextCount <= 0) {\n        connection.removeAccountChangeListener(currentItem.subscriptionId);\n        accountListenerCount.delete(cacheKey);\n      } else {\n        --currentItem.count;\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey]);\n  const previousInfoRef = useRef<AccountInfo<Buffer> | null | undefined>(null);\n  if (\n    !accountInfo ||\n    !previousInfoRef.current ||\n    !previousInfoRef.current.data.equals(accountInfo.data) ||\n    previousInfoRef.current.lamports !== accountInfo.lamports\n  ) {\n    previousInfoRef.current = accountInfo;\n  }\n  return [previousInfoRef.current, loaded];\n}\n\nexport function useAccountData(publicKey) {\n  const [accountInfo] = useAccountInfo(publicKey);\n  return accountInfo && accountInfo.data;\n}\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nexport default function Link({ external = false, ...props }) {\n  let { to, children, ...rest } = props;\n  if (external) {\n    return (\n      <a href={to} target=\"_blank\" rel=\"noopener noreferrer\" {...rest}>\n        {children}\n      </a>\n    );\n  }\n  return (\n    <RouterLink to={to} {...rest}>\n      {children}\n    </RouterLink>\n  );\n}\n","import React from 'react';\nimport { notification } from 'antd';\nimport Link from '../components/Link';\n\nexport function notify({\n  message,\n  description,\n  txid,\n  type = 'info',\n  placement = 'bottomLeft',\n}: {\n  message: string;\n  description?: string | JSX.Element;\n  txid?: string;\n  type?: string;\n  placement?: string;\n}) {\n  if (txid) {\n    description = (\n      <Link\n        external\n        to={'https://solscan.io/tx/' + txid}\n        style={{ color: '#0000ff' }}\n      >\n        View transaction {txid.slice(0, 8)}...{txid.slice(txid.length - 8)}\n      </Link>\n    );\n  }\n  notification[type]({\n    message: <span style={{ color: 'black' }}>{message}</span>,\n    description: (\n      <span style={{ color: 'black', opacity: 0.5 }}>{description}</span>\n    ),\n    placement,\n    style: {\n      backgroundColor: 'white',\n    },\n  });\n}\n","import { PublicKey, Transaction } from '@solana/web3.js';\n\nexport const DEFAULT_PUBLIC_KEY = new PublicKey(\n  '11111111111111111111111111111111',\n);\n\nexport interface WalletAdapter {\n  publicKey: PublicKey;\n  autoApprove: boolean;\n  connected: boolean;\n  signTransaction: (transaction: Transaction) => Promise<Transaction>;\n  signAllTransactions: (transaction: Transaction[]) => Promise<Transaction[]>;\n  connect: () => any;\n  disconnect: () => any;\n  on<T>(event: string, fn: () => void): this;\n}\n","import type Transport from '@ledgerhq/hw-transport';\nimport type { Transaction } from '@solana/web3.js';\n\nimport EventEmitter from 'eventemitter3';\nimport { PublicKey } from '@solana/web3.js';\nimport TransportWebUSB from '@ledgerhq/hw-transport-webusb';\nimport { notify } from '../../utils/notifications';\nimport { getPublicKey, signTransaction } from './core';\nimport { DEFAULT_PUBLIC_KEY, WalletAdapter } from '../types';\n\nexport class LedgerWalletAdapter extends EventEmitter implements WalletAdapter {\n  _connecting: boolean;\n  _publicKey: PublicKey | null;\n  _transport: Transport | null;\n\n  constructor() {\n    super();\n    this._connecting = false;\n    this._publicKey = null;\n    this._transport = null;\n  }\n\n  get publicKey() {\n    return this._publicKey || DEFAULT_PUBLIC_KEY;\n  }\n\n  get connected() {\n    return this._publicKey !== null;\n  }\n\n  get autoApprove() {\n    return false;\n  }\n\n  public async signAllTransactions(\n    transactions: Transaction[],\n  ): Promise<Transaction[]> {\n    const result: Transaction[] = [];\n    for (let i = 0; i < transactions.length; i++) {\n      const transaction = transactions[i];\n      const signed = await this.signTransaction(transaction);\n      result.push(signed);\n    }\n\n    return result;\n  }\n\n  async signTransaction(transaction: Transaction) {\n    if (!this._transport || !this._publicKey) {\n      throw new Error('Not connected to Ledger');\n    }\n\n    // @TODO: account selection (derivation path changes with account)\n    const signature = await signTransaction(this._transport, transaction);\n\n    transaction.addSignature(this._publicKey, signature);\n\n    return transaction;\n  }\n\n  async connect() {\n    if (this._connecting) {\n      return;\n    }\n\n    this._connecting = true;\n\n    try {\n      // @TODO: transport selection (WebUSB, WebHID, bluetooth, ...)\n      this._transport = await TransportWebUSB.create();\n      // @TODO: account selection\n      this._publicKey = await getPublicKey(this._transport);\n      this.emit('connect', this._publicKey);\n    } catch (error) {\n      notify({\n        message: 'Ledger Error',\n        description: error.message,\n      });\n      await this.disconnect();\n    } finally {\n      this._connecting = false;\n    }\n  }\n\n  async disconnect() {\n    let emit = false;\n    if (this._transport) {\n      await this._transport.close();\n      this._transport = null;\n      emit = true;\n    }\n\n    this._connecting = false;\n    this._publicKey = null;\n\n    if (emit) {\n      this.emit('disconnect');\n    }\n  }\n}\n","import EventEmitter from 'eventemitter3';\nimport { PublicKey, Transaction } from '@solana/web3.js';\nimport { notify } from '../../utils/notifications';\nimport { DEFAULT_PUBLIC_KEY, WalletAdapter } from '../types';\n\ntype PhantomEvent = 'disconnect' | 'connect';\ntype PhantomRequestMethod =\n  | 'connect'\n  | 'disconnect'\n  | 'signTransaction'\n  | 'signAllTransactions';\n\ninterface PhantomProvider {\n  publicKey?: PublicKey;\n  isConnected?: boolean;\n  autoApprove?: boolean;\n  signTransaction: (transaction: Transaction) => Promise<Transaction>;\n  signAllTransactions: (transactions: Transaction[]) => Promise<Transaction[]>;\n  connect: () => Promise<void>;\n  disconnect: () => Promise<void>;\n  on: (event: PhantomEvent, handler: (args: any) => void) => void;\n  request: (method: PhantomRequestMethod, params: any) => Promise<any>;\n  listeners: (event: PhantomEvent) => (() => void)[];\n}\n\nexport class PhantomWalletAdapter\n  extends EventEmitter\n  implements WalletAdapter {\n  constructor() {\n    super();\n    this.connect = this.connect.bind(this);\n  }\n\n  private get _provider(): PhantomProvider | undefined {\n    if ((window as any)?.solana?.isPhantom) {\n      return (window as any).solana;\n    }\n    return undefined;\n  }\n\n  private _handleConnect = (...args) => {\n    this.emit('connect', ...args);\n  }\n\n  private _handleDisconnect = (...args) => {\n    this.emit('disconnect', ...args);\n  }\n\n  get connected() {\n    return this._provider?.isConnected || false;\n  }\n\n  get autoApprove() {\n    return this._provider?.autoApprove || false;\n  }\n\n  async signAllTransactions(\n    transactions: Transaction[],\n  ): Promise<Transaction[]> {\n    if (!this._provider) {\n      return transactions;\n    }\n\n    return this._provider.signAllTransactions(transactions);\n  }\n\n  get publicKey() {\n    return this._provider?.publicKey || DEFAULT_PUBLIC_KEY;\n  }\n\n  async signTransaction(transaction: Transaction) {\n    if (!this._provider) {\n      return transaction;\n    }\n\n    return this._provider.signTransaction(transaction);\n  }\n\n  connect() {\n    if (!this._provider) {\n      window.open('https://phantom.app/', '_blank');\n      notify({\n        message: 'Connection Error',\n        description: 'Please install Phantom wallet',\n      });\n      return;\n    }\n    if (!this._provider.listeners('connect').length) {\n      this._provider?.on('connect', this._handleConnect);\n    }\n    if (!this._provider.listeners('disconnect').length) {\n      this._provider?.on('disconnect', this._handleDisconnect);\n    }\n    return this._provider?.connect();\n  }\n\n  disconnect() {\n    if (this._provider) {\n      this._provider.disconnect();\n    }\n  }\n}\n","import EventEmitter from 'eventemitter3';\nimport { PublicKey, Transaction } from '@solana/web3.js';\nimport { notify } from '../../utils/notifications';\nimport { DEFAULT_PUBLIC_KEY, WalletAdapter } from '../types';\n\nexport class MathWalletAdapter extends EventEmitter implements WalletAdapter {\n  _publicKey?: PublicKey;\n  _onProcess: boolean;\n  _connected: boolean;\n  constructor() {\n    super();\n    this._onProcess = false;\n    this._connected = false;\n    this.connect = this.connect.bind(this);\n  }\n\n  get connected() {\n    return this._connected;\n  }\n\n  get autoApprove() {\n    return false;\n  }\n\n  public async signAllTransactions(\n    transactions: Transaction[],\n  ): Promise<Transaction[]> {\n    if (!this._provider) {\n      return transactions;\n    }\n\n    return this._provider.signAllTransactions(transactions);\n  }\n\n  private get _provider() {\n    if ((window as any)?.solana?.isMathWallet) {\n      return (window as any).solana;\n    }\n    return undefined;\n  }\n\n  get publicKey() {\n    return this._publicKey || DEFAULT_PUBLIC_KEY;\n  }\n\n  async signTransaction(transaction: Transaction) {\n    if (!this._provider) {\n      return transaction;\n    }\n\n    return this._provider.signTransaction(transaction);\n  }\n\n  connect() {\n    if (this._onProcess) {\n      return;\n    }\n\n    if (!this._provider) {\n      window.open('https://mathwallet.org/', '_blank');\n      notify({\n        message: 'Math Wallet Error',\n        description: 'Please install mathwallet',\n      });\n      return;\n    }\n\n    this._onProcess = true;\n    this._provider\n      .getAccount()\n      .then((account: any) => {\n        this._publicKey = new PublicKey(account);\n        this._connected = true;\n        this.emit('connect', this._publicKey);\n      })\n      .catch(() => {\n        this.disconnect();\n      })\n      .finally(() => {\n        this._onProcess = false;\n      });\n  }\n\n  disconnect() {\n    if (this._publicKey) {\n      this._publicKey = undefined;\n      this._connected = false;\n      this.emit('disconnect');\n    }\n  }\n}\n","import EventEmitter from 'eventemitter3';\nimport { PublicKey, Transaction } from '@solana/web3.js';\nimport { notify } from '../../utils/notifications';\nimport { DEFAULT_PUBLIC_KEY, WalletAdapter } from '../types';\n\ntype SolflareExtensionEvent = 'disconnect' | 'connect';\ntype SolflareExtensionRequestMethod =\n  | 'connect'\n  | 'disconnect'\n  | 'signTransaction'\n  | 'signAllTransactions';\n\ninterface SolflareExtensionProvider {\n  publicKey?: PublicKey;\n  isConnected?: boolean;\n  autoApprove?: boolean;\n  signTransaction: (transaction: Transaction) => Promise<Transaction>;\n  signAllTransactions: (transactions: Transaction[]) => Promise<Transaction[]>;\n  connect: () => Promise<void>;\n  disconnect: () => Promise<void>;\n  on: (event: SolflareExtensionEvent, handler: (args: any) => void) => void;\n  off: (event: SolflareExtensionEvent, handler: (args: any) => void) => void;\n  request: (method: SolflareExtensionRequestMethod, params: any) => Promise<any>;\n}\n\nexport class SolflareExtensionWalletAdapter\n  extends EventEmitter\n  implements WalletAdapter {\n  constructor() {\n    super();\n    this.connect = this.connect.bind(this);\n  }\n\n  private get _provider(): SolflareExtensionProvider | undefined {\n    if ((window as any)?.solflare?.isSolflare) {\n      return (window as any).solflare;\n    }\n    return undefined;\n  }\n\n  private _handleConnect = (...args) => {\n    this.emit('connect', ...args);\n  }\n\n  private _handleDisconnect = (...args) => {\n    this._provider?.off('connect', this._handleConnect);\n    this._provider?.off('disconnect', this._handleDisconnect);\n    this.emit('disconnect', ...args);\n  }\n\n  get connected() {\n    return this._provider?.isConnected || false;\n  }\n\n  get autoApprove() {\n    return this._provider?.autoApprove || false;\n  }\n\n  async signAllTransactions(\n    transactions: Transaction[],\n  ): Promise<Transaction[]> {\n    if (!this._provider) {\n      return transactions;\n    }\n\n    return this._provider.signAllTransactions(transactions);\n  }\n\n  get publicKey() {\n    return this._provider?.publicKey || DEFAULT_PUBLIC_KEY;\n  }\n\n  async signTransaction(transaction: Transaction) {\n    if (!this._provider) {\n      return transaction;\n    }\n\n    return this._provider.signTransaction(transaction);\n  }\n\n  async connect() {\n    if (!this._provider) {\n      window.open('https://solflare.com/', '_blank');\n      notify({\n        message: 'Connection Error',\n        description: 'Please install Solflare extension',\n      });\n      return;\n    }\n    this._provider?.on('connect', this._handleConnect);\n    this._provider?.on('disconnect', this._handleDisconnect);\n    return this._provider?.connect();\n  }\n\n  async disconnect() {\n    if (this._provider) {\n      this._provider.disconnect();\n    }\n  }\n}\n","import React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport Wallet from '@project-serum/sol-wallet-adapter';\nimport { notify } from './notifications';\nimport { useConnectionConfig } from './connection';\nimport { useLocalStorageState } from './utils';\nimport { WalletContextValues } from './types';\nimport { Button, Modal } from 'antd';\nimport {\n  WalletAdapter,\n  LedgerWalletAdapter,\n  PhantomWalletAdapter,\n  SolletExtensionAdapter,\n  MathWalletAdapter,\n  SolflareExtensionWalletAdapter,\n} from '../wallet-adapters';\n\nconst ASSET_URL =\n  'https://cdn.jsdelivr.net/gh/solana-labs/oyster@main/assets/wallets';\nexport const WALLET_PROVIDERS = [\n  {\n    name: 'sollet.io',\n    url: 'https://www.sollet.io',\n    icon: `${ASSET_URL}/sollet.svg`,\n  },\n  {\n    name: 'Sollet Extension',\n    url: 'https://www.sollet.io/extension',\n    icon: `${ASSET_URL}/sollet.svg`,\n    adapter: SolletExtensionAdapter as any,\n  },\n  {\n    name: 'Ledger',\n    url: 'https://www.ledger.com',\n    icon: `${ASSET_URL}/ledger.svg`,\n    adapter: LedgerWalletAdapter,\n  },\n  {\n    name: 'Solflare',\n    url: 'https://solflare.com/access-wallet',\n    icon: `${ASSET_URL}/solflare.svg`,\n  },\n  {\n    name: 'Solflare Extension',\n    url: 'https://solflare.com',\n    icon: `${ASSET_URL}/solflare.svg`,\n    adapter: SolflareExtensionWalletAdapter,\n  },\n  {\n    name: 'Phantom',\n    url: 'https://www.phantom.app',\n    icon: `https://www.phantom.app/img/logo.png`,\n    adapter: PhantomWalletAdapter,\n  },\n  {\n    name: 'MathWallet',\n    url: 'https://www.mathwallet.org',\n    icon: `${ASSET_URL}/mathwallet.svg`,\n    adapter: MathWalletAdapter,\n  },\n];\n\nconst WalletContext = React.createContext<null | WalletContextValues>(null);\n\nexport function WalletProvider({ children }) {\n  const { endpoint } = useConnectionConfig();\n\n  const [autoConnect, setAutoConnect] = useState(false);\n  const [providerUrl, setProviderUrl] = useLocalStorageState('walletProvider');\n\n  const provider = useMemo(\n    () => WALLET_PROVIDERS.find(({ url }) => url === providerUrl),\n    [providerUrl],\n  );\n\n  let [wallet, setWallet] = useState<WalletAdapter | undefined>(undefined);\n\n  useEffect(() => {\n    if (provider) {\n      const updateWallet = () => {\n        // hack to also update wallet synchronously in case it disconnects\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        wallet = new (provider.adapter || Wallet)(\n          providerUrl,\n          endpoint,\n        ) as WalletAdapter;\n        setWallet(wallet);\n      };\n\n      if (document.readyState !== 'complete') {\n        // wait to ensure that browser extensions are loaded\n        const listener = () => {\n          updateWallet();\n          window.removeEventListener('load', listener);\n        };\n        window.addEventListener('load', listener);\n        return () => window.removeEventListener('load', listener);\n      } else {\n        updateWallet();\n      }\n    }\n  }, [provider, providerUrl, endpoint]);\n\n  const [connected, setConnected] = useState(false);\n\n  useEffect(() => {\n    if (wallet) {\n      wallet.on('connect', () => {\n        if (wallet?.publicKey) {\n          console.log('connected');\n          localStorage.removeItem('feeDiscountKey');\n          setConnected(true);\n          const walletPublicKey = wallet.publicKey.toBase58();\n          const keyToDisplay =\n            walletPublicKey.length > 20\n              ? `${walletPublicKey.substring(\n                  0,\n                  7,\n                )}.....${walletPublicKey.substring(\n                  walletPublicKey.length - 7,\n                  walletPublicKey.length,\n                )}`\n              : walletPublicKey;\n\n          notify({\n            message: 'Wallet update',\n            description: 'Connected to wallet ' + keyToDisplay,\n          });\n        }\n      });\n\n      wallet.on('disconnect', () => {\n        setConnected(false);\n        notify({\n          message: 'Wallet update',\n          description: 'Disconnected from wallet',\n        });\n        localStorage.removeItem('feeDiscountKey');\n      });\n    }\n\n    return () => {\n      setConnected(false);\n      if (wallet && wallet.connected) {\n        wallet.disconnect();\n        setConnected(false);\n      }\n    };\n  }, [wallet]);\n\n  useEffect(() => {\n    if (wallet && autoConnect) {\n      wallet.connect();\n      setAutoConnect(false);\n    }\n\n    return () => {};\n  }, [wallet, autoConnect]);\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const select = useCallback(() => setIsModalVisible(true), []);\n  const close = useCallback(() => setIsModalVisible(false), []);\n\n  return (\n    <WalletContext.Provider\n      value={{\n        wallet,\n        connected,\n        select,\n        providerUrl,\n        setProviderUrl,\n        providerName:\n          WALLET_PROVIDERS.find(({ url }) => url === providerUrl)?.name ??\n          providerUrl,\n      }}\n    >\n      {children}\n      <Modal\n        title=\"Select Wallet\"\n        okText=\"Connect\"\n        visible={isModalVisible}\n        okButtonProps={{ style: { display: 'none' } }}\n        onCancel={close}\n        width={400}\n      >\n        {WALLET_PROVIDERS.map((provider) => {\n          const onClick = function () {\n            setProviderUrl(provider.url);\n            setAutoConnect(true);\n            close();\n          };\n\n          return (\n            <Button\n              size=\"large\"\n              type={providerUrl === provider.url ? 'primary' : 'ghost'}\n              onClick={onClick}\n              icon={\n                <img\n                  alt={`${provider.name}`}\n                  width={20}\n                  height={20}\n                  src={provider.icon}\n                  style={{ marginRight: 8 }}\n                />\n              }\n              style={{\n                display: 'block',\n                width: '100%',\n                textAlign: 'left',\n                marginBottom: 8,\n              }}\n            >\n              {provider.name}\n            </Button>\n          );\n        })}\n      </Modal>\n    </WalletContext.Provider>\n  );\n}\n\nexport function useWallet() {\n  const context = useContext(WalletContext);\n  if (!context) {\n    throw new Error('Missing wallet context');\n  }\n\n  const wallet = context.wallet;\n  return {\n    connected: context.connected,\n    wallet: wallet,\n    providerUrl: context.providerUrl,\n    setProvider: context.setProviderUrl,\n    providerName: context.providerName,\n    select: context.select,\n    connect() {\n      wallet ? wallet.connect() : context.select();\n    },\n    disconnect() {\n      wallet?.disconnect();\n    },\n  };\n}\n","import Wallet from '@project-serum/sol-wallet-adapter';\nimport { notify } from '../../utils/notifications';\n\nexport function SolletExtensionAdapter(_, network) {\n  const sollet = (window as any).sollet;\n  if (sollet) {\n    return new Wallet(sollet, network);\n  }\n\n  return {\n    on: () => {},\n    connect: () => {\n      notify({\n        message: 'Sollet Extension Error',\n        description: 'Please install the Sollet Extension for Chrome',\n      });\n    }\n  }\n}","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\nhtml,body{\n  background: #11161D;\n}\ninput[type=number]::-webkit-inner-spin-button {\n  opacity: 0;\n}\ninput[type=number]:hover::-webkit-inner-spin-button,\ninput[type=number]:focus::-webkit-inner-spin-button {\n  opacity: 0.25;\n}\n/* width */\n::-webkit-scrollbar {\n  width: 15px;\n}\n/* Track */\n::-webkit-scrollbar-track {\n  background: #2d313c;\n}\n/* Handle */\n::-webkit-scrollbar-thumb {\n  background: #5b5f67;\n}\n/* Handle on hover */\n::-webkit-scrollbar-thumb:hover {\n  background: #5b5f67;\n}\n.ant-slider-track, .ant-slider:hover .ant-slider-track {\n  background-color: #2abdd2;\n  opacity: 0.75;\n}\n.ant-slider-track,\n.ant-slider ant-slider-track:hover {\n  background-color: #2abdd2;\n  opacity: 0.75;\n}\n.ant-slider-dot-active,\n.ant-slider-handle,\n.ant-slider-handle-click-focused,\n.ant-slider:hover .ant-slider-handle:not(.ant-tooltip-open)  {\n  border: 2px solid #2abdd2; \n}\n.ant-table-tbody > tr.ant-table-row:hover > td {\n  background: #273043;\n}\n.ant-table-tbody > tr > td {\n  border-bottom: 8px solid #1A2029;\n}\n.ant-table-container table > thead > tr:first-child th {\n  border-bottom: none;\n}\n.ant-divider-horizontal.ant-divider-with-text::before, .ant-divider-horizontal.ant-divider-with-text::after {\n  border-top: 1px solid #434a59 !important;\n}\n.ant-layout {\n    background: #11161D\n  }\n  .ant-table {\n    background: #212734;\n  }\n  .ant-table-thead > tr > th {\n    background: #1A2029;\n  }\n.ant-select-item-option-content {\n  img {\n    margin-right: 4px;\n  }\n}\n.ant-modal-content {\n  background-color: #212734;\n}\n\n@-webkit-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n@-moz-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n@-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n.flash {\n  -moz-animation: highlight 0.5s ease 0s 1 alternate ;\n  -webkit-animation: highlight 0.5s ease 0s 1 alternate;\n  animation: highlight 0.5s ease 0s 1 alternate;\n}`;\n","import React, { Component } from 'react';\nimport { Typography } from 'antd';\n\nconst { Title } = Typography;\n\nexport default class ErrorBoundary extends Component {\n  state = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div>\n          <div>\n            <Title level={2}>Something went wrong.</Title>\n            <Title level={4}>Please try again later.</Title>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","import { notify } from './notifications';\nimport { getDecimalCount, sleep } from './utils';\nimport { getSelectedTokenAccountForMint } from './markets';\nimport {\n  Account,\n  AccountInfo,\n  Commitment,\n  Connection,\n  PublicKey,\n  RpcResponseAndContext,\n  SimulatedTransactionResponse,\n  SystemProgram,\n  Transaction,\n  TransactionSignature,\n} from '@solana/web3.js';\nimport {\n  Token,\n  ASSOCIATED_TOKEN_PROGRAM_ID,\n  TOKEN_PROGRAM_ID,\n} from '@solana/spl-token';\nimport BN from 'bn.js';\nimport {\n  DexInstructions,\n  Market,\n  OpenOrders,\n  parseInstructionErrorResponse,\n  TOKEN_MINTS,\n  TokenInstructions,\n} from '@project-serum/serum';\nimport { SelectedTokenAccounts, TokenAccount } from './types';\nimport { Order } from '@project-serum/serum/lib/market';\nimport { Buffer } from 'buffer';\nimport assert from 'assert';\nimport { struct } from 'superstruct';\nimport { WalletAdapter } from '../wallet-adapters';\n\nexport async function createTokenAccountTransaction({\n  connection,\n  wallet,\n  mintPublicKey,\n}: {\n  connection: Connection;\n  wallet: WalletAdapter;\n  mintPublicKey: PublicKey;\n}): Promise<{\n  transaction: Transaction;\n  newAccountPubkey: PublicKey;\n}> {\n  const ata = await Token.getAssociatedTokenAddress(\n    ASSOCIATED_TOKEN_PROGRAM_ID,\n    TOKEN_PROGRAM_ID,\n    mintPublicKey,\n    wallet.publicKey,\n  );\n  const transaction = new Transaction();\n  transaction.add(\n    Token.createAssociatedTokenAccountInstruction(\n      ASSOCIATED_TOKEN_PROGRAM_ID,\n      TOKEN_PROGRAM_ID,\n      mintPublicKey,\n      ata,\n      wallet.publicKey,\n      wallet.publicKey,\n    ),\n  );\n  return {\n    transaction,\n    newAccountPubkey: ata,\n  };\n}\n\nexport async function settleFunds({\n  market,\n  openOrders,\n  connection,\n  wallet,\n  baseCurrencyAccount,\n  quoteCurrencyAccount,\n  sendNotification = true,\n  usdcRef = undefined,\n  usdtRef = undefined,\n}: {\n  market: Market;\n  openOrders: OpenOrders;\n  connection: Connection;\n  wallet: WalletAdapter;\n  baseCurrencyAccount: TokenAccount;\n  quoteCurrencyAccount: TokenAccount;\n  sendNotification?: boolean;\n  usdcRef?: PublicKey;\n  usdtRef?: PublicKey;\n}): Promise<string | undefined> {\n  if (\n    !market ||\n    !wallet ||\n    !connection ||\n    !openOrders ||\n    (!baseCurrencyAccount && !quoteCurrencyAccount)\n  ) {\n    if (sendNotification) {\n      notify({ message: 'Not connected' });\n    }\n    return;\n  }\n\n  let createAccountTransaction: Transaction | undefined;\n  let baseCurrencyAccountPubkey = baseCurrencyAccount?.pubkey;\n  let quoteCurrencyAccountPubkey = quoteCurrencyAccount?.pubkey;\n\n  if (!baseCurrencyAccountPubkey) {\n    const result = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.baseMintAddress,\n    });\n    baseCurrencyAccountPubkey = result?.newAccountPubkey;\n    createAccountTransaction = result?.transaction;\n  }\n  if (!quoteCurrencyAccountPubkey) {\n    const result = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.quoteMintAddress,\n    });\n    quoteCurrencyAccountPubkey = result?.newAccountPubkey;\n    createAccountTransaction = result?.transaction;\n  }\n  let referrerQuoteWallet: PublicKey | null = null;\n  if (market.supportsReferralFees) {\n    const usdt = TOKEN_MINTS.find(({ name }) => name === 'USDT');\n    const usdc = TOKEN_MINTS.find(({ name }) => name === 'USDC');\n    if (usdtRef && usdt && market.quoteMintAddress.equals(usdt.address)) {\n      referrerQuoteWallet = usdtRef;\n    } else if (\n      usdcRef &&\n      usdc &&\n      market.quoteMintAddress.equals(usdc.address)\n    ) {\n      referrerQuoteWallet = usdcRef;\n    }\n  }\n  const {\n    transaction: settleFundsTransaction,\n    signers: settleFundsSigners,\n  } = await market.makeSettleFundsTransaction(\n    connection,\n    openOrders,\n    baseCurrencyAccountPubkey,\n    quoteCurrencyAccountPubkey,\n    referrerQuoteWallet,\n  );\n\n  let transaction = mergeTransactions([\n    createAccountTransaction,\n    settleFundsTransaction,\n  ]);\n\n  return await sendTransaction({\n    transaction,\n    signers: settleFundsSigners,\n    wallet,\n    connection,\n    sendingMessage: 'Settling funds...',\n    sendNotification,\n  });\n}\n\nexport async function settleAllFunds({\n  connection,\n  wallet,\n  tokenAccounts,\n  markets,\n  selectedTokenAccounts,\n}: {\n  connection: Connection;\n  wallet: WalletAdapter;\n  tokenAccounts: TokenAccount[];\n  markets: Market[];\n  selectedTokenAccounts?: SelectedTokenAccounts;\n}) {\n  if (!markets || !wallet || !connection || !tokenAccounts) {\n    return;\n  }\n\n  const programIds: PublicKey[] = [];\n  markets\n    .reduce((cumulative, m) => {\n      // @ts-ignore\n      cumulative.push(m._programId);\n      return cumulative;\n    }, [])\n    .forEach((programId) => {\n      if (!programIds.find((p) => p.equals(programId))) {\n        programIds.push(programId);\n      }\n    });\n\n  const getOpenOrdersAccountsForProgramId = async (programId) => {\n    const openOrdersAccounts = await OpenOrders.findForOwner(\n      connection,\n      wallet.publicKey,\n      programId,\n    );\n    return openOrdersAccounts.filter(\n      (openOrders) =>\n        openOrders.baseTokenFree.toNumber() ||\n        openOrders.quoteTokenFree.toNumber(),\n    );\n  };\n\n  const openOrdersAccountsForProgramIds = await Promise.all(\n    programIds.map((programId) => getOpenOrdersAccountsForProgramId(programId)),\n  );\n  const openOrdersAccounts = openOrdersAccountsForProgramIds.reduce(\n    (accounts, current) => accounts.concat(current),\n    [],\n  );\n\n  const settleTransactions = (\n    await Promise.all(\n      openOrdersAccounts.map((openOrdersAccount) => {\n        const market = markets.find((m) =>\n          // @ts-ignore\n          m._decoded?.ownAddress?.equals(openOrdersAccount.market),\n        );\n        if (\n          openOrdersAccount.baseTokenFree.isZero() &&\n          openOrdersAccount.quoteTokenFree.isZero()\n        ) {\n          // nothing to settle for this market.\n          return null;\n        }\n        const baseMint = market?.baseMintAddress;\n        const quoteMint = market?.quoteMintAddress;\n\n        const selectedBaseTokenAccount = getSelectedTokenAccountForMint(\n          tokenAccounts,\n          baseMint,\n          baseMint &&\n          selectedTokenAccounts &&\n          selectedTokenAccounts[baseMint.toBase58()],\n        )?.pubkey;\n        const selectedQuoteTokenAccount = getSelectedTokenAccountForMint(\n          tokenAccounts,\n          quoteMint,\n          quoteMint &&\n          selectedTokenAccounts &&\n          selectedTokenAccounts[quoteMint.toBase58()],\n        )?.pubkey;\n        if (!selectedBaseTokenAccount || !selectedQuoteTokenAccount) {\n          return null;\n        }\n        return (\n          market &&\n          market.makeSettleFundsTransaction(\n            connection,\n            openOrdersAccount,\n            selectedBaseTokenAccount,\n            selectedQuoteTokenAccount,\n          )\n        );\n      }),\n    )\n  ).filter(\n    (\n      x,\n    ): x is {\n      signers: Account[];\n      transaction: Transaction;\n      payer: PublicKey;\n    } => !!x,\n  );\n  if (!settleTransactions || settleTransactions.length === 0) return;\n\n  const transactions = settleTransactions.slice(0, 4).map((t) => t.transaction);\n  const signers: Array<Account> = [];\n  settleTransactions\n    .reduce((cumulative: Array<Account>, t) => cumulative.concat(t.signers), [])\n    .forEach((signer) => {\n      if (!signers.find((s) => s.publicKey.equals(signer.publicKey))) {\n        signers.push(signer);\n      }\n    });\n\n  const transaction = mergeTransactions(transactions);\n\n  return await sendTransaction({\n    transaction,\n    signers,\n    wallet,\n    connection,\n  });\n}\n\nexport async function cancelOrder(params: {\n  market: Market;\n  connection: Connection;\n  wallet: WalletAdapter;\n  order: Order;\n}) {\n  return cancelOrders({ ...params, orders: [params.order] });\n}\n\nexport async function cancelOrders({\n  market,\n  wallet,\n  connection,\n  orders,\n}: {\n  market: Market;\n  wallet: WalletAdapter;\n  connection: Connection;\n  orders: Order[];\n}) {\n  const transaction = market.makeMatchOrdersTransaction(5);\n  orders.forEach((order) => {\n    transaction.add(\n      market.makeCancelOrderInstruction(connection, wallet.publicKey, order),\n    );\n  });\n  transaction.add(market.makeMatchOrdersTransaction(5));\n  return await sendTransaction({\n    transaction,\n    wallet,\n    connection,\n    sendingMessage: 'Sending cancel...',\n  });\n}\n\nexport async function placeOrder({\n  side,\n  price,\n  size,\n  orderType,\n  market,\n  connection,\n  wallet,\n  baseCurrencyAccount,\n  quoteCurrencyAccount,\n  feeDiscountPubkey = undefined,\n}: {\n  side: 'buy' | 'sell';\n  price: number;\n  size: number;\n  orderType: 'ioc' | 'postOnly' | 'limit';\n  market: Market | undefined | null;\n  connection: Connection;\n  wallet: WalletAdapter;\n  baseCurrencyAccount: PublicKey | undefined;\n  quoteCurrencyAccount: PublicKey | undefined;\n  feeDiscountPubkey: PublicKey | undefined;\n}) {\n  let formattedMinOrderSize =\n    market?.minOrderSize?.toFixed(getDecimalCount(market.minOrderSize)) ||\n    market?.minOrderSize;\n  let formattedTickSize =\n    market?.tickSize?.toFixed(getDecimalCount(market.tickSize)) ||\n    market?.tickSize;\n  const isIncrement = (num, step) =>\n    Math.abs((num / step) % 1) < 1e-5 ||\n    Math.abs(((num / step) % 1) - 1) < 1e-5;\n  if (isNaN(price)) {\n    notify({ message: 'Invalid price', type: 'error' });\n    return;\n  }\n  if (isNaN(size)) {\n    notify({ message: 'Invalid size', type: 'error' });\n    return;\n  }\n  if (!wallet || !wallet.publicKey) {\n    notify({ message: 'Connect wallet', type: 'error' });\n    return;\n  }\n  if (!market) {\n    notify({ message: 'Invalid  market', type: 'error' });\n    return;\n  }\n  if (!isIncrement(size, market.minOrderSize)) {\n    notify({\n      message: `Size must be an increment of ${formattedMinOrderSize}`,\n      type: 'error',\n    });\n    return;\n  }\n  if (size < market.minOrderSize) {\n    notify({ message: 'Size too small', type: 'error' });\n    return;\n  }\n  if (!isIncrement(price, market.tickSize)) {\n    notify({\n      message: `Price must be an increment of ${formattedTickSize}`,\n      type: 'error',\n    });\n    return;\n  }\n  if (price < market.tickSize) {\n    notify({ message: 'Price under tick size', type: 'error' });\n    return;\n  }\n  const owner = wallet.publicKey;\n  const transaction = new Transaction();\n  const signers: Account[] = [];\n\n  if (!baseCurrencyAccount) {\n    const {\n      transaction: createAccountTransaction,\n      newAccountPubkey,\n    } = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.baseMintAddress,\n    });\n    transaction.add(createAccountTransaction);\n    baseCurrencyAccount = newAccountPubkey;\n  }\n  if (!quoteCurrencyAccount) {\n    const {\n      transaction: createAccountTransaction,\n      newAccountPubkey,\n    } = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.quoteMintAddress,\n    });\n    transaction.add(createAccountTransaction);\n    quoteCurrencyAccount = newAccountPubkey;\n  }\n\n  const payer = side === 'sell' ? baseCurrencyAccount : quoteCurrencyAccount;\n  if (!payer) {\n    notify({\n      message: 'Need an SPL token account for cost currency',\n      type: 'error',\n    });\n    return;\n  }\n  const params = {\n    owner,\n    payer,\n    side,\n    price,\n    size,\n    orderType,\n    feeDiscountPubkey: feeDiscountPubkey || null,\n  };\n  console.log(params);\n\n  const matchOrderstransaction = market.makeMatchOrdersTransaction(5);\n  transaction.add(matchOrderstransaction);\n  const startTime = getUnixTs();\n  let {\n    transaction: placeOrderTx,\n    signers: placeOrderSigners,\n  } = await market.makePlaceOrderTransaction(\n    connection,\n    params,\n    120_000,\n    120_000,\n  );\n  const endTime = getUnixTs();\n  console.log(`Creating order transaction took ${endTime - startTime}`);\n  transaction.add(placeOrderTx);\n  transaction.add(market.makeMatchOrdersTransaction(5));\n  signers.push(...placeOrderSigners);\n\n  return await sendTransaction({\n    transaction,\n    wallet,\n    connection,\n    signers,\n    sendingMessage: 'Sending order...',\n  });\n}\n\nexport async function listMarket({\n  connection,\n  wallet,\n  baseMint,\n  quoteMint,\n  baseLotSize,\n  quoteLotSize,\n  dexProgramId,\n}: {\n  connection: Connection;\n  wallet: WalletAdapter;\n  baseMint: PublicKey;\n  quoteMint: PublicKey;\n  baseLotSize: number;\n  quoteLotSize: number;\n  dexProgramId: PublicKey;\n}) {\n  const market = new Account();\n  const requestQueue = new Account();\n  const eventQueue = new Account();\n  const bids = new Account();\n  const asks = new Account();\n  const baseVault = new Account();\n  const quoteVault = new Account();\n  const feeRateBps = 0;\n  const quoteDustThreshold = new BN(100);\n\n  async function getVaultOwnerAndNonce() {\n    const nonce = new BN(0);\n    while (true) {\n      try {\n        const vaultOwner = await PublicKey.createProgramAddress(\n          [market.publicKey.toBuffer(), nonce.toArrayLike(Buffer, 'le', 8)],\n          dexProgramId,\n        );\n        return [vaultOwner, nonce];\n      } catch (e) {\n        nonce.iaddn(1);\n      }\n    }\n  }\n  const [vaultOwner, vaultSignerNonce] = await getVaultOwnerAndNonce();\n\n  const tx1 = new Transaction();\n  tx1.add(\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: baseVault.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(165),\n      space: 165,\n      programId: TokenInstructions.TOKEN_PROGRAM_ID,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: quoteVault.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(165),\n      space: 165,\n      programId: TokenInstructions.TOKEN_PROGRAM_ID,\n    }),\n    TokenInstructions.initializeAccount({\n      account: baseVault.publicKey,\n      mint: baseMint,\n      owner: vaultOwner,\n    }),\n    TokenInstructions.initializeAccount({\n      account: quoteVault.publicKey,\n      mint: quoteMint,\n      owner: vaultOwner,\n    }),\n  );\n\n  const tx2 = new Transaction();\n  tx2.add(\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: market.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(\n        Market.getLayout(dexProgramId).span,\n      ),\n      space: Market.getLayout(dexProgramId).span,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: requestQueue.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(5120 + 12),\n      space: 5120 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: eventQueue.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(262144 + 12),\n      space: 262144 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: bids.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(65536 + 12),\n      space: 65536 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: asks.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(65536 + 12),\n      space: 65536 + 12,\n      programId: dexProgramId,\n    }),\n    DexInstructions.initializeMarket({\n      market: market.publicKey,\n      requestQueue: requestQueue.publicKey,\n      eventQueue: eventQueue.publicKey,\n      bids: bids.publicKey,\n      asks: asks.publicKey,\n      baseVault: baseVault.publicKey,\n      quoteVault: quoteVault.publicKey,\n      baseMint,\n      quoteMint,\n      baseLotSize: new BN(baseLotSize),\n      quoteLotSize: new BN(quoteLotSize),\n      feeRateBps,\n      vaultSignerNonce,\n      quoteDustThreshold,\n      programId: dexProgramId,\n      authority: undefined,\n    }),\n  );\n\n  const signedTransactions = await signTransactions({\n    transactionsAndSigners: [\n      { transaction: tx1, signers: [baseVault, quoteVault] },\n      {\n        transaction: tx2,\n        signers: [market, requestQueue, eventQueue, bids, asks],\n      },\n    ],\n    wallet,\n    connection,\n  });\n  for (let signedTransaction of signedTransactions) {\n    await sendSignedTransaction({\n      signedTransaction,\n      connection,\n    });\n  }\n\n  return market.publicKey;\n}\n\nexport const getUnixTs = () => {\n  return new Date().getTime() / 1000;\n};\n\nconst DEFAULT_TIMEOUT = 15000;\n\nexport async function sendTransaction({\n  transaction,\n  wallet,\n  signers = [],\n  connection,\n  sendingMessage = 'Sending transaction...',\n  sentMessage = 'Transaction sent',\n  successMessage = 'Transaction confirmed',\n  timeout = DEFAULT_TIMEOUT,\n  sendNotification = true,\n}: {\n  transaction: Transaction;\n  wallet: WalletAdapter;\n  signers?: Array<Account>;\n  connection: Connection;\n  sendingMessage?: string;\n  sentMessage?: string;\n  successMessage?: string;\n  timeout?: number;\n  sendNotification?: boolean;\n}) {\n  const signedTransaction = await signTransaction({\n    transaction,\n    wallet,\n    signers,\n    connection,\n  });\n  return await sendSignedTransaction({\n    signedTransaction,\n    connection,\n    sendingMessage,\n    sentMessage,\n    successMessage,\n    timeout,\n    sendNotification,\n  });\n}\n\nexport async function signTransaction({\n  transaction,\n  wallet,\n  signers = [],\n  connection,\n}: {\n  transaction: Transaction;\n  wallet: WalletAdapter;\n  signers?: Array<Account>;\n  connection: Connection;\n}) {\n  transaction.recentBlockhash = (\n    await connection.getRecentBlockhash('max')\n  ).blockhash;\n  transaction.setSigners(wallet.publicKey, ...signers.map((s) => s.publicKey));\n  if (signers.length > 0) {\n    transaction.partialSign(...signers);\n  }\n  return await wallet.signTransaction(transaction);\n}\n\nexport async function signTransactions({\n  transactionsAndSigners,\n  wallet,\n  connection,\n}: {\n  transactionsAndSigners: {\n    transaction: Transaction;\n    signers?: Array<Account>;\n  }[];\n  wallet: WalletAdapter;\n  connection: Connection;\n}) {\n  const blockhash = (await connection.getRecentBlockhash('max')).blockhash;\n  transactionsAndSigners.forEach(({ transaction, signers = [] }) => {\n    transaction.recentBlockhash = blockhash;\n    transaction.setSigners(\n      wallet.publicKey,\n      ...signers.map((s) => s.publicKey),\n    );\n    if (signers?.length > 0) {\n      transaction.partialSign(...signers);\n    }\n  });\n  return await wallet.signAllTransactions(\n    transactionsAndSigners.map(({ transaction }) => transaction),\n  );\n}\n\nexport async function sendSignedTransaction({\n  signedTransaction,\n  connection,\n  sendingMessage = 'Sending transaction...',\n  sentMessage = 'Transaction sent',\n  successMessage = 'Transaction confirmed',\n  timeout = DEFAULT_TIMEOUT,\n  sendNotification = true,\n}: {\n  signedTransaction: Transaction;\n  connection: Connection;\n  sendingMessage?: string;\n  sentMessage?: string;\n  successMessage?: string;\n  timeout?: number;\n  sendNotification?: boolean;\n}): Promise<string> {\n  const rawTransaction = signedTransaction.serialize();\n  const startTime = getUnixTs();\n  if (sendNotification) {\n    notify({ message: sendingMessage });\n  }\n  const txid: TransactionSignature = await connection.sendRawTransaction(\n    rawTransaction,\n    {\n      skipPreflight: true,\n    },\n  );\n  if (sendNotification) {\n    notify({ message: sentMessage, type: 'success', txid });\n  }\n\n  console.log('Started awaiting confirmation for', txid);\n\n  let done = false;\n  (async () => {\n    while (!done && getUnixTs() - startTime < timeout) {\n      connection.sendRawTransaction(rawTransaction, {\n        skipPreflight: true,\n      });\n      await sleep(300);\n    }\n  })();\n  try {\n    await awaitTransactionSignatureConfirmation(txid, timeout, connection);\n  } catch (err) {\n    if (err.timeout) {\n      throw new Error('Timed out awaiting confirmation on transaction');\n    }\n    let simulateResult: SimulatedTransactionResponse | null = null;\n    try {\n      simulateResult = (\n        await simulateTransaction(connection, signedTransaction, 'single')\n      ).value;\n    } catch (e) { }\n    if (simulateResult && simulateResult.err) {\n      if (simulateResult.logs) {\n        for (let i = simulateResult.logs.length - 1; i >= 0; --i) {\n          const line = simulateResult.logs[i];\n          if (line.startsWith('Program log: ')) {\n            throw new Error(\n              'Transaction failed: ' + line.slice('Program log: '.length),\n            );\n          }\n        }\n      }\n      let parsedError;\n      if (\n        typeof simulateResult.err == 'object' &&\n        'InstructionError' in simulateResult.err\n      ) {\n        const parsedErrorInfo = parseInstructionErrorResponse(\n          signedTransaction,\n          simulateResult.err['InstructionError'],\n        );\n        parsedError = parsedErrorInfo.error;\n      } else {\n        parsedError = JSON.stringify(simulateResult.err);\n      }\n      throw new Error(parsedError);\n    }\n    throw new Error('Transaction failed');\n  } finally {\n    done = true;\n  }\n  if (sendNotification) {\n    notify({ message: successMessage, type: 'success', txid });\n  }\n\n  console.log('Latency', txid, getUnixTs() - startTime);\n  return txid;\n}\n\nasync function awaitTransactionSignatureConfirmation(\n  txid: TransactionSignature,\n  timeout: number,\n  connection: Connection,\n) {\n  let done = false;\n  const result = await new Promise((resolve, reject) => {\n    (async () => {\n      setTimeout(() => {\n        if (done) {\n          return;\n        }\n        done = true;\n        console.log('Timed out for txid', txid);\n        reject({ timeout: true });\n      }, timeout);\n      try {\n        connection.onSignature(\n          txid,\n          (result) => {\n            console.log('WS confirmed', txid, result);\n            done = true;\n            if (result.err) {\n              reject(result.err);\n            } else {\n              resolve(result);\n            }\n          },\n          'recent',\n        );\n        console.log('Set up WS connection', txid);\n      } catch (e) {\n        done = true;\n        console.log('WS error in setup', txid, e);\n      }\n      while (!done) {\n        // eslint-disable-next-line no-loop-func\n        (async () => {\n          try {\n            const signatureStatuses = await connection.getSignatureStatuses([\n              txid,\n            ]);\n            const result = signatureStatuses && signatureStatuses.value[0];\n            if (!done) {\n              if (!result) {\n                console.log('REST null result for', txid, result);\n              } else if (result.err) {\n                console.log('REST error for', txid, result);\n                done = true;\n                reject(result.err);\n              } else if (!result.confirmations) {\n                console.log('REST no confirmations for', txid, result);\n              } else {\n                console.log('REST confirmation for', txid, result);\n                done = true;\n                resolve(result);\n              }\n            }\n          } catch (e) {\n            if (!done) {\n              console.log('REST connection error: txid', txid, e);\n            }\n          }\n        })();\n        await sleep(300);\n      }\n    })();\n  });\n  done = true;\n  return result;\n}\n\nfunction mergeTransactions(transactions: (Transaction | undefined)[]) {\n  const transaction = new Transaction();\n  transactions\n    .filter((t): t is Transaction => t !== undefined)\n    .forEach((t) => {\n      transaction.add(t);\n    });\n  return transaction;\n}\n\nfunction jsonRpcResult(resultDescription: any) {\n  const jsonRpcVersion = struct.literal('2.0');\n  return struct.union([\n    struct({\n      jsonrpc: jsonRpcVersion,\n      id: 'string',\n      error: 'any',\n    }),\n    struct({\n      jsonrpc: jsonRpcVersion,\n      id: 'string',\n      error: 'null?',\n      result: resultDescription,\n    }),\n  ]);\n}\n\nfunction jsonRpcResultAndContext(resultDescription: any) {\n  return jsonRpcResult({\n    context: struct({\n      slot: 'number',\n    }),\n    value: resultDescription,\n  });\n}\n\nconst AccountInfoResult = struct({\n  executable: 'boolean',\n  owner: 'string',\n  lamports: 'number',\n  data: 'any',\n  rentEpoch: 'number?',\n});\n\nexport const GetMultipleAccountsAndContextRpcResult = jsonRpcResultAndContext(\n  struct.array([struct.union(['null', AccountInfoResult])]),\n);\n\nexport async function getMultipleSolanaAccounts(\n  connection: Connection,\n  publicKeys: PublicKey[],\n): Promise<\n  RpcResponseAndContext<{ [key: string]: AccountInfo<Buffer> | null }>\n> {\n  const args = [publicKeys.map((k) => k.toBase58()), { commitment: 'recent' }];\n  // @ts-ignore\n  const unsafeRes = await connection._rpcRequest('getMultipleAccounts', args);\n  const res = GetMultipleAccountsAndContextRpcResult(unsafeRes);\n  if (res.error) {\n    throw new Error(\n      'failed to get info about accounts ' +\n      publicKeys.map((k) => k.toBase58()).join(', ') +\n      ': ' +\n      res.error.message,\n    );\n  }\n  assert(typeof res.result !== 'undefined');\n  const accounts: Array<{\n    executable: any;\n    owner: PublicKey;\n    lamports: any;\n    data: Buffer;\n  } | null> = [];\n  for (const account of res.result.value) {\n    let value: {\n      executable: any;\n      owner: PublicKey;\n      lamports: any;\n      data: Buffer;\n    } | null = null;\n    if (res.result.value) {\n      const { executable, owner, lamports, data } = account;\n      assert(data[1] === 'base64');\n      value = {\n        executable,\n        owner: new PublicKey(owner),\n        lamports,\n        data: Buffer.from(data[0], 'base64'),\n      };\n    }\n    accounts.push(value);\n  }\n  return {\n    context: {\n      slot: res.result.context.slot,\n    },\n    value: Object.fromEntries(\n      accounts.map((account, i) => [publicKeys[i].toBase58(), account]),\n    ),\n  };\n}\n\n/** Copy of Connection.simulateTransaction that takes a commitment parameter. */\nasync function simulateTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  commitment: Commitment,\n): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n  // @ts-ignore\n  transaction.recentBlockhash = await connection._recentBlockhash(\n    // @ts-ignore\n    connection._disableBlockhashCaching,\n  );\n\n  const signData = transaction.serializeMessage();\n  // @ts-ignore\n  const wireTransaction = transaction._serialize(signData);\n  const encodedTransaction = wireTransaction.toString('base64');\n  const config: any = { encoding: 'base64', commitment };\n  const args = [encodedTransaction, config];\n\n  // @ts-ignore\n  const res = await connection._rpcRequest('simulateTransaction', args);\n  if (res.error) {\n    throw new Error('failed to simulate transaction: ' + res.error.message);\n  }\n  return res.result;\n}\n","import * as BufferLayout from 'buffer-layout';\nimport {AccountInfo, Connection, PublicKey} from '@solana/web3.js';\nimport {WRAPPED_SOL_MINT} from '@project-serum/serum/lib/token-instructions';\nimport {TokenAccount} from './types';\nimport {TOKEN_MINTS} from '@project-serum/serum';\nimport {useAllMarkets, useCustomMarkets, useTokenAccounts} from './markets';\nimport {getMultipleSolanaAccounts} from './send';\nimport {useConnection} from './connection';\nimport {useAsyncData} from './fetch-loop';\nimport tuple from 'immutable-tuple';\nimport BN from 'bn.js';\nimport {useMemo} from 'react';\n\nexport const ACCOUNT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(32, 'mint'),\n  BufferLayout.blob(32, 'owner'),\n  BufferLayout.nu64('amount'),\n  BufferLayout.blob(93),\n]);\n\nexport const MINT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(36),\n  BufferLayout.blob(8, 'supply'),\n  BufferLayout.u8('decimals'),\n  BufferLayout.u8('initialized'),\n  BufferLayout.blob(36),\n]);\n\nexport function parseTokenAccountData(\n  data: Buffer,\n): { mint: PublicKey; owner: PublicKey; amount: number } {\n  let { mint, owner, amount } = ACCOUNT_LAYOUT.decode(data);\n  return {\n    mint: new PublicKey(mint),\n    owner: new PublicKey(owner),\n    amount,\n  };\n}\n\nexport interface MintInfo {\n  decimals: number;\n  initialized: boolean;\n  supply: BN;\n}\n\nexport function parseTokenMintData(data): MintInfo {\n  let { decimals, initialized, supply } = MINT_LAYOUT.decode(data);\n  return {\n    decimals,\n    initialized: !!initialized,\n    supply: new BN(supply, 10, 'le'),\n  };\n}\n\nexport function getOwnedAccountsFilters(publicKey: PublicKey) {\n  return [\n    {\n      memcmp: {\n        offset: ACCOUNT_LAYOUT.offsetOf('owner'),\n        bytes: publicKey.toBase58(),\n      },\n    },\n    {\n      dataSize: ACCOUNT_LAYOUT.span,\n    },\n  ];\n}\n\nexport const TOKEN_PROGRAM_ID = new PublicKey(\n  'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n);\n\nexport async function getOwnedTokenAccounts(\n  connection: Connection,\n  publicKey: PublicKey,\n): Promise<Array<{ publicKey: PublicKey; accountInfo: AccountInfo<Buffer> }>> {\n  let filters = getOwnedAccountsFilters(publicKey);\n  let resp = await connection.getProgramAccounts(\n    TOKEN_PROGRAM_ID,\n    {\n      filters,\n    },\n  );\n  return resp\n    .map(({ pubkey, account: { data, executable, owner, lamports } }) => ({\n      publicKey: new PublicKey(pubkey),\n      accountInfo: {\n        data,\n        executable,\n        owner: new PublicKey(owner),\n        lamports,\n      },\n    }))\n}\n\nexport async function getTokenAccountInfo(\n  connection: Connection,\n  ownerAddress: PublicKey,\n) {\n  let [splAccounts, account] = await Promise.all([\n    getOwnedTokenAccounts(connection, ownerAddress),\n    connection.getAccountInfo(ownerAddress),\n  ]);\n  const parsedSplAccounts: TokenAccount[] = splAccounts.map(\n    ({ publicKey, accountInfo }) => {\n      return {\n        pubkey: publicKey,\n        account: accountInfo,\n        effectiveMint: parseTokenAccountData(accountInfo.data).mint,\n      };\n    },\n  );\n  return parsedSplAccounts.concat({\n    pubkey: ownerAddress,\n    account,\n    effectiveMint: WRAPPED_SOL_MINT,\n  });\n}\n\n// todo: use this to map custom mints to custom tickers. Add functionality once custom markets store mints\nexport function useMintToTickers(): { [mint: string]: string } {\n  const { customMarkets } = useCustomMarkets();\n  return useMemo(() => {\n    return Object.fromEntries(\n      TOKEN_MINTS.map((mint) => [mint.address.toBase58(), mint.name]),\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [customMarkets.length]);\n}\n\nconst _VERY_SLOW_REFRESH_INTERVAL = 5000 * 1000;\n\n// todo: move this to using mints stored in static market infos once custom markets support that.\nexport function useMintInfos(): [\n  (\n    | {\n        [mintAddress: string]: {\n          decimals: number;\n          initialized: boolean;\n        } | null;\n      }\n    | null\n    | undefined\n  ),\n  boolean,\n] {\n  const connection = useConnection();\n  const [tokenAccounts] = useTokenAccounts();\n  const [allMarkets] = useAllMarkets();\n\n  const allMints = (tokenAccounts || [])\n    .map((account) => account.effectiveMint)\n    .concat(\n      (allMarkets || []).map((marketInfo) => marketInfo.market.baseMintAddress),\n    )\n    .concat(\n      (allMarkets || []).map(\n        (marketInfo) => marketInfo.market.quoteMintAddress,\n      ),\n    );\n  const uniqueMints = [...new Set(allMints.map((mint) => mint.toBase58()))].map(\n    (stringMint) => new PublicKey(stringMint),\n  );\n\n  const getAllMintInfo = async () => {\n    const mintInfos = await getMultipleSolanaAccounts(connection, uniqueMints);\n    return Object.fromEntries(\n      Object.entries(mintInfos.value).map(([key, accountInfo]) => [\n        key,\n        accountInfo && parseTokenMintData(accountInfo.data),\n      ]),\n    );\n  };\n\n  return useAsyncData(\n    getAllMintInfo,\n    tuple(\n      'getAllMintInfo',\n      connection,\n      (tokenAccounts || []).length,\n      (allMarkets || []).length,\n    ),\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\n  );\n}\n","import { BonfidaTrade } from './types';\n\nexport default class BonfidaApi {\n  static URL: string = 'https://serum-api.bonfida.com/';\n\n  static async get(path: string) {\n    try {\n      const response = await fetch(this.URL + path);\n      if (response.ok) {\n        const responseJson = await response.json();\n        return responseJson.success ? responseJson.data : null;\n      }\n    } catch (err) {\n      console.log(`Error fetching from Bonfida API ${path}: ${err}`);\n    }\n    return null;\n  }\n\n  static async getRecentTrades(\n    marketAddress: string,\n  ): Promise<BonfidaTrade[] | null> {\n    return BonfidaApi.get(`trades/address/${marketAddress}`);\n  }\n}\n\nexport const BONFIDA_DATA_FEED = 'https://serum-api.bonfida.com/tv';\n","import {Market, MARKETS, OpenOrders, Orderbook, TOKEN_MINTS, TokenInstructions,} from '@project-serum/serum';\nimport {PublicKey} from '@solana/web3.js';\nimport React, {useContext, useEffect, useState} from 'react';\nimport {divideBnToNumber, floorToDecimal, getTokenMultiplierFromDecimals, sleep, useLocalStorageState,} from './utils';\nimport {refreshCache, useAsyncData} from './fetch-loop';\nimport {useAccountData, useAccountInfo, useConnection} from './connection';\nimport {useWallet} from './wallet';\nimport tuple from 'immutable-tuple';\nimport {notify} from './notifications';\nimport BN from 'bn.js';\nimport {getTokenAccountInfo, parseTokenAccountData, useMintInfos,} from './tokens';\nimport {\n  Balances,\n  CustomMarketInfo,\n  DeprecatedOpenOrdersBalances,\n  FullMarketInfo,\n  MarketContextValues,\n  MarketInfo,\n  OrderWithMarketAndMarketName,\n  SelectedTokenAccounts,\n  TokenAccount,\n} from './types';\nimport {WRAPPED_SOL_MINT} from '@project-serum/serum/lib/token-instructions';\nimport {Order} from '@project-serum/serum/lib/market';\nimport BonfidaApi from './bonfidaConnector';\n\n// Used in debugging, should be false in production\nconst _IGNORE_DEPRECATED = false;\n\nexport const USE_MARKETS: MarketInfo[] = _IGNORE_DEPRECATED\n  ? MARKETS.map((m) => ({ ...m, deprecated: false }))\n  : MARKETS;\n\nexport function useMarketsList() {\n  return USE_MARKETS.filter(({ name, deprecated }) => !deprecated && !process.env.REACT_APP_EXCLUDE_MARKETS?.includes(name));\n}\n\nexport function useAllMarkets() {\n  const connection = useConnection();\n  const { customMarkets } = useCustomMarkets();\n\n  const getAllMarkets = async () => {\n    const markets: Array<{\n      market: Market;\n      marketName: string;\n      programId: PublicKey;\n    } | null> = await Promise.all(\n      getMarketInfos(customMarkets).map(async (marketInfo) => {\n        try {\n          const market = await Market.load(\n            connection,\n            marketInfo.address,\n            {},\n            marketInfo.programId,\n          );\n          return {\n            market,\n            marketName: marketInfo.name,\n            programId: marketInfo.programId,\n          };\n        } catch (e) {\n          notify({\n            message: 'Error loading all market',\n            description: e.message,\n            type: 'error',\n          });\n          return null;\n        }\n      }),\n    );\n    return markets.filter(\n      (m): m is { market: Market; marketName: string; programId: PublicKey } =>\n        !!m,\n    );\n  };\n  return useAsyncData(\n    getAllMarkets,\n    tuple('getAllMarkets', customMarkets.length, connection),\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useUnmigratedOpenOrdersAccounts() {\n  const connection = useConnection();\n  const { wallet } = useWallet();\n\n  async function getUnmigratedOpenOrdersAccounts(): Promise<OpenOrders[]> {\n    if (!wallet || !connection || !wallet.publicKey) {\n      return [];\n    }\n    console.log('refreshing useUnmigratedOpenOrdersAccounts');\n    let deprecatedOpenOrdersAccounts: OpenOrders[] = [];\n    const deprecatedProgramIds = Array.from(\n      new Set(\n        USE_MARKETS.filter(\n          ({ deprecated }) => deprecated,\n        ).map(({ programId }) => programId.toBase58()),\n      ),\n    ).map((publicKeyStr) => new PublicKey(publicKeyStr));\n    let programId: PublicKey;\n    for (programId of deprecatedProgramIds) {\n      try {\n        const openOrdersAccounts = await OpenOrders.findForOwner(\n          connection,\n          wallet.publicKey,\n          programId,\n        );\n        deprecatedOpenOrdersAccounts = deprecatedOpenOrdersAccounts.concat(\n          openOrdersAccounts\n            .filter(\n              (openOrders) =>\n                openOrders.baseTokenTotal.toNumber() ||\n                openOrders.quoteTokenTotal.toNumber(),\n            )\n            .filter((openOrders) =>\n              USE_MARKETS.some(\n                (market) =>\n                  market.deprecated && market.address.equals(openOrders.market),\n              ),\n            ),\n        );\n      } catch (e) {\n        console.log(\n          'Error loading deprecated markets',\n          programId?.toBase58(),\n          e.message,\n        );\n      }\n    }\n    // Maybe sort\n    return deprecatedOpenOrdersAccounts;\n  }\n\n  const cacheKey = tuple(\n    'getUnmigratedOpenOrdersAccounts',\n    connection,\n    wallet?.publicKey?.toBase58(),\n  );\n  const [accounts] = useAsyncData(getUnmigratedOpenOrdersAccounts, cacheKey, {\n    refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\n  });\n\n  return {\n    accounts,\n    refresh: (clearCache: boolean) => refreshCache(cacheKey, clearCache),\n  };\n}\n\nconst MarketContext: React.Context<null | MarketContextValues> = React.createContext<null | MarketContextValues>(\n  null,\n);\n\nconst _VERY_SLOW_REFRESH_INTERVAL = 5000 * 1000;\n\n// For things that don't really change\nconst _SLOW_REFRESH_INTERVAL = 5 * 1000;\n\n// For things that change frequently\nconst _FAST_REFRESH_INTERVAL = 1000;\n\nexport const DEFAULT_MARKET = USE_MARKETS.find(\n  ({ name, deprecated }) => name === 'SRM/USDT' && !deprecated,\n);\n\nexport function getMarketDetails(\n  market: Market | undefined | null,\n  customMarkets: CustomMarketInfo[],\n): FullMarketInfo {\n  if (!market) {\n    return {};\n  }\n  const marketInfos = getMarketInfos(customMarkets);\n  const marketInfo = marketInfos.find((otherMarket) =>\n    otherMarket.address.equals(market.address),\n  );\n  const baseCurrency =\n    (market?.baseMintAddress &&\n      TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\n        ?.name) ||\n    (marketInfo?.baseLabel && `${marketInfo?.baseLabel}*`) ||\n    'UNKNOWN';\n  const quoteCurrency =\n    (market?.quoteMintAddress &&\n      TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\n        ?.name) ||\n    (marketInfo?.quoteLabel && `${marketInfo?.quoteLabel}*`) ||\n    'UNKNOWN';\n\n  return {\n    ...marketInfo,\n    marketName: marketInfo?.name,\n    baseCurrency,\n    quoteCurrency,\n    marketInfo,\n  };\n}\n\nexport function useCustomMarkets() {\n  const [customMarkets, setCustomMarkets] = useLocalStorageState<\n    CustomMarketInfo[]\n  >('customMarkets', []);\n  return { customMarkets, setCustomMarkets };\n}\n\nexport function MarketProvider({ marketAddress, setMarketAddress, children }) {\n  const { customMarkets, setCustomMarkets } = useCustomMarkets();\n\n  const address = marketAddress && new PublicKey(marketAddress);\n  const connection = useConnection();\n  const marketInfos = getMarketInfos(customMarkets);\n  const marketInfo =\n    address && marketInfos.find((market) => market.address.equals(address));\n\n  // Replace existing market with a non-deprecated one on first load\n  useEffect(() => {\n    if (marketInfo && marketInfo.deprecated) {\n      console.log('Switching markets from deprecated', marketInfo);\n      if (DEFAULT_MARKET) {\n        setMarketAddress(DEFAULT_MARKET.address.toBase58());\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const [market, setMarket] = useState<Market | null>();\n  useEffect(() => {\n    if (\n      market &&\n      marketInfo &&\n      // @ts-ignore\n      market._decoded.ownAddress?.equals(marketInfo?.address)\n    ) {\n      return;\n    }\n    setMarket(null);\n    if (!marketInfo || !marketInfo.address) {\n      notify({\n        message: 'Error loading market',\n        description: 'Please select a market from the dropdown',\n        type: 'error',\n      });\n      return;\n    }\n    Market.load(connection, marketInfo.address, {}, marketInfo.programId)\n      .then(setMarket)\n      .catch((e) =>\n        notify({\n          message: 'Error loading market',\n          description: e.message,\n          type: 'error',\n        }),\n      );\n    // eslint-disable-next-line\n  }, [connection, marketInfo]);\n\n  return (\n    <MarketContext.Provider\n      value={{\n        market,\n        ...getMarketDetails(market, customMarkets),\n        setMarketAddress,\n        customMarkets,\n        setCustomMarkets,\n      }}\n    >\n      {children}\n    </MarketContext.Provider>\n  );\n}\n\nexport function getTradePageUrl(marketAddress?: string) {\n  if (!marketAddress) {\n    const saved = localStorage.getItem('marketAddress');\n    if (saved) {\n      marketAddress = JSON.parse(saved);\n    }\n    marketAddress = marketAddress || DEFAULT_MARKET?.address.toBase58() || '';\n  }\n  return `/market/${marketAddress}`;\n}\n\nexport function useSelectedTokenAccounts(): [\n  SelectedTokenAccounts,\n  (newSelectedTokenAccounts: SelectedTokenAccounts) => void,\n] {\n  const [\n    selectedTokenAccounts,\n    setSelectedTokenAccounts,\n  ] = useLocalStorageState<SelectedTokenAccounts>('selectedTokenAccounts', {});\n  return [selectedTokenAccounts, setSelectedTokenAccounts];\n}\n\nexport function useMarket() {\n  const context = useContext(MarketContext);\n  if (!context) {\n    throw new Error('Missing market context');\n  }\n  return context;\n}\n\nexport function useMarkPrice() {\n  const [markPrice, setMarkPrice] = useState<null | number>(null);\n\n  const [orderbook] = useOrderbook();\n  const trades = useTrades();\n\n  useEffect(() => {\n    let bb = orderbook?.bids?.length > 0 && Number(orderbook.bids[0][0]);\n    let ba = orderbook?.asks?.length > 0 && Number(orderbook.asks[0][0]);\n    let last = trades && trades.length > 0 && trades[0].price;\n\n    let markPrice =\n      bb && ba\n        ? last\n          ? [bb, ba, last].sort((a, b) => a - b)[1]\n          : (bb + ba) / 2\n        : null;\n\n    setMarkPrice(markPrice);\n  }, [orderbook, trades]);\n\n  return markPrice;\n}\n\nexport function _useUnfilteredTrades(limit = 10000) {\n  const { market } = useMarket();\n  const connection = useConnection();\n  async function getUnfilteredTrades(): Promise<any[] | null> {\n    if (!market || !connection) {\n      return null;\n    }\n    return await market.loadFills(connection, limit);\n  }\n  const [trades] = useAsyncData(\n    getUnfilteredTrades,\n    tuple('getUnfilteredTrades', market, connection),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n  return trades;\n  // NOTE: For now, websocket is too expensive since the event queue is large\n  // and updates very frequently\n\n  // let data = useAccountData(market && market._decoded.eventQueue);\n  // if (!data) {\n  //   return null;\n  // }\n  // const events = decodeEventQueue(data, limit);\n  // return events\n  //   .filter((event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0))\n  //   .map(market.parseFillEvent.bind(market));\n}\n\nexport function useBonfidaTrades() {\n  const { market } = useMarket();\n  const marketAddress = market?.address.toBase58();\n\n  async function getBonfidaTrades() {\n    if (!marketAddress) {\n      return null;\n    }\n    return await BonfidaApi.getRecentTrades(marketAddress);\n  }\n\n  return useAsyncData(\n    getBonfidaTrades,\n    tuple('getBonfidaTrades', marketAddress),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n    false,\n  );\n}\n\nexport function useOrderbookAccounts() {\n  const { market } = useMarket();\n  // @ts-ignore\n  let bidData = useAccountData(market && market._decoded.bids);\n  // @ts-ignore\n  let askData = useAccountData(market && market._decoded.asks);\n  return {\n    bidOrderbook: market && bidData ? Orderbook.decode(market, bidData) : null,\n    askOrderbook: market && askData ? Orderbook.decode(market, askData) : null,\n  };\n}\n\nexport function useOrderbook(\n  depth = 20,\n): [{ bids: number[][]; asks: number[][] }, boolean] {\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\n  const { market } = useMarket();\n  const bids =\n    !bidOrderbook || !market\n      ? []\n      : bidOrderbook.getL2(depth).map(([price, size]) => [price, size]);\n  const asks =\n    !askOrderbook || !market\n      ? []\n      : askOrderbook.getL2(depth).map(([price, size]) => [price, size]);\n  return [{ bids, asks }, !!bids || !!asks];\n}\n\n// Want the balances table to be fast-updating, dont want open orders to flicker\n// TODO: Update to use websocket\nexport function useOpenOrdersAccounts(fast = false) {\n  const { market } = useMarket();\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getOpenOrdersAccounts() {\n    if (!connected || !wallet) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    return await market.findOpenOrdersAccountsForOwner(\n      connection,\n      wallet.publicKey,\n    );\n  }\n  return useAsyncData<OpenOrders[] | null>(\n    getOpenOrdersAccounts,\n    tuple('getOpenOrdersAccounts', wallet, market, connected),\n    { refreshInterval: fast ? _FAST_REFRESH_INTERVAL : _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useSelectedOpenOrdersAccount(fast = false) {\n  const [accounts] = useOpenOrdersAccounts(fast);\n  if (!accounts) {\n    return null;\n  }\n  return accounts[0];\n}\n\nexport function useTokenAccounts(): [\n  TokenAccount[] | null | undefined,\n  boolean,\n] {\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getTokenAccounts() {\n    if (!connected || !wallet) {\n      return null;\n    }\n    return await getTokenAccountInfo(connection, wallet.publicKey);\n  }\n  return useAsyncData(\n    getTokenAccounts,\n    tuple('getTokenAccounts', wallet, connected),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function getSelectedTokenAccountForMint(\n  accounts: TokenAccount[] | undefined | null,\n  mint: PublicKey | undefined,\n  selectedPubKey?: string | PublicKey | null,\n) {\n  if (!accounts || !mint) {\n    return null;\n  }\n  const filtered = accounts.filter(\n    ({ effectiveMint, pubkey }) =>\n      mint.equals(effectiveMint) &&\n      (!selectedPubKey ||\n        (typeof selectedPubKey === 'string'\n          ? selectedPubKey\n          : selectedPubKey.toBase58()) === pubkey.toBase58()),\n  );\n  return filtered && filtered[0];\n}\n\nexport function useSelectedQuoteCurrencyAccount() {\n  const [accounts] = useTokenAccounts();\n  const { market } = useMarket();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n  const mintAddress = market?.quoteMintAddress;\n  return getSelectedTokenAccountForMint(\n    accounts,\n    mintAddress,\n    mintAddress && selectedTokenAccounts[mintAddress.toBase58()],\n  );\n}\n\nexport function useSelectedBaseCurrencyAccount() {\n  const [accounts] = useTokenAccounts();\n  const { market } = useMarket();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n  const mintAddress = market?.baseMintAddress;\n  return getSelectedTokenAccountForMint(\n    accounts,\n    mintAddress,\n    mintAddress && selectedTokenAccounts[mintAddress.toBase58()],\n  );\n}\n\n// TODO: Update to use websocket\nexport function useSelectedQuoteCurrencyBalances() {\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const { market } = useMarket();\n  const [accountInfo, loaded] = useAccountInfo(quoteCurrencyAccount?.pubkey);\n  if (!market || !quoteCurrencyAccount || !loaded || !accountInfo) {\n    return null;\n  }\n  if (market.quoteMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\n    return accountInfo?.lamports / 1e9 ?? 0;\n  }\n  return market.quoteSplSizeToNumber(\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\n  );\n}\n\n// TODO: Update to use websocket\nexport function useSelectedBaseCurrencyBalances() {\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const { market } = useMarket();\n  const [accountInfo, loaded] = useAccountInfo(baseCurrencyAccount?.pubkey);\n  if (!market || !baseCurrencyAccount || !loaded || !accountInfo) {\n    return null;\n  }\n  if (market.baseMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\n    return accountInfo?.lamports / 1e9 ?? 0;\n  }\n  return market.baseSplSizeToNumber(\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\n  );\n}\n\nexport function useOpenOrders() {\n  const { market, marketName } = useMarket();\n  const openOrdersAccount = useSelectedOpenOrdersAccount();\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\n  if (!market || !openOrdersAccount || !bidOrderbook || !askOrderbook) {\n    return null;\n  }\n  return market\n    .filterForOpenOrders(bidOrderbook, askOrderbook, [openOrdersAccount])\n    .map((order) => ({ ...order, marketName, market }));\n}\n\nexport function useTrades(limit = 100) {\n  const trades = _useUnfilteredTrades(limit);\n  if (!trades) {\n    return null;\n  }\n  // Until partial fills are each given their own fill, use maker fills\n  return trades\n    .filter(({ eventFlags }) => eventFlags.maker)\n    .map((trade) => ({\n      ...trade,\n      side: trade.side === 'buy' ? 'sell' : 'buy',\n    }));\n}\n\nexport function useLocallyStoredFeeDiscountKey(): {\n  storedFeeDiscountKey: PublicKey | undefined;\n  setStoredFeeDiscountKey: (key: string) => void;\n} {\n  const [\n    storedFeeDiscountKey,\n    setStoredFeeDiscountKey,\n  ] = useLocalStorageState<string>(`feeDiscountKey`, undefined);\n  return {\n    storedFeeDiscountKey: storedFeeDiscountKey\n      ? new PublicKey(storedFeeDiscountKey)\n      : undefined,\n    setStoredFeeDiscountKey,\n  };\n}\n\nexport function useFeeDiscountKeys(): [\n  (\n    | {\n        pubkey: PublicKey;\n        feeTier: number;\n        balance: number;\n        mint: PublicKey;\n      }[]\n    | null\n    | undefined\n  ),\n  boolean,\n] {\n  const { market } = useMarket();\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  const { setStoredFeeDiscountKey } = useLocallyStoredFeeDiscountKey();\n  let getFeeDiscountKeys = async () => {\n    if (!connected || !wallet) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    const feeDiscountKey = await market.findFeeDiscountKeys(\n      connection,\n      wallet.publicKey,\n    );\n    if (feeDiscountKey) {\n      setStoredFeeDiscountKey(feeDiscountKey[0].pubkey.toBase58());\n    }\n    return feeDiscountKey;\n  };\n  return useAsyncData(\n    getFeeDiscountKeys,\n    tuple('getFeeDiscountKeys', wallet, market, connected),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useFills(limit = 100) {\n  const { marketName } = useMarket();\n  const fills = _useUnfilteredTrades(limit);\n  const [openOrdersAccounts] = useOpenOrdersAccounts();\n  if (!openOrdersAccounts || openOrdersAccounts.length === 0) {\n    return null;\n  }\n  if (!fills) {\n    return null;\n  }\n  return fills\n    .filter((fill) =>\n      openOrdersAccounts.some((openOrdersAccount) =>\n        fill.openOrders.equals(openOrdersAccount.publicKey),\n      ),\n    )\n    .map((fill) => ({ ...fill, marketName }));\n}\n\nexport function useAllOpenOrdersAccounts() {\n  const { wallet, connected } = useWallet();\n  const connection = useConnection();\n  const marketInfos = useMarketInfos();\n  const programIds = [\n    ...new Set(marketInfos.map((info) => info.programId.toBase58())),\n  ].map((stringProgramId) => new PublicKey(stringProgramId));\n\n  const getAllOpenOrdersAccounts = async () => {\n    if (!connected || !wallet) {\n      return [];\n    }\n    return (\n      await Promise.all(\n        programIds.map((programId) =>\n          OpenOrders.findForOwner(connection, wallet.publicKey, programId),\n        ),\n      )\n    ).flat();\n  };\n  return useAsyncData(\n    getAllOpenOrdersAccounts,\n    tuple(\n      'getAllOpenOrdersAccounts',\n      connection,\n      connected,\n      wallet?.publicKey?.toBase58(),\n      marketInfos.length,\n      (programIds || []).length,\n    ),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useAllOpenOrdersBalances() {\n  const [\n    openOrdersAccounts,\n    loadedOpenOrdersAccounts,\n  ] = useAllOpenOrdersAccounts();\n  const [mintInfos, mintInfosConnected] = useMintInfos();\n  const [allMarkets] = useAllMarkets();\n  if (!loadedOpenOrdersAccounts || !mintInfosConnected) {\n    return {};\n  }\n\n  const marketsByAddress = Object.fromEntries(\n    (allMarkets || []).map((m) => [m.market.address.toBase58(), m]),\n  );\n  const openOrdersBalances: {\n    [mint: string]: { market: PublicKey; free: number; total: number }[];\n  } = {};\n  for (let account of openOrdersAccounts || []) {\n    const marketInfo = marketsByAddress[account.market.toBase58()];\n    const baseMint = marketInfo?.market.baseMintAddress.toBase58();\n    const quoteMint = marketInfo?.market.quoteMintAddress.toBase58();\n    if (!(baseMint in openOrdersBalances)) {\n      openOrdersBalances[baseMint] = [];\n    }\n    if (!(quoteMint in openOrdersBalances)) {\n      openOrdersBalances[quoteMint] = [];\n    }\n\n    const baseMintInfo = mintInfos && mintInfos[baseMint];\n    const baseFree = divideBnToNumber(\n      new BN(account.baseTokenFree),\n      getTokenMultiplierFromDecimals(baseMintInfo?.decimals || 0),\n    );\n    const baseTotal = divideBnToNumber(\n      new BN(account.baseTokenTotal),\n      getTokenMultiplierFromDecimals(baseMintInfo?.decimals || 0),\n    );\n    const quoteMintInfo = mintInfos && mintInfos[quoteMint];\n    const quoteFree = divideBnToNumber(\n      new BN(account.quoteTokenFree),\n      getTokenMultiplierFromDecimals(quoteMintInfo?.decimals || 0),\n    );\n    const quoteTotal = divideBnToNumber(\n      new BN(account.quoteTokenTotal),\n      getTokenMultiplierFromDecimals(quoteMintInfo?.decimals || 0),\n    );\n\n    openOrdersBalances[baseMint].push({\n      market: account.market,\n      free: baseFree,\n      total: baseTotal,\n    });\n    openOrdersBalances[quoteMint].push({\n      market: account.market,\n      free: quoteFree,\n      total: quoteTotal,\n    });\n  }\n  return openOrdersBalances;\n}\n\nexport const useAllOpenOrders = (): {\n  openOrders: { orders: Order[]; marketAddress: string }[] | null | undefined;\n  loaded: boolean;\n  refreshOpenOrders: () => void;\n} => {\n  const connection = useConnection();\n  const { connected, wallet } = useWallet();\n  const [loaded, setLoaded] = useState(false);\n  const [refresh, setRefresh] = useState(0);\n  const [openOrders, setOpenOrders] = useState<\n    { orders: Order[]; marketAddress: string }[] | null | undefined\n  >(null);\n  const [lastRefresh, setLastRefresh] = useState(0);\n\n  const refreshOpenOrders = () => {\n    if (new Date().getTime() - lastRefresh > 10 * 1000) {\n      setRefresh((prev) => prev + 1);\n    } else {\n      console.log('not refreshing');\n    }\n  };\n\n  useEffect(() => {\n    if (connected && wallet) {\n      const getAllOpenOrders = async () => {\n        setLoaded(false);\n        const _openOrders: { orders: Order[]; marketAddress: string }[] = [];\n        const getOpenOrdersForMarket = async (marketInfo: MarketInfo) => {\n          await sleep(1000 * Math.random()); // Try not to hit rate limit\n          try {\n            const market = await Market.load(\n              connection,\n              marketInfo.address,\n              undefined,\n              marketInfo.programId,\n            );\n            const orders = await market.loadOrdersForOwner(\n              connection,\n              wallet?.publicKey,\n              30000,\n            );\n            _openOrders.push({\n              orders: orders,\n              marketAddress: marketInfo.address.toBase58(),\n            });\n          } catch (e) {\n            console.warn(`Error loading open order ${marketInfo.name} - ${e}`);\n          }\n        };\n        await Promise.all(USE_MARKETS.map((m) => getOpenOrdersForMarket(m)));\n        setOpenOrders(_openOrders);\n        setLastRefresh(new Date().getTime());\n        setLoaded(true);\n      };\n      getAllOpenOrders();\n    }\n  }, [connection, connected, wallet, refresh]);\n  return {\n    openOrders: openOrders,\n    loaded: loaded,\n    refreshOpenOrders: refreshOpenOrders,\n  };\n};\n\nexport function useBalances(): Balances[] {\n  const baseCurrencyBalances = useSelectedBaseCurrencyBalances();\n  const quoteCurrencyBalances = useSelectedQuoteCurrencyBalances();\n  const openOrders = useSelectedOpenOrdersAccount(true);\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const baseExists =\n    openOrders && openOrders.baseTokenTotal && openOrders.baseTokenFree;\n  const quoteExists =\n    openOrders && openOrders.quoteTokenTotal && openOrders.quoteTokenFree;\n  if (\n    baseCurrency === 'UNKNOWN' ||\n    quoteCurrency === 'UNKNOWN' ||\n    !baseCurrency ||\n    !quoteCurrency\n  ) {\n    return [];\n  }\n  return [\n    {\n      market,\n      key: `${baseCurrency}${quoteCurrency}${baseCurrency}`,\n      coin: baseCurrency,\n      wallet: baseCurrencyBalances,\n      orders:\n        baseExists && market && openOrders\n          ? market.baseSplSizeToNumber(\n              openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\n            )\n          : null,\n      openOrders,\n      unsettled:\n        baseExists && market && openOrders\n          ? market.baseSplSizeToNumber(openOrders.baseTokenFree)\n          : null,\n    },\n    {\n      market,\n      key: `${quoteCurrency}${baseCurrency}${quoteCurrency}`,\n      coin: quoteCurrency,\n      wallet: quoteCurrencyBalances,\n      openOrders,\n      orders:\n        quoteExists && market && openOrders\n          ? market.quoteSplSizeToNumber(\n              openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\n            )\n          : null,\n      unsettled:\n        quoteExists && market && openOrders\n          ? market.quoteSplSizeToNumber(openOrders.quoteTokenFree)\n          : null,\n    },\n  ];\n}\n\nexport function useWalletBalancesForAllMarkets(): {\n  mint: string;\n  balance: number;\n}[] {\n  const [tokenAccounts] = useTokenAccounts();\n  const { connected } = useWallet();\n  const [mintInfos, mintInfosConnected] = useMintInfos();\n\n  if (!connected || !mintInfosConnected) {\n    return [];\n  }\n\n  let balances: { [mint: string]: number } = {};\n  for (let account of tokenAccounts || []) {\n    if (!account.account) {\n      continue;\n    }\n    let parsedAccount;\n    if (account.effectiveMint.equals(WRAPPED_SOL_MINT)) {\n      parsedAccount = {\n        mint: WRAPPED_SOL_MINT,\n        owner: account.pubkey,\n        amount: account.account.lamports,\n      };\n    } else {\n      parsedAccount = parseTokenAccountData(account.account.data);\n    }\n    if (!(parsedAccount.mint.toBase58() in balances)) {\n      balances[parsedAccount.mint.toBase58()] = 0;\n    }\n    const mintInfo = mintInfos && mintInfos[parsedAccount.mint.toBase58()];\n    const additionalAmount = divideBnToNumber(\n      new BN(parsedAccount.amount),\n      getTokenMultiplierFromDecimals(mintInfo?.decimals || 0),\n    );\n    balances[parsedAccount.mint.toBase58()] += additionalAmount;\n  }\n  return Object.entries(balances).map(([mint, balance]) => {\n    return { mint, balance };\n  });\n}\n\nexport function useUnmigratedDeprecatedMarkets() {\n  const connection = useConnection();\n  const { accounts } = useUnmigratedOpenOrdersAccounts();\n  const marketsList =\n    accounts &&\n    Array.from(new Set(accounts.map((openOrders) => openOrders.market)));\n  const deps = marketsList && marketsList.map((m) => m.toBase58());\n\n  const useUnmigratedDeprecatedMarketsInner = async () => {\n    if (!marketsList) {\n      return null;\n    }\n    const getMarket = async (address) => {\n      const marketInfo = USE_MARKETS.find((market) =>\n        market.address.equals(address),\n      );\n      if (!marketInfo) {\n        console.log('Failed loading market');\n        notify({\n          message: 'Error loading market',\n          type: 'error',\n        });\n        return null;\n      }\n      try {\n        console.log('Loading market', marketInfo.name);\n        // NOTE: Should this just be cached by (connection, marketInfo.address, marketInfo.programId)?\n        return await Market.load(\n          connection,\n          marketInfo.address,\n          {},\n          marketInfo.programId,\n        );\n      } catch (e) {\n        console.log('Failed loading market', marketInfo.name, e);\n        notify({\n          message: 'Error loading market',\n          description: e.message,\n          type: 'error',\n        });\n        return null;\n      }\n    };\n    return (await Promise.all(marketsList.map(getMarket))).filter((x) => x);\n  };\n  const [markets] = useAsyncData(\n    useUnmigratedDeprecatedMarketsInner,\n    tuple(\n      'useUnmigratedDeprecatedMarketsInner',\n      connection,\n      deps && deps.toString(),\n    ),\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\n  );\n  if (!markets) {\n    return null;\n  }\n  return markets.map((market) => ({\n    market,\n    openOrdersList: accounts?.filter(\n      (openOrders) => market && openOrders.market.equals(market.address),\n    ),\n  }));\n}\n\nexport function useGetOpenOrdersForDeprecatedMarkets(): {\n  openOrders: OrderWithMarketAndMarketName[] | null | undefined;\n  loaded: boolean;\n  refreshOpenOrders: () => void;\n} {\n  const { connected, wallet } = useWallet();\n  const { customMarkets } = useCustomMarkets();\n  const connection = useConnection();\n  const marketsAndOrders = useUnmigratedDeprecatedMarkets();\n  const marketsList =\n    marketsAndOrders && marketsAndOrders.map(({ market }) => market);\n\n  // This isn't quite right: open order balances could change\n  const deps =\n    marketsList &&\n    marketsList\n      .filter((market): market is Market => !!market)\n      .map((market) => market.address.toBase58());\n\n  async function getOpenOrdersForDeprecatedMarkets() {\n    if (!connected || !wallet) {\n      return null;\n    }\n    if (!marketsList) {\n      return null;\n    }\n    console.log('refreshing getOpenOrdersForDeprecatedMarkets');\n    const getOrders = async (market: Market | null) => {\n      if (!market) {\n        return null;\n      }\n      const { marketName } = getMarketDetails(market, customMarkets);\n      try {\n        console.log('Fetching open orders for', marketName);\n        // Can do better than this, we have the open orders accounts already\n        return (\n          await market.loadOrdersForOwner(connection, wallet.publicKey)\n        ).map((order) => ({ marketName, market, ...order }));\n      } catch (e) {\n        console.log('Failed loading open orders', market.address.toBase58(), e);\n        notify({\n          message: `Error loading open orders for deprecated ${marketName}`,\n          description: e.message,\n          type: 'error',\n        });\n        return null;\n      }\n    };\n    return (await Promise.all(marketsList.map(getOrders)))\n      .filter((x): x is OrderWithMarketAndMarketName[] => !!x)\n      .flat();\n  }\n\n  const cacheKey = tuple(\n    'getOpenOrdersForDeprecatedMarkets',\n    connected,\n    connection,\n    wallet,\n    deps && deps.toString(),\n  );\n  const [openOrders, loaded] = useAsyncData(\n    getOpenOrdersForDeprecatedMarkets,\n    cacheKey,\n    {\n      refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\n    },\n  );\n  console.log('openOrders', openOrders);\n  return {\n    openOrders,\n    loaded,\n    refreshOpenOrders: () => refreshCache(cacheKey),\n  };\n}\n\nexport function useBalancesForDeprecatedMarkets() {\n  const markets = useUnmigratedDeprecatedMarkets();\n  const [customMarkets] = useLocalStorageState<CustomMarketInfo[]>(\n    'customMarkets',\n    [],\n  );\n  if (!markets) {\n    return null;\n  }\n\n  const openOrderAccountBalances: DeprecatedOpenOrdersBalances[] = [];\n  markets.forEach(({ market, openOrdersList }) => {\n    const { baseCurrency, quoteCurrency, marketName } = getMarketDetails(\n      market,\n      customMarkets,\n    );\n    if (!baseCurrency || !quoteCurrency || !market) {\n      return;\n    }\n    (openOrdersList || []).forEach((openOrders) => {\n      const inOrdersBase =\n        openOrders?.baseTokenTotal &&\n        openOrders?.baseTokenFree &&\n        market.baseSplSizeToNumber(\n          openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\n        );\n      const inOrdersQuote =\n        openOrders?.quoteTokenTotal &&\n        openOrders?.quoteTokenFree &&\n        market.baseSplSizeToNumber(\n          openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\n        );\n      const unsettledBase =\n        openOrders?.baseTokenFree &&\n        market.baseSplSizeToNumber(openOrders.baseTokenFree);\n      const unsettledQuote =\n        openOrders?.quoteTokenFree &&\n        market.baseSplSizeToNumber(openOrders.quoteTokenFree);\n\n      openOrderAccountBalances.push({\n        marketName,\n        market,\n        coin: baseCurrency,\n        key: `${marketName}${baseCurrency}`,\n        orders: inOrdersBase,\n        unsettled: unsettledBase,\n        openOrders,\n      });\n      openOrderAccountBalances.push({\n        marketName,\n        market,\n        coin: quoteCurrency,\n        key: `${marketName}${quoteCurrency}`,\n        orders: inOrdersQuote,\n        unsettled: unsettledQuote,\n        openOrders,\n      });\n    });\n  });\n  return openOrderAccountBalances;\n}\n\nexport function getMarketInfos(\n  customMarkets: CustomMarketInfo[],\n): MarketInfo[] {\n  const customMarketsInfo = customMarkets.map((m) => ({\n    ...m,\n    address: new PublicKey(m.address),\n    programId: new PublicKey(m.programId),\n    deprecated: false,\n  }));\n\n  return [...customMarketsInfo, ...USE_MARKETS];\n}\n\nexport function useMarketInfos() {\n  const { customMarkets } = useCustomMarkets();\n  return getMarketInfos(customMarkets);\n}\n\n/**\n * If selling, choose min tick size. If buying choose a price\n * s.t. given the state of the orderbook, the order will spend\n * `cost` cost currency.\n *\n * @param orderbook serum Orderbook object\n * @param cost quantity to spend. Base currency if selling,\n *  quote currency if buying.\n * @param tickSizeDecimals size of price increment of the market\n */\nexport function getMarketOrderPrice(\n  orderbook: Orderbook,\n  cost: number,\n  tickSizeDecimals?: number,\n) {\n  if (orderbook.isBids) {\n    return orderbook.market.tickSize;\n  }\n  let spentCost = 0;\n  let price, sizeAtLevel, costAtLevel: number;\n  const asks = orderbook.getL2(1000);\n  for ([price, sizeAtLevel] of asks) {\n    costAtLevel = price * sizeAtLevel;\n    if (spentCost + costAtLevel > cost) {\n      break;\n    }\n    spentCost += costAtLevel;\n  }\n  const sendPrice = Math.min(price * 1.02, asks[0][0] * 1.05);\n  let formattedPrice;\n  if (tickSizeDecimals) {\n    formattedPrice = floorToDecimal(sendPrice, tickSizeDecimals);\n  } else {\n    formattedPrice = sendPrice;\n  }\n  return formattedPrice;\n}\n\nexport function getExpectedFillPrice(\n  orderbook: Orderbook,\n  cost: number,\n  tickSizeDecimals?: number,\n) {\n  let spentCost = 0;\n  let avgPrice = 0;\n  let price, sizeAtLevel, costAtLevel: number;\n  for ([price, sizeAtLevel] of orderbook.getL2(1000)) {\n    costAtLevel = (orderbook.isBids ? 1 : price) * sizeAtLevel;\n    if (spentCost + costAtLevel > cost) {\n      avgPrice += (cost - spentCost) * price;\n      spentCost = cost;\n      break;\n    }\n    avgPrice += costAtLevel * price;\n    spentCost += costAtLevel;\n  }\n  const totalAvgPrice = avgPrice / Math.min(cost, spentCost);\n  let formattedPrice;\n  if (tickSizeDecimals) {\n    formattedPrice = floorToDecimal(totalAvgPrice, tickSizeDecimals);\n  } else {\n    formattedPrice = totalAvgPrice;\n  }\n  return formattedPrice;\n}\n\nexport function useCurrentlyAutoSettling(): [boolean, (currentlyAutoSettling: boolean) => void] {\n  const [currentlyAutoSettling, setCurrentlyAutosettling] = useState<boolean>(false);\n  return [currentlyAutoSettling, setCurrentlyAutosettling];\n}\n","import { useRef, useEffect } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef<() => void>();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current && savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  margin: 5px;\n  padding: 20px;\n  background-color: #1a2029;\n`;\n\nexport default function FloatingElement({\n  style = undefined,\n  children,\n  stretchVertical = false,\n}) {\n  return (\n    <Wrapper\n      style={{\n        height: stretchVertical ? 'calc(100% - 10px)' : undefined,\n        ...style,\n      }}\n    >\n      {children}\n    </Wrapper>\n  );\n}\n","import { Col, Row } from 'antd';\nimport React, { useRef, useEffect, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useMarket, useOrderbook, useMarkPrice } from '../utils/markets';\nimport { isEqual, getDecimalCount } from '../utils/utils';\nimport { useInterval } from '../utils/useInterval';\nimport FloatingElement from './layout/FloatingElement';\nimport usePrevious from '../utils/usePrevious';\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\n\nconst SizeTitle = styled(Row)`\n  padding: 20px 0 14px;\n  color: #434a59;\n`;\n\nconst MarkPriceTitle = styled(Row)`\n  padding: 20px 0 14px;\n  font-weight: 700;\n`;\n\nconst Line = styled.div`\n  text-align: right;\n  float: right;\n  height: 100%;\n  ${(props) =>\n    props['data-width'] &&\n    css`\n      width: ${props['data-width']};\n    `}\n  ${(props) =>\n    props['data-bgcolor'] &&\n    css`\n      background-color: ${props['data-bgcolor']};\n    `}\n`;\n\nconst Price = styled.div`\n  position: absolute;\n  right: 5px;\n  color: white;\n`;\n\nexport default function Orderbook({ smallScreen, depth = 7, onPrice, onSize }) {\n  const markPrice = useMarkPrice();\n  const [orderbook] = useOrderbook();\n  const { baseCurrency, quoteCurrency } = useMarket();\n\n  const currentOrderbookData = useRef(null);\n  const lastOrderbookData = useRef(null);\n\n  const [orderbookData, setOrderbookData] = useState(null);\n\n  useInterval(() => {\n    if (\n      !currentOrderbookData.current ||\n      JSON.stringify(currentOrderbookData.current) !==\n        JSON.stringify(lastOrderbookData.current)\n    ) {\n      let bids = orderbook?.bids || [];\n      let asks = orderbook?.asks || [];\n\n      let sum = (total, [, size], index) =>\n        index < depth ? total + size : total;\n      let totalSize = bids.reduce(sum, 0) + asks.reduce(sum, 0);\n\n      let bidsToDisplay = getCumulativeOrderbookSide(bids, totalSize, false);\n      let asksToDisplay = getCumulativeOrderbookSide(asks, totalSize, true);\n\n      currentOrderbookData.current = {\n        bids: orderbook?.bids,\n        asks: orderbook?.asks,\n      };\n\n      setOrderbookData({ bids: bidsToDisplay, asks: asksToDisplay });\n    }\n  }, 250);\n\n  useEffect(() => {\n    lastOrderbookData.current = {\n      bids: orderbook?.bids,\n      asks: orderbook?.asks,\n    };\n  }, [orderbook]);\n\n  function getCumulativeOrderbookSide(orders, totalSize, backwards = false) {\n    let cumulative = orders\n      .slice(0, depth)\n      .reduce((cumulative, [price, size], i) => {\n        const cumulativeSize = (cumulative[i - 1]?.cumulativeSize || 0) + size;\n        cumulative.push({\n          price,\n          size,\n          cumulativeSize,\n          sizePercent: Math.round((cumulativeSize / (totalSize || 1)) * 100),\n        });\n        return cumulative;\n      }, []);\n    if (backwards) {\n      cumulative = cumulative.reverse();\n    }\n    return cumulative;\n  }\n\n  return (\n    <FloatingElement\n      style={\n        smallScreen ? { flex: 1 } : { height: '500px', overflow: 'hidden' }\n      }\n    >\n      <Title>Orderbook</Title>\n      <SizeTitle>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          Size ({baseCurrency})\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          Price ({quoteCurrency})\n        </Col>\n      </SizeTitle>\n      {orderbookData?.asks.map(({ price, size, sizePercent }) => (\n        <OrderbookRow\n          key={price + ''}\n          price={price}\n          size={size}\n          side={'sell'}\n          sizePercent={sizePercent}\n          onPriceClick={() => onPrice(price)}\n          onSizeClick={() => onSize(size)}\n        />\n      ))}\n      <MarkPriceComponent markPrice={markPrice} />\n      {orderbookData?.bids.map(({ price, size, sizePercent }) => (\n        <OrderbookRow\n          key={price + ''}\n          price={price}\n          size={size}\n          side={'buy'}\n          sizePercent={sizePercent}\n          onPriceClick={() => onPrice(price)}\n          onSizeClick={() => onSize(size)}\n        />\n      ))}\n    </FloatingElement>\n  );\n}\n\nconst OrderbookRow = React.memo(\n  ({ side, price, size, sizePercent, onSizeClick, onPriceClick }) => {\n    const element = useRef();\n\n    const { market } = useMarket();\n\n    useEffect(() => {\n      // eslint-disable-next-line\n      !element.current?.classList.contains('flash') &&\n        element.current?.classList.add('flash');\n      const id = setTimeout(\n        () =>\n          element.current?.classList.contains('flash') &&\n          element.current?.classList.remove('flash'),\n        250,\n      );\n      return () => clearTimeout(id);\n    }, [price, size]);\n\n    let formattedSize =\n      market?.minOrderSize && !isNaN(size)\n        ? Number(size).toFixed(getDecimalCount(market.minOrderSize) + 1)\n        : size;\n\n    let formattedPrice =\n      market?.tickSize && !isNaN(price)\n        ? Number(price).toFixed(getDecimalCount(market.tickSize) + 1)\n        : price;\n\n    return (\n      <Row ref={element} style={{ marginBottom: 1 }} onClick={onSizeClick}>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          {formattedSize}\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          <Line\n            data-width={sizePercent + '%'}\n            data-bgcolor={\n              side === 'buy'\n                ? 'rgba(65, 199, 122, 0.6)'\n                : 'rgba(242, 60, 105, 0.6)'\n            }\n          />\n          <Price onClick={onPriceClick}>{formattedPrice}</Price>\n        </Col>\n      </Row>\n    );\n  },\n  (prevProps, nextProps) =>\n    isEqual(prevProps, nextProps, ['price', 'size', 'sizePercent']),\n);\n\nconst MarkPriceComponent = React.memo(\n  ({ markPrice }) => {\n    const { market } = useMarket();\n    const previousMarkPrice = usePrevious(markPrice);\n\n    let markPriceColor =\n      markPrice > previousMarkPrice\n        ? '#41C77A'\n        : markPrice < previousMarkPrice\n        ? '#F23B69'\n        : 'white';\n\n    let formattedMarkPrice =\n      markPrice &&\n      market?.tickSize &&\n      markPrice.toFixed(getDecimalCount(market.tickSize));\n\n    return (\n      <MarkPriceTitle justify=\"center\">\n        <Col style={{ color: markPriceColor }}>\n          {markPrice > previousMarkPrice && (\n            <ArrowUpOutlined style={{ marginRight: 5 }} />\n          )}\n          {markPrice < previousMarkPrice && (\n            <ArrowDownOutlined style={{ marginRight: 5 }} />\n          )}\n          {formattedMarkPrice || '----'}\n        </Col>\n      </MarkPriceTitle>\n    );\n  },\n  (prevProps, nextProps) => isEqual(prevProps, nextProps, ['markPrice']),\n);\n","import { useEffect, useRef } from 'react';\n\nexport default function usePrevious(value) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef();\n\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n\n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\n","import React from 'react';\nimport { ConfigProvider, Table } from 'antd';\n\nexport default function DataTable({\n  dataSource,\n  columns,\n  emptyLabel = 'No data',\n  pagination = false,\n  loading = false,\n  pageSize = 10,\n}) {\n  const customizeRenderEmpty = () => (\n    <div\n      style={{\n        padding: '20px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      {emptyLabel}\n    </div>\n  );\n\n  return (\n    <ConfigProvider renderEmpty={customizeRenderEmpty}>\n      <Table\n        dataSource={dataSource}\n        columns={columns}\n        pagination={pagination ? { pagination: true, pageSize } : false}\n        loading={loading}\n      />\n    </ConfigProvider>\n  );\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useConnection } from './connection';\nimport { PublicKey } from '@solana/web3.js';\nimport {\n  NameRegistryState,\n  getHashedName,\n  getNameAccountKey,\n  getTwitterRegistry,\n} from '@solana/spl-name-service';\nimport { TOKEN_PROGRAM_ID } from '@solana/spl-token';\nimport { useLocalStorageState } from './utils';\n\ninterface ReferrerContextValues {\n  usdcRef: PublicKey | undefined;\n  usdtRef: PublicKey | undefined;\n  setRefCode: (arg: any) => void;\n  refCode: string | undefined;\n  allowRefLink: boolean;\n}\n\nconst ReferrerContext: React.Context<null | ReferrerContextValues> = React.createContext<null | ReferrerContextValues>(\n  null,\n);\n\nexport const ASSOCIATED_TOKEN_PROGRAM_ID: PublicKey = new PublicKey(\n  'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n);\n\nconst USDC_MINT = new PublicKey('EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v');\nconst USDT_MINT = new PublicKey('Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB');\n\nexport async function findAssociatedTokenAddress(\n  walletAddress: PublicKey,\n  tokenMintAddress: PublicKey,\n): Promise<PublicKey> {\n  return (\n    await PublicKey.findProgramAddress(\n      [\n        walletAddress.toBuffer(),\n        TOKEN_PROGRAM_ID.toBuffer(),\n        tokenMintAddress.toBuffer(),\n      ],\n      ASSOCIATED_TOKEN_PROGRAM_ID,\n    )\n  )[0];\n}\n\n// Address of the SOL TLD\nexport const SOL_TLD_AUTHORITY = new PublicKey(\n  '58PwtjSDuFHuUkYjH9BYnnQKHfwo9reZhC2zMJv9JPkx',\n);\n\nexport const getInputKey = async (input: string) => {\n  let hashed_input_name = await getHashedName(input);\n  let inputDomainKey = await getNameAccountKey(\n    hashed_input_name,\n    undefined,\n    SOL_TLD_AUTHORITY,\n  );\n  return { inputDomainKey: inputDomainKey, hashedInputName: hashed_input_name };\n};\n\nexport const useFeesAccountsFromRefCode = (refCode: string | undefined) => {\n  const connection = useConnection();\n  const [usdc, setUsdc] = useState<PublicKey | undefined>(undefined);\n  const [usdt, setUsdt] = useState<PublicKey | undefined>(undefined);\n\n  useEffect(() => {\n    const fn = async () => {\n      let usdcAddress: undefined | PublicKey = undefined;\n      let usdtAddress: undefined | PublicKey = undefined;\n      if (!refCode) {\n        setUsdc(\n          process.env.REACT_APP_USDC_REFERRAL_FEES_ADDRESS\n            ? new PublicKey(process.env.REACT_APP_USDC_REFERRAL_FEES_ADDRESS)\n            : undefined,\n        );\n        setUsdt(\n          process.env.REACT_APP_USDT_REFERRAL_FEES_ADDRESS\n            ? new PublicKey(process.env.REACT_APP_USDT_REFERRAL_FEES_ADDRESS)\n            : undefined,\n        );\n        return;\n      }\n      try {\n        let nameRegistryState: NameRegistryState;\n        if (refCode.includes('.sol')) {\n          const { inputDomainKey } = await getInputKey(\n            refCode.replace('.sol', ''),\n          );\n          nameRegistryState = await NameRegistryState.retrieve(\n            connection,\n            inputDomainKey,\n          );\n        } else {\n          nameRegistryState = await getTwitterRegistry(connection, refCode);\n        }\n        usdcAddress = await findAssociatedTokenAddress(\n          nameRegistryState.owner,\n          USDC_MINT,\n        );\n        usdtAddress = await findAssociatedTokenAddress(\n          nameRegistryState.owner,\n          USDT_MINT,\n        );\n        const usdcAccountInfo = await connection.getAccountInfo(usdcAddress);\n        const usdtAccountInfo = await connection.getAccountInfo(usdtAddress);\n        if (!!usdcAccountInfo?.data) setUsdc(usdcAddress);\n        if (!!usdtAccountInfo?.data) setUsdt(usdtAddress);\n      } catch (err) {\n        console.warn(`Error getting refcode ${err}`);\n      }\n    };\n    fn();\n  }, [connection, refCode]);\n  return { usdcRef: usdc, usdtRef: usdt };\n};\n\nexport const ReferrerProvider = ({ children }) => {\n  const allowRefLink = process.env.REACT_APP_ALLOW_REF_LINK === 'true';\n  const [refCode, setRefCode] = useLocalStorageState('refCode');\n  const { usdcRef, usdtRef } = useFeesAccountsFromRefCode(\n    allowRefLink ? refCode : undefined,\n  );\n  useEffect(() => {\n    if (!allowRefLink) setRefCode(null);\n  }, [allowRefLink, setRefCode]);\n  return (\n    <ReferrerContext.Provider\n      value={{ usdcRef, usdtRef, setRefCode, refCode, allowRefLink }}\n    >\n      {children}\n    </ReferrerContext.Provider>\n  );\n};\n\nexport const useReferrer = () => {\n  const context = useContext(ReferrerContext);\n  if (!context) throw new Error('Missing referrer context');\n  return {\n    usdcRef: context.usdcRef,\n    usdtRef: context.usdtRef,\n    setRefCode: context.setRefCode,\n    refCode: context.refCode,\n    allowRefLink: context.allowRefLink,\n  };\n};\n","import { Button } from 'antd';\nimport React from 'react';\nimport {\n  useTokenAccounts,\n  getSelectedTokenAccountForMint,\n} from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\nimport { useSendConnection } from '../../utils/connection';\nimport { useWallet } from '../../utils/wallet';\nimport { settleFunds } from '../../utils/send';\nimport { notify } from '../../utils/notifications';\nimport { useReferrer } from '../../utils/referrer';\n\nexport default function BalancesTable({\n  balances,\n  showMarket,\n  hideWalletBalance,\n  onSettleSuccess,\n}) {\n  const [accounts] = useTokenAccounts();\n  const connection = useSendConnection();\n  const { wallet } = useWallet();\n  const { usdcRef, usdtRef } = useReferrer();\n\n  async function onSettleFunds(market, openOrders) {\n    try {\n      await settleFunds({\n        market,\n        openOrders,\n        connection,\n        wallet,\n        baseCurrencyAccount: getSelectedTokenAccountForMint(\n          accounts,\n          market?.baseMintAddress,\n        ),\n        quoteCurrencyAccount: getSelectedTokenAccountForMint(\n          accounts,\n          market?.quoteMintAddress,\n        ),\n        usdcRef,\n        usdtRef,\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    }\n    onSettleSuccess && onSettleSuccess();\n  }\n\n  const columns = [\n    showMarket\n      ? {\n          title: 'Market',\n          dataIndex: 'marketName',\n          key: 'marketName',\n        }\n      : null,\n    {\n      title: 'Coin',\n      dataIndex: 'coin',\n      key: 'coin',\n    },\n    hideWalletBalance\n      ? null\n      : {\n          title: 'Wallet Balance',\n          dataIndex: 'wallet',\n          key: 'wallet',\n        },\n    {\n      title: 'Orders',\n      dataIndex: 'orders',\n      key: 'orders',\n    },\n    {\n      title: 'Unsettled',\n      dataIndex: 'unsettled',\n      key: 'unsettled',\n    },\n    {\n      key: 'action',\n      render: ({ market, openOrders, marketName }) => (\n        <div style={{ textAlign: 'right' }}>\n          <Button\n            ghost\n            style={{ marginRight: 12 }}\n            onClick={() => onSettleFunds(market, openOrders)}\n          >\n            Settle {marketName}\n          </Button>\n        </div>\n      ),\n    },\n  ].filter((x) => x);\n  return (\n    <DataTable\n      emptyLabel=\"No balances\"\n      dataSource={balances}\n      columns={columns}\n      pagination={false}\n    />\n  );\n}\n","import React, { useState } from 'react';\nimport DataTable from '../layout/DataTable';\n\nimport styled from 'styled-components';\nimport { Button, Col, Row, Tag } from 'antd';\nimport { cancelOrder } from '../../utils/send';\nimport { useWallet } from '../../utils/wallet';\nimport { useSendConnection } from '../../utils/connection';\nimport { notify } from '../../utils/notifications';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { OrderWithMarketAndMarketName } from '../../utils/types';\n\nconst CancelButton = styled(Button)`\n  color: #f23b69;\n  border: 1px solid #f23b69;\n`;\n\nexport default function OpenOrderTable({\n  openOrders,\n  onCancelSuccess,\n  pageSize,\n  loading,\n  marketFilter,\n}: {\n  openOrders: OrderWithMarketAndMarketName[] | null | undefined;\n  onCancelSuccess?: () => void;\n  pageSize?: number;\n  loading?: boolean;\n  marketFilter?: boolean;\n}) {\n  let { wallet } = useWallet();\n  let connection = useSendConnection();\n\n  const [cancelId, setCancelId] = useState(null);\n\n  async function cancel(order) {\n    setCancelId(order?.orderId);\n    try {\n      if (!wallet) {\n        return null;\n      }\n\n      await cancelOrder({\n        order,\n        market: order.market,\n        connection,\n        wallet,\n      });\n    } catch (e) {\n      notify({\n        message: 'Error cancelling order',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    } finally {\n      setCancelId(null);\n    }\n    onCancelSuccess && onCancelSuccess();\n  }\n\n  const marketFilters = [\n    ...new Set((openOrders || []).map((orderInfos) => orderInfos.marketName)),\n  ].map((marketName) => {\n    return { text: marketName, value: marketName };\n  });\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'marketName',\n      key: 'marketName',\n      filters: marketFilter ? marketFilters : undefined,\n      onFilter: (value, record) => record.marketName.indexOf(value) === 0,\n    },\n    {\n      title: 'Side',\n      dataIndex: 'side',\n      key: 'side',\n      render: (side) => (\n        <Tag\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\n          style={{ fontWeight: 700 }}\n        >\n          {side.charAt(0).toUpperCase() + side.slice(1)}\n        </Tag>\n      ),\n      sorter: (a, b) => {\n        if (a.side === b.side) {\n          return 0;\n        } else if (a.side === 'buy') {\n          return 1;\n        } else {\n          return -1;\n        }\n      },\n      showSorterTooltip: false,\n    },\n    {\n      title: 'Size',\n      dataIndex: 'size',\n      key: 'size',\n      sorter: (a, b) => b.size - a.size,\n      showSorterTooltip: false,\n    },\n    {\n      title: 'Price',\n      dataIndex: 'price',\n      key: 'price',\n      sorter: (a, b) => b.price - a.price,\n      showSorterTooltip: false,\n    },\n    {\n      key: 'orderId',\n      render: (order) => (\n        <div style={{ textAlign: 'right' }}>\n          <CancelButton\n            icon={<DeleteOutlined />}\n            onClick={() => cancel(order)}\n            loading={cancelId + '' === order?.orderId + ''}\n          >\n            Cancel\n          </CancelButton>\n        </div>\n      ),\n    },\n  ];\n  const dataSource = (openOrders || []).map((order) => ({\n    ...order,\n    key: order.orderId,\n  }));\n\n  return (\n    <Row>\n      <Col span={24}>\n        <DataTable\n          emptyLabel=\"No open orders\"\n          dataSource={dataSource}\n          columns={columns}\n          pagination={true}\n          pageSize={pageSize ? pageSize : 5}\n          loading={loading !== undefined && loading}\n        />\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react';\nimport { Row, Col, Tag } from 'antd';\nimport { useFills, useMarket } from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\n\nexport default function FillsTable() {\n  const fills = useFills();\n\n  const { quoteCurrency } = useMarket();\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'marketName',\n      key: 'marketName',\n    },\n    {\n      title: 'Side',\n      dataIndex: 'side',\n      key: 'side',\n      render: (side) => (\n        <Tag\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\n          style={{ fontWeight: 700 }}\n        >\n          {side.charAt(0).toUpperCase() + side.slice(1)}\n        </Tag>\n      ),\n    },\n    {\n      title: `Size`,\n      dataIndex: 'size',\n      key: 'size',\n    },\n    {\n      title: `Price`,\n      dataIndex: 'price',\n      key: 'price',\n    },\n    {\n      title: `Liquidity`,\n      dataIndex: 'liquidity',\n      key: 'liquidity',\n    },\n    {\n      title: quoteCurrency ? `Fees (${quoteCurrency})` : 'Fees',\n      dataIndex: 'feeCost',\n      key: 'feeCost',\n    },\n  ];\n\n  const dataSource = (fills || []).map((fill) => ({\n    ...fill,\n    key: `${fill.orderId}${fill.side}`,\n    liquidity: fill.eventFlags.maker ? 'Maker' : 'Taker',\n  }));\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <DataTable\n            dataSource={dataSource}\n            columns={columns}\n            pagination={true}\n            pageSize={5}\n            emptyLabel=\"No fills\"\n          />\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React from 'react';\nimport { Row, Col, Typography, Tag } from 'antd';\nimport { useFeeDiscountKeys } from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\nimport { TokenInstructions, getFeeRates } from '@project-serum/serum';\nimport { percentFormat } from '../../utils/utils';\n\nexport default function FeesTable() {\n  const [feeAccounts] = useFeeDiscountKeys();\n\n  const columns = [\n    {\n      title: 'Fee Tier',\n      dataIndex: 'feeTier',\n      key: 'feeTier',\n      render: (feeTier, row) => (\n        <div style={{ display: 'flex' }}>\n          <Typography>{feeTier}</Typography>\n          {row.index === 0 ? (\n            <div style={{ marginLeft: 10 }}>\n              <Tag color={'#41C77A'} style={{ fontWeight: 700 }}>\n                Selected\n              </Tag>\n            </div>\n          ) : null}\n        </div>\n      ),\n    },\n    {\n      title: 'Taker',\n      dataIndex: 'taker',\n      key: 'taker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).taker),\n    },\n    {\n      title: 'Maker',\n      dataIndex: 'maker',\n      key: 'maker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).maker),\n    },\n    {\n      title: `Public Key`,\n      dataIndex: 'pubkey',\n      key: 'pubkey',\n      render: (pubkey) => pubkey.toBase58(),\n    },\n    {\n      title: `Balance`,\n      dataIndex: 'balance',\n      key: 'balance',\n    },\n    {\n      title: `Mint`,\n      dataIndex: 'mint',\n      key: 'mint',\n      render: (_, row) =>\n        row.mint.equals(TokenInstructions.SRM_MINT)\n          ? 'SRM'\n          : row.mint.equals(TokenInstructions.MSRM_MINT)\n          ? 'MSRM'\n          : 'UNKNOWN',\n    },\n  ];\n\n  const dataSource = (feeAccounts || []).map((account, index) => ({\n    ...account,\n    index,\n    key: account.pubkey.toBase58(),\n  }));\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <DataTable\n            dataSource={dataSource}\n            columns={columns}\n            pagination={true}\n            pageSize={5}\n            emptyLabel=\"No (M)SRM accounts\"\n          />\n        </Col>\n      </Row>\n      <Row style={{ marginTop: 8 }}>\n        <Col>\n          <Typography>\n            Holding SRM or MSRM makes you eligible for fee discounts:\n          </Typography>\n          <FeeScheduleTable />\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nfunction FeeScheduleTable() {\n  // Representation of serum-js/src/fees.ts\n  const dataSource = [\n    { feeTier: 0, taker: 0.0022, maker: -0.0003, token: '', balance: '' },\n    { feeTier: 1, taker: 0.002, maker: -0.0003, token: 'SRM', balance: 100 },\n    { feeTier: 2, taker: 0.0018, maker: -0.0003, token: 'SRM', balance: 1000 },\n    { feeTier: 3, taker: 0.0016, maker: -0.0003, token: 'SRM', balance: 10000 },\n    {\n      feeTier: 4,\n      taker: 0.0014,\n      maker: -0.0003,\n      token: 'SRM',\n      balance: 100000,\n    },\n    {\n      feeTier: 5,\n      taker: 0.0012,\n      maker: -0.0003,\n      token: 'SRM',\n      balance: 1000000,\n    },\n    { feeTier: 6, taker: 0.001, maker: -0.0005, token: 'MSRM', balance: 1 },\n  ];\n  const columns = [\n    {\n      title: 'Fee Tier',\n      dataIndex: 'feeTier',\n      key: 'feeTier',\n    },\n    {\n      title: 'Taker',\n      dataIndex: 'taker',\n      key: 'taker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).taker),\n    },\n    {\n      title: 'Maker',\n      dataIndex: 'maker',\n      key: 'maker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).maker),\n    },\n    {\n      title: 'Requirements',\n      dataIndex: 'requirements',\n      key: 'requirements',\n      render: (_, row) => (\n        <Typography>\n          {!row.balance ? 'None' : `≥ ${row.balance} ${row.token}`}\n        </Typography>\n      ),\n    },\n  ];\n  return (\n    <DataTable\n      dataSource={dataSource.map((info) => ({ ...info, key: info.feeTier }))}\n      columns={columns}\n    />\n  );\n}\n","import BalancesTable from './BalancesTable';\nimport OpenOrderTable from './OpenOrderTable';\nimport React from 'react';\nimport { Tabs, Typography } from 'antd';\nimport FillsTable from './FillsTable';\nimport FloatingElement from '../layout/FloatingElement';\nimport FeesTable from './FeesTable';\nimport { useOpenOrders, useBalances, useMarket } from '../../utils/markets';\n\nconst { Paragraph } = Typography;\nconst { TabPane } = Tabs;\n\nexport default function Index() {\n  const { market } = useMarket();\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 20 }}>\n      <Typography>\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)' }}>\n          Make sure to go to Balances and click Settle to send out your funds.\n        </Paragraph>\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)' }}>\n          To fund your wallet, <a href=\"https://www.sollet.io\">sollet.io</a>.\n          You can get SOL from FTX, Binance, BitMax, and others. You can get\n          other tokens from FTX.{' '}\n        </Paragraph>\n      </Typography>\n      <Tabs defaultActiveKey=\"orders\">\n        <TabPane tab=\"Open Orders\" key=\"orders\">\n          <OpenOrdersTab />\n        </TabPane>\n        <TabPane tab=\"Recent Trade History\" key=\"fills\">\n          <FillsTable />\n        </TabPane>\n        <TabPane tab=\"Balances\" key=\"balances\">\n          <BalancesTab />\n        </TabPane>\n        {market && market.supportsSrmFeeDiscounts ? (\n          <TabPane tab=\"Fee discounts\" key=\"fees\">\n            <FeesTable />\n          </TabPane>\n        ) : null}\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\nconst OpenOrdersTab = () => {\n  const openOrders = useOpenOrders();\n\n  return <OpenOrderTable openOrders={openOrders} />;\n};\n\nconst BalancesTab = () => {\n  const balances = useBalances();\n\n  return <BalancesTable balances={balances} />;\n};\n","import React from 'react';\nimport { Modal } from 'antd';\nimport {\n  useSelectedBaseCurrencyAccount,\n  useMarket,\n  useSelectedQuoteCurrencyAccount,\n} from '../utils/markets';\nimport { useWallet } from '../utils/wallet';\nimport Link from './Link';\n\nexport default function DepositDialog({ onClose, baseOrQuote }) {\n  const { market, baseCurrency, quoteCurrency } = useMarket();\n\n  const { providerName, providerUrl } = useWallet();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  let coinMint;\n  let account;\n  let depositCoin;\n  if (baseOrQuote === 'base') {\n    coinMint = market?.baseMintAddress;\n    account = baseCurrencyAccount;\n    depositCoin = baseCurrency;\n  } else if (baseOrQuote === 'quote') {\n    coinMint = market?.quoteMintAddress;\n    account = quoteCurrencyAccount;\n    depositCoin = quoteCurrency;\n  } else {\n    account = null;\n  }\n  if (!coinMint) {\n    return null;\n  }\n  return (\n    <Modal\n      title={depositCoin}\n      visible={!!coinMint}\n      onOk={onClose}\n      onCancel={onClose}\n    >\n      <div style={{ paddingTop: '20px' }}>\n        <p style={{ color: 'white' }}>Mint address:</p>\n        <p style={{ color: 'rgba(255,255,255,0.5)' }}>{coinMint.toBase58()}</p>\n        <div>\n          <p style={{ color: 'white' }}>SPL Deposit address:</p>\n          <p style={{ color: 'rgba(255,255,255,0.5)' }}>\n            {account ? (\n              account.pubkey.toBase58()\n            ) : (\n              <>\n                Visit{' '}\n                <Link external to={providerUrl}>\n                  {providerName}\n                </Link>{' '}\n                to create an account for this mint\n              </>\n            )}\n          </p>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport { TokenAccount } from '../utils/types';\nimport { useSelectedTokenAccounts } from '../utils/markets';\nimport { Button, Col, Select, Typography } from 'antd';\nimport { CopyOutlined } from '@ant-design/icons';\nimport { abbreviateAddress } from '../utils/utils';\nimport { notify } from '../utils/notifications';\n\nexport default function StandaloneTokenAccountsSelect({\n  accounts,\n  mint,\n  label,\n}: {\n  accounts: TokenAccount[] | null | undefined;\n  mint: string | undefined;\n  label?: boolean;\n}) {\n  const [\n    selectedTokenAccounts,\n    setSelectedTokenAccounts,\n  ] = useSelectedTokenAccounts();\n\n  let selectedValue: string | undefined;\n  if (mint && mint in selectedTokenAccounts) {\n    selectedValue = selectedTokenAccounts[mint];\n  } else if (accounts && accounts?.length > 0) {\n    selectedValue = accounts[0].pubkey.toBase58();\n  } else {\n    selectedValue = undefined;\n  }\n\n  const setTokenAccountForCoin = (value) => {\n    if (!mint) {\n      notify({\n        message: 'Error selecting token account',\n        description: 'Mint is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    const newSelectedTokenAccounts = { ...selectedTokenAccounts };\n    newSelectedTokenAccounts[mint] = value;\n    setSelectedTokenAccounts(newSelectedTokenAccounts);\n  };\n\n  return (\n    <React.Fragment>\n      {label && <Col span={8}>Token account:</Col>}\n      <Col span={label ? 13 : 21}>\n        <Select\n          style={{ width: '100%' }}\n          value={selectedValue}\n          onSelect={setTokenAccountForCoin}\n        >\n          {accounts?.map((account) => (\n            <Select.Option\n              key={account.pubkey.toBase58()}\n              value={account.pubkey.toBase58()}\n            >\n              <Typography.Text code>\n                {label\n                  ? abbreviateAddress(account.pubkey, 8)\n                  : account.pubkey.toBase58()}\n              </Typography.Text>\n            </Select.Option>\n          ))}\n        </Select>\n      </Col>\n      <Col span={2} offset={1}>\n        <Button\n          shape=\"round\"\n          icon={<CopyOutlined />}\n          size={'small'}\n          onClick={() =>\n            selectedValue && navigator.clipboard.writeText(selectedValue)\n          }\n        />\n      </Col>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { Button } from 'antd';\nimport { LinkOutlined } from '@ant-design/icons';\n\nexport default function LinkAddress({\n  title,\n  address,\n  shorten = false,\n}: {\n  title?: undefined | any;\n  address: string;\n  shorten?: boolean;\n}) {\n  return (\n    <div>\n      {title && <p style={{ color: 'white' }}>{title}</p>}\n      <Button\n        type=\"link\"\n        icon={<LinkOutlined />}\n        href={'https://solscan.io/address/' + address}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        style={{ cursor: 'pointer' }}\n      >\n        {shorten ? `${address.slice(0, 4)}...${address.slice(-4)}` : address}\n      </Button>\n    </div>\n  );\n}\n","import React, {useContext, useState} from 'react';\nimport {sleep, useLocalStorageState} from './utils';\nimport {useInterval} from './useInterval';\nimport {useConnection} from './connection';\nimport {useWallet} from './wallet';\nimport {\n  useMarketInfos,\n  useTokenAccounts,\n} from './markets';\nimport {settleAllFunds} from './send';\nimport {PreferencesContextValues} from './types';\nimport {Market} from \"@project-serum/serum\";\n\nexport const AUTO_SETTLE_DISABLED_OVERRIDE = true;\n\nconst PreferencesContext = React.createContext<PreferencesContextValues | null>(\n  null,\n);\n\nexport function PreferencesProvider({ children }) {\n  const [autoSettleEnabled, setAutoSettleEnabled] = useLocalStorageState(\n    'autoSettleEnabled',\n    true,\n  );\n\n  const [tokenAccounts] = useTokenAccounts();\n  const { connected, wallet } = useWallet();\n  const marketInfoList = useMarketInfos();\n  const [currentlyFetchingMarkets, setCurrentlyFetchingMarkets] = useState<boolean>(false);\n  const [markets, setMarkets] = useState<Map<string, Market>>(new Map())\n  const addToMarketsMap = (marketId, market) => {\n    setMarkets(prev => new Map(prev).set(marketId, market));\n  }\n  const connection = useConnection();\n\n  useInterval(() => {\n    const autoSettle = async () => {\n\t\t\tif (AUTO_SETTLE_DISABLED_OVERRIDE) {\n\t\t\t\treturn;\n\t\t\t}\n      if (!wallet) {\n        return;\n      }\n      try {\n        console.log('Settling funds...');\n        await settleAllFunds({\n          connection,\n          wallet,\n          tokenAccounts: tokenAccounts || [],\n          markets: [...markets.values()],\n        });\n      } catch (e) {\n        console.log('Error auto settling funds: ' + e.message);\n        return;\n      }\n      console.log('Finished settling funds.');\n    };\n    (\n      connected &&\n      wallet?.autoApprove &&\n      autoSettleEnabled &&\n      autoSettle()\n    );\n  }, 20000);\n\n  // warms up the market and open orders cache for auto-settlement\n  useInterval(() => {\n    const fetchMarkets = async () => {\n      if (!wallet) {\n        // only need these markets for auto-settlement, so don't fetch unless we are connected.\n        return;\n      }\n      setCurrentlyFetchingMarkets(true);\n      for (const marketInfo of marketInfoList) {\n        if (markets.has(marketInfo.address.toString())) {\n          continue;\n        }\n        try {\n          const market = await Market.load(connection, marketInfo.address, {}, marketInfo.programId)\n          addToMarketsMap(marketInfo.address.toString(), market);\n          await sleep(1000);\n        } catch (e) {\n          console.log('Error fetching market: ' + e.message);\n        }\n      }\n      setCurrentlyFetchingMarkets(false);\n    }\n    (\n      connected &&\n      wallet?.autoApprove &&\n      autoSettleEnabled &&\n      !currentlyFetchingMarkets &&\n      fetchMarkets()\n    );\n  }, 60000)\n\n  return (\n    <PreferencesContext.Provider\n      value={{\n        autoSettleEnabled,\n        setAutoSettleEnabled,\n      }}\n    >\n      {children}\n    </PreferencesContext.Provider>\n  );\n}\n\nexport function usePreferences() {\n  const context = useContext(PreferencesContext);\n  if (!context) {\n    throw new Error('Missing preferences context');\n  }\n  return {\n    autoSettleEnabled: context.autoSettleEnabled,\n    setAutoSettleEnabled: context.setAutoSettleEnabled,\n  };\n}\n","import { Button, Col, Divider, Popover, Row } from 'antd';\nimport React, { useState } from 'react';\nimport FloatingElement from './layout/FloatingElement';\nimport styled from 'styled-components';\nimport {\n  useBalances,\n  useMarket,\n  useSelectedBaseCurrencyAccount,\n  useSelectedOpenOrdersAccount,\n  useSelectedQuoteCurrencyAccount,\n  useTokenAccounts,\n} from '../utils/markets';\nimport DepositDialog from './DepositDialog';\nimport { useWallet } from '../utils/wallet';\nimport Link from './Link';\nimport { settleFunds } from '../utils/send';\nimport { useSendConnection } from '../utils/connection';\nimport { notify } from '../utils/notifications';\nimport { Balances } from '../utils/types';\nimport StandaloneTokenAccountsSelect from './StandaloneTokenAccountSelect';\nimport LinkAddress from './LinkAddress';\nimport { InfoCircleOutlined } from '@ant-design/icons';\nimport { useInterval } from '../utils/useInterval';\nimport { useLocalStorageState } from '../utils/utils';\nimport { AUTO_SETTLE_DISABLED_OVERRIDE } from '../utils/preferences';\nimport { useReferrer } from '../utils/referrer';\n\nconst RowBox = styled(Row)`\n  padding-bottom: 20px;\n`;\n\nconst Tip = styled.p`\n  font-size: 12px;\n  padding-top: 6px;\n`;\n\nconst ActionButton = styled(Button)`\n  color: #2abdd2;\n  background-color: #212734;\n  border-width: 0px;\n`;\n\nexport default function StandaloneBalancesDisplay() {\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const balances = useBalances();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const connection = useSendConnection();\n  const { providerUrl, providerName, wallet, connected } = useWallet();\n  const [baseOrQuote, setBaseOrQuote] = useState('');\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const [tokenAccounts] = useTokenAccounts();\n  const baseCurrencyBalances =\n    balances && balances.find((b) => b.coin === baseCurrency);\n  const quoteCurrencyBalances =\n    balances && balances.find((b) => b.coin === quoteCurrency);\n  const [autoSettleEnabled] = useLocalStorageState('autoSettleEnabled', true);\n  const [lastSettledAt, setLastSettledAt] = useState<number>(0);\n  const { usdcRef, usdtRef } = useReferrer();\n  async function onSettleFunds() {\n    if (!wallet) {\n      notify({\n        message: 'Wallet not connected',\n        description: 'wallet is undefined',\n        type: 'error',\n      });\n      return;\n    }\n\n    if (!market) {\n      notify({\n        message: 'Error settling funds',\n        description: 'market is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    if (!openOrdersAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    if (!baseCurrencyAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    if (!quoteCurrencyAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error',\n      });\n      return;\n    }\n\n    try {\n      await settleFunds({\n        market,\n        openOrders: openOrdersAccount,\n        connection,\n        wallet,\n        baseCurrencyAccount,\n        quoteCurrencyAccount,\n        usdcRef,\n        usdtRef,\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n    }\n  }\n\n  useInterval(() => {\n    const autoSettle = async () => {\n      if (\n        AUTO_SETTLE_DISABLED_OVERRIDE ||\n        !wallet ||\n        !market ||\n        !openOrdersAccount ||\n        !baseCurrencyAccount ||\n        !quoteCurrencyAccount ||\n        !autoSettleEnabled\n      ) {\n        return;\n      }\n      if (\n        !baseCurrencyBalances?.unsettled &&\n        !quoteCurrencyBalances?.unsettled\n      ) {\n        return;\n      }\n      if (Date.now() - lastSettledAt < 15000) {\n        return;\n      }\n      try {\n        console.log('Settling funds...');\n        setLastSettledAt(Date.now());\n        await settleFunds({\n          market,\n          openOrders: openOrdersAccount,\n          connection,\n          wallet,\n          baseCurrencyAccount,\n          quoteCurrencyAccount,\n          usdcRef,\n          usdtRef,\n        });\n      } catch (e) {\n        console.log('Error auto settling funds: ' + e.message);\n        return;\n      }\n      console.log('Finished settling funds.');\n    };\n    connected && wallet?.autoApprove && autoSettleEnabled && autoSettle();\n  }, 1000);\n\n  const formattedBalances: [\n    string | undefined,\n    Balances | undefined,\n    string,\n    string | undefined,\n  ][] = [\n    [\n      baseCurrency,\n      baseCurrencyBalances,\n      'base',\n      market?.baseMintAddress.toBase58(),\n    ],\n    [\n      quoteCurrency,\n      quoteCurrencyBalances,\n      'quote',\n      market?.quoteMintAddress.toBase58(),\n    ],\n  ];\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      {formattedBalances.map(\n        ([currency, balances, baseOrQuote, mint], index) => (\n          <React.Fragment key={index}>\n            <Divider style={{ borderColor: 'white' }}>\n              {currency}{' '}\n              {mint && (\n                <Popover\n                  content={<LinkAddress address={mint} />}\n                  placement=\"bottomRight\"\n                  title=\"Token mint\"\n                  trigger=\"hover\"\n                >\n                  <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n                </Popover>\n              )}\n            </Divider>\n            {connected && (\n              <RowBox align=\"middle\" style={{ paddingBottom: 10 }}>\n                <StandaloneTokenAccountsSelect\n                  accounts={tokenAccounts?.filter(\n                    (account) => account.effectiveMint.toBase58() === mint,\n                  )}\n                  mint={mint}\n                  label\n                />\n              </RowBox>\n            )}\n            <RowBox\n              align=\"middle\"\n              justify=\"space-between\"\n              style={{ paddingBottom: 12 }}\n            >\n              <Col>Wallet balance:</Col>\n              <Col>{balances && balances.wallet}</Col>\n            </RowBox>\n            <RowBox\n              align=\"middle\"\n              justify=\"space-between\"\n              style={{ paddingBottom: 12 }}\n            >\n              <Col>Unsettled balance:</Col>\n              <Col>{balances && balances.unsettled}</Col>\n            </RowBox>\n            <RowBox align=\"middle\" justify=\"space-around\">\n              <Col style={{ width: 150 }}>\n                <ActionButton\n                  block\n                  size=\"large\"\n                  onClick={() => setBaseOrQuote(baseOrQuote)}\n                >\n                  Deposit\n                </ActionButton>\n              </Col>\n              <Col style={{ width: 150 }}>\n                <ActionButton block size=\"large\" onClick={onSettleFunds}>\n                  Settle\n                </ActionButton>\n              </Col>\n            </RowBox>\n            <Tip>\n              All deposits go to your{' '}\n              <Link external to={providerUrl}>\n                {providerName}\n              </Link>{' '}\n              wallet\n            </Tip>\n          </React.Fragment>\n        ),\n      )}\n      <DepositDialog\n        baseOrQuote={baseOrQuote}\n        onClose={() => setBaseOrQuote('')}\n      />\n    </FloatingElement>\n  );\n}\n","import {Button, Input, Radio, Slider, Switch} from 'antd';\nimport React, {useEffect, useState} from 'react';\nimport styled from 'styled-components';\nimport {\n  useFeeDiscountKeys,\n  useLocallyStoredFeeDiscountKey,\n  useMarket,\n  useMarkPrice,\n  useSelectedBaseCurrencyAccount,\n  useSelectedBaseCurrencyBalances,\n  useSelectedOpenOrdersAccount,\n  useSelectedQuoteCurrencyAccount,\n  useSelectedQuoteCurrencyBalances,\n} from '../utils/markets';\nimport {useWallet} from '../utils/wallet';\nimport {notify} from '../utils/notifications';\nimport {floorToDecimal, getDecimalCount, roundToDecimal,} from '../utils/utils';\nimport {useSendConnection} from '../utils/connection';\nimport FloatingElement from './layout/FloatingElement';\nimport {getUnixTs, placeOrder} from '../utils/send';\nimport {SwitchChangeEventHandler} from 'antd/es/switch';\nimport {refreshCache} from '../utils/fetch-loop';\nimport tuple from 'immutable-tuple';\n\nconst SellButton = styled(Button)`\n  margin: 20px 0px 0px 0px;\n  background: #f23b69;\n  border-color: #f23b69;\n`;\n\nconst BuyButton = styled(Button)`\n  margin: 20px 0px 0px 0px;\n  background: #02bf76;\n  border-color: #02bf76;\n`;\n\nconst sliderMarks = {\n  0: '0%',\n  25: '25%',\n  50: '50%',\n  75: '75%',\n  100: '100%',\n};\n\nexport default function TradeForm({\n  style,\n  setChangeOrderRef,\n}: {\n  style?: any;\n  setChangeOrderRef?: (\n    ref: ({ size, price }: { size?: number; price?: number }) => void,\n  ) => void;\n}) {\n  const [side, setSide] = useState<'buy' | 'sell'>('buy');\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const baseCurrencyBalances = useSelectedBaseCurrencyBalances();\n  const quoteCurrencyBalances = useSelectedQuoteCurrencyBalances();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const { wallet, connected } = useWallet();\n  const sendConnection = useSendConnection();\n  const markPrice = useMarkPrice();\n  useFeeDiscountKeys();\n  const {\n    storedFeeDiscountKey: feeDiscountKey,\n  } = useLocallyStoredFeeDiscountKey();\n\n  const [postOnly, setPostOnly] = useState(false);\n  const [ioc, setIoc] = useState(false);\n  const [baseSize, setBaseSize] = useState<number | undefined>(undefined);\n  const [quoteSize, setQuoteSize] = useState<number | undefined>(undefined);\n  const [price, setPrice] = useState<number | undefined>(undefined);\n  const [submitting, setSubmitting] = useState(false);\n  const [sizeFraction, setSizeFraction] = useState(0);\n\n  const availableQuote =\n    openOrdersAccount && market\n      ? market.quoteSplSizeToNumber(openOrdersAccount.quoteTokenFree)\n      : 0;\n\n  let quoteBalance = (quoteCurrencyBalances || 0) + (availableQuote || 0);\n  let baseBalance = baseCurrencyBalances || 0;\n  let sizeDecimalCount =\n    market?.minOrderSize && getDecimalCount(market.minOrderSize);\n  let priceDecimalCount = market?.tickSize && getDecimalCount(market.tickSize);\n\n  const publicKey = wallet?.publicKey;\n\n  useEffect(() => {\n    setChangeOrderRef && setChangeOrderRef(doChangeOrder);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setChangeOrderRef]);\n\n  useEffect(() => {\n    baseSize && price && onSliderChange(sizeFraction);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [side]);\n\n  useEffect(() => {\n    updateSizeFraction();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [price, baseSize]);\n\n  useEffect(() => {\n    const warmUpCache = async () => {\n      try {\n        if (!wallet || !publicKey || !market) {\n          console.log(`Skipping refreshing accounts`);\n          return;\n        }\n        const startTime = getUnixTs();\n        console.log(`Refreshing accounts for ${market.address}`);\n        await market?.findOpenOrdersAccountsForOwner(sendConnection, publicKey);\n        await market?.findBestFeeDiscountKey(sendConnection, publicKey);\n        const endTime = getUnixTs();\n        console.log(\n          `Finished refreshing accounts for ${market.address} after ${\n            endTime - startTime\n          }`,\n        );\n      } catch (e) {\n        console.log(`Encountered error when refreshing trading accounts: ${e}`);\n      }\n    };\n    warmUpCache();\n    const id = setInterval(warmUpCache, 30_000);\n    return () => clearInterval(id);\n  }, [market, sendConnection, wallet, publicKey]);\n\n  const onSetBaseSize = (baseSize: number | undefined) => {\n    setBaseSize(baseSize);\n    if (!baseSize) {\n      setQuoteSize(undefined);\n      return;\n    }\n    let usePrice = price || markPrice;\n    if (!usePrice) {\n      setQuoteSize(undefined);\n      return;\n    }\n    const rawQuoteSize = baseSize * usePrice;\n    const quoteSize =\n      baseSize && roundToDecimal(rawQuoteSize, sizeDecimalCount);\n    setQuoteSize(quoteSize);\n  };\n\n  const onSetQuoteSize = (quoteSize: number | undefined) => {\n    setQuoteSize(quoteSize);\n    if (!quoteSize) {\n      setBaseSize(undefined);\n      return;\n    }\n    let usePrice = price || markPrice;\n    if (!usePrice) {\n      setBaseSize(undefined);\n      return;\n    }\n    const rawBaseSize = quoteSize / usePrice;\n    const baseSize = quoteSize && roundToDecimal(rawBaseSize, sizeDecimalCount);\n    setBaseSize(baseSize);\n  };\n\n  const doChangeOrder = ({\n    size,\n    price,\n  }: {\n    size?: number;\n    price?: number;\n  }) => {\n    const formattedSize = size && roundToDecimal(size, sizeDecimalCount);\n    const formattedPrice = price && roundToDecimal(price, priceDecimalCount);\n    formattedSize && onSetBaseSize(formattedSize);\n    formattedPrice && setPrice(formattedPrice);\n  };\n\n  const updateSizeFraction = () => {\n    const rawMaxSize =\n      side === 'buy' ? quoteBalance / (price || markPrice || 1) : baseBalance;\n    const maxSize = floorToDecimal(rawMaxSize, sizeDecimalCount);\n    const sizeFraction = Math.min(((baseSize || 0) / maxSize) * 100, 100);\n    setSizeFraction(sizeFraction);\n  };\n\n  const onSliderChange = (value) => {\n    if (!price && markPrice) {\n      let formattedMarkPrice: number | string = priceDecimalCount\n        ? markPrice.toFixed(priceDecimalCount)\n        : markPrice;\n      setPrice(\n        typeof formattedMarkPrice === 'number'\n          ? formattedMarkPrice\n          : parseFloat(formattedMarkPrice),\n      );\n    }\n\n    let newSize;\n    if (side === 'buy') {\n      if (price || markPrice) {\n        newSize = ((quoteBalance / (price || markPrice || 1)) * value) / 100;\n      }\n    } else {\n      newSize = (baseBalance * value) / 100;\n    }\n\n    // round down to minOrderSize increment\n    let formatted = floorToDecimal(newSize, sizeDecimalCount);\n\n    onSetBaseSize(formatted);\n  };\n\n  const postOnChange: SwitchChangeEventHandler = (checked) => {\n    if (checked) {\n      setIoc(false);\n    }\n    setPostOnly(checked);\n  };\n  const iocOnChange: SwitchChangeEventHandler = (checked) => {\n    if (checked) {\n      setPostOnly(false);\n    }\n    setIoc(checked);\n  };\n\n  async function onSubmit() {\n    if (!price) {\n      console.warn('Missing price');\n      notify({\n        message: 'Missing price',\n        type: 'error',\n      });\n      return;\n    } else if (!baseSize) {\n      console.warn('Missing size');\n      notify({\n        message: 'Missing size',\n        type: 'error',\n      });\n      return;\n    }\n\n    setSubmitting(true);\n    try {\n      if (!wallet) {\n        return null;\n      }\n\n      await placeOrder({\n        side,\n        price,\n        size: baseSize,\n        orderType: ioc ? 'ioc' : postOnly ? 'postOnly' : 'limit',\n        market,\n        connection: sendConnection,\n        wallet,\n        baseCurrencyAccount: baseCurrencyAccount?.pubkey,\n        quoteCurrencyAccount: quoteCurrencyAccount?.pubkey,\n        feeDiscountPubkey: feeDiscountKey,\n      });\n      refreshCache(tuple('getTokenAccounts', wallet, connected));\n      setPrice(undefined);\n      onSetBaseSize(undefined);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error placing order',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <FloatingElement\n      style={{ display: 'flex', flexDirection: 'column', ...style }}\n    >\n      <div style={{ flex: 1 }}>\n        <Radio.Group\n          onChange={(e) => setSide(e.target.value)}\n          value={side}\n          buttonStyle=\"solid\"\n          style={{\n            marginBottom: 8,\n            width: '100%',\n          }}\n        >\n          <Radio.Button\n            value=\"buy\"\n            style={{\n              width: '50%',\n              textAlign: 'center',\n              background: side === 'buy' ? '#02bf76' : '',\n              borderColor: side === 'buy' ? '#02bf76' : '',\n            }}\n          >\n            BUY\n          </Radio.Button>\n          <Radio.Button\n            value=\"sell\"\n            style={{\n              width: '50%',\n              textAlign: 'center',\n              background: side === 'sell' ? '#F23B69' : '',\n              borderColor: side === 'sell' ? '#F23B69' : '',\n            }}\n          >\n            SELL\n          </Radio.Button>\n        </Radio.Group>\n        <Input\n          style={{ textAlign: 'right', paddingBottom: 8 }}\n          addonBefore={<div style={{ width: '30px' }}>Price</div>}\n          suffix={\n            <span style={{ fontSize: 10, opacity: 0.5 }}>{quoteCurrency}</span>\n          }\n          value={price}\n          type=\"number\"\n          step={market?.tickSize || 1}\n          onChange={(e) => setPrice(parseFloat(e.target.value))}\n        />\n        <Input.Group compact style={{ paddingBottom: 8 }}>\n          <Input\n            style={{ width: 'calc(50% + 30px)', textAlign: 'right' }}\n            addonBefore={<div style={{ width: '30px' }}>Size</div>}\n            suffix={\n              <span style={{ fontSize: 10, opacity: 0.5 }}>{baseCurrency}</span>\n            }\n            value={baseSize}\n            type=\"number\"\n            step={market?.minOrderSize || 1}\n            onChange={(e) => onSetBaseSize(parseFloat(e.target.value))}\n          />\n          <Input\n            style={{ width: 'calc(50% - 30px)', textAlign: 'right' }}\n            suffix={\n              <span style={{ fontSize: 10, opacity: 0.5 }}>\n                {quoteCurrency}\n              </span>\n            }\n            value={quoteSize}\n            type=\"number\"\n            step={market?.minOrderSize || 1}\n            onChange={(e) => onSetQuoteSize(parseFloat(e.target.value))}\n          />\n        </Input.Group>\n        <Slider\n          value={sizeFraction}\n          tipFormatter={(value) => `${value}%`}\n          marks={sliderMarks}\n          onChange={onSliderChange}\n        />\n        <div style={{ paddingTop: 18 }}>\n          {'POST '}\n          <Switch\n            checked={postOnly}\n            onChange={postOnChange}\n            style={{ marginRight: 40 }}\n          />\n          {'IOC '}\n          <Switch checked={ioc} onChange={iocOnChange} />\n        </div>\n      </div>\n      {side === 'buy' ? (\n        <BuyButton\n          disabled={!price || !baseSize}\n          onClick={onSubmit}\n          block\n          type=\"primary\"\n          size=\"large\"\n          loading={submitting}\n        >\n          Buy {baseCurrency}\n        </BuyButton>\n      ) : (\n        <SellButton\n          disabled={!price || !baseSize}\n          onClick={onSubmit}\n          block\n          type=\"primary\"\n          size=\"large\"\n          loading={submitting}\n        >\n          Sell {baseCurrency}\n        </SellButton>\n      )}\n    </FloatingElement>\n  );\n}\n","import { Col, Row } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useMarket, useBonfidaTrades } from '../utils/markets';\nimport { getDecimalCount } from '../utils/utils';\nimport FloatingElement from './layout/FloatingElement';\nimport { BonfidaTrade } from '../utils/types';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\nconst SizeTitle = styled(Row)`\n  padding: 20px 0 14px;\n  color: #434a59;\n`;\n\nexport default function PublicTrades({ smallScreen }) {\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const [trades, loaded] = useBonfidaTrades();\n\n  return (\n    <FloatingElement\n      style={\n        smallScreen\n          ? { flex: 1 }\n          : {\n              marginTop: '10px',\n              minHeight: '270px',\n              maxHeight: 'calc(100vh - 700px)',\n            }\n      }\n    >\n      <Title>Recent Market trades</Title>\n      <SizeTitle>\n        <Col span={8}>Price ({quoteCurrency}) </Col>\n        <Col span={8} style={{ textAlign: 'right' }}>\n          Size ({baseCurrency})\n        </Col>\n        <Col span={8} style={{ textAlign: 'right' }}>\n          Time\n        </Col>\n      </SizeTitle>\n      {!!trades && loaded && (\n        <div\n          style={{\n            marginRight: '-20px',\n            paddingRight: '5px',\n            overflowY: 'scroll',\n            maxHeight: smallScreen\n              ? 'calc(100% - 75px)'\n              : 'calc(100vh - 800px)',\n          }}\n        >\n          {trades.map((trade: BonfidaTrade, i: number) => (\n            <Row key={i} style={{ marginBottom: 4 }}>\n              <Col\n                span={8}\n                style={{\n                  color: trade.side === 'buy' ? '#41C77A' : '#F23B69',\n                }}\n              >\n                {market?.tickSize && !isNaN(trade.price)\n                  ? Number(trade.price).toFixed(\n                      getDecimalCount(market.tickSize),\n                    )\n                  : trade.price}\n              </Col>\n              <Col span={8} style={{ textAlign: 'right' }}>\n                {market?.minOrderSize && !isNaN(trade.size)\n                  ? Number(trade.size).toFixed(\n                      getDecimalCount(market.minOrderSize),\n                    )\n                  : trade.size}\n              </Col>\n              <Col span={8} style={{ textAlign: 'right', color: '#434a59' }}>\n                {trade.time && new Date(trade.time).toLocaleTimeString()}\n              </Col>\n            </Row>\n          ))}\n        </div>\n      )}\n    </FloatingElement>\n  );\n}\n","import { Button, Divider, Spin, Typography } from 'antd';\nimport React from 'react';\nimport {\n  useGetOpenOrdersForDeprecatedMarkets,\n  useBalancesForDeprecatedMarkets,\n  useUnmigratedOpenOrdersAccounts,\n} from '../utils/markets';\nimport FloatingElement from './layout/FloatingElement';\nimport CheckOutlined from '@ant-design/icons/lib/icons/CheckOutlined';\nimport BalancesTable from './UserInfoTable/BalancesTable';\nimport OpenOrderTable from './UserInfoTable/OpenOrderTable';\nimport SyncOutlined from '@ant-design/icons/lib/icons/SyncOutlined';\n\nconst { Title } = Typography;\n\nexport default function DeprecatedMarketsInstructions({ switchToLiveMarkets }) {\n  const balances = useBalancesForDeprecatedMarkets();\n  const {\n    openOrders,\n    loaded,\n    refreshOpenOrders,\n  } = useGetOpenOrdersForDeprecatedMarkets();\n\n  const { refresh } = useUnmigratedOpenOrdersAccounts();\n  const needToCancelOrders = !openOrders || openOrders.length > 0;\n  const filteredBalances =\n    balances &&\n    balances.filter(({ orders, unsettled }) => orders > 0 || unsettled > 0);\n  const needToSettleFunds = filteredBalances && filteredBalances.length > 0;\n  return (\n    <FloatingElement>\n      <Title level={4} style={{ color: 'rgba(255, 255, 255, 1)' }}>\n        Migrate new markets\n      </Title>\n      <Typography>\n        Markets on older versions of the DEX or using Wrapped USDT are now deprecated. To migrate over\n        to the new markets, please cancel your orders and settle your funds on old markets. To convert\n        from Wrapped USDT to Native USDT use sollet.io.\n      </Typography>\n      <div style={{ marginTop: 20, display: 'flex', justifyContent: 'center' }}>\n        <Button onClick={() => refresh(true)}>\n          <SyncOutlined /> Refresh data\n        </Button>\n      </div>\n      {!balances ? (\n        <Spin size=\"large\" />\n      ) : (\n        <>\n          <Divider>\n            {!needToCancelOrders && <CheckOutlined />} Cancel your orders\n          </Divider>\n          {needToCancelOrders ? (\n            loaded ? (\n              <OpenOrderTable\n                openOrders={openOrders}\n                onCancelSuccess={() => {\n                  setTimeout(() => {\n                    refresh();\n                    refreshOpenOrders();\n                  }, 1000); // Wait so that on-chain account state reflects the update\n                }}\n              />\n            ) : (\n              <Spin size=\"large\" />\n            )\n          ) : null}\n          <Divider>\n            {!needToSettleFunds && <CheckOutlined />} Settle your funds\n          </Divider>\n          {needToSettleFunds && (\n            <BalancesTable\n              balances={filteredBalances}\n              hideWalletBalance\n              showMarket\n              onSettleSuccess={() => {\n                setTimeout(refresh, 1000); // Wait so that on-chain account state reflects the update\n              }}\n            />\n          )}\n          <Divider>Switch to upgraded markets</Divider>\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\n            <Button\n              onClick={switchToLiveMarkets}\n              disabled={needToSettleFunds || needToCancelOrders}\n            >\n              Switch to new markets\n            </Button>\n          </div>\n        </>\n      )}\n    </FloatingElement>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Col, Input, Modal, Row, Typography } from 'antd';\nimport { notify } from '../utils/notifications';\nimport { isValidPublicKey } from '../utils/utils';\nimport { PublicKey } from '@solana/web3.js';\nimport { Market, MARKETS, TOKEN_MINTS } from '@project-serum/serum';\nimport { useAccountInfo, useConnection } from '../utils/connection';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nconst { Text } = Typography;\n\nexport default function CustomMarketDialog({\n  visible,\n  onAddCustomMarket,\n  onClose,\n}) {\n  const connection = useConnection();\n\n  const [marketId, setMarketId] = useState('');\n\n  const [marketLabel, setMarketLabel] = useState('');\n  const [baseLabel, setBaseLabel] = useState('');\n  const [quoteLabel, setQuoteLabel] = useState('');\n\n  const [market, setMarket] = useState(null);\n  const [loadingMarket, setLoadingMarket] = useState(false);\n\n  const wellFormedMarketId = isValidPublicKey(marketId);\n\n  const [marketAccountInfo] = useAccountInfo(\n    wellFormedMarketId ? new PublicKey(marketId) : null,\n  );\n  const programId = marketAccountInfo\n    ? marketAccountInfo.owner.toBase58()\n    : MARKETS.find(({ deprecated }) => !deprecated).programId.toBase58();\n\n  useEffect(() => {\n    if (!wellFormedMarketId || !programId) {\n      resetLabels();\n      return;\n    }\n    setLoadingMarket(true);\n    Market.load(\n      connection,\n      new PublicKey(marketId),\n      {},\n      new PublicKey(programId),\n    )\n      .then((market) => {\n        setMarket(market);\n      })\n      .catch(() => {\n        resetLabels();\n        setMarket(null);\n      })\n      .finally(() => setLoadingMarket(false));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [connection, marketId, programId]);\n\n  const resetLabels = () => {\n    setMarketLabel(null);\n    setBaseLabel(null);\n    setQuoteLabel(null);\n  };\n\n  const knownMarket = MARKETS.find(\n    (m) =>\n      m.address.toBase58() === marketId && m.programId.toBase58() === programId,\n  );\n  const knownProgram = MARKETS.find(\n    (m) => m.programId.toBase58() === programId,\n  );\n  const knownBaseCurrency =\n    market?.baseMintAddress &&\n    TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\n      ?.name;\n\n  const knownQuoteCurrency =\n    market?.quoteMintAddress &&\n    TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\n      ?.name;\n\n  const canSubmit =\n    !loadingMarket &&\n    !!market &&\n    market.publicKey.toBase58() === marketId &&\n    marketId &&\n    programId &&\n    marketLabel &&\n    (knownBaseCurrency || baseLabel) &&\n    (knownQuoteCurrency || quoteLabel) &&\n    wellFormedMarketId;\n\n  const onSubmit = () => {\n    if (!canSubmit) {\n      notify({\n        message: 'Please fill in all fields with valid values',\n        type: 'error',\n      });\n      return;\n    }\n\n    let params = {\n      address: marketId,\n      programId,\n      name: marketLabel,\n    };\n    if (!knownBaseCurrency) {\n      params.baseLabel = baseLabel;\n    }\n    if (!knownQuoteCurrency) {\n      params.quoteLabel = quoteLabel;\n    }\n    onAddCustomMarket(params);\n    onDoClose();\n  };\n\n  const onDoClose = () => {\n    resetLabels();\n    setMarket(null);\n    setMarketId(null);\n    onClose();\n  };\n\n  return (\n    <Modal\n      title={'Add custom market'}\n      visible={visible}\n      onOk={onSubmit}\n      okText={'Add'}\n      onCancel={onDoClose}\n      okButtonProps={{ disabled: !canSubmit }}\n    >\n      <div>\n        {wellFormedMarketId ? (\n          <>\n            {!market && !loadingMarket && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Not a valid market</Text>\n              </Row>\n            )}\n            {market && knownMarket && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"warning\">Market known: {knownMarket.name}</Text>\n              </Row>\n            )}\n            {market && !knownProgram && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Warning: unknown DEX program</Text>\n              </Row>\n            )}\n            {market && knownProgram && knownProgram.deprecated && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"warning\">Warning: deprecated DEX program</Text>\n              </Row>\n            )}\n          </>\n        ) : (\n          <>\n            {marketId && !wellFormedMarketId && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Invalid market ID</Text>\n              </Row>\n            )}\n          </>\n        )}\n        <Row style={{ marginBottom: 8 }}>\n          <Col span={24}>\n            <Input\n              placeholder=\"Market Id\"\n              value={marketId}\n              onChange={(e) => setMarketId(e.target.value)}\n              suffix={loadingMarket ? <LoadingOutlined /> : null}\n            />\n          </Col>\n        </Row>\n\n        <Row style={{ marginBottom: 8, marginTop: 8 }}>\n          <Col span={24}>\n            <Input\n              placeholder=\"Market Label\"\n              disabled={!market}\n              value={marketLabel}\n              onChange={(e) => setMarketLabel(e.target.value)}\n            />\n          </Col>\n        </Row>\n        <Row gutter={[8]} style={{ marginBottom: 8 }}>\n          <Col span={12}>\n            <Input\n              placeholder=\"Base label\"\n              disabled={!market || knownBaseCurrency}\n              value={knownBaseCurrency || baseLabel}\n              onChange={(e) => setBaseLabel(e.target.value)}\n            />\n            {market && !knownBaseCurrency && (\n              <div style={{ marginTop: 8 }}>\n                <Text type=\"warning\">Warning: unknown token</Text>\n              </div>\n            )}\n          </Col>\n          <Col span={12}>\n            <Input\n              placeholder=\"Quote label\"\n              disabled={!market || knownQuoteCurrency}\n              value={knownQuoteCurrency || quoteLabel}\n              onChange={(e) => setQuoteLabel(e.target.value)}\n            />\n            {market && !knownQuoteCurrency && (\n              <div style={{ marginTop: 8 }}>\n                <Text type=\"warning\">Warning: unknown token</Text>\n              </div>\n            )}\n          </Col>\n        </Row>\n      </div>\n    </Modal>\n  );\n}\n","/* eslint-disable */\nvar t = function () {\n  return (t =\n    Object.assign ||\n    function (t) {\n      for (var e, o = arguments, n = 1, i = arguments.length; n < i; n++)\n        for (var r in (e = o[n]))\n          Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);\n      return t;\n    }).apply(this, arguments);\n};\nfunction e(o, n) {\n  var i = t({}, o);\n  for (var r in n)\n    'object' != typeof o[r] || null === o[r] || Array.isArray(o[r])\n      ? void 0 !== n[r] && (i[r] = n[r])\n      : (i[r] = e(o[r], n[r]));\n  return i;\n}\nvar o = {\n    mobile: {\n      disabled_features: [\n        'left_toolbar',\n        'header_widget',\n        'timeframes_toolbar',\n        'edit_buttons_in_legend',\n        'context_menus',\n        'control_bar',\n        'border_around_the_chart',\n      ],\n      enabled_features: [],\n    },\n  },\n  n = {\n    width: 800,\n    height: 500,\n    interval: '1D',\n    timezone: 'Etc/UTC',\n    container_id: '',\n    library_path: '',\n    locale: 'en',\n    widgetbar: {\n      details: !1,\n      watchlist: !1,\n      watchlist_settings: { default_symbols: [] },\n    },\n    overrides: { 'mainSeriesProperties.showCountdown': !1 },\n    studies_overrides: {},\n    trading_customization: { position: {}, order: {} },\n    brokerConfig: { configFlags: {} },\n    fullscreen: !1,\n    autosize: !1,\n    disabled_features: [],\n    enabled_features: [],\n    debug: !1,\n    logo: {},\n    time_frames: [\n      { text: '5y', resolution: '1W' },\n      { text: '1y', resolution: '1W' },\n      { text: '6m', resolution: '120' },\n      { text: '3m', resolution: '60' },\n      { text: '1m', resolution: '30' },\n      { text: '5d', resolution: '5' },\n      { text: '1d', resolution: '1' },\n    ],\n    client_id: '0',\n    user_id: '0',\n    charts_storage_api_version: '1.0',\n    favorites: { intervals: [], chartTypes: [] },\n  };\nfunction i() {\n  return 'CL v17.024 (internal id cbd3ae28 @ 2020-11-11T12:45:30.675Z)';\n}\nvar r = (function () {\n  function t(t) {\n    if (\n      ((this._id =\n        'tradingview_' +\n        ((1048576 * (1 + Math.random())) | 0).toString(16).substring(1)),\n      (this._ready = !1),\n      (this._readyHandlers = []),\n      (this._onWindowResize = this._autoResizeChart.bind(this)),\n      !t.datafeed)\n    )\n      throw new Error('Datafeed is not defined');\n    if (((this._options = e(n, t)), t.preset)) {\n      var i = o[t.preset];\n      i\n        ? (void 0 !== this._options.disabled_features\n            ? (this._options.disabled_features = this._options.disabled_features.concat(\n                i.disabled_features,\n              ))\n            : (this._options.disabled_features = i.disabled_features),\n          void 0 !== this._options.enabled_features\n            ? (this._options.enabled_features = this._options.enabled_features.concat(\n                i.enabled_features,\n              ))\n            : (this._options.enabled_features = i.enabled_features))\n        : console.warn('Unknown preset: `' + t.preset + '`');\n    }\n    'Dark' === this._options.theme &&\n      void 0 === this._options.loading_screen &&\n      (this._options.loading_screen = { backgroundColor: '#131722' }),\n      this._create();\n  }\n  return (\n    (t.prototype.onChartReady = function (t) {\n      this._ready ? t.call(this) : this._readyHandlers.push(t);\n    }),\n    (t.prototype.headerReady = function () {\n      var t = this;\n      return this._innerWindowLoaded.then(function () {\n        return t._innerWindow().headerReady();\n      });\n    }),\n    (t.prototype.onGrayedObjectClicked = function (t) {\n      this._innerAPI().onGrayedObjectClicked(t);\n    }),\n    (t.prototype.onShortcut = function (t, e) {\n      this._innerWindow().createShortcutAction(t, e);\n    }),\n    (t.prototype.subscribe = function (t, e) {\n      this._innerAPI().subscribe(t, e);\n    }),\n    (t.prototype.unsubscribe = function (t, e) {\n      this._innerAPI().unsubscribe(t, e);\n    }),\n    (t.prototype.chart = function (t) {\n      return this._innerAPI().chart(t);\n    }),\n    (t.prototype.getLanguage = function () {\n      return this._options.locale;\n    }),\n    (t.prototype.setSymbol = function (t, e, o) {\n      this._innerAPI().changeSymbol(t, e, o);\n    }),\n    (t.prototype.remove = function () {\n      window.removeEventListener('resize', this._onWindowResize),\n        this._readyHandlers.splice(0, this._readyHandlers.length),\n        delete window[this._id],\n        this._iFrame.parentNode &&\n          this._iFrame.parentNode.removeChild(this._iFrame);\n    }),\n    (t.prototype.closePopupsAndDialogs = function () {\n      this._innerAPI().closePopupsAndDialogs();\n    }),\n    (t.prototype.selectLineTool = function (t) {\n      this._innerAPI().selectLineTool(t);\n    }),\n    (t.prototype.selectedLineTool = function () {\n      return this._innerAPI().selectedLineTool();\n    }),\n    (t.prototype.save = function (t) {\n      this._innerAPI().saveChart(t);\n    }),\n    (t.prototype.load = function (t, e) {\n      this._innerAPI().loadChart({ json: t, extendedData: e });\n    }),\n    (t.prototype.getSavedCharts = function (t) {\n      this._innerAPI().getSavedCharts(t);\n    }),\n    (t.prototype.loadChartFromServer = function (t) {\n      this._innerAPI().loadChartFromServer(t);\n    }),\n    (t.prototype.saveChartToServer = function (t, e, o) {\n      this._innerAPI().saveChartToServer(t, e, o);\n    }),\n    (t.prototype.removeChartFromServer = function (t, e) {\n      this._innerAPI().removeChartFromServer(t, e);\n    }),\n    (t.prototype.onContextMenu = function (t) {\n      this._innerAPI().onContextMenu(t);\n    }),\n    (t.prototype.createButton = function (t) {\n      return this._innerWindow().createButton(t);\n    }),\n    (t.prototype.showNoticeDialog = function (t) {\n      this._innerAPI().showNoticeDialog(t);\n    }),\n    (t.prototype.showConfirmDialog = function (t) {\n      this._innerAPI().showConfirmDialog(t);\n    }),\n    (t.prototype.showLoadChartDialog = function () {\n      this._innerAPI().showLoadChartDialog();\n    }),\n    (t.prototype.showSaveAsChartDialog = function () {\n      this._innerAPI().showSaveAsChartDialog();\n    }),\n    (t.prototype.symbolInterval = function () {\n      return this._innerAPI().getSymbolInterval();\n    }),\n    (t.prototype.mainSeriesPriceFormatter = function () {\n      return this._innerAPI().mainSeriesPriceFormatter();\n    }),\n    (t.prototype.getIntervals = function () {\n      return this._innerAPI().getIntervals();\n    }),\n    (t.prototype.getStudiesList = function () {\n      return this._innerAPI().getStudiesList();\n    }),\n    (t.prototype.addCustomCSSFile = function (t) {\n      this._innerWindow().addCustomCSSFile(t);\n    }),\n    (t.prototype.applyOverrides = function (t) {\n      (this._options = e(this._options, { overrides: t })),\n        this._innerWindow().applyOverrides(t);\n    }),\n    (t.prototype.applyStudiesOverrides = function (t) {\n      this._innerWindow().applyStudiesOverrides(t);\n    }),\n    (t.prototype.watchList = function () {\n      return this._innerAPI().watchlist();\n    }),\n    (t.prototype.activeChart = function () {\n      return this._innerAPI().activeChart();\n    }),\n    (t.prototype.chartsCount = function () {\n      return this._innerAPI().chartsCount();\n    }),\n    (t.prototype.layout = function () {\n      return this._innerAPI().layout();\n    }),\n    (t.prototype.setLayout = function (t) {\n      this._innerAPI().setLayout(t);\n    }),\n    (t.prototype.layoutName = function () {\n      return this._innerAPI().layoutName();\n    }),\n    (t.prototype.changeTheme = function (t, e) {\n      this._innerWindow().changeTheme(t, e);\n    }),\n    (t.prototype.getTheme = function () {\n      return this._innerWindow().getTheme();\n    }),\n    (t.prototype.takeScreenshot = function () {\n      this._innerAPI().takeScreenshot();\n    }),\n    (t.prototype.lockAllDrawingTools = function () {\n      return this._innerAPI().lockAllDrawingTools();\n    }),\n    (t.prototype.hideAllDrawingTools = function () {\n      return this._innerAPI().hideAllDrawingTools();\n    }),\n    (t.prototype.drawOnAllCharts = function (t) {\n      this._innerAPI().drawOnAllCharts(t);\n    }),\n    (t.prototype.magnetEnabled = function () {\n      return this._innerAPI().magnetEnabled();\n    }),\n    (t.prototype.magnetMode = function () {\n      return this._innerAPI().magnetMode();\n    }),\n    (t.prototype.undoRedoState = function () {\n      return this._innerAPI().undoRedoState();\n    }),\n    (t.prototype.setIntervalLinkingEnabled = function (t) {\n      this._innerAPI().setIntervalLinkingEnabled(t);\n    }),\n    (t.prototype.setTimeFrame = function (t) {\n      this._innerAPI().setTimeFrame(t);\n    }),\n    (t.prototype.symbolSync = function () {\n      return this._innerAPI().symbolSync();\n    }),\n    (t.prototype.intervalSync = function () {\n      return this._innerAPI().intervalSync();\n    }),\n    (t.prototype.crosshairSync = function () {\n      return this._innerAPI().crosshairSync();\n    }),\n    (t.prototype.timeSync = function () {\n      return this._innerAPI().timeSync();\n    }),\n    (t.prototype.getAllFeatures = function () {\n      return this._innerWindow().getAllFeatures();\n    }),\n    (t.prototype.takeClientScreenshot = function () {\n      return this._innerAPI().takeClientScreenshot();\n    }),\n    (t.prototype._innerAPI = function () {\n      return this._innerWindow().tradingViewApi;\n    }),\n    (t.prototype._innerWindow = function () {\n      return this._iFrame.contentWindow;\n    }),\n    (t.prototype._autoResizeChart = function () {\n      this._options.fullscreen &&\n        (this._iFrame.style.height = window.innerHeight + 'px');\n    }),\n    (t.prototype._create = function () {\n      var t = this,\n        e = this._render(),\n        o = document.getElementById(this._options.container_id);\n      if (null === o)\n        throw new Error(\n          'There is no such element - #' + this._options.container_id,\n        );\n      (o.innerHTML = e), (this._iFrame = o.querySelector('#' + this._id));\n      var n = this._iFrame;\n      (this._options.autosize || this._options.fullscreen) &&\n        ((n.style.width = '100%'),\n        this._options.fullscreen || (n.style.height = '100%')),\n        window.addEventListener('resize', this._onWindowResize),\n        this._onWindowResize(),\n        (this._innerWindowLoaded = new Promise(function (t) {\n          var e = function () {\n            n.removeEventListener('load', e, !1), t();\n          };\n          n.addEventListener('load', e, !1);\n        })),\n        this._innerWindowLoaded.then(function () {\n          t._innerWindow().widgetReady(function () {\n            t._ready = !0;\n            for (var e = 0, o = t._readyHandlers; e < o.length; e++) {\n              var n = o[e];\n              try {\n                n.call(t);\n              } catch (i) {\n                console.error(i);\n              }\n            }\n            t._innerWindow().initializationFinished();\n          });\n        });\n    }),\n    (t.prototype._render = function () {\n      var t = window;\n      if (\n        ((t[this._id] = {\n          datafeed: this._options.datafeed,\n          customFormatters:\n            this._options.custom_formatters || this._options.customFormatters,\n          brokerFactory:\n            this._options.broker_factory || this._options.brokerFactory,\n          overrides: this._options.overrides,\n          studiesOverrides: this._options.studies_overrides,\n          tradingCustomization: this._options.trading_customization,\n          disabledFeatures: this._options.disabled_features,\n          enabledFeatures: this._options.enabled_features,\n          brokerConfig:\n            this._options.broker_config || this._options.brokerConfig,\n          restConfig: this._options.restConfig,\n          favorites: this._options.favorites,\n          logo: this._options.logo,\n          numeric_formatting: this._options.numeric_formatting,\n          rss_news_feed: this._options.rss_news_feed,\n          newsProvider: this._options.news_provider,\n          loadLastChart: this._options.load_last_chart,\n          saveLoadAdapter: this._options.save_load_adapter,\n          loading_screen: this._options.loading_screen,\n          settingsAdapter: this._options.settings_adapter,\n          getCustomIndicators: this._options.custom_indicators_getter,\n        }),\n        this._options.saved_data)\n      )\n        t[this._id].chartContent = { json: this._options.saved_data };\n      else if (!this._options.load_last_chart && !this._options.symbol)\n        throw new Error(\n          \"Symbol is not defined: either 'symbol' or 'load_last_chart' option must be set\",\n        );\n      var e =\n        (this._options.library_path || '') +\n        (encodeURIComponent(this._options.locale) +\n          '-tv-chart.cbd3ae28.html#symbol=') +\n        encodeURIComponent(this._options.symbol || '') +\n        '&interval=' +\n        encodeURIComponent(this._options.interval) +\n        (this._options.timeframe\n          ? '&timeframe=' + encodeURIComponent(this._options.timeframe)\n          : '') +\n        (this._options.toolbar_bg\n          ? '&toolbarbg=' +\n            encodeURIComponent(this._options.toolbar_bg.replace('#', ''))\n          : '') +\n        (this._options.studies_access\n          ? '&studiesAccess=' +\n            encodeURIComponent(JSON.stringify(this._options.studies_access))\n          : '') +\n        '&widgetbar=' +\n        encodeURIComponent(JSON.stringify(this._options.widgetbar)) +\n        (this._options.drawings_access\n          ? '&drawingsAccess=' +\n            encodeURIComponent(JSON.stringify(this._options.drawings_access))\n          : '') +\n        '&timeFrames=' +\n        encodeURIComponent(JSON.stringify(this._options.time_frames)) +\n        '&locale=' +\n        encodeURIComponent(this._options.locale) +\n        '&uid=' +\n        encodeURIComponent(this._id) +\n        '&clientId=' +\n        encodeURIComponent(String(this._options.client_id)) +\n        '&userId=' +\n        encodeURIComponent(String(this._options.user_id)) +\n        (this._options.charts_storage_url\n          ? '&chartsStorageUrl=' +\n            encodeURIComponent(this._options.charts_storage_url)\n          : '') +\n        (this._options.charts_storage_api_version\n          ? '&chartsStorageVer=' +\n            encodeURIComponent(this._options.charts_storage_api_version)\n          : '') +\n        (this._options.custom_css_url\n          ? '&customCSS=' + encodeURIComponent(this._options.custom_css_url)\n          : '') +\n        (this._options.auto_save_delay\n          ? '&autoSaveDelay=' +\n            encodeURIComponent(String(this._options.auto_save_delay))\n          : '') +\n        '&debug=' +\n        encodeURIComponent(String(this._options.debug)) +\n        (this._options.snapshot_url\n          ? '&snapshotUrl=' + encodeURIComponent(this._options.snapshot_url)\n          : '') +\n        (this._options.timezone\n          ? '&timezone=' + encodeURIComponent(this._options.timezone)\n          : '') +\n        (this._options.study_count_limit\n          ? '&studyCountLimit=' +\n            encodeURIComponent(String(this._options.study_count_limit))\n          : '') +\n        (this._options.symbol_search_request_delay\n          ? '&ssreqdelay=' +\n            encodeURIComponent(\n              String(this._options.symbol_search_request_delay),\n            )\n          : '') +\n        (this._options.compare_symbols\n          ? '&compareSymbols=' +\n            encodeURIComponent(JSON.stringify(this._options.compare_symbols))\n          : '') +\n        (this._options.theme\n          ? '&theme=' + encodeURIComponent(String(this._options.theme))\n          : '');\n      return (\n        '<iframe id=\"' +\n        this._id +\n        '\" name=\"' +\n        this._id +\n        '\"  src=\"' +\n        e +\n        '\"' +\n        (this._options.autosize || this._options.fullscreen\n          ? ''\n          : ' width=\"' +\n            this._options.width +\n            '\" height=\"' +\n            this._options.height +\n            '\"') +\n        ' frameborder=\"0\" allowTransparency=\"true\" scrolling=\"no\" allowfullscreen style=\"display:block;\"></iframe>'\n      );\n    }),\n    t\n  );\n})();\n(window.TradingView = window.TradingView || {}),\n  (window.TradingView.version = i);\nexport { i as version, r as widget };\n","const CHARTS_KEY = 'tradingviewCharts';\nconst STUDIES_KEY = 'tradingviewStudies';\n\n// See https://github.com/tradingview/charting_library/wiki/Widget-Constructor#save_load_adapter\n\nexport function getAllCharts() {\n  // @ts-ignore\n  let charts = JSON.parse(localStorage.getItem(CHARTS_KEY)) || [];\n  return new Promise((resolve) => resolve(charts));\n}\n\nexport function removeChart(chartId) {\n  // @ts-ignore\n  let charts = JSON.parse(localStorage.getItem(CHARTS_KEY)) || [];\n  charts = charts.filter((chart) => chart.id !== chartId);\n  localStorage.setItem(CHARTS_KEY, JSON.stringify(charts));\n  localStorage.removeItem(CHARTS_KEY + '.' + chartId);\n  return new Promise<void>((resolve) => resolve());\n}\n\nexport function saveChart(chartData) {\n  let { content, ...info } = chartData;\n  if (!info.id) {\n    info.id = 'chart' + Math.floor(Math.random() * 1e8);\n  }\n  // @ts-ignore\n  info.timestamp = new Date() - 0;\n  content = JSON.parse(content);\n  content['content'] = JSON.parse(content['content']);\n  // Remove \"study_Overlay\" i.e the indexes\n  try {\n    for (\n      var i = 0;\n      i < content['content']['charts'][0]['panes'][0]['sources'].length;\n      i++\n    ) {\n      if (\n        content['content']['charts'][0]['panes'][0]['sources'][i]['type'] ===\n        'study_Overlay'\n      ) {\n        content['content']['charts'][0]['panes'][0]['sources'].splice(i, 1);\n      }\n    }\n  } catch (err) {\n    console.log(err);\n  }\n  content['content'] = JSON.stringify(content['content']);\n  content = JSON.stringify(content);\n  // @ts-ignore\n  let charts = JSON.parse(localStorage.getItem(CHARTS_KEY)) || [];\n  charts = charts.filter((chart) => chart.id !== info.id);\n  charts.push(info);\n  localStorage.setItem(CHARTS_KEY, JSON.stringify(charts));\n  localStorage.setItem(CHARTS_KEY + '.' + info.id, content);\n\n  return new Promise((resolve) => resolve(info.id));\n}\n\nexport function getChartContent(chartId) {\n  let content = localStorage.getItem(CHARTS_KEY + '.' + chartId);\n  return new Promise((resolve) => resolve(content));\n}\n\nexport function getAllStudyTemplates() {\n  // @ts-ignore\n  let studies = JSON.parse(localStorage.getItem(STUDIES_KEY)) || [];\n  return new Promise((resolve) => resolve(studies));\n}\n\nexport function removeStudyTemplate({ name }) {\n  // @ts-ignore\n  let studies = JSON.parse(localStorage.getItem(STUDIES_KEY)) || [];\n  studies = studies.filter((study) => study.name !== name);\n  localStorage.setItem(STUDIES_KEY, JSON.stringify(studies));\n  localStorage.removeItem(STUDIES_KEY + '.' + name);\n  return new Promise((resolve) => resolve());\n}\n\nexport function saveStudyTemplate({ content, ...info }) {\n  // @ts-ignore\n  let studies = JSON.parse(localStorage.getItem(STUDIES_KEY)) || [];\n  studies = studies.filter((study) => study.name !== info.name);\n  studies.push(info);\n  localStorage.setItem(STUDIES_KEY, JSON.stringify(studies));\n  localStorage.setItem(STUDIES_KEY + '.' + info.name, content);\n  return new Promise((resolve) => resolve());\n}\n\nexport function getStudyTemplateContent({ name }) {\n  let content = localStorage.getItem(STUDIES_KEY + '.' + name);\n  return new Promise((resolve) => resolve(content));\n}\n","import * as React from 'react';\nimport './index.css';\nimport {\n  widget,\n  ChartingLibraryWidgetOptions,\n  IChartingLibraryWidget,\n} from '../../charting_library';\nimport { useMarket, USE_MARKETS } from '../../utils/markets';\nimport * as saveLoadAdapter from './saveLoadAdapter';\nimport { flatten } from '../../utils/utils';\nimport { BONFIDA_DATA_FEED } from '../../utils/bonfidaConnector';\n\nexport interface ChartContainerProps {\n  symbol: ChartingLibraryWidgetOptions['symbol'];\n  interval: ChartingLibraryWidgetOptions['interval'];\n  auto_save_delay: ChartingLibraryWidgetOptions['auto_save_delay'];\n\n  // BEWARE: no trailing slash is expected in feed URL\n  // datafeed: any;\n  datafeedUrl: string;\n  libraryPath: ChartingLibraryWidgetOptions['library_path'];\n  chartsStorageUrl: ChartingLibraryWidgetOptions['charts_storage_url'];\n  chartsStorageApiVersion: ChartingLibraryWidgetOptions['charts_storage_api_version'];\n  clientId: ChartingLibraryWidgetOptions['client_id'];\n  userId: ChartingLibraryWidgetOptions['user_id'];\n  fullscreen: ChartingLibraryWidgetOptions['fullscreen'];\n  autosize: ChartingLibraryWidgetOptions['autosize'];\n  studiesOverrides: ChartingLibraryWidgetOptions['studies_overrides'];\n  containerId: ChartingLibraryWidgetOptions['container_id'];\n  theme: string;\n}\n\nexport interface ChartContainerState {}\n\nexport const TVChartContainer = () => {\n  // let datafeed = useTvDataFeed();\n  const defaultProps: ChartContainerProps = {\n    symbol: 'BTC/USDC',\n    // @ts-ignore\n    interval: '60',\n    auto_save_delay: 5,\n    theme: 'Dark',\n    containerId: 'tv_chart_container',\n    // datafeed: datafeed,\n    libraryPath: '/charting_library/',\n    chartsStorageApiVersion: '1.1',\n    clientId: 'tradingview.com',\n    userId: 'public_user_id',\n    fullscreen: false,\n    autosize: true,\n    datafeedUrl: BONFIDA_DATA_FEED,\n    studiesOverrides: {},\n  };\n\n  const tvWidgetRef = React.useRef<IChartingLibraryWidget | null>(null);\n  const { market } = useMarket();\n\n  const chartProperties = JSON.parse(\n    localStorage.getItem('chartproperties') || '{}',\n  );\n\n  React.useEffect(() => {\n    const savedProperties = flatten(chartProperties, {\n      restrictTo: ['scalesProperties', 'paneProperties', 'tradingProperties'],\n    });\n\n    const widgetOptions: ChartingLibraryWidgetOptions = {\n      symbol:\n        USE_MARKETS.find(\n          (m) => m.address.toBase58() === market?.publicKey.toBase58(),\n        )?.name || 'SRM/USDC',\n      // BEWARE: no trailing slash is expected in feed URL\n      // tslint:disable-next-line:no-any\n      // @ts-ignore\n      // datafeed: datafeed,\n      // @ts-ignore\n      datafeed: new (window as any).Datafeeds.UDFCompatibleDatafeed(\n        defaultProps.datafeedUrl,\n      ),\n      interval: defaultProps.interval as ChartingLibraryWidgetOptions['interval'],\n      container_id: defaultProps.containerId as ChartingLibraryWidgetOptions['container_id'],\n      library_path: defaultProps.libraryPath as string,\n      auto_save_delay: 5,\n\n      locale: 'en',\n      disabled_features: ['use_localstorage_for_settings'],\n      enabled_features: ['study_templates'],\n      load_last_chart: true,\n      client_id: defaultProps.clientId,\n      user_id: defaultProps.userId,\n      fullscreen: defaultProps.fullscreen,\n      autosize: defaultProps.autosize,\n      studies_overrides: defaultProps.studiesOverrides,\n      theme: defaultProps.theme === 'Dark' ? 'Dark' : 'Light',\n      overrides: {\n        ...savedProperties,\n        'mainSeriesProperties.candleStyle.upColor': '#41C77A',\n        'mainSeriesProperties.candleStyle.downColor': '#F23B69',\n        'mainSeriesProperties.candleStyle.borderUpColor': '#41C77A',\n        'mainSeriesProperties.candleStyle.borderDownColor': '#F23B69',\n        'mainSeriesProperties.candleStyle.wickUpColor': '#41C77A',\n        'mainSeriesProperties.candleStyle.wickDownColor': '#F23B69',\n      },\n      // @ts-ignore\n      save_load_adapter: saveLoadAdapter,\n      settings_adapter: {\n        initialSettings: {\n          'trading.orderPanelSettingsBroker': JSON.stringify({\n            showRelativePriceControl: false,\n            showCurrencyRiskInQty: false,\n            showPercentRiskInQty: false,\n            showBracketsInCurrency: false,\n            showBracketsInPercent: false,\n          }),\n          // \"proterty\"\n          'trading.chart.proterty':\n            localStorage.getItem('trading.chart.proterty') ||\n            JSON.stringify({\n              hideFloatingPanel: 1,\n            }),\n          'chart.favoriteDrawings':\n            localStorage.getItem('chart.favoriteDrawings') ||\n            JSON.stringify([]),\n          'chart.favoriteDrawingsPosition':\n            localStorage.getItem('chart.favoriteDrawingsPosition') ||\n            JSON.stringify({}),\n        },\n        setValue: (key, value) => {\n          localStorage.setItem(key, value);\n        },\n        removeValue: (key) => {\n          localStorage.removeItem(key);\n        },\n      },\n    };\n\n    const tvWidget = new widget(widgetOptions);\n\n    tvWidget.onChartReady(() => {\n      tvWidgetRef.current = tvWidget;\n      tvWidget\n        // @ts-ignore\n        .subscribe('onAutoSaveNeeded', () => tvWidget.saveChartToServer());\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [market, tvWidgetRef.current]);\n\n  return <div id={defaultProps.containerId} className={'TVChartContainer'} />;\n};\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Button, Col, Popover, Row, Select, Typography } from 'antd';\nimport styled from 'styled-components';\nimport Orderbook from '../components/Orderbook';\nimport UserInfoTable from '../components/UserInfoTable';\nimport StandaloneBalancesDisplay from '../components/StandaloneBalancesDisplay';\nimport {\n  getMarketInfos,\n  getTradePageUrl,\n  MarketProvider,\n  useMarket,\n  useMarketsList,\n  useUnmigratedDeprecatedMarkets,\n} from '../utils/markets';\nimport TradeForm from '../components/TradeForm';\nimport TradesTable from '../components/TradesTable';\nimport LinkAddress from '../components/LinkAddress';\nimport DeprecatedMarketsInstructions from '../components/DeprecatedMarketsInstructions';\nimport {\n  DeleteOutlined,\n  InfoCircleOutlined,\n  PlusCircleOutlined,\n} from '@ant-design/icons';\nimport CustomMarketDialog from '../components/CustomMarketDialog';\nimport { notify } from '../utils/notifications';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\n\nimport { TVChartContainer } from '../components/TradingView';\n// Use following stub for quick setup without the TradingView private dependency\n// function TVChartContainer() {\n//   return <></>\n// }\n\nconst { Option, OptGroup } = Select;\n\nconst Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 16px 16px;\n  .borderNone .ant-select-selector {\n    border: none !important;\n  }\n`;\n\nexport default function TradePage() {\n  const { marketAddress } = useParams();\n  useEffect(() => {\n    if (marketAddress) {\n      localStorage.setItem('marketAddress', JSON.stringify(marketAddress));\n    }\n  }, [marketAddress]);\n  const history = useHistory();\n  function setMarketAddress(address) {\n    history.push(getTradePageUrl(address));\n  }\n\n  return (\n    <MarketProvider\n      marketAddress={marketAddress}\n      setMarketAddress={setMarketAddress}\n    >\n      <TradePageInner />\n    </MarketProvider>\n  );\n}\n\nfunction TradePageInner() {\n  const {\n    market,\n    marketName,\n    customMarkets,\n    setCustomMarkets,\n    setMarketAddress,\n  } = useMarket();\n  const markets = useMarketsList();\n  const [handleDeprecated, setHandleDeprecated] = useState(false);\n  const [addMarketVisible, setAddMarketVisible] = useState(false);\n  const deprecatedMarkets = useUnmigratedDeprecatedMarkets();\n  const [dimensions, setDimensions] = useState({\n    height: window.innerHeight,\n    width: window.innerWidth,\n  });\n\n  useEffect(() => {\n    document.title = marketName ? `${marketName} — Serum` : 'Serum';\n  }, [marketName]);\n\n  const changeOrderRef = useRef<\n    ({ size, price }: { size?: number; price?: number }) => void\n  >();\n\n  useEffect(() => {\n    const handleResize = () => {\n      setDimensions({\n        height: window.innerHeight,\n        width: window.innerWidth,\n      });\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const width = dimensions?.width;\n  const componentProps = {\n    onChangeOrderRef: (ref) => (changeOrderRef.current = ref),\n    onPrice: useCallback(\n      (price) => changeOrderRef.current && changeOrderRef.current({ price }),\n      [],\n    ),\n    onSize: useCallback(\n      (size) => changeOrderRef.current && changeOrderRef.current({ size }),\n      [],\n    ),\n  };\n  const component = (() => {\n    if (handleDeprecated) {\n      return (\n        <DeprecatedMarketsPage\n          switchToLiveMarkets={() => setHandleDeprecated(false)}\n        />\n      );\n    } else if (width < 1000) {\n      return <RenderSmaller {...componentProps} />;\n    } else if (width < 1450) {\n      return <RenderSmall {...componentProps} />;\n    } else {\n      return <RenderNormal {...componentProps} />;\n    }\n  })();\n\n  const onAddCustomMarket = (customMarket) => {\n    const marketInfo = getMarketInfos(customMarkets).some(\n      (m) => m.address.toBase58() === customMarket.address,\n    );\n    if (marketInfo) {\n      notify({\n        message: `A market with the given ID already exists`,\n        type: 'error',\n      });\n      return;\n    }\n    const newCustomMarkets = [...customMarkets, customMarket];\n    setCustomMarkets(newCustomMarkets);\n    setMarketAddress(customMarket.address);\n  };\n\n  const onDeleteCustomMarket = (address) => {\n    const newCustomMarkets = customMarkets.filter((m) => m.address !== address);\n    setCustomMarkets(newCustomMarkets);\n  };\n\n  return (\n    <>\n      <CustomMarketDialog\n        visible={addMarketVisible}\n        onClose={() => setAddMarketVisible(false)}\n        onAddCustomMarket={onAddCustomMarket}\n      />\n      <Wrapper>\n        <Row\n          align=\"middle\"\n          style={{ paddingLeft: 5, paddingRight: 5 }}\n          gutter={16}\n        >\n          <Col>\n            <MarketSelector\n              markets={markets}\n              setHandleDeprecated={setHandleDeprecated}\n              placeholder={'Select market'}\n              customMarkets={customMarkets}\n              onDeleteCustomMarket={onDeleteCustomMarket}\n            />\n          </Col>\n          {market ? (\n            <Col>\n              <Popover\n                content={<LinkAddress address={market.publicKey.toBase58()} />}\n                placement=\"bottomRight\"\n                title=\"Market address\"\n                trigger=\"click\"\n              >\n                <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n              </Popover>\n            </Col>\n          ) : null}\n          <Col>\n            <PlusCircleOutlined\n              style={{ color: '#2abdd2' }}\n              onClick={() => setAddMarketVisible(true)}\n            />\n          </Col>\n          {deprecatedMarkets && deprecatedMarkets.length > 0 && (\n            <React.Fragment>\n              <Col>\n                <Typography>\n                  You have unsettled funds on old markets! Please go through\n                  them to claim your funds.\n                </Typography>\n              </Col>\n              <Col>\n                <Button onClick={() => setHandleDeprecated(!handleDeprecated)}>\n                  {handleDeprecated ? 'View new markets' : 'Handle old markets'}\n                </Button>\n              </Col>\n            </React.Fragment>\n          )}\n        </Row>\n        {component}\n      </Wrapper>\n    </>\n  );\n}\n\nfunction MarketSelector({\n  markets,\n  placeholder,\n  setHandleDeprecated,\n  customMarkets,\n  onDeleteCustomMarket,\n}) {\n  const { market, setMarketAddress } = useMarket();\n\n  const onSetMarketAddress = (marketAddress) => {\n    setHandleDeprecated(false);\n    setMarketAddress(marketAddress);\n  };\n\n  const extractBase = (a) => a.split('/')[0];\n  const extractQuote = (a) => a.split('/')[1];\n\n  const selectedMarket = getMarketInfos(customMarkets)\n    .find(\n      (proposedMarket) =>\n        market?.address && proposedMarket.address.equals(market.address),\n    )\n    ?.address?.toBase58();\n\n  return (\n    <Select\n      showSearch\n      size={'large'}\n      style={{ width: 200 }}\n      placeholder={placeholder || 'Select a market'}\n      optionFilterProp=\"name\"\n      onSelect={onSetMarketAddress}\n      listHeight={400}\n      value={selectedMarket}\n      filterOption={(input, option) =>\n        option?.name?.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      }\n    >\n      {customMarkets && customMarkets.length > 0 && (\n        <OptGroup label=\"Custom\">\n          {customMarkets.map(({ address, name }, i) => (\n            <Option\n              value={address}\n              key={nanoid()}\n              name={name}\n              style={{\n                padding: '10px',\n                // @ts-ignore\n                backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\n              }}\n            >\n              <Row>\n                <Col flex=\"auto\">{name}</Col>\n                {selectedMarket !== address && (\n                  <Col>\n                    <DeleteOutlined\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        e.nativeEvent.stopImmediatePropagation();\n                        onDeleteCustomMarket && onDeleteCustomMarket(address);\n                      }}\n                    />\n                  </Col>\n                )}\n              </Row>\n            </Option>\n          ))}\n        </OptGroup>\n      )}\n      <OptGroup label=\"Markets\">\n        {markets\n          .sort((a, b) =>\n            extractQuote(a.name) === 'USDT' && extractQuote(b.name) !== 'USDT'\n              ? -1\n              : extractQuote(a.name) !== 'USDT' &&\n                extractQuote(b.name) === 'USDT'\n              ? 1\n              : 0,\n          )\n          .sort((a, b) =>\n            extractBase(a.name) < extractBase(b.name)\n              ? -1\n              : extractBase(a.name) > extractBase(b.name)\n              ? 1\n              : 0,\n          )\n          .map(({ address, name, deprecated }, i) => (\n            <Option\n              value={address.toBase58()}\n              key={nanoid()}\n              name={name}\n              style={{\n                padding: '10px',\n                // @ts-ignore\n                backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\n              }}\n            >\n              {name} {deprecated ? ' (Deprecated)' : null}\n            </Option>\n          ))}\n      </OptGroup>\n    </Select>\n  );\n}\n\nconst DeprecatedMarketsPage = ({ switchToLiveMarkets }) => {\n  return (\n    <>\n      <Row>\n        <Col flex=\"auto\">\n          <DeprecatedMarketsInstructions\n            switchToLiveMarkets={switchToLiveMarkets}\n          />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst RenderNormal = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <Row\n      style={{\n        minHeight: '900px',\n        flexWrap: 'nowrap',\n      }}\n    >\n      <Col flex=\"auto\" style={{ height: '50vh' }}>\n        <Row style={{ height: '100%' }}>\n          <TVChartContainer />\n        </Row>\n        <Row style={{ height: '70%' }}>\n          <UserInfoTable />\n        </Row>\n      </Col>\n      <Col flex={'360px'} style={{ height: '100%' }}>\n        <Orderbook smallScreen={false} onPrice={onPrice} onSize={onSize} />\n        <TradesTable smallScreen={false} />\n      </Col>\n      <Col\n        flex=\"400px\"\n        style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n      >\n        <TradeForm setChangeOrderRef={onChangeOrderRef} />\n        <StandaloneBalancesDisplay />\n      </Col>\n    </Row>\n  );\n};\n\nconst RenderSmall = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <>\n      <Row style={{ height: '30vh' }}>\n        <TVChartContainer />\n      </Row>\n      <Row\n        style={{\n          height: '900px',\n        }}\n      >\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n          <Orderbook\n            smallScreen={true}\n            depth={13}\n            onPrice={onPrice}\n            onSize={onSize}\n          />\n        </Col>\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n          <TradesTable smallScreen={true} />\n        </Col>\n        <Col\n          flex=\"400px\"\n          style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n        >\n          <TradeForm setChangeOrderRef={onChangeOrderRef} />\n          <StandaloneBalancesDisplay />\n        </Col>\n      </Row>\n      <Row>\n        <Col flex=\"auto\">\n          <UserInfoTable />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst RenderSmaller = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <>\n      <Row style={{ height: '50vh' }}>\n        <TVChartContainer />\n      </Row>\n      <Row>\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <TradeForm style={{ flex: 1 }} setChangeOrderRef={onChangeOrderRef} />\n        </Col>\n        <Col xs={24} sm={12}>\n          <StandaloneBalancesDisplay />\n        </Col>\n      </Row>\n      <Row\n        style={{\n          height: '500px',\n        }}\n      >\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <Orderbook smallScreen={true} onPrice={onPrice} onSize={onSize} />\n        </Col>\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <TradesTable smallScreen={true} />\n        </Col>\n      </Row>\n      <Row>\n        <Col flex=\"auto\">\n          <UserInfoTable />\n        </Col>\n      </Row>\n    </>\n  );\n};\n","import React from 'react';\nimport { Dropdown, Menu } from 'antd';\nimport { useWallet } from '../utils/wallet';\nimport LinkAddress from './LinkAddress';\n\nexport default function WalletConnect() {\n  const { connected, wallet, select, connect, disconnect } = useWallet();\n  const publicKey = (connected && wallet?.publicKey?.toBase58()) || '';\n\n  const menu = (\n    <Menu>\n      {connected && <LinkAddress shorten={true} address={publicKey} />}\n      <Menu.Item key=\"3\" onClick={select}>\n        Change Wallet\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <Dropdown.Button onClick={connected ? disconnect : connect} overlay={menu}>\n      {connected ? 'Disconnect' : 'Connect'}\n    </Dropdown.Button>\n  );\n}\n","import React from 'react';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport {\n  useAllMarkets,\n  useAllOpenOrders,\n  useMarketInfos,\n} from '../utils/markets';\nimport OpenOrderTable from '../components/UserInfoTable/OpenOrderTable';\nimport { Button, Row } from 'antd';\nimport { OrderWithMarketAndMarketName } from '../utils/types';\nimport { useWallet } from '../utils/wallet';\nimport WalletConnect from '../components/WalletConnect';\n\nexport default function OpenOrdersPage() {\n  const { connected } = useWallet();\n  const { openOrders, loaded, refreshOpenOrders } = useAllOpenOrders();\n  let marketInfos = useMarketInfos();\n  let marketAddressesToNames = Object.fromEntries(\n    marketInfos.map((info) => [info.address.toBase58(), info.name]),\n  );\n  let [allMarkets] = useAllMarkets();\n  const marketsByAddress = Object.fromEntries(\n    (allMarkets || []).map((marketInfo) => [\n      marketInfo.market.address.toBase58(),\n      marketInfo.market,\n    ]),\n  );\n\n  const dataSource: OrderWithMarketAndMarketName[] = (openOrders || [])\n    .map((orderInfos) =>\n      orderInfos.orders.map((order) => {\n        return {\n          marketName: marketAddressesToNames[orderInfos.marketAddress],\n          market: marketsByAddress[orderInfos.marketAddress],\n          ...order,\n        };\n      }),\n    )\n    .flat();\n\n  if (!connected) {\n    return (\n      <Row\n        justify=\"center\"\n        style={{\n          marginTop: '10%',\n        }}\n      >\n        <WalletConnect />\n      </Row>\n    );\n  }\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <Button onClick={refreshOpenOrders} loading={!loaded}>\n        Refresh\n      </Button>\n      <OpenOrderTable\n        openOrders={dataSource}\n        pageSize={25}\n        loading={!loaded}\n        onCancelSuccess={refreshOpenOrders}\n        marketFilter\n      />\n    </FloatingElement>\n  );\n}\n","import React, { useState } from 'react';\nimport DataTable from '../layout/DataTable';\nimport { Button, Row } from 'antd';\nimport { settleAllFunds } from '../../utils/send';\nimport { notify } from '../../utils/notifications';\nimport { useConnection } from '../../utils/connection';\nimport { useWallet } from '../../utils/wallet';\nimport {\n  useAllMarkets,\n  useSelectedTokenAccounts,\n  useTokenAccounts,\n} from '../../utils/markets';\nimport StandaloneTokenAccountsSelect from '../StandaloneTokenAccountSelect';\nimport { abbreviateAddress } from '../../utils/utils';\nimport { PublicKey } from '@solana/web3.js';\n\nexport default function WalletBalancesTable({\n  walletBalances,\n}: {\n  walletBalances: {\n    coin: string;\n    mint: string;\n    walletBalance: number;\n    openOrdersFree: number;\n    openOrdersTotal: number;\n  }[];\n}) {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n  const [tokenAccounts, tokenAccountsConnected] = useTokenAccounts();\n  const [allMarkets, allMarketsConnected] = useAllMarkets();\n  const [settlingFunds, setSettlingFunds] = useState(false);\n\n  async function onSettleFunds() {\n    setSettlingFunds(true);\n    try {\n      if (!wallet) {\n        notify({\n          message: 'Wallet not connected',\n          description: 'Wallet not connected',\n          type: 'error',\n        });\n        return;\n      }\n\n      if (!tokenAccounts || !tokenAccountsConnected) {\n        notify({\n          message: 'Error settling funds',\n          description: 'TokenAccounts not connected',\n          type: 'error',\n        });\n        return;\n      }\n      if (!allMarkets || !allMarketsConnected) {\n        notify({\n          message: 'Error settling funds',\n          description: 'Markets not connected',\n          type: 'error',\n        });\n        return;\n      }\n      await settleAllFunds({\n        connection,\n        tokenAccounts,\n        selectedTokenAccounts,\n        wallet,\n        markets: allMarkets.map((marketInfo) => marketInfo.market),\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSettlingFunds(false);\n    }\n  }\n\n  const columns = [\n    {\n      title: 'Coin',\n      key: 'coin',\n      width: '20%',\n      render: (walletBalance) => (\n        <Row align=\"middle\">\n          <a\n            href={`https://solscan.io/address/${walletBalance.mint}`}\n            target={'_blank'}\n            rel=\"noopener noreferrer\"\n          >\n            {walletBalance.coin ||\n              abbreviateAddress(new PublicKey(walletBalance.mint))}\n          </a>\n        </Row>\n      ),\n    },\n    {\n      title: 'Wallet Balance',\n      dataIndex: 'walletBalance',\n      key: 'walletBalance',\n      width: '20%',\n    },\n    {\n      title: 'Open orders total balances',\n      dataIndex: 'openOrdersTotal',\n      key: 'openOrdersTotal',\n      width: '20%',\n    },\n    {\n      title: 'Unsettled balances',\n      dataIndex: 'openOrdersFree',\n      key: 'openOrdersFree',\n      width: '20%',\n    },\n    {\n      title: 'Selected token account',\n      key: 'selectTokenAccount',\n      width: '20%',\n      render: (walletBalance) => (\n        <Row align=\"middle\" style={{ width: '430px' }}>\n          <StandaloneTokenAccountsSelect\n            accounts={tokenAccounts?.filter(\n              (t) => t.effectiveMint.toBase58() === walletBalance.mint,\n            )}\n            mint={walletBalance.mint}\n          />\n        </Row>\n      ),\n    },\n  ];\n  return (\n    <React.Fragment>\n      <DataTable\n        emptyLabel=\"No balances\"\n        dataSource={walletBalances}\n        columns={columns}\n        pagination={false}\n      />\n      {connected && (\n        <Button onClick={onSettleFunds} loading={settlingFunds}>\n          Settle all funds\n        </Button>\n      )}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { Tabs } from 'antd';\nimport {\n  useAllOpenOrdersBalances,\n  useWalletBalancesForAllMarkets,\n} from '../utils/markets';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport WalletBalancesTable from '../components/UserInfoTable/WalletBalancesTable';\nimport { useMintToTickers } from '../utils/tokens';\n\nconst { TabPane } = Tabs;\n\nexport default function BalancesPage() {\n  const walletBalances = useWalletBalancesForAllMarkets();\n  const mintToTickers = useMintToTickers();\n  const openOrdersBalances = useAllOpenOrdersBalances();\n\n  const data = (walletBalances || []).map((balance) => {\n    const balances = {\n      coin: mintToTickers[balance.mint],\n      mint: balance.mint,\n      walletBalance: balance.balance,\n      openOrdersFree: 0,\n      openOrdersTotal: 0,\n    };\n    for (let openOrdersAccount of openOrdersBalances[balance.mint] || []) {\n      balances['openOrdersFree'] += openOrdersAccount.free;\n      balances['openOrdersTotal'] += openOrdersAccount.total;\n    }\n    return balances;\n  });\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <Tabs defaultActiveKey=\"walletBalances\">\n        <TabPane tab=\"Wallet Balances\" key=\"walletBalances\">\n          <WalletBalancesTable walletBalances={data} />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Button, Col, Input, Row, Select, Typography } from 'antd';\nimport styled from 'styled-components';\nimport { Orderbook } from '@project-serum/serum';\nimport {\n  getExpectedFillPrice,\n  getMarketDetails,\n  getMarketInfos,\n  getMarketOrderPrice,\n  getSelectedTokenAccountForMint,\n  MarketProvider,\n  useBalances,\n  useCustomMarkets,\n  useLocallyStoredFeeDiscountKey,\n  useMarket,\n  useTokenAccounts,\n} from '../utils/markets';\nimport { notify } from '../utils/notifications';\nimport { useWallet } from '../utils/wallet';\nimport { useConnection, useSendConnection } from '../utils/connection';\nimport { placeOrder } from '../utils/send';\nimport { floorToDecimal, getDecimalCount } from '../utils/utils';\nimport FloatingElement from './layout/FloatingElement';\nimport WalletConnect from './WalletConnect';\nimport { SwapOutlined } from '@ant-design/icons';\nimport { CustomMarketInfo } from '../utils/types';\nimport { WalletAdapter } from '../wallet-adapters';\n\nconst { Option } = Select;\nconst { Title } = Typography;\n\nconst ActionButton = styled(Button)`\n  color: #2abdd2;\n  background-color: #212734;\n  border-width: 0px;\n`;\n\nconst ConvertButton = styled(Button)`\n  background: #02bf76;\n  border-color: #02bf76;\n`;\n\nexport default function ConvertForm() {\n  const { connected, wallet } = useWallet();\n  const { customMarkets } = useCustomMarkets();\n  const marketInfos = getMarketInfos(customMarkets);\n  const [marketAddress, setMarketAddress] = useState<string | null>(null);\n\n  const [fromToken, setFromToken] = useState<string | undefined>(undefined);\n  const [toToken, setToToken] = useState<string | undefined>(undefined);\n  const [size, setSize] = useState<number | undefined>(undefined);\n\n  const marketInfosbyName = Object.fromEntries(\n    marketInfos.map((market) => [market.name, market]),\n  );\n\n  const tokenConvertMap: Map<string, Set<string>> = new Map();\n  Object.keys(marketInfosbyName).forEach((market) => {\n    let [base, quote] = market.split('/');\n    !tokenConvertMap.has(base)\n      ? tokenConvertMap.set(base, new Set([quote]))\n      : tokenConvertMap.set(\n          base,\n          new Set([...(tokenConvertMap.get(base) || []), quote]),\n        );\n    !tokenConvertMap.has(quote)\n      ? tokenConvertMap.set(quote, new Set([base]))\n      : tokenConvertMap.set(\n          quote,\n          new Set([...(tokenConvertMap.get(quote) || []), base]),\n        );\n  });\n\n  const setMarket = (toToken) => {\n    const marketInfo = marketInfos\n      .filter((marketInfo) => !marketInfo.deprecated)\n      .find(\n        (marketInfo) =>\n          marketInfo.name === `${fromToken}/${toToken}` ||\n          marketInfo.name === `${toToken}/${fromToken}`,\n      );\n    if (!marketInfo) {\n      console.warn(\n        `Could not find market info for market names ${fromToken}/${toToken} or ${toToken}/${fromToken}`,\n      );\n      notify({\n        message: 'Invalid market',\n        type: 'error',\n      });\n      return;\n    }\n    setMarketAddress(marketInfo.address.toBase58());\n    setToToken(toToken);\n  };\n\n  return (\n    <FloatingElement style={{ maxWidth: 500 }}>\n      <Title level={3}>Convert</Title>\n      {!connected && (\n        <Row justify=\"center\">\n          <Col>\n            <WalletConnect />\n          </Col>\n        </Row>\n      )}\n      {tokenConvertMap && connected && (\n        <>\n          <Row style={{ marginBottom: 8 }}>\n            <Col>\n              <Select\n                style={{ minWidth: 300 }}\n                placeholder=\"Select a token\"\n                value={fromToken}\n                onChange={(token) => {\n                  setFromToken(token);\n                  setToToken(undefined);\n                }}\n              >\n                {Array.from(tokenConvertMap.keys()).map((token) => (\n                  <Option value={token} key={token}>\n                    {token}\n                  </Option>\n                ))}\n              </Select>\n            </Col>\n          </Row>\n          {fromToken && (\n            <Row style={{ marginBottom: 8 }}>\n              <Col>\n                <Select\n                  style={{ minWidth: 300 }}\n                  value={toToken}\n                  onChange={setMarket}\n                >\n                  {[...(tokenConvertMap.get(fromToken) || [])].map((token) => (\n                    <Option value={token} key={token}>\n                      {token}\n                    </Option>\n                  ))}\n                </Select>\n              </Col>\n            </Row>\n          )}\n          {fromToken && toToken && (\n            <MarketProvider\n              marketAddress={marketAddress}\n              setMarketAddress={setMarketAddress}\n            >\n              <ConvertFormSubmit\n                size={size}\n                setSize={setSize}\n                fromToken={fromToken}\n                toToken={toToken}\n                wallet={wallet}\n                customMarkets={customMarkets}\n              />\n            </MarketProvider>\n          )}\n        </>\n      )}\n    </FloatingElement>\n  );\n}\n\nfunction ConvertFormSubmit({\n  size,\n  setSize,\n  fromToken,\n  toToken,\n  wallet,\n  customMarkets,\n}: {\n  size: number | null | undefined;\n  setSize: (newSize: number | undefined) => void;\n  fromToken: string;\n  toToken: string;\n  wallet?: WalletAdapter;\n  customMarkets: CustomMarketInfo[];\n}) {\n  const { market } = useMarket();\n  const [accounts] = useTokenAccounts();\n  const balances = useBalances();\n  const [fromAmount, setFromAmount] = useState<number | undefined>();\n  const [toAmount, setToAmount] = useState<number | undefined>();\n  const {\n    storedFeeDiscountKey: feeDiscountKey,\n  } = useLocallyStoredFeeDiscountKey();\n\n  const connection = useConnection();\n  const sendConnection = useSendConnection();\n\n  const [isConverting, setIsConverting] = useState(false);\n\n  const isFromTokenBaseOfMarket = (market) => {\n    const { marketName } = getMarketDetails(market, customMarkets);\n    if (!marketName) {\n      throw Error(\n        'Cannot determine if coin is quote or base because marketName is missing',\n      );\n    }\n    const [base] = marketName.split('/');\n    return fromToken === base;\n  };\n\n  const onConvert = async () => {\n    if (!market) {\n      console.warn('Market is null when attempting convert.');\n      notify({\n        message: 'Invalid market',\n        type: 'error',\n      });\n      return;\n    }\n    // get accounts\n    const baseCurrencyAccount = getSelectedTokenAccountForMint(\n      accounts,\n      market?.baseMintAddress,\n    );\n    const quoteCurrencyAccount = getSelectedTokenAccountForMint(\n      accounts,\n      market?.quoteMintAddress,\n    );\n\n    // get approximate price\n    let side;\n    try {\n      side = isFromTokenBaseOfMarket(market) ? 'sell' : 'buy';\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error placing order',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    }\n\n    const sidedOrderbookAccount =\n      // @ts-ignore\n      side === 'buy' ? market._decoded.asks : market._decoded.bids;\n    const orderbookData = await connection.getAccountInfo(\n      sidedOrderbookAccount,\n    );\n    if (!orderbookData?.data) {\n      notify({ message: 'Invalid orderbook data', type: 'error' });\n      return;\n    }\n    const decodedOrderbookData = Orderbook.decode(market, orderbookData.data);\n    const [bbo] =\n      decodedOrderbookData &&\n      decodedOrderbookData.getL2(1).map(([price]) => price);\n    if (!bbo) {\n      notify({ message: 'No best price found', type: 'error' });\n      return;\n    }\n    if (!size) {\n      notify({ message: 'Size not specified', type: 'error' });\n      return;\n    }\n\n    const tickSizeDecimals = getDecimalCount(market.tickSize);\n    const parsedPrice = getMarketOrderPrice(\n      decodedOrderbookData,\n      size,\n      tickSizeDecimals,\n    );\n\n    // round size\n    const sizeDecimalCount = getDecimalCount(market.minOrderSize);\n    const nativeSize = side === 'sell' ? size : size / parsedPrice;\n    const parsedSize = floorToDecimal(nativeSize, sizeDecimalCount);\n\n    setIsConverting(true);\n    try {\n      if (!wallet) {\n        return null;\n      }\n\n      await placeOrder({\n        side,\n        price: parsedPrice,\n        size: parsedSize,\n        orderType: 'ioc',\n        market,\n        connection: sendConnection,\n        wallet,\n        baseCurrencyAccount: baseCurrencyAccount?.pubkey,\n        quoteCurrencyAccount: quoteCurrencyAccount?.pubkey,\n        feeDiscountPubkey: feeDiscountKey,\n      });\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error placing order',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setIsConverting(false);\n    }\n  };\n\n  const getPrice = async () => {\n    try {\n      const side = isFromTokenBaseOfMarket(market) ? 'sell' : 'buy';\n      const sidedOrderbookAccount =\n        // @ts-ignore\n        side === 'buy' ? market._decoded.asks : market._decoded.bids;\n      const orderbookData = await connection.getAccountInfo(\n        sidedOrderbookAccount,\n      );\n      if (!orderbookData?.data || !market) {\n        return [null, null];\n      }\n      const decodedOrderbookData = Orderbook.decode(market, orderbookData.data);\n      const [bbo] =\n        decodedOrderbookData &&\n        decodedOrderbookData.getL2(1).map(([price]) => price);\n      if (!bbo || !size) {\n        return [null, null];\n      }\n      const tickSizeDecimals = getDecimalCount(market.tickSize);\n      const expectedPrice = getExpectedFillPrice(\n        decodedOrderbookData,\n        size,\n        tickSizeDecimals,\n      );\n      if (side === 'buy') {\n        return [expectedPrice.toFixed(6), 1];\n      } else {\n        return [1, expectedPrice.toFixed(6)];\n      }\n    } catch (e) {\n      console.log(`Got error ${e}`);\n      return [null, null];\n    }\n  };\n\n  useEffect(\n    () => {\n      getPrice().then(([fromAmount, toAmount]) => {\n        setFromAmount(fromAmount || undefined);\n        setToAmount(toAmount || undefined);\n      });\n    },\n    // eslint-disable-next-line\n    [market?.address.toBase58(), size],\n  );\n\n  const canConvert = market && size && size > 0;\n  const balance = balances.find(\n    (coinBalance) => coinBalance.coin === fromToken,\n  );\n  const availableBalance =\n    ((balance?.unsettled || 0) + (balance?.wallet || 0)) * 0.99;\n\n  return (\n    <React.Fragment>\n      <Row style={{ marginBottom: 8 }}>\n        <Col>\n          <Input\n            style={{ minWidth: 300 }}\n            addonBefore={`Size (${fromToken})`}\n            placeholder=\"Size\"\n            value={size === null ? undefined : size}\n            type=\"number\"\n            onChange={(e) => setSize(parseFloat(e.target.value) || undefined)}\n          />\n        </Col>\n      </Row>\n      <Row gutter={12} style={{ marginBottom: 8 }}>\n        <Col span={12}>\n          <ActionButton\n            block\n            size=\"large\"\n            onClick={() => setSize(floorToDecimal(availableBalance, 4))}\n          >\n            Max: {availableBalance.toFixed(4)}\n          </ActionButton>\n        </Col>\n        <Col span={12}>\n          <ConvertButton\n            block\n            type=\"primary\"\n            size=\"large\"\n            loading={isConverting}\n            onClick={onConvert}\n            disabled={!canConvert}\n          >\n            Convert\n          </ConvertButton>\n        </Col>\n      </Row>\n      {canConvert && (\n        <Row align=\"middle\" justify=\"center\">\n          <Col>\n            {fromAmount} {fromToken}\n          </Col>\n          <Col offset={1}>\n            <SwapOutlined />\n          </Col>\n          <Col offset={1}>\n            {toAmount} {toToken}\n          </Col>\n        </Row>\n      )}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport ConvertForm from '../components/ConvertForm';\nimport { Row, Col } from 'antd';\nimport { DEFAULT_MARKET, MarketProvider } from '../utils/markets';\nimport { useLocalStorageState } from '../utils/utils';\n\nconst Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 16px 16px;\n  .borderNone .ant-select-selector {\n    border: none !important;\n  }\n`;\n\nexport default function ConvertPage() {\n  const [marketAddress, setMarketAddress] = useLocalStorageState(\n    'marketAddress',\n    DEFAULT_MARKET?.address.toBase58(),\n  );\n  return (\n    <Wrapper style={{ flex: 1, paddingTop: 10 }}>\n      <Row justify=\"center\">\n        <Col>\n          <MarketProvider\n            marketAddress={marketAddress}\n            setMarketAddress={setMarketAddress}\n          >\n            <ConvertForm />\n          </MarketProvider>\n        </Col>\n      </Row>\n    </Wrapper>\n  );\n}\n","import React from 'react';\nimport { Switch, Typography } from 'antd';\nimport { usePreferences } from '../utils/preferences';\n\nconst { Paragraph } = Typography;\n\nexport default function Settings({ autoApprove }) {\n  const { autoSettleEnabled, setAutoSettleEnabled } = usePreferences();\n\n  return (\n    <div>\n      <Switch\n        style={{ marginRight: 10 }}\n        disabled={!autoApprove}\n        checked={autoApprove && autoSettleEnabled}\n        onChange={setAutoSettleEnabled}\n      />{' '}\n      Auto settle\n      {!autoApprove && (\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)', marginTop: 10 }}>\n          To use auto settle, first enable auto approval in your wallet\n        </Paragraph>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { Col, Input, Modal, Row } from 'antd';\nimport { EndpointInfo } from '../utils/types';\n\nexport default function CustomClusterEndpointDialog({\n  visible,\n  testingConnection,\n  onAddCustomEndpoint,\n  onClose,\n}: {\n  visible: boolean;\n  testingConnection: boolean;\n  onAddCustomEndpoint: (info: EndpointInfo) => void;\n  onClose?: () => void;\n}) {\n  const [customEndpoint, setCustomEndpoint] = useState('');\n  const [customEndpointName, setCustomEndpointName] = useState('');\n\n  const onSubmit = () => {\n    const fullEndpoint = 'https://' + customEndpoint;\n    const params = {\n      name: customEndpointName,\n      endpoint: fullEndpoint,\n      custom: true,\n    };\n    onAddCustomEndpoint(params);\n    onDoClose();\n  };\n  const onDoClose = () => {\n    setCustomEndpoint('');\n    setCustomEndpointName('');\n    onClose && onClose();\n  };\n  const canSubmit = customEndpoint !== '' && customEndpointName !== '';\n\n  return (\n    <Modal\n      title={'Add custom endpoint'}\n      visible={visible}\n      onOk={onSubmit}\n      okText={'Add'}\n      onCancel={onDoClose}\n      okButtonProps={{ disabled: !canSubmit, loading: testingConnection }}\n    >\n      <Row style={{ marginBottom: 8 }}>\n        <Col span={24}>\n          <Input\n            placeholder=\"Cluster Name\"\n            value={customEndpointName}\n            onChange={(e) => setCustomEndpointName(e.target.value)}\n          />\n        </Col>\n      </Row>\n      <Row style={{ marginBottom: 8 }}>\n        <Col span={24}>\n          <Input\n            placeholder=\"Cluster Endpoint\"\n            value={customEndpoint}\n            addonBefore={'https://'}\n            onChange={(e) => setCustomEndpoint(e.target.value)}\n          />\n        </Col>\n      </Row>\n    </Modal>\n  );\n}\n","import React, { useRef, useState } from 'react';\nimport { Select, Typography } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { TOKEN_MINTS } from '@project-serum/serum';\nimport apps from '@project-serum/awesome-serum';\n\nconst { Option } = Select;\n\nconst appsAndTokens = apps.concat(\n  TOKEN_MINTS.map((mint) => {\n    return {\n      name: `${mint.name} SPL`,\n      url: `https://solscan.io/address/${mint.address.toBase58()}`,\n      description: `${mint.name} SPL token`,\n      icon: '',\n      tags: [\n        'token',\n        'blockchain',\n        'solana',\n        'spl',\n        'solana',\n        mint.address.toBase58(),\n      ],\n    };\n  }),\n);\n\ninterface App {\n  name: string;\n  url: string;\n  description: string;\n  tags: string[];\n}\n\nexport default function AppSearch(props) {\n  const [searchMatches, setSearchMatches] = useState<App[]>([]);\n  const [searchValue, setSearchValue] = useState<string | undefined>(undefined);\n\n  const matchApp = (searchString: string, app: App) => {\n    const lowerSearchStr = searchString.toLowerCase();\n    return (\n      app.name.toLowerCase().includes(lowerSearchStr) ||\n      app.tags.some(\n        (tag) =>\n          tag.toLowerCase().includes(lowerSearchStr) ||\n          lowerSearchStr.includes(tag.toLowerCase()),\n      )\n    );\n  };\n\n  const handleSearch = (value) => {\n    setSearchValue(value === '' ? undefined : value);\n    const filteredApps = appsAndTokens.filter((app) => matchApp(value, app));\n    setSearchMatches(filteredApps);\n  };\n\n  const handleSelect = (value, option) => {\n    window.open(option.href, '_blank');\n    handleClear();\n  };\n\n  const handleClear = () => {\n    setSearchMatches([]);\n    setSearchValue(undefined);\n  };\n\n  const options = searchMatches.map((d) => (\n    <Option key={d.name} value={d.name} href={d.url}>\n      <h3>{d.name}</h3>\n      <Typography.Text type=\"secondary\">\n        {d.url.replace('https://', '')}\n      </Typography.Text>\n    </Option>\n  ));\n\n  const ref = useRef<any>();\n  return (\n    <Select\n      ref={ref}\n      showSearch\n      allowClear\n      value={searchValue}\n      placeholder={\n        props.focussed || props.focussed === undefined\n          ? 'Search for dex, swap, wallet, token...'\n          : ''\n      }\n      onSearch={handleSearch}\n      onClear={handleClear}\n      onSelect={handleSelect}\n      onFocus={props.onFocus}\n      onBlur={() => {\n        props.onBlur();\n        handleClear();\n      }}\n      notFoundContent={null} // todo: make this search history\n      style={{\n        width: props.width || '300px',\n        transition: props.focussed ? 'width 0.1s ease 0.1s' : '',\n      }}\n      dropdownStyle={{\n        width: props.width || '300px',\n      }}\n      dropdownMatchSelectWidth={false}\n      suffixIcon={\n        <SearchOutlined onClick={() => ref.current && ref.current.focus()} />\n      }\n      filterOption={false}\n    >\n      {options}\n    </Select>\n  );\n}\n","import {\n  InfoCircleOutlined,\n  PlusCircleOutlined,\n  SettingOutlined,\n} from '@ant-design/icons';\nimport { Button, Col, Menu, Popover, Row, Select } from 'antd';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport logo from '../assets/logo.svg';\nimport styled from 'styled-components';\nimport { useWallet } from '../utils/wallet';\nimport { ENDPOINTS, useConnectionConfig } from '../utils/connection';\nimport Settings from './Settings';\nimport CustomClusterEndpointDialog from './CustomClusterEndpointDialog';\nimport { EndpointInfo } from '../utils/types';\nimport { notify } from '../utils/notifications';\nimport { Connection } from '@solana/web3.js';\nimport WalletConnect from './WalletConnect';\nimport AppSearch from './AppSearch';\nimport { getTradePageUrl } from '../utils/markets';\n\nconst Wrapper = styled.div`\n  background-color: #0d1017;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  padding: 0px 30px;\n  flex-wrap: wrap;\n`;\nconst LogoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  color: #2abdd2;\n  font-weight: bold;\n  cursor: pointer;\n  img {\n    height: 30px;\n    margin-right: 8px;\n  }\n`;\n\nconst EXTERNAL_LINKS = {\n  '/learn': 'https://docs.projectserum.com/trade-on-serum-dex/trade-on-serum-dex-1',\n  '/add-market': 'https://serum-academy.com/en/add-market/',\n  '/wallet-support': 'https://serum-academy.com/en/wallet-support',\n  '/dex-list': 'https://serum-academy.com/en/dex-list/',\n  '/developer-resources': 'https://serum-academy.com/en/developer-resources/',\n  '/explorer': 'https://solscan.io',\n  '/srm-faq': 'https://projectserum.com/srm-faq',\n  '/swap': 'https://swap.projectserum.com',\n};\n\nexport default function TopBar() {\n  const { connected, wallet } = useWallet();\n  const {\n    endpoint,\n    endpointInfo,\n    setEndpoint,\n    availableEndpoints,\n    setCustomEndpoints,\n  } = useConnectionConfig();\n  const [addEndpointVisible, setAddEndpointVisible] = useState(false);\n  const [testingConnection, setTestingConnection] = useState(false);\n  const location = useLocation();\n  const history = useHistory();\n  const [searchFocussed, setSearchFocussed] = useState(false);\n\n  const handleClick = useCallback(\n    (e) => {\n      if (!(e.key in EXTERNAL_LINKS)) {\n        history.push(e.key);\n      }\n    },\n    [history],\n  );\n\n  const onAddCustomEndpoint = (info: EndpointInfo) => {\n    const existingEndpoint = availableEndpoints.some(\n      (e) => e.endpoint === info.endpoint,\n    );\n    if (existingEndpoint) {\n      notify({\n        message: `An endpoint with the given url already exists`,\n        type: 'error',\n      });\n      return;\n    }\n\n    const handleError = (e) => {\n      console.log(`Connection to ${info.endpoint} failed: ${e}`);\n      notify({\n        message: `Failed to connect to ${info.endpoint}`,\n        type: 'error',\n      });\n    };\n\n    try {\n      const connection = new Connection(info.endpoint, 'recent');\n      connection\n        .getBlockTime(0)\n        .then(() => {\n          setTestingConnection(true);\n          console.log(`testing connection to ${info.endpoint}`);\n          const newCustomEndpoints = [\n            ...availableEndpoints.filter((e) => e.custom),\n            info,\n          ];\n          setEndpoint(info.endpoint);\n          setCustomEndpoints(newCustomEndpoints);\n        })\n        .catch(handleError);\n    } catch (e) {\n      handleError(e);\n    } finally {\n      setTestingConnection(false);\n    }\n  };\n\n  const endpointInfoCustom = endpointInfo && endpointInfo.custom;\n  useEffect(() => {\n    const handler = () => {\n      if (endpointInfoCustom) {\n        setEndpoint(ENDPOINTS[0].endpoint);\n      }\n    };\n    window.addEventListener('beforeunload', handler);\n    return () => window.removeEventListener('beforeunload', handler);\n  }, [endpointInfoCustom, setEndpoint]);\n\n  const tradePageUrl = location.pathname.startsWith('/market/')\n    ? location.pathname\n    : getTradePageUrl();\n\n  return (\n    <>\n      <CustomClusterEndpointDialog\n        visible={addEndpointVisible}\n        testingConnection={testingConnection}\n        onAddCustomEndpoint={onAddCustomEndpoint}\n        onClose={() => setAddEndpointVisible(false)}\n      />\n      <Wrapper>\n        <LogoWrapper onClick={() => history.push(tradePageUrl)}>\n          <img src={logo} alt=\"\" />\n          {'SERUM'}\n        </LogoWrapper>\n        <Menu\n          mode=\"horizontal\"\n          onClick={handleClick}\n          selectedKeys={[location.pathname]}\n          style={{\n            borderBottom: 'none',\n            backgroundColor: 'transparent',\n            display: 'flex',\n            alignItems: 'flex-end',\n            flex: 1,\n          }}\n        >\n          <Menu.Item key={tradePageUrl} style={{ margin: '0 10px 0 20px' }}>\n            TRADE\n          </Menu.Item>\n          {!searchFocussed && (\n            <Menu.Item key=\"/swap\" style={{ margin: '0 10px' }}>\n              <a\n                href={EXTERNAL_LINKS['/swap']}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                SWAP\n              </a>\n            </Menu.Item>\n          )}\n          {connected && (!searchFocussed || location.pathname === '/balances') && (\n            <Menu.Item key=\"/balances\" style={{ margin: '0 10px' }}>\n              BALANCES\n            </Menu.Item>\n          )}\n          {connected && (!searchFocussed || location.pathname === '/orders') && (\n            <Menu.Item key=\"/orders\" style={{ margin: '0 10px' }}>\n              ORDERS\n            </Menu.Item>\n          )}\n          {connected && (!searchFocussed || location.pathname === '/convert') && (\n            <Menu.Item key=\"/convert\" style={{ margin: '0 10px' }}>\n              CONVERT\n            </Menu.Item>\n          )}\n          {(!searchFocussed || location.pathname === '/list-new-market') && (\n            <Menu.Item key=\"/list-new-market\" style={{ margin: '0 10px' }}>\n              ADD MARKET\n            </Menu.Item>\n          )}\n          {!searchFocussed && (\n            <Menu.SubMenu\n              title=\"LEARN\"\n              onTitleClick={() =>\n                window.open(EXTERNAL_LINKS['/learn'], '_blank')\n              }\n              style={{ margin: '0 0px 0 10px' }}\n            >\n              <Menu.Item key=\"/add-market\">\n                <a\n                  href={EXTERNAL_LINKS['/add-market']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Adding a market\n                </a>\n              </Menu.Item>\n              <Menu.Item key=\"/wallet-support\">\n                <a\n                  href={EXTERNAL_LINKS['/wallet-support']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Supported wallets\n                </a>\n              </Menu.Item>\n              <Menu.Item key=\"/dex-list\">\n                <a\n                  href={EXTERNAL_LINKS['/dex-list']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  DEX list\n                </a>\n              </Menu.Item>\n              <Menu.Item key=\"/developer-resources\">\n                <a\n                  href={EXTERNAL_LINKS['/developer-resources']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Developer resources\n                </a>\n              </Menu.Item>\n              <Menu.Item key=\"/explorer\">\n                <a\n                  href={EXTERNAL_LINKS['/explorer']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Solana block explorer\n                </a>\n              </Menu.Item>\n              <Menu.Item key=\"/srm-faq\">\n                <a\n                  href={EXTERNAL_LINKS['/srm-faq']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  SRM FAQ\n                </a>\n              </Menu.Item>\n            </Menu.SubMenu>\n          )}\n        </Menu>\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            paddingRight: 5,\n          }}\n        >\n          <AppSearch\n            onFocus={() => setSearchFocussed(true)}\n            onBlur={() => setSearchFocussed(false)}\n            focussed={searchFocussed}\n            width={searchFocussed ? '350px' : '35px'}\n          />\n        </div>\n        <div>\n          <Row\n            align=\"middle\"\n            style={{ paddingLeft: 5, paddingRight: 5 }}\n            gutter={16}\n          >\n            <Col>\n              <PlusCircleOutlined\n                style={{ color: '#2abdd2' }}\n                onClick={() => setAddEndpointVisible(true)}\n              />\n            </Col>\n            <Col>\n              <Popover\n                content={endpoint}\n                placement=\"bottomRight\"\n                title=\"URL\"\n                trigger=\"hover\"\n              >\n                <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n              </Popover>\n            </Col>\n            <Col>\n              <Select\n                onSelect={setEndpoint}\n                value={endpoint}\n                style={{ marginRight: 8, width: '150px' }}\n              >\n                {availableEndpoints.map(({ name, endpoint }) => (\n                  <Select.Option value={endpoint} key={endpoint}>\n                    {name}\n                  </Select.Option>\n                ))}\n              </Select>\n            </Col>\n          </Row>\n        </div>\n        {connected && (\n          <div>\n            <Popover\n              content={<Settings autoApprove={wallet?.autoApprove} />}\n              placement=\"bottomRight\"\n              title=\"Settings\"\n              trigger=\"click\"\n            >\n              <Button style={{ marginRight: 8 }}>\n                <SettingOutlined />\n                Settings\n              </Button>\n            </Popover>\n          </div>\n        )}\n        <div>\n          <WalletConnect />\n        </div>\n      </Wrapper>\n    </>\n  );\n}\n","export const helpUrls = {\n  customerSupport: 'https://t.me/ProjectSerum',\n  customerSupportZh: 'https://t.me/ProjectSerum_Chinese',\n  contactEmail: 'mailto:contact@projectserum.com',\n  discord: 'https://discord.gg/EDvudv6',\n  telegram: 'https://t.me/ProjectSerum',\n  github: 'https://github.com/project-serum',\n  projectSerum: 'https://projectserum.com/',\n  developerResources: 'https://projectserum.com/developer-resources',\n  solanaBeach: 'https://solanabeach.io',\n};\n","import React from 'react';\nimport { Layout, Row, Col, Grid } from 'antd';\nimport Link from './Link';\nimport { helpUrls } from './HelpUrls';\nimport { useReferrer } from '../utils/referrer';\nconst { Footer } = Layout;\nconst { useBreakpoint } = Grid;\n\nconst footerElements = [\n  {\n    description: 'Serum Developer Resources',\n    link: helpUrls.developerResources,\n  },\n  { description: 'Discord', link: helpUrls.discord },\n  { description: 'Telegram', link: helpUrls.telegram },\n  { description: 'GitHub', link: helpUrls.github },\n  { description: 'Project Serum', link: helpUrls.projectSerum },\n  { description: 'Solana Network', link: helpUrls.solanaBeach },\n];\n\nexport const CustomFooter = () => {\n  const smallScreen = !useBreakpoint().lg;\n  const { refCode, allowRefLink } = useReferrer();\n  return (\n    <Footer\n      style={{\n        height: '55px',\n        paddingBottom: 10,\n        paddingTop: 10,\n      }}\n    >\n      {refCode && allowRefLink && (\n        <Row justify=\"center\">Your referrer is {refCode}</Row>\n      )}\n      <Row align=\"middle\" gutter={[16, 4]}>\n        {!smallScreen && (\n          <>\n            <Col flex=\"auto\" />\n            {footerElements.map((elem, index) => {\n              return (\n                <Col key={index + ''}>\n                  <Link external to={elem.link}>\n                    {elem.description}\n                  </Link>\n                </Col>\n              );\n            })}\n          </>\n        )}\n        <Col flex=\"auto\">{/*  <DexProgramSelector />*/}</Col>\n      </Row>\n    </Footer>\n  );\n};\n","import { Layout } from 'antd';\nimport React, { useEffect } from 'react';\nimport TopBar from './TopBar';\nimport { CustomFooter as Footer } from './Footer';\nimport { useReferrer } from '../utils/referrer';\nimport queryString from 'query-string';\nimport { useLocation } from 'react-router-dom';\nimport { notify } from '../utils/notifications';\nconst { Header, Content } = Layout;\n\nexport default function BasicLayout({ children }) {\n  const { refCode, setRefCode, allowRefLink } = useReferrer();\n  const { search } = useLocation();\n  const parsed = queryString.parse(search);\n\n  useEffect(() => {\n    if (!!parsed.refCode && parsed.refCode !== refCode && allowRefLink) {\n      notify({ message: `New referrer ${parsed.refCode} added` });\n      setRefCode(parsed.refCode);\n    }\n  }, [parsed, refCode, setRefCode, allowRefLink]);\n\n  return (\n    <React.Fragment>\n      <Layout\n        style={{ display: 'flex', minHeight: '100vh', flexDirection: 'column' }}\n      >\n        <Header style={{ padding: 0, minHeight: 64, height: 'unset' }}>\n          <TopBar />\n        </Header>\n        <Content style={{ flex: 1 }}>{children}</Content>\n        <Footer />\n      </Layout>\n    </React.Fragment>\n  );\n}\n","import { PublicKey } from '@solana/web3.js';\nimport React, { ReactElement, useMemo, useState } from 'react';\nimport { useAccountInfo } from '../utils/connection';\nimport { isValidPublicKey } from '../utils/utils';\nimport { ValidateStatus } from 'antd/lib/form/FormItem';\nimport { TokenInstructions } from '@project-serum/serum';\nimport { parseTokenMintData, useMintToTickers } from '../utils/tokens';\nimport { AutoComplete, Form, Tooltip } from 'antd';\nimport Link from './Link';\n\nexport interface MintInfo {\n  address: PublicKey;\n  decimals: number;\n}\n\nexport function useMintInput(\n  name,\n  label: string | ReactElement,\n  tooltip?: string | ReactElement,\n): [ReactElement, MintInfo | null] {\n  const [address, setAddress] = useState('');\n  const [accountInfo, loaded] = useAccountInfo(\n    isValidPublicKey(address) ? new PublicKey(address) : null,\n  );\n\n  const mintToTickers = useMintToTickers();\n  const options = useMemo(() => {\n    return Object.entries(mintToTickers)\n      .filter(\n        ([mintAddress, ticker]) =>\n          mintAddress.includes(address) ||\n          ticker.toLowerCase().includes(address.toLowerCase()),\n      )\n      .map(([mintAddress, ticker]) => ({\n        value: mintAddress,\n        label: (\n          <>\n            {ticker} ({mintAddress})\n          </>\n        ),\n      }));\n  }, [mintToTickers, address]);\n\n  const { validateStatus, hasFeedback, help, mintInfo } = useMemo(() => {\n    let validateStatus: ValidateStatus = '';\n    let hasFeedback = false;\n    let help: string | null = null;\n    let mintInfo: MintInfo | null = null;\n    if (address) {\n      hasFeedback = true;\n      if (accountInfo) {\n        if (\n          accountInfo.owner.equals(TokenInstructions.TOKEN_PROGRAM_ID) &&\n          accountInfo.data.length === 82\n        ) {\n          let parsed = parseTokenMintData(accountInfo.data);\n          if (parsed.initialized) {\n            validateStatus = 'success';\n            mintInfo = {\n              address: new PublicKey(address),\n              decimals: parsed.decimals,\n            };\n          } else {\n            validateStatus = 'error';\n            help = 'Invalid SPL mint';\n          }\n        } else {\n          validateStatus = 'error';\n          help = 'Invalid SPL mint address';\n        }\n      } else if (isValidPublicKey(address) && !loaded) {\n        validateStatus = 'validating';\n      } else {\n        validateStatus = 'error';\n        help = 'Invalid Solana address';\n      }\n    }\n    return { validateStatus, hasFeedback, help, mintInfo };\n  }, [address, accountInfo, loaded]);\n\n  const input = (\n    <Form.Item\n      label={\n        <Tooltip\n          title={\n            <>\n              {tooltip} You can look up token mint addresses on{' '}\n              <Link external to=\"https://sollet.io\">\n                sollet.io\n              </Link>\n              .\n            </>\n          }\n        >\n          {label}\n        </Tooltip>\n      }\n      name={name}\n      validateStatus={validateStatus}\n      hasFeedback={hasFeedback}\n      help={help}\n    >\n      <AutoComplete\n        options={options}\n        value={address}\n        onChange={(value) => setAddress(value)}\n      />\n    </Form.Item>\n  );\n\n  return [input, mintInfo];\n}\n","import React, { useState } from 'react';\nimport { Button, Form, Input, Tooltip, Typography } from 'antd';\nimport { notify } from '../utils/notifications';\nimport { MARKETS } from '@project-serum/serum';\nimport { useConnection } from '../utils/connection';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport styled from 'styled-components';\nimport { useWallet } from '../utils/wallet';\nimport { listMarket } from '../utils/send';\nimport { useMintInput } from '../components/useMintInput';\n\nconst { Text, Title } = Typography;\n\nconst Wrapper = styled.div`\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nexport default function ListNewMarketPage() {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [baseMintInput, baseMintInfo] = useMintInput(\n    'baseMint',\n    <Text>\n      Base Token Mint Address{' '}\n      <Text type=\"secondary\">\n        (e.g. BTC solana address:{' '}\n        {\n          <Text type=\"secondary\" code>\n            9n4nbM75f5Ui33ZbPYXn59EwSgE8CGsHtAeTH5YFeJ9E\n          </Text>\n        }\n        )\n      </Text>\n    </Text>,\n    'The base token is the token being traded. For example, the base token of a BTC/USDT market is BTC.',\n  );\n  const [quoteMintInput, quoteMintInfo] = useMintInput(\n    'quoteMint',\n    <Text>\n      Quote Token Mint Address{' '}\n      <Text type=\"secondary\">\n        (e.g. USDT solana address:{' '}\n        {\n          <Text type=\"secondary\" code>\n            BQcdHdAQW1hczDbBi9hiegXAR7A98Q9jx3X3iBBBDiq4\n          </Text>\n        }\n        )\n      </Text>\n    </Text>,\n    'The quote token is the token used to price trades. For example, the quote token of a BTC/USDT market is USDT.',\n  );\n  const [lotSize, setLotSize] = useState('1');\n  const [tickSize, setTickSize] = useState('0.01');\n  const dexProgramId = MARKETS.find(({ deprecated }) => !deprecated).programId;\n  const [submitting, setSubmitting] = useState(false);\n\n  const [listedMarket, setListedMarket] = useState(null);\n\n  let baseLotSize;\n  let quoteLotSize;\n  if (baseMintInfo && parseFloat(lotSize) > 0) {\n    baseLotSize = Math.round(10 ** baseMintInfo.decimals * parseFloat(lotSize));\n    if (quoteMintInfo && parseFloat(tickSize) > 0) {\n      quoteLotSize = Math.round(\n        parseFloat(lotSize) *\n          10 ** quoteMintInfo.decimals *\n          parseFloat(tickSize),\n      );\n    }\n  }\n\n  const canSubmit =\n    connected &&\n    !!baseMintInfo &&\n    !!quoteMintInfo &&\n    !!baseLotSize &&\n    !!quoteLotSize;\n\n  async function onSubmit() {\n    if (!canSubmit) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const marketAddress = await listMarket({\n        connection,\n        wallet,\n        baseMint: baseMintInfo.address,\n        quoteMint: quoteMintInfo.address,\n        baseLotSize,\n        quoteLotSize,\n        dexProgramId,\n      });\n      setListedMarket(marketAddress);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error listing new market',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <Wrapper>\n      <FloatingElement>\n        <Title level={4}>List New Market</Title>\n        <Form\n          labelCol={{ span: 24 }}\n          wrapperCol={{ span: 24 }}\n          layout={'vertical'}\n          onFinish={onSubmit}\n        >\n          {baseMintInput}\n          {quoteMintInput}\n          <Form.Item\n            label={\n              <Tooltip title=\"Smallest allowed order size. For a BTC/USDT market, this would be in units of BTC.\">\n                Minimum Order Size{' '}\n                <Text type=\"secondary\">(Lot size in e.g. BTC)</Text>\n              </Tooltip>\n            }\n            name=\"lotSize\"\n            initialValue=\"1\"\n            validateStatus={\n              baseMintInfo && quoteMintInfo\n                ? baseLotSize\n                  ? 'success'\n                  : 'error'\n                : null\n            }\n            hasFeedback={baseMintInfo && quoteMintInfo}\n          >\n            <Input\n              value={lotSize}\n              onChange={(e) => setLotSize(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Tooltip title=\"Smallest amount by which prices can move. For a BTC/USDT market, this would be in units of USDT.\">\n                Tick Size{' '}\n                <Text type=\"secondary\">(Price increment in e.g. USDT)</Text>\n              </Tooltip>\n            }\n            name=\"tickSize\"\n            initialValue=\"0.01\"\n            validateStatus={\n              baseMintInfo && quoteMintInfo\n                ? quoteLotSize\n                  ? 'success'\n                  : 'error'\n                : null\n            }\n            hasFeedback={baseMintInfo && quoteMintInfo}\n          >\n            <Input\n              value={tickSize}\n              onChange={(e) => setTickSize(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <Form.Item label=\" \" colon={false}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              disabled={!canSubmit}\n              loading={submitting}\n            >\n              {connected ? 'Submit' : 'Not connected to wallet'}\n            </Button>\n          </Form.Item>\n        </Form>\n      </FloatingElement>\n      {listedMarket ? (\n        <FloatingElement>\n          <Text>New market address: {listedMarket.toBase58()}</Text>\n        </FloatingElement>\n      ) : null}\n    </Wrapper>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n  AutoComplete,\n  Button,\n  Form,\n  Input,\n  Switch,\n  Tooltip,\n  Typography,\n} from 'antd';\nimport { PublicKey } from '@solana/web3.js';\nimport { useConnection } from '../../utils/connection';\nimport FloatingElement from '../../components/layout/FloatingElement';\nimport styled from 'styled-components';\nimport { useWallet } from '../../utils/wallet';\nimport { sendSignedTransaction, signTransactions } from '../../utils/send';\nimport { useMintInput } from '../../components/useMintInput';\nimport { PoolTransactions } from '@project-serum/pool';\nimport { useTokenAccounts } from '../../utils/markets';\nimport BN from 'bn.js';\nimport { notify } from '../../utils/notifications';\nimport Link from '../../components/Link';\n\nconst { Text, Title } = Typography;\n\nconst Wrapper = styled.div`\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nconst AddRemoveTokenButtons = styled.div`\n  margin-top: 16px;\n  margin-bottom: 16px;\n`;\n\nconst SIMPLE_POOL_PROGRAM_ID = '71JS8f7y7ASMbuuSMCVG7a3qDdcVco2qYD6bMJeZqUCm';\nconst ADMIN_CONTROLLED_POOL_PROGRAM_ID =\n  'WvmTNLpGMVbwJVYztYL4Hnsy82cJhQorxjnnXcRm3b6';\nconst DEFAULT_PROGRAM_ID = ADMIN_CONTROLLED_POOL_PROGRAM_ID;\nconst PROGRAM_ID_OPTIONS = [\n  {\n    label: `Simple Pool (${SIMPLE_POOL_PROGRAM_ID})`,\n    value: SIMPLE_POOL_PROGRAM_ID,\n  },\n  {\n    label: `Admin-Controlled Pool (${ADMIN_CONTROLLED_POOL_PROGRAM_ID})`,\n    value: ADMIN_CONTROLLED_POOL_PROGRAM_ID,\n  },\n];\n\nexport default function NewPoolPage() {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [poolName, setPoolName] = useState('');\n  const [programId, setProgramId] = useState(DEFAULT_PROGRAM_ID);\n  const [initialSupply, setInitialSupply] = useState('1');\n  const [initialAssets, setInitialAssets] = useState<InitialAsset[]>([\n    { valid: false },\n    { valid: false },\n  ]);\n  const [adminControlled, setAdminControlled] = useState(false);\n  const [adminAddress, setAdminAddress] = useState('');\n  const [tokenAccounts] = useTokenAccounts();\n  const [submitting, setSubmitting] = useState(false);\n  const [newPoolAddress, setNewPoolAddress] = useState<PublicKey | null>(null);\n\n  useEffect(() => {\n    if (programId === SIMPLE_POOL_PROGRAM_ID) {\n      setAdminControlled(false);\n    } else if (programId === ADMIN_CONTROLLED_POOL_PROGRAM_ID) {\n      setAdminControlled(true);\n    }\n  }, [programId]);\n\n  useEffect(() => {\n    if (connected && wallet) {\n      setAdminAddress(wallet.publicKey.toBase58());\n    }\n  }, [wallet, connected]);\n\n  const canSubmit =\n    connected &&\n    poolName.trim() &&\n    programId &&\n    parseFloat(initialSupply) > 0 &&\n    initialAssets.every((asset) => asset.valid) &&\n    tokenAccounts &&\n    (adminAddress || !adminControlled);\n\n  async function onSubmit() {\n    if (!canSubmit || !wallet) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const assets = initialAssets as ValidInitialAsset[];\n      const [\n        poolAddress,\n        transactionsAndSigners,\n      ] = await PoolTransactions.initializeSimplePool({\n        connection,\n        programId: new PublicKey(programId),\n        poolName,\n        poolStateSpace: 1024,\n        poolMintDecimals: 6,\n        initialPoolMintSupply: new BN(\n          Math.round(10 ** 6 * parseFloat(initialSupply)),\n        ),\n        assetMints: assets.map((asset) => asset.mint),\n        initialAssetQuantities: assets.map((asset) => new BN(asset.quantity)),\n        creator: wallet.publicKey,\n        creatorAssets: assets.map((asset) => {\n          const found = tokenAccounts?.find((tokenAccount) =>\n            tokenAccount.effectiveMint.equals(asset.mint),\n          );\n          if (!found) {\n            throw new Error('No token account for ' + asset.mint.toBase58());\n          }\n          return found.pubkey;\n        }),\n        additionalAccounts: adminControlled\n          ? [\n              {\n                pubkey: new PublicKey(adminAddress),\n                isSigner: false,\n                isWritable: false,\n              },\n            ]\n          : [],\n      });\n      const signed = await signTransactions({\n        transactionsAndSigners,\n        wallet,\n        connection,\n      });\n      for (let signedTransaction of signed) {\n        await sendSignedTransaction({ signedTransaction, connection });\n      }\n      setNewPoolAddress(poolAddress);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error creating new pool',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <Wrapper>\n      <FloatingElement>\n        <Title level={4}>Create new pool</Title>\n        <Form layout=\"vertical\" onFinish={onSubmit}>\n          <Form.Item\n            label={\n              <Tooltip title=\"Public name of the pool.\">Pool Name</Tooltip>\n            }\n            name=\"name\"\n          >\n            <Input\n              value={poolName}\n              onChange={(e) => setPoolName(e.target.value)}\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Tooltip title=\"Address of the pool program.\">\n                Program ID{' '}\n                <Text type=\"secondary\">(e.g. {DEFAULT_PROGRAM_ID})</Text>\n              </Tooltip>\n            }\n            name=\"programId\"\n            initialValue={DEFAULT_PROGRAM_ID}\n          >\n            <AutoComplete\n              value={programId}\n              onChange={(value) => setProgramId(value)}\n              options={PROGRAM_ID_OPTIONS}\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Tooltip title=\"Initial number of pool tokens to mint to your account.\">\n                Initial Pool Token Supply\n              </Tooltip>\n            }\n            name=\"initialSupply\"\n            initialValue=\"1\"\n          >\n            <Input\n              value={initialSupply}\n              onChange={(e) => setInitialSupply(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <AddRemoveTokenButtons>\n            <Button\n              onClick={() =>\n                setInitialAssets((assets) => assets.concat({ valid: false }))\n              }\n            >\n              Add token\n            </Button>{' '}\n            <Button\n              onClick={() =>\n                setInitialAssets((assets) => assets.slice(0, assets.length - 1))\n              }\n              disabled={initialAssets.length <= 1}\n            >\n              Remove token\n            </Button>\n          </AddRemoveTokenButtons>\n          {initialAssets.map((asset, i) => (\n            <AssetInput setInitialAssets={setInitialAssets} index={i} key={i} />\n          ))}\n          <Form.Item\n            label={\n              <Tooltip title=\"Whether the assets in the pool can be controlled by the pool admin.\">\n                Admin Controlled\n              </Tooltip>\n            }\n            name=\"adminControlled\"\n          >\n            <Switch\n              checked={adminControlled}\n              onChange={(checked) => setAdminControlled(checked)}\n              disabled={\n                programId === SIMPLE_POOL_PROGRAM_ID ||\n                programId === ADMIN_CONTROLLED_POOL_PROGRAM_ID\n              }\n            />\n          </Form.Item>\n          {adminControlled ? (\n            <Form.Item\n              label={\n                <Tooltip title=\"Address of the pool admin account.\">\n                  Admin Address\n                </Tooltip>\n              }\n            >\n              <Input\n                value={adminAddress}\n                onChange={(e) => setAdminAddress(e.target.value.trim())}\n              />\n            </Form.Item>\n          ) : null}\n          <Form.Item label=\" \" colon={false}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              disabled={!canSubmit}\n              loading={submitting}\n            >\n              {connected ? 'Submit' : 'Not connected to wallet'}\n            </Button>\n          </Form.Item>\n        </Form>\n      </FloatingElement>\n      {newPoolAddress ? (\n        <FloatingElement>\n          <Text>\n            New pool address:{' '}\n            <Link to={`/pools/${newPoolAddress.toBase58()}`}>\n              {newPoolAddress.toBase58()}\n            </Link>\n          </Text>\n        </FloatingElement>\n      ) : null}\n    </Wrapper>\n  );\n}\n\ntype InitialAsset = { valid: false } | ValidInitialAsset;\ninterface ValidInitialAsset {\n  valid: true;\n  mint: PublicKey;\n  quantity: number;\n}\n\nfunction AssetInput({ setInitialAssets, index }) {\n  const [mintInput, mintInfo] = useMintInput(\n    `mint${index}`,\n    <Text>Token {index + 1} Mint Address</Text>,\n    <>Token mint address for token {index + 1}.</>,\n  );\n  const [quantity, setQuantity] = useState('');\n\n  useEffect(() => {\n    let change: InitialAsset;\n    if (mintInfo && parseFloat(quantity) >= 0) {\n      let parsedQuantity = Math.round(\n        10 ** mintInfo.decimals * parseFloat(quantity),\n      );\n      change = {\n        mint: mintInfo.address,\n        quantity: parsedQuantity,\n        valid: true,\n      };\n    } else {\n      change = { valid: false };\n    }\n    setInitialAssets((assets: InitialAsset[]) =>\n      assets.map((old, i) => (i === index ? change : old)),\n    );\n  }, [setInitialAssets, index, mintInfo, quantity]);\n\n  return (\n    <>\n      {mintInput}\n      <Form.Item\n        label={\n          <Tooltip\n            title={\n              <>\n                Initial quantity of token {index + 1} to deposit into the pool.\n              </>\n            }\n          >\n            Token {index + 1} Initial Quantity\n          </Tooltip>\n        }\n        name={`quantity${index}`}\n        validateStatus={'success'}\n      >\n        <Input\n          value={quantity}\n          onChange={(e) => setQuantity(e.target.value.trim())}\n          type=\"number\"\n          min=\"0\"\n          step=\"any\"\n        />\n      </Form.Item>\n    </>\n  );\n}\n","import React from 'react';\nimport { PublicKey } from '@solana/web3.js';\nimport { abbreviateAddress } from '../utils/utils';\nimport { useMintToTickers } from '../utils/tokens';\nimport { Popover } from 'antd';\nimport LinkAddress from './LinkAddress';\nimport { InfoCircleOutlined } from '@ant-design/icons';\n\nexport function MintName({\n  mint,\n  showAddress = false,\n}: {\n  mint: string | PublicKey | null | undefined;\n  showAddress?: boolean;\n}) {\n  const mintToTickers = useMintToTickers();\n  if (!mint) {\n    return null;\n  }\n  const mintKey = typeof mint === 'string' ? new PublicKey(mint) : mint;\n  const mintAddress = typeof mint === 'string' ? mint : mint.toBase58();\n  const ticker = mintToTickers[mintAddress] ?? abbreviateAddress(mintKey);\n\n  return (\n    <>\n      {ticker}\n      {showAddress ? (\n        <>\n          {' '}\n          <Popover\n            content={<LinkAddress address={mintAddress} />}\n            placement=\"bottomRight\"\n            title=\"Token mint\"\n            trigger=\"hover\"\n          >\n            <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n          </Popover>\n        </>\n      ) : null}\n    </>\n  );\n}\n","import { Basket, PoolInfo } from '@project-serum/pool';\nimport React from 'react';\nimport BN from 'bn.js';\nimport { PublicKey } from '@solana/web3.js';\nimport { useAccountInfo } from '../../../utils/connection';\nimport { parseTokenMintData } from '../../../utils/tokens';\nimport { Spin } from 'antd';\nimport { MintName } from '../../../components/MintName';\n\ninterface BasketDisplayProps {\n  poolInfo: PoolInfo;\n  basket?: Basket | null | undefined;\n}\n\nexport default function PoolBasketDisplay({\n  poolInfo,\n  basket,\n}: BasketDisplayProps) {\n  return (\n    <ul>\n      {poolInfo.state.assets.map((asset, index) => (\n        <BasketItem\n          key={index}\n          mint={asset.mint}\n          quantity={basket?.quantities[index]}\n        />\n      ))}\n    </ul>\n  );\n}\n\ninterface BasketItemProps {\n  mint: PublicKey;\n  quantity?: BN;\n}\n\nfunction BasketItem({ mint, quantity }: BasketItemProps) {\n  const [mintAccountInfo] = useAccountInfo(mint);\n  let quantityDisplay = <Spin size=\"small\" />;\n  if (mintAccountInfo && quantity) {\n    const mintInfo = parseTokenMintData(mintAccountInfo.data);\n    quantityDisplay = <>{quantity.toNumber() / 10 ** mintInfo.decimals}</>;\n  }\n\n  return (\n    <li>\n      {quantityDisplay} <MintName mint={mint} showAddress />\n    </li>\n  );\n}\n","import { getPoolBasket, PoolInfo } from '@project-serum/pool';\nimport React from 'react';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { Typography } from 'antd';\nimport { MintInfo } from '../../../utils/tokens';\nimport { useAsyncData } from '../../../utils/fetch-loop';\nimport { useConnection } from '../../../utils/connection';\nimport tuple from 'immutable-tuple';\nimport PoolBasketDisplay from './PoolBasketDisplay';\n\nconst { Text, Paragraph } = Typography;\n\ninterface PoolInfoProps {\n  poolInfo: PoolInfo;\n  mintInfo: MintInfo;\n}\n\nconst feeFormat = new Intl.NumberFormat(undefined, {\n  style: 'percent',\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 6,\n});\n\nexport default function PoolInfoPanel({ poolInfo, mintInfo }: PoolInfoProps) {\n  const connection = useConnection();\n\n  const [totalBasket] = useAsyncData(\n    () => getPoolBasket(connection, poolInfo, { redeem: mintInfo.supply }),\n    tuple(getPoolBasket, connection, poolInfo, 'total', mintInfo),\n  );\n\n  return (\n    <FloatingElement stretchVertical>\n      <Paragraph>Name: {poolInfo.state.name}</Paragraph>\n      <Paragraph>\n        Address: <Text copyable>{poolInfo.address.toBase58()}</Text>\n      </Paragraph>\n      <Paragraph>\n        Pool token mint address:{' '}\n        <Text copyable>{poolInfo.state.poolTokenMint.toBase58()}</Text>\n      </Paragraph>\n      {poolInfo.state.adminKey ? (\n        <Paragraph>\n          Pool admin: <Text copyable>{poolInfo.state.adminKey.toBase58()}</Text>\n        </Paragraph>\n      ) : null}\n      <Paragraph>\n        Fee rate: {feeFormat.format(poolInfo.state.feeRate / 1_000_000)}\n      </Paragraph>\n      <Paragraph>\n        Total supply: {mintInfo.supply.toNumber() / 10 ** mintInfo.decimals}\n      </Paragraph>\n      <Text>Total assets:</Text>\n      <div>\n        <PoolBasketDisplay poolInfo={poolInfo} basket={totalBasket} />\n      </div>\n    </FloatingElement>\n  );\n}\n","import { getPoolBasket, PoolInfo, PoolTransactions } from '@project-serum/pool';\nimport React, { useMemo, useState } from 'react';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { Button, Input, Spin, Tabs, Typography } from 'antd';\nimport { MintInfo } from '../../../utils/tokens';\nimport { useAsyncData } from '../../../utils/fetch-loop';\nimport { useConnection } from '../../../utils/connection';\nimport { PublicKey } from '@solana/web3.js';\nimport tuple from 'immutable-tuple';\nimport PoolBasketDisplay from './PoolBasketDisplay';\nimport BN from 'bn.js';\nimport { notify } from '../../../utils/notifications';\nimport { useWallet } from '../../../utils/wallet';\nimport { useTokenAccounts } from '../../../utils/markets';\nimport { sendTransaction } from '../../../utils/send';\n\nconst { Text } = Typography;\nconst { TabPane } = Tabs;\n\ninterface PoolCreateRedeemPanel {\n  poolInfo: PoolInfo;\n  mintInfo: MintInfo;\n}\n\nexport default function PoolCreateRedeemPanel({\n  poolInfo,\n  mintInfo,\n}: PoolCreateRedeemPanel) {\n  return (\n    <FloatingElement stretchVertical>\n      <Tabs>\n        <TabPane tab=\"Create\" key=\"create\">\n          <CreateRedeemTab\n            poolInfo={poolInfo}\n            mintInfo={mintInfo}\n            tab=\"create\"\n          />\n        </TabPane>\n        <TabPane tab=\"Redeem\" key=\"redeem\">\n          <CreateRedeemTab\n            poolInfo={poolInfo}\n            mintInfo={mintInfo}\n            tab=\"redeem\"\n          />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\ninterface CreateRedeemInnerPanel {\n  poolInfo: PoolInfo;\n  mintInfo: MintInfo;\n  tab: string;\n}\n\nfunction CreateRedeemTab({ poolInfo, mintInfo, tab }: CreateRedeemInnerPanel) {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [quantity, setQuantity] = useState('');\n  const [tokenAccounts] = useTokenAccounts();\n  const [submitting, setSubmitting] = useState(false);\n\n  const action = useMemo(() => {\n    const parsedQuantity = Math.round(\n      parseFloat(quantity) * 10 ** mintInfo.decimals,\n    );\n    if (parsedQuantity > 0) {\n      if (tab === 'create') {\n        return { create: new BN(parsedQuantity) };\n      } else {\n        return { redeem: new BN(parsedQuantity) };\n      }\n    }\n    return null;\n  }, [mintInfo.decimals, quantity, tab]);\n\n  const [basket, basketLoaded] = useAsyncData(\n    async () =>\n      action ? await getPoolBasket(connection, poolInfo, action) : null,\n    tuple(getPoolBasket, connection, poolInfo.address.toBase58(), action),\n  );\n\n  function findTokenAccount(mint: PublicKey): PublicKey {\n    const account = tokenAccounts?.find((account) =>\n      account.effectiveMint.equals(mint),\n    );\n    if (account) {\n      return account.pubkey;\n    }\n    throw new Error('No token account for ' + mint.toBase58());\n  }\n\n  const canSubmit = connected && action && basket;\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    if (!action || !basket || !connected || !canSubmit || !wallet) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const { transaction, signers } = PoolTransactions.execute(\n        poolInfo,\n        action,\n        {\n          owner: wallet.publicKey,\n          poolTokenAccount: findTokenAccount(poolInfo.state.poolTokenMint),\n          assetAccounts: poolInfo.state.assets.map((asset) =>\n            findTokenAccount(asset.mint),\n          ),\n        },\n        basket,\n      );\n      await sendTransaction({ connection, wallet, transaction, signers });\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message:\n          'Error ' +\n          (tab === 'create' ? 'creating' : 'redeeming') +\n          ' pool tokens',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Input\n        addonBefore={<>Quantity</>}\n        value={quantity}\n        onChange={(e) => setQuantity(e.target.value.trim())}\n        style={{ marginBottom: 24 }}\n      />\n      <div>\n        {!basket ? (\n          basketLoaded ? null : (\n            <Spin />\n          )\n        ) : (\n          <>\n            <Text>{tab === 'create' ? 'Cost' : 'Proceeds'}: </Text>\n            <Text type=\"secondary\">(indicative only)</Text>\n            <PoolBasketDisplay poolInfo={poolInfo} basket={basket} />\n          </>\n        )}\n      </div>\n      <Button\n        htmlType=\"submit\"\n        type=\"primary\"\n        disabled={!canSubmit || submitting}\n      >\n        {!connected ? 'Wallet not connected' : 'Submit'}\n      </Button>\n    </form>\n  );\n}\n","import { PoolInfo } from '@project-serum/pool';\nimport React from 'react';\nimport { PublicKey } from '@solana/web3.js';\nimport { useAccountInfo } from '../../../utils/connection';\nimport {\n  parseTokenAccountData,\n  parseTokenMintData,\n} from '../../../utils/tokens';\nimport { Button, Spin, Tabs } from 'antd';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { useTokenAccounts } from '../../../utils/markets';\nimport { MintName } from '../../../components/MintName';\nimport { LinkOutlined } from '@ant-design/icons';\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\n\nconst { TabPane } = Tabs;\n\nexport default function PoolBalancesPanel({\n  poolInfo,\n}: {\n  poolInfo: PoolInfo;\n}) {\n  return (\n    <FloatingElement>\n      <Tabs>\n        <TabPane tab=\"Wallet Balances\" key=\"wallet\">\n          <WalletBalancesTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Pool Balances\" key=\"pool\">\n          <PoolBalancesTab poolInfo={poolInfo} />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\nfunction WalletBalancesTab({ poolInfo }: { poolInfo: PoolInfo }) {\n  const [tokenAccounts] = useTokenAccounts();\n  return (\n    <ul>\n      {[\n        poolInfo.state.poolTokenMint,\n        ...poolInfo.state.assets.map((asset) => asset.mint),\n      ].map((mint, index) => {\n        const tokenAccount = tokenAccounts?.find((account) =>\n          account.effectiveMint.equals(mint),\n        );\n        if (!tokenAccount) {\n          return null;\n        }\n        return (\n          <BalanceItem\n            key={index}\n            mint={mint}\n            publicKey={tokenAccount.pubkey}\n            isPoolToken={mint.equals(poolInfo.state.poolTokenMint)}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction PoolBalancesTab({ poolInfo }: { poolInfo: PoolInfo }) {\n  return (\n    <ul>\n      {poolInfo.state.assets.map((asset, index) => {\n        return (\n          <BalanceItem\n            key={index}\n            mint={asset.mint}\n            publicKey={asset.vaultAddress}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\ninterface BalanceItemProps {\n  mint: PublicKey;\n  publicKey: PublicKey;\n  isPoolToken?: boolean;\n}\n\nfunction BalanceItem({ mint, publicKey, isPoolToken }: BalanceItemProps) {\n  const [mintAccountInfo] = useAccountInfo(mint);\n  const [balanceAccountInfo] = useAccountInfo(publicKey);\n  let quantityDisplay = <Spin size=\"small\" />;\n  if (mintAccountInfo && balanceAccountInfo) {\n    const mintInfo = parseTokenMintData(mintAccountInfo.data);\n    if (mint.equals(WRAPPED_SOL_MINT)) {\n      quantityDisplay = (\n        <>{balanceAccountInfo.lamports / 10 ** mintInfo.decimals}</>\n      );\n    } else {\n      const accountInfo = parseTokenAccountData(balanceAccountInfo.data);\n      quantityDisplay = <>{accountInfo.amount / 10 ** mintInfo.decimals}</>;\n    }\n  }\n\n  return (\n    <li>\n      {quantityDisplay}{' '}\n      {isPoolToken ? (\n        <>\n          Pool Token (<MintName mint={mint} />)\n        </>\n      ) : (\n        <MintName mint={mint} />\n      )}{' '}\n      <Button\n        type=\"link\"\n        icon={<LinkOutlined />}\n        href={'https://solscan.io/address/' + publicKey.toBase58()}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      />\n    </li>\n  );\n}\n","import React, { FormEvent, useMemo, useState } from 'react';\nimport { AdminControlledPoolInstructions, PoolInfo } from '@project-serum/pool';\nimport { TokenInstructions } from '@project-serum/serum';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { useConnection } from '../../../utils/connection';\nimport { useWallet } from '../../../utils/wallet';\nimport {\n  getSelectedTokenAccountForMint,\n  useTokenAccounts,\n} from '../../../utils/markets';\nimport { sendTransaction } from '../../../utils/send';\nimport { notify } from '../../../utils/notifications';\nimport {\n  Account,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n} from '@solana/web3.js';\nimport { AutoComplete, Button, Input, Select, Tabs } from 'antd';\nimport {\n  createAssociatedTokenAccount,\n  getAssociatedTokenAddress,\n} from '@project-serum/associated-token';\nimport { parseTokenMintData, useMintToTickers } from '../../../utils/tokens';\nimport BN from 'bn.js';\nimport { refreshAllCaches } from '../../../utils/fetch-loop';\n\nconst { TabPane } = Tabs;\nconst { Option } = Select;\n\nexport function PoolAdminPanel({ poolInfo }: { poolInfo: PoolInfo }) {\n  return (\n    <FloatingElement>\n      <Tabs>\n        <TabPane tab=\"Pause/Unpause\" key=\"pause\">\n          <PauseUnpauseTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Add Token\" key=\"addAsset\">\n          <AddAssetTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Remove Token\" key=\"removeAsset\">\n          <RemoveAssetTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Deposit\" key=\"deposit\">\n          <DepositTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Withdraw\" key=\"withdraw\">\n          <WithdrawTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Modify Fee\" key=\"updateFee\">\n          <UpdateFeeTab poolInfo={poolInfo} />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\ninterface TabParams {\n  poolInfo: PoolInfo;\n}\n\nfunction PauseUnpauseTab({ poolInfo }: TabParams) {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [submitting, setSubmitting] = useState(false);\n\n  async function sendPause() {\n    if (!connected || !wallet) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const transaction = new Transaction();\n      transaction.add(AdminControlledPoolInstructions.pause(poolInfo));\n      await sendTransaction({ connection, wallet, transaction });\n    } catch (e) {\n      notify({\n        message: 'Error pausing pool',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  async function sendUnpause() {\n    if (!connected || !wallet) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const transaction = new Transaction();\n      transaction.add(AdminControlledPoolInstructions.unpause(poolInfo));\n      await sendTransaction({ connection, wallet, transaction });\n    } catch (e) {\n      notify({\n        message: 'Error unpausing pool',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <>\n      <Button onClick={sendPause} disabled={submitting}>\n        Pause\n      </Button>{' '}\n      <Button onClick={sendUnpause} disabled={submitting}>\n        Unpause\n      </Button>\n    </>\n  );\n}\n\nfunction AddAssetTab({ poolInfo }: TabParams) {\n  const connection = useConnection();\n  const [address, setAddress] = useState('');\n  const { wallet, connected } = useWallet();\n  const canSubmit = connected && address;\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'adding asset to pool',\n    async () => {\n      const mintAddress = new PublicKey(address);\n      const vaultAddress = await getAssociatedTokenAddress(\n        poolInfo.state.vaultSigner,\n        mintAddress,\n      );\n      const transaction = new Transaction();\n      if (!(await connection.getAccountInfo(vaultAddress)) && wallet) {\n        transaction.add(\n          await createAssociatedTokenAccount(\n            wallet.publicKey,\n            poolInfo.state.vaultSigner,\n            mintAddress,\n          ),\n        );\n      }\n      transaction.add(\n        AdminControlledPoolInstructions.addAsset(poolInfo, vaultAddress),\n      );\n      return [transaction, []];\n    },\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <MintSelector\n        label=\"Token Mint Address\"\n        value={address}\n        onChange={(value) => setAddress(value)}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction RemoveAssetTab({ poolInfo }: TabParams) {\n  const [address, setAddress] = useState('');\n  const { connected } = useWallet();\n  const canSubmit = connected && address;\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'removing asset from pool',\n    async () => {\n      const mintAddress = new PublicKey(address);\n      const vaultAddress = poolInfo.state.assets.find((asset) =>\n        asset.mint.equals(mintAddress),\n      )?.vaultAddress;\n      if (!vaultAddress) {\n        throw new Error('Asset not in pool');\n      }\n      const transaction = new Transaction();\n      transaction.add(\n        AdminControlledPoolInstructions.removeAsset(poolInfo, vaultAddress),\n      );\n      return [transaction, []];\n    },\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <MintInPoolSelector\n        poolInfo={poolInfo}\n        label=\"Token Mint Address\"\n        value={address}\n        onChange={(value) => setAddress(value)}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction DepositTab({ poolInfo }: TabParams) {\n  const [address, setAddress] = useState('');\n  const [quantity, setQuantity] = useState('');\n\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [tokenAccounts] = useTokenAccounts();\n  const canSubmit =\n    connected && address && tokenAccounts && parseFloat(quantity);\n\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'depositing to pool',\n    async () => {\n      if (!wallet) {\n        throw new Error('Wallet is not connected');\n      }\n\n      const mintAddress = new PublicKey(address);\n      const vaultAddress = poolInfo.state.assets.find((asset) =>\n        asset.mint.equals(mintAddress),\n      )?.vaultAddress;\n      if (!vaultAddress) {\n        throw new Error('Asset not in pool');\n      }\n\n      const walletTokenAccount = getSelectedTokenAccountForMint(\n        tokenAccounts,\n        mintAddress,\n      );\n      if (!walletTokenAccount) {\n        throw new Error('Asset not in wallet');\n      }\n\n      const mintAccountInfo = await connection.getAccountInfo(mintAddress);\n      if (!mintAccountInfo) {\n        throw new Error('Mint not found');\n      }\n      const mintDecimals = parseTokenMintData(mintAccountInfo.data).decimals;\n      const parsedQuantity = Math.round(\n        parseFloat(quantity) * 10 ** mintDecimals,\n      );\n\n      const wrappedSolAccount =\n        mintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT) &&\n        walletTokenAccount.pubkey.equals(wallet.publicKey)\n          ? new Account()\n          : null;\n\n      const transaction = new Transaction();\n      const signers: Account[] = [];\n      if (wrappedSolAccount) {\n        transaction.add(\n          SystemProgram.createAccount({\n            fromPubkey: wallet.publicKey,\n            lamports: parsedQuantity + 2.04e6,\n            newAccountPubkey: wrappedSolAccount.publicKey,\n            programId: TokenInstructions.TOKEN_PROGRAM_ID,\n            space: 165,\n          }),\n          TokenInstructions.initializeAccount({\n            account: wrappedSolAccount.publicKey,\n            mint: TokenInstructions.WRAPPED_SOL_MINT,\n            owner: wallet.publicKey,\n          }),\n          TokenInstructions.transfer({\n            source: wrappedSolAccount.publicKey,\n            destination: vaultAddress,\n            amount: parsedQuantity,\n            owner: wallet.publicKey,\n          }),\n          TokenInstructions.closeAccount({\n            source: wrappedSolAccount.publicKey,\n            destination: walletTokenAccount.pubkey,\n            owner: wallet.publicKey,\n          }),\n        );\n        signers.push(wrappedSolAccount);\n      } else {\n        transaction.add(\n          TokenInstructions.transfer({\n            source: walletTokenAccount.pubkey,\n            destination: vaultAddress,\n            amount: parsedQuantity,\n            owner: wallet.publicKey,\n          }),\n        );\n      }\n      return [transaction, signers];\n    },\n    true,\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <MintInPoolSelector\n        poolInfo={poolInfo}\n        label=\"Token Mint Address\"\n        value={address}\n        onChange={(value) => setAddress(value)}\n        style={{ marginBottom: 24 }}\n      />\n      <Input\n        addonBefore={<>Quantity</>}\n        value={quantity}\n        onChange={(e) => setQuantity(e.target.value.trim())}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction WithdrawTab({ poolInfo }: TabParams) {\n  const [address, setAddress] = useState('');\n  const [quantity, setQuantity] = useState('');\n\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [tokenAccounts] = useTokenAccounts();\n  const canSubmit =\n    connected && address && tokenAccounts && parseFloat(quantity);\n\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'withdrawing from pool',\n    async () => {\n      if (!wallet) {\n        throw new Error('Wallet is not connected');\n      }\n\n      const mintAddress = new PublicKey(address);\n      const vaultAddress = poolInfo.state.assets.find((asset) =>\n        asset.mint.equals(mintAddress),\n      )?.vaultAddress;\n      if (!vaultAddress) {\n        throw new Error('Asset not in pool');\n      }\n\n      const walletTokenAccount = getSelectedTokenAccountForMint(\n        tokenAccounts,\n        mintAddress,\n      );\n      if (!walletTokenAccount) {\n        throw new Error('Asset not in wallet');\n      }\n\n      const mintAccountInfo = await connection.getAccountInfo(mintAddress);\n      if (!mintAccountInfo) {\n        throw new Error('Mint not found');\n      }\n      const mintDecimals = parseTokenMintData(mintAccountInfo.data).decimals;\n      const parsedQuantity = Math.round(\n        parseFloat(quantity) * 10 ** mintDecimals,\n      );\n\n      const wrappedSolAccount =\n        mintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT) &&\n        walletTokenAccount.pubkey.equals(wallet.publicKey)\n          ? new Account()\n          : null;\n\n      const transaction = new Transaction();\n      const signers: Account[] = [];\n      if (wrappedSolAccount) {\n        transaction.add(\n          SystemProgram.createAccount({\n            fromPubkey: wallet.publicKey,\n            lamports: 2.04e6,\n            newAccountPubkey: wrappedSolAccount.publicKey,\n            programId: TokenInstructions.TOKEN_PROGRAM_ID,\n            space: 165,\n          }),\n          TokenInstructions.initializeAccount({\n            account: wrappedSolAccount.publicKey,\n            mint: TokenInstructions.WRAPPED_SOL_MINT,\n            owner: wallet.publicKey,\n          }),\n        );\n        signers.push(wrappedSolAccount);\n      }\n      transaction.add(\n        AdminControlledPoolInstructions.approveDelegate(\n          poolInfo,\n          vaultAddress,\n          wallet.publicKey,\n          new BN(parsedQuantity),\n        ),\n      );\n      if (wrappedSolAccount) {\n        transaction.add(\n          TokenInstructions.transfer({\n            source: vaultAddress,\n            destination: wrappedSolAccount.publicKey,\n            amount: parsedQuantity,\n            owner: wallet.publicKey,\n          }),\n          TokenInstructions.closeAccount({\n            source: wrappedSolAccount.publicKey,\n            destination: walletTokenAccount.pubkey,\n            owner: wallet.publicKey,\n          }),\n        );\n      } else {\n        transaction.add(\n          TokenInstructions.transfer({\n            source: vaultAddress,\n            destination: walletTokenAccount.pubkey,\n            amount: parsedQuantity,\n            owner: wallet.publicKey,\n          }),\n        );\n      }\n      return [transaction, signers];\n    },\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <MintInPoolSelector\n        poolInfo={poolInfo}\n        label=\"Token Mint Address\"\n        value={address}\n        onChange={(value) => setAddress(value)}\n        style={{ marginBottom: 24 }}\n      />\n      <Input\n        addonBefore={<>Quantity</>}\n        value={quantity}\n        onChange={(e) => setQuantity(e.target.value.trim())}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction UpdateFeeTab({ poolInfo }: TabParams) {\n  const [feeRate, setFeeRate] = useState('');\n\n  const { connected } = useWallet();\n  const [tokenAccounts] = useTokenAccounts();\n  const canSubmit = connected && tokenAccounts && parseFloat(feeRate);\n\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'changing pool fee',\n    async () => {\n      const transaction = new Transaction();\n      transaction.add(\n        AdminControlledPoolInstructions.updateFee(\n          poolInfo,\n          Math.round(parseFloat(feeRate) * 1_000_000),\n        ),\n      );\n      return [transaction, []];\n    },\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Input\n        addonBefore={<>Fee Rate</>}\n        value={feeRate}\n        onChange={(e) => setFeeRate(e.target.value.trim())}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction useOnSubmitHandler(\n  description: string,\n  makeTransaction: () => Promise<[Transaction, Account[]]>,\n  refresh = false,\n): [(FormEvent) => void, boolean] {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [submitting, setSubmitting] = useState(false);\n\n  async function onSubmit(e: FormEvent) {\n    e.preventDefault();\n    if (submitting) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      if (!connected || !wallet) {\n        throw new Error('Wallet not connected');\n      }\n      const [transaction, signers] = await makeTransaction();\n      await sendTransaction({ connection, wallet, transaction, signers });\n      if (refresh) {\n        refreshAllCaches();\n      }\n    } catch (e) {\n      notify({\n        message: `Error ${description}`,\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return [onSubmit, submitting];\n}\n\nfunction SubmitButton({ canSubmit, submitting }) {\n  const { connected } = useWallet();\n  return (\n    <Button\n      htmlType=\"submit\"\n      type=\"primary\"\n      disabled={!canSubmit || submitting}\n    >\n      {!connected ? 'Wallet not connected' : 'Submit'}\n    </Button>\n  );\n}\n\nfunction MintInPoolSelector({\n  poolInfo,\n  label,\n  value,\n  onChange,\n  style,\n}: {\n  poolInfo: PoolInfo;\n  label: string;\n  value: string;\n  onChange: (string) => void;\n  style: any;\n}) {\n  const mintToTickers = useMintToTickers();\n  return (\n    <Input.Group style={style}>\n      <span className=\"ant-input-group-addon\">{label}</span>\n      <Select onChange={onChange} value={value} style={{ width: '100%' }}>\n        {poolInfo.state.assets.map((asset) => (\n          <Option value={asset.mint.toBase58()} key={asset.mint.toBase58()}>\n            {mintToTickers[asset.mint.toBase58()] ? (\n              <>\n                {mintToTickers[asset.mint.toBase58()]} ({asset.mint.toBase58()})\n              </>\n            ) : (\n              asset.mint.toBase58()\n            )}\n          </Option>\n        ))}\n      </Select>\n    </Input.Group>\n  );\n}\n\nfunction MintSelector({ label, style, value, onChange }) {\n  const mintToTickers = useMintToTickers();\n  const options = useMemo(() => {\n    return Object.entries(mintToTickers)\n      .filter(\n        ([mintAddress, ticker]) =>\n          mintAddress.includes(value) ||\n          ticker.toLowerCase().includes(value.toLowerCase()),\n      )\n      .map(([mintAddress, ticker]) => ({\n        value: mintAddress,\n        label: (\n          <>\n            {ticker} ({mintAddress})\n          </>\n        ),\n      }));\n  }, [mintToTickers, value]);\n  return (\n    <Input.Group style={style}>\n      <span className=\"ant-input-group-addon\">{label}</span>\n      <AutoComplete\n        options={options}\n        value={value}\n        onChange={(e) => onChange(e)}\n        style={{ width: '100%' }}\n      />\n    </Input.Group>\n  );\n}\n","import React, { useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Col, PageHeader, Row, Spin, Typography } from 'antd';\nimport { PublicKey } from '@solana/web3.js';\nimport { useAccountInfo } from '../../../utils/connection';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport {\n  decodePoolState,\n  isAdminControlledPool,\n  PoolInfo,\n} from '@project-serum/pool';\nimport PoolInfoPanel from './PoolInfoPanel';\nimport { parseTokenMintData } from '../../../utils/tokens';\nimport PoolCreateRedeemPanel from './PoolCreateRedeemPanel';\nimport PoolBalancesPanel from './PoolBalancesPanel';\nimport { useHistory } from 'react-router-dom';\nimport { PoolAdminPanel } from './PoolAdminPanel';\nimport { useWallet } from '../../../utils/wallet';\n\nconst { Text } = Typography;\n\nexport default function PoolPage() {\n  const { poolAddress } = useParams();\n  const [poolAccountInfo, poolAccountLoaded] = useAccountInfo(\n    isPublicKey(poolAddress) ? new PublicKey(poolAddress) : null,\n  );\n  const history = useHistory();\n\n  const poolInfo: PoolInfo | null = useMemo(() => {\n    if (!poolAccountInfo) {\n      return null;\n    }\n    try {\n      return {\n        address: new PublicKey(poolAddress),\n        state: decodePoolState(poolAccountInfo.data),\n        program: poolAccountInfo.owner,\n      };\n    } catch (e) {\n      return null;\n    }\n  }, [poolAddress, poolAccountInfo]);\n  const [mintAccountInfo, mintAccountInfoLoaded] = useAccountInfo(\n    poolInfo?.state.poolTokenMint,\n  );\n  const mintInfo = useMemo(\n    () => (mintAccountInfo ? parseTokenMintData(mintAccountInfo.data) : null),\n    [mintAccountInfo],\n  );\n  const { wallet } = useWallet();\n\n  if (poolInfo && mintInfo && wallet) {\n    return (\n      <>\n        <PageHeader\n          title={<>Pool {poolInfo.address.toBase58()}</>}\n          onBack={() => history.push('/pools')}\n          subTitle={poolInfo.state.name}\n        />\n        <Row>\n          <Col xs={24} lg={12}>\n            <PoolInfoPanel poolInfo={poolInfo} mintInfo={mintInfo} />\n          </Col>\n          <Col xs={24} lg={12}>\n            <PoolCreateRedeemPanel poolInfo={poolInfo} mintInfo={mintInfo} />\n          </Col>\n          <Col xs={24}>\n            <PoolBalancesPanel poolInfo={poolInfo} />\n          </Col>\n          {wallet.connected &&\n          poolInfo.state.adminKey?.equals(wallet.publicKey) &&\n          isAdminControlledPool(poolInfo) ? (\n            <Col xs={24}>\n              <PoolAdminPanel poolInfo={poolInfo} />\n            </Col>\n          ) : null}\n        </Row>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <PageHeader\n        title={<>Pool {poolAddress}</>}\n        onBack={() => history.push('/pools')}\n      />\n      <FloatingElement>\n        {!poolAccountLoaded || !mintAccountInfoLoaded ? (\n          <Spin />\n        ) : (\n          <Text>Invalid pool</Text>\n        )}\n      </FloatingElement>\n    </>\n  );\n}\n\nfunction isPublicKey(address) {\n  try {\n    new PublicKey(address);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n","import styled from 'styled-components';\nimport FloatingElement from '../../components/layout/FloatingElement';\nimport React, { useState } from 'react';\nimport { Button, Input, Typography } from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport Link from '../../components/Link';\n\nconst { Title } = Typography;\n\nconst Wrapper = styled.div`\n  max-width: 700px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  margin-top: 16px;\n  margin-bottom: 48px;\n`;\n\nexport default function PoolListPage() {\n  const [poolAddress, setPoolAddress] = useState('');\n  const history = useHistory();\n\n  function onSubmit(e) {\n    e.preventDefault();\n    history.push(`/pools/${poolAddress}`);\n  }\n  return (\n    <Wrapper>\n      <FloatingElement>\n        <Title level={3}>Pools</Title>\n        <Form onSubmit={onSubmit}>\n          <Input\n            value={poolAddress}\n            onChange={(e) => setPoolAddress(e.target.value.trim())}\n            placeholder=\"Pool address\"\n          />\n          <Button type=\"primary\" htmlType=\"submit\">\n            Go\n          </Button>\n        </Form>\n        <Link to=\"/pools/new\">Create new pool</Link>\n      </FloatingElement>\n    </Wrapper>\n  );\n}\n","import { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport TradePage from './pages/TradePage';\nimport OpenOrdersPage from './pages/OpenOrdersPage';\nimport React from 'react';\nimport BalancesPage from './pages/BalancesPage';\nimport ConvertPage from './pages/ConvertPage';\nimport BasicLayout from './components/BasicLayout';\nimport ListNewMarketPage from './pages/ListNewMarketPage';\nimport NewPoolPage from './pages/pools/NewPoolPage';\nimport PoolPage from './pages/pools/PoolPage';\nimport PoolListPage from './pages/pools/PoolListPage';\nimport { getTradePageUrl } from './utils/markets';\n\nexport function Routes() {\n  return (\n    <>\n      <HashRouter basename={'/'}>\n        <BasicLayout>\n          <Switch>\n            <Route exact path=\"/\">\n              <Redirect to={getTradePageUrl()} />\n            </Route>\n            <Route exact path=\"/market/:marketAddress\">\n              <TradePage />\n            </Route>\n            <Route exact path=\"/orders\" component={OpenOrdersPage} />\n            <Route exact path=\"/balances\" component={BalancesPage} />\n            <Route exact path=\"/convert\" component={ConvertPage} />\n            <Route\n              exact\n              path=\"/list-new-market\"\n              component={ListNewMarketPage}\n            />\n            <Route exact path=\"/pools\">\n              <PoolListPage />\n            </Route>\n            <Route exact path=\"/pools/new\">\n              <NewPoolPage />\n            </Route>\n            <Route exact path=\"/pools/:poolAddress\">\n              <PoolPage />\n            </Route>\n          </Switch>\n        </BasicLayout>\n      </HashRouter>\n    </>\n  );\n}\n","import React, { Suspense } from 'react';\nimport './App.less';\nimport { ConnectionProvider } from './utils/connection';\nimport { WalletProvider } from './utils/wallet';\nimport { GlobalStyle } from './global_style';\nimport { Spin } from 'antd';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { Routes } from './routes';\nimport { PreferencesProvider } from './utils/preferences';\nimport { ReferrerProvider } from './utils/referrer';\n\nexport default function App() {\n  return (\n    <Suspense fallback={() => <Spin size=\"large\" />}>\n      <GlobalStyle />\n      <ErrorBoundary>\n        <ConnectionProvider>\n          <ReferrerProvider>\n            <WalletProvider>\n              <PreferencesProvider>\n                <Suspense fallback={() => <Spin size=\"large\" />}>\n                  <Routes />\n                </Suspense>\n              </PreferencesProvider>\n            </WalletProvider>\n          </ReferrerProvider>\n        </ConnectionProvider>\n      </ErrorBoundary>\n    </Suspense>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}