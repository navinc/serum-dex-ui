{"version":3,"sources":["assets/logo.svg","utils/utils.js","utils/fetch-loop.js","utils/connection.js","utils/notifications.js","utils/wallet.js","utils/markets.js","global_style.ts","components/ErrorBoundary.jsx","components/layout/FloatingElement.jsx","components/Orderbook.jsx","utils/usePrevious.js","components/layout/DataTable.jsx","utils/send.js","components/UserInfoTable/BalancesTable.jsx","components/UserInfoTable/OpenOrderTable.jsx","components/UserInfoTable/FillsTable.jsx","components/UserInfoTable/index.jsx","components/DepositDialog.jsx","components/StandaloneBalancesDisplay.jsx","components/TradeForm.jsx","components/TradesTable.jsx","pages/TradePage.jsx","pages/OpenOrdersPage.jsx","components/LinkAddress.jsx","components/TopBar.js","components/Link.js","components/HelpUrls.js","components/Footer.jsx","components/UserInfoTable/WalletBalancesTable.jsx","components/UserInfoTable/AccountsTable.jsx","pages/BalancesPage.jsx","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","sleep","ms","a","Promise","resolve","setTimeout","getDecimalCount","value","Math","floor","toString","split","length","useLocalStorageState","key","defaultState","useState","storedState","localStorage","getItem","JSON","parse","state","setState","setLocalStorageState","useCallback","newState","removeItem","setItem","stringify","isEqual","obj1","obj2","keys","Object","k","pageLoadTime","Date","globalCache","Map","FetchLoopListener","cacheKey","fn","refreshInterval","callback","this","FetchLoopInternal","refresh","timeoutId","clearTimeout","stopped","data","set","errors","notifyListeners","console","warn","waitTime","min","timeSincePageLoad","document","visibilityState","hasFocus","random","listeners","Set","listener","previousRefreshInterval","add","assert","delete","forEach","map","size","globalLoops","loops","has","get","addListener","loop","removeListener","all","values","useAsyncData","asyncFn","useReducer","i","rerender","useEffect","loaded","undefined","ENDPOINTS","name","endpoint","clusterApiUrl","accountListenerCount","ConnectionContext","React","createContext","ConnectionProvider","children","setEndpoint","connection","useMemo","Connection","sendConnection","id","onSignature","result","log","removeSignatureListener","Provider","useConnection","useContext","useConnectionConfig","context","useAccountInfo","publicKey","tuple","toBase58","getAccountInfo","accountInfo","currentCount","previousData","onAccountChange","e","equals","initializeOnly","setCache","removeAccountChangeListener","useAccountData","notify","message","description","type","placement","notification","style","color","opacity","backgroundColor","WALLET_PROVIDERS","url","WalletContext","WalletProvider","providerUrl","setProviderUrl","wallet","Wallet","connected","setConnected","on","walletPublicKey","substring","disconnect","providerName","find","useWallet","COIN_MINTS","AGFEad2et2ZJif9jaGpdMixQqvW5i81aBdvKe7PHNfz3","CWE8jPTUYhdCTZYWPTe1o5DFqfdjzWKc9WKz6rSjQUdG","Ga2AXHpfAF6mv2ekZwcsJFqu7wB4NV331qNH7fW9Nst8","BQcdHdAQW1hczDbBi9hiegXAR7A98Q9jx3X3iBBBDiq4","BXXkv6z8ykpG1yuvUDPgh732wzVHB69RnB9YgSYh3itW","MSRMcoVyrFxnSgo5uXwone5SKcGhT1KEJMFEkMEWf9L","SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt","MARKET_INFO_BY_NAME","address","useAllMarkets","DEX_PROGRAM_ID","selectedDexProgramID","markets","setMarkets","marketList","marketInfo","Market","load","PublicKey","market","push","marketName","getAllMarkets","MarketContext","MarketProvider","setMarketName","setSelectedDexProgramID","setMarket","then","catch","baseCurrency","baseMintAddress","quoteCurrency","quoteMintAddress","useMarket","useMarkPrice","markPrice","setMarkPrice","useOrderbook","orderbook","trades","useTrades","bb","bids","Number","ba","asks","last","price","sort","b","_useUnfilteredTrades","limit","getUnfilteredTrades","loadFills","useOrderbookAccounts","bidData","_decoded","askData","bidOrderbook","Orderbook","decode","askOrderbook","depth","getL2","toFixed","useOpenOrdersAccounts","fast","getTokenAccounts","findOpenOrdersAccountsForOwner","useSelectedOpenOrdersAccount","accounts","useSelectedQuoteCurrencyAccount","findQuoteTokenAccountsForOwner","useQuoteCurrencyAccounts","useSelectedBaseCurrencyAccount","findBaseTokenAccountsForOwner","useBaseCurrencyAccounts","useQuoteCurrencyBalances","quoteCurrencyAccount","getTokenAccountBalance","pubkey","balances","uiAmount","useBaseCurrencyBalances","baseCurrencyAccount","filter","eventFlags","maker","trade","side","getCurrencyBalance","currencyAccounts","currencyAccount","tokenAccountBalances","GlobalStyle","createGlobalStyle","Title","Typography","ErrorBoundary","hasError","level","props","error","Component","Wrapper","styled","div","FloatingElement","SizeTitle","Row","MarkPriceTitle","Line","css","Price","smallScreen","onPrice","onSize","getCumulativeOrderbookSide","orders","backwards","cumulative","cumulativeSize","reverse","totalSize","asksToDisplay","totalAskSize","bidsToDisplay","flex","height","overflow","span","textAlign","index","OrderbookRow","sizePercent","onSizeClick","onPriceClick","MarkPriceComponent","memo","element","useRef","current","classList","remove","ref","marginBottom","onClick","data-width","data-bgcolor","prevProps","nextProps","priceStep","previousMarkPrice","usePrevious","markPriceColor","justify","ArrowUpOutlined","marginRight","ArrowDownOutlined","DataTable","dataSource","columns","emptyLabel","pagination","loading","pageSize","renderEmpty","padding","display","justifyContent","alignItems","settleFunds","openOrders","makeSettleFundsTransaction","transaction","onConfirm","err","onBeforeSend","onAfterSend","sendTransaction","cancelOrder","params","cancelOrders","order","onBeforeSendCallBack","onAfterSendCallBack","onConfirmCallBack","Transaction","makeMatchOrdersInstruction","makeCancelOrderInstruction","placeOrder","orderType","openOrdersAccount","isIncrement","num","step","abs","isNaN","minOrderSize","tickSize","owner","payer","extraSigners","makePlaceOrderTransaction","signers","makePlaceOrderInstruction","getRecentBlockhash","recentBlockhash","blockhash","signTransaction","signed","signedAt","getTime","extraSigner","extraSignature","nacl","sign","detached","serializeMessage","secretKey","addSignature","sendRawTransaction","serialize","skipPreflight","txid","sentAt","getSignatureStatus","confirmedAt","done","reject","getSignatureStatuses","results","confirmations","BalancesTable","onSettleFunds","title","dataIndex","render","ghost","CancelButton","Button","OpenOrderTable","cancelId","setCancelId","orderId","fontWeight","charAt","toUpperCase","slice","icon","DeleteOutlined","cancel","assign","FillsTable","fills","openOrdersAccounts","fill","useFills","liquidity","TabPane","Tabs","Index","paddingTop","defaultActiveKey","tab","OpenOrdersTab","filterForOpenOrders","useOpenOrders","BalancesTab","baseCurrencyBalances","quoteCurrencyBalances","baseExists","baseTokenTotal","baseTokenFree","quoteExists","quoteTokenTotal","quoteTokenFree","coin","baseSplSizeToNumber","sub","unsettled","quoteSplSizeToNumber","useBalances","DepositDialog","account","onClose","depositCoin","coinMint","visible","onOk","onCancel","RowBox","Tip","p","ActionButton","StandaloneBalancesDisplay","setDepositCoin","borderColor","align","paddingBottom","width","block","InputBox","Input","SellButton","BuyButton","sliderMarks","0","25","50","75","100","TradeForm","setChangeOrderRef","setSide","postOnly","setPostOnly","ioc","setIoc","setSize","setPrice","submitting","setSubmitting","maxQuoteSize","sizeFraction","doChangeOrder","onSliderChange","newSize","onSubmit","parsedPrice","parseFloat","parsedSize","flexDirection","Group","onChange","target","buttonStyle","background","addonBefore","placeholder","tipFormatter","marks","checked","disabled","TradesContainer","PublicTrades","marginTop","Option","Select","TradePage","window","innerHeight","innerWidth","dimensions","setDimensions","changeOrderRef","handleResize","addEventListener","removeEventListener","componentProps","onChangeOrderRef","getComponent","bordered","onSelect","RenderNormal","minHeight","RenderSmall","RenderSmaller","OpenOrdersPage","allMarkets","marketData","loadBids","loadAsks","ordersForMarket","openOrdersAddress","concat","useOpenOrdersForAllMarkets","LinkAddress","LinkOutlined","open","onOpenAddress","LogoWrapper","TopBar","setCurrent","setProvider","location","useLocation","history","useHistory","handleClick","pathname","includes","src","logo","alt","mode","selectedKeys","borderBottom","Item","connect","UserOutlined","content","trigger","InfoCircleOutlined","Link","external","to","rest","href","rel","helpUrls","Footer","Layout","useBreakpoint","Grid","footerElements","link","CustomFooter","lg","gutter","elem","WalletBalancesTable","walletBalances","AccountsTable","accountBalances","BalancesPage","balance","baseBalance","quoteBalance","useWalletBalancesForAllMarkets","loadedWalletBalances","openOrderAccounts","baseCurrencyAccounts","quoteCurrencyAccounts","openOrderAccountBalances","inOrdersBase","inOrdersQuote","unsettledBase","unsettledQuote","useOpenOrderAccountBalancesForAllMarkets","accountBalancesLoaded","Header","Content","Routes","basename","exact","path","component","TradePageContents","OpenOrdersPageContents","BalancesPageContents","Fragment","App","fallback","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b6b3c2eb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.49174c73.svg\";","import { useCallback, useEffect, useState } from 'react';\n\nexport async function sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport function getDecimalCount(value) {\n  if (Math.floor(value) !== value)\n    return value.toString().split('.')[1].length || 0;\n  return 0;\n}\n\nexport function useLocalStorageState(key, defaultState = null) {\n  const [state, setState] = useState(() => {\n    // NOTE: Not sure if this is ok\n    const storedState = localStorage.getItem(key);\n    if (storedState) {\n      return JSON.parse(storedState);\n    }\n    return defaultState;\n  });\n\n  const setLocalStorageState = useCallback(\n    (newState) => {\n      const changed = state !== newState;\n      if (!changed) {\n        return;\n      }\n      setState(newState);\n      if (newState === null) {\n        localStorage.removeItem(key);\n      } else {\n        localStorage.setItem(key, JSON.stringify(newState));\n      }\n    },\n    [state, key],\n  );\n\n  return [state, setLocalStorageState];\n}\n\nexport function useEffectAfterTimeout(effect, timeout) {\n  useEffect(() => {\n    const handle = setTimeout(effect, timeout);\n    return () => clearTimeout(handle);\n  });\n}\n\nexport function useListener(emitter, eventName) {\n  const [, forceUpdate] = useState(0);\n  useEffect(() => {\n    const listener = () => forceUpdate((i) => i + 1);\n    emitter.on(eventName, listener);\n    return () => emitter.removeListener(eventName, listener);\n  }, [emitter, eventName]);\n}\n\nexport function abbreviateAddress(address) {\n  const base58 = address.toBase58();\n  return base58.slice(0, 4) + '…' + base58.slice(-4);\n}\n\nexport function isEqual(obj1, obj2, keys) {\n  if (!keys && Object.keys(obj1).length !== Object.keys(obj2).length) {\n    return false;\n  }\n  keys = keys || Object.keys(obj1);\n  for (const k of keys) {\n    if (obj1[k] !== obj2[k]) {\n      // shallow comparison\n      return false;\n    }\n  }\n  return true;\n}\n","import { useEffect, useReducer } from 'react';\n\nimport assert from 'assert';\n\nconst pageLoadTime = new Date();\n\nconst globalCache = new Map();\n\nclass FetchLoopListener {\n  constructor(cacheKey, fn, refreshInterval, callback) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.refreshInterval = refreshInterval;\n    this.callback = callback;\n  }\n}\n\nclass FetchLoopInternal {\n  constructor(cacheKey, fn) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.timeoutId = null;\n    this.listeners = new Set();\n    this.errors = 0;\n  }\n\n  get refreshInterval() {\n    return Math.min(\n      ...[...this.listeners].map((listener) => listener.refreshInterval),\n    );\n  }\n\n  get stopped() {\n    return this.listeners.size === 0;\n  }\n\n  addListener(listener) {\n    const previousRefreshInterval = this.refreshInterval;\n    this.listeners.add(listener);\n    if (this.refreshInterval < previousRefreshInterval) {\n      this.refresh();\n    }\n  }\n\n  removeListener(listener) {\n    assert(this.listeners.delete(listener));\n    if (this.stopped) {\n      if (this.timeoutId) {\n        clearTimeout(this.timeoutId);\n        this.timeoutId = null;\n      }\n    }\n  }\n\n  notifyListeners() {\n    this.listeners.forEach((listener) => listener.callback());\n  }\n\n  refresh = async () => {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    }\n    if (this.stopped) {\n      return;\n    }\n\n    try {\n      const data = await this.fn();\n      globalCache.set(this.cacheKey, data);\n      this.errors = 0;\n      this.notifyListeners();\n      return data;\n    } catch (error) {\n      ++this.errors;\n      console.warn(error);\n    } finally {\n      if (!this.timeoutId && !this.stopped) {\n        let waitTime = this.refreshInterval;\n\n        // Back off on errors.\n        if (this.errors > 0) {\n          waitTime = Math.min(1000 * 2 ** (this.errors - 1), 60000);\n        }\n\n        // Don't do any refreshing for the first five seconds, to make way for other things to load.\n        const timeSincePageLoad = new Date() - pageLoadTime;\n        if (timeSincePageLoad < 5000) {\n          waitTime += 5000 - timeSincePageLoad / 2;\n        }\n\n        // Refresh background pages slowly.\n        if (document.visibilityState === 'hidden') {\n          waitTime = 60000;\n        } else if (!document.hasFocus()) {\n          waitTime *= 1.5;\n        }\n\n        // Add jitter so we don't send all requests at the same time.\n        waitTime *= 0.8 + 0.4 * Math.random();\n\n        this.timeoutId = setTimeout(this.refresh, waitTime);\n      }\n    }\n  };\n}\n\nclass FetchLoops {\n  loops = new Map();\n\n  addListener(listener) {\n    if (!this.loops.has(listener.cacheKey)) {\n      this.loops.set(\n        listener.cacheKey,\n        new FetchLoopInternal(listener.cacheKey, listener.fn),\n      );\n    }\n    this.loops.get(listener.cacheKey).addListener(listener);\n  }\n\n  removeListener(listener) {\n    const loop = this.loops.get(listener.cacheKey);\n    loop.removeListener(listener);\n    if (loop.stopped) {\n      this.loops.delete(listener.cacheKey);\n    }\n  }\n\n  refresh(cacheKey) {\n    if (this.loops.has(cacheKey)) {\n      this.loops.get(cacheKey).refresh();\n    }\n  }\n\n  refreshAll() {\n    return Promise.all([...this.loops.values()].map((loop) => loop.refresh()));\n  }\n}\nconst globalLoops = new FetchLoops();\n\nexport function useAsyncData(\n  asyncFn,\n  cacheKey,\n  { refreshInterval = 60000 } = {},\n) {\n  const [, rerender] = useReducer((i) => i + 1, 0);\n\n  useEffect(() => {\n    if (!cacheKey) {\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      return () => {};\n    }\n    const listener = new FetchLoopListener(\n      cacheKey,\n      asyncFn,\n      refreshInterval,\n      rerender,\n    );\n    globalLoops.addListener(listener);\n    return () => globalLoops.removeListener(listener);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey, refreshInterval]);\n\n  if (!cacheKey) {\n    return [null, false];\n  }\n\n  const loaded = globalCache.has(cacheKey);\n  const data = loaded ? globalCache.get(cacheKey) : undefined;\n  return [data, loaded];\n}\n\nexport function refreshCache(cacheKey, clearCache = false) {\n  if (clearCache) {\n    globalCache.delete(cacheKey);\n  }\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.refresh();\n    if (clearCache) {\n      loop.notifyListeners();\n    }\n  }\n}\n\nexport function refreshAllCaches() {\n  for (const loop of globalLoops.loops.values()) {\n    loop.refresh();\n  }\n}\n\nexport function setCache(cacheKey, value, { initializeOnly = false } = {}) {\n  if (initializeOnly && globalCache.has(cacheKey)) {\n    return;\n  }\n  globalCache.set(cacheKey, value);\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.notifyListeners();\n  }\n}\n","import { useLocalStorageState } from './utils';\nimport { clusterApiUrl, Connection } from '@solana/web3.js';\nimport React, { useContext, useMemo, useEffect } from 'react';\nimport { setCache, useAsyncData } from './fetch-loop';\nimport tuple from 'immutable-tuple';\n\nexport const ENDPOINTS = [\n  {\n    name: 'mainnet-beta',\n    endpoint: 'https://solana-api.projectserum.com',\n  },\n  { name: 'testnet', endpoint: clusterApiUrl('testnet') },\n  { name: 'devnet', endpoint: clusterApiUrl('devnet') },\n  { name: 'localnet', endpoint: 'http://127.0.0.1:8899' },\n];\n\nconst accountListenerCount = new Map();\n\nconst ConnectionContext = React.createContext(null);\n\nexport function ConnectionProvider({ children }) {\n  const [endpoint, setEndpoint] = useLocalStorageState(\n    'connectionEndpts',\n    ENDPOINTS[0].endpoint,\n  );\n\n  const connection = useMemo(() => new Connection(endpoint, 'recent'), [\n    endpoint,\n  ]);\n  const sendConnection = useMemo(() => new Connection(endpoint, 'recent'), [\n    endpoint,\n  ]);\n\n  // The websocket library solana/web3.js uses closes its websocket connection when the subscription list\n  // is empty after opening its first time, preventing subsequent subscriptions from receiving responses.\n  // This is a hack to prevent the list from every getting empty\n  useEffect(() => {\n    const id = connection.onSignature(\n      'do not worry, this is expected to yield warning logs',\n      (result) => {\n        console.log(\n          'Received onSignature responses from does-not-exist',\n          result,\n        );\n      },\n    );\n    return () => connection.removeSignatureListener(id);\n  }, [connection]);\n  useEffect(() => {\n    const id = sendConnection.onSignature(\n      'do not worry, this is expected to yield warning logs',\n      (result) => {\n        console.log(\n          'Received onSignature responses from does-not-exist',\n          result,\n        );\n      },\n    );\n    return () => sendConnection.removeSignatureListener(id);\n  }, [sendConnection]);\n\n  return (\n    <ConnectionContext.Provider\n      value={{ endpoint, setEndpoint, connection, sendConnection }}\n    >\n      {children}\n    </ConnectionContext.Provider>\n  );\n}\n\nexport function useConnection() {\n  return useContext(ConnectionContext).connection;\n}\n\nexport function useSendConnection() {\n  return useContext(ConnectionContext).sendConnection;\n}\n\nexport function useConnectionConfig() {\n  const context = useContext(ConnectionContext);\n  return { endpoint: context.endpoint, setEndpoint: context.setEndpoint };\n}\n\nexport function useAccountInfo(publicKey) {\n  const connection = useConnection();\n  const cacheKey = tuple(connection, publicKey?.toBase58());\n  const [accountInfo, loaded] = useAsyncData(\n    async () => (publicKey ? connection.getAccountInfo(publicKey) : null),\n    cacheKey,\n    { refreshInterval: 60000000 },\n  );\n  useEffect(() => {\n    if (!publicKey) {\n      return () => {};\n    }\n    if (accountListenerCount.has(cacheKey)) {\n      let currentCount = accountListenerCount.get(cacheKey);\n      accountListenerCount.set(cacheKey, currentCount + 1);\n      return () => {\n        accountListenerCount.set(cacheKey, currentCount - 1);\n      };\n    }\n    let previousData = null;\n    const id = connection.onAccountChange(publicKey, (e) => {\n      if (e.data) {\n        if (!previousData || !previousData.equals(e.data)) {\n          setCache(cacheKey, e);\n        }\n        previousData = e.data;\n      }\n    });\n    accountListenerCount.set(cacheKey, 1);\n    return () => {\n      let currentCount = accountListenerCount.get(cacheKey);\n      if (currentCount === 1) {\n        // last listener, safe to unsubscribe\n        connection.removeAccountChangeListener(id);\n        accountListenerCount.delete(cacheKey);\n      } else {\n        accountListenerCount.set(cacheKey, currentCount - 1);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [connection, publicKey?.toBase58(), cacheKey]);\n  return [accountInfo, loaded];\n}\n\nexport function useAccountData(publicKey) {\n  const [accountInfo] = useAccountInfo(publicKey);\n  return accountInfo && accountInfo.data;\n}\n","import React from 'react';\nimport { notification } from 'antd';\n\nexport function notify({\n  message,\n  description,\n  type = 'info',\n  placement = 'bottomLeft',\n}) {\n  notification[type]({\n    message: <span style={{ color: 'black' }}>{message}</span>,\n    description: (\n      <span style={{ color: 'black', opacity: 0.5 }}>{description}</span>\n    ),\n    placement,\n    style: {\n      backgroundColor: 'white',\n    },\n  });\n}\n","import React, { useContext, useEffect, useMemo, useState } from 'react';\nimport Wallet from '@project-serum/sol-wallet-adapter';\nimport { notify } from './notifications';\nimport { useConnectionConfig } from './connection';\nimport { useLocalStorageState } from './utils';\n\nexport const WALLET_PROVIDERS = [\n  { name: 'sollet.io', url: 'https://www.sollet.io' },\n];\n\nconst WalletContext = React.createContext(null);\n\nexport function WalletProvider({ children }) {\n  const { endpoint } = useConnectionConfig();\n  const [providerUrl, setProviderUrl] = useLocalStorageState(\n    'walletProvider',\n    'https://www.sollet.io',\n  );\n  const wallet = useMemo(() => new Wallet(providerUrl, endpoint), [\n    providerUrl,\n    endpoint,\n  ]);\n\n  const [connected, setConnected] = useState(false);\n  useEffect(() => {\n    console.log('trying to connect');\n    wallet.on('connect', () => {\n      console.log('connected');\n      setConnected(true);\n      let walletPublicKey = wallet.publicKey.toBase58();\n      let keyToDisplay =\n        walletPublicKey.length > 20\n          ? `${walletPublicKey.substring(0, 7)}.....${walletPublicKey.substring(\n              walletPublicKey.length - 7,\n              walletPublicKey.length,\n            )}`\n          : walletPublicKey;\n      notify({\n        message: 'Wallet update',\n        description: 'Connected to wallet ' + keyToDisplay,\n      });\n    });\n    wallet.on('disconnect', () => {\n      setConnected(false);\n      notify({\n        message: 'Wallet update',\n        description: 'Disconnected from wallet',\n      });\n    });\n    return () => {\n      wallet.disconnect();\n      setConnected(false);\n    };\n  }, [wallet]);\n  return (\n    <WalletContext.Provider\n      value={{\n        wallet,\n        connected,\n        providerUrl,\n        setProviderUrl,\n        providerName: WALLET_PROVIDERS.find(({ url }) => url === providerUrl)\n          ?.name,\n      }}\n    >\n      {children}\n    </WalletContext.Provider>\n  );\n}\n\nexport function useWallet() {\n  const context = useContext(WalletContext);\n  return [\n    context.connected,\n    context.wallet,\n    context.providerUrl,\n    context.setProviderUrl,\n    context.providerName,\n  ];\n}\n","import {\n  Market,\n  Orderbook,\n  decodeEventQueue,\n  DEX_PROGRAM_ID,\n} from '@project-serum/serum';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { PublicKey } from '@solana/web3.js';\nimport { useLocalStorageState } from './utils';\nimport { useAsyncData } from './fetch-loop';\nimport { useAccountData, useConnection } from './connection';\nimport { useWallet } from './wallet';\nimport tuple from 'immutable-tuple';\nimport { notify } from './notifications';\n\nconst DEFAULT_MARKET_NAME = 'SRM/USDC';\n\nexport const COIN_MINTS = {\n  '9n4nbM75f5Ui33ZbPYXn59EwSgE8CGsHtAeTH5YFeJ9E': 'BTC',\n  '2FPyTwcZLUg1MDrwsyoP4D6s1tM7hAkHYRjkNb5w6Pxk': 'ETH',\n  AGFEad2et2ZJif9jaGpdMixQqvW5i81aBdvKe7PHNfz3: 'FTT',\n  '3JSf5tPeuscJGtaCp5giEiDhv51gQ4v3zWg8DGgyLfAB': 'YFI',\n  CWE8jPTUYhdCTZYWPTe1o5DFqfdjzWKc9WKz6rSjQUdG: 'LINK',\n  Ga2AXHpfAF6mv2ekZwcsJFqu7wB4NV331qNH7fW9Nst8: 'XRP',\n  BQcdHdAQW1hczDbBi9hiegXAR7A98Q9jx3X3iBBBDiq4: 'USDT',\n  BXXkv6z8ykpG1yuvUDPgh732wzVHB69RnB9YgSYh3itW: 'USDC',\n  MSRMcoVyrFxnSgo5uXwone5SKcGhT1KEJMFEkMEWf9L: 'MSRM',\n  SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt: 'SRM',\n};\n\nexport const MARKET_INFO_BY_NAME = {\n  'MSRM/USDC': {\n    address: '4BtdJWtViywsjB43tZcfQ8d9HHM8ZtQMPpDgQfmYpqjU',\n    name: 'MSRM/USDC',\n  },\n  'MSRM/USDT': {\n    address: 'GAPqm4xkcUaDkW4gExTB5TUqM2dpjdZq9redymKqkT1W',\n    name: 'MSRM/USDT',\n  },\n  'BTC/USDC': {\n    address: '5dacLET6Es3YbBsjQgGHLjJyXATcpZxUqcueYjNGcBwn',\n    name: 'BTC/USDC',\n  },\n  'BTC/USDT': {\n    address: 'Fb1tMmyBQokrEDWXZtnPXLUXc2rhVuWWeEjPX2qbTVEg',\n    name: 'BTC/USDT',\n  },\n  'ETH/USDC': {\n    address: '3xZN5bYKrMQCfUFtjMCrSCe9kaiiVnqeRTxz2RJrbUcH',\n    name: 'ETH/USDC',\n  },\n  'ETH/USDT': {\n    address: '8Xqb3LKE1bWBjXd71QjAFVZxzAYNsDkBrfeX3AkrbtNg',\n    name: 'ETH/USDT',\n  },\n  'SRM/USDC': {\n    address: '8zQDk3guAGAaWr19kDkeD26zBEZk7HxN7ieBE6X1KSWU',\n    name: 'SRM/USDC',\n  },\n  'SRM/USDT': {\n    address: '13Zv8cUkew4mr3TdaCUbQcw5RF7Yutni2nW8LjPgeTMm',\n    name: 'SRM/USDT',\n  },\n  'FTT/USDC': {\n    address: 'FwEHggxJfX3sJgUR8mtE7XV7CYKEqiMc5UfZAwMvx5Lz',\n    name: 'FTT/USDC',\n  },\n  'FTT/USDT': {\n    address: 'C54fqV8gb8NZrypJ2vMMKdiuasD65J5ujtXJDGBch5sn',\n    name: 'FTT/USDT',\n  },\n  'YFI/USDC': {\n    address: 'Ad2ZDjDf53DsBURKGq5bdByddVYtp1p3AKUkFgdj463q',\n    name: 'YFI/USDC',\n  },\n  'YFI/USDT': {\n    address: '7kmYX9sNYCt9jDnQu8SLySxBGYPVFqw3hPSpmVV3a3qk',\n    name: 'YFI/USDT',\n  },\n  'LINK/USDC': {\n    address: '4i1kB7T9KWCUHQyxjRP7MnK5Lnn2zt4R2Ykv7utLjmgZ',\n    name: 'LINK/USDC',\n  },\n  'LINK/USDT': {\n    address: '5dExADv8CidCYavRPwFnraJtGW3PPpMwhybjzfjhtTvn',\n    name: 'LINK/USDT',\n  },\n};\n\nexport function useMarketsList() {\n  return Object.values(MARKET_INFO_BY_NAME);\n}\n\nexport function useAllMarkets() {\n  const [selectedDexProgramID] = useLocalStorageState(\n    'selectedDexProgramID',\n    DEX_PROGRAM_ID.toBase58(),\n  );\n\n  const connection = useConnection();\n  const [markets, setMarkets] = useState([]);\n\n  useEffect(() => {\n    const getAllMarkets = async () => {\n      const markets = [];\n      const marketList = Object.values(MARKET_INFO_BY_NAME);\n      let marketInfo;\n      for (marketInfo of marketList) {\n        try {\n          const market = await Market.load(\n            connection,\n            new PublicKey(marketInfo.address),\n            {},\n            new PublicKey(selectedDexProgramID),\n          );\n          markets.push({ market, marketName: marketInfo.name });\n        } catch (e) {\n          notify({\n            message: 'Error loading market',\n            description: e.message,\n            type: 'error',\n          });\n        }\n      }\n      setMarkets(markets);\n    };\n\n    getAllMarkets();\n  }, [connection, selectedDexProgramID]);\n\n  return markets;\n}\n\nconst MarketContext = React.createContext(null);\n\n// For things that don't really change\nconst _SLOW_REFRESH_INTERVAL = 1000 * 1000;\n\n// For things that change frequently\nconst _FAST_REFRESH_INTERVAL = 5 * 1000;\n\nconst _MEDIUM_REFRESH_INTERVAL = 5 * 1000;\n\nexport function MarketProvider({ children }) {\n  const [marketName, setMarketName] = useLocalStorageState(\n    'selectedMarketName',\n    DEFAULT_MARKET_NAME,\n  );\n  const [selectedDexProgramID, setSelectedDexProgramID] = useLocalStorageState(\n    'selectedDexProgramID',\n    DEX_PROGRAM_ID.toBase58(),\n  );\n\n  const connection = useConnection();\n  const marketInfo = MARKET_INFO_BY_NAME[marketName];\n  const [market, setMarket] = useState();\n  useEffect(() => {\n    setMarket(null);\n    if (!marketInfo || !marketInfo.address) {\n      notify({\n        message: 'Error loading market',\n        description: 'Please select a market from the dropdown',\n        type: 'error',\n      });\n      return;\n    }\n    Market.load(\n      connection,\n      new PublicKey(marketInfo.address),\n      {},\n      new PublicKey(selectedDexProgramID),\n    )\n      .then(setMarket)\n      .catch((e) =>\n        notify({\n          message: 'Error loading market',\n          description: e.message,\n          type: 'error',\n        }),\n      );\n  }, [connection, marketName, marketInfo, selectedDexProgramID]);\n\n  const baseCurrency =\n    COIN_MINTS[market?.baseMintAddress?.toBase58()] || 'UNKNOWN';\n  const quoteCurrency =\n    COIN_MINTS[market?.quoteMintAddress?.toBase58()] || 'UNKNOWN';\n  return (\n    <MarketContext.Provider\n      value={{\n        market,\n        marketName,\n        setMarketName,\n        ...marketInfo,\n        baseCurrency,\n        quoteCurrency,\n        selectedDexProgramID,\n        setSelectedDexProgramID,\n      }}\n    >\n      {children}\n    </MarketContext.Provider>\n  );\n}\n\nexport function useMarket() {\n  return useContext(MarketContext);\n}\n\nexport function useMarkPrice() {\n  const [markPrice, setMarkPrice] = useState(null);\n\n  const [orderbook] = useOrderbook();\n  const trades = useTrades();\n\n  useEffect(() => {\n    let bb = orderbook?.bids?.length > 0 && Number(orderbook.bids[0][0]);\n    let ba = orderbook?.asks?.length > 0 && Number(orderbook.asks[0][0]);\n    let last = trades?.length > 0 && trades[0].price;\n\n    let markPrice =\n      bb && ba\n        ? last\n          ? [bb, ba, last].sort((a, b) => a - b)[1]\n          : (bb + ba) / 2\n        : null;\n\n    setMarkPrice(markPrice);\n  }, [orderbook, trades]);\n\n  return markPrice;\n}\n\nexport function _useUnfilteredTrades(limit = 10000) {\n  const { market } = useMarket();\n  const connection = useConnection();\n  async function getUnfilteredTrades() {\n    if (!market || !connection) {\n      return null;\n    }\n    return await market.loadFills(connection, limit);\n  }\n  const [trades] = useAsyncData(\n    getUnfilteredTrades,\n    tuple('getUnfilteredTrades', market, connection),\n    { refreshInterval: _MEDIUM_REFRESH_INTERVAL },\n  );\n  return trades;\n  // NOTE: For now, websocket is too expensive since the event queue is large\n  // and updates very frequently\n\n  // let data = useAccountData(market && market._decoded.eventQueue);\n  // if (!data) {\n  //   return null;\n  // }\n  // const events = decodeEventQueue(data, limit);\n  // return events\n  //   .filter((event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0))\n  //   .map(market.parseFillEvent.bind(market));\n}\n\nexport function useOrderbookAccounts() {\n  const { market } = useMarket();\n  let bidData = useAccountData(market && market._decoded.bids);\n  let askData = useAccountData(market && market._decoded.asks);\n  return {\n    bidOrderbook: bidData ? Orderbook.decode(market, bidData) : null,\n    askOrderbook: askData ? Orderbook.decode(market, askData) : null,\n  };\n}\n\nexport function useOrderbook(depth = 20) {\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\n  const { market } = useMarket();\n  const bids =\n    !bidOrderbook || !market\n      ? []\n      : bidOrderbook\n          .getL2(depth)\n          .map(([price, size]) => [price.toFixed(2), size]);\n  const asks =\n    !askOrderbook || !market\n      ? []\n      : askOrderbook\n          .getL2(depth)\n          .map(([price, size]) => [price.toFixed(2), size]);\n  return [{ bids, asks }, !!bids || !!asks];\n}\n\n// Want the balances table to be fast-updating, dont want open orders to flicker\n// TODO: Update to use websocket\nexport function useOpenOrdersAccounts(fast = false) {\n  const { market } = useMarket();\n  const [connected, wallet] = useWallet();\n  const connection = useConnection();\n  async function getTokenAccounts() {\n    if (!connected) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    return await market.findOpenOrdersAccountsForOwner(\n      connection,\n      wallet.publicKey,\n    );\n  }\n  return useAsyncData(\n    getTokenAccounts,\n    tuple('openOrdersAccounts', wallet, market, connected),\n    { refreshInterval: fast ? _FAST_REFRESH_INTERVAL : _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useSelectedOpenOrdersAccount(fast = false) {\n  const [accounts] = useOpenOrdersAccounts(fast);\n  if (!accounts) {\n    return null;\n  }\n  return accounts[0];\n}\n\nexport function useOpenOrdersAddresses() {\n  const [openOrdersAccounts] = useOpenOrdersAccounts();\n  if (!openOrdersAccounts) {\n    return null;\n  }\n  return openOrdersAccounts.map(({ publicKey }) => publicKey);\n}\n\n// This is okay to poll\nexport function useBaseCurrencyAccounts() {\n  const { market } = useMarket();\n  const [connected, wallet] = useWallet();\n  const connection = useConnection();\n  async function getTokenAccounts() {\n    if (!connected) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    return await market.findBaseTokenAccountsForOwner(\n      connection,\n      wallet.publicKey,\n    );\n  }\n  return useAsyncData(\n    getTokenAccounts,\n    tuple('getTokenAccounts', wallet, market, connected),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\n// This is okay to poll\nexport function useQuoteCurrencyAccounts() {\n  const { market } = useMarket();\n  const [connected, wallet] = useWallet();\n  const connection = useConnection();\n  async function getTokenAccounts() {\n    if (!connected) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    return await market.findQuoteTokenAccountsForOwner(\n      connection,\n      wallet.publicKey,\n    );\n  }\n  return useAsyncData(\n    getTokenAccounts,\n    tuple('useQuoteCurrencyAccounts', wallet, market, connected),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useSelectedQuoteCurrencyAccount() {\n  const [accounts] = useQuoteCurrencyAccounts();\n  if (!accounts) {\n    return null;\n  }\n  return accounts[0];\n}\n\nexport function useSelectedBaseCurrencyAccount() {\n  const [accounts] = useBaseCurrencyAccounts();\n  if (!accounts) {\n    return null;\n  }\n  return accounts[0];\n}\n\n// TODO: Update to use websocket\nexport function useQuoteCurrencyBalances() {\n  const connection = useConnection();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  async function getBalance() {\n    if (!quoteCurrencyAccount) {\n      return null;\n    }\n    const balances = await connection.getTokenAccountBalance(\n      quoteCurrencyAccount.pubkey,\n    );\n    return balances && balances.value && balances.value.uiAmount;\n  }\n  return useAsyncData(\n    getBalance,\n    tuple(\n      'useQuoteCurrencyBalances',\n      connection,\n      quoteCurrencyAccount && quoteCurrencyAccount.pubkey.toBase58(),\n    ),\n    { refreshInterval: _FAST_REFRESH_INTERVAL },\n  );\n}\n\n// TODO: Update to use websocket\nexport function useBaseCurrencyBalances() {\n  const connection = useConnection();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  async function getBalance() {\n    if (!baseCurrencyAccount) {\n      return null;\n    }\n    const balances = await connection.getTokenAccountBalance(\n      baseCurrencyAccount.pubkey,\n    );\n    return balances && balances.value && balances.value.uiAmount;\n  }\n  return useAsyncData(\n    getBalance,\n    tuple(\n      'useBaseCurrencyBalances',\n      connection,\n      baseCurrencyAccount && baseCurrencyAccount.pubkey.toBase58(),\n    ),\n    { refreshInterval: _FAST_REFRESH_INTERVAL },\n  );\n}\n\nexport function useOpenOrders() {\n  const { market, marketName } = useMarket();\n  const openOrdersAccount = useSelectedOpenOrdersAccount();\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\n  if (!market || !openOrdersAccount || !bidOrderbook || !askOrderbook) {\n    return null;\n  }\n  return market\n    .filterForOpenOrders(bidOrderbook, askOrderbook, [openOrdersAccount])\n    .map((order) => ({ ...order, marketName }));\n}\n\nexport function useTrades(limit = 100) {\n  const trades = _useUnfilteredTrades(limit);\n  if (!trades) {\n    return null;\n  }\n  // Until partial fills are each given their own fill, use maker fills\n  return trades\n    .filter(({ eventFlags }) => eventFlags.maker)\n    .map((trade) => ({\n      ...trade,\n      side: trade.side === 'buy' ? 'sell' : 'buy',\n    }));\n}\n\nexport function useFills(limit = 100) {\n  const { marketName } = useMarket();\n  const fills = _useUnfilteredTrades(limit);\n  const [openOrdersAccounts] = useOpenOrdersAccounts();\n  if (!openOrdersAccounts || openOrdersAccounts.length === 0) {\n    return null;\n  }\n  if (!fills) {\n    return null;\n  }\n  const openOrdersAccount = openOrdersAccounts[0];\n  return fills\n    .filter((fill) => fill.openOrders.equals(openOrdersAccount.publicKey))\n    .map((fill) => ({ ...fill, marketName }));\n}\n\n// TODO: Update to use websocket\nexport function useFillsForAllMarkets(limit = 100) {\n  const [connected, wallet] = useWallet();\n\n  const connection = useConnection();\n  const allMarkets = useAllMarkets();\n\n  async function getFillsForAllMarkets() {\n    let fills = [];\n    if (!connected) {\n      return fills;\n    }\n\n    let marketData;\n    for (marketData of allMarkets) {\n      const { market, marketName } = marketData;\n      if (!market) {\n        return fills;\n      }\n      const openOrdersAccounts = await market.findOpenOrdersAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n      const openOrdersAccount = openOrdersAccounts && openOrdersAccounts[0];\n      if (!openOrdersAccount) {\n        return fills;\n      }\n      const eventQueueData = await connection.getAccountInfo(\n        market && market._decoded.eventQueue,\n      );\n      let data = eventQueueData?.data;\n      if (!data) {\n        return fills;\n      }\n      const events = decodeEventQueue(data, limit);\n      const fillsForMarket = events\n        .filter(\n          (event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0),\n        )\n        .map(market.parseFillEvent.bind(market));\n      const ownFillsForMarket = fillsForMarket\n        .filter((fill) => fill.openOrders.equals(openOrdersAccount.publicKey))\n        .map((fill) => ({ ...fill, marketName }));\n      fills = fills.concat(ownFillsForMarket);\n    }\n\n    console.log(JSON.stringify(fills));\n    return fills;\n  }\n\n  return useAsyncData(\n    getFillsForAllMarkets,\n    tuple('getFillsForAllMarkets', connected, connection, allMarkets, wallet),\n    { refreshInterval: _FAST_REFRESH_INTERVAL },\n  );\n}\n\n// TODO: Update to use websocket\nexport function useOpenOrdersForAllMarkets() {\n  const [connected, wallet] = useWallet();\n\n  const connection = useConnection();\n  const allMarkets = useAllMarkets();\n\n  async function getOpenOrdersForAllMarkets() {\n    let orders = [];\n    if (!connected) {\n      return orders;\n    }\n\n    let marketData;\n    for (marketData of allMarkets) {\n      const { market, marketName } = marketData;\n      if (!market) {\n        return orders;\n      }\n      const openOrdersAccounts = await market.findOpenOrdersAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n      const openOrdersAccount = openOrdersAccounts && openOrdersAccounts[0];\n      if (!openOrdersAccount) {\n        return orders;\n      }\n      const [bids, asks] = await Promise.all([\n        market.loadBids(connection),\n        market.loadAsks(connection),\n      ]);\n      const ordersForMarket = [...bids, ...asks]\n        .filter((order) => {\n          return order.openOrdersAddress.equals(openOrdersAccount.publicKey);\n        })\n        .map((order) => {\n          return { ...order, marketName };\n        });\n      orders = orders.concat(ordersForMarket);\n    }\n\n    return orders;\n  }\n\n  return useAsyncData(\n    getOpenOrdersForAllMarkets,\n    tuple(\n      'getOpenOrdersForAllMarkets',\n      connected,\n      connection,\n      wallet,\n      allMarkets,\n    ),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useBalances() {\n  const [baseCurrencyBalances] = useBaseCurrencyBalances();\n  const [quoteCurrencyBalances] = useQuoteCurrencyBalances();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const baseExists =\n    openOrdersAccount &&\n    openOrdersAccount.baseTokenTotal &&\n    openOrdersAccount.baseTokenFree;\n  const quoteExists =\n    openOrdersAccount &&\n    openOrdersAccount.quoteTokenTotal &&\n    openOrdersAccount.quoteTokenFree;\n  return [\n    {\n      key: baseCurrency,\n      coin: baseCurrency,\n      wallet: baseCurrencyBalances,\n      orders:\n        baseExists && market\n          ? market.baseSplSizeToNumber(\n              openOrdersAccount.baseTokenTotal.sub(\n                openOrdersAccount.baseTokenFree,\n              ),\n            )\n          : null,\n      unsettled:\n        baseExists && market\n          ? market.baseSplSizeToNumber(openOrdersAccount.baseTokenFree)\n          : null,\n    },\n    {\n      key: quoteCurrency,\n      coin: quoteCurrency,\n      wallet: quoteCurrencyBalances,\n      orders:\n        quoteExists && market\n          ? market.quoteSplSizeToNumber(\n              openOrdersAccount.quoteTokenTotal.sub(\n                openOrdersAccount.quoteTokenFree,\n              ),\n            )\n          : null,\n      unsettled:\n        quoteExists && market\n          ? market.quoteSplSizeToNumber(openOrdersAccount.quoteTokenFree)\n          : null,\n    },\n  ];\n}\n\nexport function useWalletBalancesForAllMarkets() {\n  const [connected, wallet] = useWallet();\n\n  const connection = useConnection();\n  const allMarkets = useAllMarkets();\n\n  async function getWalletBalancesForAllMarkets() {\n    let balances = [];\n    if (!connected) {\n      return balances;\n    }\n\n    let marketData;\n    for (marketData of allMarkets) {\n      const { market, marketName } = marketData;\n      if (!market) {\n        return balances;\n      }\n      const baseCurrency = marketName.includes('/') && marketName.split('/')[0];\n      if (!balances.find((balance) => balance.coin === baseCurrency)) {\n        const baseBalance = await getCurrencyBalance(\n          market,\n          connection,\n          wallet,\n          true,\n        );\n        balances.push({\n          key: baseCurrency,\n          coin: baseCurrency,\n          wallet: baseBalance,\n        });\n      }\n      const quoteCurrency =\n        marketName.includes('/') && marketName.split('/')[1];\n      if (!balances.find((balance) => balance.coin === quoteCurrency)) {\n        const quoteBalance = await getCurrencyBalance(\n          market,\n          connection,\n          wallet,\n          false,\n        );\n        balances.push({\n          key: quoteCurrency,\n          coin: quoteCurrency,\n          wallet: quoteBalance,\n        });\n      }\n    }\n\n    return balances;\n  }\n\n  return useAsyncData(\n    getWalletBalancesForAllMarkets,\n    tuple(\n      'getWalletBalancesForAllMarkets',\n      connected,\n      connection,\n      wallet,\n      allMarkets,\n    ),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nasync function getCurrencyBalance(market, connection, wallet, base = true) {\n  const currencyAccounts = base\n    ? await market.findBaseTokenAccountsForOwner(connection, wallet.publicKey)\n    : await market.findQuoteTokenAccountsForOwner(connection, wallet.publicKey);\n  const currencyAccount = currencyAccounts && currencyAccounts[0];\n  const tokenAccountBalances = await connection.getTokenAccountBalance(\n    currencyAccount.pubkey,\n  );\n  return tokenAccountBalances?.value?.uiAmount;\n}\n\nexport function useOpenOrderAccountBalancesForAllMarkets() {\n  const [connected, wallet] = useWallet();\n\n  const connection = useConnection();\n  const allMarkets = useAllMarkets();\n\n  async function getOpenOrderAccountsForAllMarkets() {\n    let accounts = [];\n    if (!connected) {\n      return accounts;\n    }\n\n    let marketData;\n    for (marketData of allMarkets) {\n      const { market, marketName } = marketData;\n      if (!market) {\n        return accounts;\n      }\n      const openOrderAccounts = await market.findOpenOrdersAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n      if (!openOrderAccounts) {\n        continue;\n      }\n      const baseCurrencyAccounts = await market.findBaseTokenAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n      const quoteCurrencyAccounts = await market.findQuoteTokenAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n\n      const baseCurrency = marketName.includes('/') && marketName.split('/')[0];\n      const quoteCurrency =\n        marketName.includes('/') && marketName.split('/')[1];\n\n      const openOrderAccountBalances = [];\n      openOrderAccounts.forEach((openOrdersAccount) => {\n        const inOrdersBase =\n          openOrdersAccount?.baseTokenTotal &&\n          openOrdersAccount?.baseTokenFree &&\n          market.baseSplSizeToNumber(\n            openOrdersAccount.baseTokenTotal.sub(\n              openOrdersAccount.baseTokenFree,\n            ),\n          );\n        const inOrdersQuote =\n          openOrdersAccount?.quoteTokenTotal &&\n          openOrdersAccount?.quoteTokenFree &&\n          market.baseSplSizeToNumber(\n            openOrdersAccount.quoteTokenTotal.sub(\n              openOrdersAccount.quoteTokenFree,\n            ),\n          );\n        const unsettledBase =\n          openOrdersAccount?.baseTokenFree &&\n          market.baseSplSizeToNumber(openOrdersAccount.baseTokenFree);\n        const unsettledQuote =\n          openOrdersAccount?.quoteTokenFree &&\n          market.baseSplSizeToNumber(openOrdersAccount.quoteTokenFree);\n        openOrderAccountBalances.push({\n          market: marketName,\n          coin: baseCurrency,\n          key: baseCurrency,\n          orders: inOrdersBase,\n          unsettled: unsettledBase,\n          openOrdersAccount: openOrdersAccount,\n          baseCurrencyAccount: baseCurrencyAccounts && baseCurrencyAccounts[0],\n          quoteCurrencyAccount:\n            quoteCurrencyAccounts && quoteCurrencyAccounts[0],\n        });\n        openOrderAccountBalances.push({\n          market: marketName,\n          coin: quoteCurrency,\n          key: quoteCurrency,\n          orders: inOrdersQuote,\n          unsettled: unsettledQuote,\n          openOrdersAccount: openOrdersAccount,\n          baseCurrencyAccount: baseCurrencyAccounts && baseCurrencyAccounts[0],\n          quoteCurrencyAccount:\n            quoteCurrencyAccounts && quoteCurrencyAccounts[0],\n        });\n      });\n      accounts = accounts.concat(openOrderAccountBalances);\n    }\n\n    return accounts;\n  }\n\n  return useAsyncData(\n    getOpenOrderAccountsForAllMarkets,\n    tuple(\n      'getOpenOrderAccountsForAllMarkets',\n      connected,\n      connection,\n      wallet,\n      allMarkets,\n    ),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\nhtml,body{\n  background: #11161D;\n  min-width: 770px;\n}\ninput[type=number]::-webkit-inner-spin-button {\n  opacity: 0;\n}\ninput[type=number]:hover::-webkit-inner-spin-button,\ninput[type=number]:focus::-webkit-inner-spin-button {\n  opacity: 0.25;\n}\n/* width */\n::-webkit-scrollbar {\n  width: 15px;\n}\n/* Track */\n::-webkit-scrollbar-track {\n  background: #2d313c;\n}\n/* Handle */\n::-webkit-scrollbar-thumb {\n  background: #5b5f67;\n}\n/* Handle on hover */\n::-webkit-scrollbar-thumb:hover {\n  background: #5b5f67;\n}\n.ant-slider-track, .ant-slider:hover .ant-slider-track {\n  background-color: #2abdd2;\n  opacity: 0.75;\n}\n.ant-slider-track,\n.ant-slider ant-slider-track:hover {\n  background-color: #2abdd2;\n  opacity: 0.75;\n}\n.ant-slider-dot-active,\n.ant-slider-handle,\n.ant-slider-handle-click-focused,\n.ant-slider:hover .ant-slider-handle:not(.ant-tooltip-open)  {\n  border: 2px solid #2abdd2; \n}\n.ant-table-tbody > tr.ant-table-row:hover > td {\n  background: #273043;\n}\n.ant-table-tbody > tr > td {\n  border-bottom: 8px solid #1A2029;\n}\n.ant-table-container table > thead > tr:first-child th {\n  border-bottom: none;\n}\n.ant-divider-horizontal.ant-divider-with-text::before, .ant-divider-horizontal.ant-divider-with-text::after {\n  border-top: 1px solid #434a59 !important;\n}\n.ant-layout {\n    background: #11161D\n  }\n  .ant-table {\n    background: #212734;\n  }\n  .ant-table-thead > tr > th {\n    background: #1A2029;\n  }\n.ant-select-item-option-content {\n  img {\n    margin-right: 4px;\n  }\n}\n.ant-modal-content {\n  background-color: #212734;\n}\n\n@-webkit-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n@-moz-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n@-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n.flash {\n  -moz-animation: highlight 0.5s ease 0s 1 alternate ;\n  -webkit-animation: highlight 0.5s ease 0s 1 alternate;\n  animation: highlight 0.5s ease 0s 1 alternate;\n}`;\n","import React, { Component } from 'react';\nimport { Typography } from 'antd';\n\nconst { Title } = Typography;\n\nexport default class ErrorBoundary extends Component {\n  state = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div>\n          <div>\n            <Title level={2}>Something went wrong.</Title>\n            <Title level={4}>Please try again later.</Title>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  margin: 5px;\n  padding: 20px;\n  background-color: #1a2029;\n`;\n\nexport default function FloatingElement({ style, children }) {\n  return <Wrapper style={{ ...style }}>{children}</Wrapper>;\n}\n","import { Col, Row } from 'antd';\nimport React, { useRef, useEffect } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useMarket, useOrderbook, useMarkPrice } from '../utils/markets';\nimport { isEqual, getDecimalCount } from '../utils/utils';\nimport FloatingElement from './layout/FloatingElement';\nimport usePrevious from '../utils/usePrevious';\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\n\nconst SizeTitle = styled(Row)`\n  padding: 20px 0 14px;\n  color: #434a59;\n`;\n\nconst MarkPriceTitle = styled(Row)`\n  padding: 20px 0 14px;\n  font-weight: 700;\n`;\n\nconst Line = styled.div`\n  text-align: right;\n  float: right;\n  height: 100%;\n  ${(props) =>\n    props['data-width'] &&\n    css`\n      width: ${props['data-width']};\n    `}\n  ${(props) =>\n    props['data-bgcolor'] &&\n    css`\n      background-color: ${props['data-bgcolor']};\n    `}\n`;\n\nconst Price = styled.div`\n  position: absolute;\n  right: 5px;\n  color: white;\n`;\n\nexport default function Orderbook({ smallScreen, depth = 7, onPrice, onSize }) {\n  const markPrice = useMarkPrice();\n  const [orderbook, loaded] = useOrderbook();\n  const { baseCurrency, quoteCurrency } = useMarket();\n\n  let bids = [];\n  let asks = [];\n  if (loaded) {\n    bids = orderbook.bids;\n    asks = orderbook.asks;\n  }\n\n  function getCumulativeOrderbookSide(orders, backwards = false) {\n    let cumulative = [];\n    let cumulativeSize = 0;\n    orders.forEach(([price, size]) => {\n      if (cumulative.length < depth) {\n        cumulativeSize += size;\n        cumulative.push({ price, size, cumulativeSize });\n      }\n    });\n    if (backwards) {\n      cumulative = cumulative.reverse();\n    }\n    let totalSize =\n      cumulative.length > 0 &&\n      cumulative[backwards ? 0 : cumulative.length - 1].cumulativeSize;\n    return [cumulative, totalSize];\n  }\n\n  let [asksToDisplay, totalAskSize] = getCumulativeOrderbookSide(asks, true);\n  let [bidsToDisplay, totalBidSize] = getCumulativeOrderbookSide(bids, false);\n\n  let totalSize = totalAskSize + totalBidSize;\n\n  return (\n    <FloatingElement\n      style={\n        smallScreen ? { flex: 1 } : { height: '500px', overflow: 'hidden' }\n      }\n    >\n      <Title>Orderbook</Title>\n      <SizeTitle>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          Size ({baseCurrency})\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          Price ({quoteCurrency})\n        </Col>\n      </SizeTitle>\n      {asksToDisplay.map(({ price, size, cumulativeSize }, index) => (\n        <OrderbookRow\n          index={index}\n          price={price}\n          size={size}\n          side={'sell'}\n          sizePercent={(cumulativeSize / (totalSize || 1)) * 100}\n          onSizeClick={() => onSize(size)}\n          onPriceClick={() => onPrice(price)}\n        />\n      ))}\n      <MarkPriceComponent markPrice={markPrice} />\n      {bidsToDisplay.map(({ price, size, cumulativeSize }, index) => (\n        <OrderbookRow\n          index={index}\n          price={price}\n          size={size}\n          side={'buy'}\n          sizePercent={(cumulativeSize / (totalSize || 1)) * 100}\n          onSizeClick={() => onSize(size)}\n          onPriceClick={() => onPrice(price)}\n        />\n      ))}\n    </FloatingElement>\n  );\n}\n\nconst OrderbookRow = React.memo(\n  ({ index, side, price, size, sizePercent, onSizeClick, onPriceClick }) => {\n    const element = useRef();\n\n    useEffect(() => {\n      // eslint-disable-next-line\n      let _ = element.current?.classList.add('flash');\n      setTimeout(() => element.current?.classList.remove('flash'), 500);\n    }, [price, size]);\n\n    return (\n      <Row\n        ref={element}\n        id={index + ''}\n        style={{ marginBottom: 1 }}\n        onClick={onSizeClick}\n      >\n        <Col span={12} style={{ textAlign: 'left' }}>\n          {size}\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          <Line\n            data-width={sizePercent + '%'}\n            data-bgcolor={\n              side === 'buy'\n                ? 'rgba(65, 199, 122, 0.6)'\n                : 'rgba(242, 60, 105, 0.6)'\n            }\n          />\n          <Price onClick={onPriceClick}>{price}</Price>\n        </Col>\n      </Row>\n    );\n  },\n  (prevProps, nextProps) =>\n    isEqual(prevProps, nextProps, ['side', 'price', 'size', 'sizePercent']),\n);\n\nconst MarkPriceComponent = React.memo(\n  ({ markPrice }) => {\n    const { priceStep } = useMarket();\n    const previousMarkPrice = usePrevious(markPrice);\n\n    let markPriceColor =\n      markPrice > previousMarkPrice\n        ? '#41C77A'\n        : markPrice < previousMarkPrice\n        ? '#F23B69'\n        : 'white';\n\n    return (\n      <MarkPriceTitle justify=\"center\">\n        <Col style={{ color: markPriceColor }}>\n          {markPrice > previousMarkPrice && (\n            <ArrowUpOutlined style={{ marginRight: 5 }} />\n          )}\n          {markPrice < previousMarkPrice && (\n            <ArrowDownOutlined style={{ marginRight: 5 }} />\n          )}\n          {markPrice\n            ? priceStep\n              ? markPrice.toFixed(getDecimalCount(priceStep))\n              : markPrice\n            : '----'}\n        </Col>\n      </MarkPriceTitle>\n    );\n  },\n  (prevProps, nextProps) => isEqual(prevProps, nextProps, ['markPrice']),\n);\n","import { useEffect, useRef } from 'react';\n\nexport default function usePrevious(value) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef();\n\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n\n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\n","import React from 'react';\nimport { ConfigProvider, Table } from 'antd';\n\nexport default function DataTable({\n  dataSource,\n  columns,\n  emptyLabel = 'No data',\n  pagination = false,\n  loading = false,\n  pageSize = 10,\n}) {\n  const customizeRenderEmpty = () => (\n    <div\n      style={{\n        padding: '20px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      {emptyLabel}\n    </div>\n  );\n\n  return (\n    <ConfigProvider renderEmpty={customizeRenderEmpty}>\n      <Table\n        dataSource={dataSource}\n        columns={columns}\n        pagination={pagination ? { pagination: true, pageSize } : false}\n        loading={loading}\n      />\n    </ConfigProvider>\n  );\n}\n","import { notify } from './notifications';\nimport nacl from 'tweetnacl';\nimport { sleep } from './utils';\nimport { Transaction } from '@solana/web3.js';\n\nexport async function settleFunds({\n  market,\n  openOrders,\n  connection,\n  wallet,\n  baseCurrencyAccount,\n  quoteCurrencyAccount,\n}) {\n  if (\n    !market ||\n    !wallet ||\n    !connection ||\n    !openOrders ||\n    !baseCurrencyAccount ||\n    !quoteCurrencyAccount\n  ) {\n    notify({ message: 'Not connected' });\n    return;\n  }\n  const transaction = await market.makeSettleFundsTransaction(\n    connection,\n    openOrders,\n    baseCurrencyAccount.pubkey,\n    quoteCurrencyAccount.pubkey,\n  );\n  const onConfirm = (result) => {\n    if (result.err) {\n      console.log(result.err);\n      notify({ message: 'Error settling funds', type: 'error' });\n    } else {\n      notify({ message: 'Fund settlement confirmed', type: 'success' });\n    }\n  };\n  const onBeforeSend = () => notify({ message: 'Settling funds...' });\n  const onAfterSend = () =>\n    notify({ message: 'Funds settled', type: 'success' });\n  return await sendTransaction({\n    transaction,\n    wallet,\n    connection,\n    onBeforeSend,\n    onAfterSend,\n    onConfirm,\n  });\n}\n\nexport async function cancelOrder(params) {\n  return cancelOrders({ ...params, orders: [params.order] });\n}\n\nexport async function cancelOrders({\n  market,\n  wallet,\n  connection,\n  orders,\n  onBeforeSendCallBack,\n  onAfterSendCallBack,\n  onConfirmCallBack,\n}) {\n  const transaction = new Transaction();\n  transaction.add(market.makeMatchOrdersInstruction(5));\n  orders.forEach((order) => {\n    transaction.add(\n      market.makeCancelOrderInstruction(connection, wallet.publicKey, order),\n    );\n  });\n  transaction.add(market.makeMatchOrdersInstruction(5));\n  const onConfirm = (result) => {\n    if (result.err) {\n      console.log(result.err);\n      notify({\n        message:\n          orders.length > 1\n            ? 'Error cancelling orders'\n            : 'Error cancelling order',\n        type: 'error',\n      });\n    } else {\n      notify({\n        message:\n          orders.length > 1\n            ? 'Order cancellations confirmed'\n            : 'Order cancellation confirmed',\n        type: 'success',\n      });\n    }\n    onConfirmCallBack && onConfirmCallBack();\n  };\n  const onBeforeSend = () => {\n    notify({ message: 'Sending cancel...' });\n    onBeforeSendCallBack && onBeforeSendCallBack();\n  };\n  const onAfterSend = () => {\n    notify({\n      message: orders.length > 1 ? 'Orders cancelled' : 'Order cancelled',\n      type: 'success',\n    });\n    onAfterSendCallBack && onAfterSendCallBack();\n  };\n\n  return await sendTransaction({\n    transaction,\n    wallet,\n    connection,\n    onBeforeSend,\n    onAfterSend,\n    onConfirm,\n  });\n}\n\nexport async function placeOrder({\n  side,\n  price,\n  size,\n  orderType,\n  market,\n  connection,\n  wallet,\n  baseCurrencyAccount,\n  quoteCurrencyAccount,\n  openOrdersAccount,\n  onBeforeSendCallBack,\n  onAfterSendCallBack,\n  onConfirmCallBack,\n}) {\n  const isIncrement = (num, step) =>\n    Math.abs((num / step) % 1) < 1e-10 ||\n    Math.abs(((num / step) % 1) - 1) < 1e-10;\n  if (isNaN(price)) {\n    notify({ message: 'Invalid price', type: 'error' });\n    return;\n  }\n  if (isNaN(size)) {\n    notify({ message: 'Invalid size', type: 'error' });\n    return;\n  }\n  if (!wallet || !wallet.publicKey) {\n    notify({ message: 'Connect wallet', type: 'error' });\n    return;\n  }\n  if (!market) {\n    notify({ message: 'Invalid  market', type: 'error' });\n    return;\n  }\n  if (!isIncrement(size, market.minOrderSize)) {\n    notify({\n      message: `Size must be an increment of ${market.minOrderSize}`,\n      type: 'error',\n    });\n    return;\n  }\n  if (size < market.minOrderSize) {\n    notify({ message: 'Size too small', type: 'error' });\n    return;\n  }\n  if (!isIncrement(price, market.tickSize)) {\n    notify({\n      message: `Price must be an increment of ${market.tickSize}`,\n      type: 'error',\n    });\n    return;\n  }\n  if (price < market.tickSize) {\n    notify({ message: 'Price under tick size', type: 'error' });\n    return;\n  }\n  const owner = wallet.publicKey;\n\n  const payer = side === 'sell' ? baseCurrencyAccount : quoteCurrencyAccount;\n  if (!payer) {\n    notify({\n      message: 'Need an SPL token account for cost currency',\n      type: 'error',\n    });\n    return;\n  }\n  const params = {\n    owner,\n    payer,\n    side,\n    price,\n    size,\n    orderType,\n  };\n  let transaction, signers;\n  let extraSigners = [];\n\n  // If the user does not has an open orders account, use serum-js to create one\n  if (!openOrdersAccount) {\n    let result = await market.makePlaceOrderTransaction(connection, params);\n    transaction = result.transaction;\n    signers = result.signers;\n    if (signers.length > 1) {\n      extraSigners = [signers[1]];\n    }\n  } else {\n    transaction = new Transaction();\n    transaction.add(market.makeMatchOrdersInstruction(5));\n    transaction.add(\n      market.makePlaceOrderInstruction(connection, params, openOrdersAccount),\n    );\n  }\n\n  transaction.add(market.makeMatchOrdersInstruction(5));\n  const onConfirm = (result) => {\n    if (result.err) {\n      console.log(result.err);\n      notify({ message: 'Error placing order', type: 'error' });\n    } else {\n      notify({ message: 'Order confirmed', type: 'success' });\n    }\n    onConfirmCallBack && onConfirmCallBack();\n  };\n  const onBeforeSend = () => {\n    notify({ message: 'Sending order...' });\n    onBeforeSendCallBack && onBeforeSendCallBack();\n  };\n  const onAfterSend = () => {\n    notify({ message: 'Order sent', type: 'success' });\n    onAfterSendCallBack && onAfterSendCallBack();\n  };\n\n  return await sendTransaction({\n    transaction,\n    wallet,\n    connection,\n    onBeforeSend,\n    onAfterSend,\n    onConfirm,\n    extraSigners,\n  });\n}\n\nasync function sendTransaction({\n  transaction,\n  wallet,\n  connection,\n  onBeforeSend,\n  onAfterSend,\n  onConfirm,\n  extraSigners = [],\n}) {\n  transaction.recentBlockhash = (\n    await connection.getRecentBlockhash('max')\n  ).blockhash;\n  const signed = await wallet.signTransaction(transaction);\n  const signedAt = new Date().getTime();\n\n  // Don't rely on the open orders account being the 2nd element in the list\n  // Sign with any accounts with a pubkey different from that of the wallet\n  extraSigners.forEach((extraSigner) => {\n    const extraSignature = nacl.sign.detached(\n      signed.serializeMessage(),\n      extraSigner.secretKey,\n    );\n    signed.addSignature(extraSigner.publicKey, extraSignature);\n  });\n  onBeforeSend();\n\n  const txid = await connection.sendRawTransaction(signed.serialize(), {\n    skipPreflight: true,\n  });\n  console.log('Sent raw transaction, received TXID: ', txid);\n  const sentAt = new Date().getTime();\n  onAfterSend();\n\n  // Send a bunch of requests, staggered, and stop sending the other ones, resolve when getting back the first\n  const result = await getSignatureStatus(connection, txid);\n  const confirmedAt = new Date().getTime();\n  console.log(\n    'Confirmed',\n    (confirmedAt - sentAt) / 1000,\n    (confirmedAt - signedAt) / 1000,\n  );\n  onConfirm(result);\n  return txid;\n}\n\nasync function getSignatureStatus(connection, txid) {\n  let done = false;\n  const result = await new Promise((resolve, reject) => {\n    (async () => {\n      connection.onSignature(\n        txid,\n        (result, context) => {\n          if (!done) {\n            console.log('WS update for txid', txid, result);\n            resolve(result);\n            done = true;\n          }\n        },\n        'recent',\n      );\n      while (!done) {\n        // eslint-disable-next-line\n        (async () => {\n          try {\n            console.log('Send REST request for txid', txid);\n            const results = await connection.getSignatureStatuses([txid]);\n            const result = results && results.value && results.value[0];\n            console.log('Received REST response for txid', txid, result);\n            if (!result || (!result?.confirmations && !result?.err)) {\n              return;\n            }\n            if (!done) {\n              console.log('REST update for txid', txid, result);\n              done = true;\n              resolve(result);\n            }\n          } catch (e) {\n            if (!done) {\n              console.log('REST error for txid', txid, e);\n              done = true;\n              reject(e);\n            }\n          }\n        })();\n        await sleep(500);\n      }\n    })();\n  });\n  done = true;\n  return result;\n}\n","import { Button } from 'antd';\nimport React from 'react';\nimport {\n  useSelectedOpenOrdersAccount,\n  useMarket,\n  useSelectedBaseCurrencyAccount,\n  useSelectedQuoteCurrencyAccount,\n} from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\nimport { useConnection } from '../../utils/connection';\nimport { useWallet } from '../../utils/wallet';\nimport { settleFunds } from '../../utils/send';\n\nexport default function BalancesTable({ balances }) {\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const connection = useConnection();\n  const [, wallet] = useWallet();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const { market } = useMarket();\n\n  async function onSettleFunds() {\n    return await settleFunds({\n      market,\n      openOrders: openOrdersAccount,\n      connection,\n      wallet,\n      baseCurrencyAccount,\n      quoteCurrencyAccount,\n    });\n  }\n\n  const columns = [\n    {\n      title: 'Coin',\n      dataIndex: 'coin',\n      key: 'coin',\n    },\n    {\n      title: 'Wallet Balance',\n      dataIndex: 'wallet',\n      key: 'wallet',\n    },\n    {\n      title: 'Orders',\n      dataIndex: 'orders',\n      key: 'orders',\n    },\n    {\n      title: 'Unsettled',\n      dataIndex: 'unsettled',\n      key: 'unsettled',\n    },\n    {\n      key: 'action',\n      render: () => (\n        <div style={{ textAlign: 'right' }}>\n          <Button ghost style={{ marginRight: 12 }} onClick={onSettleFunds}>\n            Settle\n          </Button>\n        </div>\n      ),\n    },\n  ];\n  return (\n    <DataTable\n      emptyLabel=\"No balances\"\n      dataSource={balances}\n      columns={columns}\n      pagination={false}\n    />\n  );\n}\n","import React, { useState } from 'react';\nimport { useMarket } from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\n\nimport styled from 'styled-components';\nimport { Button, Row, Col, Tag } from 'antd';\nimport { cancelOrder } from '../../utils/send';\nimport { useWallet } from '../../utils/wallet';\nimport { useConnection } from '../../utils/connection';\nimport { notify } from '../../utils/notifications';\nimport { DeleteOutlined } from '@ant-design/icons';\n\nconst CancelButton = styled(Button)`\n  color: #f23b69;\n  border: 1px solid #f23b69;\n`;\n\nexport default function OpenOrderTable({ openOrders }) {\n  let { market } = useMarket();\n  let [, wallet] = useWallet();\n  let connection = useConnection();\n\n  const [cancelId, setCancelId] = useState(null);\n\n  async function cancel(order) {\n    try {\n      await cancelOrder({\n        order,\n        market,\n        connection,\n        wallet,\n        onBeforeSendCallBack: () => setCancelId(order?.orderId),\n        onConfirmCallBack: () => setCancelId(null),\n      });\n    } catch (e) {\n      notify({\n        message: 'Error cancelling order: ' + e.message,\n        type: 'error',\n      });\n      setCancelId(null);\n    }\n  }\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'marketName',\n      key: 'marketName',\n    },\n    {\n      title: 'Side',\n      dataIndex: 'side',\n      key: 'side',\n      render: (side) => (\n        <Tag\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\n          style={{ fontWeight: 700 }}\n        >\n          {side.charAt(0).toUpperCase() + side.slice(1)}\n        </Tag>\n      ),\n    },\n    {\n      title: 'Size',\n      dataIndex: 'size',\n      key: 'size',\n    },\n    {\n      title: 'Price',\n      dataIndex: 'price',\n      key: 'price',\n    },\n    {\n      key: 'orderId',\n      render: (order) => (\n        <div style={{ textAlign: 'right' }}>\n          <CancelButton\n            icon={<DeleteOutlined />}\n            onClick={() => cancel(order)}\n            loading={cancelId + '' === order?.orderId + ''}\n          >\n            Cancel\n          </CancelButton>\n        </div>\n      ),\n    },\n  ];\n  let orders = openOrders;\n  const dataSource = (orders || []).map((order) =>\n    Object.assign(order, { key: order.orderId }),\n  );\n\n  return (\n    <Row>\n      <Col span={24}>\n        <DataTable\n          emptyLabel=\"No open orders\"\n          dataSource={dataSource}\n          columns={columns}\n          pagination={true}\n          pageSize={5}\n        />\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react';\nimport { Row, Col, Tag } from 'antd';\nimport { useFills, useMarket } from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\n\nexport default function FillsTable() {\n  const fills = useFills();\n\n  const { quoteCurrency } = useMarket();\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'marketName',\n      key: 'marketName',\n    },\n    {\n      title: 'Side',\n      dataIndex: 'side',\n      key: 'side',\n      render: (side) => (\n        <Tag\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\n          style={{ fontWeight: 700 }}\n        >\n          {side.charAt(0).toUpperCase() + side.slice(1)}\n        </Tag>\n      ),\n    },\n    {\n      title: `Size`,\n      dataIndex: 'size',\n      key: 'size',\n    },\n    {\n      title: `Price`,\n      dataIndex: 'price',\n      key: 'price',\n    },\n    {\n      title: `Liquidity`,\n      dataIndex: 'liquidity',\n      key: 'liquidity',\n    },\n    {\n      title: quoteCurrency ? `Fees (${quoteCurrency})` : 'Fees',\n      dataIndex: 'feeCost',\n      key: 'feeCost',\n    },\n  ];\n\n  const dataSource = (fills || []).map((fill) => ({\n    ...fill,\n    key: `${fill.orderId}${fill.side}`,\n    liquidity: fill.eventFlags.maker ? 'Maker' : 'Taker',\n  }));\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <DataTable\n            dataSource={dataSource}\n            columns={columns}\n            pagination={true}\n            pageSize={5}\n            emptyLabel=\"No fills\"\n          />\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import BalancesTable from './BalancesTable';\nimport OpenOrderTable from './OpenOrderTable';\nimport React from 'react';\nimport { Tabs } from 'antd';\nimport FillsTable from './FillsTable';\nimport FloatingElement from '../layout/FloatingElement';\nimport { useOpenOrders, useBalances } from '../../utils/markets';\n\nconst { TabPane } = Tabs;\n\nexport default function Index() {\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <Tabs defaultActiveKey=\"orders\">\n        <TabPane tab=\"Open Orders\" key=\"orders\">\n          <OpenOrdersTab />\n        </TabPane>\n        <TabPane tab=\"Recent Trade History\" key=\"fills\">\n          <FillsTable />\n        </TabPane>\n        <TabPane tab=\"Balances\" key=\"balances\">\n          <BalancesTab />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\nconst OpenOrdersTab = () => {\n  const openOrders = useOpenOrders();\n\n  return <OpenOrderTable openOrders={openOrders} />;\n};\n\nconst BalancesTab = () => {\n  const balances = useBalances();\n\n  return <BalancesTable balances={balances} />;\n};\n","import React from 'react';\nimport { Modal } from 'antd';\nimport {\n  COIN_MINTS,\n  useSelectedBaseCurrencyAccount,\n  useMarket,\n  useSelectedQuoteCurrencyAccount,\n} from '../utils/markets';\nimport { useWallet } from '../utils/wallet';\n\nexport default function DepositDialog({ onClose, depositCoin }) {\n  let coinMint =\n    depositCoin &&\n    Object.keys(COIN_MINTS).find(\n      (address) => COIN_MINTS[address] === depositCoin,\n    );\n  const { market } = useMarket();\n  const [, , , , providerName] = useWallet();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  let account;\n  if (market?.baseMintAddress?.toBase58() === coinMint) {\n    account = baseCurrencyAccount;\n  } else {\n    account = quoteCurrencyAccount;\n  }\n  if (!coinMint) {\n    return null;\n  }\n  return (\n    <Modal\n      title={depositCoin}\n      visible={!!coinMint}\n      onOk={onClose}\n      onCancel={onClose}\n    >\n      <div style={{ paddingTop: '20px' }}>\n        <p style={{ color: 'white' }}>Mint address:</p>\n        <p style={{ color: 'rgba(255,255,255,0.5)' }}>{coinMint}</p>\n        <div>\n          <p style={{ color: 'white' }}>Deposit address:</p>\n          <p style={{ color: 'rgba(255,255,255,0.5)' }}>\n            {account\n              ? account.pubkey.toBase58()\n              : `Visit ${providerName} to create an account for this mint`}\n          </p>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n","import { Button, Col, Row, Divider } from 'antd';\nimport React, { useState } from 'react';\nimport FloatingElement from './layout/FloatingElement';\nimport styled from 'styled-components';\nimport {\n  useBaseCurrencyBalances,\n  useQuoteCurrencyBalances,\n  useMarket,\n} from '../utils/markets';\nimport DepositDialog from './DepositDialog';\nimport { useWallet, WALLET_PROVIDERS } from '../utils/wallet';\n\nconst RowBox = styled(Row)`\n  padding-bottom: 20px;\n`;\n\nconst Tip = styled.p`\n  font-size: 12px;\n  color: #2abdd2;\n  padding-top: 6px;\n`;\n\nconst ActionButton = styled(Button)`\n  color: #2abdd2;\n  background-color: #212734;\n  border-width: 0px;\n`;\n\nexport default function StandaloneBalancesDisplay() {\n  const { baseCurrency, quoteCurrency } = useMarket();\n\n  const [baseCurrencyBalances] = useBaseCurrencyBalances();\n  const [quoteCurrencyBalances] = useQuoteCurrencyBalances();\n  let [, , providerUrl] = useWallet();\n  const [depositCoin, setDepositCoin] = useState('');\n  const providerName = WALLET_PROVIDERS.find(({ url }) => url === providerUrl)\n    ?.name;\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <Divider style={{ borderColor: 'white' }}>{baseCurrency}</Divider>\n      <RowBox\n        align=\"middle\"\n        justify=\"space-between\"\n        style={{ paddingBottom: 12 }}\n      >\n        <Col>{baseCurrency} wallet balance:</Col>\n        <Col>{baseCurrencyBalances}</Col>\n      </RowBox>\n      <RowBox align=\"middle\" justify=\"space-around\">\n        <Col style={{ width: 150 }}>\n          <ActionButton\n            block\n            size=\"large\"\n            onClick={() => setDepositCoin(baseCurrency)}\n          >\n            Deposit\n          </ActionButton>\n        </Col>\n        {/*<Col style={{ width: 150 }}>*/}\n        {/*  <ActionButton block size=\"large\">*/}\n        {/*    Send*/}\n        {/*  </ActionButton>*/}\n        {/*</Col>*/}\n      </RowBox>\n      <Tip>All deposits go to your {providerName} wallet</Tip>\n      <Divider>{quoteCurrency}</Divider>\n      <RowBox\n        align=\"middle\"\n        justify=\"space-between\"\n        style={{ paddingBottom: 12 }}\n      >\n        <Col>{quoteCurrency} wallet balance:</Col>\n        <Col>{quoteCurrencyBalances}</Col>\n      </RowBox>\n      <RowBox align=\"middle\" justify=\"space-around\">\n        <Col style={{ width: 150 }}>\n          <ActionButton\n            block\n            size=\"large\"\n            onClick={() => setDepositCoin(quoteCurrency)}\n          >\n            Deposit\n          </ActionButton>\n        </Col>\n        {/*<Col style={{ width: 150 }}>*/}\n        {/*  <ActionButton block size=\"large\">*/}\n        {/*    Send*/}\n        {/*  </ActionButton>*/}\n        {/*</Col>*/}\n      </RowBox>\n      <Tip>All deposits go to your {providerName} wallet</Tip>\n      <DepositDialog\n        depositCoin={depositCoin}\n        onClose={() => setDepositCoin('')}\n      />\n    </FloatingElement>\n  );\n}\n","import { Button, Input, Radio, Switch, Slider } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport {\n  useBaseCurrencyBalances,\n  useQuoteCurrencyBalances,\n  useMarket,\n  useMarkPrice,\n  useSelectedOpenOrdersAccount,\n  useSelectedBaseCurrencyAccount,\n  useSelectedQuoteCurrencyAccount,\n} from '../utils/markets';\nimport { useWallet } from '../utils/wallet';\nimport { notify } from '../utils/notifications';\nimport { getDecimalCount } from '../utils/utils';\nimport { useSendConnection } from '../utils/connection';\nimport FloatingElement from './layout/FloatingElement';\nimport { placeOrder } from '../utils/send';\n\nconst InputBox = styled(Input)`\n  text-align: right;\n  padding-bottom: 16px;\n`;\n\nconst SellButton = styled(Button)`\n  margin: 20px 0px 0px 0px;\n  background: #f23b69;\n  border-color: #f23b69;\n`;\n\nconst BuyButton = styled(Button)`\n  margin: 20px 0px 0px 0px;\n  background: #02bf76;\n  border-color: #02bf76;\n`;\n\nconst sliderMarks = {\n  0: '0%',\n  25: '25%',\n  50: '50%',\n  75: '75%',\n  100: '100%',\n};\n\nexport default function TradeForm({ style, setChangeOrderRef }) {\n  const [side, setSide] = useState('buy');\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const [baseCurrencyBalances] = useBaseCurrencyBalances();\n  const [quoteCurrencyBalances] = useQuoteCurrencyBalances();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const [, wallet] = useWallet();\n  const sendConnection = useSendConnection();\n  const markPrice = useMarkPrice();\n\n  const [postOnly, setPostOnly] = useState(false);\n  const [ioc, setIoc] = useState(false);\n  const [size, setSize] = useState(null);\n  const [price, setPrice] = useState(null);\n  const [submitting, setSubmitting] = useState(false);\n\n  const availableQuote = openOrdersAccount\n    ? market.quoteSplSizeToNumber(openOrdersAccount.quoteTokenFree)\n    : 0;\n\n  const maxQuoteSize = quoteCurrencyBalances + availableQuote;\n\n  const sizeFraction =\n    (price && size && maxQuoteSize && baseCurrencyBalances && side === 'buy'\n      ? ((price * size) / Math.floor(maxQuoteSize)) * 100\n      : (size / baseCurrencyBalances) * 100) || 0;\n\n  useEffect(() => {\n    setChangeOrderRef && setChangeOrderRef(doChangeOrder);\n  }, [setChangeOrderRef]);\n\n  useEffect(() => {\n    sizeFraction && onSliderChange(sizeFraction);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [side, sizeFraction]);\n\n  const doChangeOrder = ({ size, price }) => {\n    size && setSize(size);\n    price && setPrice(price);\n  };\n\n  const onSliderChange = (value) => {\n    if (!maxQuoteSize || !baseCurrencyBalances) {\n      return;\n    }\n\n    if (!price) {\n      markPrice && setPrice(markPrice);\n    }\n\n    let newSize;\n    if (side === 'buy') {\n      if (price || markPrice) {\n        newSize =\n          ((Math.floor(maxQuoteSize) / (price || markPrice)) * value) / 100;\n      }\n    } else {\n      newSize = (Math.floor(baseCurrencyBalances) * value) / 100;\n    }\n\n    setSize(\n      market?.minOrderSize\n        ? newSize.toFixed(getDecimalCount(market.minOrderSize))\n        : newSize,\n    );\n  };\n\n  const postOnChange = (checked) => {\n    if (checked) {\n      setIoc(false);\n    }\n    setPostOnly(checked);\n  };\n  const iocOnChange = (checked) => {\n    if (checked) {\n      setPostOnly(false);\n    }\n    setIoc(checked);\n  };\n\n  async function onSubmit() {\n    const parsedPrice = parseFloat(price);\n    const parsedSize = parseFloat(size);\n\n    setSubmitting(true);\n    try {\n      !(await placeOrder({\n        side,\n        price: parsedPrice,\n        size: parsedSize,\n        orderType: ioc ? 'ioc' : postOnly ? 'postOnly' : 'limit',\n        market,\n        connection: sendConnection,\n        wallet,\n        baseCurrencyAccount: baseCurrencyAccount?.pubkey?.toBase58(),\n        quoteCurrencyAccount: quoteCurrencyAccount?.pubkey?.toBase58(),\n        openOrdersAccount: openOrdersAccount?.pubkey?.toBase58(),\n        onBeforeSendCallBack: () => setSubmitting(true),\n        onConfirmCallBack: () => setSubmitting(false),\n      })) && setSubmitting(false);\n    } catch (e) {\n      notify({ message: 'Error placing order: ' + e.message, type: 'error' });\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <FloatingElement\n      style={{ display: 'flex', flexDirection: 'column', ...style }}\n    >\n      <div style={{ flex: 1 }}>\n        <Radio.Group\n          onChange={(e) => setSide(e.target.value)}\n          value={side}\n          buttonStyle=\"solid\"\n          style={{\n            marginBottom: 8,\n            width: '100%',\n          }}\n        >\n          <Radio.Button\n            value=\"buy\"\n            style={{\n              width: '50%',\n              textAlign: 'center',\n              background: side === 'buy' ? '#02bf76' : '',\n              borderColor: side === 'buy' ? '#02bf76' : '',\n            }}\n          >\n            BUY\n          </Radio.Button>\n          <Radio.Button\n            value=\"sell\"\n            style={{\n              width: '50%',\n              textAlign: 'center',\n              background: side === 'sell' ? '#F23B69' : '',\n              borderColor: side === 'sell' ? '#F23B69' : '',\n            }}\n          >\n            SELL\n          </Radio.Button>\n        </Radio.Group>\n        <InputBox\n          addonBefore={`Price (${quoteCurrency})`}\n          placeholder=\"Price\"\n          value={price}\n          type=\"number\"\n          step={market?.tickSize || 1}\n          onChange={(e) => setPrice(e.target.value)}\n        />\n        <InputBox\n          addonBefore={`Size (${baseCurrency})`}\n          placeholder=\"Size\"\n          value={size}\n          type=\"number\"\n          step={market?.minOrderSize || 1}\n          onChange={(e) => setSize(e.target.value)}\n        />\n        <Slider\n          value={sizeFraction}\n          tipFormatter={(value) => `${value}%`}\n          marks={sliderMarks}\n          onChange={onSliderChange}\n        />\n        <div style={{ paddingTop: 18 }}>\n          {'POST '}\n          <Switch\n            checked={postOnly}\n            onChange={postOnChange}\n            style={{ marginRight: 40 }}\n          />\n          {'IOC '}\n          <Switch checked={ioc} onChange={iocOnChange} />\n        </div>\n      </div>\n      {side === 'buy' ? (\n        <BuyButton\n          disabled={!price || !size}\n          onClick={onSubmit}\n          block\n          type=\"primary\"\n          size=\"large\"\n          loading={submitting}\n        >\n          Buy {baseCurrency}\n        </BuyButton>\n      ) : (\n        <SellButton\n          disabled={!price || !size}\n          onClick={onSubmit}\n          block\n          type=\"primary\"\n          size=\"large\"\n          loading={submitting}\n        >\n          Sell {baseCurrency}\n        </SellButton>\n      )}\n    </FloatingElement>\n  );\n}\n","import { Col, Row } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useMarket, useTrades } from '../utils/markets';\nimport FloatingElement from './layout/FloatingElement';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\nconst SizeTitle = styled(Row)`\n  padding: 20px 0 14px;\n  color: #434a59;\n`;\n\n// TODO: Put in some scrolling\nconst TradesContainer = styled.div`\n  height: calc(100% - 75px);\n  margin-right: -20px;\n  padding-right: 5px;\n  overflow-y: scroll;\n`;\n\nexport default function PublicTrades({ smallScreen }) {\n  const { baseCurrency, quoteCurrency } = useMarket();\n  const trades = useTrades();\n  return (\n    <FloatingElement\n      style={\n        smallScreen\n          ? { flex: 1 }\n          : { marginTop: '10px', height: 'calc(100% - 520px)' }\n      }\n    >\n      <Title>Recent Market trades</Title>\n      <SizeTitle>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          Size ({baseCurrency})\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          Price ({quoteCurrency}){' '}\n        </Col>\n      </SizeTitle>\n      {!!trades && (\n        <TradesContainer>\n          {trades.map((trade, i) => (\n            <Row key={i} style={{ marginBottom: 4 }}>\n              <Col span={12} style={{ textAlign: 'left' }}>\n                {trade.size}\n              </Col>\n              <Col\n                span={12}\n                style={{\n                  textAlign: 'right',\n                  color: trade.side === 'buy' ? '#41C77A' : '#F23B69',\n                }}\n              >\n                {trade.price}\n              </Col>\n            </Row>\n          ))}\n        </TradesContainer>\n      )}\n    </FloatingElement>\n  );\n}\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Button, Col, Input, Row, Select } from 'antd';\nimport styled from 'styled-components';\nimport Orderbook from '../components/Orderbook';\nimport UserInfoTable from '../components/UserInfoTable';\nimport StandaloneBalancesDisplay from '../components/StandaloneBalancesDisplay';\nimport { useMarket, useMarketsList } from '../utils/markets';\nimport TradeForm from '../components/TradeForm';\nimport { useLocalStorageState } from '../utils/utils';\nimport TradesTable from '../components/TradesTable';\n\nconst { Option } = Select;\n\nconst Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 16px 16px;\n  .borderNone .ant-select-selector {\n    border: none !important;\n  }\n`;\n\nfunction hashString(s) {\n  var h = 0,\n    l = s.length,\n    i = 0;\n  if (l > 0) while (i < l) h = ((h << 5) - h + s.charCodeAt(i++)) | 0;\n  return h;\n}\n\nconst requirePassword = false;\n\nexport default function TradePage() {\n  const { marketName, setMarketName } = useMarket();\n  const markets = useMarketsList();\n  const [submittedPassword, setSubmittedPassword] = useLocalStorageState(\n    'submittedPassword5',\n    false,\n  );\n  const [password, setPassword] = useState('password');\n  const [dimensions, setDimensions] = useState({\n    height: window.innerHeight,\n    width: window.innerWidth,\n  });\n\n  const changeOrderRef = useRef();\n\n  useEffect(() => {\n    const handleResize = () => {\n      setDimensions({\n        height: window.innerHeight,\n        width: window.innerWidth,\n      });\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const width = dimensions?.width;\n  const componentProps = {\n    onChangeOrderRef: (ref) => (changeOrderRef.current = ref),\n    onPrice: (price) =>\n      changeOrderRef.current && changeOrderRef.current({ price }),\n    onSize: (size) =>\n      changeOrderRef.current && changeOrderRef.current({ size }),\n  };\n  const getComponent = useCallback(() => {\n    if (width < 1000) {\n      return <RenderSmaller {...componentProps} />;\n    } else if (width < 1450) {\n      return <RenderSmall {...componentProps} />;\n    } else {\n      return <RenderNormal {...componentProps} />;\n    }\n  }, [width, componentProps]);\n\n  if (!submittedPassword && requirePassword) {\n    return (\n      <Wrapper style={{ width: 400 }}>\n        <Input.Password\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <Button\n          onClick={() => {\n            if (hashString(password) === 99071593) {\n              setSubmittedPassword(true);\n            }\n          }}\n          block\n          type=\"primary\"\n          size=\"large\"\n        >\n          Submit\n        </Button>\n      </Wrapper>\n    );\n  }\n\n  return (\n    <>\n      <Wrapper>\n        <Row>\n          <Col>\n            <Select\n              bordered={false}\n              onSelect={setMarketName}\n              value={marketName}\n            >\n              {markets.map(({ name, address }) => (\n                <Option value={name} key={address}>\n                  {name}\n                </Option>\n              ))}\n            </Select>\n          </Col>\n        </Row>\n        {getComponent()}\n      </Wrapper>\n    </>\n  );\n}\n\nconst RenderNormal = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <Row\n      style={{\n        minHeight: '750px',\n      }}\n    >\n      <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n        <UserInfoTable />\n      </Col>\n      <Col flex={'360px'} style={{ height: '100%' }}>\n        <Orderbook smallScreen={false} onPrice={onPrice} onSize={onSize} />\n        <TradesTable smallScreen={false} />\n      </Col>\n      <Col\n        flex=\"400px\"\n        style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n      >\n        <TradeForm setChangeOrderRef={onChangeOrderRef} />\n        <StandaloneBalancesDisplay />\n      </Col>\n    </Row>\n  );\n};\n\nconst RenderSmall = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <>\n      <Row\n        style={{\n          height: '750px',\n        }}\n      >\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n          <Orderbook\n            smallScreen={true}\n            depth={12}\n            onPrice={onPrice}\n            onSize={onSize}\n          />\n        </Col>\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n          <TradesTable smallScreen={true} />\n        </Col>\n        <Col\n          flex=\"400px\"\n          style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n        >\n          <TradeForm setChangeOrderRef={onChangeOrderRef} />\n          <StandaloneBalancesDisplay />\n        </Col>\n      </Row>\n      <Row>\n        <Col flex=\"auto\">\n          <UserInfoTable />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst RenderSmaller = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <>\n      <Row>\n        <Col span={12} style={{ height: '100%', display: 'flex' }}>\n          <TradeForm style={{ flex: 1 }} setChangeOrderRef={onChangeOrderRef} />\n        </Col>\n        <Col span={12}>\n          <StandaloneBalancesDisplay />\n        </Col>\n      </Row>\n      <Row style={{ minHeight: '500px' }}>\n        <Col span={12} style={{ height: '100%', display: 'flex' }}>\n          <Orderbook smallScreen={true} onPrice={onPrice} onSize={onSize} />\n        </Col>\n        <Col span={12} style={{ height: '100%', display: 'flex' }}>\n          <TradesTable smallScreen={true} />\n        </Col>\n      </Row>\n      <Row>\n        <Col flex=\"auto\">\n          <UserInfoTable />\n        </Col>\n      </Row>\n    </>\n  );\n};\n","import React from 'react';\nimport { useOpenOrdersForAllMarkets } from '../utils/markets';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport OpenOrderTable from '../components/UserInfoTable/OpenOrderTable';\n\nexport default function OpenOrdersPage() {\n  const [openOrders] = useOpenOrdersForAllMarkets();\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <OpenOrderTable openOrders={openOrders} />\n    </FloatingElement>\n  );\n}\n","import React from 'react';\nimport { Button } from 'antd';\nimport { LinkOutlined } from '@ant-design/icons';\n\nexport default function LinkAddress({ title, address }) {\n  const onOpenAddress = (address) => {\n    window.open('https://explorer.solana.com/address/' + address, '_blank');\n  };\n\n  return (\n    <div style={{ marginBottom: 20 }}>\n      {title && <p style={{ color: 'white' }}>{title}</p>}\n      <Button\n        type=\"link\"\n        icon={<LinkOutlined />}\n        onClick={() => onOpenAddress(address)}\n      >\n        {address}\n      </Button>\n    </div>\n  );\n}\n","import { InfoCircleOutlined, UserOutlined } from '@ant-design/icons';\nimport { Button, Menu, Popover, Select } from 'antd';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport logo from '../assets/logo.svg';\nimport styled from 'styled-components';\nimport { useWallet, WALLET_PROVIDERS } from '../utils/wallet';\nimport { ENDPOINTS, useConnectionConfig } from '../utils/connection';\nimport LinkAddress from './LinkAddress';\n\nconst Wrapper = styled.div`\n  background-color: #0d1017;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  padding: 0px 30px;\n`;\nconst LogoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  color: #2abdd2;\n  font-weight: bold;\n  cursor: pointer;\n  img {\n    height: 30px;\n    margin-right: 8px;\n  }\n`;\n\nexport default function TopBar() {\n  const [current, setCurrent] = useState('/');\n  const [connected, wallet, providerUrl, setProvider] = useWallet();\n  const { endpoint, setEndpoint } = useConnectionConfig();\n  const location = useLocation();\n  const history = useHistory();\n\n  const publicKey = wallet?.publicKey?.toBase58();\n\n  const handleClick = useCallback((e) => {\n    history.push(e.key);\n  }, []);\n\n  useEffect(() => {\n    if (location.pathname.includes('/orders')) {\n      setCurrent('/orders');\n    } else if (location.pathname.includes('/balances')) {\n      setCurrent('/balances');\n    }\n  }, [location]);\n\n  return (\n    <Wrapper>\n      <div>\n        <LogoWrapper>\n          <img src={logo} alt=\"\" />\n          {'SERUM'}\n        </LogoWrapper>\n      </div>\n      <Menu\n        mode=\"horizontal\"\n        onClick={handleClick}\n        selectedKeys={[current]}\n        style={{\n          borderBottom: 'none',\n          backgroundColor: 'transparent',\n          display: 'flex',\n          alignItems: 'flex-end',\n          flex: 1,\n        }}\n      >\n        <Menu.Item key=\"/\">TRADE</Menu.Item>\n      </Menu>\n      <div style={{ display: 'block' }}>\n        <Select\n          onSelect={setEndpoint}\n          value={endpoint}\n          style={{ marginRight: 8 }}\n        >\n          {ENDPOINTS.map(({ name, endpoint }) => (\n            <Select.Option value={endpoint} key={endpoint}>\n              {name}\n            </Select.Option>\n          ))}\n        </Select>\n        <Select onSelect={setProvider} value={providerUrl}>\n          {WALLET_PROVIDERS.map(({ name, url }) => (\n            <Select.Option value={url} key={url}>\n              {name}\n            </Select.Option>\n          ))}\n        </Select>\n        <Button\n          type=\"text\"\n          size=\"large\"\n          onClick={connected ? wallet.disconnect : wallet.connect}\n          style={{ color: '#2abdd2' }}\n        >\n          <UserOutlined />\n          {!connected ? 'Connect wallet' : 'Disconnect'}\n        </Button>\n        {connected && (\n          <Popover\n            content={<LinkAddress address={publicKey} />}\n            placement=\"bottomRight\"\n            title=\"Wallet public key\"\n            trigger=\"click\"\n          >\n            <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n          </Popover>\n        )}\n      </div>\n    </Wrapper>\n  );\n}\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nexport default function Link({ external = false, ...props }) {\n  let { to, children, ...rest } = props;\n  if (external) {\n    return (\n      <a href={to} target=\"_blank\" rel=\"noopener noreferrer\" {...rest}>\n        {children}\n      </a>\n    );\n  }\n  return (\n    <RouterLink to={to} {...rest}>\n      {children}\n    </RouterLink>\n  );\n}\n","export const helpUrls = {\n  customerSupport: 'https://t.me/ProjectSerum',\n  customerSupportZh: 'https://t.me/ProjectSerum_Chinese',\n  contactEmail: 'mailto:contact@projectserum.com',\n  discord: 'https://discord.gg/MxZFT4v',\n  telegram: 'https://t.me/ProjectSerum',\n  github: 'https://github.com/project-serum',\n  projectSerum: 'https://projectserum.com/',\n  developerResources: 'https://projectserum.com/developer-resources',\n  solanaBeach: 'https://solanabeach.io',\n};\n","import React from 'react';\nimport { Layout, Row, Col, Grid } from 'antd';\nimport Link from './Link';\nimport { helpUrls } from './HelpUrls';\nconst { Footer } = Layout;\nconst { useBreakpoint } = Grid;\n\nconst footerElements = [\n  {\n    description: 'Serum Developer Resources',\n    link: helpUrls.developerResources,\n  },\n  { description: 'Discord', link: helpUrls.discord },\n  { description: 'Telegram', link: helpUrls.telegram },\n  { description: 'GitHub', link: helpUrls.github },\n  { description: 'Project Serum', link: helpUrls.projectSerum },\n  { description: 'Solana Network', link: helpUrls.solanaBeach },\n];\n\nexport const CustomFooter = () => {\n  const smallScreen = !useBreakpoint().lg;\n\n  return (\n    <Footer\n      style={{\n        height: '45px',\n        paddingBottom: 10,\n        paddingTop: 10,\n      }}\n    >\n      <Row align=\"middle\" gutter={[16, 4]}>\n        {!smallScreen && (\n          <>\n            <Col flex=\"auto\" />\n            {footerElements.map((elem, index) => {\n              return (\n                <Col key={index + ''}>\n                  <Link external to={elem.link}>\n                    {elem.description}\n                  </Link>\n                </Col>\n              );\n            })}\n          </>\n        )}\n        <Col flex=\"auto\">{/*  <DexProgramSelector />*/}</Col>\n      </Row>\n    </Footer>\n  );\n};\n","import React from 'react';\nimport DataTable from '../layout/DataTable';\n\nexport default function WalletBalancesTable({\n  loaded = false,\n  walletBalances,\n}) {\n  const columns = [\n    {\n      title: 'Coin',\n      dataIndex: 'key',\n      key: 'key',\n    },\n    {\n      title: 'Wallet Balance',\n      dataIndex: 'wallet',\n      key: 'wallet',\n    },\n  ];\n  return (\n    <DataTable\n      emptyLabel=\"No balances\"\n      dataSource={walletBalances}\n      columns={columns}\n      pagination={false}\n      loading={!loaded}\n    />\n  );\n}\n","import { Button } from 'antd';\nimport React from 'react';\nimport DataTable from '../layout/DataTable';\nimport { useConnection } from '../../utils/connection';\nimport { useWallet } from '../../utils/wallet';\nimport { settleFunds } from '../../utils/send';\n\nexport default function AccountsTable({ accountBalances }) {\n  const connection = useConnection();\n  const [, wallet] = useWallet();\n\n  async function onSettleFunds(account) {\n    const {\n      market,\n      openOrdersAccount,\n      baseCurrencyAccount,\n      quoteCurrencyAccount,\n    } = account;\n    return await settleFunds({\n      market,\n      openOrders: openOrdersAccount,\n      connection,\n      wallet,\n      baseCurrencyAccount,\n      quoteCurrencyAccount,\n    });\n  }\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'key',\n      key: 'key',\n    },\n    {\n      title: 'Orders',\n      dataIndex: 'orders',\n      key: 'orders',\n    },\n    {\n      title: 'Unsettled',\n      dataIndex: 'unsettled',\n      key: 'unsettled',\n    },\n    {\n      key: 'action',\n      render: (account) => (\n        <div style={{ textAlign: 'right' }}>\n          <Button\n            ghost\n            style={{ marginRight: 12 }}\n            onClick={() => onSettleFunds(account)}\n          >\n            Settle\n          </Button>\n        </div>\n      ),\n    },\n  ];\n  return (\n    <DataTable\n      emptyLabel=\"No balances\"\n      dataSource={accountBalances}\n      columns={columns.map((data) => ({\n        ...data,\n        key: `${data.market}${data.coin}`,\n      }))}\n      pagination={false}\n    />\n  );\n}\n","import React from 'react';\nimport { Tabs } from 'antd';\nimport {\n  useWalletBalancesForAllMarkets,\n  useOpenOrderAccountBalancesForAllMarkets,\n} from '../utils/markets';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport WalletBalancesTable from '../components/UserInfoTable/WalletBalancesTable';\nimport AccountsTable from '../components/UserInfoTable/AccountsTable';\n\nconst { TabPane } = Tabs;\n\nexport default function BalancesPage() {\n  const [\n    walletBalances,\n    loadedWalletBalances,\n  ] = useWalletBalancesForAllMarkets();\n  const [\n    accountBalances,\n    accountBalancesLoaded,\n  ] = useOpenOrderAccountBalancesForAllMarkets();\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <Tabs defaultActiveKey=\"walletBalances\">\n        <TabPane tab=\"Wallet Balances\" key=\"walletBalances\">\n          <WalletBalancesTable\n            loaded={loadedWalletBalances}\n            walletBalances={walletBalances}\n          />\n        </TabPane>\n        <TabPane tab=\"Market balances\" key=\"marketBalances\">\n          <AccountsTable\n            loaded={accountBalancesLoaded}\n            accountBalances={accountBalances}\n          />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n","import { HashRouter, Route } from 'react-router-dom';\nimport TradePage from './pages/TradePage';\nimport OpenOrdersPage from './pages/OpenOrdersPage';\nimport React from 'react';\nimport { Layout } from 'antd';\nimport TopBar from './components/TopBar';\nimport { CustomFooter } from './components/Footer';\nimport BalancesPage from './pages/BalancesPage';\n\nconst { Header, Content } = Layout;\n\nexport function Routes() {\n  return (\n    <HashRouter basename={'/'}>\n      <Route exact path=\"/\" component={TradePageContents} />\n      <Route exact path=\"/orders\" component={OpenOrdersPageContents} />\n      <Route exact path=\"/balances\" component={BalancesPageContents} />\n    </HashRouter>\n  );\n}\n\nfunction TradePageContents() {\n  return (\n    <React.Fragment>\n      <Layout\n        style={{ display: 'flex', minHeight: '100vh', flexDirection: 'column' }}\n      >\n        <Header style={{ padding: 0 }}>\n          <TopBar />\n        </Header>\n        <Content style={{ flex: 1 }}>\n          <TradePage />\n        </Content>\n        <CustomFooter />\n      </Layout>\n    </React.Fragment>\n  );\n}\n\nfunction OpenOrdersPageContents() {\n  return (\n    <React.Fragment>\n      <Layout\n        style={{ display: 'flex', minHeight: '100vh', flexDirection: 'column' }}\n      >\n        <Header style={{ padding: 0 }}>\n          <TopBar />\n        </Header>\n        <Content style={{ flex: 1 }}>\n          <OpenOrdersPage />\n        </Content>\n        <CustomFooter />\n      </Layout>\n    </React.Fragment>\n  );\n}\n\nfunction BalancesPageContents() {\n  return (\n    <React.Fragment>\n      <Layout\n        style={{ display: 'flex', minHeight: '100vh', flexDirection: 'column' }}\n      >\n        <Header style={{ padding: 0 }}>\n          <TopBar />\n        </Header>\n        <Content style={{ flex: 1 }}>\n          <BalancesPage />\n        </Content>\n        <CustomFooter />\n      </Layout>\n    </React.Fragment>\n  );\n}\n","import React, { Suspense } from 'react';\nimport './App.less';\nimport { ConnectionProvider } from './utils/connection';\nimport { MarketProvider } from './utils/markets';\nimport { WalletProvider } from './utils/wallet';\nimport { GlobalStyle } from './global_style';\nimport { Spin } from 'antd';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { Routes } from './routes';\n\nexport default function App() {\n  return (\n    <Suspense fallback={() => <Spin size=\"large\" />}>\n      <GlobalStyle />\n      <ErrorBoundary>\n        <ConnectionProvider>\n          <MarketProvider>\n            <WalletProvider>\n              <Suspense fallback={() => <Spin size=\"large\" />}>\n                <Routes />\n              </Suspense>\n            </WalletProvider>\n          </MarketProvider>\n        </ConnectionProvider>\n      </ErrorBoundary>\n    </Suspense>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}