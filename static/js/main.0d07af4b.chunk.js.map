{"version":3,"sources":["utils/markets.tsx","utils/tokens.tsx","assets/logo.svg","utils/utils.tsx","utils/notifications.tsx","utils/connection.tsx","global_style.ts","components/ErrorBoundary.jsx","utils/useInterval.tsx","components/layout/FloatingElement.jsx","components/Orderbook.jsx","utils/usePrevious.tsx","components/layout/DataTable.jsx","components/UserInfoTable/BalancesTable.jsx","components/UserInfoTable/OpenOrderTable.jsx","components/UserInfoTable/FillsTable.jsx","components/UserInfoTable/FeesTable.js","components/UserInfoTable/index.jsx","components/DepositDialog.jsx","components/StandaloneBalancesDisplay.jsx","components/TradeForm.jsx","components/TradesTable.jsx","components/LinkAddress.tsx","components/DeprecatedMarketsInstructions.js","components/CustomMarketDialog.jsx","pages/TradePage.jsx","pages/OpenOrdersPage.jsx","components/UserInfoTable/WalletBalancesTable.jsx","components/UserInfoTable/AccountsTable.jsx","pages/BalancesPage.jsx","utils/preferences.tsx","components/Settings.jsx","components/CustomClusterEndpointDialog.tsx","components/TopBar.tsx","components/HelpUrls.js","components/Footer.jsx","components/BasicLayout.js","pages/ListNewMarketPage.jsx","routes.js","App.js","serviceWorker.js","index.js","utils/wallet.tsx","utils/fetch-loop.tsx","utils/send.tsx","components/Link.js"],"names":["USE_MARKETS","MARKETS","useMarketsList","filter","deprecated","useAllMarkets","customMarkets","connection","useConnection","useState","markets","setMarkets","useEffect","a","getMarketInfos","marketInfo","Market","load","address","programId","market","push","marketName","name","notify","message","description","type","getAllMarkets","useUnmigratedOpenOrdersAccounts","wallet","useWallet","publicKey","console","log","deprecatedOpenOrdersAccounts","deprecatedProgramIds","Array","from","Set","map","toBase58","publicKeyStr","PublicKey","OpenOrders","findForOwner","openOrdersAccounts","concat","openOrders","baseTokenTotal","toNumber","quoteTokenTotal","some","equals","cacheKey","tuple","useAsyncData","refreshInterval","_VERY_SLOW_REFRESH_INTERVAL","accounts","refresh","clearCache","refreshCache","MarketContext","React","createContext","DEFAULT_MARKET","find","getMarketDetails","otherMarket","baseCurrency","baseMintAddress","TOKEN_MINTS","token","baseLabel","quoteCurrency","quoteMintAddress","quoteLabel","MarketProvider","children","useLocalStorageState","marketAddress","setMarketAddress","setCustomMarkets","setMarket","_decoded","ownAddress","then","catch","e","Provider","value","useMarket","context","useContext","Error","useMarkPrice","markPrice","setMarkPrice","useOrderbook","orderbook","trades","useTrades","bb","bids","length","Number","ba","asks","last","price","sort","b","_useUnfilteredTrades","limit","getUnfilteredTrades","loadFills","useOrderbookAccounts","bidData","useAccountData","askData","bidOrderbook","Orderbook","decode","askOrderbook","depth","getL2","useOpenOrdersAccounts","fast","connected","getOpenOrdersAccounts","findOpenOrdersAccountsForOwner","useSelectedOpenOrdersAccount","useTokenAccounts","getTokenAccountInfo","getSelectedTokenAccountForMint","mint","filtered","effectiveMint","useSelectedQuoteCurrencyAccount","useSelectedBaseCurrencyAccount","useQuoteCurrencyBalances","quoteCurrencyAccount","useAccountInfo","pubkey","accountInfo","loaded","TokenInstructions","WRAPPED_SOL_MINT","lamports","quoteSplSizeToNumber","BN","data","slice","useBaseCurrencyBalances","baseCurrencyAccount","baseSplSizeToNumber","useOpenOrders","openOrdersAccount","filterForOpenOrders","order","eventFlags","maker","trade","side","useFeeDiscountKeys","findFeeDiscountKeys","useFills","fills","fill","useOpenOrdersForAllMarkets","allMarkets","orders","marketData","Promise","all","loadBids","loadAsks","ordersForMarket","openOrdersAddress","useBalances","baseCurrencyBalances","quoteCurrencyBalances","baseExists","baseTokenFree","quoteExists","quoteTokenFree","key","coin","sub","unsettled","useWalletBalancesForAllMarkets","useOpenOrderAccountBalancesForAllMarkets","useUnmigratedDeprecatedMarkets","marketsList","deps","m","useUnmigratedDeprecatedMarketsInner","getMarket","x","toString","openOrdersList","useGetOpenOrdersForDeprecatedMarkets","marketsAndOrders","getOrders","loadOrdersForOwner","flat","refreshOpenOrders","useBalancesForDeprecatedMarkets","openOrderAccountBalances","forEach","inOrdersBase","inOrdersQuote","unsettledBase","unsettledQuote","customMarketsInfo","ACCOUNT_LAYOUT","BufferLayout","MINT_LAYOUT","parseTokenAccountData","owner","amount","parseTokenMintData","decimals","initialized","getOwnedAccountsFilters","memcmp","offset","offsetOf","bytes","dataSize","span","TOKEN_PROGRAM_ID","getOwnedTokenAccounts","filters","_rpcRequest","commitment","resp","error","result","account","executable","bs58","every","filterBytes","ownerAddress","getAccountInfo","splAccounts","parsedSplAccounts","module","exports","isValidPublicKey","sleep","ms","resolve","setTimeout","percentFormat","Intl","NumberFormat","undefined","style","minimumFractionDigits","maximumFractionDigits","floorToDecimal","Math","floor","roundToDecimal","round","getDecimalCount","isNaN","split","defaultState","storedState","localStorage","getItem","JSON","parse","state","setState","setLocalStorageState","useCallback","newState","removeItem","setItem","stringify","isEqual","obj1","obj2","keys","Object","k","txid","placement","external","to","color","notification","opacity","backgroundColor","ENDPOINTS","endpoint","custom","clusterApiUrl","accountListenerCount","Map","ConnectionContext","ConnectionProvider","setEndpoint","customEndpoints","setCustomEndpoints","availableEndpoints","useMemo","Connection","sendConnection","id","onAccountChange","Account","removeAccountChangeListener","onSlotChange","removeSlotChangeListener","useSendConnection","useConnectionConfig","has","get","count","previousData","subscriptionId","setCache","set","currentItem","delete","GlobalStyle","createGlobalStyle","Title","Typography","ErrorBoundary","hasError","this","level","props","Component","useInterval","callback","delay","savedCallback","useRef","current","setInterval","clearInterval","Wrapper","styled","div","FloatingElement","SizeTitle","Row","MarkPriceTitle","Line","css","Price","smallScreen","onPrice","onSize","currentOrderbookData","lastOrderbookData","orderbookData","setOrderbookData","getCumulativeOrderbookSide","totalSize","backwards","cumulative","reduce","i","size","cumulativeSize","sizePercent","reverse","sum","total","index","bidsToDisplay","asksToDisplay","flex","height","overflow","textAlign","OrderbookRow","onPriceClick","onSizeClick","MarkPriceComponent","memo","element","classList","contains","add","remove","clearTimeout","formattedSize","minOrderSize","toFixed","formattedPrice","tickSize","ref","marginBottom","onClick","data-width","data-bgcolor","prevProps","nextProps","previousMarkPrice","usePrevious","markPriceColor","formattedMarkPrice","justify","ArrowUpOutlined","marginRight","ArrowDownOutlined","DataTable","dataSource","columns","emptyLabel","pagination","loading","pageSize","renderEmpty","padding","display","justifyContent","alignItems","BalancesTable","balances","showMarket","hideWalletBalance","onSettleSuccess","settleFunds","title","dataIndex","render","ghost","onSettleFunds","CancelButton","Button","OpenOrderTable","onCancelSuccess","cancelId","setCancelId","orderId","cancelOrder","fontWeight","charAt","toUpperCase","icon","DeleteOutlined","cancel","assign","FillsTable","liquidity","FeesTable","feeTier","row","marginLeft","format","getFeeRates","taker","_","SRM_MINT","MSRM_MINT","marginTop","FeeScheduleTable","balance","info","Paragraph","TabPane","Tabs","Index","paddingTop","href","defaultActiveKey","tab","supportsSrmFeeDiscounts","OpenOrdersTab","BalancesTab","DepositDialog","coinMint","depositCoin","onClose","baseOrQuote","providerName","providerUrl","visible","onOk","onCancel","Link","RowBox","Tip","p","ActionButton","StandaloneBalancesDisplay","setBaseOrQuote","currency","Fragment","borderColor","align","paddingBottom","width","block","SellButton","BuyButton","sliderMarks","0","25","50","75","100","TradeForm","setChangeOrderRef","setSide","postOnly","setPostOnly","ioc","setIoc","baseSize","setBaseSize","quoteSize","setQuoteSize","setPrice","submitting","setSubmitting","sizeFraction","setSizeFraction","quoteBalance","baseBalance","sizeDecimalCount","priceDecimalCount","doChangeOrder","onSliderChange","updateSizeFraction","onSetBaseSize","rawQuoteSize","rawMaxSize","maxSize","min","newSize","formatted","onSubmit","parsedPrice","parseFloat","parsedSize","placeOrder","orderType","warn","flexDirection","Group","onChange","target","buttonStyle","background","addonBefore","suffix","fontSize","step","compact","rawBaseSize","onSetQuoteSize","tipFormatter","marks","checked","disabled","TradesContainer","PublicTrades","minHeight","LinkAddress","LinkOutlined","rel","DeprecatedMarketsInstructions","switchToLiveMarkets","needToCancelOrders","filteredBalances","needToSettleFunds","Text","CustomMarketDialog","onAddCustomMarket","marketId","setMarketId","marketLabel","setMarketLabel","setBaseLabel","setQuoteLabel","loadingMarket","setLoadingMarket","wellFormedMarketId","marketAccountInfo","resetLabels","finally","knownMarket","knownProgram","knownBaseCurrency","knownQuoteCurrency","canSubmit","onDoClose","params","okText","okButtonProps","placeholder","LoadingOutlined","gutter","Option","Select","OptGroup","TradePage","handleDeprecated","setHandleDeprecated","addMarketVisible","setAddMarketVisible","deprecatedMarkets","window","innerHeight","innerWidth","dimensions","setDimensions","document","changeOrderRef","handleResize","addEventListener","removeEventListener","componentProps","onChangeOrderRef","getComponent","customMarket","newCustomMarkets","paddingLeft","paddingRight","MarketSelector","onDeleteCustomMarket","content","trigger","InfoCircleOutlined","PlusCircleOutlined","extractBase","extractQuote","selectedMarket","proposedMarket","showSearch","optionFilterProp","onSelect","listHeight","filterOption","input","option","toLowerCase","indexOf","label","stopPropagation","nativeEvent","stopImmediatePropagation","DeprecatedMarketsPage","RenderNormal","flexWrap","RenderSmall","RenderSmaller","xs","sm","OpenOrdersPage","WalletBalancesTable","walletBalances","AccountsTable","accountBalances","BalancesPage","loadedWalletBalances","accountBalancesLoaded","PreferencesContext","PreferencesProvider","autoSettleEnabled","setAutoSettleEnabled","tokenAccounts","marketList","autoSettle","settleAllFunds","autoApprove","Settings","usePreferences","CustomClusterEndpointDialog","onAddCustomEndpoint","customEndpoint","setCustomEndpoint","customEndpointName","setCustomEndpointName","LogoWrapper","TopBar","setProvider","addEndpointVisible","setAddEndpointVisible","location","useLocation","history","useHistory","handleClick","newCustomEndpoints","src","logo","alt","mode","selectedKeys","pathname","borderBottom","Item","SettingOutlined","WALLET_PROVIDERS","url","disconnect","connect","UserOutlined","helpUrls","Footer","Layout","useBreakpoint","Grid","footerElements","link","CustomFooter","lg","elem","Header","Content","BasicLayout","ListNewMarketPage","baseLotSize","quoteLotSize","useMintInput","code","baseMintInput","baseMintInfo","quoteMintInput","quoteMintInfo","lotSize","setLotSize","setTickSize","dexProgramId","listedMarket","setListedMarket","listMarket","baseMint","quoteMint","labelCol","wrapperCol","layout","onFinish","initialValue","validateStatus","hasFeedback","trim","colon","htmlType","tooltip","setAddress","help","mintInfo","parsed","Routes","basename","exact","path","component","TradePageContents","OpenOrdersPageContents","BalancesPageContents","App","fallback","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","WalletContext","WalletProvider","setProviderUrl","Wallet","setConnected","on","walletPublicKey","keyToDisplay","substring","pageLoadTime","Date","globalCache","FetchLoopListener","fn","refreshIntervalOnError","FetchLoopInternal","timeoutId","listeners","errors","stopped","errored","notifyListeners","waitTime","timeSincePageLoad","visibilityState","hasFocus","random","listener","previousRefreshInterval","assert","refreshIntervalsOnError","globalLoops","loops","addListener","loop","removeListener","values","asyncFn","useReducer","rerender","initializeOnly","createTokenAccountTransaction","mintPublicKey","newAccount","SystemProgram","getMinimumBalanceForRentExemption","fromPubkey","newAccountPubkey","space","transaction","createAccount","initializeAccount","signer","baseCurrencyAccountPubkey","quoteCurrencyAccountPubkey","createAccountTransaction","createAccountSigner","supportsReferralFees","makeSettleFundsTransaction","settleFundsTransaction","settleFundsSigners","signers","mergeTransactions","sendTransaction","sendingMessage","programIds","_programId","getOpenOrdersAccountsForProgramId","openOrdersAccountsForProgramIds","settleTransactions","transactions","t","s","constructor","cancelOrders","makeMatchOrdersTransaction","makeCancelOrderInstruction","formattedMinOrderSize","formattedTickSize","isIncrement","num","abs","payer","makePlaceOrderTransaction","placeOrderTx","getVaultOwnerAndNonce","nonce","createProgramAddress","toBuffer","toArrayLike","Buffer","vaultOwner","iaddn","requestQueue","eventQueue","baseVault","quoteVault","feeRateBps","quoteDustThreshold","vaultSignerNonce","tx1","Transaction","tx2","getLayout","DexInstructions","initializeMarket","signTransaction","signedTransactions","signedTransaction","sendSignedTransaction","getUnixTs","getTime","sentMessage","successMessage","timeout","getRecentBlockhash","recentBlockhash","blockhash","signPartial","rawTransaction","serialize","startTime","sendRawTransaction","skipPreflight","done","awaitTransactionSignatureConfirmation","reject","onSignature","err","getSignatureStatuses","signatureStatuses","confirmations","rest"],"mappings":"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","file":"static/js/main.0d07af4b.chunk.js","sourcesContent":["import {\n  decodeEventQueue,\n  Market,\n  MARKETS,\n  OpenOrders,\n  Orderbook,\n  TOKEN_MINTS,\n  TokenInstructions,\n} from '@project-serum/serum';\nimport {AccountInfo, PublicKey, RpcResponseAndContext, TokenAmount} from '@solana/web3.js';\nimport React, {useContext, useEffect, useState} from 'react';\nimport {useLocalStorageState} from './utils';\nimport {refreshCache, useAsyncData} from './fetch-loop';\nimport {useAccountData, useAccountInfo, useConnection} from './connection';\nimport {useWallet} from './wallet';\nimport tuple from 'immutable-tuple';\nimport {notify} from './notifications';\nimport {BN} from 'bn.js';\nimport {getTokenAccountInfo} from './tokens';\nimport {\n  Balances,\n  CustomMarketInfo,\n  DeprecatedOpenOrdersBalances,\n  FullMarketInfo,\n  MarketContextValues,\n  MarketInfo,\n  OrderWithMarket,\n  OrderWithMarketAndMarketName,\n  TokenAccount,\n  Trade,\n} from \"./types\";\nimport {Buffer} from \"buffer\";\n\n// Used in debugging, should be false in production\nconst _IGNORE_DEPRECATED = false;\n\nconst USE_MARKETS: MarketInfo[] = _IGNORE_DEPRECATED\n  ? MARKETS.map((m) => ({ ...m, deprecated: false }))\n  : MARKETS;\n\nexport function useMarketsList() {\n  return USE_MARKETS.filter(({ deprecated }) => !deprecated);\n}\n\nexport function useAllMarkets(customMarkets) {\n  const connection = useConnection();\n  const [markets, setMarkets] = useState<{market: Market; marketName: string; programId: PublicKey;}[]>([]);\n\n  useEffect(() => {\n    const getAllMarkets = async () => {\n      const markets: {market: Market; marketName: string; programId: PublicKey;}[] = [];\n      for (let marketInfo of getMarketInfos(customMarkets)) {\n        try {\n          const market = await Market.load(\n            connection,\n            marketInfo.address,\n            {},\n            marketInfo.programId,\n          );\n          markets.push({\n            market,\n            marketName: marketInfo.name,\n            programId: marketInfo.programId,\n          });\n        } catch (e) {\n          notify({\n            message: 'Error loading all market',\n            description: e.message,\n            type: 'error',\n          });\n        }\n      }\n      setMarkets(markets);\n    };\n\n    getAllMarkets();\n  }, [connection, customMarkets]);\n\n  return markets;\n}\n\nexport function useUnmigratedOpenOrdersAccounts() {\n  const connection = useConnection();\n  const { wallet } = useWallet();\n\n  async function getUnmigratedOpenOrdersAccounts(): Promise<OpenOrders[]> {\n    if (!wallet || !connection || !wallet.publicKey) {\n      return [];\n    }\n    console.log('refreshing useUnmigratedOpenOrdersAccounts');\n    let deprecatedOpenOrdersAccounts: OpenOrders[] = [];\n    const deprecatedProgramIds = Array.from(\n      new Set(\n        USE_MARKETS.filter(\n          ({ deprecated }) => deprecated,\n        ).map(({ programId }) => programId.toBase58()),\n      ),\n    ).map((publicKeyStr) => new PublicKey(publicKeyStr));\n    let programId: PublicKey;\n    for (programId of deprecatedProgramIds) {\n      try {\n        const openOrdersAccounts = await OpenOrders.findForOwner(\n          connection,\n          wallet.publicKey,\n          programId,\n        );\n        deprecatedOpenOrdersAccounts = deprecatedOpenOrdersAccounts.concat(\n          openOrdersAccounts\n            .filter(\n              (openOrders) =>\n                openOrders.baseTokenTotal.toNumber() ||\n                openOrders.quoteTokenTotal.toNumber(),\n            )\n            .filter((openOrders) =>\n              USE_MARKETS.some(\n                (market) =>\n                  market.deprecated && market.address.equals(openOrders.market),\n              ),\n            ),\n        );\n      } catch (e) {\n        console.log(\n          'Error loading deprecated markets',\n          programId?.toBase58(),\n          e.message,\n        );\n      }\n    }\n    // Maybe sort\n    return deprecatedOpenOrdersAccounts;\n  }\n\n  const cacheKey = tuple(\n    'getUnmigratedOpenOrdersAccounts',\n    connection,\n    wallet?.publicKey?.toBase58(),\n  );\n  const [accounts] = useAsyncData(getUnmigratedOpenOrdersAccounts, cacheKey, {\n    refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\n  });\n\n  return {\n    accounts,\n    refresh: (clearCache: boolean) => refreshCache(cacheKey, clearCache),\n  };\n}\n\nconst MarketContext: React.Context<null | MarketContextValues> = React.createContext<null | MarketContextValues>(null);\n\nconst _VERY_SLOW_REFRESH_INTERVAL = 5000 * 1000;\n\n// For things that don't really change\nconst _SLOW_REFRESH_INTERVAL = 5 * 1000;\n\n// For things that change frequently\nconst _FAST_REFRESH_INTERVAL = 1000;\n\nexport const DEFAULT_MARKET = USE_MARKETS.find(\n  ({ name, deprecated }) => name === 'SRM/USDT' && !deprecated,\n);\n\nfunction getMarketDetails(market: Market | undefined | null, customMarkets: CustomMarketInfo[]): FullMarketInfo {\n  if (!market) {\n    return {};\n  }\n  const marketInfos = getMarketInfos(customMarkets);\n  const marketInfo = marketInfos.find((otherMarket) =>\n    otherMarket.address.equals(market.address),\n  );\n  const baseCurrency =\n    (market?.baseMintAddress &&\n      TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\n        ?.name) ||\n    (marketInfo?.baseLabel && `${marketInfo?.baseLabel}*`) ||\n    'UNKNOWN';\n  const quoteCurrency =\n    (market?.quoteMintAddress &&\n      TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\n        ?.name) ||\n    (marketInfo?.quoteLabel && `${marketInfo?.quoteLabel}*`) ||\n    'UNKNOWN';\n\n  return {\n    ...marketInfo,\n    marketName: marketInfo?.name,\n    baseCurrency,\n    quoteCurrency,\n    marketInfo,\n  };\n}\n\nexport function MarketProvider({ children }) {\n  const [marketAddress, setMarketAddress] = useLocalStorageState(\n    'marketAddress',\n    DEFAULT_MARKET?.address.toBase58(),\n  );\n  const [customMarkets, setCustomMarkets] = useLocalStorageState<CustomMarketInfo[]>(\n    'customMarkets',\n    [],\n  );\n\n  const address = new PublicKey(marketAddress);\n  const connection = useConnection();\n  const marketInfos = getMarketInfos(customMarkets);\n  const marketInfo = marketInfos.find((market) =>\n    market.address.equals(address),\n  );\n\n  // Replace existing market with a non-deprecated one on first load\n  useEffect(() => {\n    if (marketInfo && marketInfo.deprecated) {\n      console.log('Switching markets from deprecated', marketInfo);\n      if (DEFAULT_MARKET) {\n        setMarketAddress(DEFAULT_MARKET.address.toBase58());\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const [market, setMarket] = useState<Market | null>();\n  useEffect(() => {\n    if (\n      market &&\n      marketInfo &&\n      // @ts-ignore\n      market._decoded.ownAddress?.equals(marketInfo?.address)\n    ) {\n      return;\n    }\n    setMarket(null);\n    if (!marketInfo || !marketInfo.address) {\n      notify({\n        message: 'Error loading market',\n        description: 'Please select a market from the dropdown',\n        type: 'error',\n      });\n      return;\n    }\n    Market.load(connection, marketInfo.address, {}, marketInfo.programId)\n      .then(setMarket)\n      .catch((e) =>\n        notify({\n          message: 'Error loading market',\n          description: e.message,\n          type: 'error',\n        }),\n      );\n    // eslint-disable-next-line\n  }, [connection, marketInfo]);\n\n  return (\n    <MarketContext.Provider\n      value={{\n        market,\n        ...getMarketDetails(market, customMarkets),\n        setMarketAddress,\n        customMarkets,\n        setCustomMarkets,\n      }}\n    >\n      {children}\n    </MarketContext.Provider>\n  );\n}\n\nexport function useMarket() {\n  const context = useContext(MarketContext);\n  if (!context) {\n    throw new Error('Missing market context')\n  }\n  return context\n}\n\nexport function useMarkPrice() {\n  const [markPrice, setMarkPrice] = useState<null | number>(null);\n\n  const [orderbook] = useOrderbook();\n  const trades = useTrades();\n\n  useEffect(() => {\n    let bb = orderbook?.bids?.length > 0 && Number(orderbook.bids[0][0]);\n    let ba = orderbook?.asks?.length > 0 && Number(orderbook.asks[0][0]);\n    let last = trades && trades.length > 0 && trades[0].price;\n\n    let markPrice =\n      bb && ba\n        ? last\n          ? [bb, ba, last].sort((a, b) => a - b)[1]\n          : (bb + ba) / 2\n        : null;\n\n    setMarkPrice(markPrice);\n  }, [orderbook, trades]);\n\n  return markPrice;\n}\n\nexport function _useUnfilteredTrades(limit = 10000) {\n  const { market } = useMarket();\n  const connection = useConnection();\n  async function getUnfilteredTrades(): Promise<any[] | null> {\n    if (!market || !connection) {\n      return null;\n    }\n    return await market.loadFills(connection, limit);\n  }\n  const [trades] = useAsyncData(\n    getUnfilteredTrades,\n    tuple('getUnfilteredTrades', market, connection),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n  return trades;\n  // NOTE: For now, websocket is too expensive since the event queue is large\n  // and updates very frequently\n\n  // let data = useAccountData(market && market._decoded.eventQueue);\n  // if (!data) {\n  //   return null;\n  // }\n  // const events = decodeEventQueue(data, limit);\n  // return events\n  //   .filter((event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0))\n  //   .map(market.parseFillEvent.bind(market));\n}\n\nexport function useOrderbookAccounts() {\n  const { market } = useMarket();\n  // @ts-ignore\n  let bidData = useAccountData(market && market._decoded.bids);\n  // @ts-ignore\n  let askData = useAccountData(market && market._decoded.asks);\n  return {\n    bidOrderbook: market && bidData ? Orderbook.decode(market, bidData) : null,\n    askOrderbook: market && askData ? Orderbook.decode(market, askData) : null,\n  };\n}\n\nexport function useOrderbook(depth = 20): [{bids: number[][]; asks: number[][];}, boolean] {\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\n  const { market } = useMarket();\n  const bids =\n    !bidOrderbook || !market\n      ? []\n      : bidOrderbook.getL2(depth).map(([price, size]) => [price, size]);\n  const asks =\n    !askOrderbook || !market\n      ? []\n      : askOrderbook.getL2(depth).map(([price, size]) => [price, size]);\n  return [{ bids, asks }, !!bids || !!asks];\n}\n\n// Want the balances table to be fast-updating, dont want open orders to flicker\n// TODO: Update to use websocket\nexport function useOpenOrdersAccounts(fast = false) {\n  const { market } = useMarket();\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getOpenOrdersAccounts() {\n    if (!connected) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    return await market.findOpenOrdersAccountsForOwner(\n      connection,\n      wallet.publicKey,\n    );\n  }\n  return useAsyncData(\n    getOpenOrdersAccounts,\n    tuple('getOpenOrdersAccounts', wallet, market, connected),\n    { refreshInterval: fast ? _FAST_REFRESH_INTERVAL : _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useSelectedOpenOrdersAccount(fast = false) {\n  const [accounts] = useOpenOrdersAccounts(fast);\n  if (!accounts) {\n    return null;\n  }\n  return accounts[0];\n}\n\nexport function useTokenAccounts(): [TokenAccount[] | null | undefined, boolean] {\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getTokenAccounts() {\n    if (!connected) {\n      return null;\n    }\n    return await getTokenAccountInfo(connection, wallet.publicKey);\n  }\n  return useAsyncData(\n    getTokenAccounts,\n    tuple('getTokenAccounts', wallet, connected),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function getSelectedTokenAccountForMint(accounts: TokenAccount[] | undefined | null, mint: PublicKey | undefined) {\n  if (!accounts || !mint) {\n    return null;\n  }\n  const filtered = accounts.filter(({ effectiveMint }) =>\n    mint.equals(effectiveMint),\n  );\n  return filtered && filtered[0];\n}\n\nexport function useSelectedQuoteCurrencyAccount() {\n  const [accounts] = useTokenAccounts();\n  const { market } = useMarket();\n  return getSelectedTokenAccountForMint(accounts, market?.quoteMintAddress);\n}\n\nexport function useSelectedBaseCurrencyAccount() {\n  const [accounts] = useTokenAccounts();\n  const { market } = useMarket();\n  return getSelectedTokenAccountForMint(accounts, market?.baseMintAddress);\n}\n\n// TODO: Update to use websocket\nexport function useQuoteCurrencyBalances() {\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const { market } = useMarket();\n  const [accountInfo, loaded] = useAccountInfo(quoteCurrencyAccount?.pubkey);\n  if (!market || !quoteCurrencyAccount || !loaded || !accountInfo) {\n    return null;\n  }\n  if (market.quoteMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\n    return accountInfo?.lamports / 1e9 ?? 0;\n  }\n  return market.quoteSplSizeToNumber(\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\n  );\n}\n\n// TODO: Update to use websocket\nexport function useBaseCurrencyBalances() {\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const { market } = useMarket();\n  const [accountInfo, loaded] = useAccountInfo(baseCurrencyAccount?.pubkey);\n  if (!market || !baseCurrencyAccount || !loaded || !accountInfo) {\n    return null;\n  }\n  if (market.baseMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\n    return accountInfo?.lamports / 1e9 ?? 0;\n  }\n  return market.baseSplSizeToNumber(\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\n  );\n}\n\nexport function useOpenOrders() {\n  const { market, marketName } = useMarket();\n  const openOrdersAccount = useSelectedOpenOrdersAccount();\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\n  if (!market || !openOrdersAccount || !bidOrderbook || !askOrderbook) {\n    return null;\n  }\n  return market\n    .filterForOpenOrders(bidOrderbook, askOrderbook, [openOrdersAccount])\n    .map((order) => ({ ...order, marketName, market }));\n}\n\nexport function useTrades(limit = 100) {\n  const trades = _useUnfilteredTrades(limit);\n  if (!trades) {\n    return null;\n  }\n  // Until partial fills are each given their own fill, use maker fills\n  return trades\n    .filter(({ eventFlags }) => eventFlags.maker)\n    .map((trade) => ({\n      ...trade,\n      side: trade.side === 'buy' ? 'sell' : 'buy',\n    }));\n}\n\nexport function useFeeDiscountKeys(): [{\n  pubkey: PublicKey;\n  feeTier: number;\n  balance: number;\n  mint: PublicKey;\n}[] | null | undefined, boolean] {\n  const { market } = useMarket();\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getFeeDiscountKeys() {\n    if (!connected) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    return await market.findFeeDiscountKeys(connection, wallet.publicKey);\n  }\n  return useAsyncData(\n    getFeeDiscountKeys,\n    tuple('getFeeDiscountKeys', wallet, market, connected),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useFills(limit = 100) {\n  const { marketName } = useMarket();\n  const fills = _useUnfilteredTrades(limit);\n  const [openOrdersAccounts] = useOpenOrdersAccounts();\n  if (!openOrdersAccounts || openOrdersAccounts.length === 0) {\n    return null;\n  }\n  if (!fills) {\n    return null;\n  }\n  return fills\n    .filter((fill) =>\n      openOrdersAccounts.some((openOrdersAccount) =>\n        fill.openOrders.equals(openOrdersAccount.publicKey),\n      ),\n    )\n    .map((fill) => ({ ...fill, marketName }));\n}\n\n// TODO: Update to use websocket\nexport function useFillsForAllMarkets(limit = 100) {\n  const { connected, wallet } = useWallet();\n\n  const connection = useConnection();\n  // todo: add custom markets\n  const allMarkets = useAllMarkets([]);\n\n  async function getFillsForAllMarkets() {\n    let fills: Trade[] = [];\n    if (!connected) {\n      return fills;\n    }\n\n    let marketData;\n    for (marketData of allMarkets) {\n      const { market, marketName } = marketData;\n      if (!market) {\n        return fills;\n      }\n      const openOrdersAccounts = await market.findOpenOrdersAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n      const openOrdersAccount = openOrdersAccounts && openOrdersAccounts[0];\n      if (!openOrdersAccount) {\n        return fills;\n      }\n      const eventQueueData = await connection.getAccountInfo(\n        market && market._decoded.eventQueue,\n      );\n      let data = eventQueueData?.data;\n      if (!data) {\n        return fills;\n      }\n      const events = decodeEventQueue(data, limit);\n      const fillsForMarket: Trade[] = events\n        .filter(\n          (event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0),\n        )\n        .map(market.parseFillEvent.bind(market));\n      const ownFillsForMarket = fillsForMarket\n        .filter((fill) => fill.openOrders.equals(openOrdersAccount.publicKey))\n        .map((fill) => ({ ...fill, marketName }));\n      fills = fills.concat(ownFillsForMarket);\n    }\n\n    console.log(JSON.stringify(fills));\n    return fills;\n  }\n\n  return useAsyncData(\n    getFillsForAllMarkets,\n    tuple('getFillsForAllMarkets', connected, connection, allMarkets, wallet),\n    { refreshInterval: _FAST_REFRESH_INTERVAL },\n  );\n}\n\n// TODO: Update to use websocket\nexport function useOpenOrdersForAllMarkets() {\n  const { connected, wallet } = useWallet();\n\n  const connection = useConnection();\n  // todo: use custom markets\n  const allMarkets: {market: Market; marketName: string; programId: PublicKey;}[] = useAllMarkets([]);\n\n  async function getOpenOrdersForAllMarkets() {\n    let orders: OrderWithMarket[] = [];\n    if (!connected) {\n      return orders;\n    }\n\n    let marketData: {market: Market; marketName: string; programId: PublicKey;};\n    for (marketData of allMarkets) {\n      const { market, marketName } = marketData;\n      if (!market) {\n        return orders;\n      }\n      const openOrdersAccounts = await market.findOpenOrdersAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n      const openOrdersAccount = openOrdersAccounts && openOrdersAccounts[0];\n      if (!openOrdersAccount) {\n        return orders;\n      }\n      const [bids, asks] = await Promise.all([\n        market.loadBids(connection),\n        market.loadAsks(connection),\n      ]);\n      const ordersForMarket = [...bids, ...asks]\n        .filter((order) => {\n          return order.openOrdersAddress.equals(openOrdersAccount.publicKey);\n        })\n        .map((order) => {\n          return { ...order, marketName };\n        });\n      orders = orders.concat(ordersForMarket);\n    }\n\n    return orders;\n  }\n\n  return useAsyncData(\n    getOpenOrdersForAllMarkets,\n    tuple(\n      'getOpenOrdersForAllMarkets',\n      connected,\n      connection,\n      wallet,\n      allMarkets,\n    ),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useBalances(): Balances[] {\n  const baseCurrencyBalances = useBaseCurrencyBalances();\n  const quoteCurrencyBalances = useQuoteCurrencyBalances();\n  const openOrders = useSelectedOpenOrdersAccount(true);\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const baseExists =\n    openOrders && openOrders.baseTokenTotal && openOrders.baseTokenFree;\n  const quoteExists =\n    openOrders && openOrders.quoteTokenTotal && openOrders.quoteTokenFree;\n  if (\n    baseCurrency === 'UNKNOWN' ||\n    quoteCurrency === 'UNKNOWN' ||\n    !baseCurrency ||\n    !quoteCurrency\n  ) {\n    return [];\n  }\n  return [\n    {\n      market,\n      key: `${baseCurrency}${quoteCurrency}${baseCurrency}`,\n      coin: baseCurrency,\n      wallet: baseCurrencyBalances,\n      orders:\n        baseExists && market && openOrders\n          ? market.baseSplSizeToNumber(\n              openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\n            )\n          : null,\n      openOrders,\n      unsettled:\n        baseExists && market && openOrders\n          ? market.baseSplSizeToNumber(openOrders.baseTokenFree)\n          : null,\n    },\n    {\n      market,\n      key: `${quoteCurrency}${baseCurrency}${quoteCurrency}`,\n      coin: quoteCurrency,\n      wallet: quoteCurrencyBalances,\n      openOrders,\n      orders:\n        quoteExists && market && openOrders\n          ? market.quoteSplSizeToNumber(\n              openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\n            )\n          : null,\n      unsettled:\n        quoteExists && market && openOrders\n          ? market.quoteSplSizeToNumber(openOrders.quoteTokenFree)\n          : null,\n    },\n  ];\n}\n\nexport function useWalletBalancesForAllMarkets() {\n  return [[], true]\n  // Note: This is too expensive on validators to poll. Switch over to websockets or cache accounts\n  // const { connected, wallet } = useWallet();\n  //\n  // const connection = useConnection();\n  // // todo: use custom markets\n  // const allMarkets = useAllMarkets([]);\n  //\n  // async function getWalletBalancesForAllMarkets() {\n  //   let balances: Balances[] = [];\n  //   if (!connected) {\n  //     return balances;\n  //   }\n  //\n  //   let marketData: {market: Market; marketName: string; programId: PublicKey;};\n  //   for (marketData of allMarkets) {\n  //     const { market, marketName } = marketData;\n  //     if (!market) {\n  //       return balances;\n  //     }\n  //     const baseCurrency = marketName.includes('/') && marketName.split('/')[0];\n  //     if (baseCurrency && !balances.find((balance) => balance.coin === baseCurrency)) {\n  //       const baseBalance = await getCurrencyBalance(\n  //         market,\n  //         connection,\n  //         wallet,\n  //         true,\n  //       );\n  //       balances.push({\n  //         key: baseCurrency,\n  //         coin: baseCurrency,\n  //         wallet: baseBalance,\n  //       });\n  //     }\n  //     const quoteCurrency =\n  //       marketName.includes('/') && marketName.split('/')[1];\n  //     if (quoteCurrency && !balances.find((balance) => balance.coin === quoteCurrency)) {\n  //       const quoteBalance = await getCurrencyBalance(\n  //         market,\n  //         connection,\n  //         wallet,\n  //         false,\n  //       );\n  //       balances.push({\n  //         key: quoteCurrency,\n  //         coin: quoteCurrency,\n  //         wallet: quoteBalance,\n  //       });\n  //     }\n  //   }\n  //\n  //   return balances;\n  // }\n  //\n  // return useAsyncData(\n  //   getWalletBalancesForAllMarkets,\n  //   tuple(\n  //     'getWalletBalancesForAllMarkets',\n  //     connected,\n  //     connection,\n  //     wallet,\n  //     allMarkets,\n  //   ),\n  //   { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  // );\n}\n\nasync function getCurrencyBalance(market: Market, connection, wallet, base = true) {\n  const currencyAccounts: { pubkey: PublicKey; account: AccountInfo<Buffer> }[] = base\n    ? await market.findBaseTokenAccountsForOwner(connection, wallet.publicKey)\n    : await market.findQuoteTokenAccountsForOwner(connection, wallet.publicKey);\n  const currencyAccount = currencyAccounts && currencyAccounts[0];\n  const tokenAccountBalances: RpcResponseAndContext<TokenAmount> = await connection.getTokenAccountBalance(\n    currencyAccount.pubkey,\n  );\n  return tokenAccountBalances?.value?.uiAmount;\n}\n\nexport function useOpenOrderAccountBalancesForAllMarkets() {\n  return [[], true]\n  // Note: This is too expensive on validators to poll. Switch over to websockets or cache accounts\n  // const { connected, wallet } = useWallet();\n  //\n  // const connection = useConnection();\n  // // todo: use custom markets\n  // const allMarkets = useAllMarkets([]);\n  //\n  // async function getOpenOrderAccountsForAllMarkets() {\n  //   let accounts: OpenOrdersBalances[] = [];\n  //   if (!connected) {\n  //     return accounts;\n  //   }\n  //\n  //   let marketData: {market: Market; marketName: string; programId: PublicKey;};\n  //   for (marketData of allMarkets) {\n  //     const { market, marketName } = marketData;\n  //     if (!market) {\n  //       return accounts;\n  //     }\n  //     const openOrderAccounts = await market.findOpenOrdersAccountsForOwner(\n  //       connection,\n  //       wallet.publicKey,\n  //     );\n  //     if (!openOrderAccounts) {\n  //       continue;\n  //     }\n  //     const baseCurrencyAccounts = await market.findBaseTokenAccountsForOwner(\n  //       connection,\n  //       wallet.publicKey,\n  //     );\n  //     const quoteCurrencyAccounts = await market.findQuoteTokenAccountsForOwner(\n  //       connection,\n  //       wallet.publicKey,\n  //     );\n  //\n  //     const baseCurrency = marketName.includes('/') && marketName.split('/')[0];\n  //     const quoteCurrency =\n  //       marketName.includes('/') && marketName.split('/')[1];\n  //\n  //     const openOrderAccountBalances: OpenOrdersBalances[] = [];\n  //     openOrderAccounts.forEach((openOrdersAccount) => {\n  //       const inOrdersBase =\n  //         openOrdersAccount?.baseTokenTotal &&\n  //         openOrdersAccount?.baseTokenFree &&\n  //         market.baseSplSizeToNumber(\n  //           openOrdersAccount.baseTokenTotal.sub(\n  //             openOrdersAccount.baseTokenFree,\n  //           ),\n  //         );\n  //       const inOrdersQuote =\n  //         openOrdersAccount?.quoteTokenTotal &&\n  //         openOrdersAccount?.quoteTokenFree &&\n  //         market.baseSplSizeToNumber(\n  //           openOrdersAccount.quoteTokenTotal.sub(\n  //             openOrdersAccount.quoteTokenFree,\n  //           ),\n  //         );\n  //       const unsettledBase =\n  //         openOrdersAccount?.baseTokenFree &&\n  //         market.baseSplSizeToNumber(openOrdersAccount.baseTokenFree);\n  //       const unsettledQuote =\n  //         openOrdersAccount?.quoteTokenFree &&\n  //         market.baseSplSizeToNumber(openOrdersAccount.quoteTokenFree);\n  //       openOrderAccountBalances.push({\n  //         market: marketName,\n  //         coin: baseCurrency || '',\n  //         key: baseCurrency || '',\n  //         orders: inOrdersBase,\n  //         unsettled: unsettledBase,\n  //         openOrders: openOrdersAccount,\n  //         baseCurrencyAccount: baseCurrencyAccounts && baseCurrencyAccounts[0],\n  //         quoteCurrencyAccount:\n  //           quoteCurrencyAccounts && quoteCurrencyAccounts[0],\n  //       });\n  //       openOrderAccountBalances.push({\n  //         market: marketName,\n  //         coin: quoteCurrency || '',\n  //         key: quoteCurrency || '',\n  //         orders: inOrdersQuote,\n  //         unsettled: unsettledQuote,\n  //         openOrders: openOrdersAccount,\n  //         baseCurrencyAccount: baseCurrencyAccounts && baseCurrencyAccounts[0],\n  //         quoteCurrencyAccount:\n  //           quoteCurrencyAccounts && quoteCurrencyAccounts[0],\n  //       });\n  //     });\n  //     accounts = accounts.concat(openOrderAccountBalances);\n  //   }\n  //\n  //   return accounts;\n  // }\n  //\n  // return useAsyncData(\n  //   getOpenOrderAccountsForAllMarkets,\n  //   tuple(\n  //     'getOpenOrderAccountsForAllMarkets',\n  //     connected,\n  //     connection,\n  //     wallet,\n  //     allMarkets,\n  //   ),\n  //   { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  // );\n}\n\nexport function useUnmigratedDeprecatedMarkets() {\n  const connection = useConnection();\n  const { accounts } = useUnmigratedOpenOrdersAccounts();\n  const marketsList =\n    accounts &&\n    Array.from(new Set(accounts.map((openOrders) => openOrders.market)));\n  const deps = marketsList && marketsList.map((m) => m.toBase58());\n\n  const useUnmigratedDeprecatedMarketsInner = async () => {\n    if (!marketsList) {\n      return null;\n    }\n    const getMarket = async (address) => {\n      const marketInfo = USE_MARKETS.find((market) =>\n        market.address.equals(address),\n      );\n      if (!marketInfo) {\n        console.log('Failed loading market');\n        notify({\n          message: 'Error loading market',\n          type: 'error',\n        });\n        return null;\n      }\n      try {\n        console.log('Loading market', marketInfo.name);\n        // NOTE: Should this just be cached by (connection, marketInfo.address, marketInfo.programId)?\n        return await Market.load(\n          connection,\n          marketInfo.address,\n          {},\n          marketInfo.programId,\n        );\n      } catch (e) {\n        console.log('Failed loading market', marketInfo.name, e);\n        notify({\n          message: 'Error loading market',\n          description: e.message,\n          type: 'error',\n        });\n        return null;\n      }\n    };\n    return (await Promise.all(marketsList.map(getMarket))).filter((x) => x);\n  };\n  const [markets] = useAsyncData(\n    useUnmigratedDeprecatedMarketsInner,\n    tuple(\n      'useUnmigratedDeprecatedMarketsInner',\n      connection,\n      deps && deps.toString(),\n    ),\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\n  );\n  if (!markets) {\n    return null;\n  }\n  return markets.map((market) => ({\n    market,\n    openOrdersList: accounts?.filter((openOrders) =>\n      market && openOrders.market.equals(market.address),\n    ),\n  }));\n}\n\nexport function useGetOpenOrdersForDeprecatedMarkets(): {\n  openOrders: OrderWithMarketAndMarketName[] | null | undefined;\n  loaded: boolean;\n  refreshOpenOrders: () => void;\n} {\n  const { connected, wallet } = useWallet();\n  const [customMarkets] = useLocalStorageState<CustomMarketInfo[]>('customMarkets', []);\n  const connection = useConnection();\n  const marketsAndOrders = useUnmigratedDeprecatedMarkets();\n  const marketsList =\n    marketsAndOrders && marketsAndOrders.map(({ market }) => market);\n\n  // This isn't quite right: open order balances could change\n  const deps =\n    marketsList && marketsList.filter((market): market is Market => !!market).map((market) => market.address.toBase58());\n\n  async function getOpenOrdersForDeprecatedMarkets() {\n    if (!connected) {\n      return null;\n    }\n    if (!marketsList) {\n      return null;\n    }\n    console.log('refreshing getOpenOrdersForDeprecatedMarkets');\n    const getOrders = async (market: Market | null) => {\n      if (!market) {\n        return null;\n      }\n      const { marketName } = getMarketDetails(market, customMarkets);\n      try {\n        console.log('Fetching open orders for', marketName);\n        // Can do better than this, we have the open orders accounts already\n        return (\n          await market.loadOrdersForOwner(connection, wallet.publicKey)\n        ).map((order) => ({ marketName, market, ...order }));\n      } catch (e) {\n        console.log('Failed loading open orders', market.address.toBase58(), e);\n        notify({\n          message: `Error loading open orders for deprecated ${marketName}`,\n          description: e.message,\n          type: 'error',\n        });\n        return null;\n      }\n    };\n    return (await Promise.all(marketsList.map(getOrders))).filter(\n        (x): x is OrderWithMarketAndMarketName[] => !!x\n    ).flat();\n  }\n\n  const cacheKey = tuple(\n    'getOpenOrdersForDeprecatedMarkets',\n    connected,\n    connection,\n    wallet,\n    deps && deps.toString(),\n  );\n  const [openOrders, loaded] = useAsyncData(\n    getOpenOrdersForDeprecatedMarkets,\n    cacheKey,\n    {\n      refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\n    },\n  );\n  console.log('openOrders', openOrders);\n  return {\n    openOrders,\n    loaded,\n    refreshOpenOrders: () => refreshCache(cacheKey),\n  };\n}\n\nexport function useBalancesForDeprecatedMarkets() {\n  const markets = useUnmigratedDeprecatedMarkets();\n  const [customMarkets] = useLocalStorageState<CustomMarketInfo[]>('customMarkets', []);\n  if (!markets) {\n    return null;\n  }\n\n  const openOrderAccountBalances: DeprecatedOpenOrdersBalances[] = [];\n  markets.forEach(({ market, openOrdersList }) => {\n    const { baseCurrency, quoteCurrency, marketName } = getMarketDetails(\n      market,\n      customMarkets,\n    );\n    if (!baseCurrency || !quoteCurrency || !market) {\n      return;\n    }\n    (openOrdersList || []).forEach((openOrders) => {\n      const inOrdersBase =\n        openOrders?.baseTokenTotal &&\n        openOrders?.baseTokenFree &&\n        market.baseSplSizeToNumber(\n          openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\n        );\n      const inOrdersQuote =\n        openOrders?.quoteTokenTotal &&\n        openOrders?.quoteTokenFree &&\n        market.baseSplSizeToNumber(\n          openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\n        );\n      const unsettledBase =\n        openOrders?.baseTokenFree &&\n        market.baseSplSizeToNumber(openOrders.baseTokenFree);\n      const unsettledQuote =\n        openOrders?.quoteTokenFree &&\n        market.baseSplSizeToNumber(openOrders.quoteTokenFree);\n\n      openOrderAccountBalances.push({\n        marketName,\n        market,\n        coin: baseCurrency,\n        key: `${marketName}${baseCurrency}`,\n        orders: inOrdersBase,\n        unsettled: unsettledBase,\n        openOrders,\n      });\n      openOrderAccountBalances.push({\n        marketName,\n        market,\n        coin: quoteCurrency,\n        key: `${marketName}${quoteCurrency}`,\n        orders: inOrdersQuote,\n        unsettled: unsettledQuote,\n        openOrders,\n      });\n    });\n  });\n  return openOrderAccountBalances;\n}\n\nexport function getMarketInfos(customMarkets: CustomMarketInfo[]): MarketInfo[] {\n  const customMarketsInfo = customMarkets.map((m) => ({\n    ...m,\n    address: new PublicKey(m.address),\n    programId: new PublicKey(m.programId),\n    deprecated: false,\n  }));\n\n  return [...customMarketsInfo, ...USE_MARKETS];\n}\n","import * as BufferLayout from 'buffer-layout';\nimport bs58 from 'bs58';\nimport {AccountInfo, Connection, PublicKey} from '@solana/web3.js';\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\nimport {TokenAccount} from \"./types\";\n\nexport const ACCOUNT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(32, 'mint'),\n  BufferLayout.blob(32, 'owner'),\n  BufferLayout.nu64('amount'),\n  BufferLayout.blob(93),\n]);\n\nexport const MINT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(44),\n  BufferLayout.u8('decimals'),\n  BufferLayout.u8('initialized'),\n  BufferLayout.blob(36),\n]);\n\nexport function parseTokenAccountData(data) {\n  let { mint, owner, amount } = ACCOUNT_LAYOUT.decode(data);\n  return {\n    mint: new PublicKey(mint),\n    owner: new PublicKey(owner),\n    amount,\n  };\n}\n\nexport function parseTokenMintData(data) {\n  let { decimals, initialized } = MINT_LAYOUT.decode(data);\n  return { decimals, initialized };\n}\n\nexport function getOwnedAccountsFilters(publicKey: PublicKey) {\n  return [\n    {\n      memcmp: {\n        offset: ACCOUNT_LAYOUT.offsetOf('owner'),\n        bytes: publicKey.toBase58(),\n      },\n    },\n    {\n      dataSize: ACCOUNT_LAYOUT.span,\n    },\n  ];\n}\n\nexport const TOKEN_PROGRAM_ID = new PublicKey(\n  'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n);\n\nexport async function getOwnedTokenAccounts(\n    connection: Connection, publicKey: PublicKey\n): Promise<Array<{publicKey: PublicKey, accountInfo: AccountInfo<Buffer>}>> {\n  let filters = getOwnedAccountsFilters(publicKey);\n  // @ts-ignore\n  let resp = await connection._rpcRequest('getProgramAccounts', [\n    TOKEN_PROGRAM_ID.toBase58(),\n    {\n      commitment: connection.commitment,\n      filters,\n    },\n  ]);\n  if (resp.error) {\n    throw new Error(\n      'failed to get token accounts owned by ' +\n        publicKey.toBase58() +\n        ': ' +\n        resp.error.message,\n    );\n  }\n  return resp.result\n    .map(({ pubkey, account: { data, executable, owner, lamports } }) => ({\n      publicKey: new PublicKey(pubkey),\n      accountInfo: {\n        data: bs58.decode(data),\n        executable,\n        owner: new PublicKey(owner),\n        lamports,\n      },\n    }))\n    .filter(({ accountInfo }) => {\n      // TODO: remove this check once mainnet is updated\n      return filters.every((filter) => {\n        if (filter.dataSize) {\n          return accountInfo.data.length === filter.dataSize;\n        } else if (filter.memcmp) {\n          let filterBytes = bs58.decode(filter.memcmp.bytes);\n          return accountInfo.data\n            .slice(\n              filter.memcmp.offset,\n              filter.memcmp.offset + filterBytes.length,\n            )\n            .equals(filterBytes);\n        }\n        return false;\n      });\n    });\n}\n\nexport async function getTokenAccountInfo(connection: Connection, ownerAddress: PublicKey) {\n  let [splAccounts, account] = await Promise.all([\n    getOwnedTokenAccounts(connection, ownerAddress),\n    connection.getAccountInfo(ownerAddress),\n  ]);\n  const parsedSplAccounts: TokenAccount[] = splAccounts.map(({ publicKey, accountInfo }) => {\n    return {\n      pubkey: publicKey,\n      account: accountInfo,\n      effectiveMint: parseTokenAccountData(accountInfo.data).mint,\n    };\n  });\n  return parsedSplAccounts.concat({\n    pubkey: ownerAddress,\n    account,\n    effectiveMint: WRAPPED_SOL_MINT,\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/logo.49174c73.svg\";","import { useCallback, useEffect, useState } from 'react';\nimport { PublicKey } from '@solana/web3.js';\n\nexport function isValidPublicKey(key) {\n  if (!key) {\n    return false;\n  }\n  try {\n    new PublicKey(key);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport async function sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport const percentFormat = new Intl.NumberFormat(undefined, {\n  style: 'percent',\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n});\n\nexport function floorToDecimal(value, decimals) {\n  return decimals ? Math.floor(value * 10 ** decimals) / 10 ** decimals : value;\n}\n\nexport function roundToDecimal(value, decimals) {\n  return decimals ? Math.round(value * 10 ** decimals) / 10 ** decimals : value;\n}\n\nexport function getDecimalCount(value) {\n  if (!isNaN(value) && Math.floor(value) !== value)\n    return value.toString().split('.')[1].length || 0;\n  return 0;\n}\n\nexport function useLocalStorageState<T = any>(key: string, defaultState: T | null = null): [T, (newState: T) => void] {\n  const [state, setState] = useState<T>(() => {\n    // NOTE: Not sure if this is ok\n    const storedState = localStorage.getItem(key);\n    if (storedState) {\n      return JSON.parse(storedState);\n    }\n    return defaultState;\n  });\n\n  const setLocalStorageState = useCallback<(newState: T) => void>(\n    (newState) => {\n      const changed = state !== newState;\n      if (!changed) {\n        return;\n      }\n      setState(newState);\n      if (newState === null) {\n        localStorage.removeItem(key);\n      } else {\n        localStorage.setItem(key, JSON.stringify(newState));\n      }\n    },\n    [state, key],\n  );\n\n  return [state, setLocalStorageState];\n}\n\nexport function useEffectAfterTimeout(effect, timeout) {\n  useEffect(() => {\n    const handle = setTimeout(effect, timeout);\n    return () => clearTimeout(handle);\n  });\n}\n\nexport function useListener(emitter, eventName) {\n  const [, forceUpdate] = useState(0);\n  useEffect(() => {\n    const listener = () => forceUpdate((i) => i + 1);\n    emitter.on(eventName, listener);\n    return () => emitter.removeListener(eventName, listener);\n  }, [emitter, eventName]);\n}\n\nexport function abbreviateAddress(address) {\n  const base58 = address.toBase58();\n  return base58.slice(0, 4) + '…' + base58.slice(-4);\n}\n\nexport function isEqual(obj1, obj2, keys) {\n  if (!keys && Object.keys(obj1).length !== Object.keys(obj2).length) {\n    return false;\n  }\n  keys = keys || Object.keys(obj1);\n  for (const k of keys) {\n    if (obj1[k] !== obj2[k]) {\n      // shallow comparison\n      return false;\n    }\n  }\n  return true;\n}\n","import React from 'react';\nimport { notification } from 'antd';\nimport Link from '../components/Link';\n\nexport function notify({\n  message,\n  description,\n  txid,\n  type = 'info',\n  placement = 'bottomLeft',\n}: {\n  message: string;\n  description?: string | JSX.Element;\n  txid?: string;\n  type?: string;\n  placement?: string;\n}) {\n  if (txid) {\n    description = (\n      <Link\n        external\n        to={'https://explorer.solana.com/tx/' + txid}\n        style={{ color: '#0000ff' }}\n      >\n        View transaction {txid.slice(0, 8)}...{txid.slice(txid.length - 8)}\n      </Link>\n    );\n  }\n  notification[type]({\n    message: <span style={{ color: 'black' }}>{message}</span>,\n    description: (\n      <span style={{ color: 'black', opacity: 0.5 }}>{description}</span>\n    ),\n    placement,\n    style: {\n      backgroundColor: 'white',\n    },\n  });\n}\n","import {useLocalStorageState} from './utils';\nimport {Account, AccountInfo, clusterApiUrl, Connection, PublicKey} from '@solana/web3.js';\nimport React, {useContext, useEffect, useMemo} from 'react';\nimport {setCache, useAsyncData} from './fetch-loop';\nimport tuple from 'immutable-tuple';\nimport {ConnectionContextValues, EndpointInfo} from \"./types\";\n\nexport const ENDPOINTS: EndpointInfo[] = [\n  {\n    name: 'mainnet-beta',\n    endpoint: 'https://solana-api.projectserum.com',\n    custom: false\n  },\n  { name: 'testnet', endpoint: clusterApiUrl('testnet'), custom: false },\n  { name: 'devnet', endpoint: clusterApiUrl('devnet'), custom: false },\n  { name: 'localnet', endpoint: 'http://127.0.0.1:8899', custom: false },\n];\n\nconst accountListenerCount = new Map();\n\nconst ConnectionContext: React.Context<null | ConnectionContextValues> = React.createContext<null | ConnectionContextValues>(null);\n\nexport function ConnectionProvider({ children }) {\n  const [endpoint, setEndpoint] = useLocalStorageState<string>(\n    'connectionEndpts',\n    ENDPOINTS[0].endpoint,\n  );\n  const [customEndpoints, setCustomEndpoints] = useLocalStorageState<EndpointInfo[]>(\n    'customConnectionEndpoints',\n    []\n  )\n  const availableEndpoints = ENDPOINTS.concat(customEndpoints);\n\n  const connection = useMemo(() => new Connection(endpoint, 'recent'), [\n    endpoint,\n  ]);\n  const sendConnection = useMemo(() => new Connection(endpoint, 'recent'), [\n    endpoint,\n  ]);\n\n  // The websocket library solana/web3.js uses closes its websocket connection when the subscription list\n  // is empty after opening its first time, preventing subsequent subscriptions from receiving responses.\n  // This is a hack to prevent the list from every getting empty\n  useEffect(() => {\n    const id = connection.onAccountChange(new Account().publicKey, () => {});\n    return () => {connection.removeAccountChangeListener(id)};\n  }, [connection]);\n\n  useEffect(() => {\n    const id = connection.onSlotChange(() => null);\n    return () => {connection.removeSlotChangeListener(id)};\n  }, [connection]);\n\n  useEffect(() => {\n    const id = sendConnection.onAccountChange(\n      new Account().publicKey,\n      () => {},\n    );\n    return () => {sendConnection.removeAccountChangeListener(id)};\n  }, [sendConnection]);\n\n  useEffect(() => {\n    const id = sendConnection.onSlotChange(() => null);\n    return () => {sendConnection.removeSlotChangeListener(id)};\n  }, [sendConnection]);\n\n  return (\n    <ConnectionContext.Provider\n      value={{ endpoint, setEndpoint, connection, sendConnection, availableEndpoints, setCustomEndpoints }}\n    >\n      {children}\n    </ConnectionContext.Provider>\n  );\n}\n\nexport function useConnection() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context')\n  }\n  return context.connection;\n}\n\nexport function useSendConnection() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context')\n  }\n  return context.sendConnection;\n}\n\nexport function useConnectionConfig() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context')\n  }\n  return {\n    endpoint: context.endpoint,\n    setEndpoint: context.setEndpoint,\n    availableEndpoints: context.availableEndpoints,\n    setCustomEndpoints: context.setCustomEndpoints,\n  };\n}\n\nexport function useAccountInfo(publicKey: PublicKey | undefined | null): [AccountInfo<Buffer> | null | undefined, boolean] {\n  const connection = useConnection();\n  const cacheKey = tuple(connection, publicKey?.toBase58());\n  const [accountInfo, loaded] = useAsyncData<AccountInfo<Buffer> | null>(\n    async () => (publicKey ? connection.getAccountInfo(publicKey) : null),\n    cacheKey,\n    { refreshInterval: 60_000 },\n  );\n  useEffect(() => {\n    if (!publicKey) {\n      return;\n    }\n    if (accountListenerCount.has(cacheKey)) {\n      let currentItem = accountListenerCount.get(cacheKey);\n      ++currentItem.count;\n    } else {\n      let previousData: Buffer | null = null;\n      const subscriptionId = connection.onAccountChange(publicKey, (e) => {\n        if (e.data) {\n          if (!previousData || !previousData.equals(e.data)) {\n            setCache(cacheKey, e);\n          } else {\n          }\n          previousData = e.data;\n        }\n      });\n      accountListenerCount.set(cacheKey, { count: 1, subscriptionId });\n    }\n    return () => {\n      let currentItem = accountListenerCount.get(cacheKey);\n      let nextCount = currentItem.count - 1;\n      if (nextCount <= 0) {\n        connection.removeAccountChangeListener(currentItem.subscriptionId);\n        accountListenerCount.delete(cacheKey);\n      } else {\n        --currentItem.count;\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey]);\n  return [accountInfo, loaded];\n}\n\nexport function useAccountData(publicKey) {\n  const [accountInfo] = useAccountInfo(publicKey);\n  return accountInfo && accountInfo.data;\n}\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\nhtml,body{\n  background: #11161D;\n}\ninput[type=number]::-webkit-inner-spin-button {\n  opacity: 0;\n}\ninput[type=number]:hover::-webkit-inner-spin-button,\ninput[type=number]:focus::-webkit-inner-spin-button {\n  opacity: 0.25;\n}\n/* width */\n::-webkit-scrollbar {\n  width: 15px;\n}\n/* Track */\n::-webkit-scrollbar-track {\n  background: #2d313c;\n}\n/* Handle */\n::-webkit-scrollbar-thumb {\n  background: #5b5f67;\n}\n/* Handle on hover */\n::-webkit-scrollbar-thumb:hover {\n  background: #5b5f67;\n}\n.ant-slider-track, .ant-slider:hover .ant-slider-track {\n  background-color: #2abdd2;\n  opacity: 0.75;\n}\n.ant-slider-track,\n.ant-slider ant-slider-track:hover {\n  background-color: #2abdd2;\n  opacity: 0.75;\n}\n.ant-slider-dot-active,\n.ant-slider-handle,\n.ant-slider-handle-click-focused,\n.ant-slider:hover .ant-slider-handle:not(.ant-tooltip-open)  {\n  border: 2px solid #2abdd2; \n}\n.ant-table-tbody > tr.ant-table-row:hover > td {\n  background: #273043;\n}\n.ant-table-tbody > tr > td {\n  border-bottom: 8px solid #1A2029;\n}\n.ant-table-container table > thead > tr:first-child th {\n  border-bottom: none;\n}\n.ant-divider-horizontal.ant-divider-with-text::before, .ant-divider-horizontal.ant-divider-with-text::after {\n  border-top: 1px solid #434a59 !important;\n}\n.ant-layout {\n    background: #11161D\n  }\n  .ant-table {\n    background: #212734;\n  }\n  .ant-table-thead > tr > th {\n    background: #1A2029;\n  }\n.ant-select-item-option-content {\n  img {\n    margin-right: 4px;\n  }\n}\n.ant-modal-content {\n  background-color: #212734;\n}\n\n@-webkit-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n@-moz-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n@-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n.flash {\n  -moz-animation: highlight 0.5s ease 0s 1 alternate ;\n  -webkit-animation: highlight 0.5s ease 0s 1 alternate;\n  animation: highlight 0.5s ease 0s 1 alternate;\n}`;\n","import React, { Component } from 'react';\nimport { Typography } from 'antd';\n\nconst { Title } = Typography;\n\nexport default class ErrorBoundary extends Component {\n  state = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div>\n          <div>\n            <Title level={2}>Something went wrong.</Title>\n            <Title level={4}>Please try again later.</Title>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","import { useRef, useEffect } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef<() => void>();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current && savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  margin: 5px;\n  padding: 20px;\n  background-color: #1a2029;\n`;\n\nexport default function FloatingElement({ style, children }) {\n  return <Wrapper style={{ ...style }}>{children}</Wrapper>;\n}\n","import { Col, Row } from 'antd';\nimport React, { useRef, useEffect, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useMarket, useOrderbook, useMarkPrice } from '../utils/markets';\nimport { isEqual, getDecimalCount } from '../utils/utils';\nimport { useInterval } from '../utils/useInterval';\nimport FloatingElement from './layout/FloatingElement';\nimport usePrevious from '../utils/usePrevious';\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\n\nconst SizeTitle = styled(Row)`\n  padding: 20px 0 14px;\n  color: #434a59;\n`;\n\nconst MarkPriceTitle = styled(Row)`\n  padding: 20px 0 14px;\n  font-weight: 700;\n`;\n\nconst Line = styled.div`\n  text-align: right;\n  float: right;\n  height: 100%;\n  ${(props) =>\n    props['data-width'] &&\n    css`\n      width: ${props['data-width']};\n    `}\n  ${(props) =>\n    props['data-bgcolor'] &&\n    css`\n      background-color: ${props['data-bgcolor']};\n    `}\n`;\n\nconst Price = styled.div`\n  position: absolute;\n  right: 5px;\n  color: white;\n`;\n\nexport default function Orderbook({ smallScreen, depth = 7, onPrice, onSize }) {\n  const markPrice = useMarkPrice();\n  const [orderbook] = useOrderbook();\n  const { baseCurrency, quoteCurrency } = useMarket();\n\n  const currentOrderbookData = useRef(null);\n  const lastOrderbookData = useRef(null);\n\n  const [orderbookData, setOrderbookData] = useState(null);\n\n  useInterval(() => {\n    if (\n      !currentOrderbookData.current ||\n      JSON.stringify(currentOrderbookData.current) !==\n        JSON.stringify(lastOrderbookData.current)\n    ) {\n      let bids = orderbook?.bids || [];\n      let asks = orderbook?.asks || [];\n\n      let sum = (total, [, size], index) =>\n        index < depth ? total + size : total;\n      let totalSize = bids.reduce(sum, 0) + asks.reduce(sum, 0);\n\n      let bidsToDisplay = getCumulativeOrderbookSide(bids, totalSize, false);\n      let asksToDisplay = getCumulativeOrderbookSide(asks, totalSize, true);\n\n      currentOrderbookData.current = {\n        bids: orderbook?.bids,\n        asks: orderbook?.asks,\n      };\n\n      setOrderbookData({ bids: bidsToDisplay, asks: asksToDisplay });\n    }\n  }, 250);\n\n  useEffect(() => {\n    lastOrderbookData.current = {\n      bids: orderbook?.bids,\n      asks: orderbook?.asks,\n    };\n  }, [orderbook]);\n\n  function getCumulativeOrderbookSide(orders, totalSize, backwards = false) {\n    let cumulative = orders\n      .slice(0, depth)\n      .reduce((cumulative, [price, size], i) => {\n        const cumulativeSize = (cumulative[i - 1]?.cumulativeSize || 0) + size;\n        cumulative.push({\n          price,\n          size,\n          cumulativeSize,\n          sizePercent: Math.round((cumulativeSize / (totalSize || 1)) * 100),\n        });\n        return cumulative;\n      }, []);\n    if (backwards) {\n      cumulative = cumulative.reverse();\n    }\n    return cumulative;\n  }\n\n  return (\n    <FloatingElement\n      style={\n        smallScreen ? { flex: 1 } : { height: '500px', overflow: 'hidden' }\n      }\n    >\n      <Title>Orderbook</Title>\n      <SizeTitle>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          Size ({baseCurrency})\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          Price ({quoteCurrency})\n        </Col>\n      </SizeTitle>\n      {orderbookData?.asks.map(({ price, size, sizePercent }) => (\n        <OrderbookRow\n          key={price + ''}\n          price={price}\n          size={size}\n          side={'sell'}\n          sizePercent={sizePercent}\n          onPriceClick={() => onPrice(price)}\n          onSizeClick={() => onSize(size)}\n        />\n      ))}\n      <MarkPriceComponent markPrice={markPrice} />\n      {orderbookData?.bids.map(({ price, size, sizePercent }) => (\n        <OrderbookRow\n          key={price + ''}\n          price={price}\n          size={size}\n          side={'buy'}\n          sizePercent={sizePercent}\n          onPriceClick={() => onPrice(price)}\n          onSizeClick={() => onSize(size)}\n        />\n      ))}\n    </FloatingElement>\n  );\n}\n\nconst OrderbookRow = React.memo(\n  ({ side, price, size, sizePercent, onSizeClick, onPriceClick }) => {\n    const element = useRef();\n\n    const { market } = useMarket();\n\n    useEffect(() => {\n      // eslint-disable-next-line\n      !element.current?.classList.contains('flash') &&\n        element.current?.classList.add('flash');\n      const id = setTimeout(\n        () =>\n          element.current?.classList.contains('flash') &&\n          element.current?.classList.remove('flash'),\n        250,\n      );\n      return () => clearTimeout(id);\n    }, [price, size]);\n\n    let formattedSize =\n      market?.minOrderSize && !isNaN(size)\n        ? Number(size).toFixed(getDecimalCount(market.minOrderSize) + 1)\n        : size;\n\n    let formattedPrice =\n      market?.tickSize && !isNaN(price)\n        ? Number(price).toFixed(getDecimalCount(market.tickSize) + 1)\n        : price;\n\n    return (\n      <Row ref={element} style={{ marginBottom: 1 }} onClick={onSizeClick}>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          {formattedSize}\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          <Line\n            data-width={sizePercent + '%'}\n            data-bgcolor={\n              side === 'buy'\n                ? 'rgba(65, 199, 122, 0.6)'\n                : 'rgba(242, 60, 105, 0.6)'\n            }\n          />\n          <Price onClick={onPriceClick}>{formattedPrice}</Price>\n        </Col>\n      </Row>\n    );\n  },\n  (prevProps, nextProps) =>\n    isEqual(prevProps, nextProps, ['price', 'size', 'sizePercent']),\n);\n\nconst MarkPriceComponent = React.memo(\n  ({ markPrice }) => {\n    const { market } = useMarket();\n    const previousMarkPrice = usePrevious(markPrice);\n\n    let markPriceColor =\n      markPrice > previousMarkPrice\n        ? '#41C77A'\n        : markPrice < previousMarkPrice\n        ? '#F23B69'\n        : 'white';\n\n    let formattedMarkPrice =\n      markPrice &&\n      market?.tickSize &&\n      markPrice.toFixed(getDecimalCount(market.tickSize));\n\n    return (\n      <MarkPriceTitle justify=\"center\">\n        <Col style={{ color: markPriceColor }}>\n          {markPrice > previousMarkPrice && (\n            <ArrowUpOutlined style={{ marginRight: 5 }} />\n          )}\n          {markPrice < previousMarkPrice && (\n            <ArrowDownOutlined style={{ marginRight: 5 }} />\n          )}\n          {formattedMarkPrice || '----'}\n        </Col>\n      </MarkPriceTitle>\n    );\n  },\n  (prevProps, nextProps) => isEqual(prevProps, nextProps, ['markPrice']),\n);\n","import { useEffect, useRef } from 'react';\n\nexport default function usePrevious(value) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef();\n\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n\n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\n","import React from 'react';\nimport { ConfigProvider, Table } from 'antd';\n\nexport default function DataTable({\n  dataSource,\n  columns,\n  emptyLabel = 'No data',\n  pagination = false,\n  loading = false,\n  pageSize = 10,\n}) {\n  const customizeRenderEmpty = () => (\n    <div\n      style={{\n        padding: '20px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      {emptyLabel}\n    </div>\n  );\n\n  return (\n    <ConfigProvider renderEmpty={customizeRenderEmpty}>\n      <Table\n        dataSource={dataSource}\n        columns={columns}\n        pagination={pagination ? { pagination: true, pageSize } : false}\n        loading={loading}\n      />\n    </ConfigProvider>\n  );\n}\n","import { Button } from 'antd';\nimport React from 'react';\nimport {\n  useTokenAccounts,\n  getSelectedTokenAccountForMint,\n} from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\nimport { useSendConnection } from '../../utils/connection';\nimport { useWallet } from '../../utils/wallet';\nimport { settleFunds } from '../../utils/send';\nimport { notify } from '../../utils/notifications';\n\nexport default function BalancesTable({\n  balances,\n  showMarket,\n  hideWalletBalance,\n  onSettleSuccess,\n}) {\n  const [accounts] = useTokenAccounts();\n  const connection = useSendConnection();\n  const { wallet } = useWallet();\n\n  async function onSettleFunds(market, openOrders) {\n    try {\n      await settleFunds({\n        market,\n        openOrders,\n        connection,\n        wallet,\n        baseCurrencyAccount: getSelectedTokenAccountForMint(\n          accounts,\n          market?.baseMintAddress,\n        ),\n        quoteCurrencyAccount: getSelectedTokenAccountForMint(\n          accounts,\n          market?.quoteMintAddress,\n        ),\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    }\n    onSettleSuccess && onSettleSuccess();\n  }\n\n  const columns = [\n    showMarket\n      ? {\n          title: 'Market',\n          dataIndex: 'marketName',\n          key: 'marketName',\n        }\n      : null,\n    {\n      title: 'Coin',\n      dataIndex: 'coin',\n      key: 'coin',\n    },\n    hideWalletBalance\n      ? null\n      : {\n          title: 'Wallet Balance',\n          dataIndex: 'wallet',\n          key: 'wallet',\n        },\n    {\n      title: 'Orders',\n      dataIndex: 'orders',\n      key: 'orders',\n    },\n    {\n      title: 'Unsettled',\n      dataIndex: 'unsettled',\n      key: 'unsettled',\n    },\n    {\n      key: 'action',\n      render: ({ market, openOrders, marketName }) => (\n        <div style={{ textAlign: 'right' }}>\n          <Button\n            ghost\n            style={{ marginRight: 12 }}\n            onClick={() => onSettleFunds(market, openOrders)}\n          >\n            Settle {marketName}\n          </Button>\n        </div>\n      ),\n    },\n  ].filter((x) => x);\n  return (\n    <DataTable\n      emptyLabel=\"No balances\"\n      dataSource={balances}\n      columns={columns}\n      pagination={false}\n    />\n  );\n}\n","import React, { useState } from 'react';\nimport DataTable from '../layout/DataTable';\n\nimport styled from 'styled-components';\nimport { Button, Row, Col, Tag } from 'antd';\nimport { cancelOrder } from '../../utils/send';\nimport { useWallet } from '../../utils/wallet';\nimport { useSendConnection } from '../../utils/connection';\nimport { notify } from '../../utils/notifications';\nimport { DeleteOutlined } from '@ant-design/icons';\n\nconst CancelButton = styled(Button)`\n  color: #f23b69;\n  border: 1px solid #f23b69;\n`;\n\nexport default function OpenOrderTable({ openOrders, onCancelSuccess }) {\n  let { wallet } = useWallet();\n  let connection = useSendConnection();\n\n  const [cancelId, setCancelId] = useState(null);\n\n  async function cancel(order) {\n    setCancelId(order?.orderId);\n    try {\n      await cancelOrder({\n        order,\n        market: order.market,\n        connection,\n        wallet,\n      });\n    } catch (e) {\n      notify({\n        message: 'Error cancelling order',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    } finally {\n      setCancelId(null);\n    }\n    onCancelSuccess && onCancelSuccess();\n  }\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'marketName',\n      key: 'marketName',\n    },\n    {\n      title: 'Side',\n      dataIndex: 'side',\n      key: 'side',\n      render: (side) => (\n        <Tag\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\n          style={{ fontWeight: 700 }}\n        >\n          {side.charAt(0).toUpperCase() + side.slice(1)}\n        </Tag>\n      ),\n    },\n    {\n      title: 'Size',\n      dataIndex: 'size',\n      key: 'size',\n    },\n    {\n      title: 'Price',\n      dataIndex: 'price',\n      key: 'price',\n    },\n    {\n      key: 'orderId',\n      render: (order) => (\n        <div style={{ textAlign: 'right' }}>\n          <CancelButton\n            icon={<DeleteOutlined />}\n            onClick={() => cancel(order)}\n            loading={cancelId + '' === order?.orderId + ''}\n          >\n            Cancel\n          </CancelButton>\n        </div>\n      ),\n    },\n  ];\n  const dataSource = (openOrders || []).map((order) =>\n    Object.assign(order, { key: order.orderId }),\n  );\n\n  return (\n    <Row>\n      <Col span={24}>\n        <DataTable\n          emptyLabel=\"No open orders\"\n          dataSource={dataSource}\n          columns={columns}\n          pagination={true}\n          pageSize={5}\n        />\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react';\nimport { Row, Col, Tag } from 'antd';\nimport { useFills, useMarket } from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\n\nexport default function FillsTable() {\n  const fills = useFills();\n\n  const { quoteCurrency } = useMarket();\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'marketName',\n      key: 'marketName',\n    },\n    {\n      title: 'Side',\n      dataIndex: 'side',\n      key: 'side',\n      render: (side) => (\n        <Tag\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\n          style={{ fontWeight: 700 }}\n        >\n          {side.charAt(0).toUpperCase() + side.slice(1)}\n        </Tag>\n      ),\n    },\n    {\n      title: `Size`,\n      dataIndex: 'size',\n      key: 'size',\n    },\n    {\n      title: `Price`,\n      dataIndex: 'price',\n      key: 'price',\n    },\n    {\n      title: `Liquidity`,\n      dataIndex: 'liquidity',\n      key: 'liquidity',\n    },\n    {\n      title: quoteCurrency ? `Fees (${quoteCurrency})` : 'Fees',\n      dataIndex: 'feeCost',\n      key: 'feeCost',\n    },\n  ];\n\n  const dataSource = (fills || []).map((fill) => ({\n    ...fill,\n    key: `${fill.orderId}${fill.side}`,\n    liquidity: fill.eventFlags.maker ? 'Maker' : 'Taker',\n  }));\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <DataTable\n            dataSource={dataSource}\n            columns={columns}\n            pagination={true}\n            pageSize={5}\n            emptyLabel=\"No fills\"\n          />\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React from 'react';\nimport { Row, Col, Typography, Tag } from 'antd';\nimport { useFeeDiscountKeys } from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\nimport { TokenInstructions, getFeeRates } from '@project-serum/serum';\nimport { percentFormat } from '../../utils/utils';\n\nexport default function FeesTable() {\n  const [feeAccounts] = useFeeDiscountKeys();\n\n  const columns = [\n    {\n      title: 'Fee Tier',\n      dataIndex: 'feeTier',\n      key: 'feeTier',\n      render: (feeTier, row) => (\n        <div style={{ display: 'flex' }}>\n          <Typography>{feeTier}</Typography>\n          {row.index === 0 ? (\n            <div style={{ marginLeft: 10 }}>\n              <Tag color={'#41C77A'} style={{ fontWeight: 700 }}>\n                Selected\n              </Tag>\n            </div>\n          ) : null}\n        </div>\n      ),\n    },\n    {\n      title: 'Taker',\n      dataIndex: 'taker',\n      key: 'taker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).taker),\n    },\n    {\n      title: 'Maker',\n      dataIndex: 'maker',\n      key: 'maker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).maker),\n    },\n    {\n      title: `Public Key`,\n      dataIndex: 'pubkey',\n      key: 'pubkey',\n      render: (pubkey) => pubkey.toBase58(),\n    },\n    {\n      title: `Balance`,\n      dataIndex: 'balance',\n      key: 'balance',\n    },\n    {\n      title: `Mint`,\n      dataIndex: 'mint',\n      key: 'mint',\n      render: (_, row) =>\n        row.mint.equals(TokenInstructions.SRM_MINT)\n          ? 'SRM'\n          : row.mint.equals(TokenInstructions.MSRM_MINT)\n          ? 'MSRM'\n          : 'UNKNOWN',\n    },\n  ];\n\n  const dataSource = (feeAccounts || []).map((account, index) => ({\n    ...account,\n    index,\n    key: account.pubkey.toBase58(),\n  }));\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <DataTable\n            dataSource={dataSource}\n            columns={columns}\n            pagination={true}\n            pageSize={5}\n            emptyLabel=\"No (M)SRM accounts\"\n          />\n        </Col>\n      </Row>\n      <Row style={{ marginTop: 8 }}>\n        <Col>\n          <Typography>\n            Holding SRM or MSRM makes you eligible for fee discounts:\n          </Typography>\n          <FeeScheduleTable />\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nfunction FeeScheduleTable() {\n  // Representation of serum-js/src/fees.ts\n  const dataSource = [\n    { feeTier: 0, taker: 0.0022, maker: -0.0003, token: '', balance: '' },\n    { feeTier: 1, taker: 0.002, maker: -0.0003, token: 'SRM', balance: 100 },\n    { feeTier: 2, taker: 0.0018, maker: -0.0003, token: 'SRM', balance: 1000 },\n    { feeTier: 3, taker: 0.0016, maker: -0.0003, token: 'SRM', balance: 10000 },\n    {\n      feeTier: 4,\n      taker: 0.0014,\n      maker: -0.0003,\n      token: 'SRM',\n      balance: 100000,\n    },\n    {\n      feeTier: 5,\n      taker: 0.0012,\n      maker: -0.0003,\n      token: 'SRM',\n      balance: 1000000,\n    },\n    { feeTier: 6, taker: 0.001, maker: -0.0005, token: 'MSRM', balance: 1 },\n  ];\n  const columns = [\n    {\n      title: 'Fee Tier',\n      dataIndex: 'feeTier',\n      key: 'feeTier',\n    },\n    {\n      title: 'Taker',\n      dataIndex: 'taker',\n      key: 'taker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).taker),\n    },\n    {\n      title: 'Maker',\n      dataIndex: 'maker',\n      key: 'maker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).maker),\n    },\n    {\n      title: 'Requirements',\n      dataIndex: 'requirements',\n      key: 'requirements',\n      render: (_, row) => (\n        <Typography>\n          {!row.balance ? 'None' : `≥ ${row.balance} ${row.token}`}\n        </Typography>\n      ),\n    },\n  ];\n  return (\n    <DataTable\n      dataSource={dataSource.map((info) => ({ ...info, key: info.feeTier }))}\n      columns={columns}\n    />\n  );\n}\n","import BalancesTable from './BalancesTable';\nimport OpenOrderTable from './OpenOrderTable';\nimport React from 'react';\nimport { Tabs, Typography } from 'antd';\nimport FillsTable from './FillsTable';\nimport FloatingElement from '../layout/FloatingElement';\nimport FeesTable from './FeesTable';\nimport { useOpenOrders, useBalances, useMarket } from '../../utils/markets';\n\nconst { Paragraph } = Typography;\nconst { TabPane } = Tabs;\n\nexport default function Index() {\n  const { market } = useMarket();\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 20 }}>\n      <Typography>\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)' }}>\n          Make sure to go to Balances and click Settle to send out your funds.\n        </Paragraph>\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)' }}>\n          To fund your wallet, <a href=\"https://www.sollet.io\">sollet.io</a>.\n          You can get SOL from FTX, Binance, BitMax, and others. You can get\n          other tokens from FTX.{' '}\n        </Paragraph>\n      </Typography>\n      <Tabs defaultActiveKey=\"orders\">\n        <TabPane tab=\"Open Orders\" key=\"orders\">\n          <OpenOrdersTab />\n        </TabPane>\n        <TabPane tab=\"Recent Trade History\" key=\"fills\">\n          <FillsTable />\n        </TabPane>\n        <TabPane tab=\"Balances\" key=\"balances\">\n          <BalancesTab />\n        </TabPane>\n        {market && market.supportsSrmFeeDiscounts ? (\n          <TabPane tab=\"Fee discounts\" key=\"fees\">\n            <FeesTable />\n          </TabPane>\n        ) : null}\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\nconst OpenOrdersTab = () => {\n  const openOrders = useOpenOrders();\n\n  return <OpenOrderTable openOrders={openOrders} />;\n};\n\nconst BalancesTab = () => {\n  const balances = useBalances();\n\n  return <BalancesTable balances={balances} />;\n};\n","import React from 'react';\nimport { Modal } from 'antd';\nimport {\n  useSelectedBaseCurrencyAccount,\n  useMarket,\n  useSelectedQuoteCurrencyAccount,\n} from '../utils/markets';\nimport { useWallet } from '../utils/wallet';\nimport Link from './Link';\n\nexport default function DepositDialog({ onClose, baseOrQuote }) {\n  const { market, baseCurrency, quoteCurrency } = useMarket();\n\n  const { providerName, providerUrl } = useWallet();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  let coinMint;\n  let account;\n  let depositCoin;\n  if (baseOrQuote === 'base') {\n    coinMint = market?.baseMintAddress;\n    account = baseCurrencyAccount;\n    depositCoin = baseCurrency;\n  } else if (baseOrQuote === 'quote') {\n    coinMint = market?.quoteMintAddress;\n    account = quoteCurrencyAccount;\n    depositCoin = quoteCurrency;\n  } else {\n    account = null;\n  }\n  if (!coinMint) {\n    return null;\n  }\n  return (\n    <Modal\n      title={depositCoin}\n      visible={!!coinMint}\n      onOk={onClose}\n      onCancel={onClose}\n    >\n      <div style={{ paddingTop: '20px' }}>\n        <p style={{ color: 'white' }}>Mint address:</p>\n        <p style={{ color: 'rgba(255,255,255,0.5)' }}>{coinMint.toBase58()}</p>\n        <div>\n          <p style={{ color: 'white' }}>SPL Deposit address:</p>\n          <p style={{ color: 'rgba(255,255,255,0.5)' }}>\n            {account ? (\n              account.pubkey.toBase58()\n            ) : (\n              <>\n                Visit{' '}\n                <Link external to={providerUrl}>\n                  {providerName}\n                </Link>{' '}\n                to create an account for this mint\n              </>\n            )}\n          </p>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n","import { Button, Col, Divider, Row } from 'antd';\nimport React, { useState } from 'react';\nimport FloatingElement from './layout/FloatingElement';\nimport styled from 'styled-components';\nimport {\n  useBalances,\n  useMarket,\n  useSelectedBaseCurrencyAccount,\n  useSelectedOpenOrdersAccount,\n  useSelectedQuoteCurrencyAccount,\n} from '../utils/markets';\nimport DepositDialog from './DepositDialog';\nimport { useWallet } from '../utils/wallet';\nimport Link from './Link';\nimport { settleFunds } from '../utils/send';\nimport { useSendConnection } from '../utils/connection';\nimport { notify } from '../utils/notifications';\n\nconst RowBox = styled(Row)`\n  padding-bottom: 20px;\n`;\n\nconst Tip = styled.p`\n  font-size: 12px;\n  padding-top: 6px;\n`;\n\nconst ActionButton = styled(Button)`\n  color: #2abdd2;\n  background-color: #212734;\n  border-width: 0px;\n`;\n\nexport default function StandaloneBalancesDisplay() {\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const balances = useBalances();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const connection = useSendConnection();\n  const { providerUrl, providerName, wallet } = useWallet();\n  const [baseOrQuote, setBaseOrQuote] = useState('');\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const baseCurrencyBalances =\n    balances && balances.find((b) => b.coin === baseCurrency);\n  const quoteCurrencyBalances =\n    balances && balances.find((b) => b.coin === quoteCurrency);\n\n  async function onSettleFunds() {\n    try {\n      await settleFunds({\n        market,\n        openOrders: openOrdersAccount,\n        connection,\n        wallet,\n        baseCurrencyAccount,\n        quoteCurrencyAccount,\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n    }\n  }\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      {[\n        [baseCurrency, baseCurrencyBalances, 'base'],\n        [quoteCurrency, quoteCurrencyBalances, 'quote'],\n      ].map(([currency, balances, baseOrQuote], index) => (\n        <React.Fragment key={index}>\n          <Divider style={{ borderColor: 'white' }}>{currency}</Divider>\n          <RowBox\n            align=\"middle\"\n            justify=\"space-between\"\n            style={{ paddingBottom: 12 }}\n          >\n            <Col>Wallet balance:</Col>\n            <Col>{balances && balances.wallet}</Col>\n          </RowBox>\n          <RowBox\n            align=\"middle\"\n            justify=\"space-between\"\n            style={{ paddingBottom: 12 }}\n          >\n            <Col>Unsettled balance:</Col>\n            <Col>{balances && balances.unsettled}</Col>\n          </RowBox>\n          <RowBox align=\"middle\" justify=\"space-around\">\n            <Col style={{ width: 150 }}>\n              <ActionButton\n                block\n                size=\"large\"\n                onClick={() => setBaseOrQuote(baseOrQuote)}\n              >\n                Deposit\n              </ActionButton>\n            </Col>\n            <Col style={{ width: 150 }}>\n              <ActionButton block size=\"large\" onClick={onSettleFunds}>\n                Settle\n              </ActionButton>\n            </Col>\n          </RowBox>\n          <Tip>\n            All deposits go to your{' '}\n            <Link external to={providerUrl}>\n              {providerName}\n            </Link>{' '}\n            wallet\n          </Tip>\n        </React.Fragment>\n      ))}\n      <DepositDialog\n        baseOrQuote={baseOrQuote}\n        onClose={() => setBaseOrQuote('')}\n      />\n    </FloatingElement>\n  );\n}\n","import { Button, Input, Radio, Switch, Slider } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport {\n  useBaseCurrencyBalances,\n  useQuoteCurrencyBalances,\n  useMarket,\n  useMarkPrice,\n  useSelectedOpenOrdersAccount,\n  useSelectedBaseCurrencyAccount,\n  useSelectedQuoteCurrencyAccount,\n} from '../utils/markets';\nimport { useWallet } from '../utils/wallet';\nimport { notify } from '../utils/notifications';\nimport {\n  getDecimalCount,\n  roundToDecimal,\n  floorToDecimal,\n} from '../utils/utils';\nimport { useSendConnection } from '../utils/connection';\nimport FloatingElement from './layout/FloatingElement';\nimport { placeOrder } from '../utils/send';\n\nconst SellButton = styled(Button)`\n  margin: 20px 0px 0px 0px;\n  background: #f23b69;\n  border-color: #f23b69;\n`;\n\nconst BuyButton = styled(Button)`\n  margin: 20px 0px 0px 0px;\n  background: #02bf76;\n  border-color: #02bf76;\n`;\n\nconst sliderMarks = {\n  0: '0%',\n  25: '25%',\n  50: '50%',\n  75: '75%',\n  100: '100%',\n};\n\nexport default function TradeForm({ style, setChangeOrderRef }) {\n  const [side, setSide] = useState('buy');\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const baseCurrencyBalances = useBaseCurrencyBalances();\n  const quoteCurrencyBalances = useQuoteCurrencyBalances();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const { wallet } = useWallet();\n  const sendConnection = useSendConnection();\n  const markPrice = useMarkPrice();\n\n  const [postOnly, setPostOnly] = useState(false);\n  const [ioc, setIoc] = useState(false);\n  const [baseSize, setBaseSize] = useState(null);\n  const [quoteSize, setQuoteSize] = useState(null);\n  const [price, setPrice] = useState(null);\n  const [submitting, setSubmitting] = useState(false);\n  const [sizeFraction, setSizeFraction] = useState(0);\n\n  const availableQuote = openOrdersAccount\n    ? market.quoteSplSizeToNumber(openOrdersAccount.quoteTokenFree)\n    : 0;\n\n  let quoteBalance = (quoteCurrencyBalances || 0) + (availableQuote || 0);\n  let baseBalance = baseCurrencyBalances || 0;\n  let sizeDecimalCount =\n    market?.minOrderSize && getDecimalCount(market.minOrderSize);\n  let priceDecimalCount = market?.tickSize && getDecimalCount(market.tickSize);\n\n  useEffect(() => {\n    setChangeOrderRef && setChangeOrderRef(doChangeOrder);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setChangeOrderRef]);\n\n  useEffect(() => {\n    baseSize && price && onSliderChange(sizeFraction);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [side]);\n\n  useEffect(() => {\n    updateSizeFraction();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [price, baseSize]);\n\n  const onSetBaseSize = (baseSize) => {\n    setBaseSize(baseSize);\n    const rawQuoteSize = baseSize * (price || markPrice);\n    const quoteSize =\n      baseSize && roundToDecimal(rawQuoteSize, sizeDecimalCount);\n    setQuoteSize(quoteSize);\n  };\n\n  const onSetQuoteSize = (quoteSize) => {\n    setQuoteSize(quoteSize);\n    const rawBaseSize = quoteSize / price;\n    const baseSize = quoteSize && roundToDecimal(rawBaseSize, sizeDecimalCount);\n    setBaseSize(baseSize);\n  };\n\n  const doChangeOrder = ({ size, price }) => {\n    const formattedSize = size && roundToDecimal(size, sizeDecimalCount);\n    const formattedPrice = price && roundToDecimal(price, priceDecimalCount);\n    formattedSize && onSetBaseSize(formattedSize);\n    formattedPrice && setPrice(formattedPrice);\n  };\n\n  const updateSizeFraction = () => {\n    const rawMaxSize = side === 'buy' ? quoteBalance / price : baseBalance;\n    const maxSize = floorToDecimal(rawMaxSize, sizeDecimalCount);\n    const sizeFraction = Math.min((baseSize / maxSize) * 100, 100);\n    setSizeFraction(sizeFraction);\n  };\n\n  const onSliderChange = (value) => {\n    if (!price && markPrice) {\n      let formattedMarkPrice = priceDecimalCount\n        ? markPrice.toFixed(priceDecimalCount)\n        : markPrice;\n      setPrice(formattedMarkPrice);\n    }\n\n    let newSize;\n    if (side === 'buy') {\n      if (price || markPrice) {\n        newSize = ((quoteBalance / (price || markPrice)) * value) / 100;\n      }\n    } else {\n      newSize = (baseBalance * value) / 100;\n    }\n\n    // round down to minOrderSize increment\n    let formatted = floorToDecimal(newSize, sizeDecimalCount);\n\n    onSetBaseSize(formatted);\n  };\n\n  const postOnChange = (checked) => {\n    if (checked) {\n      setIoc(false);\n    }\n    setPostOnly(checked);\n  };\n  const iocOnChange = (checked) => {\n    if (checked) {\n      setPostOnly(false);\n    }\n    setIoc(checked);\n  };\n\n  async function onSubmit() {\n    const parsedPrice = parseFloat(price);\n    const parsedSize = parseFloat(baseSize);\n\n    setSubmitting(true);\n    try {\n      await placeOrder({\n        side,\n        price: parsedPrice,\n        size: parsedSize,\n        orderType: ioc ? 'ioc' : postOnly ? 'postOnly' : 'limit',\n        market,\n        connection: sendConnection,\n        wallet,\n        baseCurrencyAccount: baseCurrencyAccount?.pubkey,\n        quoteCurrencyAccount: quoteCurrencyAccount?.pubkey,\n      });\n      setPrice(null);\n      onSetBaseSize(null);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error placing order',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <FloatingElement\n      style={{ display: 'flex', flexDirection: 'column', ...style }}\n    >\n      <div style={{ flex: 1 }}>\n        <Radio.Group\n          onChange={(e) => setSide(e.target.value)}\n          value={side}\n          buttonStyle=\"solid\"\n          style={{\n            marginBottom: 8,\n            width: '100%',\n          }}\n        >\n          <Radio.Button\n            value=\"buy\"\n            style={{\n              width: '50%',\n              textAlign: 'center',\n              background: side === 'buy' ? '#02bf76' : '',\n              borderColor: side === 'buy' ? '#02bf76' : '',\n            }}\n          >\n            BUY\n          </Radio.Button>\n          <Radio.Button\n            value=\"sell\"\n            style={{\n              width: '50%',\n              textAlign: 'center',\n              background: side === 'sell' ? '#F23B69' : '',\n              borderColor: side === 'sell' ? '#F23B69' : '',\n            }}\n          >\n            SELL\n          </Radio.Button>\n        </Radio.Group>\n        <Input\n          style={{ textAlign: 'right', paddingBottom: 8 }}\n          addonBefore={<div style={{ width: '30px' }}>Price</div>}\n          suffix={\n            <span style={{ fontSize: 10, opacity: 0.5 }}>{quoteCurrency}</span>\n          }\n          value={price}\n          type=\"number\"\n          step={market?.tickSize || 1}\n          onChange={(e) => setPrice(e.target.value)}\n        />\n        <Input.Group compact style={{ paddingBottom: 8 }}>\n          <Input\n            style={{ width: 'calc(50% + 30px)', textAlign: 'right' }}\n            addonBefore={<div style={{ width: '30px' }}>Size</div>}\n            suffix={\n              <span style={{ fontSize: 10, opacity: 0.5 }}>{baseCurrency}</span>\n            }\n            value={baseSize}\n            type=\"number\"\n            step={market?.minOrderSize || 1}\n            onChange={(e) => onSetBaseSize(e.target.value)}\n          />\n          <Input\n            style={{ width: 'calc(50% - 30px)', textAlign: 'right' }}\n            suffix={\n              <span style={{ fontSize: 10, opacity: 0.5 }}>\n                {quoteCurrency}\n              </span>\n            }\n            value={quoteSize}\n            type=\"number\"\n            step={market?.minOrderSize || 1}\n            onChange={(e) => onSetQuoteSize(e.target.value)}\n          />\n        </Input.Group>\n        <Slider\n          value={sizeFraction}\n          tipFormatter={(value) => `${value}%`}\n          marks={sliderMarks}\n          onChange={onSliderChange}\n        />\n        <div style={{ paddingTop: 18 }}>\n          {'POST '}\n          <Switch\n            checked={postOnly}\n            onChange={postOnChange}\n            style={{ marginRight: 40 }}\n          />\n          {'IOC '}\n          <Switch checked={ioc} onChange={iocOnChange} />\n        </div>\n      </div>\n      {side === 'buy' ? (\n        <BuyButton\n          disabled={!price || !baseSize}\n          onClick={onSubmit}\n          block\n          type=\"primary\"\n          size=\"large\"\n          loading={submitting}\n        >\n          Buy {baseCurrency}\n        </BuyButton>\n      ) : (\n        <SellButton\n          disabled={!price || !baseSize}\n          onClick={onSubmit}\n          block\n          type=\"primary\"\n          size=\"large\"\n          loading={submitting}\n        >\n          Sell {baseCurrency}\n        </SellButton>\n      )}\n    </FloatingElement>\n  );\n}\n","import { Col, Row } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useMarket, useTrades } from '../utils/markets';\nimport { getDecimalCount } from '../utils/utils';\nimport FloatingElement from './layout/FloatingElement';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\nconst SizeTitle = styled(Row)`\n  padding: 20px 0 14px;\n  color: #434a59;\n`;\n\n// TODO: Put in some scrolling\nconst TradesContainer = styled.div`\n  height: calc(100% - 75px);\n  margin-right: -20px;\n  padding-right: 5px;\n  overflow-y: scroll;\n`;\n\nexport default function PublicTrades({ smallScreen }) {\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const trades = useTrades();\n  return (\n    <FloatingElement\n      style={\n        smallScreen\n          ? { flex: 1 }\n          : {\n              marginTop: '10px',\n              minHeight: '270px',\n              height: 'calc(100vh - 710px)',\n            }\n      }\n    >\n      <Title>Recent Market trades</Title>\n      <SizeTitle>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          Size ({baseCurrency})\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          Price ({quoteCurrency}){' '}\n        </Col>\n      </SizeTitle>\n      {!!trades && (\n        <TradesContainer>\n          {trades.map((trade, i) => (\n            <Row key={i} style={{ marginBottom: 4 }}>\n              <Col span={12} style={{ textAlign: 'left' }}>\n                {market?.minOrderSize && !isNaN(trade.size)\n                  ? Number(trade.size).toFixed(\n                      getDecimalCount(market.minOrderSize),\n                    )\n                  : trade.size}\n              </Col>\n              <Col\n                span={12}\n                style={{\n                  textAlign: 'right',\n                  color: trade.side === 'buy' ? '#41C77A' : '#F23B69',\n                }}\n              >\n                {market?.tickSize && !isNaN(trade.price)\n                  ? Number(trade.price).toFixed(\n                      getDecimalCount(market.tickSize),\n                    )\n                  : trade.price}\n              </Col>\n            </Row>\n          ))}\n        </TradesContainer>\n      )}\n    </FloatingElement>\n  );\n}\n","import React from 'react';\nimport { Button } from 'antd';\nimport { LinkOutlined } from '@ant-design/icons';\n\nexport default function LinkAddress({ title, address }: {title?: undefined | any; address: string;}) {\n  return (\n    <div>\n      {title && <p style={{ color: 'white' }}>{title}</p>}\n      <Button\n        type=\"link\"\n        icon={<LinkOutlined />}\n        href={'https://explorer.solana.com/address/' + address}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {address}\n      </Button>\n    </div>\n  );\n}\n","import { Button, Divider, Spin, Typography } from 'antd';\nimport React from 'react';\nimport {\n  useGetOpenOrdersForDeprecatedMarkets,\n  useBalancesForDeprecatedMarkets,\n  useUnmigratedOpenOrdersAccounts,\n} from '../utils/markets';\nimport FloatingElement from './layout/FloatingElement';\nimport CheckOutlined from '@ant-design/icons/lib/icons/CheckOutlined';\nimport BalancesTable from './UserInfoTable/BalancesTable';\nimport OpenOrderTable from './UserInfoTable/OpenOrderTable';\nimport SyncOutlined from '@ant-design/icons/lib/icons/SyncOutlined';\n\nconst { Title } = Typography;\n\nexport default function DeprecatedMarketsInstructions({ switchToLiveMarkets }) {\n  const balances = useBalancesForDeprecatedMarkets();\n  const {\n    openOrders,\n    loaded,\n    refreshOpenOrders,\n  } = useGetOpenOrdersForDeprecatedMarkets();\n\n  const { refresh } = useUnmigratedOpenOrdersAccounts();\n  const needToCancelOrders = !openOrders || openOrders.length > 0;\n  const filteredBalances =\n    balances &&\n    balances.filter(({ orders, unsettled }) => orders > 0 || unsettled > 0);\n  const needToSettleFunds = filteredBalances && filteredBalances.length > 0;\n  return (\n    <FloatingElement>\n      <Title level={4} style={{ color: 'rgba(255, 255, 255, 1)' }}>\n        Migrate to new markets\n      </Title>\n      <Typography>\n        Serum has rolled out upgraded markets! They're faster and support fee\n        discounts based on SRM holdings.\n      </Typography>\n      <br />\n      <Typography>\n        To migrate over to the new markets, please cancel your orders and settle\n        your funds on old markets.\n      </Typography>\n      <div style={{ marginTop: 20, display: 'flex', justifyContent: 'center' }}>\n        <Button onClick={() => refresh(true)}>\n          <SyncOutlined /> Refresh data\n        </Button>\n      </div>\n      {!balances ? (\n        <Spin size=\"large\" />\n      ) : (\n        <>\n          <Divider>\n            {!needToCancelOrders && <CheckOutlined />} Cancel your orders\n          </Divider>\n          {needToCancelOrders ? (\n            loaded ? (\n              <OpenOrderTable\n                openOrders={openOrders}\n                onCancelSuccess={() => {\n                  setTimeout(() => {\n                    refresh();\n                    refreshOpenOrders();\n                  }, 1000); // Wait so that on-chain account state reflects the update\n                }}\n              />\n            ) : (\n              <Spin size=\"large\" />\n            )\n          ) : null}\n          <Divider>\n            {!needToSettleFunds && <CheckOutlined />} Settle your funds\n          </Divider>\n          {needToSettleFunds && (\n            <BalancesTable\n              balances={filteredBalances}\n              hideWalletBalance\n              showMarket\n              onSettleSuccess={() => {\n                setTimeout(refresh, 1000); // Wait so that on-chain account state reflects the update\n              }}\n            />\n          )}\n          <Divider>Switch to upgraded markets</Divider>\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\n            <Button\n              onClick={switchToLiveMarkets}\n              disabled={needToSettleFunds || needToCancelOrders}\n            >\n              Switch to new markets\n            </Button>\n          </div>\n        </>\n      )}\n    </FloatingElement>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Col, Input, Modal, Row, Typography } from 'antd';\nimport { notify } from '../utils/notifications';\nimport { isValidPublicKey } from '../utils/utils';\nimport { PublicKey } from '@solana/web3.js';\nimport { Market, MARKETS, TOKEN_MINTS } from '@project-serum/serum';\nimport { useAccountInfo, useConnection } from '../utils/connection';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nconst { Text } = Typography;\n\nexport default function CustomMarketDialog({\n  visible,\n  onAddCustomMarket,\n  onClose,\n}) {\n  const connection = useConnection();\n\n  const [marketId, setMarketId] = useState('');\n\n  const [marketLabel, setMarketLabel] = useState('');\n  const [baseLabel, setBaseLabel] = useState('');\n  const [quoteLabel, setQuoteLabel] = useState('');\n\n  const [market, setMarket] = useState(null);\n  const [loadingMarket, setLoadingMarket] = useState(false);\n\n  const wellFormedMarketId = isValidPublicKey(marketId);\n\n  const [marketAccountInfo] = useAccountInfo(\n    wellFormedMarketId ? new PublicKey(marketId) : null,\n  );\n  const programId = marketAccountInfo\n    ? marketAccountInfo.owner.toBase58()\n    : MARKETS.find(({ deprecated }) => !deprecated).programId.toBase58();\n\n  useEffect(() => {\n    if (!wellFormedMarketId || !programId) {\n      resetLabels();\n      return;\n    }\n    setLoadingMarket(true);\n    Market.load(\n      connection,\n      new PublicKey(marketId),\n      {},\n      new PublicKey(programId),\n    )\n      .then((market) => {\n        setMarket(market);\n      })\n      .catch(() => {\n        resetLabels();\n        setMarket(null);\n      })\n      .finally(() => setLoadingMarket(false));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [connection, marketId, programId]);\n\n  const resetLabels = () => {\n    setMarketLabel(null);\n    setBaseLabel(null);\n    setQuoteLabel(null);\n  };\n\n  const knownMarket = MARKETS.find(\n    (m) =>\n      m.address.toBase58() === marketId && m.programId.toBase58() === programId,\n  );\n  const knownProgram = MARKETS.find(\n    (m) => m.programId.toBase58() === programId,\n  );\n  const knownBaseCurrency =\n    market?.baseMintAddress &&\n    TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\n      ?.name;\n\n  const knownQuoteCurrency =\n    market?.quoteMintAddress &&\n    TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\n      ?.name;\n\n  const canSubmit =\n    !loadingMarket &&\n    !!market &&\n    market.publicKey.toBase58() === marketId &&\n    marketId &&\n    programId &&\n    marketLabel &&\n    (knownBaseCurrency || baseLabel) &&\n    (knownQuoteCurrency || quoteLabel) &&\n    wellFormedMarketId;\n\n  const onSubmit = () => {\n    if (!canSubmit) {\n      notify({\n        message: 'Please fill in all fields with valid values',\n        type: 'error',\n      });\n      return;\n    }\n\n    let params = {\n      address: marketId,\n      programId,\n      name: marketLabel,\n    };\n    if (!knownBaseCurrency) {\n      params.baseLabel = baseLabel;\n    }\n    if (!knownQuoteCurrency) {\n      params.quoteLabel = quoteLabel;\n    }\n    onAddCustomMarket(params);\n    onDoClose();\n  };\n\n  const onDoClose = () => {\n    resetLabels();\n    setMarket(null);\n    setMarketId(null);\n    onClose();\n  };\n\n  return (\n    <Modal\n      title={'Add custom market'}\n      visible={visible}\n      onOk={onSubmit}\n      okText={'Add'}\n      onCancel={onDoClose}\n      okButtonProps={{ disabled: !canSubmit }}\n    >\n      <div>\n        {wellFormedMarketId ? (\n          <>\n            {!market && !loadingMarket && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Not a valid market</Text>\n              </Row>\n            )}\n            {market && knownMarket && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"warning\">Market known: {knownMarket.name}</Text>\n              </Row>\n            )}\n            {market && !knownProgram && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Warning: unknown DEX program</Text>\n              </Row>\n            )}\n            {market && knownProgram && knownProgram.deprecated && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"warning\">Warning: deprecated DEX program</Text>\n              </Row>\n            )}\n          </>\n        ) : (\n          <>\n            {marketId && !wellFormedMarketId && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Invalid market ID</Text>\n              </Row>\n            )}\n          </>\n        )}\n        <Row style={{ marginBottom: 8 }}>\n          <Col span={24}>\n            <Input\n              placeholder=\"Market Id\"\n              value={marketId}\n              onChange={(e) => setMarketId(e.target.value)}\n              suffix={loadingMarket ? <LoadingOutlined /> : null}\n            />\n          </Col>\n        </Row>\n\n        <Row style={{ marginBottom: 8, marginTop: 8 }}>\n          <Col span={24}>\n            <Input\n              placeholder=\"Market Label\"\n              disabled={!market}\n              value={marketLabel}\n              onChange={(e) => setMarketLabel(e.target.value)}\n            />\n          </Col>\n        </Row>\n        <Row gutter={[8]} style={{ marginBottom: 8 }}>\n          <Col span={12}>\n            <Input\n              placeholder=\"Base label\"\n              disabled={!market || knownBaseCurrency}\n              value={knownBaseCurrency || baseLabel}\n              onChange={(e) => setBaseLabel(e.target.value)}\n            />\n            {market && !knownBaseCurrency && (\n              <div style={{ marginTop: 8 }}>\n                <Text type=\"warning\">Warning: unknown token</Text>\n              </div>\n            )}\n          </Col>\n          <Col span={12}>\n            <Input\n              placeholder=\"Quote label\"\n              disabled={!market || knownQuoteCurrency}\n              value={knownQuoteCurrency || quoteLabel}\n              onChange={(e) => setQuoteLabel(e.target.value)}\n            />\n            {market && !knownQuoteCurrency && (\n              <div style={{ marginTop: 8 }}>\n                <Text type=\"warning\">Warning: unknown token</Text>\n              </div>\n            )}\n          </Col>\n        </Row>\n      </div>\n    </Modal>\n  );\n}\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Col, Popover, Row, Select, Typography, Button } from 'antd';\nimport styled from 'styled-components';\nimport Orderbook from '../components/Orderbook';\nimport UserInfoTable from '../components/UserInfoTable';\nimport StandaloneBalancesDisplay from '../components/StandaloneBalancesDisplay';\nimport {\n  useMarket,\n  useMarketsList,\n  useUnmigratedDeprecatedMarkets,\n  getMarketInfos,\n} from '../utils/markets';\nimport TradeForm from '../components/TradeForm';\nimport TradesTable from '../components/TradesTable';\nimport LinkAddress from '../components/LinkAddress';\nimport DeprecatedMarketsInstructions from '../components/DeprecatedMarketsInstructions';\nimport {\n  InfoCircleOutlined,\n  PlusCircleOutlined,\n  DeleteOutlined,\n} from '@ant-design/icons';\nimport CustomMarketDialog from '../components/CustomMarketDialog';\nimport { notify } from '../utils/notifications';\n\nconst { Option, OptGroup } = Select;\n\nconst Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 16px 16px;\n  .borderNone .ant-select-selector {\n    border: none !important;\n  }\n`;\n\nexport default function TradePage() {\n  const {\n    market,\n    marketName,\n    customMarkets,\n    setCustomMarkets,\n    setMarketAddress,\n  } = useMarket();\n  const markets = useMarketsList();\n  const [handleDeprecated, setHandleDeprecated] = useState(false);\n  const [addMarketVisible, setAddMarketVisible] = useState(false);\n  const deprecatedMarkets = useUnmigratedDeprecatedMarkets();\n  const [dimensions, setDimensions] = useState({\n    height: window.innerHeight,\n    width: window.innerWidth,\n  });\n\n  useEffect(() => {\n    document.title = marketName ? `${marketName} — Serum` : 'Serum';\n  }, [marketName]);\n\n  const changeOrderRef = useRef();\n\n  useEffect(() => {\n    const handleResize = () => {\n      setDimensions({\n        height: window.innerHeight,\n        width: window.innerWidth,\n      });\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const width = dimensions?.width;\n  const componentProps = {\n    onChangeOrderRef: (ref) => (changeOrderRef.current = ref),\n    onPrice: useCallback(\n      (price) => changeOrderRef.current && changeOrderRef.current({ price }),\n      [],\n    ),\n    onSize: useCallback(\n      (size) => changeOrderRef.current && changeOrderRef.current({ size }),\n      [],\n    ),\n  };\n  const getComponent = useCallback(() => {\n    if (handleDeprecated) {\n      return (\n        <DeprecatedMarketsPage\n          switchToLiveMarkets={() => setHandleDeprecated(false)}\n        />\n      );\n    } else if (width < 1000) {\n      return <RenderSmaller {...componentProps} />;\n    } else if (width < 1450) {\n      return <RenderSmall {...componentProps} />;\n    } else {\n      return <RenderNormal {...componentProps} />;\n    }\n  }, [width, componentProps, handleDeprecated]);\n\n  const onAddCustomMarket = (customMarket) => {\n    const marketInfo = getMarketInfos(customMarkets).some(\n      (m) => m.address.toBase58() === customMarket.address,\n    );\n    if (marketInfo) {\n      notify({\n        message: `A market with the given ID already exists`,\n        type: 'error',\n      });\n      return;\n    }\n    const newCustomMarkets = [...customMarkets, customMarket];\n    setCustomMarkets(newCustomMarkets);\n    setMarketAddress(customMarket.address);\n  };\n\n  const onDeleteCustomMarket = (address) => {\n    const newCustomMarkets = customMarkets.filter((m) => m.address !== address);\n    setCustomMarkets(newCustomMarkets);\n  };\n\n  return (\n    <>\n      <CustomMarketDialog\n        visible={addMarketVisible}\n        onClose={() => setAddMarketVisible(false)}\n        onAddCustomMarket={onAddCustomMarket}\n      />\n      <Wrapper>\n        <Row\n          align=\"middle\"\n          style={{ paddingLeft: 5, paddingRight: 5 }}\n          gutter={16}\n        >\n          <Col>\n            <MarketSelector\n              markets={markets}\n              setHandleDeprecated={setHandleDeprecated}\n              placeholder={'Select market'}\n              customMarkets={customMarkets}\n              onDeleteCustomMarket={onDeleteCustomMarket}\n            />\n          </Col>\n          {market ? (\n            <Col>\n              <Popover\n                content={<LinkAddress address={market.publicKey.toBase58()} />}\n                placement=\"bottomRight\"\n                title=\"Market address\"\n                trigger=\"click\"\n              >\n                <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n              </Popover>\n            </Col>\n          ) : null}\n          <Col>\n            <PlusCircleOutlined\n              style={{ color: '#2abdd2' }}\n              onClick={() => setAddMarketVisible(true)}\n            />\n          </Col>\n          {deprecatedMarkets && deprecatedMarkets.length > 0 && (\n            <React.Fragment>\n              <Col>\n                <Typography>\n                  You have unsettled funds on old markets! Please go through\n                  them to claim your funds.\n                </Typography>\n              </Col>\n              <Col>\n                <Button onClick={() => setHandleDeprecated(!handleDeprecated)}>\n                  {handleDeprecated ? 'View new markets' : 'Handle old markets'}\n                </Button>\n              </Col>\n            </React.Fragment>\n          )}\n        </Row>\n        {getComponent()}\n      </Wrapper>\n    </>\n  );\n}\n\nfunction MarketSelector({\n  markets,\n  placeholder,\n  setHandleDeprecated,\n  customMarkets,\n  onDeleteCustomMarket,\n}) {\n  const { market, setMarketAddress } = useMarket();\n\n  const onSetMarketAddress = (marketAddress) => {\n    setHandleDeprecated(false);\n    setMarketAddress(marketAddress);\n  };\n\n  const extractBase = (a) => a.split('/')[0];\n  const extractQuote = (a) => a.split('/')[1];\n\n  const selectedMarket = getMarketInfos(customMarkets)\n    .find(\n      (proposedMarket) =>\n        market?.address && proposedMarket.address.equals(market.address),\n    )\n    ?.address?.toBase58();\n\n  return (\n    <Select\n      showSearch\n      size={'large'}\n      style={{ width: 200 }}\n      placeholder={placeholder || 'Select a market'}\n      optionFilterProp=\"name\"\n      onSelect={onSetMarketAddress}\n      listHeight={400}\n      value={selectedMarket}\n      filterOption={(input, option) =>\n        option.name?.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      }\n    >\n      {customMarkets && customMarkets.length > 0 && (\n        <OptGroup label=\"Custom\">\n          {customMarkets.map(({ address, name }, i) => (\n            <Option\n              value={address}\n              key={address}\n              name={name}\n              style={{\n                padding: '10px',\n                backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\n              }}\n            >\n              <Row>\n                <Col flex=\"auto\">{name}</Col>\n                {selectedMarket !== address && (\n                  <Col>\n                    <DeleteOutlined\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        e.nativeEvent.stopImmediatePropagation();\n                        onDeleteCustomMarket && onDeleteCustomMarket(address);\n                      }}\n                    />\n                  </Col>\n                )}\n              </Row>\n            </Option>\n          ))}\n        </OptGroup>\n      )}\n      <OptGroup label=\"Markets\">\n        {markets\n          .sort((a, b) =>\n            extractQuote(a.name) === 'USDT' && extractQuote(b.name) !== 'USDT'\n              ? -1\n              : extractQuote(a.name) !== 'USDT' &&\n                extractQuote(b.name) === 'USDT'\n              ? 1\n              : 0,\n          )\n          .sort((a, b) =>\n            extractBase(a.name) < extractBase(b.name)\n              ? -1\n              : extractBase(a.name) > extractBase(b.name)\n              ? 1\n              : 0,\n          )\n          .map(({ address, name, deprecated }, i) => (\n            <Option\n              value={address.toBase58()}\n              key={address}\n              name={name}\n              style={{\n                padding: '10px',\n                backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\n              }}\n            >\n              {name} {deprecated ? ' (Deprecated)' : null}\n            </Option>\n          ))}\n      </OptGroup>\n    </Select>\n  );\n}\n\nconst DeprecatedMarketsPage = ({ switchToLiveMarkets }) => {\n  return (\n    <>\n      <Row>\n        <Col flex=\"auto\">\n          <DeprecatedMarketsInstructions\n            switchToLiveMarkets={switchToLiveMarkets}\n          />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst RenderNormal = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <Row\n      style={{\n        minHeight: '800px',\n        flexWrap: 'nowrap',\n      }}\n    >\n      <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n        <UserInfoTable />\n      </Col>\n      <Col flex={'360px'} style={{ height: '100%' }}>\n        <Orderbook smallScreen={false} onPrice={onPrice} onSize={onSize} />\n        <TradesTable smallScreen={false} />\n      </Col>\n      <Col\n        flex=\"400px\"\n        style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n      >\n        <TradeForm setChangeOrderRef={onChangeOrderRef} />\n        <StandaloneBalancesDisplay />\n      </Col>\n    </Row>\n  );\n};\n\nconst RenderSmall = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <>\n      <Row\n        style={{\n          height: '800px',\n        }}\n      >\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n          <Orderbook\n            smallScreen={true}\n            depth={13}\n            onPrice={onPrice}\n            onSize={onSize}\n          />\n        </Col>\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n          <TradesTable smallScreen={true} />\n        </Col>\n        <Col\n          flex=\"400px\"\n          style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n        >\n          <TradeForm setChangeOrderRef={onChangeOrderRef} />\n          <StandaloneBalancesDisplay />\n        </Col>\n      </Row>\n      <Row>\n        <Col flex=\"auto\">\n          <UserInfoTable />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst RenderSmaller = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <>\n      <Row>\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <TradeForm style={{ flex: 1 }} setChangeOrderRef={onChangeOrderRef} />\n        </Col>\n        <Col xs={24} sm={12}>\n          <StandaloneBalancesDisplay />\n        </Col>\n      </Row>\n      <Row\n        style={{\n          height: '500px',\n        }}\n      >\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <Orderbook smallScreen={true} onPrice={onPrice} onSize={onSize} />\n        </Col>\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <TradesTable smallScreen={true} />\n        </Col>\n      </Row>\n      <Row>\n        <Col flex=\"auto\">\n          <UserInfoTable />\n        </Col>\n      </Row>\n    </>\n  );\n};\n","import React from 'react';\nimport { useOpenOrdersForAllMarkets } from '../utils/markets';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport OpenOrderTable from '../components/UserInfoTable/OpenOrderTable';\n\nexport default function OpenOrdersPage() {\n  const [openOrders] = useOpenOrdersForAllMarkets();\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <OpenOrderTable openOrders={openOrders} />\n    </FloatingElement>\n  );\n}\n","import React from 'react';\nimport DataTable from '../layout/DataTable';\n\nexport default function WalletBalancesTable({\n  loaded = false,\n  walletBalances,\n}) {\n  const columns = [\n    {\n      title: 'Coin',\n      dataIndex: 'key',\n      key: 'key',\n    },\n    {\n      title: 'Wallet Balance',\n      dataIndex: 'wallet',\n      key: 'wallet',\n    },\n  ];\n  return (\n    <DataTable\n      emptyLabel=\"No balances\"\n      dataSource={walletBalances}\n      columns={columns}\n      pagination={false}\n      loading={!loaded}\n    />\n  );\n}\n","import { Button } from 'antd';\nimport React from 'react';\nimport DataTable from '../layout/DataTable';\nimport { useConnection } from '../../utils/connection';\nimport { useWallet } from '../../utils/wallet';\nimport { settleFunds } from '../../utils/send';\nimport { notify } from '../../utils/notifications';\n\nexport default function AccountsTable({ accountBalances }) {\n  const connection = useConnection();\n  const { wallet } = useWallet();\n\n  async function onSettleFunds(account) {\n    try {\n      const {\n        market,\n        openOrders,\n        baseCurrencyAccount,\n        quoteCurrencyAccount,\n      } = account;\n      return await settleFunds({\n        market,\n        openOrders,\n        connection,\n        wallet,\n        baseCurrencyAccount,\n        quoteCurrencyAccount,\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n    }\n  }\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'key',\n      key: 'key',\n    },\n    {\n      title: 'Orders',\n      dataIndex: 'orders',\n      key: 'orders',\n    },\n    {\n      title: 'Unsettled',\n      dataIndex: 'unsettled',\n      key: 'unsettled',\n    },\n    {\n      key: 'action',\n      render: (account) => (\n        <div style={{ textAlign: 'right' }}>\n          <Button\n            ghost\n            style={{ marginRight: 12 }}\n            onClick={() => onSettleFunds(account)}\n          >\n            Settle\n          </Button>\n        </div>\n      ),\n    },\n  ];\n  return (\n    <DataTable\n      emptyLabel=\"No balances\"\n      dataSource={accountBalances}\n      columns={columns.map((data) => ({\n        ...data,\n        key: `${data.market}${data.coin}`,\n      }))}\n      pagination={false}\n    />\n  );\n}\n","import React from 'react';\nimport { Tabs } from 'antd';\nimport {\n  useWalletBalancesForAllMarkets,\n  useOpenOrderAccountBalancesForAllMarkets,\n} from '../utils/markets';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport WalletBalancesTable from '../components/UserInfoTable/WalletBalancesTable';\nimport AccountsTable from '../components/UserInfoTable/AccountsTable';\n\nconst { TabPane } = Tabs;\n\nexport default function BalancesPage() {\n  const [\n    walletBalances,\n    loadedWalletBalances,\n  ] = useWalletBalancesForAllMarkets();\n  const [\n    accountBalances,\n    accountBalancesLoaded,\n  ] = useOpenOrderAccountBalancesForAllMarkets();\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <Tabs defaultActiveKey=\"walletBalances\">\n        <TabPane tab=\"Wallet Balances\" key=\"walletBalances\">\n          <WalletBalancesTable\n            loaded={loadedWalletBalances}\n            walletBalances={walletBalances}\n          />\n        </TabPane>\n        <TabPane tab=\"Market balances\" key=\"marketBalances\">\n          <AccountsTable\n            loaded={accountBalancesLoaded}\n            accountBalances={accountBalances}\n          />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n","import React, { useContext } from 'react';\nimport { useLocalStorageState } from './utils';\nimport { useInterval } from './useInterval';\nimport { useConnection } from './connection';\nimport { useWallet } from './wallet';\nimport { useAllMarkets, useTokenAccounts, useMarket } from './markets';\nimport { settleAllFunds } from './send';\nimport {PreferencesContextValues} from \"./types\";\n\nconst PreferencesContext = React.createContext<PreferencesContextValues | null>(null);\n\nexport function PreferencesProvider({ children }) {\n  const [autoSettleEnabled, setAutoSettleEnabled] = useLocalStorageState(\n    'autoSettleEnabled',\n    false,\n  );\n\n  const [tokenAccounts] = useTokenAccounts();\n  const { connected, wallet } = useWallet();\n  const { customMarkets } = useMarket();\n  const marketList = useAllMarkets(customMarkets);\n  const connection = useConnection();\n\n  useInterval(() => {\n    const autoSettle = async () => {\n      const markets = marketList.map((m) => m.market);\n      try {\n        console.log('Auto settling');\n        await settleAllFunds({ connection, wallet, tokenAccounts, markets });\n      } catch (e) {\n        console.log('Error auto settling funds: ' + e.message);\n      }\n    };\n\n    connected && wallet?.autoApprove && autoSettleEnabled && autoSettle();\n  }, 10000);\n\n  return (\n    <PreferencesContext.Provider\n      value={{\n        autoSettleEnabled,\n        setAutoSettleEnabled,\n      }}\n    >\n      {children}\n    </PreferencesContext.Provider>\n  );\n}\n\nexport function usePreferences() {\n  const context = useContext(PreferencesContext);\n  if (!context) {\n    throw new Error('Missing preferences context')\n  }\n  return {\n    autoSettleEnabled: context.autoSettleEnabled,\n    setAutoSettleEnabled: context.setAutoSettleEnabled,\n  };\n}\n","import React from 'react';\nimport { Switch, Typography } from 'antd';\nimport { usePreferences } from '../utils/preferences';\n\nconst { Paragraph } = Typography;\n\nexport default function Settings({ autoApprove }) {\n  const { autoSettleEnabled, setAutoSettleEnabled } = usePreferences();\n\n  return (\n    <div>\n      <Switch\n        style={{ marginRight: 10 }}\n        disabled={!autoApprove}\n        checked={autoApprove && autoSettleEnabled}\n        onChange={setAutoSettleEnabled}\n      />{' '}\n      Auto settle\n      {!autoApprove && (\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)', marginTop: 10 }}>\n          To use auto settle, first enable auto approval in your wallet\n        </Paragraph>\n      )}\n    </div>\n  );\n}\n","import React, {useState} from \"react\";\nimport {Col, Input, Modal, Row} from \"antd\";\nimport {EndpointInfo} from \"../utils/types\";\n\nexport default function CustomClusterEndpointDialog({\n  visible,\n  onAddCustomEndpoint,\n  onClose,\n} : {\n  visible: boolean;\n  onAddCustomEndpoint: (info: EndpointInfo) => void;\n  onClose?: () => void;\n}) {\n  const [ customEndpoint, setCustomEndpoint] = useState('');\n  const [ customEndpointName, setCustomEndpointName] = useState('');\n\n  const onSubmit = () => {\n    const params = {\n      name: customEndpointName,\n      endpoint: customEndpoint,\n      custom: true,\n    }\n    onAddCustomEndpoint(params);\n    onDoClose();\n  };\n  const onDoClose = () => {\n    setCustomEndpoint('')\n    setCustomEndpointName('')\n    onClose && onClose();\n  };\n  const canSubmit = customEndpoint !== '' && customEndpointName !== '';\n\n  return (\n    <Modal\n      title={'Add custom endpoint'}\n      visible={visible}\n      onOk={onSubmit}\n      okText={'Add'}\n      onCancel={onDoClose}\n      okButtonProps={{ disabled: !canSubmit }}\n    >\n      <Row style={{ marginBottom: 8 }}>\n        <Col span={24}>\n          <Input\n            placeholder=\"Cluster Name\"\n            value={customEndpointName}\n            onChange={(e) => setCustomEndpointName(e.target.value)}\n          />\n        </Col>\n      </Row>\n      <Row style={{ marginBottom: 8 }}>\n        <Col span={24}>\n          <Input\n            placeholder=\"Cluster Endpoint\"\n            value={customEndpoint}\n            onChange={(e) => setCustomEndpoint(e.target.value)}\n          />\n        </Col>\n      </Row>\n    </Modal>\n  );\n}\n","import {InfoCircleOutlined, PlusCircleOutlined, SettingOutlined, UserOutlined,} from '@ant-design/icons';\nimport {Button, Col, Menu, Popover, Row, Select} from 'antd';\nimport React, {useCallback, useState} from 'react';\nimport {useHistory, useLocation} from 'react-router-dom';\nimport logo from '../assets/logo.svg';\nimport styled from 'styled-components';\nimport {useWallet, WALLET_PROVIDERS} from '../utils/wallet';\nimport {useConnectionConfig} from '../utils/connection';\nimport LinkAddress from './LinkAddress';\nimport Settings from './Settings';\nimport CustomClusterEndpointDialog from \"./CustomClusterEndpointDialog\";\nimport {EndpointInfo} from \"../utils/types\";\nimport {notify} from \"../utils/notifications\";\n\nconst Wrapper = styled.div`\n  background-color: #0d1017;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  padding: 0px 30px;\n  flex-wrap: wrap;\n`;\nconst LogoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  color: #2abdd2;\n  font-weight: bold;\n  cursor: pointer;\n  img {\n    height: 30px;\n    margin-right: 8px;\n  }\n`;\n\nexport default function TopBar() {\n  const { connected, wallet, providerUrl, setProvider } = useWallet();\n  const { endpoint, setEndpoint, availableEndpoints, setCustomEndpoints } = useConnectionConfig();\n  const [ addEndpointVisible, setAddEndpointVisible ] = useState(false)\n  const location = useLocation();\n  const history = useHistory();\n\n  const publicKey = wallet?.publicKey?.toBase58();\n\n  const handleClick = useCallback(\n    (e) => {\n      history.push(e.key);\n    },\n    [history],\n  );\n\n  const onAddCustomEndpoint = (info: EndpointInfo) => {\n    const existingEndpoint = availableEndpoints.some(\n      (e) => e.endpoint === info.endpoint,\n    );\n    if (existingEndpoint) {\n      notify({\n        message: `An endpoint with the given url already exists`,\n        type: 'error',\n      });\n      return;\n    }\n    const newCustomEndpoints = [...availableEndpoints.filter(e => e.custom), info];\n    setEndpoint(info.name);\n    setCustomEndpoints(newCustomEndpoints);\n  }\n\n  return (\n    <>\n      <CustomClusterEndpointDialog\n        visible={addEndpointVisible}\n        onAddCustomEndpoint={onAddCustomEndpoint}\n        onClose={() => setAddEndpointVisible(false)}\n      />\n      <Wrapper>\n        <LogoWrapper>\n          <img src={logo} alt=\"\" onClick={() => history.push('/')} />\n          {'SERUM'}\n        </LogoWrapper>\n        <Menu\n          mode=\"horizontal\"\n          onClick={handleClick}\n          selectedKeys={[location.pathname]}\n          style={{\n            borderBottom: 'none',\n            backgroundColor: 'transparent',\n            display: 'flex',\n            alignItems: 'flex-end',\n            flex: 1,\n          }}\n        >\n          <Menu.Item key=\"/\">TRADE</Menu.Item>\n        </Menu>\n        <div>\n          <Row\n            align=\"middle\"\n            style={{ paddingLeft: 5, paddingRight: 5 }}\n            gutter={16}\n          >\n            <Col>\n              <PlusCircleOutlined\n                style={{ color: '#2abdd2' }}\n                onClick={() => setAddEndpointVisible(true)}\n              />\n            </Col>\n             <Col>\n              <Popover\n                content={endpoint}\n                placement=\"bottomRight\"\n                title=\"URL\"\n                trigger=\"hover\"\n              >\n                <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n              </Popover>\n            </Col>\n            <Col>\n              <Select\n                onSelect={setEndpoint}\n                value={endpoint}\n                style={{ marginRight: 8, width: '150px' }}\n              >\n                {availableEndpoints.map(({ name, endpoint }) => (\n                  <Select.Option value={endpoint} key={endpoint}>\n                    {name}\n                  </Select.Option>\n                ))}\n              </Select>\n            </Col>\n          </Row>\n        </div>\n        {connected && (\n          <div>\n            <Popover\n              content={<Settings autoApprove={wallet?.autoApprove} />}\n              placement=\"bottomRight\"\n              title=\"Settings\"\n              trigger=\"click\"\n            >\n              <Button style={{ marginRight: 8 }}>\n                <SettingOutlined />\n                Settings\n              </Button>\n            </Popover>\n          </div>\n        )}\n        <div>\n          <Select onSelect={setProvider} value={providerUrl}>\n            {WALLET_PROVIDERS.map(({ name, url }) => (\n              <Select.Option value={url} key={url}>\n                {name}\n              </Select.Option>\n            ))}\n          </Select>\n        </div>\n        <div>\n          <Button\n            type=\"text\"\n            size=\"large\"\n            onClick={connected ? wallet.disconnect : wallet.connect}\n            style={{ color: '#2abdd2' }}\n          >\n            <UserOutlined />\n            {!connected ? 'Connect wallet' : 'Disconnect'}\n          </Button>\n          {connected && (\n            <Popover\n              content={<LinkAddress address={publicKey} />}\n              placement=\"bottomRight\"\n              title=\"Wallet public key\"\n              trigger=\"click\"\n            >\n              <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n            </Popover>\n          )}\n        </div>\n      </Wrapper>\n    </>\n  );\n}\n","export const helpUrls = {\n  customerSupport: 'https://t.me/ProjectSerum',\n  customerSupportZh: 'https://t.me/ProjectSerum_Chinese',\n  contactEmail: 'mailto:contact@projectserum.com',\n  discord: 'https://discord.gg/MxZFT4v',\n  telegram: 'https://t.me/ProjectSerum',\n  github: 'https://github.com/project-serum',\n  projectSerum: 'https://projectserum.com/',\n  developerResources: 'https://projectserum.com/developer-resources',\n  solanaBeach: 'https://solanabeach.io',\n};\n","import React from 'react';\nimport { Layout, Row, Col, Grid } from 'antd';\nimport Link from './Link';\nimport { helpUrls } from './HelpUrls';\nconst { Footer } = Layout;\nconst { useBreakpoint } = Grid;\n\nconst footerElements = [\n  {\n    description: 'Serum Developer Resources',\n    link: helpUrls.developerResources,\n  },\n  { description: 'Discord', link: helpUrls.discord },\n  { description: 'Telegram', link: helpUrls.telegram },\n  { description: 'GitHub', link: helpUrls.github },\n  { description: 'Project Serum', link: helpUrls.projectSerum },\n  { description: 'Solana Network', link: helpUrls.solanaBeach },\n];\n\nexport const CustomFooter = () => {\n  const smallScreen = !useBreakpoint().lg;\n\n  return (\n    <Footer\n      style={{\n        height: '45px',\n        paddingBottom: 10,\n        paddingTop: 10,\n      }}\n    >\n      <Row align=\"middle\" gutter={[16, 4]}>\n        {!smallScreen && (\n          <>\n            <Col flex=\"auto\" />\n            {footerElements.map((elem, index) => {\n              return (\n                <Col key={index + ''}>\n                  <Link external to={elem.link}>\n                    {elem.description}\n                  </Link>\n                </Col>\n              );\n            })}\n          </>\n        )}\n        <Col flex=\"auto\">{/*  <DexProgramSelector />*/}</Col>\n      </Row>\n    </Footer>\n  );\n};\n","import { Layout } from 'antd';\nimport React from 'react';\nimport TopBar from './TopBar';\nimport { CustomFooter as Footer } from './Footer';\nconst { Header, Content } = Layout;\n\nexport default function BasicLayout({ children }) {\n  return (\n    <React.Fragment>\n      <Layout\n        style={{ display: 'flex', minHeight: '100vh', flexDirection: 'column' }}\n      >\n        <Header style={{ padding: 0, minHeight: 64, height: 'unset' }}>\n          <TopBar />\n        </Header>\n        <Content style={{ flex: 1 }}>{children}</Content>\n        <Footer />\n      </Layout>\n    </React.Fragment>\n  );\n}\n","import React, { useState } from 'react';\nimport { Button, Form, Input, Tooltip, Typography } from 'antd';\nimport { notify } from '../utils/notifications';\nimport { isValidPublicKey } from '../utils/utils';\nimport { PublicKey } from '@solana/web3.js';\nimport { MARKETS, TokenInstructions } from '@project-serum/serum';\nimport { useAccountInfo, useConnection } from '../utils/connection';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport styled from 'styled-components';\nimport { parseTokenMintData } from '../utils/tokens';\nimport { useWallet } from '../utils/wallet';\nimport { listMarket } from '../utils/send';\nimport Link from '../components/Link';\n\nconst { Text, Title } = Typography;\n\nconst Wrapper = styled.div`\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nexport default function ListNewMarketPage() {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [baseMintInput, baseMintInfo] = useMintInput(\n    'baseMint',\n    <Text>\n      Base Token Mint Address{' '}\n      <Text type=\"secondary\">\n        (e.g. BTC solana address: {<Text type=\"secondary\" code>9n4nbM75f5Ui33ZbPYXn59EwSgE8CGsHtAeTH5YFeJ9E</Text>})\n      </Text>\n    </Text>,\n    'The base token is the token being traded. For example, the base token of a BTC/USDT market is BTC.',\n  );\n  const [quoteMintInput, quoteMintInfo] = useMintInput(\n    'quoteMint',\n    <Text>\n      Quote Token Mint Address{' '}\n      <Text type=\"secondary\">\n        (e.g. USDT solana address: {<Text type=\"secondary\" code>BQcdHdAQW1hczDbBi9hiegXAR7A98Q9jx3X3iBBBDiq4</Text>})\n      </Text>\n    </Text>,\n    'The quote token is the token used to price trades. For example, the quote token of a BTC/USDT market is USDT.',\n  );\n  const [lotSize, setLotSize] = useState('1');\n  const [tickSize, setTickSize] = useState('0.01');\n  const dexProgramId = MARKETS.find(({ deprecated }) => !deprecated).programId;\n  const [submitting, setSubmitting] = useState(false);\n\n  const [listedMarket, setListedMarket] = useState(null);\n\n  let baseLotSize;\n  let quoteLotSize;\n  if (baseMintInfo && parseFloat(lotSize) > 0) {\n    baseLotSize = Math.round(10 ** baseMintInfo.decimals * parseFloat(lotSize));\n    if (quoteMintInfo && parseFloat(tickSize) > 0) {\n      quoteLotSize = Math.round(\n        parseFloat(lotSize) *\n          10 ** quoteMintInfo.decimals *\n          parseFloat(tickSize),\n      );\n    }\n  }\n\n  const canSubmit =\n    connected &&\n    !!baseMintInfo &&\n    !!quoteMintInfo &&\n    !!baseLotSize &&\n    !!quoteLotSize;\n\n  async function onSubmit() {\n    if (!canSubmit) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const marketAddress = await listMarket({\n        connection,\n        wallet,\n        baseMint: baseMintInfo.address,\n        quoteMint: quoteMintInfo.address,\n        baseLotSize,\n        quoteLotSize,\n        dexProgramId,\n      });\n      setListedMarket(marketAddress);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error listing new market: ' + e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <Wrapper>\n      <FloatingElement>\n        <Title level={4}>List New Market</Title>\n        <Form\n          labelCol={{ span: 24 }}\n          wrapperCol={{ span: 24 }}\n          layout={\"vertical\"}\n          onFinish={onSubmit}\n        >\n          {baseMintInput}\n          {quoteMintInput}\n          <Form.Item\n            label={\n              <Tooltip title=\"Smallest allowed order size. For a BTC/USDT market, this would be in units of BTC.\">\n                Minimum Order Size <Text type=\"secondary\">(Lot size in e.g. BTC)</Text>\n              </Tooltip>\n            }\n            name=\"lotSize\"\n            initialValue=\"1\"\n            validateStatus={\n              baseMintInfo && quoteMintInfo\n                ? baseLotSize\n                  ? 'success'\n                  : 'error'\n                : null\n            }\n            hasFeedback={baseMintInfo && quoteMintInfo}\n          >\n            <Input\n              value={lotSize}\n              onChange={(e) => setLotSize(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Tooltip title=\"Smallest amount by which prices can move. For a BTC/USDT market, this would be in units of USDT.\">\n                Tick Size <Text type=\"secondary\">(Price increment in e.g. USDT)</Text>\n              </Tooltip>\n            }\n            name=\"tickSize\"\n            initialValue=\"0.01\"\n            validateStatus={\n              baseMintInfo && quoteMintInfo\n                ? quoteLotSize\n                  ? 'success'\n                  : 'error'\n                : null\n            }\n            hasFeedback={baseMintInfo && quoteMintInfo}\n          >\n            <Input\n              value={tickSize}\n              onChange={(e) => setTickSize(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <Form.Item label=\" \" colon={false}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              disabled={!canSubmit}\n              loading={submitting}\n            >\n              {connected ? 'Submit' : 'Not connected to wallet'}\n            </Button>\n          </Form.Item>\n        </Form>\n      </FloatingElement>\n      {listedMarket ? (\n        <FloatingElement>\n          <Text>New market address: {listedMarket.toBase58()}</Text>\n        </FloatingElement>\n      ) : null}\n    </Wrapper>\n  );\n}\n\nfunction useMintInput(name, label, tooltip) {\n  const [address, setAddress] = useState('');\n  const [accountInfo, loaded] = useAccountInfo(\n    isValidPublicKey(address) ? new PublicKey(address) : null,\n  );\n\n  let validateStatus = null;\n  let hasFeedback = false;\n  let help = null;\n  let mintInfo = null;\n  if (address) {\n    hasFeedback = true;\n    if (accountInfo) {\n      if (\n        accountInfo.owner.equals(TokenInstructions.TOKEN_PROGRAM_ID) &&\n        accountInfo.data.length === 82\n      ) {\n        let parsed = parseTokenMintData(accountInfo.data);\n        if (parsed.initialized) {\n          validateStatus = 'success';\n          mintInfo = {\n            address: new PublicKey(address),\n            decimals: parsed.decimals,\n          };\n        } else {\n          validateStatus = 'error';\n          help = 'Invalid SPL mint';\n        }\n      } else {\n        validateStatus = 'error';\n        help = 'Invalid SPL mint address';\n      }\n    } else if (isValidPublicKey(address) && !loaded) {\n      validateStatus = 'loading';\n    } else {\n      validateStatus = 'error';\n      help = 'Invalid Solana address';\n    }\n  }\n\n  const input = (\n    <Form.Item\n      label={\n        <Tooltip\n          title={\n            <>\n              {tooltip} You can look up token mint addresses on{' '}\n              <Link external to=\"https://sollet.io\">\n                sollet.io\n              </Link>\n              .\n            </>\n          }\n        >\n          {label}\n        </Tooltip>\n      }\n      name={name}\n      validateStatus={validateStatus}\n      hasFeedback={hasFeedback}\n      help={help}\n    >\n      <Input\n        value={address}\n        onChange={(e) => setAddress(e.target.value.trim())}\n      />\n    </Form.Item>\n  );\n\n  return [input, mintInfo];\n}\n","import { HashRouter, Route } from 'react-router-dom';\nimport TradePage from './pages/TradePage';\nimport OpenOrdersPage from './pages/OpenOrdersPage';\nimport React from 'react';\nimport BalancesPage from './pages/BalancesPage';\nimport BasicLayout from './components/BasicLayout';\nimport ListNewMarketPage from './pages/ListNewMarketPage';\n\nexport function Routes() {\n  return (\n    <HashRouter basename={'/'}>\n      <Route exact path=\"/\" component={TradePageContents} />\n      <Route exact path=\"/orders\" component={OpenOrdersPageContents} />\n      <Route exact path=\"/balances\" component={BalancesPageContents} />\n      <Route exact path=\"/list-new-market\">\n        <BasicLayout>\n          <ListNewMarketPage />\n        </BasicLayout>\n      </Route>\n    </HashRouter>\n  );\n}\n\nfunction TradePageContents() {\n  return (\n    <BasicLayout>\n      <TradePage />\n    </BasicLayout>\n  );\n}\n\nfunction OpenOrdersPageContents() {\n  return (\n    <BasicLayout>\n      <OpenOrdersPage />\n    </BasicLayout>\n  );\n}\n\nfunction BalancesPageContents() {\n  return (\n    <BasicLayout>\n      <BalancesPage />\n    </BasicLayout>\n  );\n}\n","import React, { Suspense } from 'react';\nimport './App.less';\nimport { ConnectionProvider } from './utils/connection';\nimport { MarketProvider } from './utils/markets';\nimport { WalletProvider } from './utils/wallet';\nimport { GlobalStyle } from './global_style';\nimport { Spin } from 'antd';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { Routes } from './routes';\nimport { PreferencesProvider } from './utils/preferences';\n\nexport default function App() {\n  return (\n    <Suspense fallback={() => <Spin size=\"large\" />}>\n      <GlobalStyle />\n      <ErrorBoundary>\n        <ConnectionProvider>\n          <MarketProvider>\n            <WalletProvider>\n              <PreferencesProvider>\n                <Suspense fallback={() => <Spin size=\"large\" />}>\n                  <Routes />\n                </Suspense>\n              </PreferencesProvider>\n            </WalletProvider>\n          </MarketProvider>\n        </ConnectionProvider>\n      </ErrorBoundary>\n    </Suspense>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useContext, useEffect, useMemo, useState } from 'react';\nimport Wallet from '@project-serum/sol-wallet-adapter';\nimport { notify } from './notifications';\nimport { useConnectionConfig } from './connection';\nimport { useLocalStorageState } from './utils';\nimport {WalletContextValues} from \"./types\";\n\nexport const WALLET_PROVIDERS = [\n  { name: 'sollet.io', url: 'https://www.sollet.io' },\n];\n\nconst WalletContext = React.createContext<null | WalletContextValues>(null);\n\nexport function WalletProvider({ children }) {\n  const { endpoint } = useConnectionConfig();\n\n  const [providerUrl, setProviderUrl] = useLocalStorageState(\n    'walletProvider',\n    'https://www.sollet.io',\n  );\n\n  const wallet = useMemo(() => new Wallet(providerUrl, endpoint), [\n    providerUrl,\n    endpoint,\n  ]);\n\n  const [connected, setConnected] = useState(false);\n\n  useEffect(() => {\n    console.log('trying to connect');\n    wallet.on('connect', () => {\n      console.log('connected');\n      setConnected(true);\n      let walletPublicKey = wallet.publicKey.toBase58();\n      let keyToDisplay =\n        walletPublicKey.length > 20\n          ? `${walletPublicKey.substring(0, 7)}.....${walletPublicKey.substring(\n              walletPublicKey.length - 7,\n              walletPublicKey.length,\n            )}`\n          : walletPublicKey;\n      notify({\n        message: 'Wallet update',\n        description: 'Connected to wallet ' + keyToDisplay,\n      });\n    });\n    wallet.on('disconnect', () => {\n      setConnected(false);\n      notify({\n        message: 'Wallet update',\n        description: 'Disconnected from wallet',\n      });\n    });\n    return () => {\n      wallet.disconnect();\n      setConnected(false);\n    };\n  }, [wallet]);\n\n  return (\n    <WalletContext.Provider\n      value={{\n        wallet,\n        connected,\n        providerUrl,\n        setProviderUrl,\n        providerName:\n          WALLET_PROVIDERS.find(({ url }) => url === providerUrl)?.name ??\n          providerUrl,\n      }}\n    >\n      {children}\n    </WalletContext.Provider>\n  );\n}\n\nexport function useWallet() {\n  const context = useContext(WalletContext);\n  if (!context) {\n    throw new Error('Missing wallet context')\n  }\n  return {\n    connected: context.connected,\n    wallet: context.wallet,\n    providerUrl: context.providerUrl,\n    setProvider: context.setProviderUrl,\n    providerName: context.providerName,\n  };\n}\n","import {useEffect, useReducer} from 'react';\n\nimport assert from 'assert';\n\nconst pageLoadTime = new Date();\n\nconst globalCache: Map<any, any> = new Map();\n\nclass FetchLoopListener<T = any> {\n  cacheKey: any;\n  fn: () => Promise<T>;\n  refreshInterval: number;\n  refreshIntervalOnError: number | null;\n  callback: () => void;\n\n  constructor(\n      cacheKey: any,\n      fn: () => Promise<T>,\n      refreshInterval: number,\n      refreshIntervalOnError: number | null,\n      callback: () => void\n  ) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.refreshInterval = refreshInterval;\n    this.refreshIntervalOnError = refreshIntervalOnError;\n    this.callback = callback;\n  }\n}\n\nclass FetchLoopInternal<T = any> {\n  cacheKey: any;\n  fn: () => Promise<T>;\n  timeoutId: null | any;\n  listeners: Set<FetchLoopListener<T>>;\n  errors: number;\n\n  constructor(cacheKey, fn) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.timeoutId = null;\n    this.listeners = new Set();\n    this.errors = 0;\n  }\n\n  get refreshInterval(): number {\n    return Math.min(\n      ...[...this.listeners].map((listener) => listener.refreshInterval),\n    );\n  }\n\n  get refreshIntervalOnError(): number | null {\n    const refreshIntervalsOnError: number[] = [...this.listeners]\n        .map((listener) => listener.refreshIntervalOnError)\n        .filter((x): x is number => x !== null);\n    if (refreshIntervalsOnError.length === 0) {\n      return null;\n    }\n    return Math.min(\n      ...refreshIntervalsOnError,\n    );\n  }\n\n  get stopped(): boolean {\n    return this.listeners.size === 0;\n  }\n\n  addListener(listener: FetchLoopListener<T>): void {\n    const previousRefreshInterval = this.refreshInterval;\n    this.listeners.add(listener);\n    if (this.refreshInterval < previousRefreshInterval) {\n      this.refresh();\n    }\n  }\n\n  removeListener(listener: FetchLoopListener<T>): void {\n    assert(this.listeners.delete(listener));\n    if (this.stopped) {\n      if (this.timeoutId) {\n        clearTimeout(this.timeoutId);\n        this.timeoutId = null;\n      }\n    }\n  }\n\n  notifyListeners(): void {\n    this.listeners.forEach((listener) => listener.callback());\n  }\n\n  refresh = async () => {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    }\n    if (this.stopped) {\n      return;\n    }\n\n    let errored = false;\n    try {\n      const data = await this.fn();\n      globalCache.set(this.cacheKey, data);\n      this.errors = 0;\n      this.notifyListeners();\n      return data;\n    } catch (error) {\n      ++this.errors;\n      console.warn(error);\n      errored = true;\n    } finally {\n      if (!this.timeoutId && !this.stopped) {\n        let waitTime = this.refreshInterval;\n        if (\n          errored &&\n          this.refreshIntervalOnError &&\n          this.refreshIntervalOnError > 0\n        ) {\n          waitTime = this.refreshIntervalOnError;\n        }\n\n        // Back off on errors.\n        if (this.errors > 0) {\n          waitTime = Math.min(1000 * 2 ** (this.errors - 1), 60000);\n        }\n\n        // Don't do any refreshing for the first five seconds, to make way for other things to load.\n        const timeSincePageLoad = +new Date() - +pageLoadTime;\n        if (timeSincePageLoad < 5000) {\n          waitTime += 5000 - timeSincePageLoad / 2;\n        }\n\n        // Refresh background pages slowly.\n        if (document.visibilityState === 'hidden') {\n          waitTime = 60000;\n        } else if (!document.hasFocus()) {\n          waitTime *= 1.5;\n        }\n\n        // Add jitter so we don't send all requests at the same time.\n        waitTime *= 0.8 + 0.4 * Math.random();\n\n        this.timeoutId = setTimeout(this.refresh, waitTime);\n      }\n    }\n  };\n}\n\nclass FetchLoops {\n  loops = new Map();\n\n  addListener<T>(listener: FetchLoopListener<T>) {\n    if (!this.loops.has(listener.cacheKey)) {\n      this.loops.set(\n        listener.cacheKey,\n        new FetchLoopInternal<T>(listener.cacheKey, listener.fn),\n      );\n    }\n    this.loops.get(listener.cacheKey).addListener(listener);\n  }\n\n  removeListener<T>(listener: FetchLoopListener<T>) {\n    const loop = this.loops.get(listener.cacheKey);\n    loop.removeListener(listener);\n    if (loop.stopped) {\n      this.loops.delete(listener.cacheKey);\n    }\n  }\n\n  refresh(cacheKey) {\n    if (this.loops.has(cacheKey)) {\n      this.loops.get(cacheKey).refresh();\n    }\n  }\n\n  refreshAll() {\n    return Promise.all([...this.loops.values()].map((loop) => loop.refresh()));\n  }\n}\nconst globalLoops = new FetchLoops();\n\nexport function useAsyncData<T = any>(\n  asyncFn: () => Promise<T>,\n  cacheKey: any,\n  { refreshInterval = 60000, refreshIntervalOnError = null } = {},\n): [null | undefined | T, boolean] {\n  const [, rerender] = useReducer((i) => i + 1, 0);\n\n  useEffect(() => {\n    if (!cacheKey) {\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      return () => {};\n    }\n    const listener = new FetchLoopListener<T>(\n      cacheKey,\n      asyncFn,\n      refreshInterval,\n      refreshIntervalOnError,\n      rerender,\n    );\n    globalLoops.addListener(listener);\n    return () => globalLoops.removeListener(listener);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey, refreshInterval]);\n\n  if (!cacheKey) {\n    return [null, false];\n  }\n\n  const loaded = globalCache.has(cacheKey);\n  const data = loaded ? globalCache.get(cacheKey) : undefined;\n  return [data, loaded];\n}\n\nexport function refreshCache(cacheKey: any, clearCache = false): void {\n  if (clearCache) {\n    globalCache.delete(cacheKey);\n  }\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.refresh();\n    if (clearCache) {\n      loop.notifyListeners();\n    }\n  }\n}\n\nexport function refreshAllCaches(): void {\n  for (const loop of globalLoops.loops.values()) {\n    loop.refresh();\n  }\n}\n\nexport function setCache(cacheKey: any, value: any, { initializeOnly = false } = {}): void {\n  if (initializeOnly && globalCache.has(cacheKey)) {\n    return;\n  }\n  globalCache.set(cacheKey, value);\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.notifyListeners();\n  }\n}\n","import { notify } from './notifications';\nimport { getDecimalCount, sleep } from './utils';\nimport { getSelectedTokenAccountForMint } from './markets';\nimport {\n  Account, Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction, TransactionSignature,\n} from '@solana/web3.js';\nimport { BN } from 'bn.js';\nimport {\n  DexInstructions,\n  Market,\n  TOKEN_MINTS,\n  TokenInstructions,\n  OpenOrders,\n} from '@project-serum/serum';\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\nimport {TokenAccount} from \"./types\";\nimport {Order} from \"@project-serum/serum/lib/market\";\n\nexport async function createTokenAccountTransaction({\n  connection,\n  wallet,\n  mintPublicKey,\n} : {\n  connection: Connection;\n  wallet: Wallet;\n  mintPublicKey: PublicKey;\n}): Promise<{\n  transaction: Transaction;\n  signer: Account;\n  newAccountPubkey: PublicKey;\n}> {\n  const newAccount = new Account();\n  const transaction = SystemProgram.createAccount({\n    fromPubkey: wallet.publicKey,\n    newAccountPubkey: newAccount.publicKey,\n    lamports: await connection.getMinimumBalanceForRentExemption(165),\n    space: 165,\n    programId: TokenInstructions.TOKEN_PROGRAM_ID,\n  });\n  transaction.add(\n    TokenInstructions.initializeAccount({\n      account: newAccount.publicKey,\n      mint: mintPublicKey,\n      owner: wallet.publicKey,\n    }),\n  );\n  return {\n    transaction,\n    signer: newAccount,\n    newAccountPubkey: newAccount.publicKey,\n  };\n}\n\nexport async function settleFunds({\n  market,\n  openOrders,\n  connection,\n  wallet,\n  baseCurrencyAccount,\n  quoteCurrencyAccount,\n} : {\n  market: Market;\n  openOrders: OpenOrders;\n  connection: Connection;\n  wallet: Wallet;\n  baseCurrencyAccount: TokenAccount;\n  quoteCurrencyAccount: TokenAccount;\n}): Promise<string | undefined> {\n  if (\n    !market ||\n    !wallet ||\n    !connection ||\n    !openOrders ||\n    (!baseCurrencyAccount && !quoteCurrencyAccount)\n  ) {\n    notify({ message: 'Not connected' });\n    return;\n  }\n\n  let createAccountTransaction: Transaction | undefined;\n  let createAccountSigner: Account | undefined;\n  let baseCurrencyAccountPubkey = baseCurrencyAccount?.pubkey;\n  let quoteCurrencyAccountPubkey = quoteCurrencyAccount?.pubkey;\n\n  if (!baseCurrencyAccountPubkey) {\n    const result = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.baseMintAddress,\n    });\n    baseCurrencyAccountPubkey = result?.newAccountPubkey;\n    createAccountTransaction = result?.transaction;\n    createAccountSigner = result?.signer;\n  }\n  if (!quoteCurrencyAccountPubkey) {\n    const result = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.quoteMintAddress,\n    });\n    quoteCurrencyAccountPubkey = result?.newAccountPubkey;\n    createAccountTransaction = result?.transaction;\n    createAccountSigner = result?.signer;\n  }\n  let referrerQuoteWallet: PublicKey | null = null;\n  if (market.supportsReferralFees) {\n    const usdt = TOKEN_MINTS.find(({ name }) => name === 'USDT')\n    const usdc = TOKEN_MINTS.find(({ name }) => name === 'USDC')\n    if (\n      process.env.REACT_APP_USDT_REFERRAL_FEES_ADDRESS &&\n      usdt &&\n      market.quoteMintAddress.equals(usdt.address)\n    ) {\n      referrerQuoteWallet = new PublicKey(\n        process.env.REACT_APP_USDT_REFERRAL_FEES_ADDRESS,\n      );\n    } else if (\n      process.env.REACT_APP_USDC_REFERRAL_FEES_ADDRESS &&\n      usdc &&\n      market.quoteMintAddress.equals(usdc.address)\n    ) {\n      referrerQuoteWallet = new PublicKey(\n        process.env.REACT_APP_USDC_REFERRAL_FEES_ADDRESS,\n      );\n    }\n  }\n  const {\n    transaction: settleFundsTransaction,\n    signers: settleFundsSigners,\n  } = await market.makeSettleFundsTransaction(\n    connection,\n    openOrders,\n    baseCurrencyAccountPubkey,\n    quoteCurrencyAccountPubkey,\n    referrerQuoteWallet,\n  );\n\n  let transaction = mergeTransactions([\n    createAccountTransaction,\n    settleFundsTransaction,\n  ]);\n  let signers = createAccountSigner\n    ? [...settleFundsSigners, createAccountSigner]\n    : settleFundsSigners;\n\n  return await sendTransaction({\n    transaction,\n    signers,\n    wallet,\n    connection,\n    sendingMessage: 'Settling funds...',\n  });\n}\n\nexport async function settleAllFunds({\n  connection,\n  wallet,\n  tokenAccounts,\n  markets,\n}) {\n  if (!markets || !wallet || !connection || !tokenAccounts) {\n    return;\n  }\n\n  const programIds: PublicKey[] = [];\n  markets\n    .reduce((cumulative, m) => {\n      cumulative.push(m._programId);\n      return cumulative;\n    }, [])\n    .forEach((programId) => {\n      if (!programIds.find((p) => p.equals(programId))) {\n        programIds.push(programId);\n      }\n    });\n\n  const getOpenOrdersAccountsForProgramId = async (programId) => {\n    const openOrdersAccounts = await OpenOrders.findForOwner(\n      connection,\n      wallet.publicKey,\n      programId,\n    );\n    return openOrdersAccounts.filter(\n      (openOrders) =>\n        openOrders.baseTokenFree.toNumber() ||\n        openOrders.quoteTokenFree.toNumber(),\n    );\n  };\n\n  const openOrdersAccountsForProgramIds = await Promise.all(\n    programIds.map((programId) => getOpenOrdersAccountsForProgramId(programId)),\n  );\n  const openOrdersAccounts = openOrdersAccountsForProgramIds.reduce(\n    (accounts, current) => accounts.concat(current),\n    [],\n  );\n\n  const settleTransactions = (await Promise.all(\n    openOrdersAccounts.map((openOrdersAccount) => {\n      const market = markets.find((m) =>\n        m._decoded?.ownAddress?.equals(openOrdersAccount.market),\n      );\n      return (\n        market &&\n        market.makeSettleFundsTransaction(\n          connection,\n          openOrdersAccount,\n          getSelectedTokenAccountForMint(tokenAccounts, market?.baseMintAddress)\n            ?.pubkey,\n          getSelectedTokenAccountForMint(\n            tokenAccounts,\n            market?.quoteMintAddress,\n          )?.pubkey,\n        )\n      );\n    }),\n  )).filter((x) => x);\n  if (!settleTransactions || settleTransactions.length === 0) return;\n\n  const transactions = settleTransactions.slice(0, 4).map((t) => t.transaction);\n  const signers: (Account | PublicKey)[] = [];\n  settleTransactions\n    .reduce((cumulative, t) => cumulative.concat(t.signers), [])\n    .forEach((signer) => {\n      if (!signers.find((s) => {\n        if (s.constructor.name !== signer.constructor.name) {\n          return false;\n        } else if (s.constructor.name === 'PublicKey') {\n          // @ts-ignore\n          return s.equals(signer);\n        } else {\n          // @ts-ignore\n          return s.publicKey.equals(signer.publicKey);\n        }\n      })) {\n        signers.push(signer);\n      }\n    });\n\n  const transaction = mergeTransactions(transactions);\n\n  return await sendTransaction({\n    transaction,\n    signers,\n    wallet,\n    connection,\n  });\n}\n\nexport async function cancelOrder(params: {market: Market; connection: Connection; wallet: Wallet; order: Order;}) {\n  return cancelOrders({ ...params, orders: [params.order] });\n}\n\nexport async function cancelOrders({ market, wallet, connection, orders }: {\n  market: Market;\n  wallet: Wallet;\n  connection: Connection;\n  orders: Order[];\n}) {\n  const transaction = market.makeMatchOrdersTransaction(5);\n  orders.forEach((order) => {\n    transaction.add(\n      market.makeCancelOrderInstruction(connection, wallet.publicKey, order),\n    );\n  });\n  transaction.add(market.makeMatchOrdersTransaction(5));\n  return await sendTransaction({\n    transaction,\n    wallet,\n    connection,\n    sendingMessage: 'Sending cancel...',\n  });\n}\n\nexport async function placeOrder({\n  side,\n  price,\n  size,\n  orderType,\n  market,\n  connection,\n  wallet,\n  baseCurrencyAccount,\n  quoteCurrencyAccount,\n}: {\n  side: \"buy\" | \"sell\";\n  price: number;\n  size: number;\n  orderType: \"ioc\" | \"postOnly\" | \"limit\";\n  market: Market | undefined | null;\n  connection: Connection;\n  wallet: Wallet;\n  baseCurrencyAccount: PublicKey | undefined;\n  quoteCurrencyAccount: PublicKey | undefined;\n}) {\n  let formattedMinOrderSize =\n    market?.minOrderSize?.toFixed(getDecimalCount(market.minOrderSize)) ||\n    market?.minOrderSize;\n  let formattedTickSize =\n    market?.tickSize?.toFixed(getDecimalCount(market.tickSize)) ||\n    market?.tickSize;\n  const isIncrement = (num, step) =>\n    Math.abs((num / step) % 1) < 1e-5 ||\n    Math.abs(((num / step) % 1) - 1) < 1e-5;\n  if (isNaN(price)) {\n    notify({ message: 'Invalid price', type: 'error' });\n    return;\n  }\n  if (isNaN(size)) {\n    notify({ message: 'Invalid size', type: 'error' });\n    return;\n  }\n  if (!wallet || !wallet.publicKey) {\n    notify({ message: 'Connect wallet', type: 'error' });\n    return;\n  }\n  if (!market) {\n    notify({ message: 'Invalid  market', type: 'error' });\n    return;\n  }\n  if (!isIncrement(size, market.minOrderSize)) {\n    notify({\n      message: `Size must be an increment of ${formattedMinOrderSize}`,\n      type: 'error',\n    });\n    return;\n  }\n  if (size < market.minOrderSize) {\n    notify({ message: 'Size too small', type: 'error' });\n    return;\n  }\n  if (!isIncrement(price, market.tickSize)) {\n    notify({\n      message: `Price must be an increment of ${formattedTickSize}`,\n      type: 'error',\n    });\n    return;\n  }\n  if (price < market.tickSize) {\n    notify({ message: 'Price under tick size', type: 'error' });\n    return;\n  }\n  const owner = wallet.publicKey;\n\n  const payer = side === 'sell' ? baseCurrencyAccount : quoteCurrencyAccount;\n  if (!payer) {\n    notify({\n      message: 'Need an SPL token account for cost currency',\n      type: 'error',\n    });\n    return;\n  }\n  const params = {\n    owner,\n    payer,\n    side,\n    price,\n    size,\n    orderType,\n  };\n  console.log(params);\n\n  const transaction = market.makeMatchOrdersTransaction(5);\n  let {\n    transaction: placeOrderTx,\n    signers,\n  } = await market.makePlaceOrderTransaction(\n    connection,\n    params,\n    10_000,\n    10_000,\n  );\n  transaction.add(placeOrderTx);\n  transaction.add(market.makeMatchOrdersTransaction(5));\n\n  return await sendTransaction({\n    transaction,\n    wallet,\n    connection,\n    signers,\n    sendingMessage: 'Sending order...',\n  });\n}\n\nexport async function listMarket({\n  connection,\n  wallet,\n  baseMint,\n  quoteMint,\n  baseLotSize,\n  quoteLotSize,\n  dexProgramId,\n} : {\n  connection: Connection;\n  wallet: Wallet;\n  baseMint: PublicKey;\n  quoteMint: PublicKey;\n  baseLotSize: number;\n  quoteLotSize: number;\n  dexProgramId: PublicKey;\n}) {\n  const market = new Account();\n  const requestQueue = new Account();\n  const eventQueue = new Account();\n  const bids = new Account();\n  const asks = new Account();\n  const baseVault = new Account();\n  const quoteVault = new Account();\n  const feeRateBps = 0;\n  const quoteDustThreshold = new BN(100);\n\n  async function getVaultOwnerAndNonce() {\n    const nonce = new BN(0);\n    while (true) {\n      try {\n        const vaultOwner = await PublicKey.createProgramAddress(\n          [market.publicKey.toBuffer(), nonce.toArrayLike(Buffer, 'le', 8)],\n          dexProgramId,\n        );\n        return [vaultOwner, nonce];\n      } catch (e) {\n        nonce.iaddn(1);\n      }\n    }\n  }\n  const [vaultOwner, vaultSignerNonce] = await getVaultOwnerAndNonce();\n\n  const tx1 = new Transaction();\n  tx1.add(\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: baseVault.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(165),\n      space: 165,\n      programId: TokenInstructions.TOKEN_PROGRAM_ID,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: quoteVault.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(165),\n      space: 165,\n      programId: TokenInstructions.TOKEN_PROGRAM_ID,\n    }),\n    TokenInstructions.initializeAccount({\n      account: baseVault.publicKey,\n      mint: baseMint,\n      owner: vaultOwner,\n    }),\n    TokenInstructions.initializeAccount({\n      account: quoteVault.publicKey,\n      mint: quoteMint,\n      owner: vaultOwner,\n    }),\n  );\n\n  const tx2 = new Transaction();\n  tx2.add(\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: market.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(\n        Market.getLayout(dexProgramId).span,\n      ),\n      space: Market.getLayout(dexProgramId).span,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: requestQueue.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(5120 + 12),\n      space: 5120 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: eventQueue.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(262144 + 12),\n      space: 262144 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: bids.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(65536 + 12),\n      space: 65536 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: asks.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(65536 + 12),\n      space: 65536 + 12,\n      programId: dexProgramId,\n    }),\n    DexInstructions.initializeMarket({\n      market: market.publicKey,\n      requestQueue: requestQueue.publicKey,\n      eventQueue: eventQueue.publicKey,\n      bids: bids.publicKey,\n      asks: asks.publicKey,\n      baseVault: baseVault.publicKey,\n      quoteVault: quoteVault.publicKey,\n      baseMint,\n      quoteMint,\n      baseLotSize: new BN(baseLotSize),\n      quoteLotSize: new BN(quoteLotSize),\n      feeRateBps,\n      vaultSignerNonce,\n      quoteDustThreshold,\n      programId: dexProgramId,\n    }),\n  );\n\n  const signedTransactions = await Promise.all([\n    signTransaction({\n      transaction: tx1,\n      wallet,\n      connection,\n      signers: [wallet.publicKey, baseVault, quoteVault],\n    }),\n    signTransaction({\n      transaction: tx2,\n      wallet,\n      connection,\n      signers: [wallet.publicKey, market, requestQueue, eventQueue, bids, asks],\n    }),\n  ]);\n  for (let signedTransaction of signedTransactions) {\n    await sendSignedTransaction({\n      signedTransaction,\n      connection,\n    });\n  }\n\n  return market.publicKey;\n}\n\nconst getUnixTs = () => {\n  return new Date().getTime() / 1000;\n};\n\nconst DEFAULT_TIMEOUT = 15000;\n\nasync function sendTransaction({\n  transaction,\n  wallet,\n  signers = [wallet.publicKey],\n  connection,\n  sendingMessage = 'Sending transaction...',\n  sentMessage = 'Transaction sent',\n  successMessage = 'Transaction confirmed',\n  timeout = DEFAULT_TIMEOUT,\n} : {\n  transaction: Transaction;\n  wallet: Wallet;\n  signers?: Array<PublicKey | Account>;\n  connection: Connection;\n  sendingMessage?: string;\n  sentMessage?: string;\n  successMessage?: string;\n  timeout?: number;\n}): Promise<string> {\n  const signedTransaction = await signTransaction({\n    transaction,\n    wallet,\n    signers,\n    connection,\n  });\n  return await sendSignedTransaction({\n    signedTransaction,\n    connection,\n    sendingMessage,\n    sentMessage,\n    successMessage,\n    timeout,\n  });\n}\n\nasync function signTransaction({\n  transaction,\n  wallet,\n  signers = [wallet.publicKey],\n  connection,\n} : {\n  transaction: Transaction;\n  wallet: Wallet;\n  signers: Array<Account | PublicKey>;\n  connection: Connection;\n}) {\n  transaction.recentBlockhash = (\n    await connection.getRecentBlockhash('max')\n  ).blockhash;\n  transaction.signPartial(...signers);\n  return await wallet.signTransaction(transaction);\n}\n\nasync function sendSignedTransaction({\n  signedTransaction,\n  connection,\n  sendingMessage = 'Sending transaction...',\n  sentMessage = 'Transaction sent',\n  successMessage = 'Transaction confirmed',\n  timeout = DEFAULT_TIMEOUT,\n} : {\n  signedTransaction: Transaction;\n  connection: Connection;\n  sendingMessage?: string;\n  sentMessage?: string;\n  successMessage?: string;\n  timeout?: number;\n}): Promise<string> {\n  const rawTransaction = signedTransaction.serialize();\n  const startTime = getUnixTs();\n  notify({ message: sendingMessage });\n  const txid: TransactionSignature = await connection.sendRawTransaction(rawTransaction, {\n    skipPreflight: true,\n  });\n  notify({ message: sentMessage, type: 'success', txid });\n\n  console.log('Started awaiting confirmation for', txid);\n\n  let done = false;\n  (async () => {\n    while (!done && getUnixTs() - startTime < timeout) {\n      connection.sendRawTransaction(rawTransaction, {\n        skipPreflight: true,\n      });\n      await sleep(300);\n    }\n  })();\n  try {\n    await awaitTransactionSignatureConfirmation(txid, timeout, connection);\n  } catch (err) {\n    if (err.timeout) {\n      throw new Error('Timed out awaiting confirmation on transaction');\n    }\n    throw new Error('Transaction failed');\n  } finally {\n    done = true;\n  }\n  notify({ message: successMessage, type: 'success', txid });\n\n  console.log('Latency', txid, getUnixTs() - startTime);\n  return txid;\n}\n\nasync function awaitTransactionSignatureConfirmation(\n  txid: TransactionSignature,\n  timeout: number,\n  connection: Connection,\n) {\n  let done = false;\n  const result = await new Promise((resolve, reject) => {\n    (async () => {\n      setTimeout(() => {\n        if (done) {\n          return;\n        }\n        done = true;\n        console.log('Timed out for txid', txid);\n        reject({ timeout: true });\n      }, timeout);\n      try {\n        connection.onSignature(\n          txid,\n          (result) => {\n            console.log('WS confirmed', txid, result);\n            done = true;\n            if (result.err) {\n              reject(result.err);\n            } else {\n              resolve(result);\n            }\n          },\n          'recent',\n        );\n        console.log('Set up WS connection', txid);\n      } catch (e) {\n        done = true;\n        console.log('WS error in setup', txid, e);\n      }\n      while (!done) {\n        // eslint-disable-next-line no-loop-func\n        (async () => {\n          try {\n            const signatureStatuses = await connection.getSignatureStatuses([\n              txid,\n            ]);\n            const result = signatureStatuses && signatureStatuses.value[0];\n            if (!done) {\n              if (!result) {\n                console.log('REST null result for', txid, result);\n              } else if (result.err) {\n                console.log('REST error for', txid, result);\n                done = true;\n                reject(result.err);\n              } else if (!result.confirmations) {\n                console.log('REST no confirmations for', txid, result);\n              } else {\n                console.log('REST confirmation for', txid, result);\n                done = true;\n                resolve(result);\n              }\n            }\n          } catch (e) {\n            if (!done) {\n              console.log('REST connection error: txid', txid, e);\n            }\n          }\n        })();\n        await sleep(300);\n      }\n    })();\n  });\n  done = true;\n  return result;\n}\n\nfunction mergeTransactions(transactions: (Transaction | undefined)[]) {\n  const transaction = new Transaction();\n  transactions\n    .filter((t): t is Transaction => t !== undefined)\n    .forEach((t) => {\n      transaction.add(t);\n    });\n  return transaction;\n}\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nexport default function Link({ external = false, ...props }) {\n  let { to, children, ...rest } = props;\n  if (external) {\n    return (\n      <a href={to} target=\"_blank\" rel=\"noopener noreferrer\" {...rest}>\n        {children}\n      </a>\n    );\n  }\n  return (\n    <RouterLink to={to} {...rest}>\n      {children}\n    </RouterLink>\n  );\n}\n"],"sourceRoot":""}