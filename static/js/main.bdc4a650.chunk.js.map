{"version":3,"sources":["assets/logo.svg","utils/utils.js","utils/fetch-loop.js","utils/connection.js","utils/notifications.js","utils/wallet.js","utils/tokens.js","utils/markets.js","global_style.ts","components/ErrorBoundary.jsx","components/layout/FloatingElement.jsx","components/Orderbook.jsx","utils/useInterval.js","utils/usePrevious.js","components/layout/DataTable.jsx","utils/send.js","components/UserInfoTable/BalancesTable.jsx","components/UserInfoTable/OpenOrderTable.jsx","components/UserInfoTable/FillsTable.jsx","components/UserInfoTable/FeesTable.js","components/UserInfoTable/index.jsx","components/Link.js","components/DepositDialog.jsx","components/StandaloneBalancesDisplay.jsx","components/TradeForm.jsx","components/TradesTable.jsx","components/LinkAddress.jsx","components/DeprecatedMarketsInstructions.js","pages/TradePage.jsx","pages/OpenOrdersPage.jsx","components/UserInfoTable/WalletBalancesTable.jsx","components/UserInfoTable/AccountsTable.jsx","pages/BalancesPage.jsx","components/TopBar.js","components/HelpUrls.js","components/Footer.jsx","components/BasicLayout.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","sleep","ms","a","Promise","resolve","setTimeout","percentFormat","Intl","NumberFormat","undefined","style","minimumFractionDigits","maximumFractionDigits","floorToDecimal","value","decimals","Math","floor","roundToDecimal","round","getDecimalCount","isNaN","toString","split","length","useLocalStorageState","key","defaultState","useState","storedState","localStorage","getItem","JSON","parse","state","setState","setLocalStorageState","useCallback","newState","removeItem","setItem","stringify","isEqual","obj1","obj2","keys","Object","k","pageLoadTime","Date","globalCache","Map","FetchLoopListener","cacheKey","fn","refreshInterval","refreshIntervalOnError","callback","this","FetchLoopInternal","refresh","timeoutId","clearTimeout","stopped","errored","data","set","errors","notifyListeners","console","warn","waitTime","min","timeSincePageLoad","document","visibilityState","hasFocus","random","listeners","Set","listener","previousRefreshInterval","add","assert","delete","forEach","map","filter","x","size","globalLoops","loops","has","get","addListener","loop","removeListener","all","values","useAsyncData","asyncFn","useReducer","i","rerender","useEffect","loaded","refreshCache","clearCache","ENDPOINTS","name","endpoint","clusterApiUrl","accountListenerCount","ConnectionContext","React","createContext","ConnectionProvider","children","setEndpoint","connection","useMemo","Connection","sendConnection","id","onAccountChange","Account","publicKey","removeAccountChangeListener","onSlotChange","removeSlotChangeListener","Provider","useConnection","useContext","useSendConnection","useConnectionConfig","context","useAccountInfo","tuple","toBase58","getAccountInfo","accountInfo","count","previousData","subscriptionId","e","equals","initializeOnly","setCache","currentItem","useAccountData","notify","message","description","type","placement","notification","color","opacity","backgroundColor","WALLET_PROVIDERS","url","WalletContext","WalletProvider","providerUrl","setProviderUrl","wallet","Wallet","connected","setConnected","log","on","walletPublicKey","substring","disconnect","providerName","find","useWallet","setProvider","ACCOUNT_LAYOUT","BufferLayout","parseTokenAccountData","decode","mint","owner","amount","PublicKey","getOwnedAccountsFilters","memcmp","offset","offsetOf","bytes","dataSize","span","TOKEN_PROGRAM_ID","getOwnedTokenAccounts","filters","_rpcRequest","commitment","resp","error","Error","result","pubkey","account","executable","lamports","bs58","every","filterBytes","slice","getTokenAccountInfo","ownerAddress","splAccounts","parsedSplAccounts","effectiveMint","concat","WRAPPED_SOL_MINT","USE_MARKETS","MARKETS","useAllMarkets","markets","setMarkets","marketInfo","Market","load","address","programId","market","push","marketName","getAllMarkets","useUnmigratedOpenOrdersAccounts","deprecatedOpenOrdersAccounts","deprecatedProgramIds","Array","from","deprecated","publicKeyStr","OpenOrders","findForOwner","openOrdersAccounts","openOrders","baseTokenTotal","toNumber","quoteTokenTotal","some","_VERY_SLOW_REFRESH_INTERVAL","accounts","MarketContext","DEFAULT_MARKET","getMarketDetails","otherMarket","baseCurrency","baseMintAddress","TOKEN_MINTS","token","quoteCurrency","quoteMintAddress","MarketProvider","marketAddress","setMarketAddress","setMarket","then","catch","useMarket","useMarkPrice","markPrice","setMarkPrice","useOrderbook","orderbook","trades","useTrades","bb","bids","Number","ba","asks","last","price","sort","b","_useUnfilteredTrades","limit","getUnfilteredTrades","loadFills","useOrderbookAccounts","bidData","_decoded","askData","bidOrderbook","Orderbook","askOrderbook","depth","getL2","useOpenOrdersAccounts","fast","getOpenOrdersAccounts","findOpenOrdersAccountsForOwner","useSelectedOpenOrdersAccount","useTokenAccounts","getSelectedTokenAccountForMint","filtered","useSelectedQuoteCurrencyAccount","useSelectedBaseCurrencyAccount","useQuoteCurrencyBalances","quoteCurrencyAccount","TokenInstructions","quoteSplSizeToNumber","BN","useBaseCurrencyBalances","baseCurrencyAccount","baseSplSizeToNumber","eventFlags","maker","trade","side","useBalances","baseCurrencyBalances","quoteCurrencyBalances","baseExists","baseTokenFree","quoteExists","quoteTokenFree","coin","orders","sub","unsettled","getCurrencyBalance","findBaseTokenAccountsForOwner","findQuoteTokenAccountsForOwner","currencyAccounts","currencyAccount","getTokenAccountBalance","tokenAccountBalances","uiAmount","useUnmigratedDeprecatedMarkets","marketsList","deps","m","getMarket","openOrdersList","GlobalStyle","createGlobalStyle","Title","Typography","ErrorBoundary","hasError","level","props","Component","Wrapper","styled","div","FloatingElement","SizeTitle","Row","MarkPriceTitle","Line","css","Price","smallScreen","onPrice","onSize","currentOrderbookData","useRef","lastOrderbookData","asksToDisplay","setAsksToDisplay","bidsToDisplay","setBidsToDisplay","totalSize","setTotalSize","getCumulativeOrderbookSide","backwards","cumulative","reduce","cumulativeSize","reverse","delay","savedCallback","current","setInterval","clearInterval","useInterval","totalAskSize","flex","height","overflow","textAlign","OrderbookRow","sizePercent","onSizeClick","onPriceClick","MarkPriceComponent","memo","element","classList","contains","remove","formattedSize","minOrderSize","toFixed","formattedPrice","tickSize","ref","marginBottom","onClick","data-width","data-bgcolor","prevProps","nextProps","previousMarkPrice","usePrevious","markPriceColor","formattedMarkPrice","justify","ArrowUpOutlined","marginRight","ArrowDownOutlined","DataTable","dataSource","columns","emptyLabel","pagination","loading","pageSize","renderEmpty","padding","display","justifyContent","alignItems","createTokenAccountTransaction","mintPublicKey","newAccount","SystemProgram","getMinimumBalanceForRentExemption","fromPubkey","newAccountPubkey","space","transaction","createAccount","initializeAccount","signer","settleFunds","onSuccess","baseCurrencyAccountPubkey","quoteCurrencyAccountPubkey","createAccountTransaction","createAccountSigner","makeSettleFundsTransaction","settleFundsTransaction","settleFundsSigners","signers","mergeTransactions","onConfirm","timeout","err","onBeforeSend","onAfterSend","sendTransaction","cancelOrder","params","cancelOrders","order","onBeforeSendCallBack","onAfterSendCallBack","onConfirmCallBack","makeMatchOrdersTransaction","makeCancelOrderInstruction","placeOrder","orderType","formattedMinOrderSize","formattedTickSize","isIncrement","num","step","abs","payer","makePlaceOrderTransaction","placeOrderTx","getUnixTs","getTime","getRecentBlockhash","recentBlockhash","blockhash","signPartial","signTransaction","rawTransaction","serialize","done","startTime","sendRawTransaction","skipPreflight","txid","awaitTransactionSignatureConfirmation","res","reject","onSignature","getSignatureStatuses","signatureStatuses","confirmations","transactions","Transaction","t","BalancesTable","balances","showMarket","hideWalletBalance","onSettleSuccess","title","dataIndex","render","ghost","onSettleFunds","CancelButton","Button","OpenOrderTable","onCancelSuccess","cancelId","setCancelId","orderId","fontWeight","charAt","toUpperCase","icon","DeleteOutlined","cancel","assign","FillsTable","fills","fill","openOrdersAccount","useFills","liquidity","FeesTable","findFeeDiscountKeys","useFeeDiscountKeys","feeTier","row","index","marginLeft","format","getFeeRates","taker","_","SRM_MINT","MSRM_MINT","marginTop","FeeScheduleTable","balance","info","Paragraph","TabPane","Tabs","Index","paddingTop","defaultActiveKey","tab","supportsSrmFeeDiscounts","OpenOrdersTab","filterForOpenOrders","useOpenOrders","BalancesTab","Link","external","to","rest","href","target","rel","DepositDialog","onClose","depositCoin","coinMint","visible","onOk","onCancel","RowBox","Tip","p","ActionButton","StandaloneBalancesDisplay","setDepositCoin","currency","Fragment","borderColor","align","paddingBottom","width","block","SellButton","BuyButton","sliderMarks","0","25","50","75","100","TradeForm","setChangeOrderRef","setSide","postOnly","setPostOnly","ioc","setIoc","baseSize","setBaseSize","quoteSize","setQuoteSize","setPrice","submitting","setSubmitting","sizeFraction","setSizeFraction","quoteBalance","baseBalance","sizeDecimalCount","priceDecimalCount","doChangeOrder","onSliderChange","updateSizeFraction","onSetBaseSize","maxSize","newSize","formatted","onSubmit","parsedPrice","parseFloat","parsedSize","flexDirection","Group","onChange","buttonStyle","background","addonBefore","suffix","fontSize","compact","onSetQuoteSize","tipFormatter","marks","checked","disabled","TradesContainer","PublicTrades","LinkAddress","LinkOutlined","DeprecatedMarketsInstructions","switchToLiveMarkets","openOrderAccountBalances","inOrdersBase","inOrdersQuote","unsettledBase","unsettledQuote","useBalancesForDeprecatedMarkets","marketsAndOrders","getOrders","loadOrdersForOwner","flat","refreshOpenOrders","useGetOpenOrdersForDeprecatedMarkets","needToCancelOrders","filteredBalances","needToSettleFunds","Option","Select","TradePage","handleDeprecated","setHandleDeprecated","deprecatedMarkets","window","innerHeight","innerWidth","dimensions","setDimensions","changeOrderRef","handleResize","addEventListener","removeEventListener","componentProps","onChangeOrderRef","getComponent","paddingLeft","paddingRight","gutter","MarketSelector","placeholder","content","trigger","InfoCircleOutlined","extractBase","extractQuote","showSearch","optionFilterProp","onSelect","listHeight","proposedMarket","filterOption","input","option","toLowerCase","indexOf","DeprecatedMarketsPage","RenderNormal","minHeight","flexWrap","RenderSmall","RenderSmaller","xs","sm","OpenOrdersPage","allMarkets","marketData","loadBids","loadAsks","ordersForMarket","openOrdersAddress","useOpenOrdersForAllMarkets","WalletBalancesTable","walletBalances","AccountsTable","accountBalances","BalancesPage","includes","useWalletBalancesForAllMarkets","loadedWalletBalances","openOrderAccounts","baseCurrencyAccounts","quoteCurrencyAccounts","useOpenOrderAccountBalancesForAllMarkets","accountBalancesLoaded","LogoWrapper","TopBar","setCurrent","location","useLocation","history","useHistory","handleClick","pathname","src","logo","alt","mode","selectedKeys","borderBottom","Item","connect","UserOutlined","helpUrls","Footer","Layout","useBreakpoint","Grid","footerElements","link","CustomFooter","lg","elem","Header","Content","BasicLayout","Routes","basename","exact","path","component","TradePageContents","OpenOrdersPageContents","BalancesPageContents","App","fallback","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bdc4a650.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.49174c73.svg\";","import { useCallback, useEffect, useState } from 'react';\n\nexport async function sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport const percentFormat = new Intl.NumberFormat(undefined, {\n  style: 'percent',\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n});\n\nexport function floorToDecimal(value, decimals) {\n  return decimals ? Math.floor(value * 10 ** decimals) / 10 ** decimals : value;\n}\n\nexport function roundToDecimal(value, decimals) {\n  return decimals ? Math.round(value * 10 ** decimals) / 10 ** decimals : value;\n}\n\nexport function getDecimalCount(value) {\n  if (!isNaN(value) && Math.floor(value) !== value)\n    return value.toString().split('.')[1].length || 0;\n  return 0;\n}\n\nexport function useLocalStorageState(key, defaultState = null) {\n  const [state, setState] = useState(() => {\n    // NOTE: Not sure if this is ok\n    const storedState = localStorage.getItem(key);\n    if (storedState) {\n      return JSON.parse(storedState);\n    }\n    return defaultState;\n  });\n\n  const setLocalStorageState = useCallback(\n    (newState) => {\n      const changed = state !== newState;\n      if (!changed) {\n        return;\n      }\n      setState(newState);\n      if (newState === null) {\n        localStorage.removeItem(key);\n      } else {\n        localStorage.setItem(key, JSON.stringify(newState));\n      }\n    },\n    [state, key],\n  );\n\n  return [state, setLocalStorageState];\n}\n\nexport function useEffectAfterTimeout(effect, timeout) {\n  useEffect(() => {\n    const handle = setTimeout(effect, timeout);\n    return () => clearTimeout(handle);\n  });\n}\n\nexport function useListener(emitter, eventName) {\n  const [, forceUpdate] = useState(0);\n  useEffect(() => {\n    const listener = () => forceUpdate((i) => i + 1);\n    emitter.on(eventName, listener);\n    return () => emitter.removeListener(eventName, listener);\n  }, [emitter, eventName]);\n}\n\nexport function abbreviateAddress(address) {\n  const base58 = address.toBase58();\n  return base58.slice(0, 4) + '…' + base58.slice(-4);\n}\n\nexport function isEqual(obj1, obj2, keys) {\n  if (!keys && Object.keys(obj1).length !== Object.keys(obj2).length) {\n    return false;\n  }\n  keys = keys || Object.keys(obj1);\n  for (const k of keys) {\n    if (obj1[k] !== obj2[k]) {\n      // shallow comparison\n      return false;\n    }\n  }\n  return true;\n}\n","import { useEffect, useReducer } from 'react';\n\nimport assert from 'assert';\n\nconst pageLoadTime = new Date();\n\nconst globalCache = new Map();\n\nclass FetchLoopListener {\n  constructor(cacheKey, fn, refreshInterval, refreshIntervalOnError, callback) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.refreshInterval = refreshInterval;\n    this.refreshIntervalOnError = refreshIntervalOnError;\n    this.callback = callback;\n  }\n}\n\nclass FetchLoopInternal {\n  constructor(cacheKey, fn) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.timeoutId = null;\n    this.listeners = new Set();\n    this.errors = 0;\n  }\n\n  get refreshInterval() {\n    return Math.min(\n      ...[...this.listeners].map((listener) => listener.refreshInterval),\n    );\n  }\n\n  get refreshIntervalOnError() {\n    return Math.min(\n      ...[...this.listeners]\n        .map((listener) => listener.refreshIntervalOnError)\n        .filter((x) => x),\n    );\n  }\n\n  get stopped() {\n    return this.listeners.size === 0;\n  }\n\n  addListener(listener) {\n    const previousRefreshInterval = this.refreshInterval;\n    this.listeners.add(listener);\n    if (this.refreshInterval < previousRefreshInterval) {\n      this.refresh();\n    }\n  }\n\n  removeListener(listener) {\n    assert(this.listeners.delete(listener));\n    if (this.stopped) {\n      if (this.timeoutId) {\n        clearTimeout(this.timeoutId);\n        this.timeoutId = null;\n      }\n    }\n  }\n\n  notifyListeners() {\n    this.listeners.forEach((listener) => listener.callback());\n  }\n\n  refresh = async () => {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    }\n    if (this.stopped) {\n      return;\n    }\n\n    let errored = false;\n    try {\n      const data = await this.fn();\n      globalCache.set(this.cacheKey, data);\n      this.errors = 0;\n      this.notifyListeners();\n      return data;\n    } catch (error) {\n      ++this.errors;\n      console.warn(error);\n      errored = true;\n    } finally {\n      if (!this.timeoutId && !this.stopped) {\n        let waitTime = this.refreshInterval;\n        if (\n          errored &&\n          this.refreshIntervalOnError &&\n          this.refreshIntervalOnError > 0\n        ) {\n          waitTime = this.refreshIntervalOnError;\n        }\n\n        // Back off on errors.\n        if (this.errors > 0) {\n          waitTime = Math.min(1000 * 2 ** (this.errors - 1), 60000);\n        }\n\n        // Don't do any refreshing for the first five seconds, to make way for other things to load.\n        const timeSincePageLoad = new Date() - pageLoadTime;\n        if (timeSincePageLoad < 5000) {\n          waitTime += 5000 - timeSincePageLoad / 2;\n        }\n\n        // Refresh background pages slowly.\n        if (document.visibilityState === 'hidden') {\n          waitTime = 60000;\n        } else if (!document.hasFocus()) {\n          waitTime *= 1.5;\n        }\n\n        // Add jitter so we don't send all requests at the same time.\n        waitTime *= 0.8 + 0.4 * Math.random();\n\n        this.timeoutId = setTimeout(this.refresh, waitTime);\n      }\n    }\n  };\n}\n\nclass FetchLoops {\n  loops = new Map();\n\n  addListener(listener) {\n    if (!this.loops.has(listener.cacheKey)) {\n      this.loops.set(\n        listener.cacheKey,\n        new FetchLoopInternal(listener.cacheKey, listener.fn),\n      );\n    }\n    this.loops.get(listener.cacheKey).addListener(listener);\n  }\n\n  removeListener(listener) {\n    const loop = this.loops.get(listener.cacheKey);\n    loop.removeListener(listener);\n    if (loop.stopped) {\n      this.loops.delete(listener.cacheKey);\n    }\n  }\n\n  refresh(cacheKey) {\n    if (this.loops.has(cacheKey)) {\n      this.loops.get(cacheKey).refresh();\n    }\n  }\n\n  refreshAll() {\n    return Promise.all([...this.loops.values()].map((loop) => loop.refresh()));\n  }\n}\nconst globalLoops = new FetchLoops();\n\nexport function useAsyncData(\n  asyncFn,\n  cacheKey,\n  { refreshInterval = 60000, refreshIntervalOnError = null } = {},\n) {\n  const [, rerender] = useReducer((i) => i + 1, 0);\n\n  useEffect(() => {\n    if (!cacheKey) {\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      return () => {};\n    }\n    const listener = new FetchLoopListener(\n      cacheKey,\n      asyncFn,\n      refreshInterval,\n      refreshIntervalOnError,\n      rerender,\n    );\n    globalLoops.addListener(listener);\n    return () => globalLoops.removeListener(listener);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey, refreshInterval]);\n\n  if (!cacheKey) {\n    return [null, false];\n  }\n\n  const loaded = globalCache.has(cacheKey);\n  const data = loaded ? globalCache.get(cacheKey) : undefined;\n  return [data, loaded];\n}\n\nexport function refreshCache(cacheKey, clearCache = false) {\n  if (clearCache) {\n    globalCache.delete(cacheKey);\n  }\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.refresh();\n    if (clearCache) {\n      loop.notifyListeners();\n    }\n  }\n}\n\nexport function refreshAllCaches() {\n  for (const loop of globalLoops.loops.values()) {\n    loop.refresh();\n  }\n}\n\nexport function setCache(cacheKey, value, { initializeOnly = false } = {}) {\n  if (initializeOnly && globalCache.has(cacheKey)) {\n    return;\n  }\n  globalCache.set(cacheKey, value);\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.notifyListeners();\n  }\n}\n","import { useLocalStorageState } from './utils';\nimport { Account, clusterApiUrl, Connection } from '@solana/web3.js';\nimport React, { useContext, useEffect, useMemo } from 'react';\nimport { setCache, useAsyncData } from './fetch-loop';\nimport tuple from 'immutable-tuple';\n\nexport const ENDPOINTS = [\n  {\n    name: 'mainnet-beta',\n    endpoint: 'https://solana-api.projectserum.com',\n  },\n  { name: 'testnet', endpoint: clusterApiUrl('testnet') },\n  { name: 'devnet', endpoint: clusterApiUrl('devnet') },\n  { name: 'localnet', endpoint: 'http://127.0.0.1:8899' },\n];\n\nconst accountListenerCount = new Map();\n\nconst ConnectionContext = React.createContext(null);\n\nexport function ConnectionProvider({ children }) {\n  const [endpoint, setEndpoint] = useLocalStorageState(\n    'connectionEndpts',\n    ENDPOINTS[0].endpoint,\n  );\n\n  const connection = useMemo(() => new Connection(endpoint, 'recent'), [\n    endpoint,\n  ]);\n  const sendConnection = useMemo(() => new Connection(endpoint, 'recent'), [\n    endpoint,\n  ]);\n\n  // The websocket library solana/web3.js uses closes its websocket connection when the subscription list\n  // is empty after opening its first time, preventing subsequent subscriptions from receiving responses.\n  // This is a hack to prevent the list from every getting empty\n  useEffect(() => {\n    const id = connection.onAccountChange(new Account().publicKey, () => {});\n    return () => connection.removeAccountChangeListener(id);\n  }, [connection]);\n\n  useEffect(() => {\n    const id = connection.onSlotChange(() => null);\n    return () => connection.removeSlotChangeListener(id);\n  }, [connection]);\n\n  useEffect(() => {\n    const id = sendConnection.onAccountChange(\n      new Account().publicKey,\n      () => {},\n    );\n    return () => sendConnection.removeAccountChangeListener(id);\n  }, [sendConnection]);\n\n  useEffect(() => {\n    const id = sendConnection.onSlotChange(() => null);\n    return () => sendConnection.removeSlotChangeListener(id);\n  }, [sendConnection]);\n\n  return (\n    <ConnectionContext.Provider\n      value={{ endpoint, setEndpoint, connection, sendConnection }}\n    >\n      {children}\n    </ConnectionContext.Provider>\n  );\n}\n\nexport function useConnection() {\n  return useContext(ConnectionContext).connection;\n}\n\nexport function useSendConnection() {\n  return useContext(ConnectionContext).sendConnection;\n}\n\nexport function useConnectionConfig() {\n  const context = useContext(ConnectionContext);\n  return { endpoint: context.endpoint, setEndpoint: context.setEndpoint };\n}\n\nexport function useAccountInfo(publicKey) {\n  const connection = useConnection();\n  const cacheKey = tuple(connection, publicKey?.toBase58());\n  const [accountInfo, loaded] = useAsyncData(\n    async () => (publicKey ? connection.getAccountInfo(publicKey) : null),\n    cacheKey,\n    { refreshInterval: 60_000 },\n  );\n  let id = publicKey?.toBase58();\n  useEffect(() => {\n    if (!publicKey) {\n      return;\n    }\n    if (accountListenerCount.has(cacheKey)) {\n      let currentItem = accountListenerCount.get(cacheKey);\n      ++currentItem.count;\n    } else {\n      let previousData = null;\n      const subscriptionId = connection.onAccountChange(publicKey, (e) => {\n        if (e.data) {\n          if (!previousData || !previousData.equals(e.data)) {\n            setCache(cacheKey, e);\n          } else {\n          }\n          previousData = e.data;\n        }\n      });\n      accountListenerCount.set(cacheKey, { count: 1, subscriptionId });\n    }\n    return () => {\n      let currentItem = accountListenerCount.get(cacheKey);\n      let nextCount = currentItem.count - 1;\n      if (nextCount <= 0) {\n        connection.removeAccountChangeListener(currentItem.subscriptionId);\n        accountListenerCount.delete(cacheKey);\n      } else {\n        --currentItem.count;\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey]);\n  return [accountInfo, loaded];\n}\n\nexport function useAccountData(publicKey) {\n  const [accountInfo] = useAccountInfo(publicKey);\n  return accountInfo && accountInfo.data;\n}\n","import React from 'react';\nimport { notification } from 'antd';\n\nexport function notify({\n  message,\n  description,\n  type = 'info',\n  placement = 'bottomLeft',\n}) {\n  notification[type]({\n    message: <span style={{ color: 'black' }}>{message}</span>,\n    description: (\n      <span style={{ color: 'black', opacity: 0.5 }}>{description}</span>\n    ),\n    placement,\n    style: {\n      backgroundColor: 'white',\n    },\n  });\n}\n","import React, { useContext, useEffect, useMemo, useState } from 'react';\nimport Wallet from '@project-serum/sol-wallet-adapter';\nimport { notify } from './notifications';\nimport { useConnectionConfig } from './connection';\nimport { useLocalStorageState } from './utils';\n\nexport const WALLET_PROVIDERS = [\n  { name: 'sollet.io', url: 'https://www.sollet.io' },\n];\n\nconst WalletContext = React.createContext(null);\n\nexport function WalletProvider({ children }) {\n  const { endpoint } = useConnectionConfig();\n  const [providerUrl, setProviderUrl] = useLocalStorageState(\n    'walletProvider',\n    'https://www.sollet.io',\n  );\n  const wallet = useMemo(() => new Wallet(providerUrl, endpoint), [\n    providerUrl,\n    endpoint,\n  ]);\n\n  const [connected, setConnected] = useState(false);\n  useEffect(() => {\n    console.log('trying to connect');\n    wallet.on('connect', () => {\n      console.log('connected');\n      setConnected(true);\n      let walletPublicKey = wallet.publicKey.toBase58();\n      let keyToDisplay =\n        walletPublicKey.length > 20\n          ? `${walletPublicKey.substring(0, 7)}.....${walletPublicKey.substring(\n              walletPublicKey.length - 7,\n              walletPublicKey.length,\n            )}`\n          : walletPublicKey;\n      notify({\n        message: 'Wallet update',\n        description: 'Connected to wallet ' + keyToDisplay,\n      });\n    });\n    wallet.on('disconnect', () => {\n      setConnected(false);\n      notify({\n        message: 'Wallet update',\n        description: 'Disconnected from wallet',\n      });\n    });\n    return () => {\n      wallet.disconnect();\n      setConnected(false);\n    };\n  }, [wallet]);\n  return (\n    <WalletContext.Provider\n      value={{\n        wallet,\n        connected,\n        providerUrl,\n        setProviderUrl,\n        providerName:\n          WALLET_PROVIDERS.find(({ url }) => url === providerUrl)?.name ??\n          providerUrl,\n      }}\n    >\n      {children}\n    </WalletContext.Provider>\n  );\n}\n\nexport function useWallet() {\n  const context = useContext(WalletContext);\n  return {\n    connected: context.connected,\n    wallet: context.wallet,\n    providerUrl: context.providerUrl,\n    setProvider: context.setProviderUrl,\n    providerName: context.providerName,\n  };\n}\n","import * as BufferLayout from 'buffer-layout';\nimport bs58 from 'bs58';\nimport { PublicKey } from '@solana/web3.js';\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\n\nexport const ACCOUNT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(32, 'mint'),\n  BufferLayout.blob(32, 'owner'),\n  BufferLayout.nu64('amount'),\n  BufferLayout.blob(93),\n]);\n\nexport function parseTokenAccountData(data) {\n  let { mint, owner, amount } = ACCOUNT_LAYOUT.decode(data);\n  return {\n    mint: new PublicKey(mint),\n    owner: new PublicKey(owner),\n    amount,\n  };\n}\n\nexport function getOwnedAccountsFilters(publicKey) {\n  return [\n    {\n      memcmp: {\n        offset: ACCOUNT_LAYOUT.offsetOf('owner'),\n        bytes: publicKey.toBase58(),\n      },\n    },\n    {\n      dataSize: ACCOUNT_LAYOUT.span,\n    },\n  ];\n}\n\nexport const TOKEN_PROGRAM_ID = new PublicKey(\n  'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n);\n\nexport async function getOwnedTokenAccounts(connection, publicKey) {\n  let filters = getOwnedAccountsFilters(publicKey);\n  let resp = await connection._rpcRequest('getProgramAccounts', [\n    TOKEN_PROGRAM_ID.toBase58(),\n    {\n      commitment: connection.commitment,\n      filters,\n    },\n  ]);\n  if (resp.error) {\n    throw new Error(\n      'failed to get token accounts owned by ' +\n        publicKey.toBase58() +\n        ': ' +\n        resp.error.message,\n    );\n  }\n  return resp.result\n    .map(({ pubkey, account: { data, executable, owner, lamports } }) => ({\n      publicKey: new PublicKey(pubkey),\n      accountInfo: {\n        data: bs58.decode(data),\n        executable,\n        owner: new PublicKey(owner),\n        lamports,\n      },\n    }))\n    .filter(({ accountInfo }) => {\n      // TODO: remove this check once mainnet is updated\n      return filters.every((filter) => {\n        if (filter.dataSize) {\n          return accountInfo.data.length === filter.dataSize;\n        } else if (filter.memcmp) {\n          let filterBytes = bs58.decode(filter.memcmp.bytes);\n          return accountInfo.data\n            .slice(\n              filter.memcmp.offset,\n              filter.memcmp.offset + filterBytes.length,\n            )\n            .equals(filterBytes);\n        }\n        return false;\n      });\n    });\n}\n\nexport async function getTokenAccountInfo(connection, ownerAddress) {\n  let [splAccounts, account] = await Promise.all([\n    getOwnedTokenAccounts(connection, ownerAddress),\n    connection.getAccountInfo(ownerAddress),\n  ]);\n  const parsedSplAccounts = splAccounts.map(({ publicKey, accountInfo }) => {\n    return {\n      pubkey: publicKey,\n      account: accountInfo,\n      effectiveMint: parseTokenAccountData(accountInfo.data).mint,\n    };\n  });\n  return parsedSplAccounts.concat({\n    pubkey: ownerAddress,\n    account,\n    effectiveMint: WRAPPED_SOL_MINT,\n  });\n}\n","import {\n  Market,\n  Orderbook,\n  decodeEventQueue,\n  TokenInstructions,\n  MARKETS,\n  TOKEN_MINTS,\n  OpenOrders,\n} from '@project-serum/serum';\nimport { PublicKey } from '@solana/web3.js';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useLocalStorageState } from './utils';\nimport { refreshCache, useAsyncData } from './fetch-loop';\nimport { useAccountData, useAccountInfo, useConnection } from './connection';\nimport { useWallet } from './wallet';\nimport tuple from 'immutable-tuple';\nimport { notify } from './notifications';\nimport { BN } from 'bn.js';\nimport { getTokenAccountInfo } from './tokens';\n\n// Used in debugging, should be false in production\nconst _IGNORE_DEPRECATED = false;\n\nconst USE_MARKETS = _IGNORE_DEPRECATED\n  ? MARKETS.map((m) => ({ ...m, deprecated: false }))\n  : MARKETS;\n\nexport function useMarketsList() {\n  return USE_MARKETS.filter(({ deprecated }) => !deprecated);\n}\n\nexport function useAllMarkets() {\n  const connection = useConnection();\n  const [markets, setMarkets] = useState([]);\n\n  useEffect(() => {\n    const getAllMarkets = async () => {\n      const markets = [];\n      let marketInfo;\n      for (marketInfo of USE_MARKETS) {\n        try {\n          const market = await Market.load(\n            connection,\n            marketInfo.address,\n            {},\n            marketInfo.programId,\n          );\n          markets.push({ market, marketName: marketInfo.name });\n        } catch (e) {\n          notify({\n            message: 'Error loading market',\n            description: e.message,\n            type: 'error',\n          });\n        }\n      }\n      setMarkets(markets);\n    };\n\n    getAllMarkets();\n  }, [connection]);\n\n  return markets;\n}\n\nexport function useUnmigratedOpenOrdersAccounts() {\n  const connection = useConnection();\n  const { wallet } = useWallet();\n\n  async function getUnmigratedOpenOrdersAccounts() {\n    if (!wallet || !connection || !wallet.publicKey) {\n      return [];\n    }\n    console.log('refreshing useUnmigratedOpenOrdersAccounts');\n    let deprecatedOpenOrdersAccounts = [];\n    const deprecatedProgramIds = Array.from(\n      new Set(\n        USE_MARKETS.filter(\n          ({ deprecated }) => deprecated,\n        ).map(({ programId }) => programId.toBase58()),\n      ),\n    ).map((publicKeyStr) => new PublicKey(publicKeyStr));\n    let programId;\n    for (programId of deprecatedProgramIds) {\n      try {\n        const openOrdersAccounts = await OpenOrders.findForOwner(\n          connection,\n          wallet.publicKey,\n          programId,\n        );\n        deprecatedOpenOrdersAccounts = deprecatedOpenOrdersAccounts.concat(\n          openOrdersAccounts\n            .filter(\n              (openOrders) =>\n                openOrders.baseTokenTotal.toNumber() ||\n                openOrders.quoteTokenTotal.toNumber(),\n            )\n            .filter((openOrders) =>\n              USE_MARKETS.some(\n                (market) =>\n                  market.deprecated && market.address.equals(openOrders.market),\n              ),\n            ),\n        );\n      } catch (e) {\n        console.log(\n          'Error loading deprecated markets',\n          programId?.toBase58(),\n          e.message,\n        );\n      }\n    }\n    // Maybe sort\n    return deprecatedOpenOrdersAccounts;\n  }\n\n  const cacheKey = tuple(\n    'getUnmigratedOpenOrdersAccounts',\n    connection,\n    wallet?.publicKey?.toBase58(),\n  );\n  const [accounts] = useAsyncData(getUnmigratedOpenOrdersAccounts, cacheKey, {\n    refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\n  });\n\n  return {\n    accounts,\n    refresh: (clearCache) => refreshCache(cacheKey, clearCache),\n  };\n}\n\nconst MarketContext = React.createContext(null);\n\nconst _VERY_SLOW_REFRESH_INTERVAL = 5000 * 1000;\n\n// For things that don't really change\nconst _SLOW_REFRESH_INTERVAL = 5 * 1000;\n\n// For things that change frequently\nconst _FAST_REFRESH_INTERVAL = 1000;\n\nexport const DEFAULT_MARKET = USE_MARKETS.find(\n  ({ name }) => name === 'SRM/USDT',\n);\n\nfunction getMarketDetails(market) {\n  if (!market) {\n    return {};\n  }\n  const marketInfo = USE_MARKETS.find((otherMarket) =>\n    otherMarket.address.equals(market.address),\n  );\n  const baseCurrency =\n    (market?.baseMintAddress &&\n      TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\n        ?.name) ||\n    'UNKNOWN';\n  const quoteCurrency =\n    (market?.quoteMintAddress &&\n      TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\n        ?.name) ||\n    'UNKNOWN';\n  return {\n    ...marketInfo,\n    marketName: marketInfo?.name,\n    baseCurrency,\n    quoteCurrency,\n    marketInfo,\n  };\n}\n\nexport function MarketProvider({ children }) {\n  const [marketAddress, setMarketAddress] = useLocalStorageState(\n    'marketAddress',\n    DEFAULT_MARKET.address.toBase58(),\n  );\n  const address = new PublicKey(marketAddress);\n  const connection = useConnection();\n  const marketInfo = USE_MARKETS.find((market) =>\n    market.address.equals(address),\n  );\n\n  // Replace existing market with a non-deprecated one on first load\n  useEffect(() => {\n    if (marketInfo && marketInfo.deprecated) {\n      console.log('Switching markets from deprecated', marketInfo);\n      setMarketAddress(DEFAULT_MARKET.address.toBase58());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const [market, setMarket] = useState();\n  useEffect(() => {\n    setMarket(null);\n    if (!marketInfo || !marketInfo.address) {\n      notify({\n        message: 'Error loading market',\n        description: 'Please select a market from the dropdown',\n        type: 'error',\n      });\n      return;\n    }\n    Market.load(connection, marketInfo.address, {}, marketInfo.programId)\n      .then(setMarket)\n      .catch((e) =>\n        notify({\n          message: 'Error loading market',\n          description: e.message,\n          type: 'error',\n        }),\n      );\n  }, [connection, marketInfo]);\n\n  return (\n    <MarketContext.Provider\n      value={{\n        market,\n        ...getMarketDetails(market),\n        setMarketAddress,\n      }}\n    >\n      {children}\n    </MarketContext.Provider>\n  );\n}\n\nexport function useMarket() {\n  return useContext(MarketContext);\n}\n\nexport function useMarkPrice() {\n  const [markPrice, setMarkPrice] = useState(null);\n\n  const [orderbook] = useOrderbook();\n  const trades = useTrades();\n\n  useEffect(() => {\n    let bb = orderbook?.bids?.length > 0 && Number(orderbook.bids[0][0]);\n    let ba = orderbook?.asks?.length > 0 && Number(orderbook.asks[0][0]);\n    let last = trades?.length > 0 && trades[0].price;\n\n    let markPrice =\n      bb && ba\n        ? last\n          ? [bb, ba, last].sort((a, b) => a - b)[1]\n          : (bb + ba) / 2\n        : null;\n\n    setMarkPrice(markPrice);\n  }, [orderbook, trades]);\n\n  return markPrice;\n}\n\nexport function _useUnfilteredTrades(limit = 10000) {\n  const { market } = useMarket();\n  const connection = useConnection();\n  async function getUnfilteredTrades() {\n    if (!market || !connection) {\n      return null;\n    }\n    return await market.loadFills(connection, limit);\n  }\n  const [trades] = useAsyncData(\n    getUnfilteredTrades,\n    tuple('getUnfilteredTrades', market, connection),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n  return trades;\n  // NOTE: For now, websocket is too expensive since the event queue is large\n  // and updates very frequently\n\n  // let data = useAccountData(market && market._decoded.eventQueue);\n  // if (!data) {\n  //   return null;\n  // }\n  // const events = decodeEventQueue(data, limit);\n  // return events\n  //   .filter((event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0))\n  //   .map(market.parseFillEvent.bind(market));\n}\n\nexport function useOrderbookAccounts() {\n  const { market } = useMarket();\n  let bidData = useAccountData(market && market._decoded.bids);\n  let askData = useAccountData(market && market._decoded.asks);\n  return {\n    bidOrderbook: bidData ? Orderbook.decode(market, bidData) : null,\n    askOrderbook: askData ? Orderbook.decode(market, askData) : null,\n  };\n}\n\nexport function useOrderbook(depth = 20) {\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\n  const { market } = useMarket();\n  const bids =\n    !bidOrderbook || !market\n      ? []\n      : bidOrderbook.getL2(depth).map(([price, size]) => [price, size]);\n  const asks =\n    !askOrderbook || !market\n      ? []\n      : askOrderbook.getL2(depth).map(([price, size]) => [price, size]);\n  return [{ bids, asks }, !!bids || !!asks];\n}\n\n// Want the balances table to be fast-updating, dont want open orders to flicker\n// TODO: Update to use websocket\nexport function useOpenOrdersAccounts(fast = false) {\n  const { market } = useMarket();\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getOpenOrdersAccounts() {\n    if (!connected) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    return await market.findOpenOrdersAccountsForOwner(\n      connection,\n      wallet.publicKey,\n    );\n  }\n  return useAsyncData(\n    getOpenOrdersAccounts,\n    tuple('getOpenOrdersAccounts', wallet, market, connected),\n    { refreshInterval: fast ? _FAST_REFRESH_INTERVAL : _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useSelectedOpenOrdersAccount(fast = false) {\n  const [accounts] = useOpenOrdersAccounts(fast);\n  if (!accounts) {\n    return null;\n  }\n  return accounts[0];\n}\n\nexport function useTokenAccounts() {\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getTokenAccounts() {\n    if (!connected) {\n      return null;\n    }\n    return await getTokenAccountInfo(connection, wallet.publicKey);\n  }\n  return useAsyncData(\n    getTokenAccounts,\n    tuple('getTokenAccounts', wallet, connected),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function getSelectedTokenAccountForMint(accounts, mint) {\n  if (!accounts || !mint) {\n    return null;\n  }\n  const filtered = accounts.filter(({ effectiveMint }) =>\n    mint.equals(effectiveMint),\n  );\n  return filtered && filtered[0];\n}\n\nexport function useSelectedQuoteCurrencyAccount() {\n  const [accounts] = useTokenAccounts();\n  const { market } = useMarket();\n  return getSelectedTokenAccountForMint(accounts, market?.quoteMintAddress);\n}\n\nexport function useSelectedBaseCurrencyAccount() {\n  const [accounts] = useTokenAccounts();\n  const { market } = useMarket();\n  return getSelectedTokenAccountForMint(accounts, market?.baseMintAddress);\n}\n\n// TODO: Update to use websocket\nexport function useQuoteCurrencyBalances() {\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const { market } = useMarket();\n  const [accountInfo, loaded] = useAccountInfo(quoteCurrencyAccount?.pubkey);\n  if (!market || !quoteCurrencyAccount || !loaded) {\n    return null;\n  }\n  if (market.quoteMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\n    return accountInfo?.lamports / 1e9 ?? 0;\n  }\n  return market.quoteSplSizeToNumber(\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\n  );\n}\n\n// TODO: Update to use websocket\nexport function useBaseCurrencyBalances() {\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const { market } = useMarket();\n  const [accountInfo, loaded] = useAccountInfo(baseCurrencyAccount?.pubkey);\n  if (!market || !baseCurrencyAccount || !loaded) {\n    return null;\n  }\n  if (market.baseMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\n    return accountInfo?.lamports / 1e9 ?? 0;\n  }\n  return market.baseSplSizeToNumber(\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\n  );\n}\n\nexport function useOpenOrders() {\n  const { market, marketName } = useMarket();\n  const openOrdersAccount = useSelectedOpenOrdersAccount();\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\n  if (!market || !openOrdersAccount || !bidOrderbook || !askOrderbook) {\n    return null;\n  }\n  return market\n    .filterForOpenOrders(bidOrderbook, askOrderbook, [openOrdersAccount])\n    .map((order) => ({ ...order, marketName, market }));\n}\n\nexport function useTrades(limit = 100) {\n  const trades = _useUnfilteredTrades(limit);\n  if (!trades) {\n    return null;\n  }\n  // Until partial fills are each given their own fill, use maker fills\n  return trades\n    .filter(({ eventFlags }) => eventFlags.maker)\n    .map((trade) => ({\n      ...trade,\n      side: trade.side === 'buy' ? 'sell' : 'buy',\n    }));\n}\n\nexport function useFeeDiscountKeys() {\n  const { market } = useMarket();\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getFeeDiscountKeys() {\n    if (!connected) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    return await market.findFeeDiscountKeys(connection, wallet.publicKey);\n  }\n  return useAsyncData(\n    getFeeDiscountKeys,\n    tuple('getFeeDiscountKeys', wallet, market, connected),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useFills(limit = 100) {\n  const { marketName } = useMarket();\n  const fills = _useUnfilteredTrades(limit);\n  const [openOrdersAccounts] = useOpenOrdersAccounts();\n  if (!openOrdersAccounts || openOrdersAccounts.length === 0) {\n    return null;\n  }\n  if (!fills) {\n    return null;\n  }\n  return fills\n    .filter((fill) =>\n      openOrdersAccounts.some((openOrdersAccount) =>\n        fill.openOrders.equals(openOrdersAccount.publicKey),\n      ),\n    )\n    .map((fill) => ({ ...fill, marketName }));\n}\n\n// TODO: Update to use websocket\nexport function useFillsForAllMarkets(limit = 100) {\n  const { connected, wallet } = useWallet();\n\n  const connection = useConnection();\n  const allMarkets = useAllMarkets();\n\n  async function getFillsForAllMarkets() {\n    let fills = [];\n    if (!connected) {\n      return fills;\n    }\n\n    let marketData;\n    for (marketData of allMarkets) {\n      const { market, marketName } = marketData;\n      if (!market) {\n        return fills;\n      }\n      const openOrdersAccounts = await market.findOpenOrdersAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n      const openOrdersAccount = openOrdersAccounts && openOrdersAccounts[0];\n      if (!openOrdersAccount) {\n        return fills;\n      }\n      const eventQueueData = await connection.getAccountInfo(\n        market && market._decoded.eventQueue,\n      );\n      let data = eventQueueData?.data;\n      if (!data) {\n        return fills;\n      }\n      const events = decodeEventQueue(data, limit);\n      const fillsForMarket = events\n        .filter(\n          (event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0),\n        )\n        .map(market.parseFillEvent.bind(market));\n      const ownFillsForMarket = fillsForMarket\n        .filter((fill) => fill.openOrders.equals(openOrdersAccount.publicKey))\n        .map((fill) => ({ ...fill, marketName }));\n      fills = fills.concat(ownFillsForMarket);\n    }\n\n    console.log(JSON.stringify(fills));\n    return fills;\n  }\n\n  return useAsyncData(\n    getFillsForAllMarkets,\n    tuple('getFillsForAllMarkets', connected, connection, allMarkets, wallet),\n    { refreshInterval: _FAST_REFRESH_INTERVAL },\n  );\n}\n\n// TODO: Update to use websocket\nexport function useOpenOrdersForAllMarkets() {\n  const { connected, wallet } = useWallet();\n\n  const connection = useConnection();\n  const allMarkets = useAllMarkets();\n\n  async function getOpenOrdersForAllMarkets() {\n    let orders = [];\n    if (!connected) {\n      return orders;\n    }\n\n    let marketData;\n    for (marketData of allMarkets) {\n      const { market, marketName } = marketData;\n      if (!market) {\n        return orders;\n      }\n      const openOrdersAccounts = await market.findOpenOrdersAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n      const openOrdersAccount = openOrdersAccounts && openOrdersAccounts[0];\n      if (!openOrdersAccount) {\n        return orders;\n      }\n      const [bids, asks] = await Promise.all([\n        market.loadBids(connection),\n        market.loadAsks(connection),\n      ]);\n      const ordersForMarket = [...bids, ...asks]\n        .filter((order) => {\n          return order.openOrdersAddress.equals(openOrdersAccount.publicKey);\n        })\n        .map((order) => {\n          return { ...order, marketName };\n        });\n      orders = orders.concat(ordersForMarket);\n    }\n\n    return orders;\n  }\n\n  return useAsyncData(\n    getOpenOrdersForAllMarkets,\n    tuple(\n      'getOpenOrdersForAllMarkets',\n      connected,\n      connection,\n      wallet,\n      allMarkets,\n    ),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useBalances() {\n  const baseCurrencyBalances = useBaseCurrencyBalances();\n  const quoteCurrencyBalances = useQuoteCurrencyBalances();\n  const openOrders = useSelectedOpenOrdersAccount(true);\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const baseExists =\n    openOrders && openOrders.baseTokenTotal && openOrders.baseTokenFree;\n  const quoteExists =\n    openOrders && openOrders.quoteTokenTotal && openOrders.quoteTokenFree;\n  if (baseCurrency === 'UNKNOWN' || quoteCurrency === 'UNKNOWN') {\n    return [];\n  }\n  return [\n    {\n      market,\n      key: `${baseCurrency}${quoteCurrency}${baseCurrency}`,\n      coin: baseCurrency,\n      wallet: baseCurrencyBalances,\n      orders:\n        baseExists && market\n          ? market.baseSplSizeToNumber(\n              openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\n            )\n          : null,\n      openOrders,\n      unsettled:\n        baseExists && market\n          ? market.baseSplSizeToNumber(openOrders.baseTokenFree)\n          : null,\n    },\n    {\n      market,\n      key: `${quoteCurrency}${baseCurrency}${quoteCurrency}`,\n      coin: quoteCurrency,\n      wallet: quoteCurrencyBalances,\n      openOrders,\n      orders:\n        quoteExists && market\n          ? market.quoteSplSizeToNumber(\n              openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\n            )\n          : null,\n      unsettled:\n        quoteExists && market\n          ? market.quoteSplSizeToNumber(openOrders.quoteTokenFree)\n          : null,\n    },\n  ];\n}\n\nexport function useWalletBalancesForAllMarkets() {\n  const { connected, wallet } = useWallet();\n\n  const connection = useConnection();\n  const allMarkets = useAllMarkets();\n\n  async function getWalletBalancesForAllMarkets() {\n    let balances = [];\n    if (!connected) {\n      return balances;\n    }\n\n    let marketData;\n    for (marketData of allMarkets) {\n      const { market, marketName } = marketData;\n      if (!market) {\n        return balances;\n      }\n      const baseCurrency = marketName.includes('/') && marketName.split('/')[0];\n      if (!balances.find((balance) => balance.coin === baseCurrency)) {\n        const baseBalance = await getCurrencyBalance(\n          market,\n          connection,\n          wallet,\n          true,\n        );\n        balances.push({\n          key: baseCurrency,\n          coin: baseCurrency,\n          wallet: baseBalance,\n        });\n      }\n      const quoteCurrency =\n        marketName.includes('/') && marketName.split('/')[1];\n      if (!balances.find((balance) => balance.coin === quoteCurrency)) {\n        const quoteBalance = await getCurrencyBalance(\n          market,\n          connection,\n          wallet,\n          false,\n        );\n        balances.push({\n          key: quoteCurrency,\n          coin: quoteCurrency,\n          wallet: quoteBalance,\n        });\n      }\n    }\n\n    return balances;\n  }\n\n  return useAsyncData(\n    getWalletBalancesForAllMarkets,\n    tuple(\n      'getWalletBalancesForAllMarkets',\n      connected,\n      connection,\n      wallet,\n      allMarkets,\n    ),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nasync function getCurrencyBalance(market, connection, wallet, base = true) {\n  const currencyAccounts = base\n    ? await market.findBaseTokenAccountsForOwner(connection, wallet.publicKey)\n    : await market.findQuoteTokenAccountsForOwner(connection, wallet.publicKey);\n  const currencyAccount = currencyAccounts && currencyAccounts[0];\n  const tokenAccountBalances = await connection.getTokenAccountBalance(\n    currencyAccount.pubkey,\n  );\n  return tokenAccountBalances?.value?.uiAmount;\n}\n\nexport function useOpenOrderAccountBalancesForAllMarkets() {\n  const { connected, wallet } = useWallet();\n\n  const connection = useConnection();\n  const allMarkets = useAllMarkets();\n\n  async function getOpenOrderAccountsForAllMarkets() {\n    let accounts = [];\n    if (!connected) {\n      return accounts;\n    }\n\n    let marketData;\n    for (marketData of allMarkets) {\n      const { market, marketName } = marketData;\n      if (!market) {\n        return accounts;\n      }\n      const openOrderAccounts = await market.findOpenOrdersAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n      if (!openOrderAccounts) {\n        continue;\n      }\n      const baseCurrencyAccounts = await market.findBaseTokenAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n      const quoteCurrencyAccounts = await market.findQuoteTokenAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n\n      const baseCurrency = marketName.includes('/') && marketName.split('/')[0];\n      const quoteCurrency =\n        marketName.includes('/') && marketName.split('/')[1];\n\n      const openOrderAccountBalances = [];\n      openOrderAccounts.forEach((openOrdersAccount) => {\n        const inOrdersBase =\n          openOrdersAccount?.baseTokenTotal &&\n          openOrdersAccount?.baseTokenFree &&\n          market.baseSplSizeToNumber(\n            openOrdersAccount.baseTokenTotal.sub(\n              openOrdersAccount.baseTokenFree,\n            ),\n          );\n        const inOrdersQuote =\n          openOrdersAccount?.quoteTokenTotal &&\n          openOrdersAccount?.quoteTokenFree &&\n          market.baseSplSizeToNumber(\n            openOrdersAccount.quoteTokenTotal.sub(\n              openOrdersAccount.quoteTokenFree,\n            ),\n          );\n        const unsettledBase =\n          openOrdersAccount?.baseTokenFree &&\n          market.baseSplSizeToNumber(openOrdersAccount.baseTokenFree);\n        const unsettledQuote =\n          openOrdersAccount?.quoteTokenFree &&\n          market.baseSplSizeToNumber(openOrdersAccount.quoteTokenFree);\n        openOrderAccountBalances.push({\n          market: marketName,\n          coin: baseCurrency,\n          key: baseCurrency,\n          orders: inOrdersBase,\n          unsettled: unsettledBase,\n          openOrdersAccount: openOrdersAccount,\n          baseCurrencyAccount: baseCurrencyAccounts && baseCurrencyAccounts[0],\n          quoteCurrencyAccount:\n            quoteCurrencyAccounts && quoteCurrencyAccounts[0],\n        });\n        openOrderAccountBalances.push({\n          market: marketName,\n          coin: quoteCurrency,\n          key: quoteCurrency,\n          orders: inOrdersQuote,\n          unsettled: unsettledQuote,\n          openOrdersAccount: openOrdersAccount,\n          baseCurrencyAccount: baseCurrencyAccounts && baseCurrencyAccounts[0],\n          quoteCurrencyAccount:\n            quoteCurrencyAccounts && quoteCurrencyAccounts[0],\n        });\n      });\n      accounts = accounts.concat(openOrderAccountBalances);\n    }\n\n    return accounts;\n  }\n\n  return useAsyncData(\n    getOpenOrderAccountsForAllMarkets,\n    tuple(\n      'getOpenOrderAccountsForAllMarkets',\n      connected,\n      connection,\n      wallet,\n      allMarkets,\n    ),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useUnmigratedDeprecatedMarkets() {\n  const connection = useConnection();\n  const { accounts } = useUnmigratedOpenOrdersAccounts();\n  const marketsList =\n    accounts &&\n    Array.from(new Set(accounts.map((openOrders) => openOrders.market)));\n  const deps = marketsList && marketsList.map((m) => m.toBase58());\n\n  const useUnmigratedDeprecatedMarketsInner = async () => {\n    if (!marketsList) {\n      return null;\n    }\n    const getMarket = async (address) => {\n      const marketInfo = USE_MARKETS.find((market) =>\n        market.address.equals(address),\n      );\n      try {\n        console.log('Loading market', marketInfo.name);\n        // NOTE: Should this just be cached by (connection, marketInfo.address, marketInfo.programId)?\n        return await Market.load(\n          connection,\n          marketInfo.address,\n          {},\n          marketInfo.programId,\n        );\n      } catch (e) {\n        console.log('Failed loading market', marketInfo.name, e);\n        notify({\n          message: 'Error loading market',\n          description: e.message,\n          type: 'error',\n        });\n        return null;\n      }\n    };\n    return (await Promise.all(marketsList.map(getMarket))).filter((x) => x);\n  };\n  const [markets] = useAsyncData(\n    useUnmigratedDeprecatedMarketsInner,\n    tuple(\n      'useUnmigratedDeprecatedMarketsInner',\n      connection,\n      deps && deps.toString(),\n    ),\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\n  );\n  if (!markets) {\n    return null;\n  }\n  return markets.map((market) => ({\n    market,\n    openOrdersList: accounts.filter((openOrders) =>\n      openOrders.market.equals(market.address),\n    ),\n  }));\n}\n\nexport function useGetOpenOrdersForDeprecatedMarkets() {\n  const { connected, wallet } = useWallet();\n\n  const connection = useConnection();\n  const marketsAndOrders = useUnmigratedDeprecatedMarkets();\n  const marketsList =\n    marketsAndOrders && marketsAndOrders.map(({ market }) => market);\n\n  // This isn't quite right: open order balances could change\n  const deps =\n    marketsList && marketsList.map((market) => market.address.toBase58());\n\n  async function getOpenOrdersForDeprecatedMarkets() {\n    if (!connected) {\n      return null;\n    }\n    if (!marketsList) {\n      return null;\n    }\n    console.log('refreshing getOpenOrdersForDeprecatedMarkets');\n    const getOrders = async (market) => {\n      const { marketName } = getMarketDetails(market);\n      try {\n        console.log('Fetching open orders for', marketName);\n        // Can do better than this, we have the open orders accounts already\n        return (\n          await market.loadOrdersForOwner(connection, wallet.publicKey)\n        ).map((order) => ({ marketName, market, ...order }));\n      } catch (e) {\n        console.log('Failed loading open orders', market.address.toBase58(), e);\n        notify({\n          message: `Error loading open orders for deprecated ${marketName}`,\n          description: e.message,\n          type: 'error',\n        });\n        return null;\n      }\n    };\n    return (await Promise.all(marketsList.map(getOrders)))\n      .filter((x) => x)\n      .flat();\n  }\n\n  const cacheKey = tuple(\n    'getOpenOrdersForDeprecatedMarkets',\n    connected,\n    connection,\n    wallet,\n    deps && deps.toString(),\n  );\n  const [openOrders, loaded] = useAsyncData(\n    getOpenOrdersForDeprecatedMarkets,\n    cacheKey,\n    {\n      refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\n    },\n  );\n  console.log('openOrders', openOrders);\n  return {\n    openOrders,\n    loaded,\n    refreshOpenOrders: () => refreshCache(cacheKey),\n  };\n}\n\nexport function useBalancesForDeprecatedMarkets() {\n  const markets = useUnmigratedDeprecatedMarkets();\n  if (!markets) {\n    return null;\n  }\n\n  const openOrderAccountBalances = [];\n  markets.forEach(({ market, openOrdersList }) => {\n    const { baseCurrency, quoteCurrency, marketName } = getMarketDetails(\n      market,\n    );\n    openOrdersList.forEach((openOrders) => {\n      const inOrdersBase =\n        openOrders?.baseTokenTotal &&\n        openOrders?.baseTokenFree &&\n        market.baseSplSizeToNumber(\n          openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\n        );\n      const inOrdersQuote =\n        openOrders?.quoteTokenTotal &&\n        openOrders?.quoteTokenFree &&\n        market.baseSplSizeToNumber(\n          openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\n        );\n      const unsettledBase =\n        openOrders?.baseTokenFree &&\n        market.baseSplSizeToNumber(openOrders.baseTokenFree);\n      const unsettledQuote =\n        openOrders?.quoteTokenFree &&\n        market.baseSplSizeToNumber(openOrders.quoteTokenFree);\n\n      openOrderAccountBalances.push({\n        marketName,\n        market,\n        coin: baseCurrency,\n        key: `${marketName}${baseCurrency}`,\n        orders: inOrdersBase,\n        unsettled: unsettledBase,\n        openOrders,\n      });\n      openOrderAccountBalances.push({\n        marketName,\n        market,\n        coin: quoteCurrency,\n        key: `${marketName}${quoteCurrency}`,\n        orders: inOrdersQuote,\n        unsettled: unsettledQuote,\n        openOrders,\n      });\n    });\n  });\n  return openOrderAccountBalances;\n}\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\nhtml,body{\n  background: #11161D;\n}\ninput[type=number]::-webkit-inner-spin-button {\n  opacity: 0;\n}\ninput[type=number]:hover::-webkit-inner-spin-button,\ninput[type=number]:focus::-webkit-inner-spin-button {\n  opacity: 0.25;\n}\n/* width */\n::-webkit-scrollbar {\n  width: 15px;\n}\n/* Track */\n::-webkit-scrollbar-track {\n  background: #2d313c;\n}\n/* Handle */\n::-webkit-scrollbar-thumb {\n  background: #5b5f67;\n}\n/* Handle on hover */\n::-webkit-scrollbar-thumb:hover {\n  background: #5b5f67;\n}\n.ant-slider-track, .ant-slider:hover .ant-slider-track {\n  background-color: #2abdd2;\n  opacity: 0.75;\n}\n.ant-slider-track,\n.ant-slider ant-slider-track:hover {\n  background-color: #2abdd2;\n  opacity: 0.75;\n}\n.ant-slider-dot-active,\n.ant-slider-handle,\n.ant-slider-handle-click-focused,\n.ant-slider:hover .ant-slider-handle:not(.ant-tooltip-open)  {\n  border: 2px solid #2abdd2; \n}\n.ant-table-tbody > tr.ant-table-row:hover > td {\n  background: #273043;\n}\n.ant-table-tbody > tr > td {\n  border-bottom: 8px solid #1A2029;\n}\n.ant-table-container table > thead > tr:first-child th {\n  border-bottom: none;\n}\n.ant-divider-horizontal.ant-divider-with-text::before, .ant-divider-horizontal.ant-divider-with-text::after {\n  border-top: 1px solid #434a59 !important;\n}\n.ant-layout {\n    background: #11161D\n  }\n  .ant-table {\n    background: #212734;\n  }\n  .ant-table-thead > tr > th {\n    background: #1A2029;\n  }\n.ant-select-item-option-content {\n  img {\n    margin-right: 4px;\n  }\n}\n.ant-modal-content {\n  background-color: #212734;\n}\n\n@-webkit-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n@-moz-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n@-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n.flash {\n  -moz-animation: highlight 0.5s ease 0s 1 alternate ;\n  -webkit-animation: highlight 0.5s ease 0s 1 alternate;\n  animation: highlight 0.5s ease 0s 1 alternate;\n}`;\n","import React, { Component } from 'react';\nimport { Typography } from 'antd';\n\nconst { Title } = Typography;\n\nexport default class ErrorBoundary extends Component {\n  state = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div>\n          <div>\n            <Title level={2}>Something went wrong.</Title>\n            <Title level={4}>Please try again later.</Title>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  margin: 5px;\n  padding: 20px;\n  background-color: #1a2029;\n`;\n\nexport default function FloatingElement({ style, children }) {\n  return <Wrapper style={{ ...style }}>{children}</Wrapper>;\n}\n","import { Col, Row } from 'antd';\nimport React, { useRef, useEffect, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useMarket, useOrderbook, useMarkPrice } from '../utils/markets';\nimport { isEqual, getDecimalCount } from '../utils/utils';\nimport { useInterval } from '../utils/useInterval';\nimport FloatingElement from './layout/FloatingElement';\nimport usePrevious from '../utils/usePrevious';\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\n\nconst SizeTitle = styled(Row)`\n  padding: 20px 0 14px;\n  color: #434a59;\n`;\n\nconst MarkPriceTitle = styled(Row)`\n  padding: 20px 0 14px;\n  font-weight: 700;\n`;\n\nconst Line = styled.div`\n  text-align: right;\n  float: right;\n  height: 100%;\n  ${(props) =>\n    props['data-width'] &&\n    css`\n      width: ${props['data-width']};\n    `}\n  ${(props) =>\n    props['data-bgcolor'] &&\n    css`\n      background-color: ${props['data-bgcolor']};\n    `}\n`;\n\nconst Price = styled.div`\n  position: absolute;\n  right: 5px;\n  color: white;\n`;\n\nexport default function Orderbook({ smallScreen, depth = 7, onPrice, onSize }) {\n  const markPrice = useMarkPrice();\n  const [orderbook] = useOrderbook();\n  const { baseCurrency, quoteCurrency } = useMarket();\n\n  const currentOrderbookData = useRef(null);\n  const lastOrderbookData = useRef(null);\n\n  const [asksToDisplay, setAsksToDisplay] = useState([]);\n  const [bidsToDisplay, setBidsToDisplay] = useState([]);\n  const [totalSize, setTotalSize] = useState(0);\n\n  useInterval(() => {\n    if (\n      !currentOrderbookData.current ||\n      JSON.stringify(currentOrderbookData.current) !==\n        JSON.stringify(lastOrderbookData.current)\n    ) {\n      let bids = orderbook?.bids || [];\n      let asks = orderbook?.asks || [];\n\n      let [asksToDisplay, totalAskSize] = getCumulativeOrderbookSide(\n        asks,\n        true,\n      );\n      let [bidsToDisplay, totalBidSize] = getCumulativeOrderbookSide(\n        bids,\n        false,\n      );\n      let totalSize = totalAskSize + totalBidSize;\n\n      setAsksToDisplay(asksToDisplay);\n      setBidsToDisplay(bidsToDisplay);\n      setTotalSize(totalSize);\n\n      currentOrderbookData.current = {\n        bids: orderbook?.bids,\n        asks: orderbook?.asks,\n      };\n    }\n  }, 250);\n\n  useEffect(() => {\n    lastOrderbookData.current = {\n      bids: orderbook?.bids,\n      asks: orderbook?.asks,\n    };\n  }, [orderbook]);\n\n  function getCumulativeOrderbookSide(orders, backwards = false) {\n    let cumulative = orders\n      .slice(0, depth)\n      .reduce((cumulative, [price, size], i) => {\n        cumulative.push({\n          price,\n          size,\n          cumulativeSize: (cumulative[i - 1]?.cumulativeSize || 0) + size,\n        });\n        return cumulative;\n      }, []);\n    if (backwards) {\n      cumulative = cumulative.reverse();\n    }\n    let totalSize =\n      cumulative[backwards ? 0 : cumulative.length - 1]?.cumulativeSize || 0;\n    return [cumulative, totalSize];\n  }\n\n  return (\n    <FloatingElement\n      style={\n        smallScreen ? { flex: 1 } : { height: '500px', overflow: 'hidden' }\n      }\n    >\n      <Title>Orderbook</Title>\n      <SizeTitle>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          Size ({baseCurrency})\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          Price ({quoteCurrency})\n        </Col>\n      </SizeTitle>\n      {asksToDisplay.map(({ price, size, cumulativeSize }) => (\n        <OrderbookRow\n          key={price + ''}\n          price={price}\n          size={size}\n          side={'sell'}\n          sizePercent={(cumulativeSize / (totalSize || 1)) * 100}\n          onSizeClick={() => onSize(size)}\n          onPriceClick={() => onPrice(price)}\n        />\n      ))}\n      <MarkPriceComponent markPrice={markPrice} />\n      {bidsToDisplay.map(({ price, size, cumulativeSize }) => (\n        <OrderbookRow\n          key={price + ''}\n          price={price}\n          size={size}\n          side={'buy'}\n          sizePercent={(cumulativeSize / (totalSize || 1)) * 100}\n          onSizeClick={() => onSize(size)}\n          onPriceClick={() => onPrice(price)}\n        />\n      ))}\n    </FloatingElement>\n  );\n}\n\nconst OrderbookRow = React.memo(\n  ({ side, price, size, sizePercent, onSizeClick, onPriceClick }) => {\n    const element = useRef();\n\n    const { market } = useMarket();\n\n    useEffect(() => {\n      // eslint-disable-next-line\n      !element.current?.classList.contains('flash') &&\n        element.current?.classList.add('flash');\n      setTimeout(\n        () =>\n          element.current?.classList.contains('flash') &&\n          element.current?.classList.remove('flash'),\n        500,\n      );\n    }, [price, size]);\n\n    let formattedSize =\n      market?.minOrderSize && !isNaN(size)\n        ? Number(size).toFixed(getDecimalCount(market.minOrderSize) + 1)\n        : size;\n\n    let formattedPrice =\n      market?.tickSize && !isNaN(price)\n        ? Number(price).toFixed(getDecimalCount(market.tickSize) + 1)\n        : price;\n\n    return (\n      <Row ref={element} style={{ marginBottom: 1 }} onClick={onSizeClick}>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          {formattedSize}\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          <Line\n            data-width={sizePercent + '%'}\n            data-bgcolor={\n              side === 'buy'\n                ? 'rgba(65, 199, 122, 0.6)'\n                : 'rgba(242, 60, 105, 0.6)'\n            }\n          />\n          <Price onClick={onPriceClick}>{formattedPrice}</Price>\n        </Col>\n      </Row>\n    );\n  },\n  (prevProps, nextProps) =>\n    isEqual(prevProps, nextProps, ['side', 'price', 'size', 'sizePercent']),\n);\n\nconst MarkPriceComponent = React.memo(\n  ({ markPrice }) => {\n    const { market } = useMarket();\n    const previousMarkPrice = usePrevious(markPrice);\n\n    let markPriceColor =\n      markPrice > previousMarkPrice\n        ? '#41C77A'\n        : markPrice < previousMarkPrice\n        ? '#F23B69'\n        : 'white';\n\n    let formattedMarkPrice =\n      markPrice &&\n      market?.tickSize &&\n      markPrice.toFixed(getDecimalCount(market.tickSize));\n\n    return (\n      <MarkPriceTitle justify=\"center\">\n        <Col style={{ color: markPriceColor }}>\n          {markPrice > previousMarkPrice && (\n            <ArrowUpOutlined style={{ marginRight: 5 }} />\n          )}\n          {markPrice < previousMarkPrice && (\n            <ArrowDownOutlined style={{ marginRight: 5 }} />\n          )}\n          {formattedMarkPrice || '----'}\n        </Col>\n      </MarkPriceTitle>\n    );\n  },\n  (prevProps, nextProps) => isEqual(prevProps, nextProps, ['markPrice']),\n);\n","import { useRef, useEffect } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import { useEffect, useRef } from 'react';\n\nexport default function usePrevious(value) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef();\n\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n\n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\n","import React from 'react';\nimport { ConfigProvider, Table } from 'antd';\n\nexport default function DataTable({\n  dataSource,\n  columns,\n  emptyLabel = 'No data',\n  pagination = false,\n  loading = false,\n  pageSize = 10,\n}) {\n  const customizeRenderEmpty = () => (\n    <div\n      style={{\n        padding: '20px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      {emptyLabel}\n    </div>\n  );\n\n  return (\n    <ConfigProvider renderEmpty={customizeRenderEmpty}>\n      <Table\n        dataSource={dataSource}\n        columns={columns}\n        pagination={pagination ? { pagination: true, pageSize } : false}\n        loading={loading}\n      />\n    </ConfigProvider>\n  );\n}\n","import { notify } from './notifications';\nimport { getDecimalCount, sleep } from './utils';\nimport { Account, SystemProgram, Transaction } from '@solana/web3.js';\nimport { TokenInstructions } from '@project-serum/serum';\n\nexport async function createTokenAccountTransaction({\n  connection,\n  wallet,\n  mintPublicKey,\n}) {\n  const newAccount = new Account();\n  const transaction = SystemProgram.createAccount({\n    fromPubkey: wallet.publicKey,\n    newAccountPubkey: newAccount.publicKey,\n    lamports: await connection.getMinimumBalanceForRentExemption(165),\n    space: 165,\n    programId: TokenInstructions.TOKEN_PROGRAM_ID,\n  });\n  transaction.add(\n    TokenInstructions.initializeAccount({\n      account: newAccount.publicKey,\n      mint: mintPublicKey,\n      owner: wallet.publicKey,\n    }),\n  );\n  return {\n    transaction,\n    signer: newAccount,\n    newAccountPubkey: newAccount.publicKey,\n  };\n}\n\nexport async function settleFunds({\n  market,\n  openOrders,\n  connection,\n  wallet,\n  baseCurrencyAccount,\n  quoteCurrencyAccount,\n  onSuccess,\n}) {\n  if (\n    !market ||\n    !wallet ||\n    !connection ||\n    !openOrders ||\n    (!baseCurrencyAccount && !quoteCurrencyAccount)\n  ) {\n    notify({ message: 'Not connected' });\n    return;\n  }\n\n  let createAccountTransaction;\n  let createAccountSigner;\n  let baseCurrencyAccountPubkey = baseCurrencyAccount?.pubkey;\n  let quoteCurrencyAccountPubkey = quoteCurrencyAccount?.pubkey;\n\n  if (!baseCurrencyAccountPubkey) {\n    const result = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.baseMintAddress,\n    });\n    baseCurrencyAccountPubkey = result?.newAccountPubkey;\n    createAccountTransaction = result?.transaction;\n    createAccountSigner = result?.signer;\n  }\n  if (!quoteCurrencyAccountPubkey) {\n    const result = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.quoteMintAddress,\n    });\n    quoteCurrencyAccountPubkey = result?.newAccountPubkey;\n    createAccountTransaction = result?.transaction;\n    createAccountSigner = result?.signer;\n  }\n\n  const {\n    transaction: settleFundsTransaction,\n    signers: settleFundsSigners,\n  } = await market.makeSettleFundsTransaction(\n    connection,\n    openOrders,\n    baseCurrencyAccountPubkey,\n    quoteCurrencyAccountPubkey,\n  );\n\n  let transaction = mergeTransactions([\n    createAccountTransaction,\n    settleFundsTransaction,\n  ]);\n  let signers = createAccountSigner\n    ? [...settleFundsSigners, createAccountSigner]\n    : settleFundsSigners;\n\n  const onConfirm = (result) => {\n    if (result.timeout) {\n      notify({\n        message: 'Timed out',\n        type: 'error',\n        description: 'Timed out awaiting confirmation on transaction',\n      });\n    } else if (result.err) {\n      console.log(result.err);\n      notify({ message: 'Error settling funds', type: 'error' });\n    } else {\n      notify({ message: 'Fund settlement confirmed', type: 'success' });\n      onSuccess && onSuccess();\n    }\n  };\n  const onBeforeSend = () => notify({ message: 'Settling funds...' });\n  const onAfterSend = () =>\n    notify({ message: 'Funds settled', type: 'success' });\n  return await sendTransaction({\n    transaction,\n    signers,\n    wallet,\n    connection,\n    onBeforeSend,\n    onAfterSend,\n    onConfirm,\n  });\n}\n\nexport async function cancelOrder(params) {\n  return cancelOrders({ ...params, orders: [params.order] });\n}\n\nexport async function cancelOrders({\n  market,\n  wallet,\n  connection,\n  orders,\n  onBeforeSendCallBack,\n  onAfterSendCallBack,\n  onConfirmCallBack,\n}) {\n  const transaction = market.makeMatchOrdersTransaction(5);\n  orders.forEach((order) => {\n    transaction.add(\n      market.makeCancelOrderInstruction(connection, wallet.publicKey, order),\n    );\n  });\n  transaction.add(market.makeMatchOrdersTransaction(5));\n  const onConfirm = (result) => {\n    if (result.timeout) {\n      notify({\n        message: 'Timed out',\n        type: 'error',\n        description: 'Timed out awaiting confirmation on transaction',\n      });\n    } else if (result.err) {\n      console.log(result.err);\n      notify({\n        message:\n          orders.length > 1\n            ? 'Error cancelling orders'\n            : 'Error cancelling order',\n        type: 'error',\n      });\n    } else {\n      notify({\n        message:\n          orders.length > 1\n            ? 'Order cancellations confirmed'\n            : 'Order cancellation confirmed',\n        type: 'success',\n      });\n    }\n    onConfirmCallBack && onConfirmCallBack();\n  };\n  const onBeforeSend = () => {\n    notify({ message: 'Sending cancel...' });\n    onBeforeSendCallBack && onBeforeSendCallBack();\n  };\n  const onAfterSend = () => {\n    notify({\n      message: orders.length > 1 ? 'Orders cancelled' : 'Order cancelled',\n      type: 'success',\n    });\n    onAfterSendCallBack && onAfterSendCallBack();\n  };\n\n  return await sendTransaction({\n    transaction,\n    wallet,\n    connection,\n    onBeforeSend,\n    onAfterSend,\n    onConfirm,\n  });\n}\n\nexport async function placeOrder({\n  side,\n  price,\n  size,\n  orderType,\n  market,\n  connection,\n  wallet,\n  baseCurrencyAccount,\n  quoteCurrencyAccount,\n  onBeforeSendCallBack,\n  onAfterSendCallBack,\n  onConfirmCallBack,\n}) {\n  let formattedMinOrderSize =\n    market?.minOrderSize?.toFixed(getDecimalCount(market.minOrderSize)) ||\n    market?.minOrderSize;\n  let formattedTickSize =\n    market?.tickSize?.toFixed(getDecimalCount(market.tickSize)) ||\n    market?.tickSize;\n  const isIncrement = (num, step) =>\n    Math.abs((num / step) % 1) < 1e-5 ||\n    Math.abs(((num / step) % 1) - 1) < 1e-5;\n  if (isNaN(price)) {\n    notify({ message: 'Invalid price', type: 'error' });\n    return;\n  }\n  if (isNaN(size)) {\n    notify({ message: 'Invalid size', type: 'error' });\n    return;\n  }\n  if (!wallet || !wallet.publicKey) {\n    notify({ message: 'Connect wallet', type: 'error' });\n    return;\n  }\n  if (!market) {\n    notify({ message: 'Invalid  market', type: 'error' });\n    return;\n  }\n  if (!isIncrement(size, market.minOrderSize)) {\n    notify({\n      message: `Size must be an increment of ${formattedMinOrderSize}`,\n      type: 'error',\n    });\n    return;\n  }\n  if (size < market.minOrderSize) {\n    notify({ message: 'Size too small', type: 'error' });\n    return;\n  }\n  if (!isIncrement(price, market.tickSize)) {\n    notify({\n      message: `Price must be an increment of ${formattedTickSize}`,\n      type: 'error',\n    });\n    return;\n  }\n  if (price < market.tickSize) {\n    notify({ message: 'Price under tick size', type: 'error' });\n    return;\n  }\n  const owner = wallet.publicKey;\n\n  const payer = side === 'sell' ? baseCurrencyAccount : quoteCurrencyAccount;\n  if (!payer) {\n    notify({\n      message: 'Need an SPL token account for cost currency',\n      type: 'error',\n    });\n    return;\n  }\n  const params = {\n    owner,\n    payer,\n    side,\n    price,\n    size,\n    orderType,\n  };\n  console.log(params);\n\n  const transaction = market.makeMatchOrdersTransaction(5);\n  let {\n    transaction: placeOrderTx,\n    signers,\n  } = await market.makePlaceOrderTransaction(\n    connection,\n    params,\n    10_000,\n    10_000,\n  );\n  transaction.add(placeOrderTx);\n  transaction.add(market.makeMatchOrdersTransaction(5));\n\n  const onConfirm = (result) => {\n    if (result.timeout) {\n      notify({\n        message: 'Timed out',\n        type: 'error',\n        description: 'Timed out awaiting confirmation on transaction',\n      });\n    } else if (result.err) {\n      console.log(result.err);\n      notify({ message: 'Error placing order', type: 'error' });\n    } else {\n      notify({ message: 'Order confirmed', type: 'success' });\n    }\n    onConfirmCallBack && onConfirmCallBack();\n  };\n  const onBeforeSend = () => {\n    notify({ message: 'Sending order...' });\n    onBeforeSendCallBack && onBeforeSendCallBack();\n  };\n  const onAfterSend = () => {\n    notify({ message: 'Order sent', type: 'success' });\n    onAfterSendCallBack && onAfterSendCallBack();\n  };\n\n  return await sendTransaction({\n    transaction,\n    wallet,\n    connection,\n    onBeforeSend,\n    onAfterSend,\n    onConfirm,\n    signers,\n  });\n}\n\nconst getUnixTs = () => {\n  return new Date().getTime() / 1000;\n};\n\nconst DEFAULT_TIMEOUT = 15000;\n\nasync function sendTransaction({\n  transaction,\n  wallet,\n  signers = [wallet.publicKey],\n  connection,\n  onBeforeSend,\n  onAfterSend,\n  onConfirm,\n  timeout = DEFAULT_TIMEOUT,\n}) {\n  transaction.recentBlockhash = (\n    await connection.getRecentBlockhash('max')\n  ).blockhash;\n  transaction.signPartial(...signers);\n  const rawTransaction = (\n    await wallet.signTransaction(transaction)\n  ).serialize();\n  let done = false;\n  const startTime = getUnixTs();\n  onBeforeSend();\n  const txid = await connection.sendRawTransaction(rawTransaction, {\n    skipPreflight: true,\n  });\n  onAfterSend();\n  console.log('Started sending transaction for', txid);\n  awaitTransactionSignatureConfirmation(txid, timeout, connection)\n    .then((res) => {\n      done = true;\n      onConfirm(res);\n    })\n    .catch((res) => {\n      done = true;\n      onConfirm(res);\n    });\n  while (!done && getUnixTs() - startTime < timeout) {\n    connection.sendRawTransaction(rawTransaction, {\n      skipPreflight: true,\n    });\n    await sleep(300);\n  }\n  console.log('Latency', txid, getUnixTs() - startTime);\n  return txid;\n}\n\nasync function awaitTransactionSignatureConfirmation(\n  txid,\n  timeout,\n  connection,\n) {\n  let done = false;\n  const result = await new Promise((resolve, reject) => {\n    (async () => {\n      setTimeout(() => {\n        if (done) {\n          return;\n        }\n        done = true;\n        console.log('Timed out for txid', txid);\n        reject({ timeout: true });\n      }, timeout);\n      try {\n        connection.onSignature(\n          txid,\n          (result) => {\n            console.log('WS confirmed', txid, result);\n            done = true;\n            if (result.err) {\n              reject(result);\n            } else {\n              resolve(result);\n            }\n          },\n          'recent',\n        );\n        console.log('Set up WS connection', txid);\n      } catch (e) {\n        done = true;\n        console.log('WS error in setup', txid, e);\n      }\n      while (!done) {\n        (async () => {\n          try {\n            const signatureStatuses = await connection.getSignatureStatuses([\n              txid,\n            ]);\n            const result = signatureStatuses && signatureStatuses.value[0];\n            if (!done) {\n              if (!result) {\n                console.log('REST null result for', txid, result);\n              } else if (result.err) {\n                console.log('REST error for', txid, result);\n                done = true;\n                reject(result);\n              } else if (!result.confirmations) {\n                console.log('REST no confirmations for', txid, result);\n              } else {\n                console.log('REST confirmation for', txid, result);\n                done = true;\n                resolve(result);\n              }\n            }\n          } catch (e) {\n            if (!done) {\n              console.log('REST connection error: txid', txid, e);\n            }\n          }\n        })();\n        await sleep(300);\n      }\n    })();\n  });\n  done = true;\n  return result;\n}\n\nfunction mergeTransactions(transactions) {\n  const transaction = new Transaction();\n  transactions\n    .filter((t) => t)\n    .forEach((t) => {\n      transaction.add(t);\n    });\n  return transaction;\n}\n","import { Button } from 'antd';\nimport React from 'react';\nimport {\n  useTokenAccounts,\n  getSelectedTokenAccountForMint,\n} from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\nimport { useSendConnection } from '../../utils/connection';\nimport { useWallet } from '../../utils/wallet';\nimport { settleFunds } from '../../utils/send';\n\nexport default function BalancesTable({\n  balances,\n  showMarket,\n  hideWalletBalance,\n  onSettleSuccess,\n}) {\n  const [accounts] = useTokenAccounts();\n  const connection = useSendConnection();\n  const { wallet } = useWallet();\n\n  async function onSettleFunds(market, openOrders) {\n    return await settleFunds({\n      market,\n      openOrders,\n      connection,\n      wallet,\n      baseCurrencyAccount: getSelectedTokenAccountForMint(\n        accounts,\n        market?.baseMintAddress,\n      ),\n      quoteCurrencyAccount: getSelectedTokenAccountForMint(\n        accounts,\n        market?.quoteMintAddress,\n      ),\n      onSuccess: onSettleSuccess,\n    });\n  }\n\n  const columns = [\n    showMarket\n      ? {\n          title: 'Market',\n          dataIndex: 'marketName',\n          key: 'marketName',\n        }\n      : null,\n    {\n      title: 'Coin',\n      dataIndex: 'coin',\n      key: 'coin',\n    },\n    hideWalletBalance\n      ? null\n      : {\n          title: 'Wallet Balance',\n          dataIndex: 'wallet',\n          key: 'wallet',\n        },\n    {\n      title: 'Orders',\n      dataIndex: 'orders',\n      key: 'orders',\n    },\n    {\n      title: 'Unsettled',\n      dataIndex: 'unsettled',\n      key: 'unsettled',\n    },\n    {\n      key: 'action',\n      render: ({ market, openOrders, marketName }) => (\n        <div style={{ textAlign: 'right' }}>\n          <Button\n            ghost\n            style={{ marginRight: 12 }}\n            onClick={() => onSettleFunds(market, openOrders)}\n          >\n            Settle {marketName}\n          </Button>\n        </div>\n      ),\n    },\n  ].filter((x) => x);\n  return (\n    <DataTable\n      emptyLabel=\"No balances\"\n      dataSource={balances}\n      columns={columns}\n      pagination={false}\n    />\n  );\n}\n","import React, { useState } from 'react';\nimport DataTable from '../layout/DataTable';\n\nimport styled from 'styled-components';\nimport { Button, Row, Col, Tag } from 'antd';\nimport { cancelOrder } from '../../utils/send';\nimport { useWallet } from '../../utils/wallet';\nimport { useSendConnection } from '../../utils/connection';\nimport { notify } from '../../utils/notifications';\nimport { DeleteOutlined } from '@ant-design/icons';\n\nconst CancelButton = styled(Button)`\n  color: #f23b69;\n  border: 1px solid #f23b69;\n`;\n\nexport default function OpenOrderTable({ openOrders, onCancelSuccess }) {\n  let { wallet } = useWallet();\n  let connection = useSendConnection();\n\n  const [cancelId, setCancelId] = useState(null);\n\n  async function cancel(order) {\n    try {\n      await cancelOrder({\n        order,\n        market: order.market,\n        connection,\n        wallet,\n        onBeforeSendCallBack: () => setCancelId(order?.orderId),\n        onConfirmCallBack: () => {\n          setCancelId(null);\n          onCancelSuccess && onCancelSuccess();\n        },\n      });\n    } catch (e) {\n      notify({\n        message: 'Error cancelling order: ' + e.message,\n        type: 'error',\n      });\n      setCancelId(null);\n    }\n  }\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'marketName',\n      key: 'marketName',\n    },\n    {\n      title: 'Side',\n      dataIndex: 'side',\n      key: 'side',\n      render: (side) => (\n        <Tag\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\n          style={{ fontWeight: 700 }}\n        >\n          {side.charAt(0).toUpperCase() + side.slice(1)}\n        </Tag>\n      ),\n    },\n    {\n      title: 'Size',\n      dataIndex: 'size',\n      key: 'size',\n    },\n    {\n      title: 'Price',\n      dataIndex: 'price',\n      key: 'price',\n    },\n    {\n      key: 'orderId',\n      render: (order) => (\n        <div style={{ textAlign: 'right' }}>\n          <CancelButton\n            icon={<DeleteOutlined />}\n            onClick={() => cancel(order)}\n            loading={cancelId + '' === order?.orderId + ''}\n          >\n            Cancel\n          </CancelButton>\n        </div>\n      ),\n    },\n  ];\n  const dataSource = (openOrders || []).map((order) =>\n    Object.assign(order, { key: order.orderId }),\n  );\n\n  return (\n    <Row>\n      <Col span={24}>\n        <DataTable\n          emptyLabel=\"No open orders\"\n          dataSource={dataSource}\n          columns={columns}\n          pagination={true}\n          pageSize={5}\n        />\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react';\nimport { Row, Col, Tag } from 'antd';\nimport { useFills, useMarket } from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\n\nexport default function FillsTable() {\n  const fills = useFills();\n\n  const { quoteCurrency } = useMarket();\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'marketName',\n      key: 'marketName',\n    },\n    {\n      title: 'Side',\n      dataIndex: 'side',\n      key: 'side',\n      render: (side) => (\n        <Tag\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\n          style={{ fontWeight: 700 }}\n        >\n          {side.charAt(0).toUpperCase() + side.slice(1)}\n        </Tag>\n      ),\n    },\n    {\n      title: `Size`,\n      dataIndex: 'size',\n      key: 'size',\n    },\n    {\n      title: `Price`,\n      dataIndex: 'price',\n      key: 'price',\n    },\n    {\n      title: `Liquidity`,\n      dataIndex: 'liquidity',\n      key: 'liquidity',\n    },\n    {\n      title: quoteCurrency ? `Fees (${quoteCurrency})` : 'Fees',\n      dataIndex: 'feeCost',\n      key: 'feeCost',\n    },\n  ];\n\n  const dataSource = (fills || []).map((fill) => ({\n    ...fill,\n    key: `${fill.orderId}${fill.side}`,\n    liquidity: fill.eventFlags.maker ? 'Maker' : 'Taker',\n  }));\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <DataTable\n            dataSource={dataSource}\n            columns={columns}\n            pagination={true}\n            pageSize={5}\n            emptyLabel=\"No fills\"\n          />\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React from 'react';\nimport { Row, Col, Typography, Tag } from 'antd';\nimport { useFeeDiscountKeys } from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\nimport { TokenInstructions, getFeeRates } from '@project-serum/serum';\nimport { percentFormat } from '../../utils/utils';\n\nexport default function FeesTable() {\n  const [feeAccounts] = useFeeDiscountKeys();\n\n  const columns = [\n    {\n      title: 'Fee Tier',\n      dataIndex: 'feeTier',\n      key: 'feeTier',\n      render: (feeTier, row) => (\n        <div style={{ display: 'flex' }}>\n          <Typography>{feeTier}</Typography>\n          {row.index === 0 ? (\n            <div style={{ marginLeft: 10 }}>\n              <Tag color={'#41C77A'} style={{ fontWeight: 700 }}>\n                Selected\n              </Tag>\n            </div>\n          ) : null}\n        </div>\n      ),\n    },\n    {\n      title: 'Taker',\n      dataIndex: 'taker',\n      key: 'taker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).taker),\n    },\n    {\n      title: 'Maker',\n      dataIndex: 'maker',\n      key: 'maker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).maker),\n    },\n    {\n      title: `Public Key`,\n      dataIndex: 'pubkey',\n      key: 'pubkey',\n      render: (pubkey) => pubkey.toBase58(),\n    },\n    {\n      title: `Balance`,\n      dataIndex: 'balance',\n      key: 'balance',\n    },\n    {\n      title: `Mint`,\n      dataIndex: 'mint',\n      key: 'mint',\n      render: (_, row) =>\n        row.mint.equals(TokenInstructions.SRM_MINT)\n          ? 'SRM'\n          : row.mint.equals(TokenInstructions.MSRM_MINT)\n          ? 'MSRM'\n          : 'UNKNOWN',\n    },\n  ];\n\n  const dataSource = (feeAccounts || []).map((account, index) => ({\n    ...account,\n    index,\n    key: account.pubkey.toBase58(),\n  }));\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <DataTable\n            dataSource={dataSource}\n            columns={columns}\n            pagination={true}\n            pageSize={5}\n            emptyLabel=\"No (M)SRM accounts\"\n          />\n        </Col>\n      </Row>\n      <Row style={{ marginTop: 8 }}>\n        <Col>\n          <Typography>\n            Holding SRM or MSRM makes you eligible for fee discounts:\n          </Typography>\n          <FeeScheduleTable />\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nfunction FeeScheduleTable() {\n  // Representation of serum-js/src/fees.ts\n  const dataSource = [\n    { feeTier: 0, taker: 0.0022, maker: -0.0003, token: '', balance: '' },\n    { feeTier: 1, taker: 0.002, maker: -0.0003, token: 'SRM', balance: 100 },\n    { feeTier: 2, taker: 0.0018, maker: -0.0003, token: 'SRM', balance: 1000 },\n    { feeTier: 3, taker: 0.0016, maker: -0.0003, token: 'SRM', balance: 10000 },\n    {\n      feeTier: 4,\n      taker: 0.0014,\n      maker: -0.0003,\n      token: 'SRM',\n      balance: 100000,\n    },\n    {\n      feeTier: 5,\n      taker: 0.0012,\n      maker: -0.0003,\n      token: 'SRM',\n      balance: 1000000,\n    },\n    { feeTier: 6, taker: 0.001, maker: -0.0005, token: 'MSRM', balance: 1 },\n  ];\n  const columns = [\n    {\n      title: 'Fee Tier',\n      dataIndex: 'feeTier',\n      key: 'feeTier',\n    },\n    {\n      title: 'Taker',\n      dataIndex: 'taker',\n      key: 'taker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).taker),\n    },\n    {\n      title: 'Maker',\n      dataIndex: 'maker',\n      key: 'maker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).maker),\n    },\n    {\n      title: 'Requirements',\n      dataIndex: 'requirements',\n      key: 'requirements',\n      render: (_, row) => (\n        <Typography>\n          {!row.balance ? 'None' : `≥ ${row.balance} ${row.token}`}\n        </Typography>\n      ),\n    },\n  ];\n  return (\n    <DataTable\n      dataSource={dataSource.map((info) => ({ ...info, key: info.feeTier }))}\n      columns={columns}\n    />\n  );\n}\n","import BalancesTable from './BalancesTable';\nimport OpenOrderTable from './OpenOrderTable';\nimport React from 'react';\nimport { Tabs, Typography } from 'antd';\nimport FillsTable from './FillsTable';\nimport FloatingElement from '../layout/FloatingElement';\nimport FeesTable from './FeesTable';\nimport { useOpenOrders, useBalances, useMarket } from '../../utils/markets';\n\nconst { Paragraph } = Typography;\nconst { TabPane } = Tabs;\n\nexport default function Index() {\n  const { market } = useMarket();\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 20 }}>\n      <Typography>\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)' }}>\n          Make sure to go to Balances and click Settle to send out your funds.\n        </Paragraph>\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)' }}>\n          To fund your wallet, use sollet.io. You can get SOL from FTX, Binance,\n          BitMax, and others. You can get other tokens from FTX.{' '}\n        </Paragraph>\n      </Typography>\n      <Tabs defaultActiveKey=\"orders\">\n        <TabPane tab=\"Open Orders\" key=\"orders\">\n          <OpenOrdersTab />\n        </TabPane>\n        <TabPane tab=\"Recent Trade History\" key=\"fills\">\n          <FillsTable />\n        </TabPane>\n        <TabPane tab=\"Balances\" key=\"balances\">\n          <BalancesTab />\n        </TabPane>\n        {market && market.supportsSrmFeeDiscounts ? (\n          <TabPane tab=\"Fee discounts\" key=\"fees\">\n            <FeesTable />\n          </TabPane>\n        ) : null}\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\nconst OpenOrdersTab = () => {\n  const openOrders = useOpenOrders();\n\n  return <OpenOrderTable openOrders={openOrders} />;\n};\n\nconst BalancesTab = () => {\n  const balances = useBalances();\n\n  return <BalancesTable balances={balances} />;\n};\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nexport default function Link({ external = false, ...props }) {\n  let { to, children, ...rest } = props;\n  if (external) {\n    return (\n      <a href={to} target=\"_blank\" rel=\"noopener noreferrer\" {...rest}>\n        {children}\n      </a>\n    );\n  }\n  return (\n    <RouterLink to={to} {...rest}>\n      {children}\n    </RouterLink>\n  );\n}\n","import React from 'react';\nimport { Modal } from 'antd';\nimport {\n  useSelectedBaseCurrencyAccount,\n  useMarket,\n  useSelectedQuoteCurrencyAccount,\n} from '../utils/markets';\nimport { TOKEN_MINTS } from '@project-serum/serum';\nimport { useWallet } from '../utils/wallet';\nimport Link from './Link';\n\nexport default function DepositDialog({ onClose, depositCoin }) {\n  let coinMint =\n    depositCoin &&\n    TOKEN_MINTS.find(({ name }) => name === depositCoin)?.address;\n  const { market } = useMarket();\n  const { providerName, providerUrl } = useWallet();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  if (!coinMint) {\n    return null;\n  }\n\n  let account;\n  if (market?.baseMintAddress?.equals(coinMint)) {\n    account = baseCurrencyAccount;\n  } else if (market?.quoteMintAddress?.equals(coinMint)) {\n    account = quoteCurrencyAccount;\n  } else {\n    account = null;\n  }\n\n  return (\n    <Modal\n      title={depositCoin}\n      visible={!!coinMint}\n      onOk={onClose}\n      onCancel={onClose}\n    >\n      <div style={{ paddingTop: '20px' }}>\n        <p style={{ color: 'white' }}>Mint address:</p>\n        <p style={{ color: 'rgba(255,255,255,0.5)' }}>{coinMint.toBase58()}</p>\n        <div>\n          <p style={{ color: 'white' }}>Deposit address:</p>\n          <p style={{ color: 'rgba(255,255,255,0.5)' }}>\n            {account ? (\n              account.pubkey.toBase58()\n            ) : (\n              <>\n                Visit{' '}\n                <Link external to={providerUrl}>\n                  {providerName}\n                </Link>{' '}\n                to create an account for this mint\n              </>\n            )}\n          </p>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n","import { Button, Col, Divider, Row } from 'antd';\nimport React, { useState } from 'react';\nimport FloatingElement from './layout/FloatingElement';\nimport styled from 'styled-components';\nimport {\n  useBalances,\n  useMarket,\n  useSelectedBaseCurrencyAccount,\n  useSelectedOpenOrdersAccount,\n  useSelectedQuoteCurrencyAccount,\n} from '../utils/markets';\nimport DepositDialog from './DepositDialog';\nimport { useWallet } from '../utils/wallet';\nimport Link from './Link';\nimport { settleFunds } from '../utils/send';\nimport { useSendConnection } from '../utils/connection';\n\nconst RowBox = styled(Row)`\n  padding-bottom: 20px;\n`;\n\nconst Tip = styled.p`\n  font-size: 12px;\n  padding-top: 6px;\n`;\n\nconst ActionButton = styled(Button)`\n  color: #2abdd2;\n  background-color: #212734;\n  border-width: 0px;\n`;\n\nexport default function StandaloneBalancesDisplay() {\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const balances = useBalances();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const connection = useSendConnection();\n  const { providerUrl, providerName, wallet } = useWallet();\n  const [depositCoin, setDepositCoin] = useState('');\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const baseCurrencyBalances =\n    balances && balances.find((b) => b.coin === baseCurrency);\n  const quoteCurrencyBalances =\n    balances && balances.find((b) => b.coin === quoteCurrency);\n\n  async function onSettleFunds() {\n    return await settleFunds({\n      market,\n      openOrders: openOrdersAccount,\n      connection,\n      wallet,\n      baseCurrencyAccount,\n      quoteCurrencyAccount,\n    });\n  }\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      {[\n        [baseCurrency, baseCurrencyBalances],\n        [quoteCurrency, quoteCurrencyBalances],\n      ].map(([currency, balances], index) => (\n        <React.Fragment key={index}>\n          <Divider style={{ borderColor: 'white' }}>{currency}</Divider>\n          <RowBox\n            align=\"middle\"\n            justify=\"space-between\"\n            style={{ paddingBottom: 12 }}\n          >\n            <Col>Wallet balance:</Col>\n            <Col>{balances && balances.wallet}</Col>\n          </RowBox>\n          <RowBox\n            align=\"middle\"\n            justify=\"space-between\"\n            style={{ paddingBottom: 12 }}\n          >\n            <Col>Unsettled balance:</Col>\n            <Col>{balances && balances.unsettled}</Col>\n          </RowBox>\n          <RowBox align=\"middle\" justify=\"space-around\">\n            <Col style={{ width: 150 }}>\n              <ActionButton\n                block\n                size=\"large\"\n                onClick={() => setDepositCoin(currency)}\n              >\n                Deposit\n              </ActionButton>\n            </Col>\n            <Col style={{ width: 150 }}>\n              <ActionButton block size=\"large\" onClick={onSettleFunds}>\n                Settle\n              </ActionButton>\n            </Col>\n          </RowBox>\n          <Tip>\n            All deposits go to your{' '}\n            <Link external to={providerUrl}>\n              {providerName}\n            </Link>{' '}\n            wallet\n          </Tip>\n        </React.Fragment>\n      ))}\n      <DepositDialog\n        depositCoin={depositCoin}\n        onClose={() => setDepositCoin('')}\n      />\n    </FloatingElement>\n  );\n}\n","import { Button, Input, Radio, Switch, Slider } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport {\n  useBaseCurrencyBalances,\n  useQuoteCurrencyBalances,\n  useMarket,\n  useMarkPrice,\n  useSelectedOpenOrdersAccount,\n  useSelectedBaseCurrencyAccount,\n  useSelectedQuoteCurrencyAccount,\n} from '../utils/markets';\nimport { useWallet } from '../utils/wallet';\nimport { notify } from '../utils/notifications';\nimport {\n  getDecimalCount,\n  roundToDecimal,\n  floorToDecimal,\n} from '../utils/utils';\nimport { useSendConnection } from '../utils/connection';\nimport FloatingElement from './layout/FloatingElement';\nimport { placeOrder } from '../utils/send';\n\nconst SellButton = styled(Button)`\n  margin: 20px 0px 0px 0px;\n  background: #f23b69;\n  border-color: #f23b69;\n`;\n\nconst BuyButton = styled(Button)`\n  margin: 20px 0px 0px 0px;\n  background: #02bf76;\n  border-color: #02bf76;\n`;\n\nconst sliderMarks = {\n  0: '0%',\n  25: '25%',\n  50: '50%',\n  75: '75%',\n  100: '100%',\n};\n\nexport default function TradeForm({ style, setChangeOrderRef }) {\n  const [side, setSide] = useState('buy');\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const baseCurrencyBalances = useBaseCurrencyBalances();\n  const quoteCurrencyBalances = useQuoteCurrencyBalances();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const { wallet } = useWallet();\n  const sendConnection = useSendConnection();\n  const markPrice = useMarkPrice();\n\n  const [postOnly, setPostOnly] = useState(false);\n  const [ioc, setIoc] = useState(false);\n  const [baseSize, setBaseSize] = useState(null);\n  const [quoteSize, setQuoteSize] = useState(null);\n  const [price, setPrice] = useState(null);\n  const [submitting, setSubmitting] = useState(false);\n  const [sizeFraction, setSizeFraction] = useState(0);\n\n  const availableQuote = openOrdersAccount\n    ? market.quoteSplSizeToNumber(openOrdersAccount.quoteTokenFree)\n    : 0;\n\n  let quoteBalance = (quoteCurrencyBalances || 0) + (availableQuote || 0);\n  let baseBalance = baseCurrencyBalances || 0;\n  let sizeDecimalCount =\n    market?.minOrderSize && getDecimalCount(market.minOrderSize);\n  let priceDecimalCount = market?.tickSize && getDecimalCount(market.tickSize);\n\n  useEffect(() => {\n    setChangeOrderRef && setChangeOrderRef(doChangeOrder);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setChangeOrderRef]);\n\n  useEffect(() => {\n    onSliderChange(sizeFraction);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [side]);\n\n  useEffect(() => {\n    updateSizeFraction();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [price, baseSize]);\n\n  const onSetBaseSize = (baseSize) => {\n    setBaseSize(baseSize);\n    const rawQuoteSize = baseSize * (price || markPrice);\n    const quoteSize =\n      baseSize && roundToDecimal(rawQuoteSize, sizeDecimalCount);\n    setQuoteSize(quoteSize);\n  };\n\n  const onSetQuoteSize = (quoteSize) => {\n    setQuoteSize(quoteSize);\n    const rawBaseSize = quoteSize / price;\n    const baseSize = quoteSize && roundToDecimal(rawBaseSize, sizeDecimalCount);\n    setBaseSize(baseSize);\n  };\n\n  const doChangeOrder = ({ size, price }) => {\n    const formattedSize = size && roundToDecimal(size, sizeDecimalCount);\n    const formattedPrice = price && roundToDecimal(price, priceDecimalCount);\n    formattedSize && onSetBaseSize(formattedSize);\n    formattedPrice && setPrice(formattedPrice);\n  };\n\n  const updateSizeFraction = () => {\n    const rawMaxSize = side === 'buy' ? quoteBalance / price : baseBalance;\n    const maxSize = floorToDecimal(rawMaxSize, sizeDecimalCount);\n    const sizeFraction = Math.min((baseSize / maxSize) * 100, 100);\n    setSizeFraction(sizeFraction);\n  };\n\n  const onSliderChange = (value) => {\n    if (!price && markPrice) {\n      let formattedMarkPrice = priceDecimalCount\n        ? markPrice.toFixed(priceDecimalCount)\n        : markPrice;\n      setPrice(formattedMarkPrice);\n    }\n\n    let newSize;\n    if (side === 'buy') {\n      if (price || markPrice) {\n        newSize = ((quoteBalance / (price || markPrice)) * value) / 100;\n      }\n    } else {\n      newSize = (baseBalance * value) / 100;\n    }\n\n    // round down to minOrderSize increment\n    let formatted = floorToDecimal(newSize, sizeDecimalCount);\n\n    onSetBaseSize(formatted);\n  };\n\n  const postOnChange = (checked) => {\n    if (checked) {\n      setIoc(false);\n    }\n    setPostOnly(checked);\n  };\n  const iocOnChange = (checked) => {\n    if (checked) {\n      setPostOnly(false);\n    }\n    setIoc(checked);\n  };\n\n  async function onSubmit() {\n    const parsedPrice = parseFloat(price);\n    const parsedSize = parseFloat(baseSize);\n\n    setSubmitting(true);\n    try {\n      await placeOrder({\n        side,\n        price: parsedPrice,\n        size: parsedSize,\n        orderType: ioc ? 'ioc' : postOnly ? 'postOnly' : 'limit',\n        market,\n        connection: sendConnection,\n        wallet,\n        baseCurrencyAccount: baseCurrencyAccount?.pubkey,\n        quoteCurrencyAccount: quoteCurrencyAccount?.pubkey,\n        onConfirmCallBack: () => {\n          setPrice(null);\n          onSetBaseSize(null);\n        },\n      });\n    } catch (e) {\n      console.warn(e);\n      notify({ message: 'Error placing order: ' + e.message, type: 'error' });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <FloatingElement\n      style={{ display: 'flex', flexDirection: 'column', ...style }}\n    >\n      <div style={{ flex: 1 }}>\n        <Radio.Group\n          onChange={(e) => setSide(e.target.value)}\n          value={side}\n          buttonStyle=\"solid\"\n          style={{\n            marginBottom: 8,\n            width: '100%',\n          }}\n        >\n          <Radio.Button\n            value=\"buy\"\n            style={{\n              width: '50%',\n              textAlign: 'center',\n              background: side === 'buy' ? '#02bf76' : '',\n              borderColor: side === 'buy' ? '#02bf76' : '',\n            }}\n          >\n            BUY\n          </Radio.Button>\n          <Radio.Button\n            value=\"sell\"\n            style={{\n              width: '50%',\n              textAlign: 'center',\n              background: side === 'sell' ? '#F23B69' : '',\n              borderColor: side === 'sell' ? '#F23B69' : '',\n            }}\n          >\n            SELL\n          </Radio.Button>\n        </Radio.Group>\n        <Input\n          style={{ textAlign: 'right', paddingBottom: 8 }}\n          addonBefore={<div style={{ width: '30px' }}>Price</div>}\n          suffix={\n            <span style={{ fontSize: 10, opacity: 0.5 }}>{baseCurrency}</span>\n          }\n          value={price}\n          type=\"number\"\n          step={market?.tickSize || 1}\n          onChange={(e) => setPrice(e.target.value)}\n        />\n        <Input.Group compact style={{ paddingBottom: 8 }}>\n          <Input\n            style={{ width: 'calc(50% + 30px)', textAlign: 'right' }}\n            addonBefore={<div style={{ width: '30px' }}>Size</div>}\n            suffix={\n              <span style={{ fontSize: 10, opacity: 0.5 }}>{baseCurrency}</span>\n            }\n            value={baseSize}\n            type=\"number\"\n            step={market?.minOrderSize || 1}\n            onChange={(e) => onSetBaseSize(e.target.value)}\n          />\n          <Input\n            style={{ width: 'calc(50% - 30px)', textAlign: 'right' }}\n            suffix={\n              <span style={{ fontSize: 10, opacity: 0.5 }}>\n                {quoteCurrency}\n              </span>\n            }\n            value={quoteSize}\n            type=\"number\"\n            step={market?.minOrderSize || 1}\n            onChange={(e) => onSetQuoteSize(e.target.value)}\n          />\n        </Input.Group>\n        <Slider\n          value={sizeFraction}\n          tipFormatter={(value) => `${value}%`}\n          marks={sliderMarks}\n          onChange={onSliderChange}\n        />\n        <div style={{ paddingTop: 18 }}>\n          {'POST '}\n          <Switch\n            checked={postOnly}\n            onChange={postOnChange}\n            style={{ marginRight: 40 }}\n          />\n          {'IOC '}\n          <Switch checked={ioc} onChange={iocOnChange} />\n        </div>\n      </div>\n      {side === 'buy' ? (\n        <BuyButton\n          disabled={!price || !baseSize}\n          onClick={onSubmit}\n          block\n          type=\"primary\"\n          size=\"large\"\n          loading={submitting}\n        >\n          Buy {baseCurrency}\n        </BuyButton>\n      ) : (\n        <SellButton\n          disabled={!price || !baseSize}\n          onClick={onSubmit}\n          block\n          type=\"primary\"\n          size=\"large\"\n          loading={submitting}\n        >\n          Sell {baseCurrency}\n        </SellButton>\n      )}\n    </FloatingElement>\n  );\n}\n","import { Col, Row } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useMarket, useTrades } from '../utils/markets';\nimport { getDecimalCount } from '../utils/utils';\nimport FloatingElement from './layout/FloatingElement';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\nconst SizeTitle = styled(Row)`\n  padding: 20px 0 14px;\n  color: #434a59;\n`;\n\n// TODO: Put in some scrolling\nconst TradesContainer = styled.div`\n  height: calc(100% - 75px);\n  margin-right: -20px;\n  padding-right: 5px;\n  overflow-y: scroll;\n`;\n\nexport default function PublicTrades({ smallScreen }) {\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const trades = useTrades();\n  return (\n    <FloatingElement\n      style={\n        smallScreen\n          ? { flex: 1 }\n          : { marginTop: '10px', height: 'calc(100% - 520px)' }\n      }\n    >\n      <Title>Recent Market trades</Title>\n      <SizeTitle>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          Size ({baseCurrency})\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          Price ({quoteCurrency}){' '}\n        </Col>\n      </SizeTitle>\n      {!!trades && (\n        <TradesContainer>\n          {trades.map((trade, i) => (\n            <Row key={i} style={{ marginBottom: 4 }}>\n              <Col span={12} style={{ textAlign: 'left' }}>\n                {market?.minOrderSize && !isNaN(trade.size)\n                  ? Number(trade.size).toFixed(\n                      getDecimalCount(market.minOrderSize),\n                    )\n                  : trade.size}\n              </Col>\n              <Col\n                span={12}\n                style={{\n                  textAlign: 'right',\n                  color: trade.side === 'buy' ? '#41C77A' : '#F23B69',\n                }}\n              >\n                {market?.tickSize && !isNaN(trade.price)\n                  ? Number(trade.price).toFixed(\n                      getDecimalCount(market.tickSize),\n                    )\n                  : trade.price}\n              </Col>\n            </Row>\n          ))}\n        </TradesContainer>\n      )}\n    </FloatingElement>\n  );\n}\n","import React from 'react';\nimport { Button } from 'antd';\nimport { LinkOutlined } from '@ant-design/icons';\n\nexport default function LinkAddress({ title, address }) {\n  return (\n    <div>\n      {title && <p style={{ color: 'white' }}>{title}</p>}\n      <Button\n        type=\"link\"\n        icon={<LinkOutlined />}\n        href={'https://explorer.solana.com/address/' + address}\n        target=\"_blank\"\n      >\n        {address}\n      </Button>\n    </div>\n  );\n}\n","import { Button, Divider, Spin } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport {\n  useGetOpenOrdersForDeprecatedMarkets,\n  useBalancesForDeprecatedMarkets,\n  useUnmigratedOpenOrdersAccounts,\n} from '../utils/markets';\nimport FloatingElement from './layout/FloatingElement';\nimport CheckOutlined from '@ant-design/icons/lib/icons/CheckOutlined';\nimport BalancesTable from './UserInfoTable/BalancesTable';\nimport OpenOrderTable from './UserInfoTable/OpenOrderTable';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\n\nexport default function DeprecatedMarketsInstructions({ switchToLiveMarkets }) {\n  const balances = useBalancesForDeprecatedMarkets();\n  const {\n    openOrders,\n    loaded,\n    refreshOpenOrders,\n  } = useGetOpenOrdersForDeprecatedMarkets();\n  const { refresh } = useUnmigratedOpenOrdersAccounts();\n  const needToCancelOrders = !openOrders || openOrders.length > 0;\n  const filteredBalances =\n    balances &&\n    balances.filter(({ orders, unsettled }) => orders > 0 || unsettled > 0);\n  const needToSettleFunds = filteredBalances && filteredBalances.length > 0;\n  return (\n    <FloatingElement>\n      <Title>Migrate off of deprecated market</Title>\n      {!balances ? (\n        <Spin size=\"large\" />\n      ) : (\n        <>\n          <Divider>\n            {!needToCancelOrders && <CheckOutlined />} Cancel your orders\n          </Divider>\n          {needToCancelOrders ? (\n            loaded ? (\n              <OpenOrderTable\n                openOrders={openOrders}\n                onCancelSuccess={() => {\n                  setTimeout(() => {\n                    refresh();\n                    refreshOpenOrders();\n                  }, 1500); // Wait so that on-chain account state reflects the update\n                }}\n              />\n            ) : (\n              <Spin size=\"large\" />\n            )\n          ) : null}\n          <Divider>\n            {!needToSettleFunds && <CheckOutlined />} Settle your funds\n          </Divider>\n          {needToSettleFunds && (\n            <BalancesTable\n              balances={filteredBalances}\n              hideWalletBalance\n              showMarket\n              onSettleSuccess={() => {\n                setTimeout(refresh, 1500); // Wait so that on-chain account state reflects the update\n              }}\n            />\n          )}\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\n            <Button\n              onClick={switchToLiveMarkets}\n              disabled={needToSettleFunds || needToCancelOrders}\n            >\n              Switch to live markets\n            </Button>\n          </div>\n        </>\n      )}\n    </FloatingElement>\n  );\n}\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Col, Popover, Row, Select, Typography, Button } from 'antd';\nimport styled from 'styled-components';\nimport Orderbook from '../components/Orderbook';\nimport UserInfoTable from '../components/UserInfoTable';\nimport StandaloneBalancesDisplay from '../components/StandaloneBalancesDisplay';\nimport {\n  useMarket,\n  useMarketsList,\n  useUnmigratedDeprecatedMarkets,\n} from '../utils/markets';\nimport TradeForm from '../components/TradeForm';\nimport TradesTable from '../components/TradesTable';\nimport LinkAddress from '../components/LinkAddress';\nimport DeprecatedMarketsInstructions from '../components/DeprecatedMarketsInstructions';\nimport { InfoCircleOutlined } from '@ant-design/icons';\n\nconst { Option } = Select;\n\nconst Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 16px 16px;\n  .borderNone .ant-select-selector {\n    border: none !important;\n  }\n`;\n\nexport default function TradePage() {\n  const { marketName, market } = useMarket();\n  const markets = useMarketsList();\n  const [handleDeprecated, setHandleDeprecated] = useState(false);\n  const deprecatedMarkets = useUnmigratedDeprecatedMarkets();\n  const [dimensions, setDimensions] = useState({\n    height: window.innerHeight,\n    width: window.innerWidth,\n  });\n\n  useEffect(() => {\n    document.title = `${marketName} — Serum`;\n  }, [marketName]);\n\n  const changeOrderRef = useRef();\n\n  useEffect(() => {\n    const handleResize = () => {\n      setDimensions({\n        height: window.innerHeight,\n        width: window.innerWidth,\n      });\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const width = dimensions?.width;\n  const componentProps = {\n    onChangeOrderRef: (ref) => (changeOrderRef.current = ref),\n    onPrice: (price) =>\n      changeOrderRef.current && changeOrderRef.current({ price }),\n    onSize: (size) =>\n      changeOrderRef.current && changeOrderRef.current({ size }),\n  };\n  const getComponent = useCallback(() => {\n    if (handleDeprecated) {\n      return (\n        <DeprecatedMarketsPage\n          switchToLiveMarkets={() => setHandleDeprecated(false)}\n        />\n      );\n    } else if (width < 1000) {\n      return <RenderSmaller {...componentProps} />;\n    } else if (width < 1450) {\n      return <RenderSmall {...componentProps} />;\n    } else {\n      return <RenderNormal {...componentProps} />;\n    }\n  }, [width, componentProps, handleDeprecated]);\n\n  return (\n    <>\n      <Wrapper>\n        <Row\n          align=\"middle\"\n          style={{ paddingLeft: 5, paddingRight: 5 }}\n          gutter={16}\n        >\n          <Col>\n            <MarketSelector markets={markets} placeholder={'Select market'} />\n          </Col>\n          {market ? (\n            <Col>\n              <Popover\n                content={<LinkAddress address={market.publicKey.toBase58()} />}\n                placement=\"bottomRight\"\n                title=\"Market address\"\n                trigger=\"click\"\n              >\n                <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n              </Popover>\n            </Col>\n          ) : null}\n          {deprecatedMarkets && deprecatedMarkets.length > 0 && (\n            <React.Fragment>\n              <Col>\n                <Typography>\n                  You have unsettled funds on deprecated markets! Please go\n                  through them to claim your funds.\n                </Typography>\n              </Col>\n              <Col>\n                <Button onClick={() => setHandleDeprecated(!handleDeprecated)}>\n                  {handleDeprecated\n                    ? 'View live markets'\n                    : 'Handle deprecated markets'}\n                </Button>\n              </Col>\n            </React.Fragment>\n          )}\n        </Row>\n        {getComponent()}\n      </Wrapper>\n    </>\n  );\n}\n\nfunction MarketSelector({ markets, placeholder }) {\n  const { market, setMarketAddress } = useMarket();\n\n  const extractBase = (a) => a.split('/')[0];\n  const extractQuote = (a) => a.split('/')[1];\n\n  return (\n    <Select\n      showSearch\n      size={'large'}\n      style={{ width: 200 }}\n      placeholder={placeholder || 'Select a market'}\n      optionFilterProp=\"name\"\n      onSelect={setMarketAddress}\n      listHeight={400}\n      value={markets\n        .find(\n          (proposedMarket) =>\n            market?.address && proposedMarket.address.equals(market.address),\n        )\n        ?.address?.toBase58()}\n      filterOption={(input, option) =>\n        option.name.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      }\n    >\n      {markets\n        .sort((a, b) =>\n          extractQuote(a.name) === 'USDT' && extractQuote(b.name) !== 'USDT'\n            ? -1\n            : extractQuote(a.name) !== 'USDT' && extractQuote(b.name) === 'USDT'\n            ? 1\n            : 0,\n        )\n        .sort((a, b) =>\n          extractBase(a.name) < extractBase(b.name)\n            ? -1\n            : extractBase(a.name) > extractBase(b.name)\n            ? 1\n            : 0,\n        )\n        .map(({ address, name, deprecated }, i) => (\n          <Option\n            value={address.toBase58()}\n            key={address}\n            name={name}\n            style={{\n              padding: '10px 0',\n              textAlign: 'center',\n              backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\n            }}\n          >\n            {name} {deprecated ? ' (Deprecated)' : null}\n          </Option>\n        ))}\n    </Select>\n  );\n}\n\nconst DeprecatedMarketsPage = ({ switchToLiveMarkets }) => {\n  return (\n    <>\n      <Row>\n        <Col flex=\"auto\">\n          <DeprecatedMarketsInstructions\n            switchToLiveMarkets={switchToLiveMarkets}\n          />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst RenderNormal = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <Row\n      style={{\n        minHeight: '750px',\n        flexWrap: 'nowrap',\n      }}\n    >\n      <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n        <UserInfoTable />\n      </Col>\n      <Col flex={'360px'} style={{ height: '100%' }}>\n        <Orderbook smallScreen={false} onPrice={onPrice} onSize={onSize} />\n        <TradesTable smallScreen={false} />\n      </Col>\n      <Col\n        flex=\"400px\"\n        style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n      >\n        <TradeForm setChangeOrderRef={onChangeOrderRef} />\n        <StandaloneBalancesDisplay />\n      </Col>\n    </Row>\n  );\n};\n\nconst RenderSmall = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <>\n      <Row\n        style={{\n          height: '750px',\n        }}\n      >\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n          <Orderbook\n            smallScreen={true}\n            depth={12}\n            onPrice={onPrice}\n            onSize={onSize}\n          />\n        </Col>\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n          <TradesTable smallScreen={true} />\n        </Col>\n        <Col\n          flex=\"400px\"\n          style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n        >\n          <TradeForm setChangeOrderRef={onChangeOrderRef} />\n          <StandaloneBalancesDisplay />\n        </Col>\n      </Row>\n      <Row>\n        <Col flex=\"auto\">\n          <UserInfoTable />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst RenderSmaller = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <>\n      <Row>\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <TradeForm style={{ flex: 1 }} setChangeOrderRef={onChangeOrderRef} />\n        </Col>\n        <Col xs={24} sm={12}>\n          <StandaloneBalancesDisplay />\n        </Col>\n      </Row>\n      <Row style={{ minHeight: '500px' }}>\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <Orderbook smallScreen={true} onPrice={onPrice} onSize={onSize} />\n        </Col>\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <TradesTable smallScreen={true} />\n        </Col>\n      </Row>\n      <Row>\n        <Col flex=\"auto\">\n          <UserInfoTable />\n        </Col>\n      </Row>\n    </>\n  );\n};\n","import React from 'react';\nimport { useOpenOrdersForAllMarkets } from '../utils/markets';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport OpenOrderTable from '../components/UserInfoTable/OpenOrderTable';\n\nexport default function OpenOrdersPage() {\n  const [openOrders] = useOpenOrdersForAllMarkets();\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <OpenOrderTable openOrders={openOrders} />\n    </FloatingElement>\n  );\n}\n","import React from 'react';\nimport DataTable from '../layout/DataTable';\n\nexport default function WalletBalancesTable({\n  loaded = false,\n  walletBalances,\n}) {\n  const columns = [\n    {\n      title: 'Coin',\n      dataIndex: 'key',\n      key: 'key',\n    },\n    {\n      title: 'Wallet Balance',\n      dataIndex: 'wallet',\n      key: 'wallet',\n    },\n  ];\n  return (\n    <DataTable\n      emptyLabel=\"No balances\"\n      dataSource={walletBalances}\n      columns={columns}\n      pagination={false}\n      loading={!loaded}\n    />\n  );\n}\n","import { Button } from 'antd';\nimport React from 'react';\nimport DataTable from '../layout/DataTable';\nimport { useConnection } from '../../utils/connection';\nimport { useWallet } from '../../utils/wallet';\nimport { settleFunds } from '../../utils/send';\n\nexport default function AccountsTable({ accountBalances }) {\n  const connection = useConnection();\n  const { wallet } = useWallet();\n\n  async function onSettleFunds(account) {\n    const {\n      market,\n      openOrdersAccount,\n      baseCurrencyAccount,\n      quoteCurrencyAccount,\n    } = account;\n    return await settleFunds({\n      market,\n      openOrders: openOrdersAccount,\n      connection,\n      wallet,\n      baseCurrencyAccount,\n      quoteCurrencyAccount,\n    });\n  }\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'key',\n      key: 'key',\n    },\n    {\n      title: 'Orders',\n      dataIndex: 'orders',\n      key: 'orders',\n    },\n    {\n      title: 'Unsettled',\n      dataIndex: 'unsettled',\n      key: 'unsettled',\n    },\n    {\n      key: 'action',\n      render: (account) => (\n        <div style={{ textAlign: 'right' }}>\n          <Button\n            ghost\n            style={{ marginRight: 12 }}\n            onClick={() => onSettleFunds(account)}\n          >\n            Settle\n          </Button>\n        </div>\n      ),\n    },\n  ];\n  return (\n    <DataTable\n      emptyLabel=\"No balances\"\n      dataSource={accountBalances}\n      columns={columns.map((data) => ({\n        ...data,\n        key: `${data.market}${data.coin}`,\n      }))}\n      pagination={false}\n    />\n  );\n}\n","import React from 'react';\nimport { Tabs } from 'antd';\nimport {\n  useWalletBalancesForAllMarkets,\n  useOpenOrderAccountBalancesForAllMarkets,\n} from '../utils/markets';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport WalletBalancesTable from '../components/UserInfoTable/WalletBalancesTable';\nimport AccountsTable from '../components/UserInfoTable/AccountsTable';\n\nconst { TabPane } = Tabs;\n\nexport default function BalancesPage() {\n  const [\n    walletBalances,\n    loadedWalletBalances,\n  ] = useWalletBalancesForAllMarkets();\n  const [\n    accountBalances,\n    accountBalancesLoaded,\n  ] = useOpenOrderAccountBalancesForAllMarkets();\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <Tabs defaultActiveKey=\"walletBalances\">\n        <TabPane tab=\"Wallet Balances\" key=\"walletBalances\">\n          <WalletBalancesTable\n            loaded={loadedWalletBalances}\n            walletBalances={walletBalances}\n          />\n        </TabPane>\n        <TabPane tab=\"Market balances\" key=\"marketBalances\">\n          <AccountsTable\n            loaded={accountBalancesLoaded}\n            accountBalances={accountBalances}\n          />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n","import { InfoCircleOutlined, UserOutlined } from '@ant-design/icons';\nimport { Button, Menu, Popover, Select } from 'antd';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport logo from '../assets/logo.svg';\nimport styled from 'styled-components';\nimport { useWallet, WALLET_PROVIDERS } from '../utils/wallet';\nimport { ENDPOINTS, useConnectionConfig } from '../utils/connection';\nimport LinkAddress from './LinkAddress';\n\nconst Wrapper = styled.div`\n  background-color: #0d1017;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  padding: 0px 30px;\n  flex-wrap: wrap;\n`;\nconst LogoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  color: #2abdd2;\n  font-weight: bold;\n  cursor: pointer;\n  img {\n    height: 30px;\n    margin-right: 8px;\n  }\n`;\n\nexport default function TopBar() {\n  const [current, setCurrent] = useState('/');\n  const { connected, wallet, providerUrl, setProvider } = useWallet();\n  const { endpoint, setEndpoint } = useConnectionConfig();\n  const location = useLocation();\n  const history = useHistory();\n\n  const publicKey = wallet?.publicKey?.toBase58();\n\n  const handleClick = useCallback(\n    (e) => {\n      history.push(e.key);\n    },\n    [history],\n  );\n\n  useEffect(() => {\n    if (location.pathname.includes('/orders')) {\n      setCurrent('/orders');\n    } else if (location.pathname.includes('/balances')) {\n      setCurrent('/balances');\n    }\n  }, [location]);\n\n  return (\n    <Wrapper>\n      <LogoWrapper>\n        <img src={logo} alt=\"\" />\n        {'SERUM'}\n      </LogoWrapper>\n      <Menu\n        mode=\"horizontal\"\n        onClick={handleClick}\n        selectedKeys={[current]}\n        style={{\n          borderBottom: 'none',\n          backgroundColor: 'transparent',\n          display: 'flex',\n          alignItems: 'flex-end',\n          flex: 1,\n        }}\n      >\n        <Menu.Item key=\"/\">TRADE</Menu.Item>\n      </Menu>\n      <div>\n        <Select\n          onSelect={setEndpoint}\n          value={endpoint}\n          style={{ marginRight: 8 }}\n        >\n          {ENDPOINTS.map(({ name, endpoint }) => (\n            <Select.Option value={endpoint} key={endpoint}>\n              {name}\n            </Select.Option>\n          ))}\n        </Select>\n      </div>\n      <div>\n        <Select onSelect={setProvider} value={providerUrl}>\n          {WALLET_PROVIDERS.map(({ name, url }) => (\n            <Select.Option value={url} key={url}>\n              {name}\n            </Select.Option>\n          ))}\n        </Select>\n      </div>\n      <div>\n        <Button\n          type=\"text\"\n          size=\"large\"\n          onClick={connected ? wallet.disconnect : wallet.connect}\n          style={{ color: '#2abdd2' }}\n        >\n          <UserOutlined />\n          {!connected ? 'Connect wallet' : 'Disconnect'}\n        </Button>\n        {connected && (\n          <Popover\n            content={<LinkAddress address={publicKey} />}\n            placement=\"bottomRight\"\n            title=\"Wallet public key\"\n            trigger=\"click\"\n          >\n            <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n          </Popover>\n        )}\n      </div>\n    </Wrapper>\n  );\n}\n","export const helpUrls = {\n  customerSupport: 'https://t.me/ProjectSerum',\n  customerSupportZh: 'https://t.me/ProjectSerum_Chinese',\n  contactEmail: 'mailto:contact@projectserum.com',\n  discord: 'https://discord.gg/MxZFT4v',\n  telegram: 'https://t.me/ProjectSerum',\n  github: 'https://github.com/project-serum',\n  projectSerum: 'https://projectserum.com/',\n  developerResources: 'https://projectserum.com/developer-resources',\n  solanaBeach: 'https://solanabeach.io',\n};\n","import React from 'react';\nimport { Layout, Row, Col, Grid } from 'antd';\nimport Link from './Link';\nimport { helpUrls } from './HelpUrls';\nconst { Footer } = Layout;\nconst { useBreakpoint } = Grid;\n\nconst footerElements = [\n  {\n    description: 'Serum Developer Resources',\n    link: helpUrls.developerResources,\n  },\n  { description: 'Discord', link: helpUrls.discord },\n  { description: 'Telegram', link: helpUrls.telegram },\n  { description: 'GitHub', link: helpUrls.github },\n  { description: 'Project Serum', link: helpUrls.projectSerum },\n  { description: 'Solana Network', link: helpUrls.solanaBeach },\n];\n\nexport const CustomFooter = () => {\n  const smallScreen = !useBreakpoint().lg;\n\n  return (\n    <Footer\n      style={{\n        height: '45px',\n        paddingBottom: 10,\n        paddingTop: 10,\n      }}\n    >\n      <Row align=\"middle\" gutter={[16, 4]}>\n        {!smallScreen && (\n          <>\n            <Col flex=\"auto\" />\n            {footerElements.map((elem, index) => {\n              return (\n                <Col key={index + ''}>\n                  <Link external to={elem.link}>\n                    {elem.description}\n                  </Link>\n                </Col>\n              );\n            })}\n          </>\n        )}\n        <Col flex=\"auto\">{/*  <DexProgramSelector />*/}</Col>\n      </Row>\n    </Footer>\n  );\n};\n","import { Layout } from 'antd';\nimport React from 'react';\nimport TopBar from './TopBar';\nimport { CustomFooter as Footer } from './Footer';\nconst { Header, Content } = Layout;\n\nexport default function BasicLayout({ children }) {\n  return (\n    <React.Fragment>\n      <Layout\n        style={{ display: 'flex', minHeight: '100vh', flexDirection: 'column' }}\n      >\n        <Header style={{ padding: 0, minHeight: 64, height: 'unset' }}>\n          <TopBar />\n        </Header>\n        <Content style={{ flex: 1 }}>{children}</Content>\n        <Footer />\n      </Layout>\n    </React.Fragment>\n  );\n}\n","import { HashRouter, Route } from 'react-router-dom';\nimport TradePage from './pages/TradePage';\nimport OpenOrdersPage from './pages/OpenOrdersPage';\nimport React from 'react';\nimport BalancesPage from './pages/BalancesPage';\nimport BasicLayout from './components/BasicLayout';\n\nexport function Routes() {\n  return (\n    <HashRouter basename={'/'}>\n      <Route exact path=\"/\" component={TradePageContents} />\n      <Route exact path=\"/orders\" component={OpenOrdersPageContents} />\n      <Route exact path=\"/balances\" component={BalancesPageContents} />\n    </HashRouter>\n  );\n}\n\nfunction TradePageContents() {\n  return (\n    <BasicLayout>\n      <TradePage />\n    </BasicLayout>\n  );\n}\n\nfunction OpenOrdersPageContents() {\n  return (\n    <BasicLayout>\n      <OpenOrdersPage />\n    </BasicLayout>\n  );\n}\n\nfunction BalancesPageContents() {\n  return (\n    <BasicLayout>\n      <BalancesPage />\n    </BasicLayout>\n  );\n}\n","import React, { Suspense } from 'react';\nimport './App.less';\nimport { ConnectionProvider } from './utils/connection';\nimport { MarketProvider } from './utils/markets';\nimport { WalletProvider } from './utils/wallet';\nimport { GlobalStyle } from './global_style';\nimport { Spin } from 'antd';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { Routes } from './routes';\n\nexport default function App() {\n  return (\n    <Suspense fallback={() => <Spin size=\"large\" />}>\n      <GlobalStyle />\n      <ErrorBoundary>\n        <ConnectionProvider>\n          <MarketProvider>\n            <WalletProvider>\n              <Suspense fallback={() => <Spin size=\"large\" />}>\n                <Routes />\n              </Suspense>\n            </WalletProvider>\n          </MarketProvider>\n        </ConnectionProvider>\n      </ErrorBoundary>\n    </Suspense>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}