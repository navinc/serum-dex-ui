{"version":3,"sources":["utils/markets.js","utils/tokens.js","assets/logo.svg","utils/utils.js","utils/connection.js","utils/notifications.js","global_style.ts","components/ErrorBoundary.jsx","utils/useInterval.js","components/layout/FloatingElement.jsx","components/Orderbook.jsx","utils/usePrevious.js","components/layout/DataTable.jsx","components/UserInfoTable/BalancesTable.jsx","components/UserInfoTable/OpenOrderTable.jsx","components/UserInfoTable/FillsTable.jsx","components/UserInfoTable/FeesTable.js","components/UserInfoTable/index.jsx","components/DepositDialog.jsx","components/StandaloneBalancesDisplay.jsx","components/TradeForm.jsx","components/TradesTable.jsx","components/LinkAddress.jsx","components/DeprecatedMarketsInstructions.js","components/CustomMarketDialog.jsx","pages/TradePage.jsx","pages/OpenOrdersPage.jsx","components/UserInfoTable/WalletBalancesTable.jsx","components/UserInfoTable/AccountsTable.jsx","pages/BalancesPage.jsx","utils/preferences.js","components/Settings.jsx","components/TopBar.js","components/HelpUrls.js","components/Footer.jsx","components/BasicLayout.js","pages/ListNewMarketPage.jsx","routes.js","App.js","serviceWorker.js","index.js","utils/wallet.js","utils/fetch-loop.js","utils/send.js","components/Link.js"],"names":["USE_MARKETS","MARKETS","useMarketsList","filter","deprecated","useAllMarkets","customMarkets","connection","useConnection","useState","markets","setMarkets","useEffect","a","getMarketInfos","marketInfo","Market","load","address","programId","market","push","marketName","name","notify","message","description","type","getAllMarkets","useUnmigratedOpenOrdersAccounts","wallet","useWallet","publicKey","console","log","deprecatedOpenOrdersAccounts","deprecatedProgramIds","Array","from","Set","map","toBase58","publicKeyStr","PublicKey","OpenOrders","findForOwner","openOrdersAccounts","concat","openOrders","baseTokenTotal","toNumber","quoteTokenTotal","some","equals","cacheKey","tuple","useAsyncData","refreshInterval","_VERY_SLOW_REFRESH_INTERVAL","accounts","refresh","clearCache","refreshCache","MarketContext","React","createContext","DEFAULT_MARKET","find","getMarketDetails","otherMarket","baseCurrency","baseMintAddress","TOKEN_MINTS","token","baseLabel","quoteCurrency","quoteMintAddress","quoteLabel","MarketProvider","children","useLocalStorageState","marketAddress","setMarketAddress","setCustomMarkets","setMarket","_decoded","ownAddress","then","catch","e","Provider","value","useMarket","useContext","useMarkPrice","markPrice","setMarkPrice","useOrderbook","orderbook","trades","useTrades","bb","bids","length","Number","ba","asks","last","price","sort","b","_useUnfilteredTrades","limit","getUnfilteredTrades","loadFills","useOrderbookAccounts","bidData","useAccountData","askData","bidOrderbook","Orderbook","decode","askOrderbook","depth","getL2","useOpenOrdersAccounts","fast","connected","getOpenOrdersAccounts","findOpenOrdersAccountsForOwner","useSelectedOpenOrdersAccount","useTokenAccounts","getTokenAccountInfo","getSelectedTokenAccountForMint","mint","filtered","effectiveMint","useSelectedQuoteCurrencyAccount","useSelectedBaseCurrencyAccount","useQuoteCurrencyBalances","quoteCurrencyAccount","useAccountInfo","pubkey","accountInfo","loaded","TokenInstructions","WRAPPED_SOL_MINT","lamports","quoteSplSizeToNumber","BN","data","slice","useBaseCurrencyBalances","baseCurrencyAccount","baseSplSizeToNumber","useOpenOrders","openOrdersAccount","filterForOpenOrders","order","eventFlags","maker","trade","side","useFeeDiscountKeys","findFeeDiscountKeys","useFills","fills","fill","useOpenOrdersForAllMarkets","allMarkets","orders","marketData","Promise","all","loadBids","loadAsks","ordersForMarket","openOrdersAddress","useBalances","baseCurrencyBalances","quoteCurrencyBalances","baseExists","baseTokenFree","quoteExists","quoteTokenFree","key","coin","sub","unsettled","useWalletBalancesForAllMarkets","balances","includes","split","balance","getCurrencyBalance","baseBalance","quoteBalance","findBaseTokenAccountsForOwner","findQuoteTokenAccountsForOwner","currencyAccounts","currencyAccount","getTokenAccountBalance","tokenAccountBalances","uiAmount","useOpenOrderAccountBalancesForAllMarkets","openOrderAccounts","baseCurrencyAccounts","quoteCurrencyAccounts","openOrderAccountBalances","forEach","inOrdersBase","inOrdersQuote","unsettledBase","unsettledQuote","useUnmigratedDeprecatedMarkets","marketsList","deps","m","useUnmigratedDeprecatedMarketsInner","getMarket","x","toString","openOrdersList","useGetOpenOrdersForDeprecatedMarkets","marketsAndOrders","getOrders","loadOrdersForOwner","flat","refreshOpenOrders","useBalancesForDeprecatedMarkets","customMarketsInfo","ACCOUNT_LAYOUT","BufferLayout","MINT_LAYOUT","parseTokenAccountData","owner","amount","parseTokenMintData","decimals","initialized","getOwnedAccountsFilters","memcmp","offset","offsetOf","bytes","dataSize","span","TOKEN_PROGRAM_ID","getOwnedTokenAccounts","filters","_rpcRequest","commitment","resp","error","Error","result","account","executable","bs58","every","filterBytes","ownerAddress","getAccountInfo","splAccounts","parsedSplAccounts","module","exports","isValidPublicKey","sleep","ms","resolve","setTimeout","percentFormat","Intl","NumberFormat","undefined","style","minimumFractionDigits","maximumFractionDigits","floorToDecimal","Math","floor","roundToDecimal","round","getDecimalCount","isNaN","defaultState","storedState","localStorage","getItem","JSON","parse","state","setState","setLocalStorageState","useCallback","newState","removeItem","setItem","stringify","isEqual","obj1","obj2","keys","Object","k","ENDPOINTS","endpoint","clusterApiUrl","accountListenerCount","Map","ConnectionContext","ConnectionProvider","setEndpoint","useMemo","Connection","sendConnection","id","onAccountChange","Account","removeAccountChangeListener","onSlotChange","removeSlotChangeListener","useSendConnection","useConnectionConfig","context","has","get","count","previousData","subscriptionId","setCache","set","currentItem","delete","txid","placement","external","to","color","notification","opacity","backgroundColor","GlobalStyle","createGlobalStyle","Title","Typography","ErrorBoundary","hasError","this","level","props","Component","useInterval","callback","delay","savedCallback","useRef","current","setInterval","clearInterval","Wrapper","styled","div","FloatingElement","SizeTitle","Row","MarkPriceTitle","Line","css","Price","smallScreen","onPrice","onSize","currentOrderbookData","lastOrderbookData","orderbookData","setOrderbookData","getCumulativeOrderbookSide","totalSize","backwards","cumulative","reduce","i","size","cumulativeSize","sizePercent","reverse","sum","total","index","bidsToDisplay","asksToDisplay","flex","height","overflow","textAlign","OrderbookRow","onPriceClick","onSizeClick","MarkPriceComponent","memo","element","classList","contains","add","remove","clearTimeout","formattedSize","minOrderSize","toFixed","formattedPrice","tickSize","ref","marginBottom","onClick","data-width","data-bgcolor","prevProps","nextProps","previousMarkPrice","usePrevious","markPriceColor","formattedMarkPrice","justify","ArrowUpOutlined","marginRight","ArrowDownOutlined","DataTable","dataSource","columns","emptyLabel","pagination","loading","pageSize","renderEmpty","padding","display","justifyContent","alignItems","BalancesTable","showMarket","hideWalletBalance","onSettleSuccess","settleFunds","title","dataIndex","render","ghost","onSettleFunds","CancelButton","Button","OpenOrderTable","onCancelSuccess","cancelId","setCancelId","orderId","cancelOrder","fontWeight","charAt","toUpperCase","icon","DeleteOutlined","cancel","assign","FillsTable","liquidity","FeesTable","feeTier","row","marginLeft","format","getFeeRates","taker","_","SRM_MINT","MSRM_MINT","marginTop","FeeScheduleTable","info","Paragraph","TabPane","Tabs","Index","paddingTop","href","defaultActiveKey","tab","supportsSrmFeeDiscounts","OpenOrdersTab","BalancesTab","DepositDialog","coinMint","depositCoin","onClose","baseOrQuote","providerName","providerUrl","visible","onOk","onCancel","Link","RowBox","Tip","p","ActionButton","StandaloneBalancesDisplay","setBaseOrQuote","currency","Fragment","borderColor","align","paddingBottom","width","block","SellButton","BuyButton","sliderMarks","0","25","50","75","100","TradeForm","setChangeOrderRef","setSide","postOnly","setPostOnly","ioc","setIoc","baseSize","setBaseSize","quoteSize","setQuoteSize","setPrice","submitting","setSubmitting","sizeFraction","setSizeFraction","sizeDecimalCount","priceDecimalCount","doChangeOrder","onSliderChange","updateSizeFraction","onSetBaseSize","rawQuoteSize","rawMaxSize","maxSize","min","newSize","formatted","onSubmit","parsedPrice","parseFloat","parsedSize","placeOrder","orderType","warn","flexDirection","Group","onChange","target","buttonStyle","background","addonBefore","suffix","fontSize","step","compact","rawBaseSize","onSetQuoteSize","tipFormatter","marks","checked","disabled","TradesContainer","PublicTrades","minHeight","LinkAddress","LinkOutlined","rel","DeprecatedMarketsInstructions","switchToLiveMarkets","needToCancelOrders","filteredBalances","needToSettleFunds","Text","CustomMarketDialog","onAddCustomMarket","marketId","setMarketId","marketLabel","setMarketLabel","setBaseLabel","setQuoteLabel","loadingMarket","setLoadingMarket","wellFormedMarketId","marketAccountInfo","resetLabels","finally","knownMarket","knownProgram","knownBaseCurrency","knownQuoteCurrency","canSubmit","onDoClose","params","okText","okButtonProps","placeholder","LoadingOutlined","gutter","Option","Select","OptGroup","TradePage","handleDeprecated","setHandleDeprecated","addMarketVisible","setAddMarketVisible","deprecatedMarkets","window","innerHeight","innerWidth","dimensions","setDimensions","document","changeOrderRef","handleResize","addEventListener","removeEventListener","componentProps","onChangeOrderRef","getComponent","customMarket","newCustomMarkets","paddingLeft","paddingRight","MarketSelector","onDeleteCustomMarket","content","trigger","InfoCircleOutlined","PlusCircleOutlined","extractBase","extractQuote","selectedMarket","proposedMarket","showSearch","optionFilterProp","onSelect","listHeight","filterOption","input","option","toLowerCase","indexOf","label","stopPropagation","nativeEvent","stopImmediatePropagation","DeprecatedMarketsPage","RenderNormal","flexWrap","RenderSmall","RenderSmaller","xs","sm","OpenOrdersPage","WalletBalancesTable","walletBalances","AccountsTable","accountBalances","BalancesPage","loadedWalletBalances","accountBalancesLoaded","PreferencesContext","PreferencesProvider","autoSettleEnabled","setAutoSettleEnabled","tokenAccounts","marketList","autoSettle","settleAllFunds","autoApprove","Settings","usePreferences","LogoWrapper","TopBar","setProvider","location","useLocation","history","useHistory","handleClick","src","logo","alt","mode","selectedKeys","pathname","borderBottom","Item","SettingOutlined","WALLET_PROVIDERS","url","disconnect","connect","UserOutlined","helpUrls","Footer","Layout","useBreakpoint","Grid","footerElements","link","CustomFooter","lg","elem","Header","Content","BasicLayout","ListNewMarketPage","baseLotSize","quoteLotSize","useMintInput","code","baseMintInput","baseMintInfo","quoteMintInput","quoteMintInfo","lotSize","setLotSize","setTickSize","dexProgramId","listedMarket","setListedMarket","listMarket","baseMint","quoteMint","labelCol","wrapperCol","layout","onFinish","initialValue","validateStatus","hasFeedback","trim","colon","htmlType","tooltip","setAddress","help","mintInfo","parsed","Routes","basename","exact","path","component","TradePageContents","OpenOrdersPageContents","BalancesPageContents","App","fallback","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","WalletContext","WalletProvider","setProviderUrl","Wallet","setConnected","on","walletPublicKey","keyToDisplay","substring","pageLoadTime","Date","globalCache","FetchLoopListener","fn","refreshIntervalOnError","FetchLoopInternal","timeoutId","stopped","errored","errors","notifyListeners","waitTime","timeSincePageLoad","visibilityState","hasFocus","random","listeners","listener","previousRefreshInterval","assert","globalLoops","loops","addListener","loop","removeListener","values","asyncFn","useReducer","rerender","initializeOnly","createTokenAccountTransaction","mintPublicKey","newAccount","SystemProgram","getMinimumBalanceForRentExemption","fromPubkey","newAccountPubkey","space","transaction","createAccount","initializeAccount","signer","baseCurrencyAccountPubkey","quoteCurrencyAccountPubkey","createAccountTransaction","createAccountSigner","supportsReferralFees","makeSettleFundsTransaction","settleFundsTransaction","settleFundsSigners","signers","mergeTransactions","sendTransaction","sendingMessage","programIds","_programId","getOpenOrdersAccountsForProgramId","openOrdersAccountsForProgramIds","settleTransactions","transactions","t","s","constructor","cancelOrders","makeMatchOrdersTransaction","makeCancelOrderInstruction","formattedMinOrderSize","formattedTickSize","isIncrement","num","abs","payer","makePlaceOrderTransaction","placeOrderTx","getVaultOwnerAndNonce","nonce","createProgramAddress","toBuffer","toArrayLike","Buffer","vaultOwner","iaddn","requestQueue","eventQueue","baseVault","quoteVault","feeRateBps","quoteDustThreshold","vaultSignerNonce","tx1","Transaction","tx2","getLayout","DexInstructions","initializeMarket","signTransaction","signedTransactions","signedTransaction","sendSignedTransaction","getUnixTs","getTime","sentMessage","successMessage","timeout","getRecentBlockhash","recentBlockhash","blockhash","signPartial","rawTransaction","serialize","startTime","sendRawTransaction","skipPreflight","done","awaitTransactionSignatureConfirmation","reject","onSignature","err","getSignatureStatuses","signatureStatuses","confirmations","rest"],"mappings":"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","file":"static/js/main.42d453e6.chunk.js","sourcesContent":["import {\n  Market,\n  Orderbook,\n  decodeEventQueue,\n  TokenInstructions,\n  MARKETS,\n  TOKEN_MINTS,\n  OpenOrders,\n} from '@project-serum/serum';\nimport { PublicKey } from '@solana/web3.js';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useLocalStorageState } from './utils';\nimport { refreshCache, useAsyncData } from './fetch-loop';\nimport { useAccountData, useAccountInfo, useConnection } from './connection';\nimport { useWallet } from './wallet';\nimport tuple from 'immutable-tuple';\nimport { notify } from './notifications';\nimport { BN } from 'bn.js';\nimport { getTokenAccountInfo } from './tokens';\n\n// Used in debugging, should be false in production\nconst _IGNORE_DEPRECATED = false;\n\nconst USE_MARKETS = _IGNORE_DEPRECATED\n  ? MARKETS.map((m) => ({ ...m, deprecated: false }))\n  : MARKETS;\n\nexport function useMarketsList() {\n  return USE_MARKETS.filter(({ deprecated }) => !deprecated);\n}\n\nexport function useAllMarkets(customMarkets) {\n  const connection = useConnection();\n  const [markets, setMarkets] = useState([]);\n\n  useEffect(() => {\n    const getAllMarkets = async () => {\n      const markets = [];\n      for (let marketInfo of getMarketInfos(customMarkets)) {\n        try {\n          const market = await Market.load(\n            connection,\n            marketInfo.address,\n            {},\n            marketInfo.programId,\n          );\n          markets.push({\n            market,\n            marketName: marketInfo.name,\n            programId: marketInfo.programId,\n          });\n        } catch (e) {\n          notify({\n            message: 'Error loading all market',\n            description: e.message,\n            type: 'error',\n          });\n        }\n      }\n      setMarkets(markets);\n    };\n\n    getAllMarkets();\n  }, [connection]);\n\n  return markets;\n}\n\nexport function useUnmigratedOpenOrdersAccounts() {\n  const connection = useConnection();\n  const { wallet } = useWallet();\n\n  async function getUnmigratedOpenOrdersAccounts() {\n    if (!wallet || !connection || !wallet.publicKey) {\n      return [];\n    }\n    console.log('refreshing useUnmigratedOpenOrdersAccounts');\n    let deprecatedOpenOrdersAccounts = [];\n    const deprecatedProgramIds = Array.from(\n      new Set(\n        USE_MARKETS.filter(\n          ({ deprecated }) => deprecated,\n        ).map(({ programId }) => programId.toBase58()),\n      ),\n    ).map((publicKeyStr) => new PublicKey(publicKeyStr));\n    let programId;\n    for (programId of deprecatedProgramIds) {\n      try {\n        const openOrdersAccounts = await OpenOrders.findForOwner(\n          connection,\n          wallet.publicKey,\n          programId,\n        );\n        deprecatedOpenOrdersAccounts = deprecatedOpenOrdersAccounts.concat(\n          openOrdersAccounts\n            .filter(\n              (openOrders) =>\n                openOrders.baseTokenTotal.toNumber() ||\n                openOrders.quoteTokenTotal.toNumber(),\n            )\n            .filter((openOrders) =>\n              USE_MARKETS.some(\n                (market) =>\n                  market.deprecated && market.address.equals(openOrders.market),\n              ),\n            ),\n        );\n      } catch (e) {\n        console.log(\n          'Error loading deprecated markets',\n          programId?.toBase58(),\n          e.message,\n        );\n      }\n    }\n    // Maybe sort\n    return deprecatedOpenOrdersAccounts;\n  }\n\n  const cacheKey = tuple(\n    'getUnmigratedOpenOrdersAccounts',\n    connection,\n    wallet?.publicKey?.toBase58(),\n  );\n  const [accounts] = useAsyncData(getUnmigratedOpenOrdersAccounts, cacheKey, {\n    refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\n  });\n\n  return {\n    accounts,\n    refresh: (clearCache) => refreshCache(cacheKey, clearCache),\n  };\n}\n\nconst MarketContext = React.createContext(null);\n\nconst _VERY_SLOW_REFRESH_INTERVAL = 5000 * 1000;\n\n// For things that don't really change\nconst _SLOW_REFRESH_INTERVAL = 5 * 1000;\n\n// For things that change frequently\nconst _FAST_REFRESH_INTERVAL = 1000;\n\nexport const DEFAULT_MARKET = USE_MARKETS.find(\n  ({ name, deprecated }) => name === 'SRM/USDT' && !deprecated,\n);\n\nfunction getMarketDetails(market, customMarkets) {\n  if (!market) {\n    return {};\n  }\n  const marketInfos = getMarketInfos(customMarkets);\n  const marketInfo = marketInfos.find((otherMarket) =>\n    otherMarket.address.equals(market.address),\n  );\n  const baseCurrency =\n    (market?.baseMintAddress &&\n      TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\n        ?.name) ||\n    (marketInfo?.baseLabel && `${marketInfo?.baseLabel}*`) ||\n    'UNKNOWN';\n  const quoteCurrency =\n    (market?.quoteMintAddress &&\n      TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\n        ?.name) ||\n    (marketInfo?.quoteLabel && `${marketInfo?.quoteLabel}*`) ||\n    'UNKNOWN';\n\n  return {\n    ...marketInfo,\n    marketName: marketInfo?.name,\n    baseCurrency,\n    quoteCurrency,\n    marketInfo,\n  };\n}\n\nexport function MarketProvider({ children }) {\n  const [marketAddress, setMarketAddress] = useLocalStorageState(\n    'marketAddress',\n    DEFAULT_MARKET.address.toBase58(),\n  );\n  const [customMarkets, setCustomMarkets] = useLocalStorageState(\n    'customMarkets',\n    [],\n  );\n\n  const address = new PublicKey(marketAddress);\n  const connection = useConnection();\n  const marketInfos = getMarketInfos(customMarkets);\n  const marketInfo = marketInfos.find((market) =>\n    market.address.equals(address),\n  );\n\n  // Replace existing market with a non-deprecated one on first load\n  useEffect(() => {\n    if (marketInfo && marketInfo.deprecated) {\n      console.log('Switching markets from deprecated', marketInfo);\n      setMarketAddress(DEFAULT_MARKET.address.toBase58());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const [market, setMarket] = useState();\n  useEffect(() => {\n    if (\n      market &&\n      marketInfo &&\n      market._decoded.ownAddress?.equals(marketInfo?.address)\n    ) {\n      return;\n    }\n    setMarket(null);\n    if (!marketInfo || !marketInfo.address) {\n      notify({\n        message: 'Error loading market',\n        description: 'Please select a market from the dropdown',\n        type: 'error',\n      });\n      return;\n    }\n    Market.load(connection, marketInfo.address, {}, marketInfo.programId)\n      .then(setMarket)\n      .catch((e) =>\n        notify({\n          message: 'Error loading market',\n          description: e.message,\n          type: 'error',\n        }),\n      );\n    // eslint-disable-next-line\n  }, [connection, marketInfo]);\n\n  return (\n    <MarketContext.Provider\n      value={{\n        market,\n        ...getMarketDetails(market, customMarkets),\n        setMarketAddress,\n        customMarkets,\n        setCustomMarkets,\n      }}\n    >\n      {children}\n    </MarketContext.Provider>\n  );\n}\n\nexport function useMarket() {\n  return useContext(MarketContext);\n}\n\nexport function useMarkPrice() {\n  const [markPrice, setMarkPrice] = useState(null);\n\n  const [orderbook] = useOrderbook();\n  const trades = useTrades();\n\n  useEffect(() => {\n    let bb = orderbook?.bids?.length > 0 && Number(orderbook.bids[0][0]);\n    let ba = orderbook?.asks?.length > 0 && Number(orderbook.asks[0][0]);\n    let last = trades?.length > 0 && trades[0].price;\n\n    let markPrice =\n      bb && ba\n        ? last\n          ? [bb, ba, last].sort((a, b) => a - b)[1]\n          : (bb + ba) / 2\n        : null;\n\n    setMarkPrice(markPrice);\n  }, [orderbook, trades]);\n\n  return markPrice;\n}\n\nexport function _useUnfilteredTrades(limit = 10000) {\n  const { market } = useMarket();\n  const connection = useConnection();\n  async function getUnfilteredTrades() {\n    if (!market || !connection) {\n      return null;\n    }\n    return await market.loadFills(connection, limit);\n  }\n  const [trades] = useAsyncData(\n    getUnfilteredTrades,\n    tuple('getUnfilteredTrades', market, connection),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n  return trades;\n  // NOTE: For now, websocket is too expensive since the event queue is large\n  // and updates very frequently\n\n  // let data = useAccountData(market && market._decoded.eventQueue);\n  // if (!data) {\n  //   return null;\n  // }\n  // const events = decodeEventQueue(data, limit);\n  // return events\n  //   .filter((event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0))\n  //   .map(market.parseFillEvent.bind(market));\n}\n\nexport function useOrderbookAccounts() {\n  const { market } = useMarket();\n  let bidData = useAccountData(market && market._decoded.bids);\n  let askData = useAccountData(market && market._decoded.asks);\n  return {\n    bidOrderbook: bidData ? Orderbook.decode(market, bidData) : null,\n    askOrderbook: askData ? Orderbook.decode(market, askData) : null,\n  };\n}\n\nexport function useOrderbook(depth = 20) {\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\n  const { market } = useMarket();\n  const bids =\n    !bidOrderbook || !market\n      ? []\n      : bidOrderbook.getL2(depth).map(([price, size]) => [price, size]);\n  const asks =\n    !askOrderbook || !market\n      ? []\n      : askOrderbook.getL2(depth).map(([price, size]) => [price, size]);\n  return [{ bids, asks }, !!bids || !!asks];\n}\n\n// Want the balances table to be fast-updating, dont want open orders to flicker\n// TODO: Update to use websocket\nexport function useOpenOrdersAccounts(fast = false) {\n  const { market } = useMarket();\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getOpenOrdersAccounts() {\n    if (!connected) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    return await market.findOpenOrdersAccountsForOwner(\n      connection,\n      wallet.publicKey,\n    );\n  }\n  return useAsyncData(\n    getOpenOrdersAccounts,\n    tuple('getOpenOrdersAccounts', wallet, market, connected),\n    { refreshInterval: fast ? _FAST_REFRESH_INTERVAL : _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useSelectedOpenOrdersAccount(fast = false) {\n  const [accounts] = useOpenOrdersAccounts(fast);\n  if (!accounts) {\n    return null;\n  }\n  return accounts[0];\n}\n\nexport function useTokenAccounts() {\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getTokenAccounts() {\n    if (!connected) {\n      return null;\n    }\n    return await getTokenAccountInfo(connection, wallet.publicKey);\n  }\n  return useAsyncData(\n    getTokenAccounts,\n    tuple('getTokenAccounts', wallet, connected),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function getSelectedTokenAccountForMint(accounts, mint) {\n  if (!accounts || !mint) {\n    return null;\n  }\n  const filtered = accounts.filter(({ effectiveMint }) =>\n    mint.equals(effectiveMint),\n  );\n  return filtered && filtered[0];\n}\n\nexport function useSelectedQuoteCurrencyAccount() {\n  const [accounts] = useTokenAccounts();\n  const { market } = useMarket();\n  return getSelectedTokenAccountForMint(accounts, market?.quoteMintAddress);\n}\n\nexport function useSelectedBaseCurrencyAccount() {\n  const [accounts] = useTokenAccounts();\n  const { market } = useMarket();\n  return getSelectedTokenAccountForMint(accounts, market?.baseMintAddress);\n}\n\n// TODO: Update to use websocket\nexport function useQuoteCurrencyBalances() {\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const { market } = useMarket();\n  const [accountInfo, loaded] = useAccountInfo(quoteCurrencyAccount?.pubkey);\n  if (!market || !quoteCurrencyAccount || !loaded) {\n    return null;\n  }\n  if (market.quoteMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\n    return accountInfo?.lamports / 1e9 ?? 0;\n  }\n  return market.quoteSplSizeToNumber(\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\n  );\n}\n\n// TODO: Update to use websocket\nexport function useBaseCurrencyBalances() {\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const { market } = useMarket();\n  const [accountInfo, loaded] = useAccountInfo(baseCurrencyAccount?.pubkey);\n  if (!market || !baseCurrencyAccount || !loaded) {\n    return null;\n  }\n  if (market.baseMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\n    return accountInfo?.lamports / 1e9 ?? 0;\n  }\n  return market.baseSplSizeToNumber(\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\n  );\n}\n\nexport function useOpenOrders() {\n  const { market, marketName } = useMarket();\n  const openOrdersAccount = useSelectedOpenOrdersAccount();\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\n  if (!market || !openOrdersAccount || !bidOrderbook || !askOrderbook) {\n    return null;\n  }\n  return market\n    .filterForOpenOrders(bidOrderbook, askOrderbook, [openOrdersAccount])\n    .map((order) => ({ ...order, marketName, market }));\n}\n\nexport function useTrades(limit = 100) {\n  const trades = _useUnfilteredTrades(limit);\n  if (!trades) {\n    return null;\n  }\n  // Until partial fills are each given their own fill, use maker fills\n  return trades\n    .filter(({ eventFlags }) => eventFlags.maker)\n    .map((trade) => ({\n      ...trade,\n      side: trade.side === 'buy' ? 'sell' : 'buy',\n    }));\n}\n\nexport function useFeeDiscountKeys() {\n  const { market } = useMarket();\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getFeeDiscountKeys() {\n    if (!connected) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    return await market.findFeeDiscountKeys(connection, wallet.publicKey);\n  }\n  return useAsyncData(\n    getFeeDiscountKeys,\n    tuple('getFeeDiscountKeys', wallet, market, connected),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useFills(limit = 100) {\n  const { marketName } = useMarket();\n  const fills = _useUnfilteredTrades(limit);\n  const [openOrdersAccounts] = useOpenOrdersAccounts();\n  if (!openOrdersAccounts || openOrdersAccounts.length === 0) {\n    return null;\n  }\n  if (!fills) {\n    return null;\n  }\n  return fills\n    .filter((fill) =>\n      openOrdersAccounts.some((openOrdersAccount) =>\n        fill.openOrders.equals(openOrdersAccount.publicKey),\n      ),\n    )\n    .map((fill) => ({ ...fill, marketName }));\n}\n\n// TODO: Update to use websocket\nexport function useFillsForAllMarkets(limit = 100) {\n  const { connected, wallet } = useWallet();\n\n  const connection = useConnection();\n  const allMarkets = useAllMarkets();\n\n  async function getFillsForAllMarkets() {\n    let fills = [];\n    if (!connected) {\n      return fills;\n    }\n\n    let marketData;\n    for (marketData of allMarkets) {\n      const { market, marketName } = marketData;\n      if (!market) {\n        return fills;\n      }\n      const openOrdersAccounts = await market.findOpenOrdersAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n      const openOrdersAccount = openOrdersAccounts && openOrdersAccounts[0];\n      if (!openOrdersAccount) {\n        return fills;\n      }\n      const eventQueueData = await connection.getAccountInfo(\n        market && market._decoded.eventQueue,\n      );\n      let data = eventQueueData?.data;\n      if (!data) {\n        return fills;\n      }\n      const events = decodeEventQueue(data, limit);\n      const fillsForMarket = events\n        .filter(\n          (event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0),\n        )\n        .map(market.parseFillEvent.bind(market));\n      const ownFillsForMarket = fillsForMarket\n        .filter((fill) => fill.openOrders.equals(openOrdersAccount.publicKey))\n        .map((fill) => ({ ...fill, marketName }));\n      fills = fills.concat(ownFillsForMarket);\n    }\n\n    console.log(JSON.stringify(fills));\n    return fills;\n  }\n\n  return useAsyncData(\n    getFillsForAllMarkets,\n    tuple('getFillsForAllMarkets', connected, connection, allMarkets, wallet),\n    { refreshInterval: _FAST_REFRESH_INTERVAL },\n  );\n}\n\n// TODO: Update to use websocket\nexport function useOpenOrdersForAllMarkets() {\n  const { connected, wallet } = useWallet();\n\n  const connection = useConnection();\n  const allMarkets = useAllMarkets();\n\n  async function getOpenOrdersForAllMarkets() {\n    let orders = [];\n    if (!connected) {\n      return orders;\n    }\n\n    let marketData;\n    for (marketData of allMarkets) {\n      const { market, marketName } = marketData;\n      if (!market) {\n        return orders;\n      }\n      const openOrdersAccounts = await market.findOpenOrdersAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n      const openOrdersAccount = openOrdersAccounts && openOrdersAccounts[0];\n      if (!openOrdersAccount) {\n        return orders;\n      }\n      const [bids, asks] = await Promise.all([\n        market.loadBids(connection),\n        market.loadAsks(connection),\n      ]);\n      const ordersForMarket = [...bids, ...asks]\n        .filter((order) => {\n          return order.openOrdersAddress.equals(openOrdersAccount.publicKey);\n        })\n        .map((order) => {\n          return { ...order, marketName };\n        });\n      orders = orders.concat(ordersForMarket);\n    }\n\n    return orders;\n  }\n\n  return useAsyncData(\n    getOpenOrdersForAllMarkets,\n    tuple(\n      'getOpenOrdersForAllMarkets',\n      connected,\n      connection,\n      wallet,\n      allMarkets,\n    ),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useBalances() {\n  const baseCurrencyBalances = useBaseCurrencyBalances();\n  const quoteCurrencyBalances = useQuoteCurrencyBalances();\n  const openOrders = useSelectedOpenOrdersAccount(true);\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const baseExists =\n    openOrders && openOrders.baseTokenTotal && openOrders.baseTokenFree;\n  const quoteExists =\n    openOrders && openOrders.quoteTokenTotal && openOrders.quoteTokenFree;\n  if (\n    baseCurrency === 'UNKNOWN' ||\n    quoteCurrency === 'UNKNOWN' ||\n    !baseCurrency ||\n    !quoteCurrency\n  ) {\n    return [];\n  }\n  return [\n    {\n      market,\n      key: `${baseCurrency}${quoteCurrency}${baseCurrency}`,\n      coin: baseCurrency,\n      wallet: baseCurrencyBalances,\n      orders:\n        baseExists && market\n          ? market.baseSplSizeToNumber(\n              openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\n            )\n          : null,\n      openOrders,\n      unsettled:\n        baseExists && market\n          ? market.baseSplSizeToNumber(openOrders.baseTokenFree)\n          : null,\n    },\n    {\n      market,\n      key: `${quoteCurrency}${baseCurrency}${quoteCurrency}`,\n      coin: quoteCurrency,\n      wallet: quoteCurrencyBalances,\n      openOrders,\n      orders:\n        quoteExists && market\n          ? market.quoteSplSizeToNumber(\n              openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\n            )\n          : null,\n      unsettled:\n        quoteExists && market\n          ? market.quoteSplSizeToNumber(openOrders.quoteTokenFree)\n          : null,\n    },\n  ];\n}\n\nexport function useWalletBalancesForAllMarkets() {\n  const { connected, wallet } = useWallet();\n\n  const connection = useConnection();\n  const allMarkets = useAllMarkets();\n\n  async function getWalletBalancesForAllMarkets() {\n    let balances = [];\n    if (!connected) {\n      return balances;\n    }\n\n    let marketData;\n    for (marketData of allMarkets) {\n      const { market, marketName } = marketData;\n      if (!market) {\n        return balances;\n      }\n      const baseCurrency = marketName.includes('/') && marketName.split('/')[0];\n      if (!balances.find((balance) => balance.coin === baseCurrency)) {\n        const baseBalance = await getCurrencyBalance(\n          market,\n          connection,\n          wallet,\n          true,\n        );\n        balances.push({\n          key: baseCurrency,\n          coin: baseCurrency,\n          wallet: baseBalance,\n        });\n      }\n      const quoteCurrency =\n        marketName.includes('/') && marketName.split('/')[1];\n      if (!balances.find((balance) => balance.coin === quoteCurrency)) {\n        const quoteBalance = await getCurrencyBalance(\n          market,\n          connection,\n          wallet,\n          false,\n        );\n        balances.push({\n          key: quoteCurrency,\n          coin: quoteCurrency,\n          wallet: quoteBalance,\n        });\n      }\n    }\n\n    return balances;\n  }\n\n  return useAsyncData(\n    getWalletBalancesForAllMarkets,\n    tuple(\n      'getWalletBalancesForAllMarkets',\n      connected,\n      connection,\n      wallet,\n      allMarkets,\n    ),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nasync function getCurrencyBalance(market, connection, wallet, base = true) {\n  const currencyAccounts = base\n    ? await market.findBaseTokenAccountsForOwner(connection, wallet.publicKey)\n    : await market.findQuoteTokenAccountsForOwner(connection, wallet.publicKey);\n  const currencyAccount = currencyAccounts && currencyAccounts[0];\n  const tokenAccountBalances = await connection.getTokenAccountBalance(\n    currencyAccount.pubkey,\n  );\n  return tokenAccountBalances?.value?.uiAmount;\n}\n\nexport function useOpenOrderAccountBalancesForAllMarkets() {\n  const { connected, wallet } = useWallet();\n\n  const connection = useConnection();\n  const allMarkets = useAllMarkets();\n\n  async function getOpenOrderAccountsForAllMarkets() {\n    let accounts = [];\n    if (!connected) {\n      return accounts;\n    }\n\n    let marketData;\n    for (marketData of allMarkets) {\n      const { market, marketName } = marketData;\n      if (!market) {\n        return accounts;\n      }\n      const openOrderAccounts = await market.findOpenOrdersAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n      if (!openOrderAccounts) {\n        continue;\n      }\n      const baseCurrencyAccounts = await market.findBaseTokenAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n      const quoteCurrencyAccounts = await market.findQuoteTokenAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n\n      const baseCurrency = marketName.includes('/') && marketName.split('/')[0];\n      const quoteCurrency =\n        marketName.includes('/') && marketName.split('/')[1];\n\n      const openOrderAccountBalances = [];\n      openOrderAccounts.forEach((openOrdersAccount) => {\n        const inOrdersBase =\n          openOrdersAccount?.baseTokenTotal &&\n          openOrdersAccount?.baseTokenFree &&\n          market.baseSplSizeToNumber(\n            openOrdersAccount.baseTokenTotal.sub(\n              openOrdersAccount.baseTokenFree,\n            ),\n          );\n        const inOrdersQuote =\n          openOrdersAccount?.quoteTokenTotal &&\n          openOrdersAccount?.quoteTokenFree &&\n          market.baseSplSizeToNumber(\n            openOrdersAccount.quoteTokenTotal.sub(\n              openOrdersAccount.quoteTokenFree,\n            ),\n          );\n        const unsettledBase =\n          openOrdersAccount?.baseTokenFree &&\n          market.baseSplSizeToNumber(openOrdersAccount.baseTokenFree);\n        const unsettledQuote =\n          openOrdersAccount?.quoteTokenFree &&\n          market.baseSplSizeToNumber(openOrdersAccount.quoteTokenFree);\n        openOrderAccountBalances.push({\n          market: marketName,\n          coin: baseCurrency,\n          key: baseCurrency,\n          orders: inOrdersBase,\n          unsettled: unsettledBase,\n          openOrdersAccount: openOrdersAccount,\n          baseCurrencyAccount: baseCurrencyAccounts && baseCurrencyAccounts[0],\n          quoteCurrencyAccount:\n            quoteCurrencyAccounts && quoteCurrencyAccounts[0],\n        });\n        openOrderAccountBalances.push({\n          market: marketName,\n          coin: quoteCurrency,\n          key: quoteCurrency,\n          orders: inOrdersQuote,\n          unsettled: unsettledQuote,\n          openOrdersAccount: openOrdersAccount,\n          baseCurrencyAccount: baseCurrencyAccounts && baseCurrencyAccounts[0],\n          quoteCurrencyAccount:\n            quoteCurrencyAccounts && quoteCurrencyAccounts[0],\n        });\n      });\n      accounts = accounts.concat(openOrderAccountBalances);\n    }\n\n    return accounts;\n  }\n\n  return useAsyncData(\n    getOpenOrderAccountsForAllMarkets,\n    tuple(\n      'getOpenOrderAccountsForAllMarkets',\n      connected,\n      connection,\n      wallet,\n      allMarkets,\n    ),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useUnmigratedDeprecatedMarkets() {\n  const connection = useConnection();\n  const { accounts } = useUnmigratedOpenOrdersAccounts();\n  const marketsList =\n    accounts &&\n    Array.from(new Set(accounts.map((openOrders) => openOrders.market)));\n  const deps = marketsList && marketsList.map((m) => m.toBase58());\n\n  const useUnmigratedDeprecatedMarketsInner = async () => {\n    if (!marketsList) {\n      return null;\n    }\n    const getMarket = async (address) => {\n      const marketInfo = USE_MARKETS.find((market) =>\n        market.address.equals(address),\n      );\n      try {\n        console.log('Loading market', marketInfo.name);\n        // NOTE: Should this just be cached by (connection, marketInfo.address, marketInfo.programId)?\n        return await Market.load(\n          connection,\n          marketInfo.address,\n          {},\n          marketInfo.programId,\n        );\n      } catch (e) {\n        console.log('Failed loading market', marketInfo.name, e);\n        notify({\n          message: 'Error loading market',\n          description: e.message,\n          type: 'error',\n        });\n        return null;\n      }\n    };\n    return (await Promise.all(marketsList.map(getMarket))).filter((x) => x);\n  };\n  const [markets] = useAsyncData(\n    useUnmigratedDeprecatedMarketsInner,\n    tuple(\n      'useUnmigratedDeprecatedMarketsInner',\n      connection,\n      deps && deps.toString(),\n    ),\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\n  );\n  if (!markets) {\n    return null;\n  }\n  return markets.map((market) => ({\n    market,\n    openOrdersList: accounts.filter((openOrders) =>\n      openOrders.market.equals(market.address),\n    ),\n  }));\n}\n\nexport function useGetOpenOrdersForDeprecatedMarkets() {\n  const { connected, wallet } = useWallet();\n  const [customMarkets] = useLocalStorageState('customMarkets', []);\n  const connection = useConnection();\n  const marketsAndOrders = useUnmigratedDeprecatedMarkets();\n  const marketsList =\n    marketsAndOrders && marketsAndOrders.map(({ market }) => market);\n\n  // This isn't quite right: open order balances could change\n  const deps =\n    marketsList && marketsList.map((market) => market.address.toBase58());\n\n  async function getOpenOrdersForDeprecatedMarkets() {\n    if (!connected) {\n      return null;\n    }\n    if (!marketsList) {\n      return null;\n    }\n    console.log('refreshing getOpenOrdersForDeprecatedMarkets');\n    const getOrders = async (market) => {\n      const { marketName } = getMarketDetails(market, customMarkets);\n      try {\n        console.log('Fetching open orders for', marketName);\n        // Can do better than this, we have the open orders accounts already\n        return (\n          await market.loadOrdersForOwner(connection, wallet.publicKey)\n        ).map((order) => ({ marketName, market, ...order }));\n      } catch (e) {\n        console.log('Failed loading open orders', market.address.toBase58(), e);\n        notify({\n          message: `Error loading open orders for deprecated ${marketName}`,\n          description: e.message,\n          type: 'error',\n        });\n        return null;\n      }\n    };\n    return (await Promise.all(marketsList.map(getOrders)))\n      .filter((x) => x)\n      .flat();\n  }\n\n  const cacheKey = tuple(\n    'getOpenOrdersForDeprecatedMarkets',\n    connected,\n    connection,\n    wallet,\n    deps && deps.toString(),\n  );\n  const [openOrders, loaded] = useAsyncData(\n    getOpenOrdersForDeprecatedMarkets,\n    cacheKey,\n    {\n      refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\n    },\n  );\n  console.log('openOrders', openOrders);\n  return {\n    openOrders,\n    loaded,\n    refreshOpenOrders: () => refreshCache(cacheKey),\n  };\n}\n\nexport function useBalancesForDeprecatedMarkets() {\n  const markets = useUnmigratedDeprecatedMarkets();\n  const [customMarkets] = useLocalStorageState('customMarkets', []);\n  if (!markets) {\n    return null;\n  }\n\n  const openOrderAccountBalances = [];\n  markets.forEach(({ market, openOrdersList }) => {\n    const { baseCurrency, quoteCurrency, marketName } = getMarketDetails(\n      market,\n      customMarkets,\n    );\n    openOrdersList.forEach((openOrders) => {\n      const inOrdersBase =\n        openOrders?.baseTokenTotal &&\n        openOrders?.baseTokenFree &&\n        market.baseSplSizeToNumber(\n          openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\n        );\n      const inOrdersQuote =\n        openOrders?.quoteTokenTotal &&\n        openOrders?.quoteTokenFree &&\n        market.baseSplSizeToNumber(\n          openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\n        );\n      const unsettledBase =\n        openOrders?.baseTokenFree &&\n        market.baseSplSizeToNumber(openOrders.baseTokenFree);\n      const unsettledQuote =\n        openOrders?.quoteTokenFree &&\n        market.baseSplSizeToNumber(openOrders.quoteTokenFree);\n\n      openOrderAccountBalances.push({\n        marketName,\n        market,\n        coin: baseCurrency,\n        key: `${marketName}${baseCurrency}`,\n        orders: inOrdersBase,\n        unsettled: unsettledBase,\n        openOrders,\n      });\n      openOrderAccountBalances.push({\n        marketName,\n        market,\n        coin: quoteCurrency,\n        key: `${marketName}${quoteCurrency}`,\n        orders: inOrdersQuote,\n        unsettled: unsettledQuote,\n        openOrders,\n      });\n    });\n  });\n  return openOrderAccountBalances;\n}\n\nexport function getMarketInfos(customMarkets) {\n  const customMarketsInfo = customMarkets.map((m) => ({\n    ...m,\n    address: new PublicKey(m.address),\n    programId: new PublicKey(m.programId),\n  }));\n\n  return [...customMarketsInfo, ...USE_MARKETS];\n}\n","import * as BufferLayout from 'buffer-layout';\nimport bs58 from 'bs58';\nimport { PublicKey } from '@solana/web3.js';\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\n\nexport const ACCOUNT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(32, 'mint'),\n  BufferLayout.blob(32, 'owner'),\n  BufferLayout.nu64('amount'),\n  BufferLayout.blob(93),\n]);\n\nexport const MINT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(44),\n  BufferLayout.u8('decimals'),\n  BufferLayout.u8('initialized'),\n  BufferLayout.blob(36),\n]);\n\nexport function parseTokenAccountData(data) {\n  let { mint, owner, amount } = ACCOUNT_LAYOUT.decode(data);\n  return {\n    mint: new PublicKey(mint),\n    owner: new PublicKey(owner),\n    amount,\n  };\n}\n\nexport function parseTokenMintData(data) {\n  let { decimals, initialized } = MINT_LAYOUT.decode(data);\n  return { decimals, initialized };\n}\n\nexport function getOwnedAccountsFilters(publicKey) {\n  return [\n    {\n      memcmp: {\n        offset: ACCOUNT_LAYOUT.offsetOf('owner'),\n        bytes: publicKey.toBase58(),\n      },\n    },\n    {\n      dataSize: ACCOUNT_LAYOUT.span,\n    },\n  ];\n}\n\nexport const TOKEN_PROGRAM_ID = new PublicKey(\n  'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n);\n\nexport async function getOwnedTokenAccounts(connection, publicKey) {\n  let filters = getOwnedAccountsFilters(publicKey);\n  let resp = await connection._rpcRequest('getProgramAccounts', [\n    TOKEN_PROGRAM_ID.toBase58(),\n    {\n      commitment: connection.commitment,\n      filters,\n    },\n  ]);\n  if (resp.error) {\n    throw new Error(\n      'failed to get token accounts owned by ' +\n        publicKey.toBase58() +\n        ': ' +\n        resp.error.message,\n    );\n  }\n  return resp.result\n    .map(({ pubkey, account: { data, executable, owner, lamports } }) => ({\n      publicKey: new PublicKey(pubkey),\n      accountInfo: {\n        data: bs58.decode(data),\n        executable,\n        owner: new PublicKey(owner),\n        lamports,\n      },\n    }))\n    .filter(({ accountInfo }) => {\n      // TODO: remove this check once mainnet is updated\n      return filters.every((filter) => {\n        if (filter.dataSize) {\n          return accountInfo.data.length === filter.dataSize;\n        } else if (filter.memcmp) {\n          let filterBytes = bs58.decode(filter.memcmp.bytes);\n          return accountInfo.data\n            .slice(\n              filter.memcmp.offset,\n              filter.memcmp.offset + filterBytes.length,\n            )\n            .equals(filterBytes);\n        }\n        return false;\n      });\n    });\n}\n\nexport async function getTokenAccountInfo(connection, ownerAddress) {\n  let [splAccounts, account] = await Promise.all([\n    getOwnedTokenAccounts(connection, ownerAddress),\n    connection.getAccountInfo(ownerAddress),\n  ]);\n  const parsedSplAccounts = splAccounts.map(({ publicKey, accountInfo }) => {\n    return {\n      pubkey: publicKey,\n      account: accountInfo,\n      effectiveMint: parseTokenAccountData(accountInfo.data).mint,\n    };\n  });\n  return parsedSplAccounts.concat({\n    pubkey: ownerAddress,\n    account,\n    effectiveMint: WRAPPED_SOL_MINT,\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/logo.49174c73.svg\";","import { useCallback, useEffect, useState } from 'react';\nimport { PublicKey } from '@solana/web3.js';\n\nexport function isValidPublicKey(key) {\n  if (!key) {\n    return false;\n  }\n  try {\n    new PublicKey(key);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport async function sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport const percentFormat = new Intl.NumberFormat(undefined, {\n  style: 'percent',\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n});\n\nexport function floorToDecimal(value, decimals) {\n  return decimals ? Math.floor(value * 10 ** decimals) / 10 ** decimals : value;\n}\n\nexport function roundToDecimal(value, decimals) {\n  return decimals ? Math.round(value * 10 ** decimals) / 10 ** decimals : value;\n}\n\nexport function getDecimalCount(value) {\n  if (!isNaN(value) && Math.floor(value) !== value)\n    return value.toString().split('.')[1].length || 0;\n  return 0;\n}\n\nexport function useLocalStorageState(key, defaultState = null) {\n  const [state, setState] = useState(() => {\n    // NOTE: Not sure if this is ok\n    const storedState = localStorage.getItem(key);\n    if (storedState) {\n      return JSON.parse(storedState);\n    }\n    return defaultState;\n  });\n\n  const setLocalStorageState = useCallback(\n    (newState) => {\n      const changed = state !== newState;\n      if (!changed) {\n        return;\n      }\n      setState(newState);\n      if (newState === null) {\n        localStorage.removeItem(key);\n      } else {\n        localStorage.setItem(key, JSON.stringify(newState));\n      }\n    },\n    [state, key],\n  );\n\n  return [state, setLocalStorageState];\n}\n\nexport function useEffectAfterTimeout(effect, timeout) {\n  useEffect(() => {\n    const handle = setTimeout(effect, timeout);\n    return () => clearTimeout(handle);\n  });\n}\n\nexport function useListener(emitter, eventName) {\n  const [, forceUpdate] = useState(0);\n  useEffect(() => {\n    const listener = () => forceUpdate((i) => i + 1);\n    emitter.on(eventName, listener);\n    return () => emitter.removeListener(eventName, listener);\n  }, [emitter, eventName]);\n}\n\nexport function abbreviateAddress(address) {\n  const base58 = address.toBase58();\n  return base58.slice(0, 4) + '…' + base58.slice(-4);\n}\n\nexport function isEqual(obj1, obj2, keys) {\n  if (!keys && Object.keys(obj1).length !== Object.keys(obj2).length) {\n    return false;\n  }\n  keys = keys || Object.keys(obj1);\n  for (const k of keys) {\n    if (obj1[k] !== obj2[k]) {\n      // shallow comparison\n      return false;\n    }\n  }\n  return true;\n}\n","import { useLocalStorageState } from './utils';\nimport { Account, clusterApiUrl, Connection } from '@solana/web3.js';\nimport React, { useContext, useEffect, useMemo } from 'react';\nimport { setCache, useAsyncData } from './fetch-loop';\nimport tuple from 'immutable-tuple';\n\nexport const ENDPOINTS = [\n  {\n    name: 'mainnet-beta',\n    endpoint: 'https://solana-api.projectserum.com',\n  },\n  { name: 'testnet', endpoint: clusterApiUrl('testnet') },\n  { name: 'devnet', endpoint: clusterApiUrl('devnet') },\n  { name: 'localnet', endpoint: 'http://127.0.0.1:8899' },\n];\n\nconst accountListenerCount = new Map();\n\nconst ConnectionContext = React.createContext(null);\n\nexport function ConnectionProvider({ children }) {\n  const [endpoint, setEndpoint] = useLocalStorageState(\n    'connectionEndpts',\n    ENDPOINTS[0].endpoint,\n  );\n\n  const connection = useMemo(() => new Connection(endpoint, 'recent'), [\n    endpoint,\n  ]);\n  const sendConnection = useMemo(() => new Connection(endpoint, 'recent'), [\n    endpoint,\n  ]);\n\n  // The websocket library solana/web3.js uses closes its websocket connection when the subscription list\n  // is empty after opening its first time, preventing subsequent subscriptions from receiving responses.\n  // This is a hack to prevent the list from every getting empty\n  useEffect(() => {\n    const id = connection.onAccountChange(new Account().publicKey, () => {});\n    return () => connection.removeAccountChangeListener(id);\n  }, [connection]);\n\n  useEffect(() => {\n    const id = connection.onSlotChange(() => null);\n    return () => connection.removeSlotChangeListener(id);\n  }, [connection]);\n\n  useEffect(() => {\n    const id = sendConnection.onAccountChange(\n      new Account().publicKey,\n      () => {},\n    );\n    return () => sendConnection.removeAccountChangeListener(id);\n  }, [sendConnection]);\n\n  useEffect(() => {\n    const id = sendConnection.onSlotChange(() => null);\n    return () => sendConnection.removeSlotChangeListener(id);\n  }, [sendConnection]);\n\n  return (\n    <ConnectionContext.Provider\n      value={{ endpoint, setEndpoint, connection, sendConnection }}\n    >\n      {children}\n    </ConnectionContext.Provider>\n  );\n}\n\nexport function useConnection() {\n  return useContext(ConnectionContext).connection;\n}\n\nexport function useSendConnection() {\n  return useContext(ConnectionContext).sendConnection;\n}\n\nexport function useConnectionConfig() {\n  const context = useContext(ConnectionContext);\n  return { endpoint: context.endpoint, setEndpoint: context.setEndpoint };\n}\n\nexport function useAccountInfo(publicKey) {\n  const connection = useConnection();\n  const cacheKey = tuple(connection, publicKey?.toBase58());\n  const [accountInfo, loaded] = useAsyncData(\n    async () => (publicKey ? connection.getAccountInfo(publicKey) : null),\n    cacheKey,\n    { refreshInterval: 60_000 },\n  );\n  useEffect(() => {\n    if (!publicKey) {\n      return;\n    }\n    if (accountListenerCount.has(cacheKey)) {\n      let currentItem = accountListenerCount.get(cacheKey);\n      ++currentItem.count;\n    } else {\n      let previousData = null;\n      const subscriptionId = connection.onAccountChange(publicKey, (e) => {\n        if (e.data) {\n          if (!previousData || !previousData.equals(e.data)) {\n            setCache(cacheKey, e);\n          } else {\n          }\n          previousData = e.data;\n        }\n      });\n      accountListenerCount.set(cacheKey, { count: 1, subscriptionId });\n    }\n    return () => {\n      let currentItem = accountListenerCount.get(cacheKey);\n      let nextCount = currentItem.count - 1;\n      if (nextCount <= 0) {\n        connection.removeAccountChangeListener(currentItem.subscriptionId);\n        accountListenerCount.delete(cacheKey);\n      } else {\n        --currentItem.count;\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey]);\n  return [accountInfo, loaded];\n}\n\nexport function useAccountData(publicKey) {\n  const [accountInfo] = useAccountInfo(publicKey);\n  return accountInfo && accountInfo.data;\n}\n","import React from 'react';\nimport { notification } from 'antd';\nimport Link from '../components/Link';\n\nexport function notify({\n  message,\n  description,\n  txid,\n  type = 'info',\n  placement = 'bottomLeft',\n}) {\n  if (txid) {\n    description = (\n      <Link\n        external\n        to={'https://explorer.solana.com/tx/' + txid}\n        style={{ color: '#0000ff' }}\n      >\n        View transaction {txid.slice(0, 8)}...{txid.slice(txid.length - 8)}\n      </Link>\n    );\n  }\n  notification[type]({\n    message: <span style={{ color: 'black' }}>{message}</span>,\n    description: (\n      <span style={{ color: 'black', opacity: 0.5 }}>{description}</span>\n    ),\n    placement,\n    style: {\n      backgroundColor: 'white',\n    },\n  });\n}\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\nhtml,body{\n  background: #11161D;\n}\ninput[type=number]::-webkit-inner-spin-button {\n  opacity: 0;\n}\ninput[type=number]:hover::-webkit-inner-spin-button,\ninput[type=number]:focus::-webkit-inner-spin-button {\n  opacity: 0.25;\n}\n/* width */\n::-webkit-scrollbar {\n  width: 15px;\n}\n/* Track */\n::-webkit-scrollbar-track {\n  background: #2d313c;\n}\n/* Handle */\n::-webkit-scrollbar-thumb {\n  background: #5b5f67;\n}\n/* Handle on hover */\n::-webkit-scrollbar-thumb:hover {\n  background: #5b5f67;\n}\n.ant-slider-track, .ant-slider:hover .ant-slider-track {\n  background-color: #2abdd2;\n  opacity: 0.75;\n}\n.ant-slider-track,\n.ant-slider ant-slider-track:hover {\n  background-color: #2abdd2;\n  opacity: 0.75;\n}\n.ant-slider-dot-active,\n.ant-slider-handle,\n.ant-slider-handle-click-focused,\n.ant-slider:hover .ant-slider-handle:not(.ant-tooltip-open)  {\n  border: 2px solid #2abdd2; \n}\n.ant-table-tbody > tr.ant-table-row:hover > td {\n  background: #273043;\n}\n.ant-table-tbody > tr > td {\n  border-bottom: 8px solid #1A2029;\n}\n.ant-table-container table > thead > tr:first-child th {\n  border-bottom: none;\n}\n.ant-divider-horizontal.ant-divider-with-text::before, .ant-divider-horizontal.ant-divider-with-text::after {\n  border-top: 1px solid #434a59 !important;\n}\n.ant-layout {\n    background: #11161D\n  }\n  .ant-table {\n    background: #212734;\n  }\n  .ant-table-thead > tr > th {\n    background: #1A2029;\n  }\n.ant-select-item-option-content {\n  img {\n    margin-right: 4px;\n  }\n}\n.ant-modal-content {\n  background-color: #212734;\n}\n\n@-webkit-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n@-moz-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n@-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n.flash {\n  -moz-animation: highlight 0.5s ease 0s 1 alternate ;\n  -webkit-animation: highlight 0.5s ease 0s 1 alternate;\n  animation: highlight 0.5s ease 0s 1 alternate;\n}`;\n","import React, { Component } from 'react';\nimport { Typography } from 'antd';\n\nconst { Title } = Typography;\n\nexport default class ErrorBoundary extends Component {\n  state = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div>\n          <div>\n            <Title level={2}>Something went wrong.</Title>\n            <Title level={4}>Please try again later.</Title>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","import { useRef, useEffect } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  margin: 5px;\n  padding: 20px;\n  background-color: #1a2029;\n`;\n\nexport default function FloatingElement({ style, children }) {\n  return <Wrapper style={{ ...style }}>{children}</Wrapper>;\n}\n","import { Col, Row } from 'antd';\nimport React, { useRef, useEffect, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useMarket, useOrderbook, useMarkPrice } from '../utils/markets';\nimport { isEqual, getDecimalCount } from '../utils/utils';\nimport { useInterval } from '../utils/useInterval';\nimport FloatingElement from './layout/FloatingElement';\nimport usePrevious from '../utils/usePrevious';\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\n\nconst SizeTitle = styled(Row)`\n  padding: 20px 0 14px;\n  color: #434a59;\n`;\n\nconst MarkPriceTitle = styled(Row)`\n  padding: 20px 0 14px;\n  font-weight: 700;\n`;\n\nconst Line = styled.div`\n  text-align: right;\n  float: right;\n  height: 100%;\n  ${(props) =>\n    props['data-width'] &&\n    css`\n      width: ${props['data-width']};\n    `}\n  ${(props) =>\n    props['data-bgcolor'] &&\n    css`\n      background-color: ${props['data-bgcolor']};\n    `}\n`;\n\nconst Price = styled.div`\n  position: absolute;\n  right: 5px;\n  color: white;\n`;\n\nexport default function Orderbook({ smallScreen, depth = 7, onPrice, onSize }) {\n  const markPrice = useMarkPrice();\n  const [orderbook] = useOrderbook();\n  const { baseCurrency, quoteCurrency } = useMarket();\n\n  const currentOrderbookData = useRef(null);\n  const lastOrderbookData = useRef(null);\n\n  const [orderbookData, setOrderbookData] = useState(null);\n\n  useInterval(() => {\n    if (\n      !currentOrderbookData.current ||\n      JSON.stringify(currentOrderbookData.current) !==\n        JSON.stringify(lastOrderbookData.current)\n    ) {\n      let bids = orderbook?.bids || [];\n      let asks = orderbook?.asks || [];\n\n      let sum = (total, [, size], index) =>\n        index < depth ? total + size : total;\n      let totalSize = bids.reduce(sum, 0) + asks.reduce(sum, 0);\n\n      let bidsToDisplay = getCumulativeOrderbookSide(bids, totalSize, false);\n      let asksToDisplay = getCumulativeOrderbookSide(asks, totalSize, true);\n\n      currentOrderbookData.current = {\n        bids: orderbook?.bids,\n        asks: orderbook?.asks,\n      };\n\n      setOrderbookData({ bids: bidsToDisplay, asks: asksToDisplay });\n    }\n  }, 250);\n\n  useEffect(() => {\n    lastOrderbookData.current = {\n      bids: orderbook?.bids,\n      asks: orderbook?.asks,\n    };\n  }, [orderbook]);\n\n  function getCumulativeOrderbookSide(orders, totalSize, backwards = false) {\n    let cumulative = orders\n      .slice(0, depth)\n      .reduce((cumulative, [price, size], i) => {\n        const cumulativeSize = (cumulative[i - 1]?.cumulativeSize || 0) + size;\n        cumulative.push({\n          price,\n          size,\n          cumulativeSize,\n          sizePercent: Math.round((cumulativeSize / (totalSize || 1)) * 100),\n        });\n        return cumulative;\n      }, []);\n    if (backwards) {\n      cumulative = cumulative.reverse();\n    }\n    return cumulative;\n  }\n\n  return (\n    <FloatingElement\n      style={\n        smallScreen ? { flex: 1 } : { height: '500px', overflow: 'hidden' }\n      }\n    >\n      <Title>Orderbook</Title>\n      <SizeTitle>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          Size ({baseCurrency})\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          Price ({quoteCurrency})\n        </Col>\n      </SizeTitle>\n      {orderbookData?.asks.map(({ price, size, sizePercent }) => (\n        <OrderbookRow\n          key={price + ''}\n          price={price}\n          size={size}\n          side={'sell'}\n          sizePercent={sizePercent}\n          onPriceClick={() => onPrice(price)}\n          onSizeClick={() => onSize(size)}\n        />\n      ))}\n      <MarkPriceComponent markPrice={markPrice} />\n      {orderbookData?.bids.map(({ price, size, sizePercent }) => (\n        <OrderbookRow\n          key={price + ''}\n          price={price}\n          size={size}\n          side={'buy'}\n          sizePercent={sizePercent}\n          onPriceClick={() => onPrice(price)}\n          onSizeClick={() => onSize(size)}\n        />\n      ))}\n    </FloatingElement>\n  );\n}\n\nconst OrderbookRow = React.memo(\n  ({ side, price, size, sizePercent, onSizeClick, onPriceClick }) => {\n    const element = useRef();\n\n    const { market } = useMarket();\n\n    useEffect(() => {\n      // eslint-disable-next-line\n      !element.current?.classList.contains('flash') &&\n        element.current?.classList.add('flash');\n      const id = setTimeout(\n        () =>\n          element.current?.classList.contains('flash') &&\n          element.current?.classList.remove('flash'),\n        250,\n      );\n      return () => clearTimeout(id);\n    }, [price, size]);\n\n    let formattedSize =\n      market?.minOrderSize && !isNaN(size)\n        ? Number(size).toFixed(getDecimalCount(market.minOrderSize) + 1)\n        : size;\n\n    let formattedPrice =\n      market?.tickSize && !isNaN(price)\n        ? Number(price).toFixed(getDecimalCount(market.tickSize) + 1)\n        : price;\n\n    return (\n      <Row ref={element} style={{ marginBottom: 1 }} onClick={onSizeClick}>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          {formattedSize}\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          <Line\n            data-width={sizePercent + '%'}\n            data-bgcolor={\n              side === 'buy'\n                ? 'rgba(65, 199, 122, 0.6)'\n                : 'rgba(242, 60, 105, 0.6)'\n            }\n          />\n          <Price onClick={onPriceClick}>{formattedPrice}</Price>\n        </Col>\n      </Row>\n    );\n  },\n  (prevProps, nextProps) =>\n    isEqual(prevProps, nextProps, ['price', 'size', 'sizePercent']),\n);\n\nconst MarkPriceComponent = React.memo(\n  ({ markPrice }) => {\n    const { market } = useMarket();\n    const previousMarkPrice = usePrevious(markPrice);\n\n    let markPriceColor =\n      markPrice > previousMarkPrice\n        ? '#41C77A'\n        : markPrice < previousMarkPrice\n        ? '#F23B69'\n        : 'white';\n\n    let formattedMarkPrice =\n      markPrice &&\n      market?.tickSize &&\n      markPrice.toFixed(getDecimalCount(market.tickSize));\n\n    return (\n      <MarkPriceTitle justify=\"center\">\n        <Col style={{ color: markPriceColor }}>\n          {markPrice > previousMarkPrice && (\n            <ArrowUpOutlined style={{ marginRight: 5 }} />\n          )}\n          {markPrice < previousMarkPrice && (\n            <ArrowDownOutlined style={{ marginRight: 5 }} />\n          )}\n          {formattedMarkPrice || '----'}\n        </Col>\n      </MarkPriceTitle>\n    );\n  },\n  (prevProps, nextProps) => isEqual(prevProps, nextProps, ['markPrice']),\n);\n","import { useEffect, useRef } from 'react';\n\nexport default function usePrevious(value) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef();\n\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n\n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\n","import React from 'react';\nimport { ConfigProvider, Table } from 'antd';\n\nexport default function DataTable({\n  dataSource,\n  columns,\n  emptyLabel = 'No data',\n  pagination = false,\n  loading = false,\n  pageSize = 10,\n}) {\n  const customizeRenderEmpty = () => (\n    <div\n      style={{\n        padding: '20px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      {emptyLabel}\n    </div>\n  );\n\n  return (\n    <ConfigProvider renderEmpty={customizeRenderEmpty}>\n      <Table\n        dataSource={dataSource}\n        columns={columns}\n        pagination={pagination ? { pagination: true, pageSize } : false}\n        loading={loading}\n      />\n    </ConfigProvider>\n  );\n}\n","import { Button } from 'antd';\nimport React from 'react';\nimport {\n  useTokenAccounts,\n  getSelectedTokenAccountForMint,\n} from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\nimport { useSendConnection } from '../../utils/connection';\nimport { useWallet } from '../../utils/wallet';\nimport { settleFunds } from '../../utils/send';\nimport { notify } from '../../utils/notifications';\n\nexport default function BalancesTable({\n  balances,\n  showMarket,\n  hideWalletBalance,\n  onSettleSuccess,\n}) {\n  const [accounts] = useTokenAccounts();\n  const connection = useSendConnection();\n  const { wallet } = useWallet();\n\n  async function onSettleFunds(market, openOrders) {\n    try {\n      await settleFunds({\n        market,\n        openOrders,\n        connection,\n        wallet,\n        baseCurrencyAccount: getSelectedTokenAccountForMint(\n          accounts,\n          market?.baseMintAddress,\n        ),\n        quoteCurrencyAccount: getSelectedTokenAccountForMint(\n          accounts,\n          market?.quoteMintAddress,\n        ),\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    }\n    onSettleSuccess && onSettleSuccess();\n  }\n\n  const columns = [\n    showMarket\n      ? {\n          title: 'Market',\n          dataIndex: 'marketName',\n          key: 'marketName',\n        }\n      : null,\n    {\n      title: 'Coin',\n      dataIndex: 'coin',\n      key: 'coin',\n    },\n    hideWalletBalance\n      ? null\n      : {\n          title: 'Wallet Balance',\n          dataIndex: 'wallet',\n          key: 'wallet',\n        },\n    {\n      title: 'Orders',\n      dataIndex: 'orders',\n      key: 'orders',\n    },\n    {\n      title: 'Unsettled',\n      dataIndex: 'unsettled',\n      key: 'unsettled',\n    },\n    {\n      key: 'action',\n      render: ({ market, openOrders, marketName }) => (\n        <div style={{ textAlign: 'right' }}>\n          <Button\n            ghost\n            style={{ marginRight: 12 }}\n            onClick={() => onSettleFunds(market, openOrders)}\n          >\n            Settle {marketName}\n          </Button>\n        </div>\n      ),\n    },\n  ].filter((x) => x);\n  return (\n    <DataTable\n      emptyLabel=\"No balances\"\n      dataSource={balances}\n      columns={columns}\n      pagination={false}\n    />\n  );\n}\n","import React, { useState } from 'react';\nimport DataTable from '../layout/DataTable';\n\nimport styled from 'styled-components';\nimport { Button, Row, Col, Tag } from 'antd';\nimport { cancelOrder } from '../../utils/send';\nimport { useWallet } from '../../utils/wallet';\nimport { useSendConnection } from '../../utils/connection';\nimport { notify } from '../../utils/notifications';\nimport { DeleteOutlined } from '@ant-design/icons';\n\nconst CancelButton = styled(Button)`\n  color: #f23b69;\n  border: 1px solid #f23b69;\n`;\n\nexport default function OpenOrderTable({ openOrders, onCancelSuccess }) {\n  let { wallet } = useWallet();\n  let connection = useSendConnection();\n\n  const [cancelId, setCancelId] = useState(null);\n\n  async function cancel(order) {\n    setCancelId(order?.orderId);\n    try {\n      await cancelOrder({\n        order,\n        market: order.market,\n        connection,\n        wallet,\n      });\n    } catch (e) {\n      notify({\n        message: 'Error cancelling order',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    } finally {\n      setCancelId(null);\n    }\n    onCancelSuccess && onCancelSuccess();\n  }\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'marketName',\n      key: 'marketName',\n    },\n    {\n      title: 'Side',\n      dataIndex: 'side',\n      key: 'side',\n      render: (side) => (\n        <Tag\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\n          style={{ fontWeight: 700 }}\n        >\n          {side.charAt(0).toUpperCase() + side.slice(1)}\n        </Tag>\n      ),\n    },\n    {\n      title: 'Size',\n      dataIndex: 'size',\n      key: 'size',\n    },\n    {\n      title: 'Price',\n      dataIndex: 'price',\n      key: 'price',\n    },\n    {\n      key: 'orderId',\n      render: (order) => (\n        <div style={{ textAlign: 'right' }}>\n          <CancelButton\n            icon={<DeleteOutlined />}\n            onClick={() => cancel(order)}\n            loading={cancelId + '' === order?.orderId + ''}\n          >\n            Cancel\n          </CancelButton>\n        </div>\n      ),\n    },\n  ];\n  const dataSource = (openOrders || []).map((order) =>\n    Object.assign(order, { key: order.orderId }),\n  );\n\n  return (\n    <Row>\n      <Col span={24}>\n        <DataTable\n          emptyLabel=\"No open orders\"\n          dataSource={dataSource}\n          columns={columns}\n          pagination={true}\n          pageSize={5}\n        />\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react';\nimport { Row, Col, Tag } from 'antd';\nimport { useFills, useMarket } from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\n\nexport default function FillsTable() {\n  const fills = useFills();\n\n  const { quoteCurrency } = useMarket();\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'marketName',\n      key: 'marketName',\n    },\n    {\n      title: 'Side',\n      dataIndex: 'side',\n      key: 'side',\n      render: (side) => (\n        <Tag\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\n          style={{ fontWeight: 700 }}\n        >\n          {side.charAt(0).toUpperCase() + side.slice(1)}\n        </Tag>\n      ),\n    },\n    {\n      title: `Size`,\n      dataIndex: 'size',\n      key: 'size',\n    },\n    {\n      title: `Price`,\n      dataIndex: 'price',\n      key: 'price',\n    },\n    {\n      title: `Liquidity`,\n      dataIndex: 'liquidity',\n      key: 'liquidity',\n    },\n    {\n      title: quoteCurrency ? `Fees (${quoteCurrency})` : 'Fees',\n      dataIndex: 'feeCost',\n      key: 'feeCost',\n    },\n  ];\n\n  const dataSource = (fills || []).map((fill) => ({\n    ...fill,\n    key: `${fill.orderId}${fill.side}`,\n    liquidity: fill.eventFlags.maker ? 'Maker' : 'Taker',\n  }));\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <DataTable\n            dataSource={dataSource}\n            columns={columns}\n            pagination={true}\n            pageSize={5}\n            emptyLabel=\"No fills\"\n          />\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React from 'react';\nimport { Row, Col, Typography, Tag } from 'antd';\nimport { useFeeDiscountKeys } from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\nimport { TokenInstructions, getFeeRates } from '@project-serum/serum';\nimport { percentFormat } from '../../utils/utils';\n\nexport default function FeesTable() {\n  const [feeAccounts] = useFeeDiscountKeys();\n\n  const columns = [\n    {\n      title: 'Fee Tier',\n      dataIndex: 'feeTier',\n      key: 'feeTier',\n      render: (feeTier, row) => (\n        <div style={{ display: 'flex' }}>\n          <Typography>{feeTier}</Typography>\n          {row.index === 0 ? (\n            <div style={{ marginLeft: 10 }}>\n              <Tag color={'#41C77A'} style={{ fontWeight: 700 }}>\n                Selected\n              </Tag>\n            </div>\n          ) : null}\n        </div>\n      ),\n    },\n    {\n      title: 'Taker',\n      dataIndex: 'taker',\n      key: 'taker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).taker),\n    },\n    {\n      title: 'Maker',\n      dataIndex: 'maker',\n      key: 'maker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).maker),\n    },\n    {\n      title: `Public Key`,\n      dataIndex: 'pubkey',\n      key: 'pubkey',\n      render: (pubkey) => pubkey.toBase58(),\n    },\n    {\n      title: `Balance`,\n      dataIndex: 'balance',\n      key: 'balance',\n    },\n    {\n      title: `Mint`,\n      dataIndex: 'mint',\n      key: 'mint',\n      render: (_, row) =>\n        row.mint.equals(TokenInstructions.SRM_MINT)\n          ? 'SRM'\n          : row.mint.equals(TokenInstructions.MSRM_MINT)\n          ? 'MSRM'\n          : 'UNKNOWN',\n    },\n  ];\n\n  const dataSource = (feeAccounts || []).map((account, index) => ({\n    ...account,\n    index,\n    key: account.pubkey.toBase58(),\n  }));\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <DataTable\n            dataSource={dataSource}\n            columns={columns}\n            pagination={true}\n            pageSize={5}\n            emptyLabel=\"No (M)SRM accounts\"\n          />\n        </Col>\n      </Row>\n      <Row style={{ marginTop: 8 }}>\n        <Col>\n          <Typography>\n            Holding SRM or MSRM makes you eligible for fee discounts:\n          </Typography>\n          <FeeScheduleTable />\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nfunction FeeScheduleTable() {\n  // Representation of serum-js/src/fees.ts\n  const dataSource = [\n    { feeTier: 0, taker: 0.0022, maker: -0.0003, token: '', balance: '' },\n    { feeTier: 1, taker: 0.002, maker: -0.0003, token: 'SRM', balance: 100 },\n    { feeTier: 2, taker: 0.0018, maker: -0.0003, token: 'SRM', balance: 1000 },\n    { feeTier: 3, taker: 0.0016, maker: -0.0003, token: 'SRM', balance: 10000 },\n    {\n      feeTier: 4,\n      taker: 0.0014,\n      maker: -0.0003,\n      token: 'SRM',\n      balance: 100000,\n    },\n    {\n      feeTier: 5,\n      taker: 0.0012,\n      maker: -0.0003,\n      token: 'SRM',\n      balance: 1000000,\n    },\n    { feeTier: 6, taker: 0.001, maker: -0.0005, token: 'MSRM', balance: 1 },\n  ];\n  const columns = [\n    {\n      title: 'Fee Tier',\n      dataIndex: 'feeTier',\n      key: 'feeTier',\n    },\n    {\n      title: 'Taker',\n      dataIndex: 'taker',\n      key: 'taker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).taker),\n    },\n    {\n      title: 'Maker',\n      dataIndex: 'maker',\n      key: 'maker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).maker),\n    },\n    {\n      title: 'Requirements',\n      dataIndex: 'requirements',\n      key: 'requirements',\n      render: (_, row) => (\n        <Typography>\n          {!row.balance ? 'None' : `≥ ${row.balance} ${row.token}`}\n        </Typography>\n      ),\n    },\n  ];\n  return (\n    <DataTable\n      dataSource={dataSource.map((info) => ({ ...info, key: info.feeTier }))}\n      columns={columns}\n    />\n  );\n}\n","import BalancesTable from './BalancesTable';\nimport OpenOrderTable from './OpenOrderTable';\nimport React from 'react';\nimport { Tabs, Typography } from 'antd';\nimport FillsTable from './FillsTable';\nimport FloatingElement from '../layout/FloatingElement';\nimport FeesTable from './FeesTable';\nimport { useOpenOrders, useBalances, useMarket } from '../../utils/markets';\n\nconst { Paragraph } = Typography;\nconst { TabPane } = Tabs;\n\nexport default function Index() {\n  const { market } = useMarket();\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 20 }}>\n      <Typography>\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)' }}>\n          Make sure to go to Balances and click Settle to send out your funds.\n        </Paragraph>\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)' }}>\n          To fund your wallet, <a href=\"https://www.sollet.io\">sollet.io</a>.\n          You can get SOL from FTX, Binance, BitMax, and others. You can get\n          other tokens from FTX.{' '}\n        </Paragraph>\n      </Typography>\n      <Tabs defaultActiveKey=\"orders\">\n        <TabPane tab=\"Open Orders\" key=\"orders\">\n          <OpenOrdersTab />\n        </TabPane>\n        <TabPane tab=\"Recent Trade History\" key=\"fills\">\n          <FillsTable />\n        </TabPane>\n        <TabPane tab=\"Balances\" key=\"balances\">\n          <BalancesTab />\n        </TabPane>\n        {market && market.supportsSrmFeeDiscounts ? (\n          <TabPane tab=\"Fee discounts\" key=\"fees\">\n            <FeesTable />\n          </TabPane>\n        ) : null}\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\nconst OpenOrdersTab = () => {\n  const openOrders = useOpenOrders();\n\n  return <OpenOrderTable openOrders={openOrders} />;\n};\n\nconst BalancesTab = () => {\n  const balances = useBalances();\n\n  return <BalancesTable balances={balances} />;\n};\n","import React from 'react';\nimport { Modal } from 'antd';\nimport {\n  useSelectedBaseCurrencyAccount,\n  useMarket,\n  useSelectedQuoteCurrencyAccount,\n} from '../utils/markets';\nimport { useWallet } from '../utils/wallet';\nimport Link from './Link';\n\nexport default function DepositDialog({ onClose, baseOrQuote }) {\n  const { market, baseCurrency, quoteCurrency } = useMarket();\n\n  const { providerName, providerUrl } = useWallet();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  let coinMint;\n  let account;\n  let depositCoin;\n  if (baseOrQuote === 'base') {\n    coinMint = market?.baseMintAddress;\n    account = baseCurrencyAccount;\n    depositCoin = baseCurrency;\n  } else if (baseOrQuote === 'quote') {\n    coinMint = market?.quoteMintAddress;\n    account = quoteCurrencyAccount;\n    depositCoin = quoteCurrency;\n  } else {\n    account = null;\n  }\n  if (!coinMint) {\n    return null;\n  }\n  return (\n    <Modal\n      title={depositCoin}\n      visible={!!coinMint}\n      onOk={onClose}\n      onCancel={onClose}\n    >\n      <div style={{ paddingTop: '20px' }}>\n        <p style={{ color: 'white' }}>Mint address:</p>\n        <p style={{ color: 'rgba(255,255,255,0.5)' }}>{coinMint.toBase58()}</p>\n        <div>\n          <p style={{ color: 'white' }}>SPL Deposit address:</p>\n          <p style={{ color: 'rgba(255,255,255,0.5)' }}>\n            {account ? (\n              account.pubkey.toBase58()\n            ) : (\n              <>\n                Visit{' '}\n                <Link external to={providerUrl}>\n                  {providerName}\n                </Link>{' '}\n                to create an account for this mint\n              </>\n            )}\n          </p>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n","import { Button, Col, Divider, Row } from 'antd';\nimport React, { useState } from 'react';\nimport FloatingElement from './layout/FloatingElement';\nimport styled from 'styled-components';\nimport {\n  useBalances,\n  useMarket,\n  useSelectedBaseCurrencyAccount,\n  useSelectedOpenOrdersAccount,\n  useSelectedQuoteCurrencyAccount,\n} from '../utils/markets';\nimport DepositDialog from './DepositDialog';\nimport { useWallet } from '../utils/wallet';\nimport Link from './Link';\nimport { settleFunds } from '../utils/send';\nimport { useSendConnection } from '../utils/connection';\nimport { notify } from '../utils/notifications';\n\nconst RowBox = styled(Row)`\n  padding-bottom: 20px;\n`;\n\nconst Tip = styled.p`\n  font-size: 12px;\n  padding-top: 6px;\n`;\n\nconst ActionButton = styled(Button)`\n  color: #2abdd2;\n  background-color: #212734;\n  border-width: 0px;\n`;\n\nexport default function StandaloneBalancesDisplay() {\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const balances = useBalances();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const connection = useSendConnection();\n  const { providerUrl, providerName, wallet } = useWallet();\n  const [baseOrQuote, setBaseOrQuote] = useState('');\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const baseCurrencyBalances =\n    balances && balances.find((b) => b.coin === baseCurrency);\n  const quoteCurrencyBalances =\n    balances && balances.find((b) => b.coin === quoteCurrency);\n\n  async function onSettleFunds() {\n    try {\n      await settleFunds({\n        market,\n        openOrders: openOrdersAccount,\n        connection,\n        wallet,\n        baseCurrencyAccount,\n        quoteCurrencyAccount,\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n    }\n  }\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      {[\n        [baseCurrency, baseCurrencyBalances, 'base'],\n        [quoteCurrency, quoteCurrencyBalances, 'quote'],\n      ].map(([currency, balances, baseOrQuote], index) => (\n        <React.Fragment key={index}>\n          <Divider style={{ borderColor: 'white' }}>{currency}</Divider>\n          <RowBox\n            align=\"middle\"\n            justify=\"space-between\"\n            style={{ paddingBottom: 12 }}\n          >\n            <Col>Wallet balance:</Col>\n            <Col>{balances && balances.wallet}</Col>\n          </RowBox>\n          <RowBox\n            align=\"middle\"\n            justify=\"space-between\"\n            style={{ paddingBottom: 12 }}\n          >\n            <Col>Unsettled balance:</Col>\n            <Col>{balances && balances.unsettled}</Col>\n          </RowBox>\n          <RowBox align=\"middle\" justify=\"space-around\">\n            <Col style={{ width: 150 }}>\n              <ActionButton\n                block\n                size=\"large\"\n                onClick={() => setBaseOrQuote(baseOrQuote)}\n              >\n                Deposit\n              </ActionButton>\n            </Col>\n            <Col style={{ width: 150 }}>\n              <ActionButton block size=\"large\" onClick={onSettleFunds}>\n                Settle\n              </ActionButton>\n            </Col>\n          </RowBox>\n          <Tip>\n            All deposits go to your{' '}\n            <Link external to={providerUrl}>\n              {providerName}\n            </Link>{' '}\n            wallet\n          </Tip>\n        </React.Fragment>\n      ))}\n      <DepositDialog\n        baseOrQuote={baseOrQuote}\n        onClose={() => setBaseOrQuote('')}\n      />\n    </FloatingElement>\n  );\n}\n","import { Button, Input, Radio, Switch, Slider } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport {\n  useBaseCurrencyBalances,\n  useQuoteCurrencyBalances,\n  useMarket,\n  useMarkPrice,\n  useSelectedOpenOrdersAccount,\n  useSelectedBaseCurrencyAccount,\n  useSelectedQuoteCurrencyAccount,\n} from '../utils/markets';\nimport { useWallet } from '../utils/wallet';\nimport { notify } from '../utils/notifications';\nimport {\n  getDecimalCount,\n  roundToDecimal,\n  floorToDecimal,\n} from '../utils/utils';\nimport { useSendConnection } from '../utils/connection';\nimport FloatingElement from './layout/FloatingElement';\nimport { placeOrder } from '../utils/send';\n\nconst SellButton = styled(Button)`\n  margin: 20px 0px 0px 0px;\n  background: #f23b69;\n  border-color: #f23b69;\n`;\n\nconst BuyButton = styled(Button)`\n  margin: 20px 0px 0px 0px;\n  background: #02bf76;\n  border-color: #02bf76;\n`;\n\nconst sliderMarks = {\n  0: '0%',\n  25: '25%',\n  50: '50%',\n  75: '75%',\n  100: '100%',\n};\n\nexport default function TradeForm({ style, setChangeOrderRef }) {\n  const [side, setSide] = useState('buy');\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const baseCurrencyBalances = useBaseCurrencyBalances();\n  const quoteCurrencyBalances = useQuoteCurrencyBalances();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const { wallet } = useWallet();\n  const sendConnection = useSendConnection();\n  const markPrice = useMarkPrice();\n\n  const [postOnly, setPostOnly] = useState(false);\n  const [ioc, setIoc] = useState(false);\n  const [baseSize, setBaseSize] = useState(null);\n  const [quoteSize, setQuoteSize] = useState(null);\n  const [price, setPrice] = useState(null);\n  const [submitting, setSubmitting] = useState(false);\n  const [sizeFraction, setSizeFraction] = useState(0);\n\n  const availableQuote = openOrdersAccount\n    ? market.quoteSplSizeToNumber(openOrdersAccount.quoteTokenFree)\n    : 0;\n\n  let quoteBalance = (quoteCurrencyBalances || 0) + (availableQuote || 0);\n  let baseBalance = baseCurrencyBalances || 0;\n  let sizeDecimalCount =\n    market?.minOrderSize && getDecimalCount(market.minOrderSize);\n  let priceDecimalCount = market?.tickSize && getDecimalCount(market.tickSize);\n\n  useEffect(() => {\n    setChangeOrderRef && setChangeOrderRef(doChangeOrder);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setChangeOrderRef]);\n\n  useEffect(() => {\n    baseSize && price && onSliderChange(sizeFraction);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [side]);\n\n  useEffect(() => {\n    updateSizeFraction();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [price, baseSize]);\n\n  const onSetBaseSize = (baseSize) => {\n    setBaseSize(baseSize);\n    const rawQuoteSize = baseSize * (price || markPrice);\n    const quoteSize =\n      baseSize && roundToDecimal(rawQuoteSize, sizeDecimalCount);\n    setQuoteSize(quoteSize);\n  };\n\n  const onSetQuoteSize = (quoteSize) => {\n    setQuoteSize(quoteSize);\n    const rawBaseSize = quoteSize / price;\n    const baseSize = quoteSize && roundToDecimal(rawBaseSize, sizeDecimalCount);\n    setBaseSize(baseSize);\n  };\n\n  const doChangeOrder = ({ size, price }) => {\n    const formattedSize = size && roundToDecimal(size, sizeDecimalCount);\n    const formattedPrice = price && roundToDecimal(price, priceDecimalCount);\n    formattedSize && onSetBaseSize(formattedSize);\n    formattedPrice && setPrice(formattedPrice);\n  };\n\n  const updateSizeFraction = () => {\n    const rawMaxSize = side === 'buy' ? quoteBalance / price : baseBalance;\n    const maxSize = floorToDecimal(rawMaxSize, sizeDecimalCount);\n    const sizeFraction = Math.min((baseSize / maxSize) * 100, 100);\n    setSizeFraction(sizeFraction);\n  };\n\n  const onSliderChange = (value) => {\n    if (!price && markPrice) {\n      let formattedMarkPrice = priceDecimalCount\n        ? markPrice.toFixed(priceDecimalCount)\n        : markPrice;\n      setPrice(formattedMarkPrice);\n    }\n\n    let newSize;\n    if (side === 'buy') {\n      if (price || markPrice) {\n        newSize = ((quoteBalance / (price || markPrice)) * value) / 100;\n      }\n    } else {\n      newSize = (baseBalance * value) / 100;\n    }\n\n    // round down to minOrderSize increment\n    let formatted = floorToDecimal(newSize, sizeDecimalCount);\n\n    onSetBaseSize(formatted);\n  };\n\n  const postOnChange = (checked) => {\n    if (checked) {\n      setIoc(false);\n    }\n    setPostOnly(checked);\n  };\n  const iocOnChange = (checked) => {\n    if (checked) {\n      setPostOnly(false);\n    }\n    setIoc(checked);\n  };\n\n  async function onSubmit() {\n    const parsedPrice = parseFloat(price);\n    const parsedSize = parseFloat(baseSize);\n\n    setSubmitting(true);\n    try {\n      await placeOrder({\n        side,\n        price: parsedPrice,\n        size: parsedSize,\n        orderType: ioc ? 'ioc' : postOnly ? 'postOnly' : 'limit',\n        market,\n        connection: sendConnection,\n        wallet,\n        baseCurrencyAccount: baseCurrencyAccount?.pubkey,\n        quoteCurrencyAccount: quoteCurrencyAccount?.pubkey,\n      });\n      setPrice(null);\n      onSetBaseSize(null);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error placing order',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <FloatingElement\n      style={{ display: 'flex', flexDirection: 'column', ...style }}\n    >\n      <div style={{ flex: 1 }}>\n        <Radio.Group\n          onChange={(e) => setSide(e.target.value)}\n          value={side}\n          buttonStyle=\"solid\"\n          style={{\n            marginBottom: 8,\n            width: '100%',\n          }}\n        >\n          <Radio.Button\n            value=\"buy\"\n            style={{\n              width: '50%',\n              textAlign: 'center',\n              background: side === 'buy' ? '#02bf76' : '',\n              borderColor: side === 'buy' ? '#02bf76' : '',\n            }}\n          >\n            BUY\n          </Radio.Button>\n          <Radio.Button\n            value=\"sell\"\n            style={{\n              width: '50%',\n              textAlign: 'center',\n              background: side === 'sell' ? '#F23B69' : '',\n              borderColor: side === 'sell' ? '#F23B69' : '',\n            }}\n          >\n            SELL\n          </Radio.Button>\n        </Radio.Group>\n        <Input\n          style={{ textAlign: 'right', paddingBottom: 8 }}\n          addonBefore={<div style={{ width: '30px' }}>Price</div>}\n          suffix={\n            <span style={{ fontSize: 10, opacity: 0.5 }}>{quoteCurrency}</span>\n          }\n          value={price}\n          type=\"number\"\n          step={market?.tickSize || 1}\n          onChange={(e) => setPrice(e.target.value)}\n        />\n        <Input.Group compact style={{ paddingBottom: 8 }}>\n          <Input\n            style={{ width: 'calc(50% + 30px)', textAlign: 'right' }}\n            addonBefore={<div style={{ width: '30px' }}>Size</div>}\n            suffix={\n              <span style={{ fontSize: 10, opacity: 0.5 }}>{baseCurrency}</span>\n            }\n            value={baseSize}\n            type=\"number\"\n            step={market?.minOrderSize || 1}\n            onChange={(e) => onSetBaseSize(e.target.value)}\n          />\n          <Input\n            style={{ width: 'calc(50% - 30px)', textAlign: 'right' }}\n            suffix={\n              <span style={{ fontSize: 10, opacity: 0.5 }}>\n                {quoteCurrency}\n              </span>\n            }\n            value={quoteSize}\n            type=\"number\"\n            step={market?.minOrderSize || 1}\n            onChange={(e) => onSetQuoteSize(e.target.value)}\n          />\n        </Input.Group>\n        <Slider\n          value={sizeFraction}\n          tipFormatter={(value) => `${value}%`}\n          marks={sliderMarks}\n          onChange={onSliderChange}\n        />\n        <div style={{ paddingTop: 18 }}>\n          {'POST '}\n          <Switch\n            checked={postOnly}\n            onChange={postOnChange}\n            style={{ marginRight: 40 }}\n          />\n          {'IOC '}\n          <Switch checked={ioc} onChange={iocOnChange} />\n        </div>\n      </div>\n      {side === 'buy' ? (\n        <BuyButton\n          disabled={!price || !baseSize}\n          onClick={onSubmit}\n          block\n          type=\"primary\"\n          size=\"large\"\n          loading={submitting}\n        >\n          Buy {baseCurrency}\n        </BuyButton>\n      ) : (\n        <SellButton\n          disabled={!price || !baseSize}\n          onClick={onSubmit}\n          block\n          type=\"primary\"\n          size=\"large\"\n          loading={submitting}\n        >\n          Sell {baseCurrency}\n        </SellButton>\n      )}\n    </FloatingElement>\n  );\n}\n","import { Col, Row } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useMarket, useTrades } from '../utils/markets';\nimport { getDecimalCount } from '../utils/utils';\nimport FloatingElement from './layout/FloatingElement';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\nconst SizeTitle = styled(Row)`\n  padding: 20px 0 14px;\n  color: #434a59;\n`;\n\n// TODO: Put in some scrolling\nconst TradesContainer = styled.div`\n  height: calc(100% - 75px);\n  margin-right: -20px;\n  padding-right: 5px;\n  overflow-y: scroll;\n`;\n\nexport default function PublicTrades({ smallScreen }) {\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const trades = useTrades();\n  return (\n    <FloatingElement\n      style={\n        smallScreen\n          ? { flex: 1 }\n          : {\n              marginTop: '10px',\n              minHeight: '270px',\n              height: 'calc(100vh - 710px)',\n            }\n      }\n    >\n      <Title>Recent Market trades</Title>\n      <SizeTitle>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          Size ({baseCurrency})\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          Price ({quoteCurrency}){' '}\n        </Col>\n      </SizeTitle>\n      {!!trades && (\n        <TradesContainer>\n          {trades.map((trade, i) => (\n            <Row key={i} style={{ marginBottom: 4 }}>\n              <Col span={12} style={{ textAlign: 'left' }}>\n                {market?.minOrderSize && !isNaN(trade.size)\n                  ? Number(trade.size).toFixed(\n                      getDecimalCount(market.minOrderSize),\n                    )\n                  : trade.size}\n              </Col>\n              <Col\n                span={12}\n                style={{\n                  textAlign: 'right',\n                  color: trade.side === 'buy' ? '#41C77A' : '#F23B69',\n                }}\n              >\n                {market?.tickSize && !isNaN(trade.price)\n                  ? Number(trade.price).toFixed(\n                      getDecimalCount(market.tickSize),\n                    )\n                  : trade.price}\n              </Col>\n            </Row>\n          ))}\n        </TradesContainer>\n      )}\n    </FloatingElement>\n  );\n}\n","import React from 'react';\nimport { Button } from 'antd';\nimport { LinkOutlined } from '@ant-design/icons';\n\nexport default function LinkAddress({ title, address }) {\n  return (\n    <div>\n      {title && <p style={{ color: 'white' }}>{title}</p>}\n      <Button\n        type=\"link\"\n        icon={<LinkOutlined />}\n        href={'https://explorer.solana.com/address/' + address}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {address}\n      </Button>\n    </div>\n  );\n}\n","import { Button, Divider, Spin, Typography } from 'antd';\nimport React from 'react';\nimport {\n  useGetOpenOrdersForDeprecatedMarkets,\n  useBalancesForDeprecatedMarkets,\n  useUnmigratedOpenOrdersAccounts,\n} from '../utils/markets';\nimport FloatingElement from './layout/FloatingElement';\nimport CheckOutlined from '@ant-design/icons/lib/icons/CheckOutlined';\nimport BalancesTable from './UserInfoTable/BalancesTable';\nimport OpenOrderTable from './UserInfoTable/OpenOrderTable';\nimport SyncOutlined from '@ant-design/icons/lib/icons/SyncOutlined';\n\nconst { Title } = Typography;\n\nexport default function DeprecatedMarketsInstructions({ switchToLiveMarkets }) {\n  const balances = useBalancesForDeprecatedMarkets();\n  const {\n    openOrders,\n    loaded,\n    refreshOpenOrders,\n  } = useGetOpenOrdersForDeprecatedMarkets();\n\n  const { refresh } = useUnmigratedOpenOrdersAccounts();\n  const needToCancelOrders = !openOrders || openOrders.length > 0;\n  const filteredBalances =\n    balances &&\n    balances.filter(({ orders, unsettled }) => orders > 0 || unsettled > 0);\n  const needToSettleFunds = filteredBalances && filteredBalances.length > 0;\n  return (\n    <FloatingElement>\n      <Title level={4} style={{ color: 'rgba(255, 255, 255, 1)' }}>\n        Migrate to new markets\n      </Title>\n      <Typography>\n        Serum has rolled out upgraded markets! They're faster and support fee\n        discounts based on SRM holdings.\n      </Typography>\n      <br />\n      <Typography>\n        To migrate over to the new markets, please cancel your orders and settle\n        your funds on old markets.\n      </Typography>\n      <div style={{ marginTop: 20, display: 'flex', justifyContent: 'center' }}>\n        <Button onClick={() => refresh(true)}>\n          <SyncOutlined /> Refresh data\n        </Button>\n      </div>\n      {!balances ? (\n        <Spin size=\"large\" />\n      ) : (\n        <>\n          <Divider>\n            {!needToCancelOrders && <CheckOutlined />} Cancel your orders\n          </Divider>\n          {needToCancelOrders ? (\n            loaded ? (\n              <OpenOrderTable\n                openOrders={openOrders}\n                onCancelSuccess={() => {\n                  setTimeout(() => {\n                    refresh();\n                    refreshOpenOrders();\n                  }, 1000); // Wait so that on-chain account state reflects the update\n                }}\n              />\n            ) : (\n              <Spin size=\"large\" />\n            )\n          ) : null}\n          <Divider>\n            {!needToSettleFunds && <CheckOutlined />} Settle your funds\n          </Divider>\n          {needToSettleFunds && (\n            <BalancesTable\n              balances={filteredBalances}\n              hideWalletBalance\n              showMarket\n              onSettleSuccess={() => {\n                setTimeout(refresh, 1000); // Wait so that on-chain account state reflects the update\n              }}\n            />\n          )}\n          <Divider>Switch to upgraded markets</Divider>\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\n            <Button\n              onClick={switchToLiveMarkets}\n              disabled={needToSettleFunds || needToCancelOrders}\n            >\n              Switch to new markets\n            </Button>\n          </div>\n        </>\n      )}\n    </FloatingElement>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Col, Input, Modal, Row, Typography } from 'antd';\nimport { notify } from '../utils/notifications';\nimport { isValidPublicKey } from '../utils/utils';\nimport { PublicKey } from '@solana/web3.js';\nimport { Market, MARKETS, TOKEN_MINTS } from '@project-serum/serum';\nimport { useAccountInfo, useConnection } from '../utils/connection';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nconst { Text } = Typography;\n\nexport default function CustomMarketDialog({\n  visible,\n  onAddCustomMarket,\n  onClose,\n}) {\n  const connection = useConnection();\n\n  const [marketId, setMarketId] = useState('');\n\n  const [marketLabel, setMarketLabel] = useState('');\n  const [baseLabel, setBaseLabel] = useState('');\n  const [quoteLabel, setQuoteLabel] = useState('');\n\n  const [market, setMarket] = useState(null);\n  const [loadingMarket, setLoadingMarket] = useState(false);\n\n  const wellFormedMarketId = isValidPublicKey(marketId);\n\n  const [marketAccountInfo] = useAccountInfo(\n    wellFormedMarketId ? new PublicKey(marketId) : null,\n  );\n  const programId = marketAccountInfo\n    ? marketAccountInfo.owner.toBase58()\n    : MARKETS.find(({ deprecated }) => !deprecated).programId.toBase58();\n\n  useEffect(() => {\n    if (!wellFormedMarketId || !programId) {\n      resetLabels();\n      return;\n    }\n    setLoadingMarket(true);\n    Market.load(\n      connection,\n      new PublicKey(marketId),\n      {},\n      new PublicKey(programId),\n    )\n      .then((market) => {\n        setMarket(market);\n      })\n      .catch(() => {\n        resetLabels();\n        setMarket(null);\n      })\n      .finally(() => setLoadingMarket(false));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [connection, marketId, programId]);\n\n  const resetLabels = () => {\n    setMarketLabel(null);\n    setBaseLabel(null);\n    setQuoteLabel(null);\n  };\n\n  const knownMarket = MARKETS.find(\n    (m) =>\n      m.address.toBase58() === marketId && m.programId.toBase58() === programId,\n  );\n  const knownProgram = MARKETS.find(\n    (m) => m.programId.toBase58() === programId,\n  );\n  const knownBaseCurrency =\n    market?.baseMintAddress &&\n    TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\n      ?.name;\n\n  const knownQuoteCurrency =\n    market?.quoteMintAddress &&\n    TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\n      ?.name;\n\n  const canSubmit =\n    !loadingMarket &&\n    !!market &&\n    market.publicKey.toBase58() === marketId &&\n    marketId &&\n    programId &&\n    marketLabel &&\n    (knownBaseCurrency || baseLabel) &&\n    (knownQuoteCurrency || quoteLabel) &&\n    wellFormedMarketId;\n\n  const onSubmit = () => {\n    if (!canSubmit) {\n      notify({\n        message: 'Please fill in all fields with valid values',\n        type: 'error',\n      });\n      return;\n    }\n\n    let params = {\n      address: marketId,\n      programId,\n      name: marketLabel,\n    };\n    if (!knownBaseCurrency) {\n      params.baseLabel = baseLabel;\n    }\n    if (!knownQuoteCurrency) {\n      params.quoteLabel = quoteLabel;\n    }\n    onAddCustomMarket(params);\n    onDoClose();\n  };\n\n  const onDoClose = () => {\n    resetLabels();\n    setMarket(null);\n    setMarketId(null);\n    onClose();\n  };\n\n  return (\n    <Modal\n      title={'Add custom market'}\n      visible={visible}\n      onOk={onSubmit}\n      okText={'Add'}\n      onCancel={onDoClose}\n      okButtonProps={{ disabled: !canSubmit }}\n    >\n      <div>\n        {wellFormedMarketId ? (\n          <>\n            {!market && !loadingMarket && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Not a valid market</Text>\n              </Row>\n            )}\n            {market && knownMarket && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"warning\">Market known: {knownMarket.name}</Text>\n              </Row>\n            )}\n            {market && !knownProgram && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Warning: unknown DEX program</Text>\n              </Row>\n            )}\n            {market && knownProgram && knownProgram.deprecated && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"warning\">Warning: deprecated DEX program</Text>\n              </Row>\n            )}\n          </>\n        ) : (\n          <>\n            {marketId && !wellFormedMarketId && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Invalid market ID</Text>\n              </Row>\n            )}\n          </>\n        )}\n        <Row style={{ marginBottom: 8 }}>\n          <Col span={24}>\n            <Input\n              placeholder=\"Market Id\"\n              value={marketId}\n              onChange={(e) => setMarketId(e.target.value)}\n              suffix={loadingMarket ? <LoadingOutlined /> : null}\n            />\n          </Col>\n        </Row>\n\n        <Row style={{ marginBottom: 8, marginTop: 8 }}>\n          <Col span={24}>\n            <Input\n              placeholder=\"Market Label\"\n              disabled={!market}\n              value={marketLabel}\n              onChange={(e) => setMarketLabel(e.target.value)}\n            />\n          </Col>\n        </Row>\n        <Row gutter={[8]} style={{ marginBottom: 8 }}>\n          <Col span={12}>\n            <Input\n              placeholder=\"Base label\"\n              disabled={!market || knownBaseCurrency}\n              value={knownBaseCurrency || baseLabel}\n              onChange={(e) => setBaseLabel(e.target.value)}\n            />\n            {market && !knownBaseCurrency && (\n              <div style={{ marginTop: 8 }}>\n                <Text type=\"warning\">Warning: unknown token</Text>\n              </div>\n            )}\n          </Col>\n          <Col span={12}>\n            <Input\n              placeholder=\"Quote label\"\n              disabled={!market || knownQuoteCurrency}\n              value={knownQuoteCurrency || quoteLabel}\n              onChange={(e) => setQuoteLabel(e.target.value)}\n            />\n            {market && !knownQuoteCurrency && (\n              <div style={{ marginTop: 8 }}>\n                <Text type=\"warning\">Warning: unknown token</Text>\n              </div>\n            )}\n          </Col>\n        </Row>\n      </div>\n    </Modal>\n  );\n}\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Col, Popover, Row, Select, Typography, Button } from 'antd';\nimport styled from 'styled-components';\nimport Orderbook from '../components/Orderbook';\nimport UserInfoTable from '../components/UserInfoTable';\nimport StandaloneBalancesDisplay from '../components/StandaloneBalancesDisplay';\nimport {\n  useMarket,\n  useMarketsList,\n  useUnmigratedDeprecatedMarkets,\n  getMarketInfos,\n} from '../utils/markets';\nimport TradeForm from '../components/TradeForm';\nimport TradesTable from '../components/TradesTable';\nimport LinkAddress from '../components/LinkAddress';\nimport DeprecatedMarketsInstructions from '../components/DeprecatedMarketsInstructions';\nimport {\n  InfoCircleOutlined,\n  PlusCircleOutlined,\n  DeleteOutlined,\n} from '@ant-design/icons';\nimport CustomMarketDialog from '../components/CustomMarketDialog';\nimport { notify } from '../utils/notifications';\n\nconst { Option, OptGroup } = Select;\n\nconst Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 16px 16px;\n  .borderNone .ant-select-selector {\n    border: none !important;\n  }\n`;\n\nexport default function TradePage() {\n  const {\n    market,\n    marketName,\n    customMarkets,\n    setCustomMarkets,\n    setMarketAddress,\n  } = useMarket();\n  const markets = useMarketsList();\n  const [handleDeprecated, setHandleDeprecated] = useState(false);\n  const [addMarketVisible, setAddMarketVisible] = useState(false);\n  const deprecatedMarkets = useUnmigratedDeprecatedMarkets();\n  const [dimensions, setDimensions] = useState({\n    height: window.innerHeight,\n    width: window.innerWidth,\n  });\n\n  useEffect(() => {\n    document.title = marketName ? `${marketName} — Serum` : 'Serum';\n  }, [marketName]);\n\n  const changeOrderRef = useRef();\n\n  useEffect(() => {\n    const handleResize = () => {\n      setDimensions({\n        height: window.innerHeight,\n        width: window.innerWidth,\n      });\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const width = dimensions?.width;\n  const componentProps = {\n    onChangeOrderRef: (ref) => (changeOrderRef.current = ref),\n    onPrice: useCallback(\n      (price) => changeOrderRef.current && changeOrderRef.current({ price }),\n      [],\n    ),\n    onSize: useCallback(\n      (size) => changeOrderRef.current && changeOrderRef.current({ size }),\n      [],\n    ),\n  };\n  const getComponent = useCallback(() => {\n    if (handleDeprecated) {\n      return (\n        <DeprecatedMarketsPage\n          switchToLiveMarkets={() => setHandleDeprecated(false)}\n        />\n      );\n    } else if (width < 1000) {\n      return <RenderSmaller {...componentProps} />;\n    } else if (width < 1450) {\n      return <RenderSmall {...componentProps} />;\n    } else {\n      return <RenderNormal {...componentProps} />;\n    }\n  }, [width, componentProps, handleDeprecated]);\n\n  const onAddCustomMarket = (customMarket) => {\n    const marketInfo = getMarketInfos(customMarkets).some(\n      (m) => m.address.toBase58() === customMarket.address,\n    );\n    if (marketInfo) {\n      notify({\n        message: `A market with the given ID already exists`,\n        type: 'error',\n      });\n      return;\n    }\n    const newCustomMarkets = [...customMarkets, customMarket];\n    setCustomMarkets(newCustomMarkets);\n    setMarketAddress(customMarket.address);\n  };\n\n  const onDeleteCustomMarket = (address) => {\n    const newCustomMarkets = customMarkets.filter((m) => m.address !== address);\n    setCustomMarkets(newCustomMarkets);\n  };\n\n  return (\n    <>\n      <CustomMarketDialog\n        visible={addMarketVisible}\n        onClose={() => setAddMarketVisible(false)}\n        onAddCustomMarket={onAddCustomMarket}\n      />\n      <Wrapper>\n        <Row\n          align=\"middle\"\n          style={{ paddingLeft: 5, paddingRight: 5 }}\n          gutter={16}\n        >\n          <Col>\n            <MarketSelector\n              markets={markets}\n              setHandleDeprecated={setHandleDeprecated}\n              placeholder={'Select market'}\n              customMarkets={customMarkets}\n              onDeleteCustomMarket={onDeleteCustomMarket}\n            />\n          </Col>\n          {market ? (\n            <Col>\n              <Popover\n                content={<LinkAddress address={market.publicKey.toBase58()} />}\n                placement=\"bottomRight\"\n                title=\"Market address\"\n                trigger=\"click\"\n              >\n                <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n              </Popover>\n            </Col>\n          ) : null}\n          <Col>\n            <PlusCircleOutlined\n              style={{ color: '#2abdd2' }}\n              onClick={() => setAddMarketVisible(true)}\n            />\n          </Col>\n          {deprecatedMarkets && deprecatedMarkets.length > 0 && (\n            <React.Fragment>\n              <Col>\n                <Typography>\n                  You have unsettled funds on old markets! Please go through\n                  them to claim your funds.\n                </Typography>\n              </Col>\n              <Col>\n                <Button onClick={() => setHandleDeprecated(!handleDeprecated)}>\n                  {handleDeprecated ? 'View new markets' : 'Handle old markets'}\n                </Button>\n              </Col>\n            </React.Fragment>\n          )}\n        </Row>\n        {getComponent()}\n      </Wrapper>\n    </>\n  );\n}\n\nfunction MarketSelector({\n  markets,\n  placeholder,\n  setHandleDeprecated,\n  customMarkets,\n  onDeleteCustomMarket,\n}) {\n  const { market, setMarketAddress } = useMarket();\n\n  const onSetMarketAddress = (marketAddress) => {\n    setHandleDeprecated(false);\n    setMarketAddress(marketAddress);\n  };\n\n  const extractBase = (a) => a.split('/')[0];\n  const extractQuote = (a) => a.split('/')[1];\n\n  const selectedMarket = getMarketInfos(customMarkets)\n    .find(\n      (proposedMarket) =>\n        market?.address && proposedMarket.address.equals(market.address),\n    )\n    ?.address?.toBase58();\n\n  return (\n    <Select\n      showSearch\n      size={'large'}\n      style={{ width: 200 }}\n      placeholder={placeholder || 'Select a market'}\n      optionFilterProp=\"name\"\n      onSelect={onSetMarketAddress}\n      listHeight={400}\n      value={selectedMarket}\n      filterOption={(input, option) =>\n        option.name?.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      }\n    >\n      {customMarkets && customMarkets.length > 0 && (\n        <OptGroup label=\"Custom\">\n          {customMarkets.map(({ address, name }, i) => (\n            <Option\n              value={address}\n              key={address}\n              name={name}\n              style={{\n                padding: '10px',\n                backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\n              }}\n            >\n              <Row>\n                <Col flex=\"auto\">{name}</Col>\n                {selectedMarket !== address && (\n                  <Col>\n                    <DeleteOutlined\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        e.nativeEvent.stopImmediatePropagation();\n                        onDeleteCustomMarket && onDeleteCustomMarket(address);\n                      }}\n                    />\n                  </Col>\n                )}\n              </Row>\n            </Option>\n          ))}\n        </OptGroup>\n      )}\n      <OptGroup label=\"Markets\">\n        {markets\n          .sort((a, b) =>\n            extractQuote(a.name) === 'USDT' && extractQuote(b.name) !== 'USDT'\n              ? -1\n              : extractQuote(a.name) !== 'USDT' &&\n                extractQuote(b.name) === 'USDT'\n              ? 1\n              : 0,\n          )\n          .sort((a, b) =>\n            extractBase(a.name) < extractBase(b.name)\n              ? -1\n              : extractBase(a.name) > extractBase(b.name)\n              ? 1\n              : 0,\n          )\n          .map(({ address, name, deprecated }, i) => (\n            <Option\n              value={address.toBase58()}\n              key={address}\n              name={name}\n              style={{\n                padding: '10px',\n                backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\n              }}\n            >\n              {name} {deprecated ? ' (Deprecated)' : null}\n            </Option>\n          ))}\n      </OptGroup>\n    </Select>\n  );\n}\n\nconst DeprecatedMarketsPage = ({ switchToLiveMarkets }) => {\n  return (\n    <>\n      <Row>\n        <Col flex=\"auto\">\n          <DeprecatedMarketsInstructions\n            switchToLiveMarkets={switchToLiveMarkets}\n          />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst RenderNormal = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <Row\n      style={{\n        minHeight: '800px',\n        flexWrap: 'nowrap',\n      }}\n    >\n      <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n        <UserInfoTable />\n      </Col>\n      <Col flex={'360px'} style={{ height: '100%' }}>\n        <Orderbook smallScreen={false} onPrice={onPrice} onSize={onSize} />\n        <TradesTable smallScreen={false} />\n      </Col>\n      <Col\n        flex=\"400px\"\n        style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n      >\n        <TradeForm setChangeOrderRef={onChangeOrderRef} />\n        <StandaloneBalancesDisplay />\n      </Col>\n    </Row>\n  );\n};\n\nconst RenderSmall = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <>\n      <Row\n        style={{\n          height: '800px',\n        }}\n      >\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n          <Orderbook\n            smallScreen={true}\n            depth={13}\n            onPrice={onPrice}\n            onSize={onSize}\n          />\n        </Col>\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n          <TradesTable smallScreen={true} />\n        </Col>\n        <Col\n          flex=\"400px\"\n          style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n        >\n          <TradeForm setChangeOrderRef={onChangeOrderRef} />\n          <StandaloneBalancesDisplay />\n        </Col>\n      </Row>\n      <Row>\n        <Col flex=\"auto\">\n          <UserInfoTable />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst RenderSmaller = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <>\n      <Row>\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <TradeForm style={{ flex: 1 }} setChangeOrderRef={onChangeOrderRef} />\n        </Col>\n        <Col xs={24} sm={12}>\n          <StandaloneBalancesDisplay />\n        </Col>\n      </Row>\n      <Row\n        style={{\n          height: '500px',\n        }}\n      >\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <Orderbook smallScreen={true} onPrice={onPrice} onSize={onSize} />\n        </Col>\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <TradesTable smallScreen={true} />\n        </Col>\n      </Row>\n      <Row>\n        <Col flex=\"auto\">\n          <UserInfoTable />\n        </Col>\n      </Row>\n    </>\n  );\n};\n","import React from 'react';\nimport { useOpenOrdersForAllMarkets } from '../utils/markets';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport OpenOrderTable from '../components/UserInfoTable/OpenOrderTable';\n\nexport default function OpenOrdersPage() {\n  const [openOrders] = useOpenOrdersForAllMarkets();\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <OpenOrderTable openOrders={openOrders} />\n    </FloatingElement>\n  );\n}\n","import React from 'react';\nimport DataTable from '../layout/DataTable';\n\nexport default function WalletBalancesTable({\n  loaded = false,\n  walletBalances,\n}) {\n  const columns = [\n    {\n      title: 'Coin',\n      dataIndex: 'key',\n      key: 'key',\n    },\n    {\n      title: 'Wallet Balance',\n      dataIndex: 'wallet',\n      key: 'wallet',\n    },\n  ];\n  return (\n    <DataTable\n      emptyLabel=\"No balances\"\n      dataSource={walletBalances}\n      columns={columns}\n      pagination={false}\n      loading={!loaded}\n    />\n  );\n}\n","import { Button } from 'antd';\nimport React from 'react';\nimport DataTable from '../layout/DataTable';\nimport { useConnection } from '../../utils/connection';\nimport { useWallet } from '../../utils/wallet';\nimport { settleFunds } from '../../utils/send';\nimport { notify } from '../../utils/notifications';\n\nexport default function AccountsTable({ accountBalances }) {\n  const connection = useConnection();\n  const { wallet } = useWallet();\n\n  async function onSettleFunds(account) {\n    try {\n      const {\n        market,\n        openOrdersAccount,\n        baseCurrencyAccount,\n        quoteCurrencyAccount,\n      } = account;\n      return await settleFunds({\n        market,\n        openOrders: openOrdersAccount,\n        connection,\n        wallet,\n        baseCurrencyAccount,\n        quoteCurrencyAccount,\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n    }\n  }\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'key',\n      key: 'key',\n    },\n    {\n      title: 'Orders',\n      dataIndex: 'orders',\n      key: 'orders',\n    },\n    {\n      title: 'Unsettled',\n      dataIndex: 'unsettled',\n      key: 'unsettled',\n    },\n    {\n      key: 'action',\n      render: (account) => (\n        <div style={{ textAlign: 'right' }}>\n          <Button\n            ghost\n            style={{ marginRight: 12 }}\n            onClick={() => onSettleFunds(account)}\n          >\n            Settle\n          </Button>\n        </div>\n      ),\n    },\n  ];\n  return (\n    <DataTable\n      emptyLabel=\"No balances\"\n      dataSource={accountBalances}\n      columns={columns.map((data) => ({\n        ...data,\n        key: `${data.market}${data.coin}`,\n      }))}\n      pagination={false}\n    />\n  );\n}\n","import React from 'react';\nimport { Tabs } from 'antd';\nimport {\n  useWalletBalancesForAllMarkets,\n  useOpenOrderAccountBalancesForAllMarkets,\n} from '../utils/markets';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport WalletBalancesTable from '../components/UserInfoTable/WalletBalancesTable';\nimport AccountsTable from '../components/UserInfoTable/AccountsTable';\n\nconst { TabPane } = Tabs;\n\nexport default function BalancesPage() {\n  const [\n    walletBalances,\n    loadedWalletBalances,\n  ] = useWalletBalancesForAllMarkets();\n  const [\n    accountBalances,\n    accountBalancesLoaded,\n  ] = useOpenOrderAccountBalancesForAllMarkets();\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <Tabs defaultActiveKey=\"walletBalances\">\n        <TabPane tab=\"Wallet Balances\" key=\"walletBalances\">\n          <WalletBalancesTable\n            loaded={loadedWalletBalances}\n            walletBalances={walletBalances}\n          />\n        </TabPane>\n        <TabPane tab=\"Market balances\" key=\"marketBalances\">\n          <AccountsTable\n            loaded={accountBalancesLoaded}\n            accountBalances={accountBalances}\n          />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n","import React, { useContext } from 'react';\nimport { useLocalStorageState } from './utils';\nimport { useInterval } from './useInterval';\nimport { useConnection } from './connection';\nimport { useWallet } from './wallet';\nimport { useAllMarkets, useTokenAccounts, useMarket } from './markets';\nimport { settleAllFunds } from './send';\n\nconst PreferencesContext = React.createContext(null);\n\nexport function PreferencesProvider({ children }) {\n  const [autoSettleEnabled, setAutoSettleEnabled] = useLocalStorageState(\n    'autoSettleEnabled',\n    false,\n  );\n\n  const [tokenAccounts] = useTokenAccounts();\n  const { connected, wallet } = useWallet();\n  const { customMarkets } = useMarket();\n  const marketList = useAllMarkets(customMarkets);\n  const connection = useConnection();\n\n  useInterval(() => {\n    const autoSettle = async () => {\n      const markets = marketList.map((m) => m.market);\n      try {\n        console.log('Auto settling');\n        await settleAllFunds({ connection, wallet, tokenAccounts, markets });\n      } catch (e) {\n        console.log('Error auto settling funds: ' + e.message);\n      }\n    };\n\n    connected && wallet?.autoApprove && autoSettleEnabled && autoSettle();\n  }, 10000);\n\n  return (\n    <PreferencesContext.Provider\n      value={{\n        autoSettleEnabled,\n        setAutoSettleEnabled,\n      }}\n    >\n      {children}\n    </PreferencesContext.Provider>\n  );\n}\n\nexport function usePreferences() {\n  const context = useContext(PreferencesContext);\n  return {\n    autoSettleEnabled: context.autoSettleEnabled,\n    setAutoSettleEnabled: context.setAutoSettleEnabled,\n  };\n}\n","import React from 'react';\nimport { Switch, Typography } from 'antd';\nimport { usePreferences } from '../utils/preferences';\n\nconst { Paragraph } = Typography;\n\nexport default function Settings({ autoApprove }) {\n  const { autoSettleEnabled, setAutoSettleEnabled } = usePreferences();\n\n  return (\n    <div>\n      <Switch\n        style={{ marginRight: 10 }}\n        disabled={!autoApprove}\n        checked={autoApprove && autoSettleEnabled}\n        onChange={setAutoSettleEnabled}\n      />{' '}\n      Auto settle\n      {!autoApprove && (\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)', marginTop: 10 }}>\n          To use auto settle, first enable auto approval in your wallet\n        </Paragraph>\n      )}\n    </div>\n  );\n}\n","import {\n  InfoCircleOutlined,\n  SettingOutlined,\n  UserOutlined,\n} from '@ant-design/icons';\nimport { Button, Menu, Popover, Select } from 'antd';\nimport React, { useCallback } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport logo from '../assets/logo.svg';\nimport styled from 'styled-components';\nimport { useWallet, WALLET_PROVIDERS } from '../utils/wallet';\nimport { ENDPOINTS, useConnectionConfig } from '../utils/connection';\nimport LinkAddress from './LinkAddress';\nimport Settings from './Settings';\n\nconst Wrapper = styled.div`\n  background-color: #0d1017;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  padding: 0px 30px;\n  flex-wrap: wrap;\n`;\nconst LogoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  color: #2abdd2;\n  font-weight: bold;\n  cursor: pointer;\n  img {\n    height: 30px;\n    margin-right: 8px;\n  }\n`;\n\nexport default function TopBar() {\n  const { connected, wallet, providerUrl, setProvider } = useWallet();\n  const { endpoint, setEndpoint } = useConnectionConfig();\n  const location = useLocation();\n  const history = useHistory();\n\n  const publicKey = wallet?.publicKey?.toBase58();\n\n  const handleClick = useCallback(\n    (e) => {\n      history.push(e.key);\n    },\n    [history],\n  );\n\n  return (\n    <Wrapper>\n      <LogoWrapper>\n        <img src={logo} alt=\"\" onClick={() => history.push('/')} />\n        {'SERUM'}\n      </LogoWrapper>\n      <Menu\n        mode=\"horizontal\"\n        onClick={handleClick}\n        selectedKeys={[location.pathname]}\n        style={{\n          borderBottom: 'none',\n          backgroundColor: 'transparent',\n          display: 'flex',\n          alignItems: 'flex-end',\n          flex: 1,\n        }}\n      >\n        <Menu.Item key=\"/\">TRADE</Menu.Item>\n      </Menu>\n      {connected && (\n        <div>\n          <Popover\n            content={<Settings autoApprove={wallet?.autoApprove} />}\n            placement=\"bottomRight\"\n            title=\"Settings\"\n            trigger=\"click\"\n          >\n            <Button style={{ marginRight: 8 }}>\n              <SettingOutlined />\n              Settings\n            </Button>\n          </Popover>\n        </div>\n      )}\n      <div>\n        <Select\n          onSelect={setEndpoint}\n          value={endpoint}\n          style={{ marginRight: 8 }}\n        >\n          {ENDPOINTS.map(({ name, endpoint }) => (\n            <Select.Option value={endpoint} key={endpoint}>\n              {name}\n            </Select.Option>\n          ))}\n        </Select>\n      </div>\n      <div>\n        <Select onSelect={setProvider} value={providerUrl}>\n          {WALLET_PROVIDERS.map(({ name, url }) => (\n            <Select.Option value={url} key={url}>\n              {name}\n            </Select.Option>\n          ))}\n        </Select>\n      </div>\n      <div>\n        <Button\n          type=\"text\"\n          size=\"large\"\n          onClick={connected ? wallet.disconnect : wallet.connect}\n          style={{ color: '#2abdd2' }}\n        >\n          <UserOutlined />\n          {!connected ? 'Connect wallet' : 'Disconnect'}\n        </Button>\n        {connected && (\n          <Popover\n            content={<LinkAddress address={publicKey} />}\n            placement=\"bottomRight\"\n            title=\"Wallet public key\"\n            trigger=\"click\"\n          >\n            <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n          </Popover>\n        )}\n      </div>\n    </Wrapper>\n  );\n}\n","export const helpUrls = {\n  customerSupport: 'https://t.me/ProjectSerum',\n  customerSupportZh: 'https://t.me/ProjectSerum_Chinese',\n  contactEmail: 'mailto:contact@projectserum.com',\n  discord: 'https://discord.gg/MxZFT4v',\n  telegram: 'https://t.me/ProjectSerum',\n  github: 'https://github.com/project-serum',\n  projectSerum: 'https://projectserum.com/',\n  developerResources: 'https://projectserum.com/developer-resources',\n  solanaBeach: 'https://solanabeach.io',\n};\n","import React from 'react';\nimport { Layout, Row, Col, Grid } from 'antd';\nimport Link from './Link';\nimport { helpUrls } from './HelpUrls';\nconst { Footer } = Layout;\nconst { useBreakpoint } = Grid;\n\nconst footerElements = [\n  {\n    description: 'Serum Developer Resources',\n    link: helpUrls.developerResources,\n  },\n  { description: 'Discord', link: helpUrls.discord },\n  { description: 'Telegram', link: helpUrls.telegram },\n  { description: 'GitHub', link: helpUrls.github },\n  { description: 'Project Serum', link: helpUrls.projectSerum },\n  { description: 'Solana Network', link: helpUrls.solanaBeach },\n];\n\nexport const CustomFooter = () => {\n  const smallScreen = !useBreakpoint().lg;\n\n  return (\n    <Footer\n      style={{\n        height: '45px',\n        paddingBottom: 10,\n        paddingTop: 10,\n      }}\n    >\n      <Row align=\"middle\" gutter={[16, 4]}>\n        {!smallScreen && (\n          <>\n            <Col flex=\"auto\" />\n            {footerElements.map((elem, index) => {\n              return (\n                <Col key={index + ''}>\n                  <Link external to={elem.link}>\n                    {elem.description}\n                  </Link>\n                </Col>\n              );\n            })}\n          </>\n        )}\n        <Col flex=\"auto\">{/*  <DexProgramSelector />*/}</Col>\n      </Row>\n    </Footer>\n  );\n};\n","import { Layout } from 'antd';\nimport React from 'react';\nimport TopBar from './TopBar';\nimport { CustomFooter as Footer } from './Footer';\nconst { Header, Content } = Layout;\n\nexport default function BasicLayout({ children }) {\n  return (\n    <React.Fragment>\n      <Layout\n        style={{ display: 'flex', minHeight: '100vh', flexDirection: 'column' }}\n      >\n        <Header style={{ padding: 0, minHeight: 64, height: 'unset' }}>\n          <TopBar />\n        </Header>\n        <Content style={{ flex: 1 }}>{children}</Content>\n        <Footer />\n      </Layout>\n    </React.Fragment>\n  );\n}\n","import React, { useState } from 'react';\nimport { Button, Form, Input, Tooltip, Typography } from 'antd';\nimport { notify } from '../utils/notifications';\nimport { isValidPublicKey } from '../utils/utils';\nimport { PublicKey } from '@solana/web3.js';\nimport { MARKETS, TokenInstructions } from '@project-serum/serum';\nimport { useAccountInfo, useConnection } from '../utils/connection';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport styled from 'styled-components';\nimport { parseTokenMintData } from '../utils/tokens';\nimport { useWallet } from '../utils/wallet';\nimport { listMarket } from '../utils/send';\nimport Link from '../components/Link';\n\nconst { Text, Title } = Typography;\n\nconst Wrapper = styled.div`\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nexport default function ListNewMarketPage() {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [baseMintInput, baseMintInfo] = useMintInput(\n    'baseMint',\n    <Text>\n      Base Token Mint Address{' '}\n      <Text type=\"secondary\">\n        (e.g. BTC solana address: {<Text type=\"secondary\" code>9n4nbM75f5Ui33ZbPYXn59EwSgE8CGsHtAeTH5YFeJ9E</Text>})\n      </Text>\n    </Text>,\n    'The base token is the token being traded. For example, the base token of a BTC/USDT market is BTC.',\n  );\n  const [quoteMintInput, quoteMintInfo] = useMintInput(\n    'quoteMint',\n    <Text>\n      Quote Token Mint Address{' '}\n      <Text type=\"secondary\">\n        (e.g. USDT solana address: {<Text type=\"secondary\" code>BQcdHdAQW1hczDbBi9hiegXAR7A98Q9jx3X3iBBBDiq4</Text>})\n      </Text>\n    </Text>,\n    'The quote token is the token used to price trades. For example, the quote token of a BTC/USDT market is USDT.',\n  );\n  const [lotSize, setLotSize] = useState('1');\n  const [tickSize, setTickSize] = useState('0.01');\n  const dexProgramId = MARKETS.find(({ deprecated }) => !deprecated).programId;\n  const [submitting, setSubmitting] = useState(false);\n\n  const [listedMarket, setListedMarket] = useState(null);\n\n  let baseLotSize;\n  let quoteLotSize;\n  if (baseMintInfo && parseFloat(lotSize) > 0) {\n    baseLotSize = Math.round(10 ** baseMintInfo.decimals * parseFloat(lotSize));\n    if (quoteMintInfo && parseFloat(tickSize) > 0) {\n      quoteLotSize = Math.round(\n        parseFloat(lotSize) *\n          10 ** quoteMintInfo.decimals *\n          parseFloat(tickSize),\n      );\n    }\n  }\n\n  const canSubmit =\n    connected &&\n    !!baseMintInfo &&\n    !!quoteMintInfo &&\n    !!baseLotSize &&\n    !!quoteLotSize;\n\n  async function onSubmit() {\n    if (!canSubmit) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const marketAddress = await listMarket({\n        connection,\n        wallet,\n        baseMint: baseMintInfo.address,\n        quoteMint: quoteMintInfo.address,\n        baseLotSize,\n        quoteLotSize,\n        dexProgramId,\n      });\n      setListedMarket(marketAddress);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error listing new market: ' + e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <Wrapper>\n      <FloatingElement>\n        <Title level={4}>List New Market</Title>\n        <Form\n          labelCol={{ span: 24 }}\n          wrapperCol={{ span: 24 }}\n          layout={\"vertical\"}\n          onFinish={onSubmit}\n        >\n          {baseMintInput}\n          {quoteMintInput}\n          <Form.Item\n            label={\n              <Tooltip title=\"Smallest allowed order size. For a BTC/USDT market, this would be in units of BTC.\">\n                Minimum Order Size <Text type=\"secondary\">(Lot size in e.g. BTC)</Text>\n              </Tooltip>\n            }\n            name=\"lotSize\"\n            initialValue=\"1\"\n            validateStatus={\n              baseMintInfo && quoteMintInfo\n                ? baseLotSize\n                  ? 'success'\n                  : 'error'\n                : null\n            }\n            hasFeedback={baseMintInfo && quoteMintInfo}\n          >\n            <Input\n              value={lotSize}\n              onChange={(e) => setLotSize(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Tooltip title=\"Smallest amount by which prices can move. For a BTC/USDT market, this would be in units of USDT.\">\n                Tick Size <Text type=\"secondary\">(Price increment in e.g. USDT)</Text>\n              </Tooltip>\n            }\n            name=\"tickSize\"\n            initialValue=\"0.01\"\n            validateStatus={\n              baseMintInfo && quoteMintInfo\n                ? quoteLotSize\n                  ? 'success'\n                  : 'error'\n                : null\n            }\n            hasFeedback={baseMintInfo && quoteMintInfo}\n          >\n            <Input\n              value={tickSize}\n              onChange={(e) => setTickSize(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <Form.Item label=\" \" colon={false}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              disabled={!canSubmit}\n              loading={submitting}\n            >\n              {connected ? 'Submit' : 'Not connected to wallet'}\n            </Button>\n          </Form.Item>\n        </Form>\n      </FloatingElement>\n      {listedMarket ? (\n        <FloatingElement>\n          <Text>New market address: {listedMarket.toBase58()}</Text>\n        </FloatingElement>\n      ) : null}\n    </Wrapper>\n  );\n}\n\nfunction useMintInput(name, label, tooltip) {\n  const [address, setAddress] = useState('');\n  const [accountInfo, loaded] = useAccountInfo(\n    isValidPublicKey(address) ? new PublicKey(address) : null,\n  );\n\n  let validateStatus = null;\n  let hasFeedback = false;\n  let help = null;\n  let mintInfo = null;\n  if (address) {\n    hasFeedback = true;\n    if (accountInfo) {\n      if (\n        accountInfo.owner.equals(TokenInstructions.TOKEN_PROGRAM_ID) &&\n        accountInfo.data.length === 82\n      ) {\n        let parsed = parseTokenMintData(accountInfo.data);\n        if (parsed.initialized) {\n          validateStatus = 'success';\n          mintInfo = {\n            address: new PublicKey(address),\n            decimals: parsed.decimals,\n          };\n        } else {\n          validateStatus = 'error';\n          help = 'Invalid SPL mint';\n        }\n      } else {\n        validateStatus = 'error';\n        help = 'Invalid SPL mint address';\n      }\n    } else if (isValidPublicKey(address) && !loaded) {\n      validateStatus = 'loading';\n    } else {\n      validateStatus = 'error';\n      help = 'Invalid Solana address';\n    }\n  }\n\n  const input = (\n    <Form.Item\n      label={\n        <Tooltip\n          title={\n            <>\n              {tooltip} You can look up token mint addresses on{' '}\n              <Link external to=\"https://sollet.io\">\n                sollet.io\n              </Link>\n              .\n            </>\n          }\n        >\n          {label}\n        </Tooltip>\n      }\n      name={name}\n      validateStatus={validateStatus}\n      hasFeedback={hasFeedback}\n      help={help}\n    >\n      <Input\n        value={address}\n        onChange={(e) => setAddress(e.target.value.trim())}\n      />\n    </Form.Item>\n  );\n\n  return [input, mintInfo];\n}\n","import { HashRouter, Route } from 'react-router-dom';\nimport TradePage from './pages/TradePage';\nimport OpenOrdersPage from './pages/OpenOrdersPage';\nimport React from 'react';\nimport BalancesPage from './pages/BalancesPage';\nimport BasicLayout from './components/BasicLayout';\nimport ListNewMarketPage from './pages/ListNewMarketPage';\n\nexport function Routes() {\n  return (\n    <HashRouter basename={'/'}>\n      <Route exact path=\"/\" component={TradePageContents} />\n      <Route exact path=\"/orders\" component={OpenOrdersPageContents} />\n      <Route exact path=\"/balances\" component={BalancesPageContents} />\n      <Route exact path=\"/list-new-market\">\n        <BasicLayout>\n          <ListNewMarketPage />\n        </BasicLayout>\n      </Route>\n    </HashRouter>\n  );\n}\n\nfunction TradePageContents() {\n  return (\n    <BasicLayout>\n      <TradePage />\n    </BasicLayout>\n  );\n}\n\nfunction OpenOrdersPageContents() {\n  return (\n    <BasicLayout>\n      <OpenOrdersPage />\n    </BasicLayout>\n  );\n}\n\nfunction BalancesPageContents() {\n  return (\n    <BasicLayout>\n      <BalancesPage />\n    </BasicLayout>\n  );\n}\n","import React, { Suspense } from 'react';\nimport './App.less';\nimport { ConnectionProvider } from './utils/connection';\nimport { MarketProvider } from './utils/markets';\nimport { WalletProvider } from './utils/wallet';\nimport { GlobalStyle } from './global_style';\nimport { Spin } from 'antd';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { Routes } from './routes';\nimport { PreferencesProvider } from './utils/preferences';\n\nexport default function App() {\n  return (\n    <Suspense fallback={() => <Spin size=\"large\" />}>\n      <GlobalStyle />\n      <ErrorBoundary>\n        <ConnectionProvider>\n          <MarketProvider>\n            <WalletProvider>\n              <PreferencesProvider>\n                <Suspense fallback={() => <Spin size=\"large\" />}>\n                  <Routes />\n                </Suspense>\n              </PreferencesProvider>\n            </WalletProvider>\n          </MarketProvider>\n        </ConnectionProvider>\n      </ErrorBoundary>\n    </Suspense>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useContext, useEffect, useMemo, useState } from 'react';\nimport Wallet from '@project-serum/sol-wallet-adapter';\nimport { notify } from './notifications';\nimport { useConnectionConfig } from './connection';\nimport { useLocalStorageState } from './utils';\n\nexport const WALLET_PROVIDERS = [\n  { name: 'sollet.io', url: 'https://www.sollet.io' },\n];\n\nconst WalletContext = React.createContext(null);\n\nexport function WalletProvider({ children }) {\n  const { endpoint } = useConnectionConfig();\n\n  const [providerUrl, setProviderUrl] = useLocalStorageState(\n    'walletProvider',\n    'https://www.sollet.io',\n  );\n\n  const wallet = useMemo(() => new Wallet(providerUrl, endpoint), [\n    providerUrl,\n    endpoint,\n  ]);\n\n  const [connected, setConnected] = useState(false);\n\n  useEffect(() => {\n    console.log('trying to connect');\n    wallet.on('connect', () => {\n      console.log('connected');\n      setConnected(true);\n      let walletPublicKey = wallet.publicKey.toBase58();\n      let keyToDisplay =\n        walletPublicKey.length > 20\n          ? `${walletPublicKey.substring(0, 7)}.....${walletPublicKey.substring(\n              walletPublicKey.length - 7,\n              walletPublicKey.length,\n            )}`\n          : walletPublicKey;\n      notify({\n        message: 'Wallet update',\n        description: 'Connected to wallet ' + keyToDisplay,\n      });\n    });\n    wallet.on('disconnect', () => {\n      setConnected(false);\n      notify({\n        message: 'Wallet update',\n        description: 'Disconnected from wallet',\n      });\n    });\n    return () => {\n      wallet.disconnect();\n      setConnected(false);\n    };\n  }, [wallet]);\n\n  return (\n    <WalletContext.Provider\n      value={{\n        wallet,\n        connected,\n        providerUrl,\n        setProviderUrl,\n        providerName:\n          WALLET_PROVIDERS.find(({ url }) => url === providerUrl)?.name ??\n          providerUrl,\n      }}\n    >\n      {children}\n    </WalletContext.Provider>\n  );\n}\n\nexport function useWallet() {\n  const context = useContext(WalletContext);\n  return {\n    connected: context.connected,\n    wallet: context.wallet,\n    providerUrl: context.providerUrl,\n    setProvider: context.setProviderUrl,\n    providerName: context.providerName,\n  };\n}\n","import { useEffect, useReducer } from 'react';\n\nimport assert from 'assert';\n\nconst pageLoadTime = new Date();\n\nconst globalCache = new Map();\n\nclass FetchLoopListener {\n  constructor(cacheKey, fn, refreshInterval, refreshIntervalOnError, callback) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.refreshInterval = refreshInterval;\n    this.refreshIntervalOnError = refreshIntervalOnError;\n    this.callback = callback;\n  }\n}\n\nclass FetchLoopInternal {\n  constructor(cacheKey, fn) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.timeoutId = null;\n    this.listeners = new Set();\n    this.errors = 0;\n  }\n\n  get refreshInterval() {\n    return Math.min(\n      ...[...this.listeners].map((listener) => listener.refreshInterval),\n    );\n  }\n\n  get refreshIntervalOnError() {\n    return Math.min(\n      ...[...this.listeners]\n        .map((listener) => listener.refreshIntervalOnError)\n        .filter((x) => x),\n    );\n  }\n\n  get stopped() {\n    return this.listeners.size === 0;\n  }\n\n  addListener(listener) {\n    const previousRefreshInterval = this.refreshInterval;\n    this.listeners.add(listener);\n    if (this.refreshInterval < previousRefreshInterval) {\n      this.refresh();\n    }\n  }\n\n  removeListener(listener) {\n    assert(this.listeners.delete(listener));\n    if (this.stopped) {\n      if (this.timeoutId) {\n        clearTimeout(this.timeoutId);\n        this.timeoutId = null;\n      }\n    }\n  }\n\n  notifyListeners() {\n    this.listeners.forEach((listener) => listener.callback());\n  }\n\n  refresh = async () => {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    }\n    if (this.stopped) {\n      return;\n    }\n\n    let errored = false;\n    try {\n      const data = await this.fn();\n      globalCache.set(this.cacheKey, data);\n      this.errors = 0;\n      this.notifyListeners();\n      return data;\n    } catch (error) {\n      ++this.errors;\n      console.warn(error);\n      errored = true;\n    } finally {\n      if (!this.timeoutId && !this.stopped) {\n        let waitTime = this.refreshInterval;\n        if (\n          errored &&\n          this.refreshIntervalOnError &&\n          this.refreshIntervalOnError > 0\n        ) {\n          waitTime = this.refreshIntervalOnError;\n        }\n\n        // Back off on errors.\n        if (this.errors > 0) {\n          waitTime = Math.min(1000 * 2 ** (this.errors - 1), 60000);\n        }\n\n        // Don't do any refreshing for the first five seconds, to make way for other things to load.\n        const timeSincePageLoad = new Date() - pageLoadTime;\n        if (timeSincePageLoad < 5000) {\n          waitTime += 5000 - timeSincePageLoad / 2;\n        }\n\n        // Refresh background pages slowly.\n        if (document.visibilityState === 'hidden') {\n          waitTime = 60000;\n        } else if (!document.hasFocus()) {\n          waitTime *= 1.5;\n        }\n\n        // Add jitter so we don't send all requests at the same time.\n        waitTime *= 0.8 + 0.4 * Math.random();\n\n        this.timeoutId = setTimeout(this.refresh, waitTime);\n      }\n    }\n  };\n}\n\nclass FetchLoops {\n  loops = new Map();\n\n  addListener(listener) {\n    if (!this.loops.has(listener.cacheKey)) {\n      this.loops.set(\n        listener.cacheKey,\n        new FetchLoopInternal(listener.cacheKey, listener.fn),\n      );\n    }\n    this.loops.get(listener.cacheKey).addListener(listener);\n  }\n\n  removeListener(listener) {\n    const loop = this.loops.get(listener.cacheKey);\n    loop.removeListener(listener);\n    if (loop.stopped) {\n      this.loops.delete(listener.cacheKey);\n    }\n  }\n\n  refresh(cacheKey) {\n    if (this.loops.has(cacheKey)) {\n      this.loops.get(cacheKey).refresh();\n    }\n  }\n\n  refreshAll() {\n    return Promise.all([...this.loops.values()].map((loop) => loop.refresh()));\n  }\n}\nconst globalLoops = new FetchLoops();\n\nexport function useAsyncData(\n  asyncFn,\n  cacheKey,\n  { refreshInterval = 60000, refreshIntervalOnError = null } = {},\n) {\n  const [, rerender] = useReducer((i) => i + 1, 0);\n\n  useEffect(() => {\n    if (!cacheKey) {\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      return () => {};\n    }\n    const listener = new FetchLoopListener(\n      cacheKey,\n      asyncFn,\n      refreshInterval,\n      refreshIntervalOnError,\n      rerender,\n    );\n    globalLoops.addListener(listener);\n    return () => globalLoops.removeListener(listener);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey, refreshInterval]);\n\n  if (!cacheKey) {\n    return [null, false];\n  }\n\n  const loaded = globalCache.has(cacheKey);\n  const data = loaded ? globalCache.get(cacheKey) : undefined;\n  return [data, loaded];\n}\n\nexport function refreshCache(cacheKey, clearCache = false) {\n  if (clearCache) {\n    globalCache.delete(cacheKey);\n  }\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.refresh();\n    if (clearCache) {\n      loop.notifyListeners();\n    }\n  }\n}\n\nexport function refreshAllCaches() {\n  for (const loop of globalLoops.loops.values()) {\n    loop.refresh();\n  }\n}\n\nexport function setCache(cacheKey, value, { initializeOnly = false } = {}) {\n  if (initializeOnly && globalCache.has(cacheKey)) {\n    return;\n  }\n  globalCache.set(cacheKey, value);\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.notifyListeners();\n  }\n}\n","import { notify } from './notifications';\nimport { getDecimalCount, sleep } from './utils';\nimport { getSelectedTokenAccountForMint } from './markets';\nimport {\n  Account,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n} from '@solana/web3.js';\nimport { BN } from 'bn.js';\nimport {\n  DexInstructions,\n  Market,\n  TOKEN_MINTS,\n  TokenInstructions,\n  OpenOrders,\n} from '@project-serum/serum';\n\nexport async function createTokenAccountTransaction({\n  connection,\n  wallet,\n  mintPublicKey,\n}) {\n  const newAccount = new Account();\n  const transaction = SystemProgram.createAccount({\n    fromPubkey: wallet.publicKey,\n    newAccountPubkey: newAccount.publicKey,\n    lamports: await connection.getMinimumBalanceForRentExemption(165),\n    space: 165,\n    programId: TokenInstructions.TOKEN_PROGRAM_ID,\n  });\n  transaction.add(\n    TokenInstructions.initializeAccount({\n      account: newAccount.publicKey,\n      mint: mintPublicKey,\n      owner: wallet.publicKey,\n    }),\n  );\n  return {\n    transaction,\n    signer: newAccount,\n    newAccountPubkey: newAccount.publicKey,\n  };\n}\n\nexport async function settleFunds({\n  market,\n  openOrders,\n  connection,\n  wallet,\n  baseCurrencyAccount,\n  quoteCurrencyAccount,\n}) {\n  if (\n    !market ||\n    !wallet ||\n    !connection ||\n    !openOrders ||\n    (!baseCurrencyAccount && !quoteCurrencyAccount)\n  ) {\n    notify({ message: 'Not connected' });\n    return;\n  }\n\n  let createAccountTransaction;\n  let createAccountSigner;\n  let baseCurrencyAccountPubkey = baseCurrencyAccount?.pubkey;\n  let quoteCurrencyAccountPubkey = quoteCurrencyAccount?.pubkey;\n\n  if (!baseCurrencyAccountPubkey) {\n    const result = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.baseMintAddress,\n    });\n    baseCurrencyAccountPubkey = result?.newAccountPubkey;\n    createAccountTransaction = result?.transaction;\n    createAccountSigner = result?.signer;\n  }\n  if (!quoteCurrencyAccountPubkey) {\n    const result = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.quoteMintAddress,\n    });\n    quoteCurrencyAccountPubkey = result?.newAccountPubkey;\n    createAccountTransaction = result?.transaction;\n    createAccountSigner = result?.signer;\n  }\n  let referrerQuoteWallet = null;\n  if (market.supportsReferralFees) {\n    if (\n      process.env.REACT_APP_USDT_REFERRAL_FEES_ADDRESS &&\n      market.quoteMintAddress.equals(\n        TOKEN_MINTS.find(({ name }) => name === 'USDT').address,\n      )\n    ) {\n      referrerQuoteWallet = new PublicKey(\n        process.env.REACT_APP_USDT_REFERRAL_FEES_ADDRESS,\n      );\n    } else if (\n      process.env.REACT_APP_USDC_REFERRAL_FEES_ADDRESS &&\n      market.quoteMintAddress.equals(\n        TOKEN_MINTS.find(({ name }) => name === 'USDC').address,\n      )\n    ) {\n      referrerQuoteWallet = new PublicKey(\n        process.env.REACT_APP_USDC_REFERRAL_FEES_ADDRESS,\n      );\n    }\n  }\n  const {\n    transaction: settleFundsTransaction,\n    signers: settleFundsSigners,\n  } = await market.makeSettleFundsTransaction(\n    connection,\n    openOrders,\n    baseCurrencyAccountPubkey,\n    quoteCurrencyAccountPubkey,\n    referrerQuoteWallet,\n  );\n\n  let transaction = mergeTransactions([\n    createAccountTransaction,\n    settleFundsTransaction,\n  ]);\n  let signers = createAccountSigner\n    ? [...settleFundsSigners, createAccountSigner]\n    : settleFundsSigners;\n\n  return await sendTransaction({\n    transaction,\n    signers,\n    wallet,\n    connection,\n    sendingMessage: 'Settling funds...',\n  });\n}\n\nexport async function settleAllFunds({\n  connection,\n  wallet,\n  tokenAccounts,\n  markets,\n}) {\n  if (!markets || !wallet || !connection || !tokenAccounts) {\n    return;\n  }\n\n  const programIds = [];\n  markets\n    .reduce((cumulative, m) => {\n      cumulative.push(m._programId);\n      return cumulative;\n    }, [])\n    .forEach((programId) => {\n      if (!programIds.find((p) => p.equals(programId))) {\n        programIds.push(programId);\n      }\n    });\n\n  const getOpenOrdersAccountsForProgramId = async (programId) => {\n    const openOrdersAccounts = await OpenOrders.findForOwner(\n      connection,\n      wallet.publicKey,\n      programId,\n    );\n    return openOrdersAccounts.filter(\n      (openOrders) =>\n        openOrders.baseTokenTotal.toNumber() ||\n        openOrders.quoteTokenTotal.toNumber(),\n    );\n  };\n\n  const openOrdersAccountsForProgramIds = await Promise.all(\n    programIds.map((programId) => getOpenOrdersAccountsForProgramId(programId)),\n  );\n  const openOrdersAccounts = openOrdersAccountsForProgramIds.reduce(\n    (accounts, current) => accounts.concat(current),\n    [],\n  );\n\n  const settleTransactions = (await Promise.all(\n    openOrdersAccounts.map((openOrdersAccount) => {\n      const market = markets.find((m) =>\n        m._decoded?.ownAddress?.equals(openOrdersAccount.market),\n      );\n      return (\n        market &&\n        market.makeSettleFundsTransaction(\n          connection,\n          openOrdersAccount,\n          getSelectedTokenAccountForMint(tokenAccounts, market?.baseMintAddress)\n            ?.pubkey,\n          getSelectedTokenAccountForMint(\n            tokenAccounts,\n            market?.quoteMintAddress,\n          )?.pubkey,\n        )\n      );\n    }),\n  )).filter((x) => x);\n  if (!settleTransactions || settleTransactions.length === 0) return;\n\n  const transactions = settleTransactions.slice(0, 4).map((t) => t.transaction);\n  const signers = [];\n  settleTransactions\n    .reduce((cumulative, t) => cumulative.concat(t.signers), [])\n    .forEach((signer) => {\n      if (!signers.find((s) => s.constructor.name === signer.constructor.name && s.equals(signer))) {\n        signers.push(signer);\n      }\n    });\n\n  const transaction = mergeTransactions(transactions);\n\n  return await sendTransaction({\n    transaction,\n    signers,\n    wallet,\n    connection,\n  });\n}\n\nexport async function cancelOrder(params) {\n  return cancelOrders({ ...params, orders: [params.order] });\n}\n\nexport async function cancelOrders({ market, wallet, connection, orders }) {\n  const transaction = market.makeMatchOrdersTransaction(5);\n  orders.forEach((order) => {\n    transaction.add(\n      market.makeCancelOrderInstruction(connection, wallet.publicKey, order),\n    );\n  });\n  transaction.add(market.makeMatchOrdersTransaction(5));\n  return await sendTransaction({\n    transaction,\n    wallet,\n    connection,\n    sendingMessage: 'Sending cancel...',\n  });\n}\n\nexport async function placeOrder({\n  side,\n  price,\n  size,\n  orderType,\n  market,\n  connection,\n  wallet,\n  baseCurrencyAccount,\n  quoteCurrencyAccount,\n}) {\n  let formattedMinOrderSize =\n    market?.minOrderSize?.toFixed(getDecimalCount(market.minOrderSize)) ||\n    market?.minOrderSize;\n  let formattedTickSize =\n    market?.tickSize?.toFixed(getDecimalCount(market.tickSize)) ||\n    market?.tickSize;\n  const isIncrement = (num, step) =>\n    Math.abs((num / step) % 1) < 1e-5 ||\n    Math.abs(((num / step) % 1) - 1) < 1e-5;\n  if (isNaN(price)) {\n    notify({ message: 'Invalid price', type: 'error' });\n    return;\n  }\n  if (isNaN(size)) {\n    notify({ message: 'Invalid size', type: 'error' });\n    return;\n  }\n  if (!wallet || !wallet.publicKey) {\n    notify({ message: 'Connect wallet', type: 'error' });\n    return;\n  }\n  if (!market) {\n    notify({ message: 'Invalid  market', type: 'error' });\n    return;\n  }\n  if (!isIncrement(size, market.minOrderSize)) {\n    notify({\n      message: `Size must be an increment of ${formattedMinOrderSize}`,\n      type: 'error',\n    });\n    return;\n  }\n  if (size < market.minOrderSize) {\n    notify({ message: 'Size too small', type: 'error' });\n    return;\n  }\n  if (!isIncrement(price, market.tickSize)) {\n    notify({\n      message: `Price must be an increment of ${formattedTickSize}`,\n      type: 'error',\n    });\n    return;\n  }\n  if (price < market.tickSize) {\n    notify({ message: 'Price under tick size', type: 'error' });\n    return;\n  }\n  const owner = wallet.publicKey;\n\n  const payer = side === 'sell' ? baseCurrencyAccount : quoteCurrencyAccount;\n  if (!payer) {\n    notify({\n      message: 'Need an SPL token account for cost currency',\n      type: 'error',\n    });\n    return;\n  }\n  const params = {\n    owner,\n    payer,\n    side,\n    price,\n    size,\n    orderType,\n  };\n  console.log(params);\n\n  const transaction = market.makeMatchOrdersTransaction(5);\n  let {\n    transaction: placeOrderTx,\n    signers,\n  } = await market.makePlaceOrderTransaction(\n    connection,\n    params,\n    10_000,\n    10_000,\n  );\n  transaction.add(placeOrderTx);\n  transaction.add(market.makeMatchOrdersTransaction(5));\n\n  return await sendTransaction({\n    transaction,\n    wallet,\n    connection,\n    signers,\n    sendingMessage: 'Sending order...',\n  });\n}\n\nexport async function listMarket({\n  connection,\n  wallet,\n  baseMint,\n  quoteMint,\n  baseLotSize,\n  quoteLotSize,\n  dexProgramId,\n}) {\n  const market = new Account();\n  const requestQueue = new Account();\n  const eventQueue = new Account();\n  const bids = new Account();\n  const asks = new Account();\n  const baseVault = new Account();\n  const quoteVault = new Account();\n  const feeRateBps = 0;\n  const quoteDustThreshold = new BN(100);\n\n  async function getVaultOwnerAndNonce() {\n    const nonce = new BN(0);\n    while (true) {\n      try {\n        const vaultOwner = await PublicKey.createProgramAddress(\n          [market.publicKey.toBuffer(), nonce.toArrayLike(Buffer, 'le', 8)],\n          dexProgramId,\n        );\n        return [vaultOwner, nonce];\n      } catch (e) {\n        nonce.iaddn(1);\n      }\n    }\n  }\n  const [vaultOwner, vaultSignerNonce] = await getVaultOwnerAndNonce();\n\n  const tx1 = new Transaction();\n  tx1.add(\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: baseVault.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(165),\n      space: 165,\n      programId: TokenInstructions.TOKEN_PROGRAM_ID,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: quoteVault.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(165),\n      space: 165,\n      programId: TokenInstructions.TOKEN_PROGRAM_ID,\n    }),\n    TokenInstructions.initializeAccount({\n      account: baseVault.publicKey,\n      mint: baseMint,\n      owner: vaultOwner,\n    }),\n    TokenInstructions.initializeAccount({\n      account: quoteVault.publicKey,\n      mint: quoteMint,\n      owner: vaultOwner,\n    }),\n  );\n\n  const tx2 = new Transaction();\n  tx2.add(\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: market.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(\n        Market.getLayout(dexProgramId).span,\n      ),\n      space: Market.getLayout(dexProgramId).span,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: requestQueue.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(5120 + 12),\n      space: 5120 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: eventQueue.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(262144 + 12),\n      space: 262144 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: bids.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(65536 + 12),\n      space: 65536 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: asks.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(65536 + 12),\n      space: 65536 + 12,\n      programId: dexProgramId,\n    }),\n    DexInstructions.initializeMarket({\n      market: market.publicKey,\n      requestQueue: requestQueue.publicKey,\n      eventQueue: eventQueue.publicKey,\n      bids: bids.publicKey,\n      asks: asks.publicKey,\n      baseVault: baseVault.publicKey,\n      quoteVault: quoteVault.publicKey,\n      baseMint,\n      quoteMint,\n      baseLotSize: new BN(baseLotSize),\n      quoteLotSize: new BN(quoteLotSize),\n      feeRateBps,\n      vaultSignerNonce,\n      quoteDustThreshold,\n      programId: dexProgramId,\n    }),\n  );\n\n  const signedTransactions = await Promise.all([\n    signTransaction({\n      transaction: tx1,\n      wallet,\n      connection,\n      signers: [wallet.publicKey, baseVault, quoteVault],\n    }),\n    signTransaction({\n      transaction: tx2,\n      wallet,\n      connection,\n      signers: [wallet.publicKey, market, requestQueue, eventQueue, bids, asks],\n    }),\n  ]);\n  for (let signedTransaction of signedTransactions) {\n    await sendSignedTransaction({\n      signedTransaction,\n      connection,\n    });\n  }\n\n  return market.publicKey;\n}\n\nconst getUnixTs = () => {\n  return new Date().getTime() / 1000;\n};\n\nconst DEFAULT_TIMEOUT = 15000;\n\nasync function sendTransaction({\n  transaction,\n  wallet,\n  signers = [wallet.publicKey],\n  connection,\n  sendingMessage = 'Sending transaction...',\n  sentMessage = 'Transaction sent',\n  successMessage = 'Transaction confirmed',\n  timeout = DEFAULT_TIMEOUT,\n}) {\n  const signedTransaction = await signTransaction({\n    transaction,\n    wallet,\n    signers,\n    connection,\n  });\n  return await sendSignedTransaction({\n    signedTransaction,\n    connection,\n    sendingMessage,\n    sentMessage,\n    successMessage,\n    timeout,\n  });\n}\n\nasync function signTransaction({\n  transaction,\n  wallet,\n  signers = [wallet.publicKey],\n  connection,\n}) {\n  transaction.recentBlockhash = (\n    await connection.getRecentBlockhash('max')\n  ).blockhash;\n  transaction.signPartial(...signers);\n  return await wallet.signTransaction(transaction);\n}\n\nasync function sendSignedTransaction({\n  signedTransaction,\n  connection,\n  sendingMessage = 'Sending transaction...',\n  sentMessage = 'Transaction sent',\n  successMessage = 'Transaction confirmed',\n  timeout = DEFAULT_TIMEOUT,\n}) {\n  const rawTransaction = signedTransaction.serialize();\n  const startTime = getUnixTs();\n  notify({ message: sendingMessage });\n  const txid = await connection.sendRawTransaction(rawTransaction, {\n    skipPreflight: true,\n  });\n  notify({ message: sentMessage, type: 'success', txid });\n\n  console.log('Started awaiting confirmation for', txid);\n\n  let done = false;\n  (async () => {\n    while (!done && getUnixTs() - startTime < timeout) {\n      connection.sendRawTransaction(rawTransaction, {\n        skipPreflight: true,\n      });\n      await sleep(300);\n    }\n  })();\n  try {\n    await awaitTransactionSignatureConfirmation(txid, timeout, connection);\n  } catch (err) {\n    if (err.timeout) {\n      throw new Error('Timed out awaiting confirmation on transaction');\n    }\n    throw new Error('Transaction failed');\n  } finally {\n    done = true;\n  }\n  notify({ message: successMessage, type: 'success', txid });\n\n  console.log('Latency', txid, getUnixTs() - startTime);\n  return txid;\n}\n\nasync function awaitTransactionSignatureConfirmation(\n  txid,\n  timeout,\n  connection,\n) {\n  let done = false;\n  const result = await new Promise((resolve, reject) => {\n    (async () => {\n      setTimeout(() => {\n        if (done) {\n          return;\n        }\n        done = true;\n        console.log('Timed out for txid', txid);\n        reject({ timeout: true });\n      }, timeout);\n      try {\n        connection.onSignature(\n          txid,\n          (result) => {\n            console.log('WS confirmed', txid, result);\n            done = true;\n            if (result.err) {\n              reject(result.err);\n            } else {\n              resolve(result);\n            }\n          },\n          'recent',\n        );\n        console.log('Set up WS connection', txid);\n      } catch (e) {\n        done = true;\n        console.log('WS error in setup', txid, e);\n      }\n      while (!done) {\n        // eslint-disable-next-line no-loop-func\n        (async () => {\n          try {\n            const signatureStatuses = await connection.getSignatureStatuses([\n              txid,\n            ]);\n            const result = signatureStatuses && signatureStatuses.value[0];\n            if (!done) {\n              if (!result) {\n                console.log('REST null result for', txid, result);\n              } else if (result.err) {\n                console.log('REST error for', txid, result);\n                done = true;\n                reject(result.err);\n              } else if (!result.confirmations) {\n                console.log('REST no confirmations for', txid, result);\n              } else {\n                console.log('REST confirmation for', txid, result);\n                done = true;\n                resolve(result);\n              }\n            }\n          } catch (e) {\n            if (!done) {\n              console.log('REST connection error: txid', txid, e);\n            }\n          }\n        })();\n        await sleep(300);\n      }\n    })();\n  });\n  done = true;\n  return result;\n}\n\nfunction mergeTransactions(transactions) {\n  const transaction = new Transaction();\n  transactions\n    .filter((t) => t)\n    .forEach((t) => {\n      transaction.add(t);\n    });\n  return transaction;\n}\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nexport default function Link({ external = false, ...props }) {\n  let { to, children, ...rest } = props;\n  if (external) {\n    return (\n      <a href={to} target=\"_blank\" rel=\"noopener noreferrer\" {...rest}>\n        {children}\n      </a>\n    );\n  }\n  return (\n    <RouterLink to={to} {...rest}>\n      {children}\n    </RouterLink>\n  );\n}\n"],"sourceRoot":""}