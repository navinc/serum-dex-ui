{"version":3,"sources":["../../src/layout.js","../../src/tokens_and_markets.ts","../../src/index.js","../../src/instructions.js","../../src/queue.ts","../../src/fees.ts","assets/logo.svg","../../src/market.ts","../../src/slab.ts","utils/utils.tsx","utils/fetch-loop.tsx","utils/connection.tsx","components/Link.js","utils/notifications.tsx","utils/wallet.tsx","global_style.ts","components/ErrorBoundary.jsx","utils/send.tsx","utils/tokens.tsx","utils/bonfidaConnector.tsx","utils/markets.tsx","utils/useInterval.tsx","components/layout/FloatingElement.jsx","components/Orderbook.jsx","utils/usePrevious.tsx","components/layout/DataTable.jsx","components/UserInfoTable/BalancesTable.jsx","components/UserInfoTable/OpenOrderTable.tsx","components/UserInfoTable/FillsTable.jsx","components/UserInfoTable/FeesTable.js","components/UserInfoTable/index.jsx","components/DepositDialog.jsx","components/StandaloneTokenAccountSelect.tsx","components/LinkAddress.tsx","components/StandaloneBalancesDisplay.tsx","components/TradeForm.tsx","components/TradesTable.tsx","components/DeprecatedMarketsInstructions.js","components/CustomMarketDialog.jsx","pages/TradePage.tsx","components/WalletConnect.tsx","pages/OpenOrdersPage.tsx","components/UserInfoTable/WalletBalancesTable.tsx","pages/BalancesPage.tsx","components/ConvertForm.tsx","pages/ConvertPage.tsx","utils/preferences.tsx","components/Settings.jsx","components/CustomClusterEndpointDialog.tsx","components/AppSearch.tsx","components/TopBar.tsx","components/HelpUrls.ts","components/Footer.tsx","components/BasicLayout.js","components/useMintInput.tsx","pages/ListNewMarketPage.jsx","pages/pools/NewPoolPage.tsx","components/MintName.tsx","pages/pools/PoolPage/PoolBasketDisplay.tsx","pages/pools/PoolPage/PoolInfoPanel.tsx","pages/pools/PoolPage/PoolCreateRedeemPanel.tsx","pages/pools/PoolPage/PoolBalancesPanel.tsx","pages/pools/PoolPage/PoolAdminPanel.tsx","pages/pools/PoolPage/index.tsx","pages/pools/PoolListPage.tsx","routes.tsx","App.tsx","serviceWorker.js","index.js","../../src/token-instructions.js"],"names":["BNLayout","buffer_layout_1","Blob","b","address","name","layout_1","exports","INSTRUCTION_LAYOUT","u64","feeTier","module","u32","zeros","isValidPublicKey","key","PublicKey","sleep","ms","a","Promise","resolve","setTimeout","percentFormat","Intl","NumberFormat","undefined","style","minimumFractionDigits","maximumFractionDigits","floorToDecimal","value","decimals","Math","floor","roundToDecimal","round","getDecimalCount","isNaN","toString","includes","split","length","parseInt","divideBnToNumber","numerator","denominator","quotient","div","toNumber","rem","umod","gcd","getTokenMultiplierFromDecimals","BN","pow","localStorageListeners","useLocalStorageStringState","defaultState","state","localStorage","getItem","useState","notify","useEffect","push","filter","listener","setState","useCallback","newState","removeItem","setItem","forEach","useLocalStorageState","JSON","stringify","stringState","setStringState","useMemo","parse","abbreviateAddress","size","base58","toBase58","slice","isEqual","obj1","obj2","keys","Object","k","pageLoadTime","Date","globalCache","Map","FetchLoopListener","cacheKey","fn","refreshInterval","refreshIntervalOnError","callback","cacheNullValues","this","FetchLoopInternal","timeoutId","listeners","errors","refresh","clearTimeout","stopped","errored","data","console","log","set","notifyListeners","warn","waitTime","min","timeSincePageLoad","document","visibilityState","hasFocus","random","Set","map","refreshIntervalsOnError","x","previousRefreshInterval","add","assert","delete","globalLoops","loops","has","get","addListener","loop","removeListener","all","values","useAsyncData","asyncFn","useReducer","i","rerender","loaded","refreshCache","clearCache","refreshAllCaches","ENDPOINTS","endpoint","custom","accountListenerCount","ConnectionContext","React","createContext","ConnectionProvider","children","setEndpoint","customEndpoints","setCustomEndpoints","availableEndpoints","concat","connection","Connection","sendConnection","id","onAccountChange","Account","publicKey","removeAccountChangeListener","onSlotChange","removeSlotChangeListener","Provider","useConnection","context","useContext","Error","useSendConnection","useConnectionConfig","endpointInfo","find","info","useAccountInfo","tuple","getAccountInfo","accountInfo","count","previousInfo","subscriptionId","equals","lamports","initializeOnly","setCache","currentItem","previousInfoRef","useRef","current","useAccountData","Link","external","props","to","rest","href","target","rel","message","description","txid","type","placement","color","notification","opacity","backgroundColor","WALLET_PROVIDERS","url","WalletContext","WalletProvider","providerUrl","savedProviderUrl","setProviderUrl","wallet","Wallet","connected","setConnected","on","walletPublicKey","substring","disconnect","providerName","useWallet","setProvider","GlobalStyle","createGlobalStyle","Title","Typography","ErrorBoundary","hasError","level","error","Component","createTokenAccountTransaction","mintPublicKey","newAccount","transaction","Transaction","SystemProgram","getMinimumBalanceForRentExemption","TokenInstructions","TOKEN_PROGRAM_ID","fromPubkey","newAccountPubkey","space","programId","instruction","createAccount","initializeAccount","account","mint","owner","signer","settleFunds","market","openOrders","baseCurrencyAccount","quoteCurrencyAccount","baseCurrencyAccountPubkey","pubkey","quoteCurrencyAccountPubkey","baseMintAddress","result","createAccountTransaction","createAccountSigner","quoteMintAddress","supportsReferralFees","TOKEN_MINTS","makeSettleFundsTransaction","settleFundsTransaction","settleFundsSigners","signers","mergeTransactions","sendTransaction","sendingMessage","settleAllFunds","tokenAccounts","markets","selectedTokenAccounts","programIds","reduce","cumulative","m","_programId","p","getOpenOrdersAccountsForProgramId","OpenOrders","findForOwner","openOrdersAccounts","baseTokenFree","quoteTokenFree","openOrdersAccountsForProgramIds","accounts","openOrdersAccount","_decoded","ownAddress","baseMint","quoteMint","selectedBaseTokenAccount","getSelectedTokenAccountForMint","selectedQuoteTokenAccount","settleTransactions","transactions","t","s","cancelOrder","params","cancelOrders","orders","order","makeMatchOrdersTransaction","makeCancelOrderInstruction","placeOrder","side","price","orderType","feeDiscountPubkey","formattedMinOrderSize","minOrderSize","toFixed","formattedTickSize","tickSize","isIncrement","num","step","abs","createAccountSigners","payer","matchOrderstransaction","startTime","getUnixTs","makePlaceOrderTransaction","placeOrderTx","placeOrderSigners","endTime","listMarket","getVaultOwnerAndNonce","nonce","createProgramAddress","toBuffer","toArrayLike","Buffer","dexProgramId","vaultOwner","iaddn","baseLotSize","quoteLotSize","requestQueue","eventQueue","bids","asks","baseVault","quoteVault","feeRateBps","quoteDustThreshold","vaultSignerNonce","tx1","tx2","Market","getLayout","span","DexInstructions","initializeMarket","signTransactions","transactionsAndSigners","signedTransactions","signedTransaction","sendSignedTransaction","getTime","sentMessage","successMessage","timeout","signTransaction","getRecentBlockhash","recentBlockhash","blockhash","setSigners","partialSign","signAllTransactions","rawTransaction","serialize","sendRawTransaction","skipPreflight","done","awaitTransactionSignatureConfirmation","simulateResult","simulateTransaction","err","logs","line","startsWith","reject","onSignature","e","getSignatureStatuses","signatureStatuses","confirmations","resultDescription","AccountInfoResult","struct","executable","rentEpoch","GetMultipleAccountsAndContextRpcResult","array","union","jsonRpcVersion","literal","jsonrpc","jsonRpcResult","slot","getMultipleSolanaAccounts","publicKeys","args","commitment","_rpcRequest","unsafeRes","res","join","from","fromEntries","_recentBlockhash","_disableBlockhashCaching","signData","serializeMessage","wireTransaction","_serialize","encodedTransaction","encoding","ACCOUNT_LAYOUT","BufferLayout","MINT_LAYOUT","parseTokenAccountData","decode","amount","parseTokenMintData","initialized","supply","getOwnedAccountsFilters","memcmp","offset","offsetOf","bytes","dataSize","getOwnedTokenAccounts","filters","resp","bs58","every","filterBytes","getTokenAccountInfo","ownerAddress","splAccounts","parsedSplAccounts","effectiveMint","WRAPPED_SOL_MINT","useMintToTickers","customMarkets","useCustomMarkets","useAllMarkets","mintsToTickers","customMarketInfo","customMarket","baseLabel","quoteLabel","useMintInfos","useTokenAccounts","allMarkets","allMints","marketInfo","uniqueMints","stringMint","mintInfos","entries","BonfidaApi","path","fetch","URL","response","ok","json","responseJson","success","marketAddress","USE_MARKETS","MARKETS","getMarketInfos","load","marketName","_VERY_SLOW_REFRESH_INTERVAL","useUnmigratedOpenOrdersAccounts","deprecatedOpenOrdersAccounts","deprecatedProgramIds","Array","deprecated","publicKeyStr","baseTokenTotal","quoteTokenTotal","some","MarketContext","DEFAULT_MARKET","getMarketDetails","otherMarket","baseCurrency","token","quoteCurrency","setCustomMarkets","MarketProvider","setMarketAddress","marketInfos","setMarket","then","catch","getTradePageUrl","saved","useSelectedTokenAccounts","useMarket","useMarkPrice","markPrice","setMarkPrice","useOrderbook","orderbook","trades","limit","_useUnfilteredTrades","eventFlags","maker","trade","useTrades","bb","Number","ba","last","sort","getUnfilteredTrades","loadFills","useOrderbookAccounts","bidData","askData","bidOrderbook","Orderbook","askOrderbook","depth","getL2","useOpenOrdersAccounts","fast","getOpenOrdersAccounts","findOpenOrdersAccountsForOwner","useSelectedOpenOrdersAccount","selectedPubKey","filtered","useSelectedQuoteCurrencyAccount","mintAddress","useSelectedBaseCurrencyAccount","useSelectedQuoteCurrencyBalances","quoteSplSizeToNumber","useSelectedBaseCurrencyBalances","baseSplSizeToNumber","useLocallyStoredFeeDiscountKey","storedFeeDiscountKey","setStoredFeeDiscountKey","useFeeDiscountKeys","findFeeDiscountKeys","feeDiscountKey","useAllOpenOrdersBalances","useMarketInfos","stringProgramId","flat","useAllOpenOrdersAccounts","loadedOpenOrdersAccounts","mintInfosConnected","marketsByAddress","openOrdersBalances","baseMintInfo","baseFree","baseTotal","quoteMintInfo","quoteFree","quoteTotal","free","total","useBalances","baseCurrencyBalances","quoteCurrencyBalances","baseExists","quoteExists","coin","sub","unsettled","useUnmigratedDeprecatedMarkets","marketsList","deps","getMarket","openOrdersList","customMarketsInfo","getMarketOrderPrice","cost","tickSizeDecimals","isBids","costAtLevel","spentCost","sendPrice","getExpectedFillPrice","sizeAtLevel","avgPrice","totalAvgPrice","useInterval","delay","savedCallback","setInterval","clearInterval","Wrapper","styled","FloatingElement","stretchVertical","height","SizeTitle","Row","MarkPriceTitle","Line","css","Price","smallScreen","onPrice","onSize","currentOrderbookData","lastOrderbookData","orderbookData","setOrderbookData","getCumulativeOrderbookSide","totalSize","backwards","cumulativeSize","sizePercent","reverse","sum","index","bidsToDisplay","asksToDisplay","flex","overflow","textAlign","OrderbookRow","onPriceClick","onSizeClick","MarkPriceComponent","memo","element","classList","contains","remove","formattedSize","formattedPrice","ref","marginBottom","onClick","data-width","data-bgcolor","prevProps","nextProps","previousMarkPrice","usePrevious","markPriceColor","formattedMarkPrice","justify","ArrowUpOutlined","marginRight","ArrowDownOutlined","DataTable","dataSource","columns","emptyLabel","pagination","loading","pageSize","renderEmpty","padding","display","justifyContent","alignItems","BalancesTable","balances","showMarket","hideWalletBalance","onSettleSuccess","title","dataIndex","render","ghost","onSettleFunds","CancelButton","Button","OpenOrderTable","onCancelSuccess","marketFilter","cancelId","setCancelId","orderId","marketFilters","orderInfos","text","onFilter","record","indexOf","fontWeight","charAt","toUpperCase","sorter","showSorterTooltip","icon","DeleteOutlined","cancel","FillsTable","fills","fill","useFills","liquidity","FeesTable","row","marginLeft","format","getFeeRates","taker","_","SRM_MINT","MSRM_MINT","marginTop","FeeScheduleTable","balance","Paragraph","TabPane","Tabs","Index","paddingTop","defaultActiveKey","tab","supportsSrmFeeDiscounts","OpenOrdersTab","filterForOpenOrders","useOpenOrders","BalancesTab","DepositDialog","coinMint","depositCoin","onClose","baseOrQuote","visible","onOk","onCancel","StandaloneTokenAccountsSelect","selectedValue","label","setSelectedTokenAccounts","Fragment","width","onSelect","newSelectedTokenAccounts","Option","Text","code","shape","CopyOutlined","navigator","clipboard","writeText","LinkAddress","LinkOutlined","RowBox","Tip","ActionButton","StandaloneBalancesDisplay","setBaseOrQuote","formattedBalances","currency","borderColor","content","trigger","InfoCircleOutlined","align","paddingBottom","block","SellButton","BuyButton","sliderMarks","0","25","50","75","100","TradeForm","setChangeOrderRef","setSide","postOnly","setPostOnly","ioc","setIoc","baseSize","setBaseSize","quoteSize","setQuoteSize","setPrice","submitting","setSubmitting","sizeFraction","setSizeFraction","quoteBalance","baseBalance","sizeDecimalCount","priceDecimalCount","doChangeOrder","onSliderChange","updateSizeFraction","warmUpCache","findBestFeeDiscountKey","onSetBaseSize","usePrice","maxSize","parseFloat","newSize","formatted","onSubmit","flexDirection","Group","onChange","buttonStyle","background","addonBefore","suffix","fontSize","compact","onSetQuoteSize","tipFormatter","marks","checked","disabled","PublicTrades","getRecentTrades","useBonfidaTrades","minHeight","maxHeight","paddingRight","overflowY","time","toLocaleTimeString","DeprecatedMarketsInstructions","switchToLiveMarkets","openOrderAccountBalances","inOrdersBase","inOrdersQuote","unsettledBase","unsettledQuote","useBalancesForDeprecatedMarkets","marketsAndOrders","getOrders","loadOrdersForOwner","refreshOpenOrders","useGetOpenOrdersForDeprecatedMarkets","needToCancelOrders","filteredBalances","needToSettleFunds","CustomMarketDialog","onAddCustomMarket","marketId","setMarketId","marketLabel","setMarketLabel","setBaseLabel","setQuoteLabel","loadingMarket","setLoadingMarket","wellFormedMarketId","marketAccountInfo","resetLabels","finally","knownMarket","knownProgram","knownBaseCurrency","knownQuoteCurrency","canSubmit","onDoClose","okText","okButtonProps","placeholder","LoadingOutlined","gutter","Select","OptGroup","TradePage","useParams","history","useHistory","TradePageInner","handleDeprecated","setHandleDeprecated","addMarketVisible","setAddMarketVisible","deprecatedMarkets","window","innerHeight","innerWidth","dimensions","setDimensions","changeOrderRef","handleResize","addEventListener","removeEventListener","componentProps","onChangeOrderRef","component","newCustomMarkets","paddingLeft","MarketSelector","onDeleteCustomMarket","PlusCircleOutlined","extractBase","extractQuote","selectedMarket","proposedMarket","showSearch","optionFilterProp","listHeight","filterOption","input","option","toLowerCase","stopPropagation","nativeEvent","stopImmediatePropagation","DeprecatedMarketsPage","RenderNormal","flexWrap","RenderSmall","RenderSmaller","xs","sm","WalletConnect","connect","UserOutlined","OpenOrdersPage","setLoaded","setRefresh","setOpenOrders","lastRefresh","setLastRefresh","_openOrders","getOpenOrdersForMarket","getAllOpenOrders","prev","useAllOpenOrders","marketAddressesToNames","WalletBalancesTable","walletBalances","tokenAccountsConnected","allMarketsConnected","settlingFunds","setSettlingFunds","walletBalance","BalancesPage","parsedAccount","mintInfo","additionalAmount","useWalletBalancesForAllMarkets","mintToTickers","openOrdersFree","openOrdersTotal","ConvertButton","ConvertForm","fromToken","setFromToken","toToken","setToToken","setSize","marketInfosbyName","tokenConvertMap","base","quote","maxWidth","minWidth","ConvertFormSubmit","fromAmount","setFromAmount","toAmount","setToAmount","isConverting","setIsConverting","isFromTokenBaseOfMarket","onConvert","sidedOrderbookAccount","decodedOrderbookData","parsedPrice","parsedSize","getPrice","expectedPrice","canConvert","coinBalance","availableBalance","SwapOutlined","ConvertPage","PreferencesContext","PreferencesProvider","autoSettleEnabled","setAutoSettleEnabled","marketList","autoSettle","autoApprove","Settings","usePreferences","CustomClusterEndpointDialog","testingConnection","onAddCustomEndpoint","customEndpoint","setCustomEndpoint","customEndpointName","setCustomEndpointName","appsAndTokens","apps","tags","AppSearch","searchMatches","setSearchMatches","searchValue","setSearchValue","handleClear","options","d","replace","allowClear","focussed","onSearch","filteredApps","app","searchString","lowerSearchStr","tag","matchApp","onClear","open","onFocus","onBlur","notFoundContent","transition","dropdownStyle","dropdownMatchSelectWidth","suffixIcon","SearchOutlined","focus","LogoWrapper","EXTERNAL_LINKS","TopBar","addEndpointVisible","setAddEndpointVisible","setTestingConnection","location","useLocation","searchFocussed","setSearchFocussed","handleClick","endpointInfoCustom","handler","tradePageUrl","pathname","handleError","getEpochInfo","newCustomEndpoints","src","logo","alt","mode","selectedKeys","borderBottom","Item","margin","SubMenu","onTitleClick","SettingOutlined","helpUrls","Footer","Layout","useBreakpoint","Grid","footerElements","link","CustomFooter","lg","elem","Header","Content","BasicLayout","useMintInput","tooltip","setAddress","ticker","validateStatus","hasFeedback","help","parsed","ListNewMarketPage","baseMintInput","quoteMintInput","lotSize","setLotSize","setTickSize","listedMarket","setListedMarket","labelCol","wrapperCol","layout","onFinish","initialValue","trim","colon","htmlType","AddRemoveTokenButtons","SIMPLE_POOL_PROGRAM_ID","DEFAULT_PROGRAM_ID","PROGRAM_ID_OPTIONS","NewPoolPage","poolName","setPoolName","setProgramId","initialSupply","setInitialSupply","valid","initialAssets","setInitialAssets","adminControlled","setAdminControlled","adminAddress","setAdminAddress","newPoolAddress","setNewPoolAddress","asset","assets","PoolTransactions","initializeSimplePool","poolStateSpace","poolMintDecimals","initialPoolMintSupply","assetMints","initialAssetQuantities","quantity","creator","creatorAssets","found","tokenAccount","additionalAccounts","isSigner","isWritable","poolAddress","signed","AssetInput","mintInput","setQuantity","change","parsedQuantity","old","MintName","showAddress","mintKey","PoolBasketDisplay","poolInfo","basket","BasketItem","quantities","mintAccountInfo","quantityDisplay","feeFormat","PoolInfoPanel","getPoolBasket","redeem","totalBasket","copyable","poolTokenMint","adminKey","feeRate","PoolCreateRedeemPanel","CreateRedeemTab","action","create","basketLoaded","findTokenAccount","preventDefault","execute","poolTokenAccount","assetAccounts","PoolBalancesPanel","WalletBalancesTab","PoolBalancesTab","BalanceItem","isPoolToken","vaultAddress","balanceAccountInfo","PoolAdminPanel","PauseUnpauseTab","AddAssetTab","RemoveAssetTab","DepositTab","WithdrawTab","UpdateFeeTab","AdminControlledPoolInstructions","pause","unpause","useOnSubmitHandler","getAssociatedTokenAddress","vaultSigner","createAssociatedTokenAccount","addAsset","MintSelector","SubmitButton","removeAsset","MintInPoolSelector","walletTokenAccount","mintDecimals","wrappedSolAccount","transfer","source","destination","closeAccount","approveDelegate","setFeeRate","updateFee","makeTransaction","className","PoolPage","isPublicKey","poolAccountInfo","poolAccountLoaded","decodePoolState","program","mintAccountInfoLoaded","onBack","subTitle","isAdminControlledPool","Form","form","PoolListPage","setPoolAddress","Routes","basename","exact","App","fallback","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","serviceWorker","ready","registration","unregister","u8","publicKeyLayout","LAYOUT","addVariant"],"mappings":"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","file":"static/js/main.d64f7e56.chunk.js","sourcesContent":["\"use strict\";\n// @ts-nocheck\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setLayoutEncoder = exports.setLayoutDecoder = exports.accountFlagsLayout = exports.selfTradeBehaviorLayout = exports.orderTypeLayout = exports.sideLayout = exports.VersionedLayout = exports.WideBits = exports.u128 = exports.u64 = exports.publicKeyLayout = exports.zeros = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nclass Zeros extends buffer_layout_1.Blob {\n    decode(b, offset) {\n        const slice = super.decode(b, offset);\n        if (!slice.every((v) => v === 0)) {\n            throw new Error('nonzero padding bytes');\n        }\n        return slice;\n    }\n}\nfunction zeros(length) {\n    return new Zeros(length);\n}\nexports.zeros = zeros;\nclass PublicKeyLayout extends buffer_layout_1.Blob {\n    constructor(property) {\n        super(32, property);\n    }\n    decode(b, offset) {\n        return new web3_js_1.PublicKey(super.decode(b, offset));\n    }\n    encode(src, b, offset) {\n        return super.encode(src.toBuffer(), b, offset);\n    }\n}\nfunction publicKeyLayout(property) {\n    return new PublicKeyLayout(property);\n}\nexports.publicKeyLayout = publicKeyLayout;\nclass BNLayout extends buffer_layout_1.Blob {\n    decode(b, offset) {\n        return new bn_js_1.default(super.decode(b, offset), 10, 'le');\n    }\n    encode(src, b, offset) {\n        return super.encode(src.toArrayLike(Buffer, 'le', this.span), b, offset);\n    }\n}\nfunction u64(property) {\n    return new BNLayout(8, property);\n}\nexports.u64 = u64;\nfunction u128(property) {\n    return new BNLayout(16, property);\n}\nexports.u128 = u128;\nclass WideBits extends buffer_layout_1.Layout {\n    constructor(property) {\n        super(8, property);\n        this._lower = buffer_layout_1.bits(buffer_layout_1.u32(), false);\n        this._upper = buffer_layout_1.bits(buffer_layout_1.u32(), false);\n    }\n    addBoolean(property) {\n        if (this._lower.fields.length < 32) {\n            this._lower.addBoolean(property);\n        }\n        else {\n            this._upper.addBoolean(property);\n        }\n    }\n    decode(b, offset = 0) {\n        const lowerDecoded = this._lower.decode(b, offset);\n        const upperDecoded = this._upper.decode(b, offset + this._lower.span);\n        return { ...lowerDecoded, ...upperDecoded };\n    }\n    encode(src, b, offset = 0) {\n        return (this._lower.encode(src, b, offset) +\n            this._upper.encode(src, b, offset + this._lower.span));\n    }\n}\nexports.WideBits = WideBits;\nclass VersionedLayout extends buffer_layout_1.Layout {\n    constructor(version, inner, property) {\n        super(inner.span > 0 ? inner.span + 1 : inner.span, property);\n        this.version = version;\n        this.inner = inner;\n    }\n    decode(b, offset = 0) {\n        // if (b.readUInt8(offset) !== this._version) {\n        //   throw new Error('invalid version');\n        // }\n        return this.inner.decode(b, offset + 1);\n    }\n    encode(src, b, offset = 0) {\n        b.writeUInt8(this.version, offset);\n        return 1 + this.inner.encode(src, b, offset + 1);\n    }\n    getSpan(b, offset = 0) {\n        return 1 + this.inner.getSpan(b, offset + 1);\n    }\n}\nexports.VersionedLayout = VersionedLayout;\nclass EnumLayout extends buffer_layout_1.UInt {\n    constructor(values, span, property) {\n        super(span, property);\n        this.values = values;\n    }\n    encode(src, b, offset) {\n        if (this.values[src] !== undefined) {\n            return super.encode(this.values[src], b, offset);\n        }\n        throw new Error('Invalid ' + this.property);\n    }\n    decode(b, offset) {\n        const decodedValue = super.decode(b, offset);\n        const entry = Object.entries(this.values).find(([, value]) => value === decodedValue);\n        if (entry) {\n            return entry[0];\n        }\n        throw new Error('Invalid ' + this.property);\n    }\n}\nfunction sideLayout(property) {\n    return new EnumLayout({ buy: 0, sell: 1 }, 4, property);\n}\nexports.sideLayout = sideLayout;\nfunction orderTypeLayout(property) {\n    return new EnumLayout({ limit: 0, ioc: 1, postOnly: 2 }, 4, property);\n}\nexports.orderTypeLayout = orderTypeLayout;\nfunction selfTradeBehaviorLayout(property) {\n    return new EnumLayout({ decrementTake: 0, cancelProvide: 1, abortTransaction: 2 }, 4, property);\n}\nexports.selfTradeBehaviorLayout = selfTradeBehaviorLayout;\nconst ACCOUNT_FLAGS_LAYOUT = new WideBits();\nACCOUNT_FLAGS_LAYOUT.addBoolean('initialized');\nACCOUNT_FLAGS_LAYOUT.addBoolean('market');\nACCOUNT_FLAGS_LAYOUT.addBoolean('openOrders');\nACCOUNT_FLAGS_LAYOUT.addBoolean('requestQueue');\nACCOUNT_FLAGS_LAYOUT.addBoolean('eventQueue');\nACCOUNT_FLAGS_LAYOUT.addBoolean('bids');\nACCOUNT_FLAGS_LAYOUT.addBoolean('asks');\nfunction accountFlagsLayout(property = 'accountFlags') {\n    return ACCOUNT_FLAGS_LAYOUT.replicate(property);\n}\nexports.accountFlagsLayout = accountFlagsLayout;\nfunction setLayoutDecoder(layout, decoder) {\n    const originalDecode = layout.decode;\n    layout.decode = function decode(b, offset = 0) {\n        return decoder(originalDecode.call(this, b, offset));\n    };\n}\nexports.setLayoutDecoder = setLayoutDecoder;\nfunction setLayoutEncoder(layout, encoder) {\n    const originalEncode = layout.encode;\n    layout.encode = function encode(src, b, offset) {\n        return originalEncode.call(this, encoder(src), b, offset);\n    };\n    return layout;\n}\nexports.setLayoutEncoder = setLayoutEncoder;\n//# sourceMappingURL=layout.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MARKETS = exports.TOKEN_MINTS = exports.getLayoutVersion = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst markets_json_1 = __importDefault(require(\"./markets.json\"));\nconst token_mints_json_1 = __importDefault(require(\"./token-mints.json\"));\nfunction getLayoutVersion(programId) {\n    if (programId.equals(new web3_js_1.PublicKey('4ckmDgGdxQoPDLUkDT3vHgSAkzA3QRdNq5ywwY4sUSJn')) ||\n        programId.equals(new web3_js_1.PublicKey('BJ3jrUzddfuSrZHXSCxMUUQsjKEyLmuuyZebkcaFp2fg'))) {\n        return 1;\n    }\n    else if (programId.equals(new web3_js_1.PublicKey('EUqojwWA2rd19FZrzeBncJsm38Jm1hEhE3zsmX3bRc2o'))) {\n        return 2;\n    }\n    else {\n        return 3;\n    }\n}\nexports.getLayoutVersion = getLayoutVersion;\nexports.TOKEN_MINTS = token_mints_json_1.default.map((mint) => {\n    return {\n        address: new web3_js_1.PublicKey(mint.address),\n        name: mint.name,\n    };\n});\nexports.MARKETS = markets_json_1.default.map((market) => {\n    return {\n        address: new web3_js_1.PublicKey(market.address),\n        name: market.name,\n        programId: new web3_js_1.PublicKey(market.programId),\n        deprecated: market.deprecated,\n    };\n});\n//# sourceMappingURL=tokens_and_markets.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TokenInstructions = exports.EVENT_QUEUE_LAYOUT = exports.REQUEST_QUEUE_LAYOUT = exports.decodeRequestQueue = exports.decodeEventQueue = exports.getLayoutVersion = exports.MARKETS = exports.TOKEN_MINTS = exports.supportsSrmFeeDiscounts = exports.getFeeRates = exports.getFeeTier = exports.NEW_ORDER_V3_OWNER_INDEX = exports.NEW_ORDER_V3_OPEN_ORDERS_INDEX = exports.NEW_ORDER_OWNER_INDEX = exports.NEW_ORDER_OPEN_ORDERS_INDEX = exports.SETTLE_FUNDS_QUOTE_WALLET_INDEX = exports.SETTLE_FUNDS_BASE_WALLET_INDEX = exports.decodeInstruction = exports.DexInstructions = exports.OpenOrders = exports.Orderbook = exports.Market = void 0;\nvar market_1 = require(\"./market\");\nObject.defineProperty(exports, \"Market\", { enumerable: true, get: function () { return market_1.Market; } });\nObject.defineProperty(exports, \"Orderbook\", { enumerable: true, get: function () { return market_1.Orderbook; } });\nObject.defineProperty(exports, \"OpenOrders\", { enumerable: true, get: function () { return market_1.OpenOrders; } });\nvar instructions_1 = require(\"./instructions\");\nObject.defineProperty(exports, \"DexInstructions\", { enumerable: true, get: function () { return instructions_1.DexInstructions; } });\nObject.defineProperty(exports, \"decodeInstruction\", { enumerable: true, get: function () { return instructions_1.decodeInstruction; } });\nObject.defineProperty(exports, \"SETTLE_FUNDS_BASE_WALLET_INDEX\", { enumerable: true, get: function () { return instructions_1.SETTLE_FUNDS_BASE_WALLET_INDEX; } });\nObject.defineProperty(exports, \"SETTLE_FUNDS_QUOTE_WALLET_INDEX\", { enumerable: true, get: function () { return instructions_1.SETTLE_FUNDS_QUOTE_WALLET_INDEX; } });\nObject.defineProperty(exports, \"NEW_ORDER_OPEN_ORDERS_INDEX\", { enumerable: true, get: function () { return instructions_1.NEW_ORDER_OPEN_ORDERS_INDEX; } });\nObject.defineProperty(exports, \"NEW_ORDER_OWNER_INDEX\", { enumerable: true, get: function () { return instructions_1.NEW_ORDER_OWNER_INDEX; } });\nObject.defineProperty(exports, \"NEW_ORDER_V3_OPEN_ORDERS_INDEX\", { enumerable: true, get: function () { return instructions_1.NEW_ORDER_V3_OPEN_ORDERS_INDEX; } });\nObject.defineProperty(exports, \"NEW_ORDER_V3_OWNER_INDEX\", { enumerable: true, get: function () { return instructions_1.NEW_ORDER_V3_OWNER_INDEX; } });\nvar fees_1 = require(\"./fees\");\nObject.defineProperty(exports, \"getFeeTier\", { enumerable: true, get: function () { return fees_1.getFeeTier; } });\nObject.defineProperty(exports, \"getFeeRates\", { enumerable: true, get: function () { return fees_1.getFeeRates; } });\nObject.defineProperty(exports, \"supportsSrmFeeDiscounts\", { enumerable: true, get: function () { return fees_1.supportsSrmFeeDiscounts; } });\nvar tokens_and_markets_1 = require(\"./tokens_and_markets\");\nObject.defineProperty(exports, \"TOKEN_MINTS\", { enumerable: true, get: function () { return tokens_and_markets_1.TOKEN_MINTS; } });\nObject.defineProperty(exports, \"MARKETS\", { enumerable: true, get: function () { return tokens_and_markets_1.MARKETS; } });\nObject.defineProperty(exports, \"getLayoutVersion\", { enumerable: true, get: function () { return tokens_and_markets_1.getLayoutVersion; } });\nvar queue_1 = require(\"./queue\");\nObject.defineProperty(exports, \"decodeEventQueue\", { enumerable: true, get: function () { return queue_1.decodeEventQueue; } });\nObject.defineProperty(exports, \"decodeRequestQueue\", { enumerable: true, get: function () { return queue_1.decodeRequestQueue; } });\nObject.defineProperty(exports, \"REQUEST_QUEUE_LAYOUT\", { enumerable: true, get: function () { return queue_1.REQUEST_QUEUE_LAYOUT; } });\nObject.defineProperty(exports, \"EVENT_QUEUE_LAYOUT\", { enumerable: true, get: function () { return queue_1.EVENT_QUEUE_LAYOUT; } });\nexports.TokenInstructions = __importStar(require(\"./token-instructions\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DexInstructions = exports.decodeInstruction = exports.encodeInstruction = exports.INSTRUCTION_LAYOUT = exports.NEW_ORDER_V3_OWNER_INDEX = exports.NEW_ORDER_V3_OPEN_ORDERS_INDEX = exports.NEW_ORDER_OWNER_INDEX = exports.NEW_ORDER_OPEN_ORDERS_INDEX = exports.SETTLE_FUNDS_QUOTE_WALLET_INDEX = exports.SETTLE_FUNDS_BASE_WALLET_INDEX = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst layout_1 = require(\"./layout\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst token_instructions_1 = require(\"./token-instructions\");\n// NOTE: Update these if the position of arguments for the settleFunds instruction changes\nexports.SETTLE_FUNDS_BASE_WALLET_INDEX = 5;\nexports.SETTLE_FUNDS_QUOTE_WALLET_INDEX = 6;\n// NOTE: Update these if the position of arguments for the newOrder instruction changes\nexports.NEW_ORDER_OPEN_ORDERS_INDEX = 1;\nexports.NEW_ORDER_OWNER_INDEX = 4;\n// NOTE: Update these if the position of arguments for the newOrder instruction changes\nexports.NEW_ORDER_V3_OPEN_ORDERS_INDEX = 1;\nexports.NEW_ORDER_V3_OWNER_INDEX = 7;\nexports.INSTRUCTION_LAYOUT = new layout_1.VersionedLayout(0, buffer_layout_1.union(buffer_layout_1.u32('instruction')));\nexports.INSTRUCTION_LAYOUT.inner.addVariant(0, buffer_layout_1.struct([\n    layout_1.u64('baseLotSize'),\n    layout_1.u64('quoteLotSize'),\n    buffer_layout_1.u16('feeRateBps'),\n    layout_1.u64('vaultSignerNonce'),\n    layout_1.u64('quoteDustThreshold'),\n]), 'initializeMarket');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(1, buffer_layout_1.struct([\n    layout_1.sideLayout('side'),\n    layout_1.u64('limitPrice'),\n    layout_1.u64('maxQuantity'),\n    layout_1.orderTypeLayout('orderType'),\n    layout_1.u64('clientId'),\n]), 'newOrder');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(2, buffer_layout_1.struct([buffer_layout_1.u16('limit')]), 'matchOrders');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(3, buffer_layout_1.struct([buffer_layout_1.u16('limit')]), 'consumeEvents');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(4, buffer_layout_1.struct([\n    layout_1.sideLayout('side'),\n    layout_1.u128('orderId'),\n    layout_1.publicKeyLayout('openOrders'),\n    buffer_layout_1.u8('openOrdersSlot'),\n]), 'cancelOrder');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(5, buffer_layout_1.struct([]), 'settleFunds');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(6, buffer_layout_1.struct([layout_1.u64('clientId')]), 'cancelOrderByClientId');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(10, buffer_layout_1.struct([\n    layout_1.sideLayout('side'),\n    layout_1.u64('limitPrice'),\n    layout_1.u64('maxBaseQuantity'),\n    layout_1.u64('maxQuoteQuantity'),\n    layout_1.selfTradeBehaviorLayout('selfTradeBehavior'),\n    layout_1.orderTypeLayout('orderType'),\n    layout_1.u64('clientId'),\n    buffer_layout_1.u16('limit'),\n]), 'newOrderV3');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(11, buffer_layout_1.struct([layout_1.sideLayout('side'), layout_1.u128('orderId')]), 'cancelOrderV2');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(12, buffer_layout_1.struct([layout_1.u64('clientId')]), 'cancelOrderByClientIdV2');\nfunction encodeInstruction(instruction) {\n    const b = Buffer.alloc(100);\n    return b.slice(0, exports.INSTRUCTION_LAYOUT.encode(instruction, b));\n}\nexports.encodeInstruction = encodeInstruction;\nfunction decodeInstruction(message) {\n    return exports.INSTRUCTION_LAYOUT.decode(message);\n}\nexports.decodeInstruction = decodeInstruction;\nclass DexInstructions {\n    static initializeMarket({ market, requestQueue, eventQueue, bids, asks, baseVault, quoteVault, baseMint, quoteMint, baseLotSize, quoteLotSize, feeRateBps, vaultSignerNonce, quoteDustThreshold, programId, }) {\n        let rentSysvar = new web3_js_1.PublicKey('SysvarRent111111111111111111111111111111111');\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n                { pubkey: bids, isSigner: false, isWritable: true },\n                { pubkey: asks, isSigner: false, isWritable: true },\n                { pubkey: baseVault, isSigner: false, isWritable: true },\n                { pubkey: quoteVault, isSigner: false, isWritable: true },\n                { pubkey: baseMint, isSigner: false, isWritable: false },\n                { pubkey: quoteMint, isSigner: false, isWritable: false },\n                { pubkey: rentSysvar, isSigner: false, isWritable: false },\n            ],\n            programId,\n            data: encodeInstruction({\n                initializeMarket: {\n                    baseLotSize,\n                    quoteLotSize,\n                    feeRateBps,\n                    vaultSignerNonce,\n                    quoteDustThreshold,\n                },\n            }),\n        });\n    }\n    static newOrder({ market, openOrders, payer, owner, requestQueue, baseVault, quoteVault, side, limitPrice, maxQuantity, orderType, clientId, programId, feeDiscountPubkey = null, }) {\n        const keys = [\n            { pubkey: market, isSigner: false, isWritable: true },\n            { pubkey: openOrders, isSigner: false, isWritable: true },\n            { pubkey: requestQueue, isSigner: false, isWritable: true },\n            { pubkey: payer, isSigner: false, isWritable: true },\n            { pubkey: owner, isSigner: true, isWritable: false },\n            { pubkey: baseVault, isSigner: false, isWritable: true },\n            { pubkey: quoteVault, isSigner: false, isWritable: true },\n            { pubkey: token_instructions_1.TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n            { pubkey: web3_js_1.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n        ];\n        if (feeDiscountPubkey) {\n            keys.push({\n                pubkey: feeDiscountPubkey,\n                isSigner: false,\n                isWritable: false,\n            });\n        }\n        return new web3_js_1.TransactionInstruction({\n            keys,\n            programId,\n            data: encodeInstruction({\n                newOrder: clientId\n                    ? { side, limitPrice, maxQuantity, orderType, clientId }\n                    : { side, limitPrice, maxQuantity, orderType },\n            }),\n        });\n    }\n    static newOrderV3({ market, openOrders, payer, owner, requestQueue, eventQueue, bids, asks, baseVault, quoteVault, side, limitPrice, maxBaseQuantity, maxQuoteQuantity, orderType, clientId, programId, selfTradeBehavior, feeDiscountPubkey = null, }) {\n        const keys = [\n            { pubkey: market, isSigner: false, isWritable: true },\n            { pubkey: openOrders, isSigner: false, isWritable: true },\n            { pubkey: requestQueue, isSigner: false, isWritable: true },\n            { pubkey: eventQueue, isSigner: false, isWritable: true },\n            { pubkey: bids, isSigner: false, isWritable: true },\n            { pubkey: asks, isSigner: false, isWritable: true },\n            { pubkey: payer, isSigner: false, isWritable: true },\n            { pubkey: owner, isSigner: true, isWritable: false },\n            { pubkey: baseVault, isSigner: false, isWritable: true },\n            { pubkey: quoteVault, isSigner: false, isWritable: true },\n            { pubkey: token_instructions_1.TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n            { pubkey: web3_js_1.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n        ];\n        if (feeDiscountPubkey) {\n            keys.push({\n                pubkey: feeDiscountPubkey,\n                isSigner: false,\n                isWritable: false,\n            });\n        }\n        return new web3_js_1.TransactionInstruction({\n            keys,\n            programId,\n            data: encodeInstruction({\n                newOrderV3: {\n                    side,\n                    limitPrice,\n                    maxBaseQuantity,\n                    maxQuoteQuantity,\n                    selfTradeBehavior,\n                    orderType,\n                    clientId,\n                    limit: 65535,\n                },\n            }),\n        });\n    }\n    static matchOrders({ market, requestQueue, eventQueue, bids, asks, baseVault, quoteVault, limit, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n                { pubkey: bids, isSigner: false, isWritable: true },\n                { pubkey: asks, isSigner: false, isWritable: true },\n                { pubkey: baseVault, isSigner: false, isWritable: true },\n                { pubkey: quoteVault, isSigner: false, isWritable: true },\n            ],\n            programId,\n            data: encodeInstruction({ matchOrders: { limit } }),\n        });\n    }\n    static consumeEvents({ market, eventQueue, openOrdersAccounts, limit, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                ...openOrdersAccounts.map((account) => ({\n                    pubkey: account,\n                    isSigner: false,\n                    isWritable: true,\n                })),\n                { pubkey: market, isSigner: false, isWritable: true },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n            ],\n            programId,\n            data: encodeInstruction({ consumeEvents: { limit } }),\n        });\n    }\n    static cancelOrder({ market, openOrders, owner, requestQueue, side, orderId, openOrdersSlot, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: false },\n                { pubkey: openOrders, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: owner, isSigner: true, isWritable: false },\n            ],\n            programId,\n            data: encodeInstruction({\n                cancelOrder: { side, orderId, openOrders, openOrdersSlot },\n            }),\n        });\n    }\n    static cancelOrderV2({ market, bids, asks, eventQueue, openOrders, owner, side, orderId, openOrdersSlot, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: false },\n                { pubkey: bids, isSigner: false, isWritable: true },\n                { pubkey: asks, isSigner: false, isWritable: true },\n                { pubkey: openOrders, isSigner: false, isWritable: true },\n                { pubkey: owner, isSigner: true, isWritable: false },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n            ],\n            programId,\n            data: encodeInstruction({\n                cancelOrderV2: { side, orderId },\n            }),\n        });\n    }\n    static cancelOrderByClientId({ market, openOrders, owner, requestQueue, clientId, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: false },\n                { pubkey: openOrders, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: owner, isSigner: true, isWritable: false },\n            ],\n            programId,\n            data: encodeInstruction({\n                cancelOrderByClientId: { clientId },\n            }),\n        });\n    }\n    static cancelOrderByClientIdV2({ market, openOrders, owner, bids, asks, eventQueue, clientId, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: false },\n                { pubkey: bids, isSigner: false, isWritable: true },\n                { pubkey: asks, isSigner: false, isWritable: true },\n                { pubkey: openOrders, isSigner: false, isWritable: true },\n                { pubkey: owner, isSigner: true, isWritable: false },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n            ],\n            programId,\n            data: encodeInstruction({\n                cancelOrderByClientIdV2: { clientId },\n            }),\n        });\n    }\n    static settleFunds({ market, openOrders, owner, baseVault, quoteVault, baseWallet, quoteWallet, vaultSigner, programId, referrerQuoteWallet = null, }) {\n        const keys = [\n            { pubkey: market, isSigner: false, isWritable: true },\n            { pubkey: openOrders, isSigner: false, isWritable: true },\n            { pubkey: owner, isSigner: true, isWritable: false },\n            { pubkey: baseVault, isSigner: false, isWritable: true },\n            { pubkey: quoteVault, isSigner: false, isWritable: true },\n            { pubkey: baseWallet, isSigner: false, isWritable: true },\n            { pubkey: quoteWallet, isSigner: false, isWritable: true },\n            { pubkey: vaultSigner, isSigner: false, isWritable: false },\n            { pubkey: token_instructions_1.TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n        ];\n        if (referrerQuoteWallet) {\n            keys.push({\n                pubkey: referrerQuoteWallet,\n                isSigner: false,\n                isWritable: true,\n            });\n        }\n        return new web3_js_1.TransactionInstruction({\n            keys,\n            programId,\n            data: encodeInstruction({\n                settleFunds: {},\n            }),\n        });\n    }\n}\nexports.DexInstructions = DexInstructions;\n//# sourceMappingURL=instructions.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EVENT_QUEUE_LAYOUT = exports.REQUEST_QUEUE_LAYOUT = exports.decodeEventQueue = exports.decodeRequestQueue = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst layout_1 = require(\"./layout\");\nconst REQUEST_QUEUE_HEADER = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    buffer_layout_1.u32('head'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('count'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('nextSeqNum'),\n    layout_1.zeros(4),\n]);\nconst REQUEST_FLAGS = buffer_layout_1.bits(buffer_layout_1.u8(), false, 'requestFlags');\nREQUEST_FLAGS.addBoolean('newOrder');\nREQUEST_FLAGS.addBoolean('cancelOrder');\nREQUEST_FLAGS.addBoolean('bid');\nREQUEST_FLAGS.addBoolean('postOnly');\nREQUEST_FLAGS.addBoolean('ioc');\nconst REQUEST = buffer_layout_1.struct([\n    REQUEST_FLAGS,\n    buffer_layout_1.u8('openOrdersSlot'),\n    buffer_layout_1.u8('feeTier'),\n    buffer_layout_1.blob(5),\n    layout_1.u64('maxBaseSizeOrCancelId'),\n    layout_1.u64('nativeQuoteQuantityLocked'),\n    layout_1.u128('orderId'),\n    layout_1.publicKeyLayout('openOrders'),\n    layout_1.u64('clientOrderId'),\n]);\nconst EVENT_QUEUE_HEADER = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    buffer_layout_1.u32('head'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('count'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('seqNum'),\n    layout_1.zeros(4),\n]);\nconst EVENT_FLAGS = buffer_layout_1.bits(buffer_layout_1.u8(), false, 'eventFlags');\nEVENT_FLAGS.addBoolean('fill');\nEVENT_FLAGS.addBoolean('out');\nEVENT_FLAGS.addBoolean('bid');\nEVENT_FLAGS.addBoolean('maker');\nconst EVENT = buffer_layout_1.struct([\n    EVENT_FLAGS,\n    buffer_layout_1.u8('openOrdersSlot'),\n    buffer_layout_1.u8('feeTier'),\n    buffer_layout_1.blob(5),\n    layout_1.u64('nativeQuantityReleased'),\n    layout_1.u64('nativeQuantityPaid'),\n    layout_1.u64('nativeFeeOrRebate'),\n    layout_1.u128('orderId'),\n    layout_1.publicKeyLayout('openOrders'),\n    layout_1.u64('clientOrderId'),\n]);\nfunction decodeQueue(headerLayout, nodeLayout, buffer, history) {\n    const header = headerLayout.decode(buffer);\n    const allocLen = Math.floor((buffer.length - headerLayout.span) / nodeLayout.span);\n    const nodes = [];\n    if (history) {\n        for (let i = 0; i < Math.min(history, allocLen); ++i) {\n            const nodeIndex = (header.head + header.count + allocLen - 1 - i) % allocLen;\n            nodes.push(nodeLayout.decode(buffer, headerLayout.span + nodeIndex * nodeLayout.span));\n        }\n    }\n    else {\n        for (let i = 0; i < header.count; ++i) {\n            const nodeIndex = (header.head + i) % allocLen;\n            nodes.push(nodeLayout.decode(buffer, headerLayout.span + nodeIndex * nodeLayout.span));\n        }\n    }\n    return { header, nodes };\n}\nfunction decodeRequestQueue(buffer, history) {\n    const { header, nodes } = decodeQueue(REQUEST_QUEUE_HEADER, REQUEST, buffer, history);\n    if (!header.accountFlags.initialized || !header.accountFlags.requestQueue) {\n        throw new Error('Invalid requests queue');\n    }\n    return nodes;\n}\nexports.decodeRequestQueue = decodeRequestQueue;\nfunction decodeEventQueue(buffer, history) {\n    const { header, nodes } = decodeQueue(EVENT_QUEUE_HEADER, EVENT, buffer, history);\n    if (!header.accountFlags.initialized || !header.accountFlags.eventQueue) {\n        throw new Error('Invalid events queue');\n    }\n    return nodes;\n}\nexports.decodeEventQueue = decodeEventQueue;\nexports.REQUEST_QUEUE_LAYOUT = {\n    HEADER: REQUEST_QUEUE_HEADER,\n    NODE: REQUEST,\n};\nexports.EVENT_QUEUE_LAYOUT = {\n    HEADER: EVENT_QUEUE_HEADER,\n    NODE: EVENT,\n};\n//# sourceMappingURL=queue.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFeeTier = exports.getFeeRates = exports.supportsSrmFeeDiscounts = void 0;\nconst tokens_and_markets_1 = require(\"./tokens_and_markets\");\nfunction supportsSrmFeeDiscounts(programId) {\n    return tokens_and_markets_1.getLayoutVersion(programId) > 1;\n}\nexports.supportsSrmFeeDiscounts = supportsSrmFeeDiscounts;\nfunction getFeeRates(feeTier) {\n    if (feeTier === 1) {\n        // SRM2\n        return { taker: 0.002, maker: -0.0003 };\n    }\n    else if (feeTier === 2) {\n        // SRM3\n        return { taker: 0.0018, maker: -0.0003 };\n    }\n    else if (feeTier === 3) {\n        // SRM4\n        return { taker: 0.0016, maker: -0.0003 };\n    }\n    else if (feeTier === 4) {\n        // SRM5\n        return { taker: 0.0014, maker: -0.0003 };\n    }\n    else if (feeTier === 5) {\n        // SRM6\n        return { taker: 0.0012, maker: -0.0003 };\n    }\n    else if (feeTier === 6) {\n        // MSRM\n        return { taker: 0.001, maker: -0.0005 };\n    }\n    // Base\n    return { taker: 0.0022, maker: -0.0003 };\n}\nexports.getFeeRates = getFeeRates;\nfunction getFeeTier(msrmBalance, srmBalance) {\n    if (msrmBalance >= 1) {\n        return 6;\n    }\n    else if (srmBalance >= 1000000) {\n        return 5;\n    }\n    else if (srmBalance >= 100000) {\n        return 4;\n    }\n    else if (srmBalance >= 10000) {\n        return 3;\n    }\n    else if (srmBalance >= 1000) {\n        return 2;\n    }\n    else if (srmBalance >= 100) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nexports.getFeeTier = getFeeTier;\n//# sourceMappingURL=fees.js.map","module.exports = __webpack_public_path__ + \"static/media/logo.49174c73.svg\";","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getMintDecimals = exports.Orderbook = exports.ORDERBOOK_LAYOUT = exports.OpenOrders = exports._OPEN_ORDERS_LAYOUT_V2 = exports._OPEN_ORDERS_LAYOUT_V1 = exports.Market = exports._MARKET_STATE_LAYOUT_V2 = exports._MARKET_STAT_LAYOUT_V1 = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst layout_1 = require(\"./layout\");\nconst slab_1 = require(\"./slab\");\nconst instructions_1 = require(\"./instructions\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst queue_1 = require(\"./queue\");\nconst buffer_1 = require(\"buffer\");\nconst fees_1 = require(\"./fees\");\nconst token_instructions_1 = require(\"./token-instructions\");\nconst tokens_and_markets_1 = require(\"./tokens_and_markets\");\nexports._MARKET_STAT_LAYOUT_V1 = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    layout_1.publicKeyLayout('ownAddress'),\n    layout_1.u64('vaultSignerNonce'),\n    layout_1.publicKeyLayout('baseMint'),\n    layout_1.publicKeyLayout('quoteMint'),\n    layout_1.publicKeyLayout('baseVault'),\n    layout_1.u64('baseDepositsTotal'),\n    layout_1.u64('baseFeesAccrued'),\n    layout_1.publicKeyLayout('quoteVault'),\n    layout_1.u64('quoteDepositsTotal'),\n    layout_1.u64('quoteFeesAccrued'),\n    layout_1.u64('quoteDustThreshold'),\n    layout_1.publicKeyLayout('requestQueue'),\n    layout_1.publicKeyLayout('eventQueue'),\n    layout_1.publicKeyLayout('bids'),\n    layout_1.publicKeyLayout('asks'),\n    layout_1.u64('baseLotSize'),\n    layout_1.u64('quoteLotSize'),\n    layout_1.u64('feeRateBps'),\n    buffer_layout_1.blob(7),\n]);\nexports._MARKET_STATE_LAYOUT_V2 = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    layout_1.publicKeyLayout('ownAddress'),\n    layout_1.u64('vaultSignerNonce'),\n    layout_1.publicKeyLayout('baseMint'),\n    layout_1.publicKeyLayout('quoteMint'),\n    layout_1.publicKeyLayout('baseVault'),\n    layout_1.u64('baseDepositsTotal'),\n    layout_1.u64('baseFeesAccrued'),\n    layout_1.publicKeyLayout('quoteVault'),\n    layout_1.u64('quoteDepositsTotal'),\n    layout_1.u64('quoteFeesAccrued'),\n    layout_1.u64('quoteDustThreshold'),\n    layout_1.publicKeyLayout('requestQueue'),\n    layout_1.publicKeyLayout('eventQueue'),\n    layout_1.publicKeyLayout('bids'),\n    layout_1.publicKeyLayout('asks'),\n    layout_1.u64('baseLotSize'),\n    layout_1.u64('quoteLotSize'),\n    layout_1.u64('feeRateBps'),\n    layout_1.u64('referrerRebatesAccrued'),\n    buffer_layout_1.blob(7),\n]);\nclass Market {\n    constructor(decoded, baseMintDecimals, quoteMintDecimals, options = {}, programId) {\n        const { skipPreflight = false, commitment = 'recent' } = options;\n        if (!decoded.accountFlags.initialized || !decoded.accountFlags.market) {\n            throw new Error('Invalid market state');\n        }\n        this._decoded = decoded;\n        this._baseSplTokenDecimals = baseMintDecimals;\n        this._quoteSplTokenDecimals = quoteMintDecimals;\n        this._skipPreflight = skipPreflight;\n        this._commitment = commitment;\n        this._programId = programId;\n        this._openOrdersAccountsCache = {};\n        this._feeDiscountKeysCache = {};\n    }\n    static getLayout(programId) {\n        if (tokens_and_markets_1.getLayoutVersion(programId) === 1) {\n            return exports._MARKET_STAT_LAYOUT_V1;\n        }\n        return exports._MARKET_STATE_LAYOUT_V2;\n    }\n    static async load(connection, address, options = {}, programId) {\n        const { owner, data } = throwIfNull(await connection.getAccountInfo(address), 'Market not found');\n        if (!owner.equals(programId)) {\n            throw new Error('Address not owned by program: ' + owner.toBase58());\n        }\n        const decoded = this.getLayout(programId).decode(data);\n        if (!decoded.accountFlags.initialized ||\n            !decoded.accountFlags.market ||\n            !decoded.ownAddress.equals(address)) {\n            throw new Error('Invalid market');\n        }\n        const [baseMintDecimals, quoteMintDecimals] = await Promise.all([\n            getMintDecimals(connection, decoded.baseMint),\n            getMintDecimals(connection, decoded.quoteMint),\n        ]);\n        return new Market(decoded, baseMintDecimals, quoteMintDecimals, options, programId);\n    }\n    get programId() {\n        return this._programId;\n    }\n    get address() {\n        return this._decoded.ownAddress;\n    }\n    get publicKey() {\n        return this.address;\n    }\n    get baseMintAddress() {\n        return this._decoded.baseMint;\n    }\n    get quoteMintAddress() {\n        return this._decoded.quoteMint;\n    }\n    get bidsAddress() {\n        return this._decoded.bids;\n    }\n    get asksAddress() {\n        return this._decoded.asks;\n    }\n    async loadBids(connection) {\n        const { data } = throwIfNull(await connection.getAccountInfo(this._decoded.bids));\n        return Orderbook.decode(this, data);\n    }\n    async loadAsks(connection) {\n        const { data } = throwIfNull(await connection.getAccountInfo(this._decoded.asks));\n        return Orderbook.decode(this, data);\n    }\n    async loadOrdersForOwner(connection, ownerAddress, cacheDurationMs = 0) {\n        const [bids, asks, openOrdersAccounts] = await Promise.all([\n            this.loadBids(connection),\n            this.loadAsks(connection),\n            this.findOpenOrdersAccountsForOwner(connection, ownerAddress, cacheDurationMs),\n        ]);\n        return this.filterForOpenOrders(bids, asks, openOrdersAccounts);\n    }\n    filterForOpenOrders(bids, asks, openOrdersAccounts) {\n        return [...bids, ...asks].filter((order) => openOrdersAccounts.some((openOrders) => order.openOrdersAddress.equals(openOrders.address)));\n    }\n    async findBaseTokenAccountsForOwner(connection, ownerAddress, includeUnwrappedSol = false) {\n        if (this.baseMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT) && includeUnwrappedSol) {\n            const [wrapped, unwrapped] = await Promise.all([\n                this.findBaseTokenAccountsForOwner(connection, ownerAddress, false),\n                connection.getAccountInfo(ownerAddress),\n            ]);\n            if (unwrapped !== null) {\n                return [{ pubkey: ownerAddress, account: unwrapped }, ...wrapped];\n            }\n            return wrapped;\n        }\n        return await this.getTokenAccountsByOwnerForMint(connection, ownerAddress, this.baseMintAddress);\n    }\n    async getTokenAccountsByOwnerForMint(connection, ownerAddress, mintAddress) {\n        return (await connection.getTokenAccountsByOwner(ownerAddress, {\n            mint: mintAddress,\n        })).value;\n    }\n    async findQuoteTokenAccountsForOwner(connection, ownerAddress, includeUnwrappedSol = false) {\n        if (this.quoteMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT) && includeUnwrappedSol) {\n            const [wrapped, unwrapped] = await Promise.all([\n                this.findQuoteTokenAccountsForOwner(connection, ownerAddress, false),\n                connection.getAccountInfo(ownerAddress),\n            ]);\n            if (unwrapped !== null) {\n                return [{ pubkey: ownerAddress, account: unwrapped }, ...wrapped];\n            }\n            return wrapped;\n        }\n        return await this.getTokenAccountsByOwnerForMint(connection, ownerAddress, this.quoteMintAddress);\n    }\n    async findOpenOrdersAccountsForOwner(connection, ownerAddress, cacheDurationMs = 0) {\n        const strOwner = ownerAddress.toBase58();\n        const now = new Date().getTime();\n        if (strOwner in this._openOrdersAccountsCache &&\n            now - this._openOrdersAccountsCache[strOwner].ts < cacheDurationMs) {\n            return this._openOrdersAccountsCache[strOwner].accounts;\n        }\n        const openOrdersAccountsForOwner = await OpenOrders.findForMarketAndOwner(connection, this.address, ownerAddress, this._programId);\n        this._openOrdersAccountsCache[strOwner] = {\n            accounts: openOrdersAccountsForOwner,\n            ts: now,\n        };\n        return openOrdersAccountsForOwner;\n    }\n    async placeOrder(connection, { owner, payer, side, price, size, orderType = 'limit', clientId, openOrdersAddressKey, openOrdersAccount, feeDiscountPubkey, }) {\n        const { transaction, signers, } = await this.makePlaceOrderTransaction(connection, {\n            owner,\n            payer,\n            side,\n            price,\n            size,\n            orderType,\n            clientId,\n            openOrdersAddressKey,\n            openOrdersAccount,\n            feeDiscountPubkey,\n        });\n        return await this._sendTransaction(connection, transaction, [\n            owner,\n            ...signers,\n        ]);\n    }\n    getSplTokenBalanceFromAccountInfo(accountInfo, decimals) {\n        return divideBnToNumber(new bn_js_1.default(accountInfo.data.slice(64, 72), 10, 'le'), new bn_js_1.default(10).pow(new bn_js_1.default(decimals)));\n    }\n    get supportsSrmFeeDiscounts() {\n        return fees_1.supportsSrmFeeDiscounts(this._programId);\n    }\n    get supportsReferralFees() {\n        return tokens_and_markets_1.getLayoutVersion(this._programId) > 1;\n    }\n    get usesRequestQueue() {\n        return tokens_and_markets_1.getLayoutVersion(this._programId) <= 2;\n    }\n    async findFeeDiscountKeys(connection, ownerAddress, cacheDurationMs = 0) {\n        let sortedAccounts = [];\n        const now = new Date().getTime();\n        const strOwner = ownerAddress.toBase58();\n        if (strOwner in this._feeDiscountKeysCache &&\n            now - this._feeDiscountKeysCache[strOwner].ts < cacheDurationMs) {\n            return this._feeDiscountKeysCache[strOwner].accounts;\n        }\n        if (this.supportsSrmFeeDiscounts) {\n            // Fee discounts based on (M)SRM holdings supported in newer versions\n            const msrmAccounts = (await this.getTokenAccountsByOwnerForMint(connection, ownerAddress, token_instructions_1.MSRM_MINT)).map(({ pubkey, account }) => {\n                const balance = this.getSplTokenBalanceFromAccountInfo(account, token_instructions_1.MSRM_DECIMALS);\n                return {\n                    pubkey,\n                    mint: token_instructions_1.MSRM_MINT,\n                    balance,\n                    feeTier: fees_1.getFeeTier(balance, 0),\n                };\n            });\n            const srmAccounts = (await this.getTokenAccountsByOwnerForMint(connection, ownerAddress, token_instructions_1.SRM_MINT)).map(({ pubkey, account }) => {\n                const balance = this.getSplTokenBalanceFromAccountInfo(account, token_instructions_1.SRM_DECIMALS);\n                return {\n                    pubkey,\n                    mint: token_instructions_1.SRM_MINT,\n                    balance,\n                    feeTier: fees_1.getFeeTier(0, balance),\n                };\n            });\n            sortedAccounts = msrmAccounts.concat(srmAccounts).sort((a, b) => {\n                if (a.feeTier > b.feeTier) {\n                    return -1;\n                }\n                else if (a.feeTier < b.feeTier) {\n                    return 1;\n                }\n                else {\n                    if (a.balance > b.balance) {\n                        return -1;\n                    }\n                    else if (a.balance < b.balance) {\n                        return 1;\n                    }\n                    else {\n                        return 0;\n                    }\n                }\n            });\n        }\n        this._feeDiscountKeysCache[strOwner] = {\n            accounts: sortedAccounts,\n            ts: now,\n        };\n        return sortedAccounts;\n    }\n    async findBestFeeDiscountKey(connection, ownerAddress, cacheDurationMs = 30000) {\n        const accounts = await this.findFeeDiscountKeys(connection, ownerAddress, cacheDurationMs);\n        if (accounts.length > 0) {\n            return {\n                pubkey: accounts[0].pubkey,\n                feeTier: accounts[0].feeTier,\n            };\n        }\n        return {\n            pubkey: null,\n            feeTier: 0,\n        };\n    }\n    async makePlaceOrderTransaction(connection, { owner, payer, side, price, size, orderType = 'limit', clientId, openOrdersAddressKey, openOrdersAccount, feeDiscountPubkey = undefined, }, cacheDurationMs = 0, feeDiscountPubkeyCacheDurationMs = 0) {\n        var _a, _b;\n        // @ts-ignore\n        const ownerAddress = (_a = owner.publicKey) !== null && _a !== void 0 ? _a : owner;\n        const openOrdersAccounts = await this.findOpenOrdersAccountsForOwner(connection, ownerAddress, cacheDurationMs);\n        const transaction = new web3_js_1.Transaction();\n        const signers = [];\n        // Fetch an SRM fee discount key if the market supports discounts and it is not supplied\n        let useFeeDiscountPubkey;\n        if (feeDiscountPubkey) {\n            useFeeDiscountPubkey = feeDiscountPubkey;\n        }\n        else if (feeDiscountPubkey === undefined &&\n            this.supportsSrmFeeDiscounts) {\n            useFeeDiscountPubkey = (await this.findBestFeeDiscountKey(connection, ownerAddress, feeDiscountPubkeyCacheDurationMs)).pubkey;\n        }\n        else {\n            useFeeDiscountPubkey = null;\n        }\n        let openOrdersAddress;\n        if (openOrdersAccounts.length === 0) {\n            let account;\n            if (openOrdersAccount) {\n                account = openOrdersAccount;\n            }\n            else {\n                account = new web3_js_1.Account();\n            }\n            transaction.add(await OpenOrders.makeCreateAccountTransaction(connection, this.address, ownerAddress, account.publicKey, this._programId));\n            openOrdersAddress = account.publicKey;\n            signers.push(account);\n            // refresh the cache of open order accounts on next fetch\n            this._openOrdersAccountsCache[ownerAddress.toBase58()].ts = 0;\n        }\n        else if (openOrdersAccount) {\n            openOrdersAddress = openOrdersAccount.publicKey;\n        }\n        else if (openOrdersAddressKey) {\n            openOrdersAddress = openOrdersAddressKey;\n        }\n        else {\n            openOrdersAddress = openOrdersAccounts[0].address;\n        }\n        let wrappedSolAccount = null;\n        if (payer.equals(ownerAddress)) {\n            if ((side === 'buy' && this.quoteMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT)) ||\n                (side === 'sell' && this.baseMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT))) {\n                wrappedSolAccount = new web3_js_1.Account();\n                let lamports;\n                if (side === 'buy') {\n                    lamports = Math.round(price * size * 1.01 * web3_js_1.LAMPORTS_PER_SOL);\n                    if (openOrdersAccounts.length > 0) {\n                        lamports -= openOrdersAccounts[0].quoteTokenFree.toNumber();\n                    }\n                }\n                else {\n                    lamports = Math.round(size * web3_js_1.LAMPORTS_PER_SOL);\n                    if (openOrdersAccounts.length > 0) {\n                        lamports -= openOrdersAccounts[0].baseTokenFree.toNumber();\n                    }\n                }\n                lamports = Math.max(lamports, 0) + 1e7;\n                transaction.add(web3_js_1.SystemProgram.createAccount({\n                    fromPubkey: ownerAddress,\n                    newAccountPubkey: wrappedSolAccount.publicKey,\n                    lamports,\n                    space: 165,\n                    programId: token_instructions_1.TOKEN_PROGRAM_ID,\n                }));\n                transaction.add(token_instructions_1.initializeAccount({\n                    account: wrappedSolAccount.publicKey,\n                    mint: token_instructions_1.WRAPPED_SOL_MINT,\n                    owner: ownerAddress,\n                }));\n                signers.push(wrappedSolAccount);\n            }\n            else {\n                throw new Error('Invalid payer account');\n            }\n        }\n        const placeOrderInstruction = this.makePlaceOrderInstruction(connection, {\n            owner,\n            payer: (_b = wrappedSolAccount === null || wrappedSolAccount === void 0 ? void 0 : wrappedSolAccount.publicKey) !== null && _b !== void 0 ? _b : payer,\n            side,\n            price,\n            size,\n            orderType,\n            clientId,\n            openOrdersAddressKey: openOrdersAddress,\n            feeDiscountPubkey: useFeeDiscountPubkey,\n        });\n        transaction.add(placeOrderInstruction);\n        if (wrappedSolAccount) {\n            transaction.add(token_instructions_1.closeAccount({\n                source: wrappedSolAccount.publicKey,\n                destination: ownerAddress,\n                owner: ownerAddress,\n            }));\n        }\n        return { transaction, signers, payer: owner };\n    }\n    makePlaceOrderInstruction(connection, { owner, payer, side, price, size, orderType = 'limit', clientId, openOrdersAddressKey, openOrdersAccount, feeDiscountPubkey = null, selfTradeBehavior = 'decrementTake', }) {\n        var _a;\n        // @ts-ignore\n        const ownerAddress = (_a = owner.publicKey) !== null && _a !== void 0 ? _a : owner;\n        if (this.baseSizeNumberToLots(size).lte(new bn_js_1.default(0))) {\n            throw new Error('size too small');\n        }\n        if (this.priceNumberToLots(price).lte(new bn_js_1.default(0))) {\n            throw new Error('invalid price');\n        }\n        if (!this.supportsSrmFeeDiscounts) {\n            feeDiscountPubkey = null;\n        }\n        if (this.usesRequestQueue) {\n            return instructions_1.DexInstructions.newOrder({\n                market: this.address,\n                requestQueue: this._decoded.requestQueue,\n                baseVault: this._decoded.baseVault,\n                quoteVault: this._decoded.quoteVault,\n                openOrders: openOrdersAccount\n                    ? openOrdersAccount.publicKey\n                    : openOrdersAddressKey,\n                owner: ownerAddress,\n                payer,\n                side,\n                limitPrice: this.priceNumberToLots(price),\n                maxQuantity: this.baseSizeNumberToLots(size),\n                orderType,\n                clientId,\n                programId: this._programId,\n                feeDiscountPubkey,\n            });\n        }\n        else {\n            return instructions_1.DexInstructions.newOrderV3({\n                market: this.address,\n                bids: this._decoded.bids,\n                asks: this._decoded.asks,\n                requestQueue: this._decoded.requestQueue,\n                eventQueue: this._decoded.eventQueue,\n                baseVault: this._decoded.baseVault,\n                quoteVault: this._decoded.quoteVault,\n                openOrders: openOrdersAccount\n                    ? openOrdersAccount.publicKey\n                    : openOrdersAddressKey,\n                owner: ownerAddress,\n                payer,\n                side,\n                limitPrice: this.priceNumberToLots(price),\n                maxBaseQuantity: this.baseSizeNumberToLots(size),\n                maxQuoteQuantity: new bn_js_1.default(this._decoded.quoteLotSize.toNumber()).mul(this.baseSizeNumberToLots(size).mul(this.priceNumberToLots(price))),\n                orderType,\n                clientId,\n                programId: this._programId,\n                selfTradeBehavior,\n                feeDiscountPubkey,\n            });\n        }\n    }\n    async _sendTransaction(connection, transaction, signers) {\n        const signature = await connection.sendTransaction(transaction, signers, {\n            skipPreflight: this._skipPreflight,\n        });\n        const { value } = await connection.confirmTransaction(signature, this._commitment);\n        if (value === null || value === void 0 ? void 0 : value.err) {\n            throw new Error(JSON.stringify(value.err));\n        }\n        return signature;\n    }\n    async cancelOrderByClientId(connection, owner, openOrders, clientId) {\n        const transaction = await this.makeCancelOrderByClientIdTransaction(connection, owner.publicKey, openOrders, clientId);\n        return await this._sendTransaction(connection, transaction, [owner]);\n    }\n    async makeCancelOrderByClientIdTransaction(connection, owner, openOrders, clientId) {\n        const transaction = new web3_js_1.Transaction();\n        if (this.usesRequestQueue) {\n            transaction.add(instructions_1.DexInstructions.cancelOrderByClientId({\n                market: this.address,\n                owner,\n                openOrders,\n                requestQueue: this._decoded.requestQueue,\n                clientId,\n                programId: this._programId,\n            }));\n        }\n        else {\n            transaction.add(instructions_1.DexInstructions.cancelOrderByClientIdV2({\n                market: this.address,\n                openOrders,\n                owner,\n                bids: this._decoded.bids,\n                asks: this._decoded.asks,\n                eventQueue: this._decoded.eventQueue,\n                clientId,\n                programId: this._programId,\n            }));\n        }\n        return transaction;\n    }\n    async cancelOrder(connection, owner, order) {\n        const transaction = await this.makeCancelOrderTransaction(connection, owner.publicKey, order);\n        return await this._sendTransaction(connection, transaction, [owner]);\n    }\n    async makeCancelOrderTransaction(connection, owner, order) {\n        const transaction = new web3_js_1.Transaction();\n        transaction.add(this.makeCancelOrderInstruction(connection, owner, order));\n        return transaction;\n    }\n    makeCancelOrderInstruction(connection, owner, order) {\n        if (this.usesRequestQueue) {\n            return instructions_1.DexInstructions.cancelOrder({\n                market: this.address,\n                owner,\n                openOrders: order.openOrdersAddress,\n                requestQueue: this._decoded.requestQueue,\n                side: order.side,\n                orderId: order.orderId,\n                openOrdersSlot: order.openOrdersSlot,\n                programId: this._programId,\n            });\n        }\n        else {\n            return instructions_1.DexInstructions.cancelOrderV2({\n                market: this.address,\n                owner,\n                openOrders: order.openOrdersAddress,\n                bids: this._decoded.bids,\n                asks: this._decoded.asks,\n                eventQueue: this._decoded.eventQueue,\n                side: order.side,\n                orderId: order.orderId,\n                openOrdersSlot: order.openOrdersSlot,\n                programId: this._programId,\n            });\n        }\n    }\n    async settleFunds(connection, owner, openOrders, baseWallet, quoteWallet, referrerQuoteWallet = null) {\n        if (!openOrders.owner.equals(owner.publicKey)) {\n            throw new Error('Invalid open orders account');\n        }\n        if (referrerQuoteWallet && !this.supportsReferralFees) {\n            throw new Error('This program ID does not support referrerQuoteWallet');\n        }\n        const { transaction, signers } = await this.makeSettleFundsTransaction(connection, openOrders, baseWallet, quoteWallet, referrerQuoteWallet);\n        return await this._sendTransaction(connection, transaction, [\n            owner,\n            ...signers,\n        ]);\n    }\n    async makeSettleFundsTransaction(connection, openOrders, baseWallet, quoteWallet, referrerQuoteWallet = null) {\n        // @ts-ignore\n        const vaultSigner = await web3_js_1.PublicKey.createProgramAddress([\n            this.address.toBuffer(),\n            this._decoded.vaultSignerNonce.toArrayLike(buffer_1.Buffer, 'le', 8),\n        ], this._programId);\n        const transaction = new web3_js_1.Transaction();\n        const signers = [];\n        let wrappedSolAccount = null;\n        if ((this.baseMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT) &&\n            baseWallet.equals(openOrders.owner)) ||\n            (this.quoteMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT) &&\n                quoteWallet.equals(openOrders.owner))) {\n            wrappedSolAccount = new web3_js_1.Account();\n            transaction.add(web3_js_1.SystemProgram.createAccount({\n                fromPubkey: openOrders.owner,\n                newAccountPubkey: wrappedSolAccount.publicKey,\n                lamports: await connection.getMinimumBalanceForRentExemption(165),\n                space: 165,\n                programId: token_instructions_1.TOKEN_PROGRAM_ID,\n            }));\n            transaction.add(token_instructions_1.initializeAccount({\n                account: wrappedSolAccount.publicKey,\n                mint: token_instructions_1.WRAPPED_SOL_MINT,\n                owner: openOrders.owner,\n            }));\n            signers.push(wrappedSolAccount);\n        }\n        transaction.add(instructions_1.DexInstructions.settleFunds({\n            market: this.address,\n            openOrders: openOrders.address,\n            owner: openOrders.owner,\n            baseVault: this._decoded.baseVault,\n            quoteVault: this._decoded.quoteVault,\n            baseWallet: baseWallet.equals(openOrders.owner) && wrappedSolAccount\n                ? wrappedSolAccount.publicKey\n                : baseWallet,\n            quoteWallet: quoteWallet.equals(openOrders.owner) && wrappedSolAccount\n                ? wrappedSolAccount.publicKey\n                : quoteWallet,\n            vaultSigner,\n            programId: this._programId,\n            referrerQuoteWallet,\n        }));\n        if (wrappedSolAccount) {\n            transaction.add(token_instructions_1.closeAccount({\n                source: wrappedSolAccount.publicKey,\n                destination: openOrders.owner,\n                owner: openOrders.owner,\n            }));\n        }\n        return { transaction, signers, payer: openOrders.owner };\n    }\n    async matchOrders(connection, feePayer, limit) {\n        const tx = this.makeMatchOrdersTransaction(limit);\n        return await this._sendTransaction(connection, tx, [feePayer]);\n    }\n    makeMatchOrdersTransaction(limit) {\n        const tx = new web3_js_1.Transaction();\n        tx.add(instructions_1.DexInstructions.matchOrders({\n            market: this.address,\n            requestQueue: this._decoded.requestQueue,\n            eventQueue: this._decoded.eventQueue,\n            bids: this._decoded.bids,\n            asks: this._decoded.asks,\n            baseVault: this._decoded.baseVault,\n            quoteVault: this._decoded.quoteVault,\n            limit,\n            programId: this._programId,\n        }));\n        return tx;\n    }\n    async loadRequestQueue(connection) {\n        const { data } = throwIfNull(await connection.getAccountInfo(this._decoded.requestQueue));\n        return queue_1.decodeRequestQueue(data);\n    }\n    async loadEventQueue(connection) {\n        const { data } = throwIfNull(await connection.getAccountInfo(this._decoded.eventQueue));\n        return queue_1.decodeEventQueue(data);\n    }\n    async loadFills(connection, limit = 100) {\n        // TODO: once there's a separate source of fills use that instead\n        const { data } = throwIfNull(await connection.getAccountInfo(this._decoded.eventQueue));\n        const events = queue_1.decodeEventQueue(data, limit);\n        return events\n            .filter((event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0))\n            .map(this.parseFillEvent.bind(this));\n    }\n    parseFillEvent(event) {\n        let size, price, side, priceBeforeFees;\n        if (event.eventFlags.bid) {\n            side = 'buy';\n            priceBeforeFees = event.eventFlags.maker\n                ? event.nativeQuantityPaid.add(event.nativeFeeOrRebate)\n                : event.nativeQuantityPaid.sub(event.nativeFeeOrRebate);\n            price = divideBnToNumber(priceBeforeFees.mul(this._baseSplTokenMultiplier), this._quoteSplTokenMultiplier.mul(event.nativeQuantityReleased));\n            size = divideBnToNumber(event.nativeQuantityReleased, this._baseSplTokenMultiplier);\n        }\n        else {\n            side = 'sell';\n            priceBeforeFees = event.eventFlags.maker\n                ? event.nativeQuantityReleased.sub(event.nativeFeeOrRebate)\n                : event.nativeQuantityReleased.add(event.nativeFeeOrRebate);\n            price = divideBnToNumber(priceBeforeFees.mul(this._baseSplTokenMultiplier), this._quoteSplTokenMultiplier.mul(event.nativeQuantityPaid));\n            size = divideBnToNumber(event.nativeQuantityPaid, this._baseSplTokenMultiplier);\n        }\n        return {\n            ...event,\n            side,\n            price,\n            feeCost: this.quoteSplSizeToNumber(event.nativeFeeOrRebate) *\n                (event.eventFlags.maker ? -1 : 1),\n            size,\n        };\n    }\n    get _baseSplTokenMultiplier() {\n        return new bn_js_1.default(10).pow(new bn_js_1.default(this._baseSplTokenDecimals));\n    }\n    get _quoteSplTokenMultiplier() {\n        return new bn_js_1.default(10).pow(new bn_js_1.default(this._quoteSplTokenDecimals));\n    }\n    priceLotsToNumber(price) {\n        return divideBnToNumber(price.mul(this._decoded.quoteLotSize).mul(this._baseSplTokenMultiplier), this._decoded.baseLotSize.mul(this._quoteSplTokenMultiplier));\n    }\n    priceNumberToLots(price) {\n        return new bn_js_1.default(Math.round((price *\n            Math.pow(10, this._quoteSplTokenDecimals) *\n            this._decoded.baseLotSize.toNumber()) /\n            (Math.pow(10, this._baseSplTokenDecimals) *\n                this._decoded.quoteLotSize.toNumber())));\n    }\n    baseSplSizeToNumber(size) {\n        return divideBnToNumber(size, this._baseSplTokenMultiplier);\n    }\n    quoteSplSizeToNumber(size) {\n        return divideBnToNumber(size, this._quoteSplTokenMultiplier);\n    }\n    baseSizeLotsToNumber(size) {\n        return divideBnToNumber(size.mul(this._decoded.baseLotSize), this._baseSplTokenMultiplier);\n    }\n    baseSizeNumberToLots(size) {\n        const native = new bn_js_1.default(Math.round(size * Math.pow(10, this._baseSplTokenDecimals)));\n        // rounds down to the nearest lot size\n        return native.div(this._decoded.baseLotSize);\n    }\n    quoteSizeLotsToNumber(size) {\n        return divideBnToNumber(size.mul(this._decoded.quoteLotSize), this._quoteSplTokenMultiplier);\n    }\n    quoteSizeNumberToLots(size) {\n        const native = new bn_js_1.default(Math.round(size * Math.pow(10, this._quoteSplTokenDecimals)));\n        // rounds down to the nearest lot size\n        return native.div(this._decoded.quoteLotSize);\n    }\n    get minOrderSize() {\n        return this.baseSizeLotsToNumber(new bn_js_1.default(1));\n    }\n    get tickSize() {\n        return this.priceLotsToNumber(new bn_js_1.default(1));\n    }\n}\nexports.Market = Market;\nexports._OPEN_ORDERS_LAYOUT_V1 = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    layout_1.publicKeyLayout('market'),\n    layout_1.publicKeyLayout('owner'),\n    // These are in spl-token (i.e. not lot) units\n    layout_1.u64('baseTokenFree'),\n    layout_1.u64('baseTokenTotal'),\n    layout_1.u64('quoteTokenFree'),\n    layout_1.u64('quoteTokenTotal'),\n    layout_1.u128('freeSlotBits'),\n    layout_1.u128('isBidBits'),\n    buffer_layout_1.seq(layout_1.u128(), 128, 'orders'),\n    buffer_layout_1.seq(layout_1.u64(), 128, 'clientIds'),\n    buffer_layout_1.blob(7),\n]);\nexports._OPEN_ORDERS_LAYOUT_V2 = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    layout_1.publicKeyLayout('market'),\n    layout_1.publicKeyLayout('owner'),\n    // These are in spl-token (i.e. not lot) units\n    layout_1.u64('baseTokenFree'),\n    layout_1.u64('baseTokenTotal'),\n    layout_1.u64('quoteTokenFree'),\n    layout_1.u64('quoteTokenTotal'),\n    layout_1.u128('freeSlotBits'),\n    layout_1.u128('isBidBits'),\n    buffer_layout_1.seq(layout_1.u128(), 128, 'orders'),\n    buffer_layout_1.seq(layout_1.u64(), 128, 'clientIds'),\n    layout_1.u64('referrerRebatesAccrued'),\n    buffer_layout_1.blob(7),\n]);\nclass OpenOrders {\n    constructor(address, decoded, programId) {\n        this.address = address;\n        this._programId = programId;\n        Object.assign(this, decoded);\n    }\n    static getLayout(programId) {\n        if (tokens_and_markets_1.getLayoutVersion(programId) === 1) {\n            return exports._OPEN_ORDERS_LAYOUT_V1;\n        }\n        return exports._OPEN_ORDERS_LAYOUT_V2;\n    }\n    static async findForOwner(connection, ownerAddress, programId) {\n        const filters = [\n            {\n                memcmp: {\n                    offset: this.getLayout(programId).offsetOf('owner'),\n                    bytes: ownerAddress.toBase58(),\n                },\n            },\n            {\n                dataSize: this.getLayout(programId).span,\n            },\n        ];\n        const accounts = await getFilteredProgramAccounts(connection, programId, filters);\n        return accounts.map(({ publicKey, accountInfo }) => OpenOrders.fromAccountInfo(publicKey, accountInfo, programId));\n    }\n    static async findForMarketAndOwner(connection, marketAddress, ownerAddress, programId) {\n        const filters = [\n            {\n                memcmp: {\n                    offset: this.getLayout(programId).offsetOf('market'),\n                    bytes: marketAddress.toBase58(),\n                },\n            },\n            {\n                memcmp: {\n                    offset: this.getLayout(programId).offsetOf('owner'),\n                    bytes: ownerAddress.toBase58(),\n                },\n            },\n            {\n                dataSize: this.getLayout(programId).span,\n            },\n        ];\n        const accounts = await getFilteredProgramAccounts(connection, programId, filters);\n        return accounts.map(({ publicKey, accountInfo }) => OpenOrders.fromAccountInfo(publicKey, accountInfo, programId));\n    }\n    static async load(connection, address, programId) {\n        const accountInfo = await connection.getAccountInfo(address);\n        if (accountInfo === null) {\n            throw new Error('Open orders account not found');\n        }\n        return OpenOrders.fromAccountInfo(address, accountInfo, programId);\n    }\n    static fromAccountInfo(address, accountInfo, programId) {\n        const { owner, data } = accountInfo;\n        if (!owner.equals(programId)) {\n            throw new Error('Address not owned by program');\n        }\n        const decoded = this.getLayout(programId).decode(data);\n        if (!decoded.accountFlags.initialized || !decoded.accountFlags.openOrders) {\n            throw new Error('Invalid open orders account');\n        }\n        return new OpenOrders(address, decoded, programId);\n    }\n    static async makeCreateAccountTransaction(connection, marketAddress, ownerAddress, newAccountAddress, programId) {\n        return web3_js_1.SystemProgram.createAccount({\n            fromPubkey: ownerAddress,\n            newAccountPubkey: newAccountAddress,\n            lamports: await connection.getMinimumBalanceForRentExemption(this.getLayout(programId).span),\n            space: this.getLayout(programId).span,\n            programId,\n        });\n    }\n    get publicKey() {\n        return this.address;\n    }\n}\nexports.OpenOrders = OpenOrders;\nexports.ORDERBOOK_LAYOUT = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    slab_1.SLAB_LAYOUT.replicate('slab'),\n    buffer_layout_1.blob(7),\n]);\nclass Orderbook {\n    constructor(market, accountFlags, slab) {\n        if (!accountFlags.initialized || !(accountFlags.bids ^ accountFlags.asks)) {\n            throw new Error('Invalid orderbook');\n        }\n        this.market = market;\n        this.isBids = accountFlags.bids;\n        this.slab = slab;\n    }\n    static get LAYOUT() {\n        return exports.ORDERBOOK_LAYOUT;\n    }\n    static decode(market, buffer) {\n        const { accountFlags, slab } = exports.ORDERBOOK_LAYOUT.decode(buffer);\n        return new Orderbook(market, accountFlags, slab);\n    }\n    getL2(depth) {\n        const descending = this.isBids;\n        const levels = []; // (price, size)\n        for (const { key, quantity } of this.slab.items(descending)) {\n            const price = getPriceFromKey(key);\n            if (levels.length > 0 && levels[levels.length - 1][0].eq(price)) {\n                levels[levels.length - 1][1].iadd(quantity);\n            }\n            else if (levels.length === depth) {\n                break;\n            }\n            else {\n                levels.push([price, quantity]);\n            }\n        }\n        return levels.map(([priceLots, sizeLots]) => [\n            this.market.priceLotsToNumber(priceLots),\n            this.market.baseSizeLotsToNumber(sizeLots),\n            priceLots,\n            sizeLots,\n        ]);\n    }\n    [Symbol.iterator]() {\n        return this.items(false);\n    }\n    *items(descending = false) {\n        for (const { key, ownerSlot, owner, quantity, feeTier, clientOrderId, } of this.slab.items(descending)) {\n            const price = getPriceFromKey(key);\n            yield {\n                orderId: key,\n                clientId: clientOrderId,\n                openOrdersAddress: owner,\n                openOrdersSlot: ownerSlot,\n                feeTier,\n                price: this.market.priceLotsToNumber(price),\n                priceLots: price,\n                size: this.market.baseSizeLotsToNumber(quantity),\n                sizeLots: quantity,\n                side: (this.isBids ? 'buy' : 'sell'),\n            };\n        }\n    }\n}\nexports.Orderbook = Orderbook;\nfunction getPriceFromKey(key) {\n    return key.ushrn(64);\n}\nfunction divideBnToNumber(numerator, denominator) {\n    const quotient = numerator.div(denominator).toNumber();\n    const rem = numerator.umod(denominator);\n    const gcd = rem.gcd(denominator);\n    return quotient + rem.div(gcd).toNumber() / denominator.div(gcd).toNumber();\n}\nconst MINT_LAYOUT = buffer_layout_1.struct([buffer_layout_1.blob(44), buffer_layout_1.u8('decimals'), buffer_layout_1.blob(37)]);\nasync function getMintDecimals(connection, mint) {\n    if (mint.equals(token_instructions_1.WRAPPED_SOL_MINT)) {\n        return 9;\n    }\n    const { data } = throwIfNull(await connection.getAccountInfo(mint), 'mint not found');\n    const { decimals } = MINT_LAYOUT.decode(data);\n    return decimals;\n}\nexports.getMintDecimals = getMintDecimals;\nasync function getFilteredProgramAccounts(connection, programId, filters) {\n    // @ts-ignore\n    const resp = await connection._rpcRequest('getProgramAccounts', [\n        programId.toBase58(),\n        {\n            commitment: connection.commitment,\n            filters,\n            encoding: 'base64',\n        },\n    ]);\n    if (resp.error) {\n        throw new Error(resp.error.message);\n    }\n    return resp.result.map(({ pubkey, account: { data, executable, owner, lamports } }) => ({\n        publicKey: new web3_js_1.PublicKey(pubkey),\n        accountInfo: {\n            data: buffer_1.Buffer.from(data[0], 'base64'),\n            executable,\n            owner: new web3_js_1.PublicKey(owner),\n            lamports,\n        },\n    }));\n}\nfunction throwIfNull(value, message = 'account not found') {\n    if (value === null) {\n        throw new Error(message);\n    }\n    return value;\n}\n//# sourceMappingURL=market.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Slab = exports.SLAB_LAYOUT = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst layout_1 = require(\"./layout\");\nconst SLAB_HEADER_LAYOUT = buffer_layout_1.struct([\n    // Number of modified slab nodes\n    buffer_layout_1.u32('bumpIndex'),\n    layout_1.zeros(4),\n    // Linked list of unused nodes\n    buffer_layout_1.u32('freeListLen'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('freeListHead'),\n    buffer_layout_1.u32('root'),\n    buffer_layout_1.u32('leafCount'),\n    layout_1.zeros(4),\n], 'header');\nconst SLAB_NODE_LAYOUT = buffer_layout_1.union(buffer_layout_1.u32('tag'), buffer_layout_1.blob(68), 'node');\nSLAB_NODE_LAYOUT.addVariant(0, buffer_layout_1.struct([]), 'uninitialized');\nSLAB_NODE_LAYOUT.addVariant(1, buffer_layout_1.struct([\n    // Only the first prefixLen high-order bits of key are meaningful\n    buffer_layout_1.u32('prefixLen'),\n    layout_1.u128('key'),\n    buffer_layout_1.seq(buffer_layout_1.u32(), 2, 'children'),\n]), 'innerNode');\nSLAB_NODE_LAYOUT.addVariant(2, buffer_layout_1.struct([\n    buffer_layout_1.u8('ownerSlot'),\n    buffer_layout_1.u8('feeTier'),\n    buffer_layout_1.blob(2),\n    layout_1.u128('key'),\n    layout_1.publicKeyLayout('owner'),\n    layout_1.u64('quantity'),\n    layout_1.u64('clientOrderId'),\n]), 'leafNode');\nSLAB_NODE_LAYOUT.addVariant(3, buffer_layout_1.struct([buffer_layout_1.u32('next')]), 'freeNode');\nSLAB_NODE_LAYOUT.addVariant(4, buffer_layout_1.struct([]), 'lastFreeNode');\nexports.SLAB_LAYOUT = buffer_layout_1.struct([\n    SLAB_HEADER_LAYOUT,\n    buffer_layout_1.seq(SLAB_NODE_LAYOUT, buffer_layout_1.offset(SLAB_HEADER_LAYOUT.layoutFor('bumpIndex'), SLAB_HEADER_LAYOUT.offsetOf('bumpIndex') - SLAB_HEADER_LAYOUT.span), 'nodes'),\n]);\nclass Slab {\n    constructor(header, nodes) {\n        this.header = header;\n        this.nodes = nodes;\n    }\n    static decode(buffer) {\n        return exports.SLAB_LAYOUT.decode(buffer);\n    }\n    get(searchKey) {\n        if (this.header.leafCount === 0) {\n            return null;\n        }\n        if (!(searchKey instanceof bn_js_1.default)) {\n            searchKey = new bn_js_1.default(searchKey);\n        }\n        let index = this.header.root;\n        while (true) {\n            const { leafNode, innerNode } = this.nodes[index];\n            if (leafNode) {\n                if (leafNode.key.eq(searchKey)) {\n                    return leafNode;\n                }\n                return null;\n            }\n            else if (innerNode) {\n                if (!innerNode.key\n                    .xor(searchKey)\n                    .iushrn(128 - innerNode.prefixLen)\n                    .isZero()) {\n                    return null;\n                }\n                index =\n                    innerNode.children[searchKey.testn(128 - innerNode.prefixLen - 1) ? 1 : 0];\n            }\n            else {\n                throw new Error('Invalid slab');\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this.items(false);\n    }\n    *items(descending = false) {\n        if (this.header.leafCount === 0) {\n            return;\n        }\n        const stack = [this.header.root];\n        while (stack.length > 0) {\n            const index = stack.pop();\n            const { leafNode, innerNode } = this.nodes[index];\n            if (leafNode) {\n                yield leafNode;\n            }\n            else if (innerNode) {\n                if (descending) {\n                    stack.push(innerNode.children[0], innerNode.children[1]);\n                }\n                else {\n                    stack.push(innerNode.children[1], innerNode.children[0]);\n                }\n            }\n        }\n    }\n}\nexports.Slab = Slab;\nlayout_1.setLayoutDecoder(exports.SLAB_LAYOUT, ({ header, nodes }) => new Slab(header, nodes));\n//# sourceMappingURL=slab.js.map","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\n\nexport function isValidPublicKey(key) {\n  if (!key) {\n    return false;\n  }\n  try {\n    new PublicKey(key);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport async function sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport const percentFormat = new Intl.NumberFormat(undefined, {\n  style: 'percent',\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n});\n\nexport function floorToDecimal(\n  value: number,\n  decimals: number | undefined | null,\n) {\n  return decimals ? Math.floor(value * 10 ** decimals) / 10 ** decimals : Math.floor(value);\n}\n\nexport function roundToDecimal(\n  value: number,\n  decimals: number | undefined | null,\n) {\n  return decimals ? Math.round(value * 10 ** decimals) / 10 ** decimals : value;\n}\n\nexport function getDecimalCount(value): number {\n  if (!isNaN(value) && Math.floor(value) !== value && value.toString().includes('.'))\n    return value.toString().split('.')[1].length || 0;\n  if (!isNaN(value) && Math.floor(value) !== value && value.toString().includes('e'))\n    return parseInt(value.toString().split(('e-'))[1] || \"0\");\n  return 0;\n}\n\nexport function divideBnToNumber(numerator: BN, denominator: BN): number {\n  const quotient = numerator.div(denominator).toNumber();\n  const rem = numerator.umod(denominator);\n  const gcd = rem.gcd(denominator);\n  return quotient + rem.div(gcd).toNumber() / denominator.div(gcd).toNumber();\n}\n\nexport function getTokenMultiplierFromDecimals(decimals: number): BN {\n  return new BN(10).pow(new BN(decimals));\n}\n\nconst localStorageListeners = {};\n\nexport function useLocalStorageStringState(\n  key: string,\n  defaultState: string | null = null,\n): [string | null, (newState: string | null) => void] {\n  const state = localStorage.getItem(key) || defaultState;\n\n  const [, notify] = useState(key + '\\n' + state);\n\n  useEffect(() => {\n    if (!localStorageListeners[key]) {\n      localStorageListeners[key] = [];\n    }\n    localStorageListeners[key].push(notify);\n    return () => {\n      localStorageListeners[key] = localStorageListeners[key].filter(\n        (listener) => listener !== notify,\n      );\n      if (localStorageListeners[key].length === 0) {\n        delete localStorageListeners[key];\n      }\n    };\n  }, [key]);\n\n  const setState = useCallback<(newState: string | null) => void>(\n    (newState) => {\n      const changed = state !== newState;\n      if (!changed) {\n        return;\n      }\n\n      if (newState === null) {\n        localStorage.removeItem(key);\n      } else {\n        localStorage.setItem(key, newState);\n      }\n      localStorageListeners[key].forEach((listener) =>\n        listener(key + '\\n' + newState),\n      );\n    },\n    [state, key],\n  );\n\n  return [state, setState];\n}\n\nexport function useLocalStorageState<T = any>(\n  key: string,\n  defaultState: T | null = null,\n): [T, (newState: T) => void] {\n  let [stringState, setStringState] = useLocalStorageStringState(\n    key,\n    JSON.stringify(defaultState),\n  );\n  return [\n    useMemo(() => stringState && JSON.parse(stringState), [stringState]),\n    (newState) => setStringState(JSON.stringify(newState)),\n  ];\n}\n\nexport function useEffectAfterTimeout(effect, timeout) {\n  useEffect(() => {\n    const handle = setTimeout(effect, timeout);\n    return () => clearTimeout(handle);\n  });\n}\n\nexport function useListener(emitter, eventName) {\n  const [, forceUpdate] = useState(0);\n  useEffect(() => {\n    const listener = () => forceUpdate((i) => i + 1);\n    emitter.on(eventName, listener);\n    return () => emitter.removeListener(eventName, listener);\n  }, [emitter, eventName]);\n}\n\nexport function abbreviateAddress(address: PublicKey, size = 4) {\n  const base58 = address.toBase58();\n  return base58.slice(0, size) + '…' + base58.slice(-size);\n}\n\nexport function isEqual(obj1, obj2, keys) {\n  if (!keys && Object.keys(obj1).length !== Object.keys(obj2).length) {\n    return false;\n  }\n  keys = keys || Object.keys(obj1);\n  for (const k of keys) {\n    if (obj1[k] !== obj2[k]) {\n      // shallow comparison\n      return false;\n    }\n  }\n  return true;\n}\n","import { useEffect, useReducer } from 'react';\n\nimport assert from 'assert';\n\nconst pageLoadTime = new Date();\n\nconst globalCache: Map<any, any> = new Map();\n\nclass FetchLoopListener<T = any> {\n  cacheKey: any;\n  fn: () => Promise<T>;\n  refreshInterval: number;\n  refreshIntervalOnError: number | null;\n  callback: () => void;\n  cacheNullValues: Boolean = true;\n\n  constructor(\n    cacheKey: any,\n    fn: () => Promise<T>,\n    refreshInterval: number,\n    refreshIntervalOnError: number | null,\n    callback: () => void,\n    cacheNullValues: Boolean,\n  ) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.refreshInterval = refreshInterval;\n    this.refreshIntervalOnError = refreshIntervalOnError;\n    this.callback = callback;\n    this.cacheNullValues = cacheNullValues;\n  }\n}\n\nclass FetchLoopInternal<T = any> {\n  cacheKey: any;\n  fn: () => Promise<T>;\n  timeoutId: null | any;\n  listeners: Set<FetchLoopListener<T>>;\n  errors: number;\n  cacheNullValues: Boolean = true;\n\n  constructor(cacheKey: any, fn: () => Promise<T>, cacheNullValues: Boolean) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.timeoutId = null;\n    this.listeners = new Set();\n    this.errors = 0;\n    this.cacheNullValues = cacheNullValues;\n  }\n\n  get refreshInterval(): number {\n    return Math.min(\n      ...[...this.listeners].map((listener) => listener.refreshInterval),\n    );\n  }\n\n  get refreshIntervalOnError(): number | null {\n    const refreshIntervalsOnError: number[] = [...this.listeners]\n      .map((listener) => listener.refreshIntervalOnError)\n      .filter((x): x is number => x !== null);\n    if (refreshIntervalsOnError.length === 0) {\n      return null;\n    }\n    return Math.min(...refreshIntervalsOnError);\n  }\n\n  get stopped(): boolean {\n    return this.listeners.size === 0;\n  }\n\n  addListener(listener: FetchLoopListener<T>): void {\n    const previousRefreshInterval = this.refreshInterval;\n    this.listeners.add(listener);\n    if (this.refreshInterval < previousRefreshInterval) {\n      this.refresh();\n    }\n  }\n\n  removeListener(listener: FetchLoopListener<T>): void {\n    assert(this.listeners.delete(listener));\n    if (this.stopped) {\n      if (this.timeoutId) {\n        clearTimeout(this.timeoutId);\n        this.timeoutId = null;\n      }\n    }\n  }\n\n  notifyListeners(): void {\n    this.listeners.forEach((listener) => listener.callback());\n  }\n\n  refresh = async () => {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    }\n    if (this.stopped) {\n      return;\n    }\n\n    let errored = false;\n    try {\n      const data = await this.fn();\n      if (!this.cacheNullValues && data === null) {\n        console.log(`Not caching null value for ${this.cacheKey}`);\n        // cached data has not changed so no need to re-render\n        this.errors = 0;\n        return data;\n      } else {\n        globalCache.set(this.cacheKey, data);\n        this.errors = 0;\n        this.notifyListeners();\n        return data;\n      }\n    } catch (error) {\n      ++this.errors;\n      console.warn(error);\n      errored = true;\n    } finally {\n      if (!this.timeoutId && !this.stopped) {\n        let waitTime = this.refreshInterval;\n        if (\n          errored &&\n          this.refreshIntervalOnError &&\n          this.refreshIntervalOnError > 0\n        ) {\n          waitTime = this.refreshIntervalOnError;\n        }\n\n        // Back off on errors.\n        if (this.errors > 0) {\n          waitTime = Math.min(1000 * 2 ** (this.errors - 1), 60000);\n        }\n\n        // Don't do any refreshing for the first five seconds, to make way for other things to load.\n        const timeSincePageLoad = +new Date() - +pageLoadTime;\n        if (timeSincePageLoad < 5000) {\n          waitTime += 5000 - timeSincePageLoad / 2;\n        }\n\n        // Refresh background pages slowly.\n        if (document.visibilityState === 'hidden') {\n          waitTime = 60000;\n        } else if (!document.hasFocus()) {\n          waitTime *= 1.5;\n        }\n\n        // Add jitter so we don't send all requests at the same time.\n        waitTime *= 0.8 + 0.4 * Math.random();\n\n        this.timeoutId = setTimeout(this.refresh, waitTime);\n      }\n    }\n  };\n}\n\nclass FetchLoops {\n  loops = new Map();\n\n  addListener<T>(listener: FetchLoopListener<T>) {\n    if (!this.loops.has(listener.cacheKey)) {\n      this.loops.set(\n        listener.cacheKey,\n        new FetchLoopInternal<T>(\n          listener.cacheKey,\n          listener.fn,\n          listener.cacheNullValues,\n        ),\n      );\n    }\n    this.loops.get(listener.cacheKey).addListener(listener);\n  }\n\n  removeListener<T>(listener: FetchLoopListener<T>) {\n    const loop = this.loops.get(listener.cacheKey);\n    loop.removeListener(listener);\n    if (loop.stopped) {\n      this.loops.delete(listener.cacheKey);\n      globalCache.delete(listener.cacheKey);\n    }\n  }\n\n  refresh(cacheKey) {\n    if (this.loops.has(cacheKey)) {\n      this.loops.get(cacheKey).refresh();\n    }\n  }\n\n  refreshAll() {\n    return Promise.all([...this.loops.values()].map((loop) => loop.refresh()));\n  }\n}\nconst globalLoops = new FetchLoops();\n\nexport function useAsyncData<T = any>(\n  asyncFn: () => Promise<T>,\n  cacheKey: any,\n  { refreshInterval = 60000, refreshIntervalOnError = null } = {},\n  cacheNullValues: Boolean = true,\n): [null | undefined | T, boolean] {\n  const [, rerender] = useReducer((i) => i + 1, 0);\n\n  useEffect(() => {\n    if (!cacheKey) {\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      return () => {};\n    }\n    const listener = new FetchLoopListener<T>(\n      cacheKey,\n      asyncFn,\n      refreshInterval,\n      refreshIntervalOnError,\n      rerender,\n      cacheNullValues,\n    );\n    globalLoops.addListener(listener);\n    return () => globalLoops.removeListener(listener);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey, refreshInterval]);\n\n  if (!cacheKey) {\n    return [null, false];\n  }\n\n  const loaded = globalCache.has(cacheKey);\n  const data = loaded ? globalCache.get(cacheKey) : undefined;\n  return [data, loaded];\n}\n\nexport function refreshCache(cacheKey: any, clearCache = false): void {\n  if (clearCache) {\n    globalCache.delete(cacheKey);\n  }\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.refresh();\n    if (clearCache) {\n      loop.notifyListeners();\n    }\n  }\n}\n\nexport function refreshAllCaches(): void {\n  for (const loop of globalLoops.loops.values()) {\n    loop.refresh();\n  }\n}\n\nexport function setCache(\n  cacheKey: any,\n  value: any,\n  { initializeOnly = false } = {},\n): void {\n  if (initializeOnly && globalCache.has(cacheKey)) {\n    return;\n  }\n  globalCache.set(cacheKey, value);\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.notifyListeners();\n  }\n}\n","import { useLocalStorageState } from './utils';\nimport { Account, AccountInfo, Connection, PublicKey } from '@solana/web3.js';\nimport React, { useContext, useEffect, useMemo, useRef } from 'react';\nimport { setCache, useAsyncData } from './fetch-loop';\nimport tuple from 'immutable-tuple';\nimport { ConnectionContextValues, EndpointInfo } from './types';\n\nexport const ENDPOINTS: EndpointInfo[] = [\n  {\n    name: 'mainnet-beta',\n    endpoint: 'https://solana-api.projectserum.com',\n    custom: false,\n  },\n  { name: 'localnet', endpoint: 'http://127.0.0.1:8899', custom: false },\n];\n\nconst accountListenerCount = new Map();\n\nconst ConnectionContext: React.Context<null | ConnectionContextValues> = React.createContext<null | ConnectionContextValues>(\n  null,\n);\n\nexport function ConnectionProvider({ children }) {\n  const [endpoint, setEndpoint] = useLocalStorageState<string>(\n    'connectionEndpts',\n    ENDPOINTS[0].endpoint,\n  );\n  const [customEndpoints, setCustomEndpoints] = useLocalStorageState<\n    EndpointInfo[]\n  >('customConnectionEndpoints', []);\n  const availableEndpoints = ENDPOINTS.concat(customEndpoints);\n\n  const connection = useMemo(() => new Connection(endpoint, 'recent'), [\n    endpoint,\n  ]);\n  const sendConnection = useMemo(() => new Connection(endpoint, 'recent'), [\n    endpoint,\n  ]);\n\n  // The websocket library solana/web3.js uses closes its websocket connection when the subscription list\n  // is empty after opening its first time, preventing subsequent subscriptions from receiving responses.\n  // This is a hack to prevent the list from every getting empty\n  useEffect(() => {\n    const id = connection.onAccountChange(new Account().publicKey, () => {});\n    return () => {\n      connection.removeAccountChangeListener(id);\n    };\n  }, [connection]);\n\n  useEffect(() => {\n    const id = connection.onSlotChange(() => null);\n    return () => {\n      connection.removeSlotChangeListener(id);\n    };\n  }, [connection]);\n\n  useEffect(() => {\n    const id = sendConnection.onAccountChange(\n      new Account().publicKey,\n      () => {},\n    );\n    return () => {\n      sendConnection.removeAccountChangeListener(id);\n    };\n  }, [sendConnection]);\n\n  useEffect(() => {\n    const id = sendConnection.onSlotChange(() => null);\n    return () => {\n      sendConnection.removeSlotChangeListener(id);\n    };\n  }, [sendConnection]);\n\n  return (\n    <ConnectionContext.Provider\n      value={{\n        endpoint,\n        setEndpoint,\n        connection,\n        sendConnection,\n        availableEndpoints,\n        setCustomEndpoints,\n      }}\n    >\n      {children}\n    </ConnectionContext.Provider>\n  );\n}\n\nexport function useConnection() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context');\n  }\n  return context.connection;\n}\n\nexport function useSendConnection() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context');\n  }\n  return context.sendConnection;\n}\n\nexport function useConnectionConfig() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context');\n  }\n  return {\n    endpoint: context.endpoint,\n    endpointInfo: context.availableEndpoints.find(\n      (info) => info.endpoint === context.endpoint,\n    ),\n    setEndpoint: context.setEndpoint,\n    availableEndpoints: context.availableEndpoints,\n    setCustomEndpoints: context.setCustomEndpoints,\n  };\n}\n\nexport function useAccountInfo(\n  publicKey: PublicKey | undefined | null,\n): [AccountInfo<Buffer> | null | undefined, boolean] {\n  const connection = useConnection();\n  const cacheKey = tuple(connection, publicKey?.toBase58());\n  const [accountInfo, loaded] = useAsyncData<AccountInfo<Buffer> | null>(\n    async () => (publicKey ? connection.getAccountInfo(publicKey) : null),\n    cacheKey,\n    { refreshInterval: 60_000 },\n  );\n  useEffect(() => {\n    if (!publicKey) {\n      return;\n    }\n    if (accountListenerCount.has(cacheKey)) {\n      let currentItem = accountListenerCount.get(cacheKey);\n      ++currentItem.count;\n    } else {\n      let previousInfo: AccountInfo<Buffer> | null = null;\n      const subscriptionId = connection.onAccountChange(publicKey, (info) => {\n        if (\n          !previousInfo ||\n          !previousInfo.data.equals(info.data) ||\n          previousInfo.lamports !== info.lamports\n        ) {\n          previousInfo = info;\n          setCache(cacheKey, info);\n        }\n      });\n      accountListenerCount.set(cacheKey, { count: 1, subscriptionId });\n    }\n    return () => {\n      let currentItem = accountListenerCount.get(cacheKey);\n      let nextCount = currentItem.count - 1;\n      if (nextCount <= 0) {\n        connection.removeAccountChangeListener(currentItem.subscriptionId);\n        accountListenerCount.delete(cacheKey);\n      } else {\n        --currentItem.count;\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey]);\n  const previousInfoRef = useRef<AccountInfo<Buffer> | null | undefined>(null);\n  if (\n    !accountInfo ||\n    !previousInfoRef.current ||\n    !previousInfoRef.current.data.equals(accountInfo.data) ||\n    previousInfoRef.current.lamports !== accountInfo.lamports\n  ) {\n    previousInfoRef.current = accountInfo;\n  }\n  return [previousInfoRef.current, loaded];\n}\n\nexport function useAccountData(publicKey) {\n  const [accountInfo] = useAccountInfo(publicKey);\n  return accountInfo && accountInfo.data;\n}\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nexport default function Link({ external = false, ...props }) {\n  let { to, children, ...rest } = props;\n  if (external) {\n    return (\n      <a href={to} target=\"_blank\" rel=\"noopener noreferrer\" {...rest}>\n        {children}\n      </a>\n    );\n  }\n  return (\n    <RouterLink to={to} {...rest}>\n      {children}\n    </RouterLink>\n  );\n}\n","import React from 'react';\nimport { notification } from 'antd';\nimport Link from '../components/Link';\n\nexport function notify({\n  message,\n  description,\n  txid,\n  type = 'info',\n  placement = 'bottomLeft',\n}: {\n  message: string;\n  description?: string | JSX.Element;\n  txid?: string;\n  type?: string;\n  placement?: string;\n}) {\n  if (txid) {\n    description = (\n      <Link\n        external\n        to={'https://explorer.solana.com/tx/' + txid}\n        style={{ color: '#0000ff' }}\n      >\n        View transaction {txid.slice(0, 8)}...{txid.slice(txid.length - 8)}\n      </Link>\n    );\n  }\n  notification[type]({\n    message: <span style={{ color: 'black' }}>{message}</span>,\n    description: (\n      <span style={{ color: 'black', opacity: 0.5 }}>{description}</span>\n    ),\n    placement,\n    style: {\n      backgroundColor: 'white',\n    },\n  });\n}\n","import React, { useContext, useEffect, useMemo, useState } from 'react';\nimport Wallet from '@project-serum/sol-wallet-adapter';\nimport { notify } from './notifications';\nimport { useConnectionConfig } from './connection';\nimport { useLocalStorageState } from './utils';\nimport { WalletContextValues } from './types';\n\nexport const WALLET_PROVIDERS = [\n  { name: 'sollet.io', url: 'https://www.sollet.io' },\n];\n\nconst WalletContext = React.createContext<null | WalletContextValues>(null);\n\nexport function WalletProvider({ children }) {\n  const { endpoint } = useConnectionConfig();\n\n  const [savedProviderUrl, setProviderUrl] = useLocalStorageState(\n    'walletProvider',\n    'https://www.sollet.io',\n  );\n  let providerUrl;\n  if (!savedProviderUrl) {\n    providerUrl = 'https://www.sollet.io';\n  } else {\n    providerUrl = savedProviderUrl;\n  }\n\n  const wallet = useMemo(() => new Wallet(providerUrl, endpoint), [\n    providerUrl,\n    endpoint,\n  ]);\n\n  const [connected, setConnected] = useState(false);\n\n  useEffect(() => {\n    console.log('trying to connect');\n    wallet.on('connect', () => {\n      console.log('connected');\n      localStorage.removeItem('feeDiscountKey')\n      setConnected(true);\n      let walletPublicKey = wallet.publicKey.toBase58();\n      let keyToDisplay =\n        walletPublicKey.length > 20\n          ? `${walletPublicKey.substring(0, 7)}.....${walletPublicKey.substring(\n              walletPublicKey.length - 7,\n              walletPublicKey.length,\n            )}`\n          : walletPublicKey;\n      notify({\n        message: 'Wallet update',\n        description: 'Connected to wallet ' + keyToDisplay,\n      });\n    });\n    wallet.on('disconnect', () => {\n      setConnected(false);\n      notify({\n        message: 'Wallet update',\n        description: 'Disconnected from wallet',\n      });\n      localStorage.removeItem('feeDiscountKey')\n    });\n    return () => {\n      wallet.disconnect();\n      setConnected(false);\n    };\n  }, [wallet]);\n\n  return (\n    <WalletContext.Provider\n      value={{\n        wallet,\n        connected,\n        providerUrl,\n        setProviderUrl,\n        providerName:\n          WALLET_PROVIDERS.find(({ url }) => url === providerUrl)?.name ??\n          providerUrl,\n      }}\n    >\n      {children}\n    </WalletContext.Provider>\n  );\n}\n\nexport function useWallet() {\n  const context = useContext(WalletContext);\n  if (!context) {\n    throw new Error('Missing wallet context');\n  }\n  return {\n    connected: context.connected,\n    wallet: context.wallet,\n    providerUrl: context.providerUrl,\n    setProvider: context.setProviderUrl,\n    providerName: context.providerName,\n  };\n}\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\nhtml,body{\n  background: #11161D;\n}\ninput[type=number]::-webkit-inner-spin-button {\n  opacity: 0;\n}\ninput[type=number]:hover::-webkit-inner-spin-button,\ninput[type=number]:focus::-webkit-inner-spin-button {\n  opacity: 0.25;\n}\n/* width */\n::-webkit-scrollbar {\n  width: 15px;\n}\n/* Track */\n::-webkit-scrollbar-track {\n  background: #2d313c;\n}\n/* Handle */\n::-webkit-scrollbar-thumb {\n  background: #5b5f67;\n}\n/* Handle on hover */\n::-webkit-scrollbar-thumb:hover {\n  background: #5b5f67;\n}\n.ant-slider-track, .ant-slider:hover .ant-slider-track {\n  background-color: #2abdd2;\n  opacity: 0.75;\n}\n.ant-slider-track,\n.ant-slider ant-slider-track:hover {\n  background-color: #2abdd2;\n  opacity: 0.75;\n}\n.ant-slider-dot-active,\n.ant-slider-handle,\n.ant-slider-handle-click-focused,\n.ant-slider:hover .ant-slider-handle:not(.ant-tooltip-open)  {\n  border: 2px solid #2abdd2; \n}\n.ant-table-tbody > tr.ant-table-row:hover > td {\n  background: #273043;\n}\n.ant-table-tbody > tr > td {\n  border-bottom: 8px solid #1A2029;\n}\n.ant-table-container table > thead > tr:first-child th {\n  border-bottom: none;\n}\n.ant-divider-horizontal.ant-divider-with-text::before, .ant-divider-horizontal.ant-divider-with-text::after {\n  border-top: 1px solid #434a59 !important;\n}\n.ant-layout {\n    background: #11161D\n  }\n  .ant-table {\n    background: #212734;\n  }\n  .ant-table-thead > tr > th {\n    background: #1A2029;\n  }\n.ant-select-item-option-content {\n  img {\n    margin-right: 4px;\n  }\n}\n.ant-modal-content {\n  background-color: #212734;\n}\n\n@-webkit-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n@-moz-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n@-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n.flash {\n  -moz-animation: highlight 0.5s ease 0s 1 alternate ;\n  -webkit-animation: highlight 0.5s ease 0s 1 alternate;\n  animation: highlight 0.5s ease 0s 1 alternate;\n}`;\n","import React, { Component } from 'react';\nimport { Typography } from 'antd';\n\nconst { Title } = Typography;\n\nexport default class ErrorBoundary extends Component {\n  state = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div>\n          <div>\n            <Title level={2}>Something went wrong.</Title>\n            <Title level={4}>Please try again later.</Title>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","import { notify } from './notifications';\nimport { getDecimalCount, sleep } from './utils';\nimport { getSelectedTokenAccountForMint } from './markets';\nimport {\n  Account,\n  AccountInfo,\n  Commitment,\n  Connection,\n  PublicKey,\n  RpcResponseAndContext,\n  SimulatedTransactionResponse,\n  SystemProgram,\n  Transaction,\n  TransactionSignature,\n} from '@solana/web3.js';\nimport BN from 'bn.js';\nimport {\n  DexInstructions,\n  Market,\n  OpenOrders,\n  TOKEN_MINTS,\n  TokenInstructions,\n} from '@project-serum/serum';\nimport Wallet from '@project-serum/sol-wallet-adapter';\nimport { SelectedTokenAccounts, TokenAccount } from './types';\nimport { Order } from '@project-serum/serum/lib/market';\nimport { Buffer } from 'buffer';\nimport assert from 'assert';\nimport { struct } from 'superstruct';\n\nexport async function createTokenAccountTransaction({\n  connection,\n  wallet,\n  mintPublicKey,\n}: {\n  connection: Connection;\n  wallet: Wallet;\n  mintPublicKey: PublicKey;\n}): Promise<{\n  transaction: Transaction;\n  signer: Account;\n  newAccountPubkey: PublicKey;\n}> {\n  const newAccount = new Account();\n  const transaction = new Transaction();\n  const instruction = SystemProgram.createAccount({\n    fromPubkey: wallet.publicKey,\n    newAccountPubkey: newAccount.publicKey,\n    lamports: await connection.getMinimumBalanceForRentExemption(165),\n    space: 165,\n    programId: TokenInstructions.TOKEN_PROGRAM_ID,\n  });\n  transaction.add(instruction);\n  transaction.add(\n    TokenInstructions.initializeAccount({\n      account: newAccount.publicKey,\n      mint: mintPublicKey,\n      owner: wallet.publicKey,\n    }),\n  );\n  return {\n    transaction,\n    signer: newAccount,\n    newAccountPubkey: newAccount.publicKey,\n  };\n}\n\nexport async function settleFunds({\n  market,\n  openOrders,\n  connection,\n  wallet,\n  baseCurrencyAccount,\n  quoteCurrencyAccount,\n}: {\n  market: Market;\n  openOrders: OpenOrders;\n  connection: Connection;\n  wallet: Wallet;\n  baseCurrencyAccount: TokenAccount;\n  quoteCurrencyAccount: TokenAccount;\n}): Promise<string | undefined> {\n  if (\n    !market ||\n    !wallet ||\n    !connection ||\n    !openOrders ||\n    (!baseCurrencyAccount && !quoteCurrencyAccount)\n  ) {\n    notify({ message: 'Not connected' });\n    return;\n  }\n\n  let createAccountTransaction: Transaction | undefined;\n  let createAccountSigner: Account | undefined;\n  let baseCurrencyAccountPubkey = baseCurrencyAccount?.pubkey;\n  let quoteCurrencyAccountPubkey = quoteCurrencyAccount?.pubkey;\n\n  if (!baseCurrencyAccountPubkey) {\n    const result = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.baseMintAddress,\n    });\n    baseCurrencyAccountPubkey = result?.newAccountPubkey;\n    createAccountTransaction = result?.transaction;\n    createAccountSigner = result?.signer;\n  }\n  if (!quoteCurrencyAccountPubkey) {\n    const result = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.quoteMintAddress,\n    });\n    quoteCurrencyAccountPubkey = result?.newAccountPubkey;\n    createAccountTransaction = result?.transaction;\n    createAccountSigner = result?.signer;\n  }\n  let referrerQuoteWallet: PublicKey | null = null;\n  if (market.supportsReferralFees) {\n    const usdt = TOKEN_MINTS.find(({ name }) => name === 'USDT');\n    const usdc = TOKEN_MINTS.find(({ name }) => name === 'USDC');\n    if (\n      process.env.REACT_APP_USDT_REFERRAL_FEES_ADDRESS &&\n      usdt &&\n      market.quoteMintAddress.equals(usdt.address)\n    ) {\n      referrerQuoteWallet = new PublicKey(\n        process.env.REACT_APP_USDT_REFERRAL_FEES_ADDRESS,\n      );\n    } else if (\n      process.env.REACT_APP_USDC_REFERRAL_FEES_ADDRESS &&\n      usdc &&\n      market.quoteMintAddress.equals(usdc.address)\n    ) {\n      referrerQuoteWallet = new PublicKey(\n        process.env.REACT_APP_USDC_REFERRAL_FEES_ADDRESS,\n      );\n    }\n  }\n  const {\n    transaction: settleFundsTransaction,\n    signers: settleFundsSigners,\n  } = await market.makeSettleFundsTransaction(\n    connection,\n    openOrders,\n    baseCurrencyAccountPubkey,\n    quoteCurrencyAccountPubkey,\n    referrerQuoteWallet,\n  );\n\n  let transaction = mergeTransactions([\n    createAccountTransaction,\n    settleFundsTransaction,\n  ]);\n  let signers = createAccountSigner\n    ? [...settleFundsSigners, createAccountSigner]\n    : settleFundsSigners;\n\n  return await sendTransaction({\n    transaction,\n    signers,\n    wallet,\n    connection,\n    sendingMessage: 'Settling funds...',\n  });\n}\n\nexport async function settleAllFunds({\n  connection,\n  wallet,\n  tokenAccounts,\n  markets,\n  selectedTokenAccounts,\n}: {\n  connection: Connection;\n  wallet: Wallet;\n  tokenAccounts: TokenAccount[];\n  markets: Market[];\n  selectedTokenAccounts?: SelectedTokenAccounts;\n}) {\n  if (!markets || !wallet || !connection || !tokenAccounts) {\n    return;\n  }\n\n  const programIds: PublicKey[] = [];\n  markets\n    .reduce((cumulative, m) => {\n      // @ts-ignore\n      cumulative.push(m._programId);\n      return cumulative;\n    }, [])\n    .forEach((programId) => {\n      if (!programIds.find((p) => p.equals(programId))) {\n        programIds.push(programId);\n      }\n    });\n\n  const getOpenOrdersAccountsForProgramId = async (programId) => {\n    const openOrdersAccounts = await OpenOrders.findForOwner(\n      connection,\n      wallet.publicKey,\n      programId,\n    );\n    return openOrdersAccounts.filter(\n      (openOrders) =>\n        openOrders.baseTokenFree.toNumber() ||\n        openOrders.quoteTokenFree.toNumber(),\n    );\n  };\n\n  const openOrdersAccountsForProgramIds = await Promise.all(\n    programIds.map((programId) => getOpenOrdersAccountsForProgramId(programId)),\n  );\n  const openOrdersAccounts = openOrdersAccountsForProgramIds.reduce(\n    (accounts, current) => accounts.concat(current),\n    [],\n  );\n\n  const settleTransactions = (\n    await Promise.all(\n      openOrdersAccounts.map((openOrdersAccount) => {\n        const market = markets.find((m) =>\n          // @ts-ignore\n          m._decoded?.ownAddress?.equals(openOrdersAccount.market),\n        );\n        const baseMint = market?.baseMintAddress;\n        const quoteMint = market?.quoteMintAddress;\n\n        const selectedBaseTokenAccount = getSelectedTokenAccountForMint(\n          tokenAccounts,\n          baseMint,\n          baseMint &&\n            selectedTokenAccounts &&\n            selectedTokenAccounts[baseMint.toBase58()],\n        )?.pubkey;\n        const selectedQuoteTokenAccount = getSelectedTokenAccountForMint(\n          tokenAccounts,\n          quoteMint,\n          quoteMint &&\n            selectedTokenAccounts &&\n            selectedTokenAccounts[quoteMint.toBase58()],\n        )?.pubkey;\n        if (!selectedBaseTokenAccount || !selectedQuoteTokenAccount) {\n          return null;\n        }\n        return (\n          market &&\n          market.makeSettleFundsTransaction(\n            connection,\n            openOrdersAccount,\n            selectedBaseTokenAccount,\n            selectedQuoteTokenAccount,\n          )\n        );\n      }),\n    )\n  ).filter(\n    (\n      x,\n    ): x is {\n      signers: Account[];\n      transaction: Transaction;\n      payer: PublicKey;\n    } => !!x,\n  );\n  if (!settleTransactions || settleTransactions.length === 0) return;\n\n  const transactions = settleTransactions.slice(0, 4).map((t) => t.transaction);\n  const signers: Array<Account> = [];\n  settleTransactions\n    .reduce((cumulative: Array<Account>, t) => cumulative.concat(t.signers), [])\n    .forEach((signer) => {\n      if (!signers.find((s) => s.publicKey.equals(signer.publicKey))) {\n        signers.push(signer);\n      }\n    });\n\n  const transaction = mergeTransactions(transactions);\n\n  return await sendTransaction({\n    transaction,\n    signers,\n    wallet,\n    connection,\n  });\n}\n\nexport async function cancelOrder(params: {\n  market: Market;\n  connection: Connection;\n  wallet: Wallet;\n  order: Order;\n}) {\n  return cancelOrders({ ...params, orders: [params.order] });\n}\n\nexport async function cancelOrders({\n  market,\n  wallet,\n  connection,\n  orders,\n}: {\n  market: Market;\n  wallet: Wallet;\n  connection: Connection;\n  orders: Order[];\n}) {\n  const transaction = market.makeMatchOrdersTransaction(5);\n  orders.forEach((order) => {\n    transaction.add(\n      market.makeCancelOrderInstruction(connection, wallet.publicKey, order),\n    );\n  });\n  transaction.add(market.makeMatchOrdersTransaction(5));\n  return await sendTransaction({\n    transaction,\n    wallet,\n    connection,\n    sendingMessage: 'Sending cancel...',\n  });\n}\n\nexport async function placeOrder({\n  side,\n  price,\n  size,\n  orderType,\n  market,\n  connection,\n  wallet,\n  baseCurrencyAccount,\n  quoteCurrencyAccount,\n  feeDiscountPubkey = undefined,\n}: {\n  side: 'buy' | 'sell';\n  price: number;\n  size: number;\n  orderType: 'ioc' | 'postOnly' | 'limit';\n  market: Market | undefined | null;\n  connection: Connection;\n  wallet: Wallet;\n  baseCurrencyAccount: PublicKey | undefined;\n  quoteCurrencyAccount: PublicKey | undefined;\n  feeDiscountPubkey: PublicKey | undefined;\n}) {\n  let formattedMinOrderSize =\n    market?.minOrderSize?.toFixed(getDecimalCount(market.minOrderSize)) ||\n    market?.minOrderSize;\n  let formattedTickSize =\n    market?.tickSize?.toFixed(getDecimalCount(market.tickSize)) ||\n    market?.tickSize;\n  const isIncrement = (num, step) =>\n    Math.abs((num / step) % 1) < 1e-5 ||\n    Math.abs(((num / step) % 1) - 1) < 1e-5;\n  if (isNaN(price)) {\n    notify({ message: 'Invalid price', type: 'error' });\n    return;\n  }\n  if (isNaN(size)) {\n    notify({ message: 'Invalid size', type: 'error' });\n    return;\n  }\n  if (!wallet || !wallet.publicKey) {\n    notify({ message: 'Connect wallet', type: 'error' });\n    return;\n  }\n  if (!market) {\n    notify({ message: 'Invalid  market', type: 'error' });\n    return;\n  }\n  if (!isIncrement(size, market.minOrderSize)) {\n    notify({\n      message: `Size must be an increment of ${formattedMinOrderSize}`,\n      type: 'error',\n    });\n    return;\n  }\n  if (size < market.minOrderSize) {\n    notify({ message: 'Size too small', type: 'error' });\n    return;\n  }\n  if (!isIncrement(price, market.tickSize)) {\n    notify({\n      message: `Price must be an increment of ${formattedTickSize}`,\n      type: 'error',\n    });\n    return;\n  }\n  if (price < market.tickSize) {\n    notify({ message: 'Price under tick size', type: 'error' });\n    return;\n  }\n  const owner = wallet.publicKey;\n  const transaction = new Transaction();\n  const signers: Account[] = [];\n\n  if (!baseCurrencyAccount) {\n    const {\n      transaction: createAccountTransaction,\n      signer: createAccountSigners,\n      newAccountPubkey,\n    } = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.baseMintAddress,\n    });\n    transaction.add(createAccountTransaction);\n    signers.push(createAccountSigners);\n    baseCurrencyAccount = newAccountPubkey;\n  }\n  if (!quoteCurrencyAccount) {\n    const {\n      transaction: createAccountTransaction,\n      signer: createAccountSigners,\n      newAccountPubkey,\n    } = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.quoteMintAddress,\n    });\n    transaction.add(createAccountTransaction);\n    signers.push(createAccountSigners);\n    quoteCurrencyAccount = newAccountPubkey;\n  }\n\n  const payer = side === 'sell' ? baseCurrencyAccount : quoteCurrencyAccount;\n  if (!payer) {\n    notify({\n      message: 'Need an SPL token account for cost currency',\n      type: 'error',\n    });\n    return;\n  }\n  const params = {\n    owner,\n    payer,\n    side,\n    price,\n    size,\n    orderType,\n    feeDiscountPubkey: feeDiscountPubkey || null,\n  };\n  console.log(params);\n\n  const matchOrderstransaction = market.makeMatchOrdersTransaction(5);\n  transaction.add(matchOrderstransaction);\n  const startTime = getUnixTs();\n  let {\n    transaction: placeOrderTx,\n    signers: placeOrderSigners,\n  } = await market.makePlaceOrderTransaction(\n    connection,\n    params,\n    120_000,\n    120_000,\n  );\n  const endTime = getUnixTs();\n  console.log(`Creating order transaction took ${endTime - startTime}`);\n  transaction.add(placeOrderTx);\n  transaction.add(market.makeMatchOrdersTransaction(5));\n  signers.push(...placeOrderSigners);\n\n  return await sendTransaction({\n    transaction,\n    wallet,\n    connection,\n    signers,\n    sendingMessage: 'Sending order...',\n  });\n}\n\nexport async function listMarket({\n  connection,\n  wallet,\n  baseMint,\n  quoteMint,\n  baseLotSize,\n  quoteLotSize,\n  dexProgramId,\n}: {\n  connection: Connection;\n  wallet: Wallet;\n  baseMint: PublicKey;\n  quoteMint: PublicKey;\n  baseLotSize: number;\n  quoteLotSize: number;\n  dexProgramId: PublicKey;\n}) {\n  const market = new Account();\n  const requestQueue = new Account();\n  const eventQueue = new Account();\n  const bids = new Account();\n  const asks = new Account();\n  const baseVault = new Account();\n  const quoteVault = new Account();\n  const feeRateBps = 0;\n  const quoteDustThreshold = new BN(100);\n\n  async function getVaultOwnerAndNonce() {\n    const nonce = new BN(0);\n    while (true) {\n      try {\n        const vaultOwner = await PublicKey.createProgramAddress(\n          [market.publicKey.toBuffer(), nonce.toArrayLike(Buffer, 'le', 8)],\n          dexProgramId,\n        );\n        return [vaultOwner, nonce];\n      } catch (e) {\n        nonce.iaddn(1);\n      }\n    }\n  }\n  const [vaultOwner, vaultSignerNonce] = await getVaultOwnerAndNonce();\n\n  const tx1 = new Transaction();\n  tx1.add(\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: baseVault.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(165),\n      space: 165,\n      programId: TokenInstructions.TOKEN_PROGRAM_ID,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: quoteVault.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(165),\n      space: 165,\n      programId: TokenInstructions.TOKEN_PROGRAM_ID,\n    }),\n    TokenInstructions.initializeAccount({\n      account: baseVault.publicKey,\n      mint: baseMint,\n      owner: vaultOwner,\n    }),\n    TokenInstructions.initializeAccount({\n      account: quoteVault.publicKey,\n      mint: quoteMint,\n      owner: vaultOwner,\n    }),\n  );\n\n  const tx2 = new Transaction();\n  tx2.add(\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: market.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(\n        Market.getLayout(dexProgramId).span,\n      ),\n      space: Market.getLayout(dexProgramId).span,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: requestQueue.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(5120 + 12),\n      space: 5120 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: eventQueue.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(262144 + 12),\n      space: 262144 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: bids.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(65536 + 12),\n      space: 65536 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: asks.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(65536 + 12),\n      space: 65536 + 12,\n      programId: dexProgramId,\n    }),\n    DexInstructions.initializeMarket({\n      market: market.publicKey,\n      requestQueue: requestQueue.publicKey,\n      eventQueue: eventQueue.publicKey,\n      bids: bids.publicKey,\n      asks: asks.publicKey,\n      baseVault: baseVault.publicKey,\n      quoteVault: quoteVault.publicKey,\n      baseMint,\n      quoteMint,\n      baseLotSize: new BN(baseLotSize),\n      quoteLotSize: new BN(quoteLotSize),\n      feeRateBps,\n      vaultSignerNonce,\n      quoteDustThreshold,\n      programId: dexProgramId,\n    }),\n  );\n\n  const signedTransactions = await signTransactions({\n    transactionsAndSigners: [\n      { transaction: tx1, signers: [baseVault, quoteVault] },\n      {\n        transaction: tx2,\n        signers: [market, requestQueue, eventQueue, bids, asks],\n      },\n    ],\n    wallet,\n    connection,\n  });\n  for (let signedTransaction of signedTransactions) {\n    await sendSignedTransaction({\n      signedTransaction,\n      connection,\n    });\n  }\n\n  return market.publicKey;\n}\n\nexport const getUnixTs = () => {\n  return new Date().getTime() / 1000;\n};\n\nconst DEFAULT_TIMEOUT = 15000;\n\nexport async function sendTransaction({\n  transaction,\n  wallet,\n  signers = [],\n  connection,\n  sendingMessage = 'Sending transaction...',\n  sentMessage = 'Transaction sent',\n  successMessage = 'Transaction confirmed',\n  timeout = DEFAULT_TIMEOUT,\n}: {\n  transaction: Transaction;\n  wallet: Wallet;\n  signers?: Array<Account>;\n  connection: Connection;\n  sendingMessage?: string;\n  sentMessage?: string;\n  successMessage?: string;\n  timeout?: number;\n}) {\n  const signedTransaction = await signTransaction({\n    transaction,\n    wallet,\n    signers,\n    connection,\n  });\n  return await sendSignedTransaction({\n    signedTransaction,\n    connection,\n    sendingMessage,\n    sentMessage,\n    successMessage,\n    timeout,\n  });\n}\n\nexport async function signTransaction({\n  transaction,\n  wallet,\n  signers = [],\n  connection,\n}: {\n  transaction: Transaction;\n  wallet: Wallet;\n  signers?: Array<Account>;\n  connection: Connection;\n}) {\n  transaction.recentBlockhash = (\n    await connection.getRecentBlockhash('max')\n  ).blockhash;\n  transaction.setSigners(wallet.publicKey, ...signers.map((s) => s.publicKey));\n  if (signers.length > 0) {\n    transaction.partialSign(...signers);\n  }\n  return await wallet.signTransaction(transaction);\n}\n\nexport async function signTransactions({\n  transactionsAndSigners,\n  wallet,\n  connection,\n}: {\n  transactionsAndSigners: {\n    transaction: Transaction;\n    signers?: Array<Account>;\n  }[];\n  wallet: Wallet;\n  connection: Connection;\n}) {\n  const blockhash = (await connection.getRecentBlockhash('max')).blockhash;\n  transactionsAndSigners.forEach(({ transaction, signers = [] }) => {\n    transaction.recentBlockhash = blockhash;\n    transaction.setSigners(\n      wallet.publicKey,\n      ...signers.map((s) => s.publicKey),\n    );\n    if (signers?.length > 0) {\n      transaction.partialSign(...signers);\n    }\n  });\n  return await wallet.signAllTransactions(\n    transactionsAndSigners.map(({ transaction }) => transaction),\n  );\n}\n\nexport async function sendSignedTransaction({\n  signedTransaction,\n  connection,\n  sendingMessage = 'Sending transaction...',\n  sentMessage = 'Transaction sent',\n  successMessage = 'Transaction confirmed',\n  timeout = DEFAULT_TIMEOUT,\n}: {\n  signedTransaction: Transaction;\n  connection: Connection;\n  sendingMessage?: string;\n  sentMessage?: string;\n  successMessage?: string;\n  timeout?: number;\n}): Promise<string> {\n  const rawTransaction = signedTransaction.serialize();\n  const startTime = getUnixTs();\n  notify({ message: sendingMessage });\n  const txid: TransactionSignature = await connection.sendRawTransaction(\n    rawTransaction,\n    {\n      skipPreflight: true,\n    },\n  );\n  notify({ message: sentMessage, type: 'success', txid });\n\n  console.log('Started awaiting confirmation for', txid);\n\n  let done = false;\n  (async () => {\n    while (!done && getUnixTs() - startTime < timeout) {\n      connection.sendRawTransaction(rawTransaction, {\n        skipPreflight: true,\n      });\n      await sleep(300);\n    }\n  })();\n  try {\n    await awaitTransactionSignatureConfirmation(txid, timeout, connection);\n  } catch (err) {\n    if (err.timeout) {\n      throw new Error('Timed out awaiting confirmation on transaction');\n    }\n    let simulateResult: SimulatedTransactionResponse | null = null;\n    try {\n      simulateResult = (\n        await simulateTransaction(connection, signedTransaction, 'single')\n      ).value;\n    } catch (e) {}\n    if (simulateResult && simulateResult.err) {\n      if (simulateResult.logs) {\n        for (let i = simulateResult.logs.length - 1; i >= 0; --i) {\n          const line = simulateResult.logs[i];\n          if (line.startsWith('Program log: ')) {\n            throw new Error(\n              'Transaction failed: ' + line.slice('Program log: '.length),\n            );\n          }\n        }\n      }\n      throw new Error(JSON.stringify(simulateResult.err));\n    }\n    throw new Error('Transaction failed');\n  } finally {\n    done = true;\n  }\n  notify({ message: successMessage, type: 'success', txid });\n\n  console.log('Latency', txid, getUnixTs() - startTime);\n  return txid;\n}\n\nasync function awaitTransactionSignatureConfirmation(\n  txid: TransactionSignature,\n  timeout: number,\n  connection: Connection,\n) {\n  let done = false;\n  const result = await new Promise((resolve, reject) => {\n    (async () => {\n      setTimeout(() => {\n        if (done) {\n          return;\n        }\n        done = true;\n        console.log('Timed out for txid', txid);\n        reject({ timeout: true });\n      }, timeout);\n      try {\n        connection.onSignature(\n          txid,\n          (result) => {\n            console.log('WS confirmed', txid, result);\n            done = true;\n            if (result.err) {\n              reject(result.err);\n            } else {\n              resolve(result);\n            }\n          },\n          'recent',\n        );\n        console.log('Set up WS connection', txid);\n      } catch (e) {\n        done = true;\n        console.log('WS error in setup', txid, e);\n      }\n      while (!done) {\n        // eslint-disable-next-line no-loop-func\n        (async () => {\n          try {\n            const signatureStatuses = await connection.getSignatureStatuses([\n              txid,\n            ]);\n            const result = signatureStatuses && signatureStatuses.value[0];\n            if (!done) {\n              if (!result) {\n                console.log('REST null result for', txid, result);\n              } else if (result.err) {\n                console.log('REST error for', txid, result);\n                done = true;\n                reject(result.err);\n              } else if (!result.confirmations) {\n                console.log('REST no confirmations for', txid, result);\n              } else {\n                console.log('REST confirmation for', txid, result);\n                done = true;\n                resolve(result);\n              }\n            }\n          } catch (e) {\n            if (!done) {\n              console.log('REST connection error: txid', txid, e);\n            }\n          }\n        })();\n        await sleep(300);\n      }\n    })();\n  });\n  done = true;\n  return result;\n}\n\nfunction mergeTransactions(transactions: (Transaction | undefined)[]) {\n  const transaction = new Transaction();\n  transactions\n    .filter((t): t is Transaction => t !== undefined)\n    .forEach((t) => {\n      transaction.add(t);\n    });\n  return transaction;\n}\n\nfunction jsonRpcResult(resultDescription: any) {\n  const jsonRpcVersion = struct.literal('2.0');\n  return struct.union([\n    struct({\n      jsonrpc: jsonRpcVersion,\n      id: 'string',\n      error: 'any',\n    }),\n    struct({\n      jsonrpc: jsonRpcVersion,\n      id: 'string',\n      error: 'null?',\n      result: resultDescription,\n    }),\n  ]);\n}\n\nfunction jsonRpcResultAndContext(resultDescription: any) {\n  return jsonRpcResult({\n    context: struct({\n      slot: 'number',\n    }),\n    value: resultDescription,\n  });\n}\n\nconst AccountInfoResult = struct({\n  executable: 'boolean',\n  owner: 'string',\n  lamports: 'number',\n  data: 'any',\n  rentEpoch: 'number?',\n});\n\nexport const GetMultipleAccountsAndContextRpcResult = jsonRpcResultAndContext(\n  struct.array([struct.union(['null', AccountInfoResult])]),\n);\n\nexport async function getMultipleSolanaAccounts(\n  connection: Connection,\n  publicKeys: PublicKey[],\n): Promise<\n  RpcResponseAndContext<{ [key: string]: AccountInfo<Buffer> | null }>\n> {\n  const args = [publicKeys.map((k) => k.toBase58()), { commitment: 'recent' }];\n  // @ts-ignore\n  const unsafeRes = await connection._rpcRequest('getMultipleAccounts', args);\n  const res = GetMultipleAccountsAndContextRpcResult(unsafeRes);\n  if (res.error) {\n    throw new Error(\n      'failed to get info about accounts ' +\n        publicKeys.map((k) => k.toBase58()).join(', ') +\n        ': ' +\n        res.error.message,\n    );\n  }\n  assert(typeof res.result !== 'undefined');\n  const accounts: Array<{\n    executable: any;\n    owner: PublicKey;\n    lamports: any;\n    data: Buffer;\n  } | null> = [];\n  for (const account of res.result.value) {\n    let value: {\n      executable: any;\n      owner: PublicKey;\n      lamports: any;\n      data: Buffer;\n    } | null = null;\n    if (res.result.value) {\n      const { executable, owner, lamports, data } = account;\n      assert(data[1] === 'base64');\n      value = {\n        executable,\n        owner: new PublicKey(owner),\n        lamports,\n        data: Buffer.from(data[0], 'base64'),\n      };\n    }\n    accounts.push(value);\n  }\n  return {\n    context: {\n      slot: res.result.context.slot,\n    },\n    value: Object.fromEntries(\n      accounts.map((account, i) => [publicKeys[i].toBase58(), account]),\n    ),\n  };\n}\n\n/** Copy of Connection.simulateTransaction that takes a commitment parameter. */\nasync function simulateTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  commitment: Commitment,\n): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n  // @ts-ignore\n  transaction.recentBlockhash = await connection._recentBlockhash(\n    // @ts-ignore\n    connection._disableBlockhashCaching,\n  );\n\n  const signData = transaction.serializeMessage();\n  // @ts-ignore\n  const wireTransaction = transaction._serialize(signData);\n  const encodedTransaction = wireTransaction.toString('base64');\n  const config: any = { encoding: 'base64', commitment };\n  const args = [encodedTransaction, config];\n\n  // @ts-ignore\n  const res = await connection._rpcRequest('simulateTransaction', args);\n  if (res.error) {\n    throw new Error('failed to simulate transaction: ' + res.error.message);\n  }\n  return res.result;\n}\n","import * as BufferLayout from 'buffer-layout';\nimport bs58 from 'bs58';\nimport { AccountInfo, Connection, PublicKey } from '@solana/web3.js';\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\nimport { TokenAccount } from './types';\nimport { TOKEN_MINTS } from '@project-serum/serum';\nimport { useAllMarkets, useCustomMarkets, useTokenAccounts } from './markets';\nimport { getMultipleSolanaAccounts } from './send';\nimport { useConnection } from './connection';\nimport { useAsyncData } from './fetch-loop';\nimport tuple from 'immutable-tuple';\nimport BN from 'bn.js';\nimport { useMemo } from 'react';\n\nexport const ACCOUNT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(32, 'mint'),\n  BufferLayout.blob(32, 'owner'),\n  BufferLayout.nu64('amount'),\n  BufferLayout.blob(93),\n]);\n\nexport const MINT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(36),\n  BufferLayout.blob(8, 'supply'),\n  BufferLayout.u8('decimals'),\n  BufferLayout.u8('initialized'),\n  BufferLayout.blob(36),\n]);\n\nexport function parseTokenAccountData(\n  data: Buffer,\n): { mint: PublicKey; owner: PublicKey; amount: number } {\n  let { mint, owner, amount } = ACCOUNT_LAYOUT.decode(data);\n  return {\n    mint: new PublicKey(mint),\n    owner: new PublicKey(owner),\n    amount,\n  };\n}\n\nexport interface MintInfo {\n  decimals: number;\n  initialized: boolean;\n  supply: BN;\n}\n\nexport function parseTokenMintData(data): MintInfo {\n  let { decimals, initialized, supply } = MINT_LAYOUT.decode(data);\n  return {\n    decimals,\n    initialized: !!initialized,\n    supply: new BN(supply, 10, 'le'),\n  };\n}\n\nexport function getOwnedAccountsFilters(publicKey: PublicKey) {\n  return [\n    {\n      memcmp: {\n        offset: ACCOUNT_LAYOUT.offsetOf('owner'),\n        bytes: publicKey.toBase58(),\n      },\n    },\n    {\n      dataSize: ACCOUNT_LAYOUT.span,\n    },\n  ];\n}\n\nexport const TOKEN_PROGRAM_ID = new PublicKey(\n  'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n);\n\nexport async function getOwnedTokenAccounts(\n  connection: Connection,\n  publicKey: PublicKey,\n): Promise<Array<{ publicKey: PublicKey; accountInfo: AccountInfo<Buffer> }>> {\n  let filters = getOwnedAccountsFilters(publicKey);\n  // @ts-ignore\n  let resp = await connection._rpcRequest('getProgramAccounts', [\n    TOKEN_PROGRAM_ID.toBase58(),\n    {\n      commitment: connection.commitment,\n      filters,\n    },\n  ]);\n  if (resp.error) {\n    throw new Error(\n      'failed to get token accounts owned by ' +\n        publicKey.toBase58() +\n        ': ' +\n        resp.error.message,\n    );\n  }\n  return resp.result\n    .map(({ pubkey, account: { data, executable, owner, lamports } }) => ({\n      publicKey: new PublicKey(pubkey),\n      accountInfo: {\n        data: bs58.decode(data),\n        executable,\n        owner: new PublicKey(owner),\n        lamports,\n      },\n    }))\n    .filter(({ accountInfo }) => {\n      // TODO: remove this check once mainnet is updated\n      return filters.every((filter) => {\n        if (filter.dataSize) {\n          return accountInfo.data.length === filter.dataSize;\n        } else if (filter.memcmp) {\n          let filterBytes = bs58.decode(filter.memcmp.bytes);\n          return accountInfo.data\n            .slice(\n              filter.memcmp.offset,\n              filter.memcmp.offset + filterBytes.length,\n            )\n            .equals(filterBytes);\n        }\n        return false;\n      });\n    });\n}\n\nexport async function getTokenAccountInfo(\n  connection: Connection,\n  ownerAddress: PublicKey,\n) {\n  let [splAccounts, account] = await Promise.all([\n    getOwnedTokenAccounts(connection, ownerAddress),\n    connection.getAccountInfo(ownerAddress),\n  ]);\n  const parsedSplAccounts: TokenAccount[] = splAccounts.map(\n    ({ publicKey, accountInfo }) => {\n      return {\n        pubkey: publicKey,\n        account: accountInfo,\n        effectiveMint: parseTokenAccountData(accountInfo.data).mint,\n      };\n    },\n  );\n  return parsedSplAccounts.concat({\n    pubkey: ownerAddress,\n    account,\n    effectiveMint: WRAPPED_SOL_MINT,\n  });\n}\n\nexport function useMintToTickers(): { [mint: string]: string } {\n  const { customMarkets } = useCustomMarkets();\n  const [markets] = useAllMarkets();\n  return useMemo(() => {\n    const mintsToTickers = Object.fromEntries(\n      TOKEN_MINTS.map((mint) => [mint.address.toBase58(), mint.name]),\n    );\n    for (let market of markets || []) {\n      const customMarketInfo = customMarkets.find(\n        (customMarket) =>\n          customMarket.address === market.market.address.toBase58(),\n      );\n      if (!(market.market.baseMintAddress.toBase58() in mintsToTickers)) {\n        if (customMarketInfo) {\n          mintsToTickers[market.market.baseMintAddress.toBase58()] =\n            customMarketInfo.baseLabel || `${customMarketInfo.name}_BASE`;\n        }\n      }\n      if (!(market.market.quoteMintAddress.toBase58() in mintsToTickers)) {\n        if (customMarketInfo) {\n          mintsToTickers[market.market.quoteMintAddress.toBase58()] =\n            customMarketInfo.quoteLabel || `${customMarketInfo.name}_QUOTE`;\n        }\n      }\n    }\n    return mintsToTickers;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [markets?.length, customMarkets.length]);\n}\n\nconst _VERY_SLOW_REFRESH_INTERVAL = 5000 * 1000;\n\nexport function useMintInfos(): [\n  (\n    | {\n        [mintAddress: string]: {\n          decimals: number;\n          initialized: boolean;\n        } | null;\n      }\n    | null\n    | undefined\n  ),\n  boolean,\n] {\n  const connection = useConnection();\n  const [tokenAccounts] = useTokenAccounts();\n  const [allMarkets] = useAllMarkets();\n\n  const allMints = (tokenAccounts || [])\n    .map((account) => account.effectiveMint)\n    .concat(\n      (allMarkets || []).map((marketInfo) => marketInfo.market.baseMintAddress),\n    )\n    .concat(\n      (allMarkets || []).map(\n        (marketInfo) => marketInfo.market.quoteMintAddress,\n      ),\n    );\n  const uniqueMints = [...new Set(allMints.map((mint) => mint.toBase58()))].map(\n    (stringMint) => new PublicKey(stringMint),\n  );\n\n  const getAllMintInfo = async () => {\n    const mintInfos = await getMultipleSolanaAccounts(connection, uniqueMints);\n    return Object.fromEntries(\n      Object.entries(mintInfos.value).map(([key, accountInfo]) => [\n        key,\n        accountInfo && parseTokenMintData(accountInfo.data),\n      ]),\n    );\n  };\n\n  return useAsyncData(\n    getAllMintInfo,\n    tuple(\n      'getAllMintInfo',\n      connection,\n      (tokenAccounts || []).length,\n      (allMarkets || []).length,\n    ),\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\n  );\n}\n","import { BonfidaTrade } from './types';\n\nexport default class BonfidaApi {\n  static URL: string = 'https://serum-api.bonfida.com/';\n\n  static async get(path: string) {\n    try {\n      const response = await fetch(this.URL + path);\n      if (response.ok) {\n        const responseJson = await response.json();\n        return responseJson.success ? responseJson.data : null;\n      }\n    } catch (err) {\n      console.log(`Error fetching from Bonfida API ${path}: ${err}`);\n    }\n    return null;\n  }\n\n  static async getRecentTrades(\n    marketAddress: string,\n  ): Promise<BonfidaTrade[] | null> {\n    return BonfidaApi.get(`trades/address/${marketAddress}`);\n  }\n}\n\nexport const BONFIDA_DATA_FEED = 'https://serum-api.bonfida.com/tv';\n","import {\n  decodeEventQueue,\n  Market,\n  MARKETS,\n  OpenOrders,\n  Orderbook,\n  TOKEN_MINTS,\n  TokenInstructions,\n} from '@project-serum/serum';\nimport { PublicKey } from '@solana/web3.js';\nimport React, { useContext, useEffect, useState } from 'react';\nimport {\n  divideBnToNumber,\n  floorToDecimal,\n  getTokenMultiplierFromDecimals,\n  useLocalStorageState,\n} from './utils';\nimport { refreshCache, useAsyncData } from './fetch-loop';\nimport { useAccountData, useAccountInfo, useConnection } from './connection';\nimport { useWallet } from './wallet';\nimport tuple from 'immutable-tuple';\nimport { notify } from './notifications';\nimport BN from 'bn.js';\nimport {\n  getTokenAccountInfo,\n  parseTokenAccountData,\n  useMintInfos,\n} from './tokens';\nimport {\n  Balances,\n  CustomMarketInfo,\n  DeprecatedOpenOrdersBalances,\n  FullMarketInfo,\n  MarketContextValues,\n  MarketInfo,\n  OrderWithMarketAndMarketName,\n  SelectedTokenAccounts,\n  TokenAccount,\n  Trade,\n} from './types';\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\nimport { Order } from '@project-serum/serum/lib/market';\nimport BonfidaApi from './bonfidaConnector';\nimport { sleep } from './utils';\n\n// Used in debugging, should be false in production\nconst _IGNORE_DEPRECATED = false;\n\nexport const USE_MARKETS: MarketInfo[] = _IGNORE_DEPRECATED\n  ? MARKETS.map((m) => ({ ...m, deprecated: false }))\n  : MARKETS;\n\nexport function useMarketsList() {\n  return USE_MARKETS.filter(({ deprecated }) => !deprecated);\n}\n\nexport function useAllMarkets() {\n  const connection = useConnection();\n  const { customMarkets } = useCustomMarkets();\n\n  const getAllMarkets = async () => {\n    const markets: Array<{\n      market: Market;\n      marketName: string;\n      programId: PublicKey;\n    } | null> = await Promise.all(\n      getMarketInfos(customMarkets).map(async (marketInfo) => {\n        try {\n          const market = await Market.load(\n            connection,\n            marketInfo.address,\n            {},\n            marketInfo.programId,\n          );\n          return {\n            market,\n            marketName: marketInfo.name,\n            programId: marketInfo.programId,\n          };\n        } catch (e) {\n          notify({\n            message: 'Error loading all market',\n            description: e.message,\n            type: 'error',\n          });\n          return null;\n        }\n      }),\n    );\n    return markets.filter(\n      (m): m is { market: Market; marketName: string; programId: PublicKey } =>\n        !!m,\n    );\n  };\n  return useAsyncData(\n    getAllMarkets,\n    tuple('getAllMarkets', customMarkets.length, connection),\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useUnmigratedOpenOrdersAccounts() {\n  const connection = useConnection();\n  const { wallet } = useWallet();\n\n  async function getUnmigratedOpenOrdersAccounts(): Promise<OpenOrders[]> {\n    if (!wallet || !connection || !wallet.publicKey) {\n      return [];\n    }\n    console.log('refreshing useUnmigratedOpenOrdersAccounts');\n    let deprecatedOpenOrdersAccounts: OpenOrders[] = [];\n    const deprecatedProgramIds = Array.from(\n      new Set(\n        USE_MARKETS.filter(\n          ({ deprecated }) => deprecated,\n        ).map(({ programId }) => programId.toBase58()),\n      ),\n    ).map((publicKeyStr) => new PublicKey(publicKeyStr));\n    let programId: PublicKey;\n    for (programId of deprecatedProgramIds) {\n      try {\n        const openOrdersAccounts = await OpenOrders.findForOwner(\n          connection,\n          wallet.publicKey,\n          programId,\n        );\n        deprecatedOpenOrdersAccounts = deprecatedOpenOrdersAccounts.concat(\n          openOrdersAccounts\n            .filter(\n              (openOrders) =>\n                openOrders.baseTokenTotal.toNumber() ||\n                openOrders.quoteTokenTotal.toNumber(),\n            )\n            .filter((openOrders) =>\n              USE_MARKETS.some(\n                (market) =>\n                  market.deprecated && market.address.equals(openOrders.market),\n              ),\n            ),\n        );\n      } catch (e) {\n        console.log(\n          'Error loading deprecated markets',\n          programId?.toBase58(),\n          e.message,\n        );\n      }\n    }\n    // Maybe sort\n    return deprecatedOpenOrdersAccounts;\n  }\n\n  const cacheKey = tuple(\n    'getUnmigratedOpenOrdersAccounts',\n    connection,\n    wallet?.publicKey?.toBase58(),\n  );\n  const [accounts] = useAsyncData(getUnmigratedOpenOrdersAccounts, cacheKey, {\n    refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\n  });\n\n  return {\n    accounts,\n    refresh: (clearCache: boolean) => refreshCache(cacheKey, clearCache),\n  };\n}\n\nconst MarketContext: React.Context<null | MarketContextValues> = React.createContext<null | MarketContextValues>(\n  null,\n);\n\nconst _VERY_SLOW_REFRESH_INTERVAL = 5000 * 1000;\n\n// For things that don't really change\nconst _SLOW_REFRESH_INTERVAL = 5 * 1000;\n\n// For things that change frequently\nconst _FAST_REFRESH_INTERVAL = 1000;\n\nexport const DEFAULT_MARKET = USE_MARKETS.find(\n  ({ name, deprecated }) => name === 'SRM/USDT' && !deprecated,\n);\n\nexport function getMarketDetails(\n  market: Market | undefined | null,\n  customMarkets: CustomMarketInfo[],\n): FullMarketInfo {\n  if (!market) {\n    return {};\n  }\n  const marketInfos = getMarketInfos(customMarkets);\n  const marketInfo = marketInfos.find((otherMarket) =>\n    otherMarket.address.equals(market.address),\n  );\n  const baseCurrency =\n    (market?.baseMintAddress &&\n      TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\n        ?.name) ||\n    (marketInfo?.baseLabel && `${marketInfo?.baseLabel}*`) ||\n    'UNKNOWN';\n  const quoteCurrency =\n    (market?.quoteMintAddress &&\n      TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\n        ?.name) ||\n    (marketInfo?.quoteLabel && `${marketInfo?.quoteLabel}*`) ||\n    'UNKNOWN';\n\n  return {\n    ...marketInfo,\n    marketName: marketInfo?.name,\n    baseCurrency,\n    quoteCurrency,\n    marketInfo,\n  };\n}\n\nexport function useCustomMarkets() {\n  const [customMarkets, setCustomMarkets] = useLocalStorageState<\n    CustomMarketInfo[]\n  >('customMarkets', []);\n  return { customMarkets, setCustomMarkets };\n}\n\nexport function MarketProvider({ marketAddress, setMarketAddress, children }) {\n  const { customMarkets, setCustomMarkets } = useCustomMarkets();\n\n  const address = marketAddress && new PublicKey(marketAddress);\n  const connection = useConnection();\n  const marketInfos = getMarketInfos(customMarkets);\n  const marketInfo =\n    address && marketInfos.find((market) => market.address.equals(address));\n\n  // Replace existing market with a non-deprecated one on first load\n  useEffect(() => {\n    if (marketInfo && marketInfo.deprecated) {\n      console.log('Switching markets from deprecated', marketInfo);\n      if (DEFAULT_MARKET) {\n        setMarketAddress(DEFAULT_MARKET.address.toBase58());\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const [market, setMarket] = useState<Market | null>();\n  useEffect(() => {\n    if (\n      market &&\n      marketInfo &&\n      // @ts-ignore\n      market._decoded.ownAddress?.equals(marketInfo?.address)\n    ) {\n      return;\n    }\n    setMarket(null);\n    if (!marketInfo || !marketInfo.address) {\n      notify({\n        message: 'Error loading market',\n        description: 'Please select a market from the dropdown',\n        type: 'error',\n      });\n      return;\n    }\n    Market.load(connection, marketInfo.address, {}, marketInfo.programId)\n      .then(setMarket)\n      .catch((e) =>\n        notify({\n          message: 'Error loading market',\n          description: e.message,\n          type: 'error',\n        }),\n      );\n    // eslint-disable-next-line\n  }, [connection, marketInfo]);\n\n  return (\n    <MarketContext.Provider\n      value={{\n        market,\n        ...getMarketDetails(market, customMarkets),\n        setMarketAddress,\n        customMarkets,\n        setCustomMarkets,\n      }}\n    >\n      {children}\n    </MarketContext.Provider>\n  );\n}\n\nexport function getTradePageUrl(marketAddress?: string) {\n  if (!marketAddress) {\n    const saved = localStorage.getItem('marketAddress');\n    if (saved) {\n      marketAddress = JSON.parse(saved);\n    }\n    marketAddress = marketAddress || DEFAULT_MARKET?.address.toBase58() || '';\n  }\n  return `/market/${marketAddress}`;\n}\n\nexport function useSelectedTokenAccounts(): [\n  SelectedTokenAccounts,\n  (newSelectedTokenAccounts: SelectedTokenAccounts) => void,\n] {\n  const [\n    selectedTokenAccounts,\n    setSelectedTokenAccounts,\n  ] = useLocalStorageState<SelectedTokenAccounts>('selectedTokenAccounts', {});\n  return [selectedTokenAccounts, setSelectedTokenAccounts];\n}\n\nexport function useMarket() {\n  const context = useContext(MarketContext);\n  if (!context) {\n    throw new Error('Missing market context');\n  }\n  return context;\n}\n\nexport function useMarkPrice() {\n  const [markPrice, setMarkPrice] = useState<null | number>(null);\n\n  const [orderbook] = useOrderbook();\n  const trades = useTrades();\n\n  useEffect(() => {\n    let bb = orderbook?.bids?.length > 0 && Number(orderbook.bids[0][0]);\n    let ba = orderbook?.asks?.length > 0 && Number(orderbook.asks[0][0]);\n    let last = trades && trades.length > 0 && trades[0].price;\n\n    let markPrice =\n      bb && ba\n        ? last\n          ? [bb, ba, last].sort((a, b) => a - b)[1]\n          : (bb + ba) / 2\n        : null;\n\n    setMarkPrice(markPrice);\n  }, [orderbook, trades]);\n\n  return markPrice;\n}\n\nexport function _useUnfilteredTrades(limit = 10000) {\n  const { market } = useMarket();\n  const connection = useConnection();\n  async function getUnfilteredTrades(): Promise<any[] | null> {\n    if (!market || !connection) {\n      return null;\n    }\n    return await market.loadFills(connection, limit);\n  }\n  const [trades] = useAsyncData(\n    getUnfilteredTrades,\n    tuple('getUnfilteredTrades', market, connection),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n  return trades;\n  // NOTE: For now, websocket is too expensive since the event queue is large\n  // and updates very frequently\n\n  // let data = useAccountData(market && market._decoded.eventQueue);\n  // if (!data) {\n  //   return null;\n  // }\n  // const events = decodeEventQueue(data, limit);\n  // return events\n  //   .filter((event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0))\n  //   .map(market.parseFillEvent.bind(market));\n}\n\nexport function useBonfidaTrades() {\n  const { market } = useMarket();\n  const marketAddress = market?.address.toBase58();\n\n  async function getBonfidaTrades() {\n    if (!marketAddress) {\n      return null;\n    }\n    return await BonfidaApi.getRecentTrades(marketAddress);\n  }\n\n  return useAsyncData(\n    getBonfidaTrades,\n    tuple('getBonfidaTrades', marketAddress),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n    false,\n  );\n}\n\nexport function useOrderbookAccounts() {\n  const { market } = useMarket();\n  // @ts-ignore\n  let bidData = useAccountData(market && market._decoded.bids);\n  // @ts-ignore\n  let askData = useAccountData(market && market._decoded.asks);\n  return {\n    bidOrderbook: market && bidData ? Orderbook.decode(market, bidData) : null,\n    askOrderbook: market && askData ? Orderbook.decode(market, askData) : null,\n  };\n}\n\nexport function useOrderbook(\n  depth = 20,\n): [{ bids: number[][]; asks: number[][] }, boolean] {\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\n  const { market } = useMarket();\n  const bids =\n    !bidOrderbook || !market\n      ? []\n      : bidOrderbook.getL2(depth).map(([price, size]) => [price, size]);\n  const asks =\n    !askOrderbook || !market\n      ? []\n      : askOrderbook.getL2(depth).map(([price, size]) => [price, size]);\n  return [{ bids, asks }, !!bids || !!asks];\n}\n\n// Want the balances table to be fast-updating, dont want open orders to flicker\n// TODO: Update to use websocket\nexport function useOpenOrdersAccounts(fast = false) {\n  const { market } = useMarket();\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getOpenOrdersAccounts() {\n    if (!connected) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    return await market.findOpenOrdersAccountsForOwner(\n      connection,\n      wallet.publicKey,\n    );\n  }\n  return useAsyncData(\n    getOpenOrdersAccounts,\n    tuple('getOpenOrdersAccounts', wallet, market, connected),\n    { refreshInterval: fast ? _FAST_REFRESH_INTERVAL : _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useSelectedOpenOrdersAccount(fast = false) {\n  const [accounts] = useOpenOrdersAccounts(fast);\n  if (!accounts) {\n    return null;\n  }\n  return accounts[0];\n}\n\nexport function useTokenAccounts(): [\n  TokenAccount[] | null | undefined,\n  boolean,\n] {\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getTokenAccounts() {\n    if (!connected) {\n      return null;\n    }\n    return await getTokenAccountInfo(connection, wallet.publicKey);\n  }\n  return useAsyncData(\n    getTokenAccounts,\n    tuple('getTokenAccounts', wallet, connected),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function getSelectedTokenAccountForMint(\n  accounts: TokenAccount[] | undefined | null,\n  mint: PublicKey | undefined,\n  selectedPubKey?: string | PublicKey | null,\n) {\n  if (!accounts || !mint) {\n    return null;\n  }\n  const filtered = accounts.filter(\n    ({ effectiveMint, pubkey }) =>\n      mint.equals(effectiveMint) &&\n      (!selectedPubKey ||\n        (typeof selectedPubKey === 'string'\n          ? selectedPubKey\n          : selectedPubKey.toBase58()) === pubkey.toBase58()),\n  );\n  return filtered && filtered[0];\n}\n\nexport function useSelectedQuoteCurrencyAccount() {\n  const [accounts] = useTokenAccounts();\n  const { market } = useMarket();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n  const mintAddress = market?.quoteMintAddress;\n  return getSelectedTokenAccountForMint(\n    accounts,\n    mintAddress,\n    mintAddress && selectedTokenAccounts[mintAddress.toBase58()],\n  );\n}\n\nexport function useSelectedBaseCurrencyAccount() {\n  const [accounts] = useTokenAccounts();\n  const { market } = useMarket();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n  const mintAddress = market?.baseMintAddress;\n  return getSelectedTokenAccountForMint(\n    accounts,\n    mintAddress,\n    mintAddress && selectedTokenAccounts[mintAddress.toBase58()],\n  );\n}\n\n// TODO: Update to use websocket\nexport function useSelectedQuoteCurrencyBalances() {\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const { market } = useMarket();\n  const [accountInfo, loaded] = useAccountInfo(quoteCurrencyAccount?.pubkey);\n  if (!market || !quoteCurrencyAccount || !loaded || !accountInfo) {\n    return null;\n  }\n  if (market.quoteMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\n    return accountInfo?.lamports / 1e9 ?? 0;\n  }\n  return market.quoteSplSizeToNumber(\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\n  );\n}\n\n// TODO: Update to use websocket\nexport function useSelectedBaseCurrencyBalances() {\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const { market } = useMarket();\n  const [accountInfo, loaded] = useAccountInfo(baseCurrencyAccount?.pubkey);\n  if (!market || !baseCurrencyAccount || !loaded || !accountInfo) {\n    return null;\n  }\n  if (market.baseMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\n    return accountInfo?.lamports / 1e9 ?? 0;\n  }\n  return market.baseSplSizeToNumber(\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\n  );\n}\n\nexport function useOpenOrders() {\n  const { market, marketName } = useMarket();\n  const openOrdersAccount = useSelectedOpenOrdersAccount();\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\n  if (!market || !openOrdersAccount || !bidOrderbook || !askOrderbook) {\n    return null;\n  }\n  return market\n    .filterForOpenOrders(bidOrderbook, askOrderbook, [openOrdersAccount])\n    .map((order) => ({ ...order, marketName, market }));\n}\n\nexport function useTrades(limit = 100) {\n  const trades = _useUnfilteredTrades(limit);\n  if (!trades) {\n    return null;\n  }\n  // Until partial fills are each given their own fill, use maker fills\n  return trades\n    .filter(({ eventFlags }) => eventFlags.maker)\n    .map((trade) => ({\n      ...trade,\n      side: trade.side === 'buy' ? 'sell' : 'buy',\n    }));\n}\n\nexport function useLocallyStoredFeeDiscountKey(): {\n  storedFeeDiscountKey: PublicKey | undefined;\n  setStoredFeeDiscountKey: (key: string) => void;\n} {\n  const [\n    storedFeeDiscountKey,\n    setStoredFeeDiscountKey,\n  ] = useLocalStorageState<string>(`feeDiscountKey`, undefined);\n  return {\n    storedFeeDiscountKey: storedFeeDiscountKey\n      ? new PublicKey(storedFeeDiscountKey)\n      : undefined,\n    setStoredFeeDiscountKey,\n  };\n}\n\nexport function useFeeDiscountKeys(): [\n  (\n    | {\n        pubkey: PublicKey;\n        feeTier: number;\n        balance: number;\n        mint: PublicKey;\n      }[]\n    | null\n    | undefined\n  ),\n  boolean,\n] {\n  const { market } = useMarket();\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  const { setStoredFeeDiscountKey } = useLocallyStoredFeeDiscountKey();\n  let getFeeDiscountKeys = async () => {\n    if (!connected) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    const feeDiscountKey = await market.findFeeDiscountKeys(\n      connection,\n      wallet.publicKey,\n    );\n    if (feeDiscountKey) {\n      setStoredFeeDiscountKey(feeDiscountKey[0].pubkey.toBase58());\n    }\n    return feeDiscountKey;\n  };\n  return useAsyncData(\n    getFeeDiscountKeys,\n    tuple('getFeeDiscountKeys', wallet, market, connected),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useFills(limit = 100) {\n  const { marketName } = useMarket();\n  const fills = _useUnfilteredTrades(limit);\n  const [openOrdersAccounts] = useOpenOrdersAccounts();\n  if (!openOrdersAccounts || openOrdersAccounts.length === 0) {\n    return null;\n  }\n  if (!fills) {\n    return null;\n  }\n  return fills\n    .filter((fill) =>\n      openOrdersAccounts.some((openOrdersAccount) =>\n        fill.openOrders.equals(openOrdersAccount.publicKey),\n      ),\n    )\n    .map((fill) => ({ ...fill, marketName }));\n}\n\n// TODO: Update to use websocket\nexport function useFillsForAllMarkets(limit = 100) {\n  const { connected, wallet } = useWallet();\n\n  const connection = useConnection();\n  const allMarkets = useAllMarkets();\n\n  async function getFillsForAllMarkets() {\n    let fills: Trade[] = [];\n    if (!connected) {\n      return fills;\n    }\n\n    let marketData;\n    for (marketData of allMarkets) {\n      const { market, marketName } = marketData;\n      if (!market) {\n        return fills;\n      }\n      const openOrdersAccounts = await market.findOpenOrdersAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n      const openOrdersAccount = openOrdersAccounts && openOrdersAccounts[0];\n      if (!openOrdersAccount) {\n        return fills;\n      }\n      const eventQueueData = await connection.getAccountInfo(\n        market && market._decoded.eventQueue,\n      );\n      let data = eventQueueData?.data;\n      if (!data) {\n        return fills;\n      }\n      const events = decodeEventQueue(data, limit);\n      const fillsForMarket: Trade[] = events\n        .filter(\n          (event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0),\n        )\n        .map(market.parseFillEvent.bind(market));\n      const ownFillsForMarket = fillsForMarket\n        .filter((fill) => fill.openOrders.equals(openOrdersAccount.publicKey))\n        .map((fill) => ({ ...fill, marketName }));\n      fills = fills.concat(ownFillsForMarket);\n    }\n\n    console.log(JSON.stringify(fills));\n    return fills;\n  }\n\n  return useAsyncData(\n    getFillsForAllMarkets,\n    tuple('getFillsForAllMarkets', connected, connection, allMarkets, wallet),\n    { refreshInterval: _FAST_REFRESH_INTERVAL },\n  );\n}\n\nexport function useAllOpenOrdersAccounts() {\n  const { wallet, connected } = useWallet();\n  const connection = useConnection();\n  const marketInfos = useMarketInfos();\n  const programIds = [\n    ...new Set(marketInfos.map((info) => info.programId.toBase58())),\n  ].map((stringProgramId) => new PublicKey(stringProgramId));\n\n  const getAllOpenOrdersAccounts = async () => {\n    if (!connected) {\n      return [];\n    }\n    return (\n      await Promise.all(\n        programIds.map((programId) =>\n          OpenOrders.findForOwner(connection, wallet.publicKey, programId),\n        ),\n      )\n    ).flat();\n  };\n  return useAsyncData(\n    getAllOpenOrdersAccounts,\n    tuple(\n      'getAllOpenOrdersAccounts',\n      connection,\n      connected,\n      wallet?.publicKey?.toBase58(),\n      marketInfos.length,\n      (programIds || []).length,\n    ),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useAllOpenOrdersBalances() {\n  const [\n    openOrdersAccounts,\n    loadedOpenOrdersAccounts,\n  ] = useAllOpenOrdersAccounts();\n  const [mintInfos, mintInfosConnected] = useMintInfos();\n  const [allMarkets] = useAllMarkets();\n  if (!loadedOpenOrdersAccounts || !mintInfosConnected) {\n    return {};\n  }\n\n  const marketsByAddress = Object.fromEntries(\n    (allMarkets || []).map((m) => [m.market.address.toBase58(), m]),\n  );\n  const openOrdersBalances: {\n    [mint: string]: { market: PublicKey; free: number; total: number }[];\n  } = {};\n  for (let account of openOrdersAccounts || []) {\n    const marketInfo = marketsByAddress[account.market.toBase58()];\n    const baseMint = marketInfo?.market.baseMintAddress.toBase58();\n    const quoteMint = marketInfo?.market.quoteMintAddress.toBase58();\n    if (!(baseMint in openOrdersBalances)) {\n      openOrdersBalances[baseMint] = [];\n    }\n    if (!(quoteMint in openOrdersBalances)) {\n      openOrdersBalances[quoteMint] = [];\n    }\n\n    const baseMintInfo = mintInfos && mintInfos[baseMint];\n    const baseFree = divideBnToNumber(\n      new BN(account.baseTokenFree),\n      getTokenMultiplierFromDecimals(baseMintInfo?.decimals || 0),\n    );\n    const baseTotal = divideBnToNumber(\n      new BN(account.baseTokenTotal),\n      getTokenMultiplierFromDecimals(baseMintInfo?.decimals || 0),\n    );\n    const quoteMintInfo = mintInfos && mintInfos[quoteMint];\n    const quoteFree = divideBnToNumber(\n      new BN(account.quoteTokenFree),\n      getTokenMultiplierFromDecimals(quoteMintInfo?.decimals || 0),\n    );\n    const quoteTotal = divideBnToNumber(\n      new BN(account.quoteTokenTotal),\n      getTokenMultiplierFromDecimals(quoteMintInfo?.decimals || 0),\n    );\n\n    openOrdersBalances[baseMint].push({\n      market: account.market,\n      free: baseFree,\n      total: baseTotal,\n    });\n    openOrdersBalances[quoteMint].push({\n      market: account.market,\n      free: quoteFree,\n      total: quoteTotal,\n    });\n  }\n  return openOrdersBalances;\n}\n\nexport const useAllOpenOrders = (): {\n  openOrders: { orders: Order[]; marketAddress: string }[] | null | undefined;\n  loaded: boolean;\n  refreshOpenOrders: () => void;\n} => {\n  const connection = useConnection();\n  const { connected, wallet } = useWallet();\n  const [loaded, setLoaded] = useState(false);\n  const [refresh, setRefresh] = useState(0);\n  const [openOrders, setOpenOrders] = useState<\n    { orders: Order[]; marketAddress: string }[] | null | undefined\n  >(null);\n  const [lastRefresh, setLastRefresh] = useState(0);\n\n  const refreshOpenOrders = () => {\n    if (new Date().getTime() - lastRefresh > 10 * 1000) {\n      setRefresh((prev) => prev + 1);\n    } else {\n      console.log('not refreshing');\n    }\n  };\n\n  useEffect(() => {\n    if (connected) {\n      const getAllOpenOrders = async () => {\n        setLoaded(false);\n        const _openOrders: { orders: Order[]; marketAddress: string }[] = [];\n        const getOpenOrdersForMarket = async (marketInfo: MarketInfo) => {\n          await sleep(1000 * Math.random()); // Try not to hit rate limit\n          try {\n            const market = await Market.load(\n              connection,\n              marketInfo.address,\n              undefined,\n              marketInfo.programId,\n            );\n            const orders = await market.loadOrdersForOwner(\n              connection,\n              wallet?.publicKey,\n              30000,\n            );\n            _openOrders.push({\n              orders: orders,\n              marketAddress: marketInfo.address.toBase58(),\n            });\n          } catch (e) {\n            console.warn(`Error loading open order ${marketInfo.name} - ${e}`);\n          }\n        };\n        await Promise.all(USE_MARKETS.map((m) => getOpenOrdersForMarket(m)));\n        setOpenOrders(_openOrders);\n        setLastRefresh(new Date().getTime());\n        setLoaded(true);\n      };\n      getAllOpenOrders();\n    }\n  }, [connected, wallet, refresh]);\n  return {\n    openOrders: openOrders,\n    loaded: loaded,\n    refreshOpenOrders: refreshOpenOrders,\n  };\n};\n\nexport function useBalances(): Balances[] {\n  const baseCurrencyBalances = useSelectedBaseCurrencyBalances();\n  const quoteCurrencyBalances = useSelectedQuoteCurrencyBalances();\n  const openOrders = useSelectedOpenOrdersAccount(true);\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const baseExists =\n    openOrders && openOrders.baseTokenTotal && openOrders.baseTokenFree;\n  const quoteExists =\n    openOrders && openOrders.quoteTokenTotal && openOrders.quoteTokenFree;\n  if (\n    baseCurrency === 'UNKNOWN' ||\n    quoteCurrency === 'UNKNOWN' ||\n    !baseCurrency ||\n    !quoteCurrency\n  ) {\n    return [];\n  }\n  return [\n    {\n      market,\n      key: `${baseCurrency}${quoteCurrency}${baseCurrency}`,\n      coin: baseCurrency,\n      wallet: baseCurrencyBalances,\n      orders:\n        baseExists && market && openOrders\n          ? market.baseSplSizeToNumber(\n              openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\n            )\n          : null,\n      openOrders,\n      unsettled:\n        baseExists && market && openOrders\n          ? market.baseSplSizeToNumber(openOrders.baseTokenFree)\n          : null,\n    },\n    {\n      market,\n      key: `${quoteCurrency}${baseCurrency}${quoteCurrency}`,\n      coin: quoteCurrency,\n      wallet: quoteCurrencyBalances,\n      openOrders,\n      orders:\n        quoteExists && market && openOrders\n          ? market.quoteSplSizeToNumber(\n              openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\n            )\n          : null,\n      unsettled:\n        quoteExists && market && openOrders\n          ? market.quoteSplSizeToNumber(openOrders.quoteTokenFree)\n          : null,\n    },\n  ];\n}\n\nexport function useWalletBalancesForAllMarkets(): {\n  mint: string;\n  balance: number;\n}[] {\n  const [tokenAccounts] = useTokenAccounts();\n  const { connected } = useWallet();\n  const [mintInfos, mintInfosConnected] = useMintInfos();\n\n  if (!connected || !mintInfosConnected) {\n    return [];\n  }\n\n  let balances: { [mint: string]: number } = {};\n  for (let account of tokenAccounts || []) {\n    if (!account.account) {\n      continue;\n    }\n    let parsedAccount;\n    if (account.effectiveMint.equals(WRAPPED_SOL_MINT)) {\n      parsedAccount = {\n        mint: WRAPPED_SOL_MINT,\n        owner: account.pubkey,\n        amount: account.account.lamports,\n      };\n    } else {\n      parsedAccount = parseTokenAccountData(account.account.data);\n    }\n    if (!(parsedAccount.mint.toBase58() in balances)) {\n      balances[parsedAccount.mint.toBase58()] = 0;\n    }\n    const mintInfo = mintInfos && mintInfos[parsedAccount.mint.toBase58()];\n    const additionalAmount = divideBnToNumber(\n      new BN(parsedAccount.amount),\n      getTokenMultiplierFromDecimals(mintInfo?.decimals || 0),\n    );\n    balances[parsedAccount.mint.toBase58()] += additionalAmount;\n  }\n  return Object.entries(balances).map(([mint, balance]) => {\n    return { mint, balance };\n  });\n}\n\nexport function useUnmigratedDeprecatedMarkets() {\n  const connection = useConnection();\n  const { accounts } = useUnmigratedOpenOrdersAccounts();\n  const marketsList =\n    accounts &&\n    Array.from(new Set(accounts.map((openOrders) => openOrders.market)));\n  const deps = marketsList && marketsList.map((m) => m.toBase58());\n\n  const useUnmigratedDeprecatedMarketsInner = async () => {\n    if (!marketsList) {\n      return null;\n    }\n    const getMarket = async (address) => {\n      const marketInfo = USE_MARKETS.find((market) =>\n        market.address.equals(address),\n      );\n      if (!marketInfo) {\n        console.log('Failed loading market');\n        notify({\n          message: 'Error loading market',\n          type: 'error',\n        });\n        return null;\n      }\n      try {\n        console.log('Loading market', marketInfo.name);\n        // NOTE: Should this just be cached by (connection, marketInfo.address, marketInfo.programId)?\n        return await Market.load(\n          connection,\n          marketInfo.address,\n          {},\n          marketInfo.programId,\n        );\n      } catch (e) {\n        console.log('Failed loading market', marketInfo.name, e);\n        notify({\n          message: 'Error loading market',\n          description: e.message,\n          type: 'error',\n        });\n        return null;\n      }\n    };\n    return (await Promise.all(marketsList.map(getMarket))).filter((x) => x);\n  };\n  const [markets] = useAsyncData(\n    useUnmigratedDeprecatedMarketsInner,\n    tuple(\n      'useUnmigratedDeprecatedMarketsInner',\n      connection,\n      deps && deps.toString(),\n    ),\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\n  );\n  if (!markets) {\n    return null;\n  }\n  return markets.map((market) => ({\n    market,\n    openOrdersList: accounts?.filter(\n      (openOrders) => market && openOrders.market.equals(market.address),\n    ),\n  }));\n}\n\nexport function useGetOpenOrdersForDeprecatedMarkets(): {\n  openOrders: OrderWithMarketAndMarketName[] | null | undefined;\n  loaded: boolean;\n  refreshOpenOrders: () => void;\n} {\n  const { connected, wallet } = useWallet();\n  const { customMarkets } = useCustomMarkets();\n  const connection = useConnection();\n  const marketsAndOrders = useUnmigratedDeprecatedMarkets();\n  const marketsList =\n    marketsAndOrders && marketsAndOrders.map(({ market }) => market);\n\n  // This isn't quite right: open order balances could change\n  const deps =\n    marketsList &&\n    marketsList\n      .filter((market): market is Market => !!market)\n      .map((market) => market.address.toBase58());\n\n  async function getOpenOrdersForDeprecatedMarkets() {\n    if (!connected) {\n      return null;\n    }\n    if (!marketsList) {\n      return null;\n    }\n    console.log('refreshing getOpenOrdersForDeprecatedMarkets');\n    const getOrders = async (market: Market | null) => {\n      if (!market) {\n        return null;\n      }\n      const { marketName } = getMarketDetails(market, customMarkets);\n      try {\n        console.log('Fetching open orders for', marketName);\n        // Can do better than this, we have the open orders accounts already\n        return (\n          await market.loadOrdersForOwner(connection, wallet.publicKey)\n        ).map((order) => ({ marketName, market, ...order }));\n      } catch (e) {\n        console.log('Failed loading open orders', market.address.toBase58(), e);\n        notify({\n          message: `Error loading open orders for deprecated ${marketName}`,\n          description: e.message,\n          type: 'error',\n        });\n        return null;\n      }\n    };\n    return (await Promise.all(marketsList.map(getOrders)))\n      .filter((x): x is OrderWithMarketAndMarketName[] => !!x)\n      .flat();\n  }\n\n  const cacheKey = tuple(\n    'getOpenOrdersForDeprecatedMarkets',\n    connected,\n    connection,\n    wallet,\n    deps && deps.toString(),\n  );\n  const [openOrders, loaded] = useAsyncData(\n    getOpenOrdersForDeprecatedMarkets,\n    cacheKey,\n    {\n      refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\n    },\n  );\n  console.log('openOrders', openOrders);\n  return {\n    openOrders,\n    loaded,\n    refreshOpenOrders: () => refreshCache(cacheKey),\n  };\n}\n\nexport function useBalancesForDeprecatedMarkets() {\n  const markets = useUnmigratedDeprecatedMarkets();\n  const [customMarkets] = useLocalStorageState<CustomMarketInfo[]>(\n    'customMarkets',\n    [],\n  );\n  if (!markets) {\n    return null;\n  }\n\n  const openOrderAccountBalances: DeprecatedOpenOrdersBalances[] = [];\n  markets.forEach(({ market, openOrdersList }) => {\n    const { baseCurrency, quoteCurrency, marketName } = getMarketDetails(\n      market,\n      customMarkets,\n    );\n    if (!baseCurrency || !quoteCurrency || !market) {\n      return;\n    }\n    (openOrdersList || []).forEach((openOrders) => {\n      const inOrdersBase =\n        openOrders?.baseTokenTotal &&\n        openOrders?.baseTokenFree &&\n        market.baseSplSizeToNumber(\n          openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\n        );\n      const inOrdersQuote =\n        openOrders?.quoteTokenTotal &&\n        openOrders?.quoteTokenFree &&\n        market.baseSplSizeToNumber(\n          openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\n        );\n      const unsettledBase =\n        openOrders?.baseTokenFree &&\n        market.baseSplSizeToNumber(openOrders.baseTokenFree);\n      const unsettledQuote =\n        openOrders?.quoteTokenFree &&\n        market.baseSplSizeToNumber(openOrders.quoteTokenFree);\n\n      openOrderAccountBalances.push({\n        marketName,\n        market,\n        coin: baseCurrency,\n        key: `${marketName}${baseCurrency}`,\n        orders: inOrdersBase,\n        unsettled: unsettledBase,\n        openOrders,\n      });\n      openOrderAccountBalances.push({\n        marketName,\n        market,\n        coin: quoteCurrency,\n        key: `${marketName}${quoteCurrency}`,\n        orders: inOrdersQuote,\n        unsettled: unsettledQuote,\n        openOrders,\n      });\n    });\n  });\n  return openOrderAccountBalances;\n}\n\nexport function getMarketInfos(\n  customMarkets: CustomMarketInfo[],\n): MarketInfo[] {\n  const customMarketsInfo = customMarkets.map((m) => ({\n    ...m,\n    address: new PublicKey(m.address),\n    programId: new PublicKey(m.programId),\n    deprecated: false,\n  }));\n\n  return [...customMarketsInfo, ...USE_MARKETS];\n}\n\nexport function useMarketInfos() {\n  const { customMarkets } = useCustomMarkets();\n  return getMarketInfos(customMarkets);\n}\n\n/**\n * If selling, choose min tick size. If buying choose a price\n * s.t. given the state of the orderbook, the order will spend\n * `cost` cost currency.\n *\n * @param orderbook serum Orderbook object\n * @param cost quantity to spend. Base currency if selling,\n *  quote currency if buying.\n * @param tickSizeDecimals size of price increment of the market\n */\nexport function getMarketOrderPrice(\n  orderbook: Orderbook,\n  cost: number,\n  tickSizeDecimals?: number,\n) {\n  if (orderbook.isBids) {\n    return orderbook.market.tickSize;\n  }\n  let spentCost = 0;\n  let price, sizeAtLevel, costAtLevel: number;\n  const asks = orderbook.getL2(1000);\n  for ([price, sizeAtLevel] of asks) {\n    costAtLevel = price * sizeAtLevel;\n    if (spentCost + costAtLevel > cost) {\n      break;\n    }\n    spentCost += costAtLevel;\n  }\n  const sendPrice = Math.min(price * 1.02, asks[0][0] * 1.05);\n  let formattedPrice;\n  if (tickSizeDecimals) {\n    formattedPrice = floorToDecimal(sendPrice, tickSizeDecimals);\n  } else {\n    formattedPrice = sendPrice;\n  }\n  return formattedPrice;\n}\n\nexport function getExpectedFillPrice(\n  orderbook: Orderbook,\n  cost: number,\n  tickSizeDecimals?: number,\n) {\n  let spentCost = 0;\n  let avgPrice = 0;\n  let price, sizeAtLevel, costAtLevel: number;\n  for ([price, sizeAtLevel] of orderbook.getL2(1000)) {\n    costAtLevel = (orderbook.isBids ? 1 : price) * sizeAtLevel;\n    if (spentCost + costAtLevel > cost) {\n      avgPrice += (cost - spentCost) * price;\n      spentCost = cost;\n      break;\n    }\n    avgPrice += costAtLevel * price;\n    spentCost += costAtLevel;\n  }\n  const totalAvgPrice = avgPrice / Math.min(cost, spentCost);\n  let formattedPrice;\n  if (tickSizeDecimals) {\n    formattedPrice = floorToDecimal(totalAvgPrice, tickSizeDecimals);\n  } else {\n    formattedPrice = totalAvgPrice;\n  }\n  return formattedPrice;\n}\n","import { useRef, useEffect } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef<() => void>();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current && savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  margin: 5px;\n  padding: 20px;\n  background-color: #1a2029;\n`;\n\nexport default function FloatingElement({\n  style = undefined,\n  children,\n  stretchVertical = false,\n}) {\n  return (\n    <Wrapper\n      style={{\n        height: stretchVertical ? 'calc(100% - 10px)' : undefined,\n        ...style,\n      }}\n    >\n      {children}\n    </Wrapper>\n  );\n}\n","import { Col, Row } from 'antd';\nimport React, { useRef, useEffect, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useMarket, useOrderbook, useMarkPrice } from '../utils/markets';\nimport { isEqual, getDecimalCount } from '../utils/utils';\nimport { useInterval } from '../utils/useInterval';\nimport FloatingElement from './layout/FloatingElement';\nimport usePrevious from '../utils/usePrevious';\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\n\nconst SizeTitle = styled(Row)`\n  padding: 20px 0 14px;\n  color: #434a59;\n`;\n\nconst MarkPriceTitle = styled(Row)`\n  padding: 20px 0 14px;\n  font-weight: 700;\n`;\n\nconst Line = styled.div`\n  text-align: right;\n  float: right;\n  height: 100%;\n  ${(props) =>\n    props['data-width'] &&\n    css`\n      width: ${props['data-width']};\n    `}\n  ${(props) =>\n    props['data-bgcolor'] &&\n    css`\n      background-color: ${props['data-bgcolor']};\n    `}\n`;\n\nconst Price = styled.div`\n  position: absolute;\n  right: 5px;\n  color: white;\n`;\n\nexport default function Orderbook({ smallScreen, depth = 7, onPrice, onSize }) {\n  const markPrice = useMarkPrice();\n  const [orderbook] = useOrderbook();\n  const { baseCurrency, quoteCurrency } = useMarket();\n\n  const currentOrderbookData = useRef(null);\n  const lastOrderbookData = useRef(null);\n\n  const [orderbookData, setOrderbookData] = useState(null);\n\n  useInterval(() => {\n    if (\n      !currentOrderbookData.current ||\n      JSON.stringify(currentOrderbookData.current) !==\n        JSON.stringify(lastOrderbookData.current)\n    ) {\n      let bids = orderbook?.bids || [];\n      let asks = orderbook?.asks || [];\n\n      let sum = (total, [, size], index) =>\n        index < depth ? total + size : total;\n      let totalSize = bids.reduce(sum, 0) + asks.reduce(sum, 0);\n\n      let bidsToDisplay = getCumulativeOrderbookSide(bids, totalSize, false);\n      let asksToDisplay = getCumulativeOrderbookSide(asks, totalSize, true);\n\n      currentOrderbookData.current = {\n        bids: orderbook?.bids,\n        asks: orderbook?.asks,\n      };\n\n      setOrderbookData({ bids: bidsToDisplay, asks: asksToDisplay });\n    }\n  }, 250);\n\n  useEffect(() => {\n    lastOrderbookData.current = {\n      bids: orderbook?.bids,\n      asks: orderbook?.asks,\n    };\n  }, [orderbook]);\n\n  function getCumulativeOrderbookSide(orders, totalSize, backwards = false) {\n    let cumulative = orders\n      .slice(0, depth)\n      .reduce((cumulative, [price, size], i) => {\n        const cumulativeSize = (cumulative[i - 1]?.cumulativeSize || 0) + size;\n        cumulative.push({\n          price,\n          size,\n          cumulativeSize,\n          sizePercent: Math.round((cumulativeSize / (totalSize || 1)) * 100),\n        });\n        return cumulative;\n      }, []);\n    if (backwards) {\n      cumulative = cumulative.reverse();\n    }\n    return cumulative;\n  }\n\n  return (\n    <FloatingElement\n      style={\n        smallScreen ? { flex: 1 } : { height: '500px', overflow: 'hidden' }\n      }\n    >\n      <Title>Orderbook</Title>\n      <SizeTitle>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          Size ({baseCurrency})\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          Price ({quoteCurrency})\n        </Col>\n      </SizeTitle>\n      {orderbookData?.asks.map(({ price, size, sizePercent }) => (\n        <OrderbookRow\n          key={price + ''}\n          price={price}\n          size={size}\n          side={'sell'}\n          sizePercent={sizePercent}\n          onPriceClick={() => onPrice(price)}\n          onSizeClick={() => onSize(size)}\n        />\n      ))}\n      <MarkPriceComponent markPrice={markPrice} />\n      {orderbookData?.bids.map(({ price, size, sizePercent }) => (\n        <OrderbookRow\n          key={price + ''}\n          price={price}\n          size={size}\n          side={'buy'}\n          sizePercent={sizePercent}\n          onPriceClick={() => onPrice(price)}\n          onSizeClick={() => onSize(size)}\n        />\n      ))}\n    </FloatingElement>\n  );\n}\n\nconst OrderbookRow = React.memo(\n  ({ side, price, size, sizePercent, onSizeClick, onPriceClick }) => {\n    const element = useRef();\n\n    const { market } = useMarket();\n\n    useEffect(() => {\n      // eslint-disable-next-line\n      !element.current?.classList.contains('flash') &&\n        element.current?.classList.add('flash');\n      const id = setTimeout(\n        () =>\n          element.current?.classList.contains('flash') &&\n          element.current?.classList.remove('flash'),\n        250,\n      );\n      return () => clearTimeout(id);\n    }, [price, size]);\n\n    let formattedSize =\n      market?.minOrderSize && !isNaN(size)\n        ? Number(size).toFixed(getDecimalCount(market.minOrderSize) + 1)\n        : size;\n\n    let formattedPrice =\n      market?.tickSize && !isNaN(price)\n        ? Number(price).toFixed(getDecimalCount(market.tickSize) + 1)\n        : price;\n\n    return (\n      <Row ref={element} style={{ marginBottom: 1 }} onClick={onSizeClick}>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          {formattedSize}\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          <Line\n            data-width={sizePercent + '%'}\n            data-bgcolor={\n              side === 'buy'\n                ? 'rgba(65, 199, 122, 0.6)'\n                : 'rgba(242, 60, 105, 0.6)'\n            }\n          />\n          <Price onClick={onPriceClick}>{formattedPrice}</Price>\n        </Col>\n      </Row>\n    );\n  },\n  (prevProps, nextProps) =>\n    isEqual(prevProps, nextProps, ['price', 'size', 'sizePercent']),\n);\n\nconst MarkPriceComponent = React.memo(\n  ({ markPrice }) => {\n    const { market } = useMarket();\n    const previousMarkPrice = usePrevious(markPrice);\n\n    let markPriceColor =\n      markPrice > previousMarkPrice\n        ? '#41C77A'\n        : markPrice < previousMarkPrice\n        ? '#F23B69'\n        : 'white';\n\n    let formattedMarkPrice =\n      markPrice &&\n      market?.tickSize &&\n      markPrice.toFixed(getDecimalCount(market.tickSize));\n\n    return (\n      <MarkPriceTitle justify=\"center\">\n        <Col style={{ color: markPriceColor }}>\n          {markPrice > previousMarkPrice && (\n            <ArrowUpOutlined style={{ marginRight: 5 }} />\n          )}\n          {markPrice < previousMarkPrice && (\n            <ArrowDownOutlined style={{ marginRight: 5 }} />\n          )}\n          {formattedMarkPrice || '----'}\n        </Col>\n      </MarkPriceTitle>\n    );\n  },\n  (prevProps, nextProps) => isEqual(prevProps, nextProps, ['markPrice']),\n);\n","import { useEffect, useRef } from 'react';\n\nexport default function usePrevious(value) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef();\n\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n\n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\n","import React from 'react';\nimport { ConfigProvider, Table } from 'antd';\n\nexport default function DataTable({\n  dataSource,\n  columns,\n  emptyLabel = 'No data',\n  pagination = false,\n  loading = false,\n  pageSize = 10,\n}) {\n  const customizeRenderEmpty = () => (\n    <div\n      style={{\n        padding: '20px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      {emptyLabel}\n    </div>\n  );\n\n  return (\n    <ConfigProvider renderEmpty={customizeRenderEmpty}>\n      <Table\n        dataSource={dataSource}\n        columns={columns}\n        pagination={pagination ? { pagination: true, pageSize } : false}\n        loading={loading}\n      />\n    </ConfigProvider>\n  );\n}\n","import { Button } from 'antd';\nimport React from 'react';\nimport {\n  useTokenAccounts,\n  getSelectedTokenAccountForMint,\n} from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\nimport { useSendConnection } from '../../utils/connection';\nimport { useWallet } from '../../utils/wallet';\nimport { settleFunds } from '../../utils/send';\nimport { notify } from '../../utils/notifications';\n\nexport default function BalancesTable({\n  balances,\n  showMarket,\n  hideWalletBalance,\n  onSettleSuccess,\n}) {\n  const [accounts] = useTokenAccounts();\n  const connection = useSendConnection();\n  const { wallet } = useWallet();\n\n  async function onSettleFunds(market, openOrders) {\n    try {\n      await settleFunds({\n        market,\n        openOrders,\n        connection,\n        wallet,\n        baseCurrencyAccount: getSelectedTokenAccountForMint(\n          accounts,\n          market?.baseMintAddress,\n        ),\n        quoteCurrencyAccount: getSelectedTokenAccountForMint(\n          accounts,\n          market?.quoteMintAddress,\n        ),\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    }\n    onSettleSuccess && onSettleSuccess();\n  }\n\n  const columns = [\n    showMarket\n      ? {\n          title: 'Market',\n          dataIndex: 'marketName',\n          key: 'marketName',\n        }\n      : null,\n    {\n      title: 'Coin',\n      dataIndex: 'coin',\n      key: 'coin',\n    },\n    hideWalletBalance\n      ? null\n      : {\n          title: 'Wallet Balance',\n          dataIndex: 'wallet',\n          key: 'wallet',\n        },\n    {\n      title: 'Orders',\n      dataIndex: 'orders',\n      key: 'orders',\n    },\n    {\n      title: 'Unsettled',\n      dataIndex: 'unsettled',\n      key: 'unsettled',\n    },\n    {\n      key: 'action',\n      render: ({ market, openOrders, marketName }) => (\n        <div style={{ textAlign: 'right' }}>\n          <Button\n            ghost\n            style={{ marginRight: 12 }}\n            onClick={() => onSettleFunds(market, openOrders)}\n          >\n            Settle {marketName}\n          </Button>\n        </div>\n      ),\n    },\n  ].filter((x) => x);\n  return (\n    <DataTable\n      emptyLabel=\"No balances\"\n      dataSource={balances}\n      columns={columns}\n      pagination={false}\n    />\n  );\n}\n","import React, { useState } from 'react';\nimport DataTable from '../layout/DataTable';\n\nimport styled from 'styled-components';\nimport { Button, Col, Row, Tag } from 'antd';\nimport { cancelOrder } from '../../utils/send';\nimport { useWallet } from '../../utils/wallet';\nimport { useSendConnection } from '../../utils/connection';\nimport { notify } from '../../utils/notifications';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { OrderWithMarketAndMarketName } from '../../utils/types';\n\nconst CancelButton = styled(Button)`\n  color: #f23b69;\n  border: 1px solid #f23b69;\n`;\n\nexport default function OpenOrderTable({\n  openOrders,\n  onCancelSuccess,\n  pageSize,\n  loading,\n  marketFilter,\n}: {\n  openOrders: OrderWithMarketAndMarketName[] | null | undefined;\n  onCancelSuccess?: () => void;\n  pageSize?: number;\n  loading?: boolean;\n  marketFilter?: boolean;\n}) {\n  let { wallet } = useWallet();\n  let connection = useSendConnection();\n\n  const [cancelId, setCancelId] = useState(null);\n\n  async function cancel(order) {\n    setCancelId(order?.orderId);\n    try {\n      await cancelOrder({\n        order,\n        market: order.market,\n        connection,\n        wallet,\n      });\n    } catch (e) {\n      notify({\n        message: 'Error cancelling order',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    } finally {\n      setCancelId(null);\n    }\n    onCancelSuccess && onCancelSuccess();\n  }\n\n  const marketFilters = [\n    ...new Set((openOrders || []).map((orderInfos) => orderInfos.marketName)),\n  ].map((marketName) => {\n    return { text: marketName, value: marketName };\n  });\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'marketName',\n      key: 'marketName',\n      filters: marketFilter ? marketFilters : undefined,\n      onFilter: (value, record) => record.marketName.indexOf(value) === 0,\n    },\n    {\n      title: 'Side',\n      dataIndex: 'side',\n      key: 'side',\n      render: (side) => (\n        <Tag\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\n          style={{ fontWeight: 700 }}\n        >\n          {side.charAt(0).toUpperCase() + side.slice(1)}\n        </Tag>\n      ),\n      sorter: (a, b) => {\n        if (a.side === b.side) {\n          return 0;\n        } else if (a.side === 'buy') {\n          return 1;\n        } else {\n          return -1;\n        }\n      },\n      showSorterTooltip: false,\n    },\n    {\n      title: 'Size',\n      dataIndex: 'size',\n      key: 'size',\n      sorter: (a, b) => b.size - a.size,\n      showSorterTooltip: false,\n    },\n    {\n      title: 'Price',\n      dataIndex: 'price',\n      key: 'price',\n      sorter: (a, b) => b.price - a.price,\n      showSorterTooltip: false,\n    },\n    {\n      key: 'orderId',\n      render: (order) => (\n        <div style={{ textAlign: 'right' }}>\n          <CancelButton\n            icon={<DeleteOutlined />}\n            onClick={() => cancel(order)}\n            loading={cancelId + '' === order?.orderId + ''}\n          >\n            Cancel\n          </CancelButton>\n        </div>\n      ),\n    },\n  ];\n  const dataSource = (openOrders || []).map((order) => ({\n    ...order,\n    key: order.orderId,\n  }));\n\n  return (\n    <Row>\n      <Col span={24}>\n        <DataTable\n          emptyLabel=\"No open orders\"\n          dataSource={dataSource}\n          columns={columns}\n          pagination={true}\n          pageSize={pageSize ? pageSize : 5}\n          loading={loading !== undefined && loading}\n        />\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react';\nimport { Row, Col, Tag } from 'antd';\nimport { useFills, useMarket } from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\n\nexport default function FillsTable() {\n  const fills = useFills();\n\n  const { quoteCurrency } = useMarket();\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'marketName',\n      key: 'marketName',\n    },\n    {\n      title: 'Side',\n      dataIndex: 'side',\n      key: 'side',\n      render: (side) => (\n        <Tag\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\n          style={{ fontWeight: 700 }}\n        >\n          {side.charAt(0).toUpperCase() + side.slice(1)}\n        </Tag>\n      ),\n    },\n    {\n      title: `Size`,\n      dataIndex: 'size',\n      key: 'size',\n    },\n    {\n      title: `Price`,\n      dataIndex: 'price',\n      key: 'price',\n    },\n    {\n      title: `Liquidity`,\n      dataIndex: 'liquidity',\n      key: 'liquidity',\n    },\n    {\n      title: quoteCurrency ? `Fees (${quoteCurrency})` : 'Fees',\n      dataIndex: 'feeCost',\n      key: 'feeCost',\n    },\n  ];\n\n  const dataSource = (fills || []).map((fill) => ({\n    ...fill,\n    key: `${fill.orderId}${fill.side}`,\n    liquidity: fill.eventFlags.maker ? 'Maker' : 'Taker',\n  }));\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <DataTable\n            dataSource={dataSource}\n            columns={columns}\n            pagination={true}\n            pageSize={5}\n            emptyLabel=\"No fills\"\n          />\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React from 'react';\nimport { Row, Col, Typography, Tag } from 'antd';\nimport { useFeeDiscountKeys } from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\nimport { TokenInstructions, getFeeRates } from '@project-serum/serum';\nimport { percentFormat } from '../../utils/utils';\n\nexport default function FeesTable() {\n  const [feeAccounts] = useFeeDiscountKeys();\n\n  const columns = [\n    {\n      title: 'Fee Tier',\n      dataIndex: 'feeTier',\n      key: 'feeTier',\n      render: (feeTier, row) => (\n        <div style={{ display: 'flex' }}>\n          <Typography>{feeTier}</Typography>\n          {row.index === 0 ? (\n            <div style={{ marginLeft: 10 }}>\n              <Tag color={'#41C77A'} style={{ fontWeight: 700 }}>\n                Selected\n              </Tag>\n            </div>\n          ) : null}\n        </div>\n      ),\n    },\n    {\n      title: 'Taker',\n      dataIndex: 'taker',\n      key: 'taker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).taker),\n    },\n    {\n      title: 'Maker',\n      dataIndex: 'maker',\n      key: 'maker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).maker),\n    },\n    {\n      title: `Public Key`,\n      dataIndex: 'pubkey',\n      key: 'pubkey',\n      render: (pubkey) => pubkey.toBase58(),\n    },\n    {\n      title: `Balance`,\n      dataIndex: 'balance',\n      key: 'balance',\n    },\n    {\n      title: `Mint`,\n      dataIndex: 'mint',\n      key: 'mint',\n      render: (_, row) =>\n        row.mint.equals(TokenInstructions.SRM_MINT)\n          ? 'SRM'\n          : row.mint.equals(TokenInstructions.MSRM_MINT)\n          ? 'MSRM'\n          : 'UNKNOWN',\n    },\n  ];\n\n  const dataSource = (feeAccounts || []).map((account, index) => ({\n    ...account,\n    index,\n    key: account.pubkey.toBase58(),\n  }));\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <DataTable\n            dataSource={dataSource}\n            columns={columns}\n            pagination={true}\n            pageSize={5}\n            emptyLabel=\"No (M)SRM accounts\"\n          />\n        </Col>\n      </Row>\n      <Row style={{ marginTop: 8 }}>\n        <Col>\n          <Typography>\n            Holding SRM or MSRM makes you eligible for fee discounts:\n          </Typography>\n          <FeeScheduleTable />\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nfunction FeeScheduleTable() {\n  // Representation of serum-js/src/fees.ts\n  const dataSource = [\n    { feeTier: 0, taker: 0.0022, maker: -0.0003, token: '', balance: '' },\n    { feeTier: 1, taker: 0.002, maker: -0.0003, token: 'SRM', balance: 100 },\n    { feeTier: 2, taker: 0.0018, maker: -0.0003, token: 'SRM', balance: 1000 },\n    { feeTier: 3, taker: 0.0016, maker: -0.0003, token: 'SRM', balance: 10000 },\n    {\n      feeTier: 4,\n      taker: 0.0014,\n      maker: -0.0003,\n      token: 'SRM',\n      balance: 100000,\n    },\n    {\n      feeTier: 5,\n      taker: 0.0012,\n      maker: -0.0003,\n      token: 'SRM',\n      balance: 1000000,\n    },\n    { feeTier: 6, taker: 0.001, maker: -0.0005, token: 'MSRM', balance: 1 },\n  ];\n  const columns = [\n    {\n      title: 'Fee Tier',\n      dataIndex: 'feeTier',\n      key: 'feeTier',\n    },\n    {\n      title: 'Taker',\n      dataIndex: 'taker',\n      key: 'taker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).taker),\n    },\n    {\n      title: 'Maker',\n      dataIndex: 'maker',\n      key: 'maker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).maker),\n    },\n    {\n      title: 'Requirements',\n      dataIndex: 'requirements',\n      key: 'requirements',\n      render: (_, row) => (\n        <Typography>\n          {!row.balance ? 'None' : `≥ ${row.balance} ${row.token}`}\n        </Typography>\n      ),\n    },\n  ];\n  return (\n    <DataTable\n      dataSource={dataSource.map((info) => ({ ...info, key: info.feeTier }))}\n      columns={columns}\n    />\n  );\n}\n","import BalancesTable from './BalancesTable';\nimport OpenOrderTable from './OpenOrderTable';\nimport React from 'react';\nimport { Tabs, Typography } from 'antd';\nimport FillsTable from './FillsTable';\nimport FloatingElement from '../layout/FloatingElement';\nimport FeesTable from './FeesTable';\nimport { useOpenOrders, useBalances, useMarket } from '../../utils/markets';\n\nconst { Paragraph } = Typography;\nconst { TabPane } = Tabs;\n\nexport default function Index() {\n  const { market } = useMarket();\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 20 }}>\n      <Typography>\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)' }}>\n          Make sure to go to Balances and click Settle to send out your funds.\n        </Paragraph>\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)' }}>\n          To fund your wallet, <a href=\"https://www.sollet.io\">sollet.io</a>.\n          You can get SOL from FTX, Binance, BitMax, and others. You can get\n          other tokens from FTX.{' '}\n        </Paragraph>\n      </Typography>\n      <Tabs defaultActiveKey=\"orders\">\n        <TabPane tab=\"Open Orders\" key=\"orders\">\n          <OpenOrdersTab />\n        </TabPane>\n        <TabPane tab=\"Recent Trade History\" key=\"fills\">\n          <FillsTable />\n        </TabPane>\n        <TabPane tab=\"Balances\" key=\"balances\">\n          <BalancesTab />\n        </TabPane>\n        {market && market.supportsSrmFeeDiscounts ? (\n          <TabPane tab=\"Fee discounts\" key=\"fees\">\n            <FeesTable />\n          </TabPane>\n        ) : null}\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\nconst OpenOrdersTab = () => {\n  const openOrders = useOpenOrders();\n\n  return <OpenOrderTable openOrders={openOrders} />;\n};\n\nconst BalancesTab = () => {\n  const balances = useBalances();\n\n  return <BalancesTable balances={balances} />;\n};\n","import React from 'react';\nimport { Modal } from 'antd';\nimport {\n  useSelectedBaseCurrencyAccount,\n  useMarket,\n  useSelectedQuoteCurrencyAccount,\n} from '../utils/markets';\nimport { useWallet } from '../utils/wallet';\nimport Link from './Link';\n\nexport default function DepositDialog({ onClose, baseOrQuote }) {\n  const { market, baseCurrency, quoteCurrency } = useMarket();\n\n  const { providerName, providerUrl } = useWallet();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  let coinMint;\n  let account;\n  let depositCoin;\n  if (baseOrQuote === 'base') {\n    coinMint = market?.baseMintAddress;\n    account = baseCurrencyAccount;\n    depositCoin = baseCurrency;\n  } else if (baseOrQuote === 'quote') {\n    coinMint = market?.quoteMintAddress;\n    account = quoteCurrencyAccount;\n    depositCoin = quoteCurrency;\n  } else {\n    account = null;\n  }\n  if (!coinMint) {\n    return null;\n  }\n  return (\n    <Modal\n      title={depositCoin}\n      visible={!!coinMint}\n      onOk={onClose}\n      onCancel={onClose}\n    >\n      <div style={{ paddingTop: '20px' }}>\n        <p style={{ color: 'white' }}>Mint address:</p>\n        <p style={{ color: 'rgba(255,255,255,0.5)' }}>{coinMint.toBase58()}</p>\n        <div>\n          <p style={{ color: 'white' }}>SPL Deposit address:</p>\n          <p style={{ color: 'rgba(255,255,255,0.5)' }}>\n            {account ? (\n              account.pubkey.toBase58()\n            ) : (\n              <>\n                Visit{' '}\n                <Link external to={providerUrl}>\n                  {providerName}\n                </Link>{' '}\n                to create an account for this mint\n              </>\n            )}\n          </p>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport { TokenAccount } from '../utils/types';\nimport { useSelectedTokenAccounts } from '../utils/markets';\nimport { Button, Col, Select, Typography } from 'antd';\nimport { CopyOutlined } from '@ant-design/icons';\nimport { abbreviateAddress } from '../utils/utils';\nimport { notify } from '../utils/notifications';\n\nexport default function StandaloneTokenAccountsSelect({\n  accounts,\n  mint,\n  label,\n}: {\n  accounts: TokenAccount[] | null | undefined;\n  mint: string | undefined;\n  label?: boolean;\n}) {\n  const [\n    selectedTokenAccounts,\n    setSelectedTokenAccounts,\n  ] = useSelectedTokenAccounts();\n\n  let selectedValue: string | undefined;\n  if (mint && mint in selectedTokenAccounts) {\n    selectedValue = selectedTokenAccounts[mint];\n  } else if (accounts && accounts?.length > 0) {\n    selectedValue = accounts[0].pubkey.toBase58();\n  } else {\n    selectedValue = undefined;\n  }\n\n  const setTokenAccountForCoin = (value) => {\n    if (!mint) {\n      notify({\n        message: 'Error selecting token account',\n        description: 'Mint is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    const newSelectedTokenAccounts = { ...selectedTokenAccounts };\n    newSelectedTokenAccounts[mint] = value;\n    setSelectedTokenAccounts(newSelectedTokenAccounts);\n  };\n\n  return (\n    <React.Fragment>\n      {label && <Col span={8}>Token account:</Col>}\n      <Col span={label ? 13 : 21}>\n        <Select\n          style={{ width: '100%' }}\n          value={selectedValue}\n          onSelect={setTokenAccountForCoin}\n        >\n          {accounts?.map((account) => (\n            <Select.Option\n              key={account.pubkey.toBase58()}\n              value={account.pubkey.toBase58()}\n            >\n              <Typography.Text code>\n                {label\n                  ? abbreviateAddress(account.pubkey, 8)\n                  : account.pubkey.toBase58()}\n              </Typography.Text>\n            </Select.Option>\n          ))}\n        </Select>\n      </Col>\n      <Col span={2} offset={1}>\n        <Button\n          shape=\"round\"\n          icon={<CopyOutlined />}\n          size={'small'}\n          onClick={() =>\n            selectedValue && navigator.clipboard.writeText(selectedValue)\n          }\n        />\n      </Col>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { Button } from 'antd';\nimport { LinkOutlined } from '@ant-design/icons';\n\nexport default function LinkAddress({\n  title,\n  address,\n}: {\n  title?: undefined | any;\n  address: string;\n}) {\n  return (\n    <div>\n      {title && <p style={{ color: 'white' }}>{title}</p>}\n      <Button\n        type=\"link\"\n        icon={<LinkOutlined />}\n        href={'https://explorer.solana.com/address/' + address}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {address}\n      </Button>\n    </div>\n  );\n}\n","import { Button, Col, Divider, Popover, Row } from 'antd';\nimport React, { useState } from 'react';\nimport FloatingElement from './layout/FloatingElement';\nimport styled from 'styled-components';\nimport {\n  useBalances,\n  useMarket,\n  useSelectedBaseCurrencyAccount,\n  useSelectedOpenOrdersAccount,\n  useSelectedQuoteCurrencyAccount,\n  useTokenAccounts,\n} from '../utils/markets';\nimport DepositDialog from './DepositDialog';\nimport { useWallet } from '../utils/wallet';\nimport Link from './Link';\nimport { settleFunds } from '../utils/send';\nimport { useSendConnection } from '../utils/connection';\nimport { notify } from '../utils/notifications';\nimport { Balances } from '../utils/types';\nimport StandaloneTokenAccountsSelect from './StandaloneTokenAccountSelect';\nimport LinkAddress from './LinkAddress';\nimport { InfoCircleOutlined } from '@ant-design/icons';\n\nconst RowBox = styled(Row)`\n  padding-bottom: 20px;\n`;\n\nconst Tip = styled.p`\n  font-size: 12px;\n  padding-top: 6px;\n`;\n\nconst ActionButton = styled(Button)`\n  color: #2abdd2;\n  background-color: #212734;\n  border-width: 0px;\n`;\n\nexport default function StandaloneBalancesDisplay() {\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const balances = useBalances();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const connection = useSendConnection();\n  const { providerUrl, providerName, wallet, connected } = useWallet();\n  const [baseOrQuote, setBaseOrQuote] = useState('');\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const [tokenAccounts] = useTokenAccounts();\n  const baseCurrencyBalances =\n    balances && balances.find((b) => b.coin === baseCurrency);\n  const quoteCurrencyBalances =\n    balances && balances.find((b) => b.coin === quoteCurrency);\n\n  async function onSettleFunds() {\n    if (!market) {\n      notify({\n        message: 'Error settling funds',\n        description: 'market is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    if (!openOrdersAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    if (!baseCurrencyAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    if (!quoteCurrencyAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error',\n      });\n      return;\n    }\n\n    try {\n      await settleFunds({\n        market,\n        openOrders: openOrdersAccount,\n        connection,\n        wallet,\n        baseCurrencyAccount,\n        quoteCurrencyAccount,\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n    }\n  }\n\n  const formattedBalances: [\n    string | undefined,\n    Balances | undefined,\n    string,\n    string | undefined,\n  ][] = [\n    [\n      baseCurrency,\n      baseCurrencyBalances,\n      'base',\n      market?.baseMintAddress.toBase58(),\n    ],\n    [\n      quoteCurrency,\n      quoteCurrencyBalances,\n      'quote',\n      market?.quoteMintAddress.toBase58(),\n    ],\n  ];\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      {formattedBalances.map(\n        ([currency, balances, baseOrQuote, mint], index) => (\n          <React.Fragment key={index}>\n            <Divider style={{ borderColor: 'white' }}>\n              {currency}{' '}\n              {mint && (\n                <Popover\n                  content={<LinkAddress address={mint} />}\n                  placement=\"bottomRight\"\n                  title=\"Token mint\"\n                  trigger=\"hover\"\n                >\n                  <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n                </Popover>\n              )}\n            </Divider>\n            {connected && (\n              <RowBox align=\"middle\" style={{ paddingBottom: 10 }}>\n                <StandaloneTokenAccountsSelect\n                  accounts={tokenAccounts?.filter(\n                    (account) => account.effectiveMint.toBase58() === mint,\n                  )}\n                  mint={mint}\n                  label\n                />\n              </RowBox>\n            )}\n            <RowBox\n              align=\"middle\"\n              justify=\"space-between\"\n              style={{ paddingBottom: 12 }}\n            >\n              <Col>Wallet balance:</Col>\n              <Col>{balances && balances.wallet}</Col>\n            </RowBox>\n            <RowBox\n              align=\"middle\"\n              justify=\"space-between\"\n              style={{ paddingBottom: 12 }}\n            >\n              <Col>Unsettled balance:</Col>\n              <Col>{balances && balances.unsettled}</Col>\n            </RowBox>\n            <RowBox align=\"middle\" justify=\"space-around\">\n              <Col style={{ width: 150 }}>\n                <ActionButton\n                  block\n                  size=\"large\"\n                  onClick={() => setBaseOrQuote(baseOrQuote)}\n                >\n                  Deposit\n                </ActionButton>\n              </Col>\n              <Col style={{ width: 150 }}>\n                <ActionButton block size=\"large\" onClick={onSettleFunds}>\n                  Settle\n                </ActionButton>\n              </Col>\n            </RowBox>\n            <Tip>\n              All deposits go to your{' '}\n              <Link external to={providerUrl}>\n                {providerName}\n              </Link>{' '}\n              wallet\n            </Tip>\n          </React.Fragment>\n        ),\n      )}\n      <DepositDialog\n        baseOrQuote={baseOrQuote}\n        onClose={() => setBaseOrQuote('')}\n      />\n    </FloatingElement>\n  );\n}\n","import { Button, Input, Radio, Switch, Slider } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport {\n  useSelectedBaseCurrencyBalances,\n  useSelectedQuoteCurrencyBalances,\n  useMarket,\n  useMarkPrice,\n  useSelectedOpenOrdersAccount,\n  useSelectedBaseCurrencyAccount,\n  useSelectedQuoteCurrencyAccount, useFeeDiscountKeys, useLocallyStoredFeeDiscountKey,\n} from '../utils/markets';\nimport { useWallet } from '../utils/wallet';\nimport { notify } from '../utils/notifications';\nimport {\n  getDecimalCount,\n  roundToDecimal,\n  floorToDecimal,\n} from '../utils/utils';\nimport { useSendConnection } from '../utils/connection';\nimport FloatingElement from './layout/FloatingElement';\nimport { getUnixTs, placeOrder } from '../utils/send';\nimport { SwitchChangeEventHandler } from 'antd/es/switch';\nimport { refreshCache } from '../utils/fetch-loop';\nimport tuple from 'immutable-tuple';\n\nconst SellButton = styled(Button)`\n  margin: 20px 0px 0px 0px;\n  background: #f23b69;\n  border-color: #f23b69;\n`;\n\nconst BuyButton = styled(Button)`\n  margin: 20px 0px 0px 0px;\n  background: #02bf76;\n  border-color: #02bf76;\n`;\n\nconst sliderMarks = {\n  0: '0%',\n  25: '25%',\n  50: '50%',\n  75: '75%',\n  100: '100%',\n};\n\nexport default function TradeForm({\n  style,\n  setChangeOrderRef,\n}: {\n  style?: any;\n  setChangeOrderRef?: (\n    ref: ({ size, price }: { size?: number; price?: number }) => void,\n  ) => void;\n}) {\n  const [side, setSide] = useState<'buy' | 'sell'>('buy');\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const baseCurrencyBalances = useSelectedBaseCurrencyBalances();\n  const quoteCurrencyBalances = useSelectedQuoteCurrencyBalances();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const { wallet, connected } = useWallet();\n  const sendConnection = useSendConnection();\n  const markPrice = useMarkPrice();\n  useFeeDiscountKeys();\n  const { storedFeeDiscountKey: feeDiscountKey } = useLocallyStoredFeeDiscountKey();\n\n  const [postOnly, setPostOnly] = useState(false);\n  const [ioc, setIoc] = useState(false);\n  const [baseSize, setBaseSize] = useState<number | undefined>(undefined);\n  const [quoteSize, setQuoteSize] = useState<number | undefined>(undefined);\n  const [price, setPrice] = useState<number | undefined>(undefined);\n  const [submitting, setSubmitting] = useState(false);\n  const [sizeFraction, setSizeFraction] = useState(0);\n\n  const availableQuote =\n    openOrdersAccount && market\n      ? market.quoteSplSizeToNumber(openOrdersAccount.quoteTokenFree)\n      : 0;\n\n  let quoteBalance = (quoteCurrencyBalances || 0) + (availableQuote || 0);\n  let baseBalance = baseCurrencyBalances || 0;\n  let sizeDecimalCount =\n    market?.minOrderSize && getDecimalCount(market.minOrderSize);\n  let priceDecimalCount = market?.tickSize && getDecimalCount(market.tickSize);\n\n  useEffect(() => {\n    setChangeOrderRef && setChangeOrderRef(doChangeOrder);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setChangeOrderRef]);\n\n  useEffect(() => {\n    baseSize && price && onSliderChange(sizeFraction);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [side]);\n\n  useEffect(() => {\n    updateSizeFraction();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [price, baseSize]);\n\n  useEffect(() => {\n    const warmUpCache = async () => {\n      try {\n        if (!wallet || !wallet.publicKey || !market) {\n          console.log(`Skipping refreshing accounts`);\n          return;\n        }\n        const startTime = getUnixTs();\n        console.log(`Refreshing accounts for ${market.address}`);\n        await market?.findOpenOrdersAccountsForOwner(\n          sendConnection,\n          wallet.publicKey,\n        );\n        await market?.findBestFeeDiscountKey(sendConnection, wallet.publicKey);\n        const endTime = getUnixTs();\n        console.log(\n          `Finished refreshing accounts for ${market.address} after ${\n            endTime - startTime\n          }`,\n        );\n      } catch (e) {\n        console.log(`Encountered error when refreshing trading accounts: ${e}`);\n      }\n    };\n    warmUpCache();\n    const id = setInterval(warmUpCache, 30_000);\n    return () => clearInterval(id);\n  }, [market, sendConnection, wallet, wallet.publicKey]);\n\n  const onSetBaseSize = (baseSize: number | undefined) => {\n    setBaseSize(baseSize);\n    if (!baseSize) {\n      setQuoteSize(undefined);\n      return;\n    }\n    let usePrice = price || markPrice;\n    if (!usePrice) {\n      setQuoteSize(undefined);\n      return;\n    }\n    const rawQuoteSize = baseSize * usePrice;\n    const quoteSize =\n      baseSize && roundToDecimal(rawQuoteSize, sizeDecimalCount);\n    setQuoteSize(quoteSize);\n  };\n\n  const onSetQuoteSize = (quoteSize: number | undefined) => {\n    setQuoteSize(quoteSize);\n    if (!quoteSize) {\n      setBaseSize(undefined);\n      return;\n    }\n    let usePrice = price || markPrice;\n    if (!usePrice) {\n      setBaseSize(undefined);\n      return;\n    }\n    const rawBaseSize = quoteSize / usePrice;\n    const baseSize = quoteSize && roundToDecimal(rawBaseSize, sizeDecimalCount);\n    setBaseSize(baseSize);\n  };\n\n  const doChangeOrder = ({\n    size,\n    price,\n  }: {\n    size?: number;\n    price?: number;\n  }) => {\n    const formattedSize = size && roundToDecimal(size, sizeDecimalCount);\n    const formattedPrice = price && roundToDecimal(price, priceDecimalCount);\n    formattedSize && onSetBaseSize(formattedSize);\n    formattedPrice && setPrice(formattedPrice);\n  };\n\n  const updateSizeFraction = () => {\n    const rawMaxSize =\n      side === 'buy' ? quoteBalance / (price || markPrice || 1) : baseBalance;\n    const maxSize = floorToDecimal(rawMaxSize, sizeDecimalCount);\n    const sizeFraction = Math.min(((baseSize || 0) / maxSize) * 100, 100);\n    setSizeFraction(sizeFraction);\n  };\n\n  const onSliderChange = (value) => {\n    if (!price && markPrice) {\n      let formattedMarkPrice: number | string = priceDecimalCount\n        ? markPrice.toFixed(priceDecimalCount)\n        : markPrice;\n      setPrice(\n        typeof formattedMarkPrice === 'number'\n          ? formattedMarkPrice\n          : parseFloat(formattedMarkPrice),\n      );\n    }\n\n    let newSize;\n    if (side === 'buy') {\n      if (price || markPrice) {\n        newSize = ((quoteBalance / (price || markPrice || 1)) * value) / 100;\n      }\n    } else {\n      newSize = (baseBalance * value) / 100;\n    }\n\n    // round down to minOrderSize increment\n    let formatted = floorToDecimal(newSize, sizeDecimalCount);\n\n    onSetBaseSize(formatted);\n  };\n\n  const postOnChange: SwitchChangeEventHandler = (checked) => {\n    if (checked) {\n      setIoc(false);\n    }\n    setPostOnly(checked);\n  };\n  const iocOnChange: SwitchChangeEventHandler = (checked) => {\n    if (checked) {\n      setPostOnly(false);\n    }\n    setIoc(checked);\n  };\n\n  async function onSubmit() {\n    if (!price) {\n      console.warn('Missing price');\n      notify({\n        message: 'Missing price',\n        type: 'error',\n      });\n      return;\n    } else if (!baseSize) {\n      console.warn('Missing size');\n      notify({\n        message: 'Missing size',\n        type: 'error',\n      });\n      return;\n    }\n\n    setSubmitting(true);\n    try {\n      await placeOrder({\n        side,\n        price,\n        size: baseSize,\n        orderType: ioc ? 'ioc' : postOnly ? 'postOnly' : 'limit',\n        market,\n        connection: sendConnection,\n        wallet,\n        baseCurrencyAccount: baseCurrencyAccount?.pubkey,\n        quoteCurrencyAccount: quoteCurrencyAccount?.pubkey,\n        feeDiscountPubkey: feeDiscountKey\n      });\n      refreshCache(tuple('getTokenAccounts', wallet, connected));\n      setPrice(undefined);\n      onSetBaseSize(undefined);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error placing order',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <FloatingElement\n      style={{ display: 'flex', flexDirection: 'column', ...style }}\n    >\n      <div style={{ flex: 1 }}>\n        <Radio.Group\n          onChange={(e) => setSide(e.target.value)}\n          value={side}\n          buttonStyle=\"solid\"\n          style={{\n            marginBottom: 8,\n            width: '100%',\n          }}\n        >\n          <Radio.Button\n            value=\"buy\"\n            style={{\n              width: '50%',\n              textAlign: 'center',\n              background: side === 'buy' ? '#02bf76' : '',\n              borderColor: side === 'buy' ? '#02bf76' : '',\n            }}\n          >\n            BUY\n          </Radio.Button>\n          <Radio.Button\n            value=\"sell\"\n            style={{\n              width: '50%',\n              textAlign: 'center',\n              background: side === 'sell' ? '#F23B69' : '',\n              borderColor: side === 'sell' ? '#F23B69' : '',\n            }}\n          >\n            SELL\n          </Radio.Button>\n        </Radio.Group>\n        <Input\n          style={{ textAlign: 'right', paddingBottom: 8 }}\n          addonBefore={<div style={{ width: '30px' }}>Price</div>}\n          suffix={\n            <span style={{ fontSize: 10, opacity: 0.5 }}>{quoteCurrency}</span>\n          }\n          value={price}\n          type=\"number\"\n          step={market?.tickSize || 1}\n          onChange={(e) => setPrice(parseFloat(e.target.value))}\n        />\n        <Input.Group compact style={{ paddingBottom: 8 }}>\n          <Input\n            style={{ width: 'calc(50% + 30px)', textAlign: 'right' }}\n            addonBefore={<div style={{ width: '30px' }}>Size</div>}\n            suffix={\n              <span style={{ fontSize: 10, opacity: 0.5 }}>{baseCurrency}</span>\n            }\n            value={baseSize}\n            type=\"number\"\n            step={market?.minOrderSize || 1}\n            onChange={(e) => onSetBaseSize(parseFloat(e.target.value))}\n          />\n          <Input\n            style={{ width: 'calc(50% - 30px)', textAlign: 'right' }}\n            suffix={\n              <span style={{ fontSize: 10, opacity: 0.5 }}>\n                {quoteCurrency}\n              </span>\n            }\n            value={quoteSize}\n            type=\"number\"\n            step={market?.minOrderSize || 1}\n            onChange={(e) => onSetQuoteSize(parseFloat(e.target.value))}\n          />\n        </Input.Group>\n        <Slider\n          value={sizeFraction}\n          tipFormatter={(value) => `${value}%`}\n          marks={sliderMarks}\n          onChange={onSliderChange}\n        />\n        <div style={{ paddingTop: 18 }}>\n          {'POST '}\n          <Switch\n            checked={postOnly}\n            onChange={postOnChange}\n            style={{ marginRight: 40 }}\n          />\n          {'IOC '}\n          <Switch checked={ioc} onChange={iocOnChange} />\n        </div>\n      </div>\n      {side === 'buy' ? (\n        <BuyButton\n          disabled={!price || !baseSize}\n          onClick={onSubmit}\n          block\n          type=\"primary\"\n          size=\"large\"\n          loading={submitting}\n        >\n          Buy {baseCurrency}\n        </BuyButton>\n      ) : (\n        <SellButton\n          disabled={!price || !baseSize}\n          onClick={onSubmit}\n          block\n          type=\"primary\"\n          size=\"large\"\n          loading={submitting}\n        >\n          Sell {baseCurrency}\n        </SellButton>\n      )}\n    </FloatingElement>\n  );\n}\n","import { Col, Row } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useMarket, useBonfidaTrades } from '../utils/markets';\nimport { getDecimalCount } from '../utils/utils';\nimport FloatingElement from './layout/FloatingElement';\nimport { BonfidaTrade } from '../utils/types';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\nconst SizeTitle = styled(Row)`\n  padding: 20px 0 14px;\n  color: #434a59;\n`;\n\nexport default function PublicTrades({ smallScreen }) {\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const [trades, loaded] = useBonfidaTrades();\n\n  return (\n    <FloatingElement\n      style={\n        smallScreen\n          ? { flex: 1 }\n          : {\n              marginTop: '10px',\n              minHeight: '270px',\n              maxHeight: 'calc(100vh - 700px)',\n            }\n      }\n    >\n      <Title>Recent Market trades</Title>\n      <SizeTitle>\n        <Col span={8}>Price ({quoteCurrency}) </Col>\n        <Col span={8} style={{ textAlign: 'right' }}>\n          Size ({baseCurrency})\n        </Col>\n        <Col span={8} style={{ textAlign: 'right' }}>\n          Time\n        </Col>\n      </SizeTitle>\n      {!!trades && loaded && (\n        <div\n          style={{\n            marginRight: '-20px',\n            paddingRight: '5px',\n            overflowY: 'scroll',\n            maxHeight: smallScreen\n              ? 'calc(100% - 75px)'\n              : 'calc(100vh - 800px)',\n          }}\n        >\n          {trades.map((trade: BonfidaTrade, i: number) => (\n            <Row key={i} style={{ marginBottom: 4 }}>\n              <Col\n                span={8}\n                style={{\n                  color: trade.side === 'buy' ? '#41C77A' : '#F23B69',\n                }}\n              >\n                {market?.tickSize && !isNaN(trade.price)\n                  ? Number(trade.price).toFixed(\n                      getDecimalCount(market.tickSize),\n                    )\n                  : trade.price}\n              </Col>\n              <Col span={8} style={{ textAlign: 'right' }}>\n                {market?.minOrderSize && !isNaN(trade.size)\n                  ? Number(trade.size).toFixed(\n                      getDecimalCount(market.minOrderSize),\n                    )\n                  : trade.size}\n              </Col>\n              <Col span={8} style={{ textAlign: 'right', color: '#434a59' }}>\n                {trade.time && new Date(trade.time).toLocaleTimeString()}\n              </Col>\n            </Row>\n          ))}\n        </div>\n      )}\n    </FloatingElement>\n  );\n}\n","import { Button, Divider, Spin, Typography } from 'antd';\nimport React from 'react';\nimport {\n  useGetOpenOrdersForDeprecatedMarkets,\n  useBalancesForDeprecatedMarkets,\n  useUnmigratedOpenOrdersAccounts,\n} from '../utils/markets';\nimport FloatingElement from './layout/FloatingElement';\nimport CheckOutlined from '@ant-design/icons/lib/icons/CheckOutlined';\nimport BalancesTable from './UserInfoTable/BalancesTable';\nimport OpenOrderTable from './UserInfoTable/OpenOrderTable';\nimport SyncOutlined from '@ant-design/icons/lib/icons/SyncOutlined';\n\nconst { Title } = Typography;\n\nexport default function DeprecatedMarketsInstructions({ switchToLiveMarkets }) {\n  const balances = useBalancesForDeprecatedMarkets();\n  const {\n    openOrders,\n    loaded,\n    refreshOpenOrders,\n  } = useGetOpenOrdersForDeprecatedMarkets();\n\n  const { refresh } = useUnmigratedOpenOrdersAccounts();\n  const needToCancelOrders = !openOrders || openOrders.length > 0;\n  const filteredBalances =\n    balances &&\n    balances.filter(({ orders, unsettled }) => orders > 0 || unsettled > 0);\n  const needToSettleFunds = filteredBalances && filteredBalances.length > 0;\n  return (\n    <FloatingElement>\n      <Title level={4} style={{ color: 'rgba(255, 255, 255, 1)' }}>\n        Migrate to Serum DEX V3 markets\n      </Title>\n      <Typography>\n        Markets on older versions of the DEX are now deprecated. To migrate over\n        to the new markets, please cancel your orders and settle your funds on\n        old markets.\n      </Typography>\n      <div style={{ marginTop: 20, display: 'flex', justifyContent: 'center' }}>\n        <Button onClick={() => refresh(true)}>\n          <SyncOutlined /> Refresh data\n        </Button>\n      </div>\n      {!balances ? (\n        <Spin size=\"large\" />\n      ) : (\n        <>\n          <Divider>\n            {!needToCancelOrders && <CheckOutlined />} Cancel your orders\n          </Divider>\n          {needToCancelOrders ? (\n            loaded ? (\n              <OpenOrderTable\n                openOrders={openOrders}\n                onCancelSuccess={() => {\n                  setTimeout(() => {\n                    refresh();\n                    refreshOpenOrders();\n                  }, 1000); // Wait so that on-chain account state reflects the update\n                }}\n              />\n            ) : (\n              <Spin size=\"large\" />\n            )\n          ) : null}\n          <Divider>\n            {!needToSettleFunds && <CheckOutlined />} Settle your funds\n          </Divider>\n          {needToSettleFunds && (\n            <BalancesTable\n              balances={filteredBalances}\n              hideWalletBalance\n              showMarket\n              onSettleSuccess={() => {\n                setTimeout(refresh, 1000); // Wait so that on-chain account state reflects the update\n              }}\n            />\n          )}\n          <Divider>Switch to upgraded markets</Divider>\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\n            <Button\n              onClick={switchToLiveMarkets}\n              disabled={needToSettleFunds || needToCancelOrders}\n            >\n              Switch to new markets\n            </Button>\n          </div>\n        </>\n      )}\n    </FloatingElement>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Col, Input, Modal, Row, Typography } from 'antd';\nimport { notify } from '../utils/notifications';\nimport { isValidPublicKey } from '../utils/utils';\nimport { PublicKey } from '@solana/web3.js';\nimport { Market, MARKETS, TOKEN_MINTS } from '@project-serum/serum';\nimport { useAccountInfo, useConnection } from '../utils/connection';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nconst { Text } = Typography;\n\nexport default function CustomMarketDialog({\n  visible,\n  onAddCustomMarket,\n  onClose,\n}) {\n  const connection = useConnection();\n\n  const [marketId, setMarketId] = useState('');\n\n  const [marketLabel, setMarketLabel] = useState('');\n  const [baseLabel, setBaseLabel] = useState('');\n  const [quoteLabel, setQuoteLabel] = useState('');\n\n  const [market, setMarket] = useState(null);\n  const [loadingMarket, setLoadingMarket] = useState(false);\n\n  const wellFormedMarketId = isValidPublicKey(marketId);\n\n  const [marketAccountInfo] = useAccountInfo(\n    wellFormedMarketId ? new PublicKey(marketId) : null,\n  );\n  const programId = marketAccountInfo\n    ? marketAccountInfo.owner.toBase58()\n    : MARKETS.find(({ deprecated }) => !deprecated).programId.toBase58();\n\n  useEffect(() => {\n    if (!wellFormedMarketId || !programId) {\n      resetLabels();\n      return;\n    }\n    setLoadingMarket(true);\n    Market.load(\n      connection,\n      new PublicKey(marketId),\n      {},\n      new PublicKey(programId),\n    )\n      .then((market) => {\n        setMarket(market);\n      })\n      .catch(() => {\n        resetLabels();\n        setMarket(null);\n      })\n      .finally(() => setLoadingMarket(false));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [connection, marketId, programId]);\n\n  const resetLabels = () => {\n    setMarketLabel(null);\n    setBaseLabel(null);\n    setQuoteLabel(null);\n  };\n\n  const knownMarket = MARKETS.find(\n    (m) =>\n      m.address.toBase58() === marketId && m.programId.toBase58() === programId,\n  );\n  const knownProgram = MARKETS.find(\n    (m) => m.programId.toBase58() === programId,\n  );\n  const knownBaseCurrency =\n    market?.baseMintAddress &&\n    TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\n      ?.name;\n\n  const knownQuoteCurrency =\n    market?.quoteMintAddress &&\n    TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\n      ?.name;\n\n  const canSubmit =\n    !loadingMarket &&\n    !!market &&\n    market.publicKey.toBase58() === marketId &&\n    marketId &&\n    programId &&\n    marketLabel &&\n    (knownBaseCurrency || baseLabel) &&\n    (knownQuoteCurrency || quoteLabel) &&\n    wellFormedMarketId;\n\n  const onSubmit = () => {\n    if (!canSubmit) {\n      notify({\n        message: 'Please fill in all fields with valid values',\n        type: 'error',\n      });\n      return;\n    }\n\n    let params = {\n      address: marketId,\n      programId,\n      name: marketLabel,\n    };\n    if (!knownBaseCurrency) {\n      params.baseLabel = baseLabel;\n    }\n    if (!knownQuoteCurrency) {\n      params.quoteLabel = quoteLabel;\n    }\n    onAddCustomMarket(params);\n    onDoClose();\n  };\n\n  const onDoClose = () => {\n    resetLabels();\n    setMarket(null);\n    setMarketId(null);\n    onClose();\n  };\n\n  return (\n    <Modal\n      title={'Add custom market'}\n      visible={visible}\n      onOk={onSubmit}\n      okText={'Add'}\n      onCancel={onDoClose}\n      okButtonProps={{ disabled: !canSubmit }}\n    >\n      <div>\n        {wellFormedMarketId ? (\n          <>\n            {!market && !loadingMarket && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Not a valid market</Text>\n              </Row>\n            )}\n            {market && knownMarket && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"warning\">Market known: {knownMarket.name}</Text>\n              </Row>\n            )}\n            {market && !knownProgram && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Warning: unknown DEX program</Text>\n              </Row>\n            )}\n            {market && knownProgram && knownProgram.deprecated && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"warning\">Warning: deprecated DEX program</Text>\n              </Row>\n            )}\n          </>\n        ) : (\n          <>\n            {marketId && !wellFormedMarketId && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Invalid market ID</Text>\n              </Row>\n            )}\n          </>\n        )}\n        <Row style={{ marginBottom: 8 }}>\n          <Col span={24}>\n            <Input\n              placeholder=\"Market Id\"\n              value={marketId}\n              onChange={(e) => setMarketId(e.target.value)}\n              suffix={loadingMarket ? <LoadingOutlined /> : null}\n            />\n          </Col>\n        </Row>\n\n        <Row style={{ marginBottom: 8, marginTop: 8 }}>\n          <Col span={24}>\n            <Input\n              placeholder=\"Market Label\"\n              disabled={!market}\n              value={marketLabel}\n              onChange={(e) => setMarketLabel(e.target.value)}\n            />\n          </Col>\n        </Row>\n        <Row gutter={[8]} style={{ marginBottom: 8 }}>\n          <Col span={12}>\n            <Input\n              placeholder=\"Base label\"\n              disabled={!market || knownBaseCurrency}\n              value={knownBaseCurrency || baseLabel}\n              onChange={(e) => setBaseLabel(e.target.value)}\n            />\n            {market && !knownBaseCurrency && (\n              <div style={{ marginTop: 8 }}>\n                <Text type=\"warning\">Warning: unknown token</Text>\n              </div>\n            )}\n          </Col>\n          <Col span={12}>\n            <Input\n              placeholder=\"Quote label\"\n              disabled={!market || knownQuoteCurrency}\n              value={knownQuoteCurrency || quoteLabel}\n              onChange={(e) => setQuoteLabel(e.target.value)}\n            />\n            {market && !knownQuoteCurrency && (\n              <div style={{ marginTop: 8 }}>\n                <Text type=\"warning\">Warning: unknown token</Text>\n              </div>\n            )}\n          </Col>\n        </Row>\n      </div>\n    </Modal>\n  );\n}\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Button, Col, Popover, Row, Select, Typography } from 'antd';\nimport styled from 'styled-components';\nimport Orderbook from '../components/Orderbook';\nimport UserInfoTable from '../components/UserInfoTable';\nimport StandaloneBalancesDisplay from '../components/StandaloneBalancesDisplay';\nimport {\n  getMarketInfos,\n  getTradePageUrl,\n  MarketProvider,\n  useMarket,\n  useMarketsList,\n  useUnmigratedDeprecatedMarkets,\n} from '../utils/markets';\nimport TradeForm from '../components/TradeForm';\nimport TradesTable from '../components/TradesTable';\nimport LinkAddress from '../components/LinkAddress';\nimport DeprecatedMarketsInstructions from '../components/DeprecatedMarketsInstructions';\nimport {\n  DeleteOutlined,\n  InfoCircleOutlined,\n  PlusCircleOutlined,\n} from '@ant-design/icons';\nimport CustomMarketDialog from '../components/CustomMarketDialog';\nimport { notify } from '../utils/notifications';\nimport { useHistory, useParams } from 'react-router-dom';\n\nconst { Option, OptGroup } = Select;\n\nconst Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 16px 16px;\n  .borderNone .ant-select-selector {\n    border: none !important;\n  }\n`;\n\nexport default function TradePage() {\n  const { marketAddress } = useParams();\n  useEffect(() => {\n    if (marketAddress) {\n      localStorage.setItem('marketAddress', JSON.stringify(marketAddress));\n    }\n  }, [marketAddress]);\n  const history = useHistory();\n  function setMarketAddress(address) {\n    history.push(getTradePageUrl(address));\n  }\n\n  return (\n    <MarketProvider\n      marketAddress={marketAddress}\n      setMarketAddress={setMarketAddress}\n    >\n      <TradePageInner />\n    </MarketProvider>\n  );\n}\n\nfunction TradePageInner() {\n  const {\n    market,\n    marketName,\n    customMarkets,\n    setCustomMarkets,\n    setMarketAddress,\n  } = useMarket();\n  const markets = useMarketsList();\n  const [handleDeprecated, setHandleDeprecated] = useState(false);\n  const [addMarketVisible, setAddMarketVisible] = useState(false);\n  const deprecatedMarkets = useUnmigratedDeprecatedMarkets();\n  const [dimensions, setDimensions] = useState({\n    height: window.innerHeight,\n    width: window.innerWidth,\n  });\n\n  useEffect(() => {\n    document.title = marketName ? `${marketName} — Serum` : 'Serum';\n  }, [marketName]);\n\n  const changeOrderRef = useRef<\n    ({ size, price }: { size?: number; price?: number }) => void\n  >();\n\n  useEffect(() => {\n    const handleResize = () => {\n      setDimensions({\n        height: window.innerHeight,\n        width: window.innerWidth,\n      });\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const width = dimensions?.width;\n  const componentProps = {\n    onChangeOrderRef: (ref) => (changeOrderRef.current = ref),\n    onPrice: useCallback(\n      (price) => changeOrderRef.current && changeOrderRef.current({ price }),\n      [],\n    ),\n    onSize: useCallback(\n      (size) => changeOrderRef.current && changeOrderRef.current({ size }),\n      [],\n    ),\n  };\n  const component = (() => {\n    if (handleDeprecated) {\n      return (\n        <DeprecatedMarketsPage\n          switchToLiveMarkets={() => setHandleDeprecated(false)}\n        />\n      );\n    } else if (width < 1000) {\n      return <RenderSmaller {...componentProps} />;\n    } else if (width < 1450) {\n      return <RenderSmall {...componentProps} />;\n    } else {\n      return <RenderNormal {...componentProps} />;\n    }\n  })();\n\n  const onAddCustomMarket = (customMarket) => {\n    const marketInfo = getMarketInfos(customMarkets).some(\n      (m) => m.address.toBase58() === customMarket.address,\n    );\n    if (marketInfo) {\n      notify({\n        message: `A market with the given ID already exists`,\n        type: 'error',\n      });\n      return;\n    }\n    const newCustomMarkets = [...customMarkets, customMarket];\n    setCustomMarkets(newCustomMarkets);\n    setMarketAddress(customMarket.address);\n  };\n\n  const onDeleteCustomMarket = (address) => {\n    const newCustomMarkets = customMarkets.filter((m) => m.address !== address);\n    setCustomMarkets(newCustomMarkets);\n  };\n\n  return (\n    <>\n      <CustomMarketDialog\n        visible={addMarketVisible}\n        onClose={() => setAddMarketVisible(false)}\n        onAddCustomMarket={onAddCustomMarket}\n      />\n      <Wrapper>\n        <Row\n          align=\"middle\"\n          style={{ paddingLeft: 5, paddingRight: 5 }}\n          gutter={16}\n        >\n          <Col>\n            <MarketSelector\n              markets={markets}\n              setHandleDeprecated={setHandleDeprecated}\n              placeholder={'Select market'}\n              customMarkets={customMarkets}\n              onDeleteCustomMarket={onDeleteCustomMarket}\n            />\n          </Col>\n          {market ? (\n            <Col>\n              <Popover\n                content={<LinkAddress address={market.publicKey.toBase58()} />}\n                placement=\"bottomRight\"\n                title=\"Market address\"\n                trigger=\"click\"\n              >\n                <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n              </Popover>\n            </Col>\n          ) : null}\n          <Col>\n            <PlusCircleOutlined\n              style={{ color: '#2abdd2' }}\n              onClick={() => setAddMarketVisible(true)}\n            />\n          </Col>\n          {deprecatedMarkets && deprecatedMarkets.length > 0 && (\n            <React.Fragment>\n              <Col>\n                <Typography>\n                  You have unsettled funds on old markets! Please go through\n                  them to claim your funds.\n                </Typography>\n              </Col>\n              <Col>\n                <Button onClick={() => setHandleDeprecated(!handleDeprecated)}>\n                  {handleDeprecated ? 'View new markets' : 'Handle old markets'}\n                </Button>\n              </Col>\n            </React.Fragment>\n          )}\n        </Row>\n        {component}\n      </Wrapper>\n    </>\n  );\n}\n\nfunction MarketSelector({\n  markets,\n  placeholder,\n  setHandleDeprecated,\n  customMarkets,\n  onDeleteCustomMarket,\n}) {\n  const { market, setMarketAddress } = useMarket();\n\n  const onSetMarketAddress = (marketAddress) => {\n    setHandleDeprecated(false);\n    setMarketAddress(marketAddress);\n  };\n\n  const extractBase = (a) => a.split('/')[0];\n  const extractQuote = (a) => a.split('/')[1];\n\n  const selectedMarket = getMarketInfos(customMarkets)\n    .find(\n      (proposedMarket) =>\n        market?.address && proposedMarket.address.equals(market.address),\n    )\n    ?.address?.toBase58();\n\n  return (\n    <Select\n      showSearch\n      size={'large'}\n      style={{ width: 200 }}\n      placeholder={placeholder || 'Select a market'}\n      optionFilterProp=\"name\"\n      onSelect={onSetMarketAddress}\n      listHeight={400}\n      value={selectedMarket}\n      filterOption={(input, option) =>\n        option?.name?.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      }\n    >\n      {customMarkets && customMarkets.length > 0 && (\n        <OptGroup label=\"Custom\">\n          {customMarkets.map(({ address, name }, i) => (\n            <Option\n              value={address}\n              key={address}\n              name={name}\n              style={{\n                padding: '10px',\n                // @ts-ignore\n                backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\n              }}\n            >\n              <Row>\n                <Col flex=\"auto\">{name}</Col>\n                {selectedMarket !== address && (\n                  <Col>\n                    <DeleteOutlined\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        e.nativeEvent.stopImmediatePropagation();\n                        onDeleteCustomMarket && onDeleteCustomMarket(address);\n                      }}\n                    />\n                  </Col>\n                )}\n              </Row>\n            </Option>\n          ))}\n        </OptGroup>\n      )}\n      <OptGroup label=\"Markets\">\n        {markets\n          .sort((a, b) =>\n            extractQuote(a.name) === 'USDT' && extractQuote(b.name) !== 'USDT'\n              ? -1\n              : extractQuote(a.name) !== 'USDT' &&\n                extractQuote(b.name) === 'USDT'\n              ? 1\n              : 0,\n          )\n          .sort((a, b) =>\n            extractBase(a.name) < extractBase(b.name)\n              ? -1\n              : extractBase(a.name) > extractBase(b.name)\n              ? 1\n              : 0,\n          )\n          .map(({ address, name, deprecated }, i) => (\n            <Option\n              value={address.toBase58()}\n              key={address}\n              name={name}\n              style={{\n                padding: '10px',\n                // @ts-ignore\n                backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\n              }}\n            >\n              {name} {deprecated ? ' (Deprecated)' : null}\n            </Option>\n          ))}\n      </OptGroup>\n    </Select>\n  );\n}\n\nconst DeprecatedMarketsPage = ({ switchToLiveMarkets }) => {\n  return (\n    <>\n      <Row>\n        <Col flex=\"auto\">\n          <DeprecatedMarketsInstructions\n            switchToLiveMarkets={switchToLiveMarkets}\n          />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst RenderNormal = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <Row\n      style={{\n        minHeight: '900px',\n        flexWrap: 'nowrap',\n      }}\n    >\n      <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n        <UserInfoTable />\n      </Col>\n      <Col flex={'360px'} style={{ height: '100%' }}>\n        <Orderbook smallScreen={false} onPrice={onPrice} onSize={onSize} />\n        <TradesTable smallScreen={false} />\n      </Col>\n      <Col\n        flex=\"400px\"\n        style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n      >\n        <TradeForm setChangeOrderRef={onChangeOrderRef} />\n        <StandaloneBalancesDisplay />\n      </Col>\n    </Row>\n  );\n};\n\nconst RenderSmall = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <>\n      <Row\n        style={{\n          height: '900px',\n        }}\n      >\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n          <Orderbook\n            smallScreen={true}\n            depth={13}\n            onPrice={onPrice}\n            onSize={onSize}\n          />\n        </Col>\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n          <TradesTable smallScreen={true} />\n        </Col>\n        <Col\n          flex=\"400px\"\n          style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n        >\n          <TradeForm setChangeOrderRef={onChangeOrderRef} />\n          <StandaloneBalancesDisplay />\n        </Col>\n      </Row>\n      <Row>\n        <Col flex=\"auto\">\n          <UserInfoTable />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst RenderSmaller = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <>\n      <Row>\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <TradeForm style={{ flex: 1 }} setChangeOrderRef={onChangeOrderRef} />\n        </Col>\n        <Col xs={24} sm={12}>\n          <StandaloneBalancesDisplay />\n        </Col>\n      </Row>\n      <Row\n        style={{\n          height: '500px',\n        }}\n      >\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <Orderbook smallScreen={true} onPrice={onPrice} onSize={onSize} />\n        </Col>\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <TradesTable smallScreen={true} />\n        </Col>\n      </Row>\n      <Row>\n        <Col flex=\"auto\">\n          <UserInfoTable />\n        </Col>\n      </Row>\n    </>\n  );\n};\n","import React from 'react';\nimport { Button, Popover } from 'antd';\nimport { InfoCircleOutlined, UserOutlined } from '@ant-design/icons';\nimport { useWallet } from '../utils/wallet';\nimport LinkAddress from './LinkAddress';\n\nexport default function WalletConnect() {\n  const { connected, wallet } = useWallet();\n  const publicKey = wallet?.publicKey?.toBase58();\n\n  return (\n    <React.Fragment>\n      <Button\n        type=\"text\"\n        size=\"large\"\n        onClick={connected ? wallet.disconnect : wallet.connect}\n        style={{ color: '#2abdd2' }}\n      >\n        <UserOutlined />\n        {!connected ? 'Connect wallet' : 'Disconnect'}\n      </Button>\n      {connected && (\n        <Popover\n          content={<LinkAddress address={publicKey} />}\n          placement=\"bottomRight\"\n          title=\"Wallet public key\"\n          trigger=\"click\"\n        >\n          <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n        </Popover>\n      )}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport {\n  useAllMarkets,\n  useAllOpenOrders,\n  useMarketInfos,\n} from '../utils/markets';\nimport OpenOrderTable from '../components/UserInfoTable/OpenOrderTable';\nimport { Button, Row } from 'antd';\nimport { OrderWithMarketAndMarketName } from '../utils/types';\nimport { useWallet } from '../utils/wallet';\nimport WalletConnect from '../components/WalletConnect';\n\nexport default function OpenOrdersPage() {\n  const { connected } = useWallet();\n  const { openOrders, loaded, refreshOpenOrders } = useAllOpenOrders();\n  let marketInfos = useMarketInfos();\n  let marketAddressesToNames = Object.fromEntries(\n    marketInfos.map((info) => [info.address.toBase58(), info.name]),\n  );\n  let [allMarkets] = useAllMarkets();\n  const marketsByAddress = Object.fromEntries(\n    (allMarkets || []).map((marketInfo) => [\n      marketInfo.market.address.toBase58(),\n      marketInfo.market,\n    ]),\n  );\n\n  const dataSource: OrderWithMarketAndMarketName[] = (openOrders || [])\n    .map((orderInfos) =>\n      orderInfos.orders.map((order) => {\n        return {\n          marketName: marketAddressesToNames[orderInfos.marketAddress],\n          market: marketsByAddress[orderInfos.marketAddress],\n          ...order,\n        };\n      }),\n    )\n    .flat();\n\n  if (!connected) {\n    return (\n      <Row\n        justify=\"center\"\n        style={{\n          marginTop: '10%',\n        }}\n      >\n        <WalletConnect />\n      </Row>\n    );\n  }\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <Button onClick={refreshOpenOrders} loading={!loaded}>\n        Refresh\n      </Button>\n      <OpenOrderTable\n        openOrders={dataSource}\n        pageSize={25}\n        loading={!loaded}\n        onCancelSuccess={refreshOpenOrders}\n        marketFilter\n      />\n    </FloatingElement>\n  );\n}\n","import React, { useState } from 'react';\nimport DataTable from '../layout/DataTable';\nimport { Button, Row } from 'antd';\nimport { settleAllFunds } from '../../utils/send';\nimport { notify } from '../../utils/notifications';\nimport { useConnection } from '../../utils/connection';\nimport { useWallet } from '../../utils/wallet';\nimport {\n  useAllMarkets,\n  useSelectedTokenAccounts,\n  useTokenAccounts,\n} from '../../utils/markets';\nimport StandaloneTokenAccountsSelect from '../StandaloneTokenAccountSelect';\nimport { abbreviateAddress } from '../../utils/utils';\nimport { PublicKey } from '@solana/web3.js';\n\nexport default function WalletBalancesTable({\n  walletBalances,\n}: {\n  walletBalances: {\n    coin: string;\n    mint: string;\n    walletBalance: number;\n    openOrdersFree: number;\n    openOrdersTotal: number;\n  }[];\n}) {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n  const [tokenAccounts, tokenAccountsConnected] = useTokenAccounts();\n  const [allMarkets, allMarketsConnected] = useAllMarkets();\n  const [settlingFunds, setSettlingFunds] = useState(false);\n\n  async function onSettleFunds() {\n    setSettlingFunds(true);\n    try {\n      if (!tokenAccounts || !tokenAccountsConnected) {\n        notify({\n          message: 'Error settling funds',\n          description: 'TokenAccounts not connected',\n          type: 'error',\n        });\n        return;\n      }\n      if (!allMarkets || !allMarketsConnected) {\n        notify({\n          message: 'Error settling funds',\n          description: 'Markets not connected',\n          type: 'error',\n        });\n        return;\n      }\n      await settleAllFunds({\n        connection,\n        tokenAccounts,\n        selectedTokenAccounts,\n        wallet,\n        markets: allMarkets.map((marketInfo) => marketInfo.market),\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSettlingFunds(false);\n    }\n  }\n\n  const columns = [\n    {\n      title: 'Coin',\n      key: 'coin',\n      width: '20%',\n      render: (walletBalance) => (\n        <Row align=\"middle\">\n          <a\n            href={`https://explorer.solana.com/address/${walletBalance.mint}`}\n            target={'_blank'}\n            rel=\"noopener noreferrer\"\n          >\n            {walletBalance.coin ||\n              abbreviateAddress(new PublicKey(walletBalance.mint))}\n          </a>\n        </Row>\n      ),\n    },\n    {\n      title: 'Wallet Balance',\n      dataIndex: 'walletBalance',\n      key: 'walletBalance',\n      width: '20%',\n    },\n    {\n      title: 'Open orders total balances',\n      dataIndex: 'openOrdersTotal',\n      key: 'openOrdersTotal',\n      width: '20%',\n    },\n    {\n      title: 'Unsettled balances',\n      dataIndex: 'openOrdersFree',\n      key: 'openOrdersFree',\n      width: '20%',\n    },\n    {\n      title: 'Selected token account',\n      key: 'selectTokenAccount',\n      width: '20%',\n      render: (walletBalance) => (\n        <Row align=\"middle\" style={{ width: '430px' }}>\n          <StandaloneTokenAccountsSelect\n            accounts={tokenAccounts?.filter(\n              (t) => t.effectiveMint.toBase58() === walletBalance.mint,\n            )}\n            mint={walletBalance.mint}\n          />\n        </Row>\n      ),\n    },\n  ];\n  return (\n    <React.Fragment>\n      <DataTable\n        emptyLabel=\"No balances\"\n        dataSource={walletBalances}\n        columns={columns}\n        pagination={false}\n      />\n      {connected && (\n        <Button onClick={onSettleFunds} loading={settlingFunds}>\n          Settle all funds\n        </Button>\n      )}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { Tabs } from 'antd';\nimport {\n  useAllOpenOrdersBalances,\n  useWalletBalancesForAllMarkets,\n} from '../utils/markets';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport WalletBalancesTable from '../components/UserInfoTable/WalletBalancesTable';\nimport { useMintToTickers } from '../utils/tokens';\n\nconst { TabPane } = Tabs;\n\nexport default function BalancesPage() {\n  const walletBalances = useWalletBalancesForAllMarkets();\n  const mintToTickers = useMintToTickers();\n  const openOrdersBalances = useAllOpenOrdersBalances();\n\n  const data = (walletBalances || []).map((balance) => {\n    const balances = {\n      coin: mintToTickers[balance.mint],\n      mint: balance.mint,\n      walletBalance: balance.balance,\n      openOrdersFree: 0,\n      openOrdersTotal: 0,\n    };\n    for (let openOrdersAccount of openOrdersBalances[balance.mint] || []) {\n      balances['openOrdersFree'] += openOrdersAccount.free;\n      balances['openOrdersTotal'] += openOrdersAccount.total;\n    }\n    return balances;\n  });\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <Tabs defaultActiveKey=\"walletBalances\">\n        <TabPane tab=\"Wallet Balances\" key=\"walletBalances\">\n          <WalletBalancesTable walletBalances={data} />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Button, Col, Input, Row, Select, Typography } from 'antd';\nimport styled from 'styled-components';\nimport { Orderbook } from '@project-serum/serum';\nimport {\n  getExpectedFillPrice,\n  getMarketDetails,\n  getMarketInfos,\n  getMarketOrderPrice,\n  getSelectedTokenAccountForMint,\n  MarketProvider,\n  useBalances,\n  useCustomMarkets, useLocallyStoredFeeDiscountKey,\n  useMarket,\n  useTokenAccounts,\n} from '../utils/markets';\nimport { notify } from '../utils/notifications';\nimport { useWallet } from '../utils/wallet';\nimport { useConnection, useSendConnection } from '../utils/connection';\nimport { placeOrder } from '../utils/send';\nimport { floorToDecimal, getDecimalCount } from '../utils/utils';\nimport FloatingElement from './layout/FloatingElement';\nimport WalletConnect from './WalletConnect';\nimport { SwapOutlined } from '@ant-design/icons';\nimport { CustomMarketInfo } from '../utils/types';\nimport Wallet from '@project-serum/sol-wallet-adapter';\n\nconst { Option } = Select;\nconst { Title } = Typography;\n\nconst ActionButton = styled(Button)`\n  color: #2abdd2;\n  background-color: #212734;\n  border-width: 0px;\n`;\n\nconst ConvertButton = styled(Button)`\n  background: #02bf76;\n  border-color: #02bf76;\n`;\n\nexport default function ConvertForm() {\n  const { connected, wallet } = useWallet();\n  const { customMarkets } = useCustomMarkets();\n  const marketInfos = getMarketInfos(customMarkets);\n  const [marketAddress, setMarketAddress] = useState<string | null>(null);\n\n  const [fromToken, setFromToken] = useState<string | undefined>(undefined);\n  const [toToken, setToToken] = useState<string | undefined>(undefined);\n  const [size, setSize] = useState<number | undefined>(undefined);\n\n  const marketInfosbyName = Object.fromEntries(\n    marketInfos.map((market) => [market.name, market]),\n  );\n\n  const tokenConvertMap: Map<string, Set<string>> = new Map();\n  Object.keys(marketInfosbyName).forEach((market) => {\n    let [base, quote] = market.split('/');\n    !tokenConvertMap.has(base)\n      ? tokenConvertMap.set(base, new Set([quote]))\n      : tokenConvertMap.set(\n          base,\n          new Set([...(tokenConvertMap.get(base) || []), quote]),\n        );\n    !tokenConvertMap.has(quote)\n      ? tokenConvertMap.set(quote, new Set([base]))\n      : tokenConvertMap.set(\n          quote,\n          new Set([...(tokenConvertMap.get(quote) || []), base]),\n        );\n  });\n\n  const setMarket = (toToken) => {\n    const marketInfo = marketInfos\n      .filter((marketInfo) => !marketInfo.deprecated)\n      .find(\n        (marketInfo) =>\n          marketInfo.name === `${fromToken}/${toToken}` ||\n          marketInfo.name === `${toToken}/${fromToken}`,\n      );\n    if (!marketInfo) {\n      console.warn(\n        `Could not find market info for market names ${fromToken}/${toToken} or ${toToken}/${fromToken}`,\n      );\n      notify({\n        message: 'Invalid market',\n        type: 'error',\n      });\n      return;\n    }\n    setMarketAddress(marketInfo.address.toBase58());\n    setToToken(toToken);\n  };\n\n  return (\n    <FloatingElement style={{ maxWidth: 500 }}>\n      <Title level={3}>Convert</Title>\n      {!connected && (\n        <Row justify=\"center\">\n          <Col>\n            <WalletConnect />\n          </Col>\n        </Row>\n      )}\n      {tokenConvertMap && connected && (\n        <>\n          <Row style={{ marginBottom: 8 }}>\n            <Col>\n              <Select\n                style={{ minWidth: 300 }}\n                placeholder=\"Select a token\"\n                value={fromToken}\n                onChange={(token) => {\n                  setFromToken(token);\n                  setToToken(undefined);\n                }}\n              >\n                {Array.from(tokenConvertMap.keys()).map((token) => (\n                  <Option value={token} key={token}>\n                    {token}\n                  </Option>\n                ))}\n              </Select>\n            </Col>\n          </Row>\n          {fromToken && (\n            <Row style={{ marginBottom: 8 }}>\n              <Col>\n                <Select\n                  style={{ minWidth: 300 }}\n                  value={toToken}\n                  onChange={setMarket}\n                >\n                  {[...(tokenConvertMap.get(fromToken) || [])].map((token) => (\n                    <Option value={token} key={token}>\n                      {token}\n                    </Option>\n                  ))}\n                </Select>\n              </Col>\n            </Row>\n          )}\n          {fromToken && toToken && (\n            <MarketProvider\n              marketAddress={marketAddress}\n              setMarketAddress={setMarketAddress}\n            >\n              <ConvertFormSubmit\n                size={size}\n                setSize={setSize}\n                fromToken={fromToken}\n                toToken={toToken}\n                wallet={wallet}\n                customMarkets={customMarkets}\n              />\n            </MarketProvider>\n          )}\n        </>\n      )}\n    </FloatingElement>\n  );\n}\n\nfunction ConvertFormSubmit({\n  size,\n  setSize,\n  fromToken,\n  toToken,\n  wallet,\n  customMarkets,\n}: {\n  size: number | null | undefined;\n  setSize: (newSize: number | undefined) => void;\n  fromToken: string;\n  toToken: string;\n  wallet: Wallet;\n  customMarkets: CustomMarketInfo[];\n}) {\n  const { market } = useMarket();\n  const [accounts] = useTokenAccounts();\n  const balances = useBalances();\n  const [fromAmount, setFromAmount] = useState<number | undefined>();\n  const [toAmount, setToAmount] = useState<number | undefined>();\n  const { storedFeeDiscountKey: feeDiscountKey } = useLocallyStoredFeeDiscountKey();\n\n  const connection = useConnection();\n  const sendConnection = useSendConnection();\n\n  const [isConverting, setIsConverting] = useState(false);\n\n  const isFromTokenBaseOfMarket = (market) => {\n    const { marketName } = getMarketDetails(market, customMarkets);\n    if (!marketName) {\n      throw Error(\n        'Cannot determine if coin is quote or base because marketName is missing',\n      );\n    }\n    const [base] = marketName.split('/');\n    return fromToken === base;\n  };\n\n  const onConvert = async () => {\n    if (!market) {\n      console.warn('Market is null when attempting convert.');\n      notify({\n        message: 'Invalid market',\n        type: 'error',\n      });\n      return;\n    }\n    // get accounts\n    const baseCurrencyAccount = getSelectedTokenAccountForMint(\n      accounts,\n      market?.baseMintAddress,\n    );\n    const quoteCurrencyAccount = getSelectedTokenAccountForMint(\n      accounts,\n      market?.quoteMintAddress,\n    );\n\n    // get approximate price\n    let side;\n    try {\n      side = isFromTokenBaseOfMarket(market) ? 'sell' : 'buy';\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error placing order',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    }\n\n    const sidedOrderbookAccount =\n      // @ts-ignore\n      side === 'buy' ? market._decoded.asks : market._decoded.bids;\n    const orderbookData = await connection.getAccountInfo(\n      sidedOrderbookAccount,\n    );\n    if (!orderbookData?.data) {\n      notify({ message: 'Invalid orderbook data', type: 'error' });\n      return;\n    }\n    const decodedOrderbookData = Orderbook.decode(market, orderbookData.data);\n    const [bbo] =\n      decodedOrderbookData &&\n      decodedOrderbookData.getL2(1).map(([price]) => price);\n    if (!bbo) {\n      notify({ message: 'No best price found', type: 'error' });\n      return;\n    }\n    if (!size) {\n      notify({ message: 'Size not specified', type: 'error' });\n      return;\n    }\n\n    const tickSizeDecimals = getDecimalCount(market.tickSize);\n    const parsedPrice = getMarketOrderPrice(\n      decodedOrderbookData,\n      size,\n      tickSizeDecimals,\n    );\n\n    // round size\n    const sizeDecimalCount = getDecimalCount(market.minOrderSize);\n    const nativeSize = side === 'sell' ? size : size / parsedPrice;\n    const parsedSize = floorToDecimal(nativeSize, sizeDecimalCount);\n\n    setIsConverting(true);\n    try {\n      await placeOrder({\n        side,\n        price: parsedPrice,\n        size: parsedSize,\n        orderType: 'ioc',\n        market,\n        connection: sendConnection,\n        wallet,\n        baseCurrencyAccount: baseCurrencyAccount?.pubkey,\n        quoteCurrencyAccount: quoteCurrencyAccount?.pubkey,\n        feeDiscountPubkey: feeDiscountKey,\n      });\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error placing order',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setIsConverting(false);\n    }\n  };\n\n  const getPrice = async () => {\n    try {\n      const side = isFromTokenBaseOfMarket(market) ? 'sell' : 'buy';\n      const sidedOrderbookAccount =\n        // @ts-ignore\n        side === 'buy' ? market._decoded.asks : market._decoded.bids;\n      const orderbookData = await connection.getAccountInfo(\n        sidedOrderbookAccount,\n      );\n      if (!orderbookData?.data || !market) {\n        return [null, null];\n      }\n      const decodedOrderbookData = Orderbook.decode(market, orderbookData.data);\n      const [bbo] =\n        decodedOrderbookData &&\n        decodedOrderbookData.getL2(1).map(([price]) => price);\n      if (!bbo || !size) {\n        return [null, null];\n      }\n      const tickSizeDecimals = getDecimalCount(market.tickSize);\n      const expectedPrice = getExpectedFillPrice(\n        decodedOrderbookData,\n        size,\n        tickSizeDecimals,\n      );\n      if (side === 'buy') {\n        return [expectedPrice.toFixed(6), 1];\n      } else {\n        return [1, expectedPrice.toFixed(6)];\n      }\n    } catch (e) {\n      console.log(`Got error ${e}`);\n      return [null, null];\n    }\n  };\n\n  useEffect(\n    () => {\n      getPrice().then(([fromAmount, toAmount]) => {\n        setFromAmount(fromAmount || undefined);\n        setToAmount(toAmount || undefined);\n      });\n    },\n    // eslint-disable-next-line\n    [market?.address.toBase58(), size],\n  );\n\n  const canConvert = market && size && size > 0;\n  const balance = balances.find(\n    (coinBalance) => coinBalance.coin === fromToken,\n  );\n  const availableBalance =\n    ((balance?.unsettled || 0) + (balance?.wallet || 0)) * 0.99;\n\n  return (\n    <React.Fragment>\n      <Row style={{ marginBottom: 8 }}>\n        <Col>\n          <Input\n            style={{ minWidth: 300 }}\n            addonBefore={`Size (${fromToken})`}\n            placeholder=\"Size\"\n            value={size === null ? undefined : size}\n            type=\"number\"\n            onChange={(e) => setSize(parseFloat(e.target.value) || undefined)}\n          />\n        </Col>\n      </Row>\n      <Row gutter={12} style={{ marginBottom: 8 }}>\n        <Col span={12}>\n          <ActionButton\n            block\n            size=\"large\"\n            onClick={() => setSize(floorToDecimal(availableBalance, 4))}\n          >\n            Max: {availableBalance.toFixed(4)}\n          </ActionButton>\n        </Col>\n        <Col span={12}>\n          <ConvertButton\n            block\n            type=\"primary\"\n            size=\"large\"\n            loading={isConverting}\n            onClick={onConvert}\n            disabled={!canConvert}\n          >\n            Convert\n          </ConvertButton>\n        </Col>\n      </Row>\n      {canConvert && (\n        <Row align=\"middle\" justify=\"center\">\n          <Col>\n            {fromAmount} {fromToken}\n          </Col>\n          <Col offset={1}>\n            <SwapOutlined />\n          </Col>\n          <Col offset={1}>\n            {toAmount} {toToken}\n          </Col>\n        </Row>\n      )}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport ConvertForm from '../components/ConvertForm';\nimport { Row, Col } from 'antd';\nimport { DEFAULT_MARKET, MarketProvider } from '../utils/markets';\nimport { useLocalStorageState } from '../utils/utils';\n\nconst Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 16px 16px;\n  .borderNone .ant-select-selector {\n    border: none !important;\n  }\n`;\n\nexport default function ConvertPage() {\n  const [marketAddress, setMarketAddress] = useLocalStorageState(\n    'marketAddress',\n    DEFAULT_MARKET?.address.toBase58(),\n  );\n  return (\n    <Wrapper style={{ flex: 1, paddingTop: 10 }}>\n      <Row justify=\"center\">\n        <Col>\n          <MarketProvider\n            marketAddress={marketAddress}\n            setMarketAddress={setMarketAddress}\n          >\n            <ConvertForm />\n          </MarketProvider>\n        </Col>\n      </Row>\n    </Wrapper>\n  );\n}\n","import React, { useContext } from 'react';\nimport { useLocalStorageState } from './utils';\nimport { useInterval } from './useInterval';\nimport { useConnection } from './connection';\nimport { useWallet } from './wallet';\nimport {\n  useAllMarkets,\n  useSelectedTokenAccounts,\n  useTokenAccounts,\n} from './markets';\nimport { settleAllFunds } from './send';\nimport { PreferencesContextValues } from './types';\n\nconst PreferencesContext = React.createContext<PreferencesContextValues | null>(\n  null,\n);\n\nexport function PreferencesProvider({ children }) {\n  const [autoSettleEnabled, setAutoSettleEnabled] = useLocalStorageState(\n    'autoSettleEnabled',\n    true,\n  );\n\n  const [tokenAccounts] = useTokenAccounts();\n  const { connected, wallet } = useWallet();\n  const [marketList] = useAllMarkets();\n  const connection = useConnection();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n\n  useInterval(() => {\n    const autoSettle = async () => {\n      const markets = (marketList || []).map((m) => m.market);\n      try {\n        console.log('Auto settling');\n        await settleAllFunds({\n          connection,\n          wallet,\n          tokenAccounts: tokenAccounts || [],\n          markets,\n          selectedTokenAccounts,\n        });\n      } catch (e) {\n        console.log('Error auto settling funds: ' + e.message);\n      }\n    };\n\n    connected && wallet?.autoApprove && autoSettleEnabled && autoSettle();\n  }, 10000);\n\n  return (\n    <PreferencesContext.Provider\n      value={{\n        autoSettleEnabled,\n        setAutoSettleEnabled,\n      }}\n    >\n      {children}\n    </PreferencesContext.Provider>\n  );\n}\n\nexport function usePreferences() {\n  const context = useContext(PreferencesContext);\n  if (!context) {\n    throw new Error('Missing preferences context');\n  }\n  return {\n    autoSettleEnabled: context.autoSettleEnabled,\n    setAutoSettleEnabled: context.setAutoSettleEnabled,\n  };\n}\n","import React from 'react';\nimport { Switch, Typography } from 'antd';\nimport { usePreferences } from '../utils/preferences';\n\nconst { Paragraph } = Typography;\n\nexport default function Settings({ autoApprove }) {\n  const { autoSettleEnabled, setAutoSettleEnabled } = usePreferences();\n\n  return (\n    <div>\n      <Switch\n        style={{ marginRight: 10 }}\n        disabled={!autoApprove}\n        checked={autoApprove && autoSettleEnabled}\n        onChange={setAutoSettleEnabled}\n      />{' '}\n      Auto settle\n      {!autoApprove && (\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)', marginTop: 10 }}>\n          To use auto settle, first enable auto approval in your wallet\n        </Paragraph>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { Col, Input, Modal, Row } from 'antd';\nimport { EndpointInfo } from '../utils/types';\n\nexport default function CustomClusterEndpointDialog({\n  visible,\n  testingConnection,\n  onAddCustomEndpoint,\n  onClose,\n}: {\n  visible: boolean;\n  testingConnection: boolean;\n  onAddCustomEndpoint: (info: EndpointInfo) => void;\n  onClose?: () => void;\n}) {\n  const [customEndpoint, setCustomEndpoint] = useState('');\n  const [customEndpointName, setCustomEndpointName] = useState('');\n\n  const onSubmit = () => {\n    const fullEndpoint = 'https://' + customEndpoint;\n    const params = {\n      name: customEndpointName,\n      endpoint: fullEndpoint,\n      custom: true,\n    };\n    onAddCustomEndpoint(params);\n    onDoClose();\n  };\n  const onDoClose = () => {\n    setCustomEndpoint('');\n    setCustomEndpointName('');\n    onClose && onClose();\n  };\n  const canSubmit = customEndpoint !== '' && customEndpointName !== '';\n\n  return (\n    <Modal\n      title={'Add custom endpoint'}\n      visible={visible}\n      onOk={onSubmit}\n      okText={'Add'}\n      onCancel={onDoClose}\n      okButtonProps={{ disabled: !canSubmit, loading: testingConnection }}\n    >\n      <Row style={{ marginBottom: 8 }}>\n        <Col span={24}>\n          <Input\n            placeholder=\"Cluster Name\"\n            value={customEndpointName}\n            onChange={(e) => setCustomEndpointName(e.target.value)}\n          />\n        </Col>\n      </Row>\n      <Row style={{ marginBottom: 8 }}>\n        <Col span={24}>\n          <Input\n            placeholder=\"Cluster Endpoint\"\n            value={customEndpoint}\n            addonBefore={'https://'}\n            onChange={(e) => setCustomEndpoint(e.target.value)}\n          />\n        </Col>\n      </Row>\n    </Modal>\n  );\n}\n","import React, { useRef, useState } from 'react';\nimport { Select, Typography } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { TOKEN_MINTS } from '@project-serum/serum';\nimport apps from '@project-serum/awesome-serum';\n\nconst { Option } = Select;\n\nconst appsAndTokens = apps.concat(\n  TOKEN_MINTS.map((mint) => {\n    return {\n      name: `${mint.name} SPL`,\n      url: `https://explorer.solana.com/address/${mint.address.toBase58()}`,\n      description: `${mint.name} SPL token`,\n      icon: '',\n      tags: [\n        'token',\n        'blockchain',\n        'solana',\n        'spl',\n        'solana',\n        mint.address.toBase58(),\n      ],\n    };\n  }),\n);\n\ninterface App {\n  name: string;\n  url: string;\n  description: string;\n  tags: string[];\n}\n\nexport default function AppSearch(props) {\n  const [searchMatches, setSearchMatches] = useState<App[]>([]);\n  const [searchValue, setSearchValue] = useState<string | undefined>(undefined);\n\n  const matchApp = (searchString: string, app: App) => {\n    const lowerSearchStr = searchString.toLowerCase();\n    return (\n      app.name.toLowerCase().includes(lowerSearchStr) ||\n      app.tags.some(\n        (tag) =>\n          tag.toLowerCase().includes(lowerSearchStr) ||\n          lowerSearchStr.includes(tag.toLowerCase()),\n      )\n    );\n  };\n\n  const handleSearch = (value) => {\n    setSearchValue(value === '' ? undefined : value);\n    const filteredApps = appsAndTokens.filter((app) => matchApp(value, app));\n    setSearchMatches(filteredApps);\n  };\n\n  const handleSelect = (value, option) => {\n    window.open(option.href, '_blank');\n    handleClear();\n  };\n\n  const handleClear = () => {\n    setSearchMatches([]);\n    setSearchValue(undefined);\n  };\n\n  const options = searchMatches.map((d) => (\n    <Option key={d.name} value={d.name} href={d.url}>\n      <h3>{d.name}</h3>\n      <Typography.Text type=\"secondary\">\n        {d.url.replace('https://', '')}\n      </Typography.Text>\n    </Option>\n  ));\n\n  const ref = useRef<any>();\n  return (\n    <Select\n      ref={ref}\n      showSearch\n      allowClear\n      value={searchValue}\n      placeholder={\n        props.focussed || props.focussed === undefined\n          ? 'Search for dex, swap, wallet, token...'\n          : ''\n      }\n      onSearch={handleSearch}\n      onClear={handleClear}\n      onSelect={handleSelect}\n      onFocus={props.onFocus}\n      onBlur={() => {\n        props.onBlur();\n        handleClear();\n      }}\n      notFoundContent={null} // todo: make this search history\n      style={{\n        width: props.width || '300px',\n        transition: props.focussed ? 'width 0.1s ease 0.1s' : '',\n      }}\n      dropdownStyle={{\n        width: props.width || '300px',\n      }}\n      dropdownMatchSelectWidth={false}\n      suffixIcon={\n        <SearchOutlined onClick={() => ref.current && ref.current.focus()} />\n      }\n      filterOption={false}\n    >\n      {options}\n    </Select>\n  );\n}\n","import {\n  InfoCircleOutlined,\n  PlusCircleOutlined,\n  SettingOutlined,\n} from '@ant-design/icons';\nimport { Button, Col, Menu, Popover, Row, Select } from 'antd';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport logo from '../assets/logo.svg';\nimport styled from 'styled-components';\nimport { useWallet, WALLET_PROVIDERS } from '../utils/wallet';\nimport { ENDPOINTS, useConnectionConfig } from '../utils/connection';\nimport Settings from './Settings';\nimport CustomClusterEndpointDialog from './CustomClusterEndpointDialog';\nimport { EndpointInfo } from '../utils/types';\nimport { notify } from '../utils/notifications';\nimport { Connection } from '@solana/web3.js';\nimport WalletConnect from './WalletConnect';\nimport AppSearch from './AppSearch';\nimport { getTradePageUrl } from '../utils/markets';\n\nconst Wrapper = styled.div`\n  background-color: #0d1017;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  padding: 0px 30px;\n  flex-wrap: wrap;\n`;\nconst LogoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  color: #2abdd2;\n  font-weight: bold;\n  cursor: pointer;\n  img {\n    height: 30px;\n    margin-right: 8px;\n  }\n`;\n\nconst EXTERNAL_LINKS = {\n  '/learn': 'https://serum-academy.com/en/serum-dex/',\n  '/add-market': 'https://serum-academy.com/en/add-market/',\n  '/wallet-support': 'https://serum-academy.com/en/wallet-support',\n  '/dex-list': 'https://serum-academy.com/en/dex-list/',\n  '/developer-resources': 'https://serum-academy.com/en/developer-resources/',\n  '/explorer': 'https://explorer.solana.com',\n  '/srm-faq': 'https://projectserum.com/srm-faq',\n  '/swap': 'https://swap.projectserum.com',\n};\n\nexport default function TopBar() {\n  const { connected, wallet, providerUrl, setProvider } = useWallet();\n  const {\n    endpoint,\n    endpointInfo,\n    setEndpoint,\n    availableEndpoints,\n    setCustomEndpoints,\n  } = useConnectionConfig();\n  const [addEndpointVisible, setAddEndpointVisible] = useState(false);\n  const [testingConnection, setTestingConnection] = useState(false);\n  const location = useLocation();\n  const history = useHistory();\n  const [searchFocussed, setSearchFocussed] = useState(false);\n\n  const handleClick = useCallback(\n    (e) => {\n      if (!(e.key in EXTERNAL_LINKS)) {\n        history.push(e.key);\n      }\n    },\n    [history],\n  );\n\n  const onAddCustomEndpoint = (info: EndpointInfo) => {\n    const existingEndpoint = availableEndpoints.some(\n      (e) => e.endpoint === info.endpoint,\n    );\n    if (existingEndpoint) {\n      notify({\n        message: `An endpoint with the given url already exists`,\n        type: 'error',\n      });\n      return;\n    }\n\n    const handleError = (e) => {\n      console.log(`Connection to ${info.endpoint} failed: ${e}`);\n      notify({\n        message: `Failed to connect to ${info.endpoint}`,\n        type: 'error',\n      });\n    };\n\n    try {\n      const connection = new Connection(info.endpoint, 'recent');\n      connection\n        .getEpochInfo()\n        .then((result) => {\n          setTestingConnection(true);\n          console.log(`testing connection to ${info.endpoint}`);\n          const newCustomEndpoints = [\n            ...availableEndpoints.filter((e) => e.custom),\n            info,\n          ];\n          setEndpoint(info.endpoint);\n          setCustomEndpoints(newCustomEndpoints);\n        })\n        .catch(handleError);\n    } catch (e) {\n      handleError(e);\n    } finally {\n      setTestingConnection(false);\n    }\n  };\n\n  const endpointInfoCustom = endpointInfo && endpointInfo.custom;\n  useEffect(() => {\n    const handler = () => {\n      if (endpointInfoCustom) {\n        setEndpoint(ENDPOINTS[0].endpoint);\n      }\n    };\n    window.addEventListener('beforeunload', handler);\n    return () => window.removeEventListener('beforeunload', handler);\n  }, [endpointInfoCustom, setEndpoint]);\n\n  const tradePageUrl = location.pathname.startsWith('/market/')\n    ? location.pathname\n    : getTradePageUrl();\n\n  return (\n    <>\n      <CustomClusterEndpointDialog\n        visible={addEndpointVisible}\n        testingConnection={testingConnection}\n        onAddCustomEndpoint={onAddCustomEndpoint}\n        onClose={() => setAddEndpointVisible(false)}\n      />\n      <Wrapper>\n        <LogoWrapper onClick={() => history.push(tradePageUrl)}>\n          <img src={logo} alt=\"\" />\n          {'SERUM'}\n        </LogoWrapper>\n        <Menu\n          mode=\"horizontal\"\n          onClick={handleClick}\n          selectedKeys={[location.pathname]}\n          style={{\n            borderBottom: 'none',\n            backgroundColor: 'transparent',\n            display: 'flex',\n            alignItems: 'flex-end',\n            flex: 1,\n          }}\n        >\n          <Menu.Item key={tradePageUrl} style={{ margin: '0 10px 0 20px' }}>\n            TRADE\n          </Menu.Item>\n          {!searchFocussed && (\n            <Menu.Item key=\"/swap\" style={{ margin: '0 10px' }}>\n              <a\n                href={EXTERNAL_LINKS['/swap']}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                SWAP\n              </a>\n            </Menu.Item>\n          )}\n          {connected && (!searchFocussed || location.pathname === '/balances') && (\n            <Menu.Item key=\"/balances\" style={{ margin: '0 10px' }}>\n              BALANCES\n            </Menu.Item>\n          )}\n          {connected && (!searchFocussed || location.pathname === '/orders') && (\n            <Menu.Item key=\"/orders\" style={{ margin: '0 10px' }}>\n              ORDERS\n            </Menu.Item>\n          )}\n          {connected && (!searchFocussed || location.pathname === '/convert') && (\n            <Menu.Item key=\"/convert\" style={{ margin: '0 10px' }}>\n              CONVERT\n            </Menu.Item>\n          )}\n          {(!searchFocussed || location.pathname === '/list-new-market') && (\n            <Menu.Item key=\"/list-new-market\" style={{ margin: '0 10px' }}>\n              ADD MARKET\n            </Menu.Item>\n          )}\n          {!searchFocussed && (\n            <Menu.SubMenu\n              title=\"LEARN\"\n              onTitleClick={() =>\n                window.open(EXTERNAL_LINKS['/learn'], '_blank')\n              }\n              style={{ margin: '0 0px 0 10px' }}\n            >\n              <Menu.Item key=\"/add-market\">\n                <a\n                  href={EXTERNAL_LINKS['/add-market']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Adding a market\n                </a>\n              </Menu.Item>\n              <Menu.Item key=\"/wallet-support\">\n                <a\n                  href={EXTERNAL_LINKS['/wallet-support']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Supported wallets\n                </a>\n              </Menu.Item>\n              <Menu.Item key=\"/dex-list\">\n                <a\n                  href={EXTERNAL_LINKS['/dex-list']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  DEX list\n                </a>\n              </Menu.Item>\n              <Menu.Item key=\"/developer-resources\">\n                <a\n                  href={EXTERNAL_LINKS['/developer-resources']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Developer resources\n                </a>\n              </Menu.Item>\n              <Menu.Item key=\"/explorer\">\n                <a\n                  href={EXTERNAL_LINKS['/explorer']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Solana block explorer\n                </a>\n              </Menu.Item>\n              <Menu.Item key=\"/srm-faq\">\n                <a\n                  href={EXTERNAL_LINKS['/srm-faq']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  SRM FAQ\n                </a>\n              </Menu.Item>\n            </Menu.SubMenu>\n          )}\n        </Menu>\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            paddingRight: 5,\n          }}\n        >\n          <AppSearch\n            onFocus={() => setSearchFocussed(true)}\n            onBlur={() => setSearchFocussed(false)}\n            focussed={searchFocussed}\n            width={searchFocussed ? '350px' : '35px'}\n          />\n        </div>\n        <div>\n          <Row\n            align=\"middle\"\n            style={{ paddingLeft: 5, paddingRight: 5 }}\n            gutter={16}\n          >\n            <Col>\n              <PlusCircleOutlined\n                style={{ color: '#2abdd2' }}\n                onClick={() => setAddEndpointVisible(true)}\n              />\n            </Col>\n            <Col>\n              <Popover\n                content={endpoint}\n                placement=\"bottomRight\"\n                title=\"URL\"\n                trigger=\"hover\"\n              >\n                <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n              </Popover>\n            </Col>\n            <Col>\n              <Select\n                onSelect={setEndpoint}\n                value={endpoint}\n                style={{ marginRight: 8, width: '150px' }}\n              >\n                {availableEndpoints.map(({ name, endpoint }) => (\n                  <Select.Option value={endpoint} key={endpoint}>\n                    {name}\n                  </Select.Option>\n                ))}\n              </Select>\n            </Col>\n          </Row>\n        </div>\n        {connected && (\n          <div>\n            <Popover\n              content={<Settings autoApprove={wallet?.autoApprove} />}\n              placement=\"bottomRight\"\n              title=\"Settings\"\n              trigger=\"click\"\n            >\n              <Button style={{ marginRight: 8 }}>\n                <SettingOutlined />\n                Settings\n              </Button>\n            </Popover>\n          </div>\n        )}\n        <div>\n          <Select onSelect={setProvider} value={providerUrl}>\n            {WALLET_PROVIDERS.map(({ name, url }) => (\n              <Select.Option value={url} key={url}>\n                {name}\n              </Select.Option>\n            ))}\n          </Select>\n        </div>\n        <div>\n          <WalletConnect />\n        </div>\n      </Wrapper>\n    </>\n  );\n}\n","export const helpUrls = {\n  customerSupport: 'https://t.me/ProjectSerum',\n  customerSupportZh: 'https://t.me/ProjectSerum_Chinese',\n  contactEmail: 'mailto:contact@projectserum.com',\n  discord: 'https://discord.gg/EDvudv6',\n  telegram: 'https://t.me/ProjectSerum',\n  github: 'https://github.com/project-serum',\n  projectSerum: 'https://projectserum.com/',\n  developerResources: 'https://projectserum.com/developer-resources',\n  solanaBeach: 'https://solanabeach.io',\n};\n","import React from 'react';\nimport { Layout, Row, Col, Grid } from 'antd';\nimport Link from './Link';\nimport { helpUrls } from './HelpUrls';\nconst { Footer } = Layout;\nconst { useBreakpoint } = Grid;\n\nconst footerElements = [\n  {\n    description: 'Serum Developer Resources',\n    link: helpUrls.developerResources,\n  },\n  { description: 'Discord', link: helpUrls.discord },\n  { description: 'Telegram', link: helpUrls.telegram },\n  { description: 'GitHub', link: helpUrls.github },\n  { description: 'Project Serum', link: helpUrls.projectSerum },\n  { description: 'Solana Network', link: helpUrls.solanaBeach },\n];\n\nexport const CustomFooter = () => {\n  const smallScreen = !useBreakpoint().lg;\n\n  return (\n    <Footer\n      style={{\n        height: '45px',\n        paddingBottom: 10,\n        paddingTop: 10,\n      }}\n    >\n      <Row align=\"middle\" gutter={[16, 4]}>\n        {!smallScreen && (\n          <>\n            <Col flex=\"auto\" />\n            {footerElements.map((elem, index) => {\n              return (\n                <Col key={index + ''}>\n                  <Link external to={elem.link}>\n                    {elem.description}\n                  </Link>\n                </Col>\n              );\n            })}\n          </>\n        )}\n        <Col flex=\"auto\">{/*  <DexProgramSelector />*/}</Col>\n      </Row>\n    </Footer>\n  );\n};\n","import { Layout } from 'antd';\nimport React from 'react';\nimport TopBar from './TopBar';\nimport { CustomFooter as Footer } from './Footer';\nconst { Header, Content } = Layout;\n\nexport default function BasicLayout({ children }) {\n  return (\n    <React.Fragment>\n      <Layout\n        style={{ display: 'flex', minHeight: '100vh', flexDirection: 'column' }}\n      >\n        <Header style={{ padding: 0, minHeight: 64, height: 'unset' }}>\n          <TopBar />\n        </Header>\n        <Content style={{ flex: 1 }}>{children}</Content>\n        <Footer />\n      </Layout>\n    </React.Fragment>\n  );\n}\n","import { PublicKey } from '@solana/web3.js';\nimport React, { ReactElement, useMemo, useState } from 'react';\nimport { useAccountInfo } from '../utils/connection';\nimport { isValidPublicKey } from '../utils/utils';\nimport { ValidateStatus } from 'antd/lib/form/FormItem';\nimport { TokenInstructions } from '@project-serum/serum';\nimport { parseTokenMintData, useMintToTickers } from '../utils/tokens';\nimport { AutoComplete, Form, Tooltip } from 'antd';\nimport Link from './Link';\n\nexport interface MintInfo {\n  address: PublicKey;\n  decimals: number;\n}\n\nexport function useMintInput(\n  name,\n  label: string | ReactElement,\n  tooltip?: string | ReactElement,\n): [ReactElement, MintInfo | null] {\n  const [address, setAddress] = useState('');\n  const [accountInfo, loaded] = useAccountInfo(\n    isValidPublicKey(address) ? new PublicKey(address) : null,\n  );\n\n  const mintToTickers = useMintToTickers();\n  const options = useMemo(() => {\n    return Object.entries(mintToTickers)\n      .filter(\n        ([mintAddress, ticker]) =>\n          mintAddress.includes(address) ||\n          ticker.toLowerCase().includes(address.toLowerCase()),\n      )\n      .map(([mintAddress, ticker]) => ({\n        value: mintAddress,\n        label: (\n          <>\n            {ticker} ({mintAddress})\n          </>\n        ),\n      }));\n  }, [mintToTickers, address]);\n\n  const { validateStatus, hasFeedback, help, mintInfo } = useMemo(() => {\n    let validateStatus: ValidateStatus = '';\n    let hasFeedback = false;\n    let help: string | null = null;\n    let mintInfo: MintInfo | null = null;\n    if (address) {\n      hasFeedback = true;\n      if (accountInfo) {\n        if (\n          accountInfo.owner.equals(TokenInstructions.TOKEN_PROGRAM_ID) &&\n          accountInfo.data.length === 82\n        ) {\n          let parsed = parseTokenMintData(accountInfo.data);\n          if (parsed.initialized) {\n            validateStatus = 'success';\n            mintInfo = {\n              address: new PublicKey(address),\n              decimals: parsed.decimals,\n            };\n          } else {\n            validateStatus = 'error';\n            help = 'Invalid SPL mint';\n          }\n        } else {\n          validateStatus = 'error';\n          help = 'Invalid SPL mint address';\n        }\n      } else if (isValidPublicKey(address) && !loaded) {\n        validateStatus = 'validating';\n      } else {\n        validateStatus = 'error';\n        help = 'Invalid Solana address';\n      }\n    }\n    return { validateStatus, hasFeedback, help, mintInfo };\n  }, [address, accountInfo, loaded]);\n\n  const input = (\n    <Form.Item\n      label={\n        <Tooltip\n          title={\n            <>\n              {tooltip} You can look up token mint addresses on{' '}\n              <Link external to=\"https://sollet.io\">\n                sollet.io\n              </Link>\n              .\n            </>\n          }\n        >\n          {label}\n        </Tooltip>\n      }\n      name={name}\n      validateStatus={validateStatus}\n      hasFeedback={hasFeedback}\n      help={help}\n    >\n      <AutoComplete\n        options={options}\n        value={address}\n        onChange={(value) => setAddress(value)}\n      />\n    </Form.Item>\n  );\n\n  return [input, mintInfo];\n}\n","import React, { useState } from 'react';\nimport { Button, Form, Input, Tooltip, Typography } from 'antd';\nimport { notify } from '../utils/notifications';\nimport { MARKETS } from '@project-serum/serum';\nimport { useConnection } from '../utils/connection';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport styled from 'styled-components';\nimport { useWallet } from '../utils/wallet';\nimport { listMarket } from '../utils/send';\nimport { useMintInput } from '../components/useMintInput';\n\nconst { Text, Title } = Typography;\n\nconst Wrapper = styled.div`\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nexport default function ListNewMarketPage() {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [baseMintInput, baseMintInfo] = useMintInput(\n    'baseMint',\n    <Text>\n      Base Token Mint Address{' '}\n      <Text type=\"secondary\">\n        (e.g. BTC solana address:{' '}\n        {\n          <Text type=\"secondary\" code>\n            9n4nbM75f5Ui33ZbPYXn59EwSgE8CGsHtAeTH5YFeJ9E\n          </Text>\n        }\n        )\n      </Text>\n    </Text>,\n    'The base token is the token being traded. For example, the base token of a BTC/USDT market is BTC.',\n  );\n  const [quoteMintInput, quoteMintInfo] = useMintInput(\n    'quoteMint',\n    <Text>\n      Quote Token Mint Address{' '}\n      <Text type=\"secondary\">\n        (e.g. USDT solana address:{' '}\n        {\n          <Text type=\"secondary\" code>\n            BQcdHdAQW1hczDbBi9hiegXAR7A98Q9jx3X3iBBBDiq4\n          </Text>\n        }\n        )\n      </Text>\n    </Text>,\n    'The quote token is the token used to price trades. For example, the quote token of a BTC/USDT market is USDT.',\n  );\n  const [lotSize, setLotSize] = useState('1');\n  const [tickSize, setTickSize] = useState('0.01');\n  const dexProgramId = MARKETS.find(({ deprecated }) => !deprecated).programId;\n  const [submitting, setSubmitting] = useState(false);\n\n  const [listedMarket, setListedMarket] = useState(null);\n\n  let baseLotSize;\n  let quoteLotSize;\n  if (baseMintInfo && parseFloat(lotSize) > 0) {\n    baseLotSize = Math.round(10 ** baseMintInfo.decimals * parseFloat(lotSize));\n    if (quoteMintInfo && parseFloat(tickSize) > 0) {\n      quoteLotSize = Math.round(\n        parseFloat(lotSize) *\n          10 ** quoteMintInfo.decimals *\n          parseFloat(tickSize),\n      );\n    }\n  }\n\n  const canSubmit =\n    connected &&\n    !!baseMintInfo &&\n    !!quoteMintInfo &&\n    !!baseLotSize &&\n    !!quoteLotSize;\n\n  async function onSubmit() {\n    if (!canSubmit) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const marketAddress = await listMarket({\n        connection,\n        wallet,\n        baseMint: baseMintInfo.address,\n        quoteMint: quoteMintInfo.address,\n        baseLotSize,\n        quoteLotSize,\n        dexProgramId,\n      });\n      setListedMarket(marketAddress);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error listing new market',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <Wrapper>\n      <FloatingElement>\n        <Title level={4}>List New Market</Title>\n        <Form\n          labelCol={{ span: 24 }}\n          wrapperCol={{ span: 24 }}\n          layout={'vertical'}\n          onFinish={onSubmit}\n        >\n          {baseMintInput}\n          {quoteMintInput}\n          <Form.Item\n            label={\n              <Tooltip title=\"Smallest allowed order size. For a BTC/USDT market, this would be in units of BTC.\">\n                Minimum Order Size{' '}\n                <Text type=\"secondary\">(Lot size in e.g. BTC)</Text>\n              </Tooltip>\n            }\n            name=\"lotSize\"\n            initialValue=\"1\"\n            validateStatus={\n              baseMintInfo && quoteMintInfo\n                ? baseLotSize\n                  ? 'success'\n                  : 'error'\n                : null\n            }\n            hasFeedback={baseMintInfo && quoteMintInfo}\n          >\n            <Input\n              value={lotSize}\n              onChange={(e) => setLotSize(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Tooltip title=\"Smallest amount by which prices can move. For a BTC/USDT market, this would be in units of USDT.\">\n                Tick Size{' '}\n                <Text type=\"secondary\">(Price increment in e.g. USDT)</Text>\n              </Tooltip>\n            }\n            name=\"tickSize\"\n            initialValue=\"0.01\"\n            validateStatus={\n              baseMintInfo && quoteMintInfo\n                ? quoteLotSize\n                  ? 'success'\n                  : 'error'\n                : null\n            }\n            hasFeedback={baseMintInfo && quoteMintInfo}\n          >\n            <Input\n              value={tickSize}\n              onChange={(e) => setTickSize(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <Form.Item label=\" \" colon={false}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              disabled={!canSubmit}\n              loading={submitting}\n            >\n              {connected ? 'Submit' : 'Not connected to wallet'}\n            </Button>\n          </Form.Item>\n        </Form>\n      </FloatingElement>\n      {listedMarket ? (\n        <FloatingElement>\n          <Text>New market address: {listedMarket.toBase58()}</Text>\n        </FloatingElement>\n      ) : null}\n    </Wrapper>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n  AutoComplete,\n  Button,\n  Form,\n  Input,\n  Switch,\n  Tooltip,\n  Typography,\n} from 'antd';\nimport { PublicKey } from '@solana/web3.js';\nimport { useConnection } from '../../utils/connection';\nimport FloatingElement from '../../components/layout/FloatingElement';\nimport styled from 'styled-components';\nimport { useWallet } from '../../utils/wallet';\nimport { sendSignedTransaction, signTransactions } from '../../utils/send';\nimport { useMintInput } from '../../components/useMintInput';\nimport { PoolTransactions } from '@project-serum/pool';\nimport { useTokenAccounts } from '../../utils/markets';\nimport BN from 'bn.js';\nimport { notify } from '../../utils/notifications';\nimport Link from '../../components/Link';\n\nconst { Text, Title } = Typography;\n\nconst Wrapper = styled.div`\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nconst AddRemoveTokenButtons = styled.div`\n  margin-top: 16px;\n  margin-bottom: 16px;\n`;\n\nconst SIMPLE_POOL_PROGRAM_ID = '71JS8f7y7ASMbuuSMCVG7a3qDdcVco2qYD6bMJeZqUCm';\nconst ADMIN_CONTROLLED_POOL_PROGRAM_ID =\n  'WvmTNLpGMVbwJVYztYL4Hnsy82cJhQorxjnnXcRm3b6';\nconst DEFAULT_PROGRAM_ID = ADMIN_CONTROLLED_POOL_PROGRAM_ID;\nconst PROGRAM_ID_OPTIONS = [\n  {\n    label: `Simple Pool (${SIMPLE_POOL_PROGRAM_ID})`,\n    value: SIMPLE_POOL_PROGRAM_ID,\n  },\n  {\n    label: `Admin-Controlled Pool (${ADMIN_CONTROLLED_POOL_PROGRAM_ID})`,\n    value: ADMIN_CONTROLLED_POOL_PROGRAM_ID,\n  },\n];\n\nexport default function NewPoolPage() {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [poolName, setPoolName] = useState('');\n  const [programId, setProgramId] = useState(DEFAULT_PROGRAM_ID);\n  const [initialSupply, setInitialSupply] = useState('1');\n  const [initialAssets, setInitialAssets] = useState<InitialAsset[]>([\n    { valid: false },\n    { valid: false },\n  ]);\n  const [adminControlled, setAdminControlled] = useState(false);\n  const [adminAddress, setAdminAddress] = useState('');\n  const [tokenAccounts] = useTokenAccounts();\n  const [submitting, setSubmitting] = useState(false);\n  const [newPoolAddress, setNewPoolAddress] = useState<PublicKey | null>(null);\n\n  useEffect(() => {\n    if (programId === SIMPLE_POOL_PROGRAM_ID) {\n      setAdminControlled(false);\n    } else if (programId === ADMIN_CONTROLLED_POOL_PROGRAM_ID) {\n      setAdminControlled(true);\n    }\n  }, [programId]);\n\n  useEffect(() => {\n    if (connected) {\n      setAdminAddress(wallet.publicKey.toBase58());\n    }\n  }, [wallet, connected]);\n\n  const canSubmit =\n    connected &&\n    poolName.trim() &&\n    programId &&\n    parseFloat(initialSupply) > 0 &&\n    initialAssets.every((asset) => asset.valid) &&\n    tokenAccounts &&\n    (adminAddress || !adminControlled);\n\n  async function onSubmit() {\n    if (!canSubmit) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const assets = initialAssets as ValidInitialAsset[];\n      const [\n        poolAddress,\n        transactionsAndSigners,\n      ] = await PoolTransactions.initializeSimplePool({\n        connection,\n        programId: new PublicKey(programId),\n        poolName,\n        poolStateSpace: 1024,\n        poolMintDecimals: 6,\n        initialPoolMintSupply: new BN(\n          Math.round(10 ** 6 * parseFloat(initialSupply)),\n        ),\n        assetMints: assets.map((asset) => asset.mint),\n        initialAssetQuantities: assets.map((asset) => new BN(asset.quantity)),\n        creator: wallet.publicKey,\n        creatorAssets: assets.map((asset) => {\n          const found = tokenAccounts?.find((tokenAccount) =>\n            tokenAccount.effectiveMint.equals(asset.mint),\n          );\n          if (!found) {\n            throw new Error('No token account for ' + asset.mint.toBase58());\n          }\n          return found.pubkey;\n        }),\n        additionalAccounts: adminControlled\n          ? [\n              {\n                pubkey: new PublicKey(adminAddress),\n                isSigner: false,\n                isWritable: false,\n              },\n            ]\n          : [],\n      });\n      const signed = await signTransactions({\n        transactionsAndSigners,\n        wallet,\n        connection,\n      });\n      for (let signedTransaction of signed) {\n        await sendSignedTransaction({ signedTransaction, connection });\n      }\n      setNewPoolAddress(poolAddress);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error creating new pool',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <Wrapper>\n      <FloatingElement>\n        <Title level={4}>Create new pool</Title>\n        <Form layout=\"vertical\" onFinish={onSubmit}>\n          <Form.Item\n            label={\n              <Tooltip title=\"Public name of the pool.\">Pool Name</Tooltip>\n            }\n            name=\"name\"\n          >\n            <Input\n              value={poolName}\n              onChange={(e) => setPoolName(e.target.value)}\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Tooltip title=\"Address of the pool program.\">\n                Program ID{' '}\n                <Text type=\"secondary\">(e.g. {DEFAULT_PROGRAM_ID})</Text>\n              </Tooltip>\n            }\n            name=\"programId\"\n            initialValue={DEFAULT_PROGRAM_ID}\n          >\n            <AutoComplete\n              value={programId}\n              onChange={(value) => setProgramId(value)}\n              options={PROGRAM_ID_OPTIONS}\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Tooltip title=\"Initial number of pool tokens to mint to your account.\">\n                Initial Pool Token Supply\n              </Tooltip>\n            }\n            name=\"initialSupply\"\n            initialValue=\"1\"\n          >\n            <Input\n              value={initialSupply}\n              onChange={(e) => setInitialSupply(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <AddRemoveTokenButtons>\n            <Button\n              onClick={() =>\n                setInitialAssets((assets) => assets.concat({ valid: false }))\n              }\n            >\n              Add token\n            </Button>{' '}\n            <Button\n              onClick={() =>\n                setInitialAssets((assets) => assets.slice(0, assets.length - 1))\n              }\n              disabled={initialAssets.length <= 1}\n            >\n              Remove token\n            </Button>\n          </AddRemoveTokenButtons>\n          {initialAssets.map((asset, i) => (\n            <AssetInput setInitialAssets={setInitialAssets} index={i} key={i} />\n          ))}\n          <Form.Item\n            label={\n              <Tooltip title=\"Whether the assets in the pool can be controlled by the pool admin.\">\n                Admin Controlled\n              </Tooltip>\n            }\n            name=\"adminControlled\"\n          >\n            <Switch\n              checked={adminControlled}\n              onChange={(checked) => setAdminControlled(checked)}\n              disabled={\n                programId === SIMPLE_POOL_PROGRAM_ID ||\n                programId === ADMIN_CONTROLLED_POOL_PROGRAM_ID\n              }\n            />\n          </Form.Item>\n          {adminControlled ? (\n            <Form.Item\n              label={\n                <Tooltip title=\"Address of the pool admin account.\">\n                  Admin Address\n                </Tooltip>\n              }\n            >\n              <Input\n                value={adminAddress}\n                onChange={(e) => setAdminAddress(e.target.value.trim())}\n              />\n            </Form.Item>\n          ) : null}\n          <Form.Item label=\" \" colon={false}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              disabled={!canSubmit}\n              loading={submitting}\n            >\n              {connected ? 'Submit' : 'Not connected to wallet'}\n            </Button>\n          </Form.Item>\n        </Form>\n      </FloatingElement>\n      {newPoolAddress ? (\n        <FloatingElement>\n          <Text>\n            New pool address:{' '}\n            <Link to={`/pools/${newPoolAddress.toBase58()}`}>\n              {newPoolAddress.toBase58()}\n            </Link>\n          </Text>\n        </FloatingElement>\n      ) : null}\n    </Wrapper>\n  );\n}\n\ntype InitialAsset = { valid: false } | ValidInitialAsset;\ninterface ValidInitialAsset {\n  valid: true;\n  mint: PublicKey;\n  quantity: number;\n}\n\nfunction AssetInput({ setInitialAssets, index }) {\n  const [mintInput, mintInfo] = useMintInput(\n    `mint${index}`,\n    <Text>Token {index + 1} Mint Address</Text>,\n    <>Token mint address for token {index + 1}.</>,\n  );\n  const [quantity, setQuantity] = useState('');\n\n  useEffect(() => {\n    let change: InitialAsset;\n    if (mintInfo && parseFloat(quantity) >= 0) {\n      let parsedQuantity = Math.round(\n        10 ** mintInfo.decimals * parseFloat(quantity),\n      );\n      change = {\n        mint: mintInfo.address,\n        quantity: parsedQuantity,\n        valid: true,\n      };\n    } else {\n      change = { valid: false };\n    }\n    setInitialAssets((assets: InitialAsset[]) =>\n      assets.map((old, i) => (i === index ? change : old)),\n    );\n  }, [setInitialAssets, index, mintInfo, quantity]);\n\n  return (\n    <>\n      {mintInput}\n      <Form.Item\n        label={\n          <Tooltip\n            title={\n              <>\n                Initial quantity of token {index + 1} to deposit into the pool.\n              </>\n            }\n          >\n            Token {index + 1} Initial Quantity\n          </Tooltip>\n        }\n        name={`quantity${index}`}\n        validateStatus={'success'}\n      >\n        <Input\n          value={quantity}\n          onChange={(e) => setQuantity(e.target.value.trim())}\n          type=\"number\"\n          min=\"0\"\n          step=\"any\"\n        />\n      </Form.Item>\n    </>\n  );\n}\n","import React from 'react';\nimport { PublicKey } from '@solana/web3.js';\nimport { abbreviateAddress } from '../utils/utils';\nimport { useMintToTickers } from '../utils/tokens';\nimport { Popover } from 'antd';\nimport LinkAddress from './LinkAddress';\nimport { InfoCircleOutlined } from '@ant-design/icons';\n\nexport function MintName({\n  mint,\n  showAddress = false,\n}: {\n  mint: string | PublicKey | null | undefined;\n  showAddress?: boolean;\n}) {\n  const mintToTickers = useMintToTickers();\n  if (!mint) {\n    return null;\n  }\n  const mintKey = typeof mint === 'string' ? new PublicKey(mint) : mint;\n  const mintAddress = typeof mint === 'string' ? mint : mint.toBase58();\n  const ticker = mintToTickers[mintAddress] ?? abbreviateAddress(mintKey);\n\n  return (\n    <>\n      {ticker}\n      {showAddress ? (\n        <>\n          {' '}\n          <Popover\n            content={<LinkAddress address={mintAddress} />}\n            placement=\"bottomRight\"\n            title=\"Token mint\"\n            trigger=\"hover\"\n          >\n            <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n          </Popover>\n        </>\n      ) : null}\n    </>\n  );\n}\n","import { Basket, PoolInfo } from '@project-serum/pool';\nimport React from 'react';\nimport BN from 'bn.js';\nimport { PublicKey } from '@solana/web3.js';\nimport { useAccountInfo } from '../../../utils/connection';\nimport { parseTokenMintData } from '../../../utils/tokens';\nimport { Spin } from 'antd';\nimport { MintName } from '../../../components/MintName';\n\ninterface BasketDisplayProps {\n  poolInfo: PoolInfo;\n  basket?: Basket | null | undefined;\n}\n\nexport default function PoolBasketDisplay({\n  poolInfo,\n  basket,\n}: BasketDisplayProps) {\n  return (\n    <ul>\n      {poolInfo.state.assets.map((asset, index) => (\n        <BasketItem\n          key={index}\n          mint={asset.mint}\n          quantity={basket?.quantities[index]}\n        />\n      ))}\n    </ul>\n  );\n}\n\ninterface BasketItemProps {\n  mint: PublicKey;\n  quantity?: BN;\n}\n\nfunction BasketItem({ mint, quantity }: BasketItemProps) {\n  const [mintAccountInfo] = useAccountInfo(mint);\n  let quantityDisplay = <Spin size=\"small\" />;\n  if (mintAccountInfo && quantity) {\n    const mintInfo = parseTokenMintData(mintAccountInfo.data);\n    quantityDisplay = <>{quantity.toNumber() / 10 ** mintInfo.decimals}</>;\n  }\n\n  return (\n    <li>\n      {quantityDisplay} <MintName mint={mint} showAddress />\n    </li>\n  );\n}\n","import { getPoolBasket, PoolInfo } from '@project-serum/pool';\nimport React from 'react';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { Typography } from 'antd';\nimport { MintInfo } from '../../../utils/tokens';\nimport { useAsyncData } from '../../../utils/fetch-loop';\nimport { useConnection } from '../../../utils/connection';\nimport tuple from 'immutable-tuple';\nimport PoolBasketDisplay from './PoolBasketDisplay';\n\nconst { Text, Paragraph } = Typography;\n\ninterface PoolInfoProps {\n  poolInfo: PoolInfo;\n  mintInfo: MintInfo;\n}\n\nconst feeFormat = new Intl.NumberFormat(undefined, {\n  style: 'percent',\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 6,\n});\n\nexport default function PoolInfoPanel({ poolInfo, mintInfo }: PoolInfoProps) {\n  const connection = useConnection();\n\n  const [totalBasket] = useAsyncData(\n    () => getPoolBasket(connection, poolInfo, { redeem: mintInfo.supply }),\n    tuple(getPoolBasket, connection, poolInfo, 'total', mintInfo),\n  );\n\n  return (\n    <FloatingElement stretchVertical>\n      <Paragraph>Name: {poolInfo.state.name}</Paragraph>\n      <Paragraph>\n        Address: <Text copyable>{poolInfo.address.toBase58()}</Text>\n      </Paragraph>\n      <Paragraph>\n        Pool token mint address:{' '}\n        <Text copyable>{poolInfo.state.poolTokenMint.toBase58()}</Text>\n      </Paragraph>\n      {poolInfo.state.adminKey ? (\n        <Paragraph>\n          Pool admin: <Text copyable>{poolInfo.state.adminKey.toBase58()}</Text>\n        </Paragraph>\n      ) : null}\n      <Paragraph>\n        Fee rate: {feeFormat.format(poolInfo.state.feeRate / 1_000_000)}\n      </Paragraph>\n      <Paragraph>\n        Total supply: {mintInfo.supply.toNumber() / 10 ** mintInfo.decimals}\n      </Paragraph>\n      <Text>Total assets:</Text>\n      <div>\n        <PoolBasketDisplay poolInfo={poolInfo} basket={totalBasket} />\n      </div>\n    </FloatingElement>\n  );\n}\n","import { getPoolBasket, PoolInfo, PoolTransactions } from '@project-serum/pool';\nimport React, { useMemo, useState } from 'react';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { Button, Input, Spin, Tabs, Typography } from 'antd';\nimport { MintInfo } from '../../../utils/tokens';\nimport { useAsyncData } from '../../../utils/fetch-loop';\nimport { useConnection } from '../../../utils/connection';\nimport { PublicKey } from '@solana/web3.js';\nimport tuple from 'immutable-tuple';\nimport PoolBasketDisplay from './PoolBasketDisplay';\nimport BN from 'bn.js';\nimport { notify } from '../../../utils/notifications';\nimport { useWallet } from '../../../utils/wallet';\nimport { useTokenAccounts } from '../../../utils/markets';\nimport { sendTransaction } from '../../../utils/send';\n\nconst { Text } = Typography;\nconst { TabPane } = Tabs;\n\ninterface PoolCreateRedeemPanel {\n  poolInfo: PoolInfo;\n  mintInfo: MintInfo;\n}\n\nexport default function PoolCreateRedeemPanel({\n  poolInfo,\n  mintInfo,\n}: PoolCreateRedeemPanel) {\n  return (\n    <FloatingElement stretchVertical>\n      <Tabs>\n        <TabPane tab=\"Create\" key=\"create\">\n          <CreateRedeemTab\n            poolInfo={poolInfo}\n            mintInfo={mintInfo}\n            tab=\"create\"\n          />\n        </TabPane>\n        <TabPane tab=\"Redeem\" key=\"redeem\">\n          <CreateRedeemTab\n            poolInfo={poolInfo}\n            mintInfo={mintInfo}\n            tab=\"redeem\"\n          />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\ninterface CreateRedeemInnerPanel {\n  poolInfo: PoolInfo;\n  mintInfo: MintInfo;\n  tab: string;\n}\n\nfunction CreateRedeemTab({ poolInfo, mintInfo, tab }: CreateRedeemInnerPanel) {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [quantity, setQuantity] = useState('');\n  const [tokenAccounts] = useTokenAccounts();\n  const [submitting, setSubmitting] = useState(false);\n\n  const action = useMemo(() => {\n    const parsedQuantity = Math.round(\n      parseFloat(quantity) * 10 ** mintInfo.decimals,\n    );\n    if (parsedQuantity > 0) {\n      if (tab === 'create') {\n        return { create: new BN(parsedQuantity) };\n      } else {\n        return { redeem: new BN(parsedQuantity) };\n      }\n    }\n    return null;\n  }, [mintInfo.decimals, quantity, tab]);\n\n  const [basket, basketLoaded] = useAsyncData(\n    async () =>\n      action ? await getPoolBasket(connection, poolInfo, action) : null,\n    tuple(getPoolBasket, connection, poolInfo.address.toBase58(), action),\n  );\n\n  function findTokenAccount(mint: PublicKey): PublicKey {\n    const account = tokenAccounts?.find((account) =>\n      account.effectiveMint.equals(mint),\n    );\n    if (account) {\n      return account.pubkey;\n    }\n    throw new Error('No token account for ' + mint.toBase58());\n  }\n\n  const canSubmit = connected && action && basket;\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    if (!action || !basket || !connected || !canSubmit) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const { transaction, signers } = PoolTransactions.execute(\n        poolInfo,\n        action,\n        {\n          owner: wallet.publicKey,\n          poolTokenAccount: findTokenAccount(poolInfo.state.poolTokenMint),\n          assetAccounts: poolInfo.state.assets.map((asset) =>\n            findTokenAccount(asset.mint),\n          ),\n        },\n        basket,\n      );\n      await sendTransaction({ connection, wallet, transaction, signers });\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message:\n          'Error ' +\n          (tab === 'create' ? 'creating' : 'redeeming') +\n          ' pool tokens',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Input\n        addonBefore={<>Quantity</>}\n        value={quantity}\n        onChange={(e) => setQuantity(e.target.value.trim())}\n        style={{ marginBottom: 24 }}\n      />\n      <div>\n        {!basket ? (\n          basketLoaded ? null : (\n            <Spin />\n          )\n        ) : (\n          <>\n            <Text>{tab === 'create' ? 'Cost' : 'Proceeds'}: </Text>\n            <Text type=\"secondary\">(indicative only)</Text>\n            <PoolBasketDisplay poolInfo={poolInfo} basket={basket} />\n          </>\n        )}\n      </div>\n      <Button\n        htmlType=\"submit\"\n        type=\"primary\"\n        disabled={!canSubmit || submitting}\n      >\n        {!connected ? 'Wallet not connected' : 'Submit'}\n      </Button>\n    </form>\n  );\n}\n","import { PoolInfo } from '@project-serum/pool';\nimport React from 'react';\nimport { PublicKey } from '@solana/web3.js';\nimport { useAccountInfo } from '../../../utils/connection';\nimport {\n  parseTokenAccountData,\n  parseTokenMintData,\n} from '../../../utils/tokens';\nimport { Button, Spin, Tabs } from 'antd';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { useTokenAccounts } from '../../../utils/markets';\nimport { MintName } from '../../../components/MintName';\nimport { LinkOutlined } from '@ant-design/icons';\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\n\nconst { TabPane } = Tabs;\n\nexport default function PoolBalancesPanel({\n  poolInfo,\n}: {\n  poolInfo: PoolInfo;\n}) {\n  return (\n    <FloatingElement>\n      <Tabs>\n        <TabPane tab=\"Wallet Balances\" key=\"wallet\">\n          <WalletBalancesTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Pool Balances\" key=\"pool\">\n          <PoolBalancesTab poolInfo={poolInfo} />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\nfunction WalletBalancesTab({ poolInfo }: { poolInfo: PoolInfo }) {\n  const [tokenAccounts] = useTokenAccounts();\n  return (\n    <ul>\n      {[\n        poolInfo.state.poolTokenMint,\n        ...poolInfo.state.assets.map((asset) => asset.mint),\n      ].map((mint, index) => {\n        const tokenAccount = tokenAccounts?.find((account) =>\n          account.effectiveMint.equals(mint),\n        );\n        if (!tokenAccount) {\n          return null;\n        }\n        return (\n          <BalanceItem\n            key={index}\n            mint={mint}\n            publicKey={tokenAccount.pubkey}\n            isPoolToken={mint.equals(poolInfo.state.poolTokenMint)}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction PoolBalancesTab({ poolInfo }: { poolInfo: PoolInfo }) {\n  return (\n    <ul>\n      {poolInfo.state.assets.map((asset, index) => {\n        return (\n          <BalanceItem\n            key={index}\n            mint={asset.mint}\n            publicKey={asset.vaultAddress}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\ninterface BalanceItemProps {\n  mint: PublicKey;\n  publicKey: PublicKey;\n  isPoolToken?: boolean;\n}\n\nfunction BalanceItem({ mint, publicKey, isPoolToken }: BalanceItemProps) {\n  const [mintAccountInfo] = useAccountInfo(mint);\n  const [balanceAccountInfo] = useAccountInfo(publicKey);\n  let quantityDisplay = <Spin size=\"small\" />;\n  if (mintAccountInfo && balanceAccountInfo) {\n    const mintInfo = parseTokenMintData(mintAccountInfo.data);\n    if (mint.equals(WRAPPED_SOL_MINT)) {\n      quantityDisplay = (\n        <>{balanceAccountInfo.lamports / 10 ** mintInfo.decimals}</>\n      );\n    } else {\n      const accountInfo = parseTokenAccountData(balanceAccountInfo.data);\n      quantityDisplay = <>{accountInfo.amount / 10 ** mintInfo.decimals}</>;\n    }\n  }\n\n  return (\n    <li>\n      {quantityDisplay}{' '}\n      {isPoolToken ? (\n        <>\n          Pool Token (<MintName mint={mint} />)\n        </>\n      ) : (\n        <MintName mint={mint} />\n      )}{' '}\n      <Button\n        type=\"link\"\n        icon={<LinkOutlined />}\n        href={'https://explorer.solana.com/address/' + publicKey.toBase58()}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      />\n    </li>\n  );\n}\n","import React, { FormEvent, useMemo, useState } from 'react';\nimport { AdminControlledPoolInstructions, PoolInfo } from '@project-serum/pool';\nimport { TokenInstructions } from '@project-serum/serum';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { useConnection } from '../../../utils/connection';\nimport { useWallet } from '../../../utils/wallet';\nimport {\n  getSelectedTokenAccountForMint,\n  useTokenAccounts,\n} from '../../../utils/markets';\nimport { sendTransaction } from '../../../utils/send';\nimport { notify } from '../../../utils/notifications';\nimport {\n  Account,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n} from '@solana/web3.js';\nimport { AutoComplete, Button, Input, Select, Tabs } from 'antd';\nimport {\n  createAssociatedTokenAccount,\n  getAssociatedTokenAddress,\n} from '@project-serum/associated-token';\nimport { parseTokenMintData, useMintToTickers } from '../../../utils/tokens';\nimport BN from 'bn.js';\nimport { refreshAllCaches } from '../../../utils/fetch-loop';\n\nconst { TabPane } = Tabs;\nconst { Option } = Select;\n\nexport function PoolAdminPanel({ poolInfo }: { poolInfo: PoolInfo }) {\n  return (\n    <FloatingElement>\n      <Tabs>\n        <TabPane tab=\"Pause/Unpause\" key=\"pause\">\n          <PauseUnpauseTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Add Token\" key=\"addAsset\">\n          <AddAssetTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Remove Token\" key=\"removeAsset\">\n          <RemoveAssetTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Deposit\" key=\"deposit\">\n          <DepositTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Withdraw\" key=\"withdraw\">\n          <WithdrawTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Modify Fee\" key=\"updateFee\">\n          <UpdateFeeTab poolInfo={poolInfo} />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\ninterface TabParams {\n  poolInfo: PoolInfo;\n}\n\nfunction PauseUnpauseTab({ poolInfo }: TabParams) {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [submitting, setSubmitting] = useState(false);\n\n  async function sendPause() {\n    if (!connected) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const transaction = new Transaction();\n      transaction.add(AdminControlledPoolInstructions.pause(poolInfo));\n      await sendTransaction({ connection, wallet, transaction });\n    } catch (e) {\n      notify({\n        message: 'Error pausing pool',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  async function sendUnpause() {\n    if (!connected) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const transaction = new Transaction();\n      transaction.add(AdminControlledPoolInstructions.unpause(poolInfo));\n      await sendTransaction({ connection, wallet, transaction });\n    } catch (e) {\n      notify({\n        message: 'Error unpausing pool',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <>\n      <Button onClick={sendPause} disabled={submitting}>\n        Pause\n      </Button>{' '}\n      <Button onClick={sendUnpause} disabled={submitting}>\n        Unpause\n      </Button>\n    </>\n  );\n}\n\nfunction AddAssetTab({ poolInfo }: TabParams) {\n  const connection = useConnection();\n  const [address, setAddress] = useState('');\n  const { wallet, connected } = useWallet();\n  const canSubmit = connected && address;\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'adding asset to pool',\n    async () => {\n      const mintAddress = new PublicKey(address);\n      const vaultAddress = await getAssociatedTokenAddress(\n        poolInfo.state.vaultSigner,\n        mintAddress,\n      );\n      const transaction = new Transaction();\n      if (!(await connection.getAccountInfo(vaultAddress))) {\n        transaction.add(\n          await createAssociatedTokenAccount(\n            wallet.publicKey,\n            poolInfo.state.vaultSigner,\n            mintAddress,\n          ),\n        );\n      }\n      transaction.add(\n        AdminControlledPoolInstructions.addAsset(poolInfo, vaultAddress),\n      );\n      return [transaction, []];\n    },\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <MintSelector\n        label=\"Token Mint Address\"\n        value={address}\n        onChange={(value) => setAddress(value)}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction RemoveAssetTab({ poolInfo }: TabParams) {\n  const [address, setAddress] = useState('');\n  const { connected } = useWallet();\n  const canSubmit = connected && address;\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'removing asset from pool',\n    async () => {\n      const mintAddress = new PublicKey(address);\n      const vaultAddress = poolInfo.state.assets.find((asset) =>\n        asset.mint.equals(mintAddress),\n      )?.vaultAddress;\n      if (!vaultAddress) {\n        throw new Error('Asset not in pool');\n      }\n      const transaction = new Transaction();\n      transaction.add(\n        AdminControlledPoolInstructions.removeAsset(poolInfo, vaultAddress),\n      );\n      return [transaction, []];\n    },\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <MintInPoolSelector\n        poolInfo={poolInfo}\n        label=\"Token Mint Address\"\n        value={address}\n        onChange={(value) => setAddress(value)}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction DepositTab({ poolInfo }: TabParams) {\n  const [address, setAddress] = useState('');\n  const [quantity, setQuantity] = useState('');\n\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [tokenAccounts] = useTokenAccounts();\n  const canSubmit =\n    connected && address && tokenAccounts && parseFloat(quantity);\n\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'depositing to pool',\n    async () => {\n      const mintAddress = new PublicKey(address);\n      const vaultAddress = poolInfo.state.assets.find((asset) =>\n        asset.mint.equals(mintAddress),\n      )?.vaultAddress;\n      if (!vaultAddress) {\n        throw new Error('Asset not in pool');\n      }\n\n      const walletTokenAccount = getSelectedTokenAccountForMint(\n        tokenAccounts,\n        mintAddress,\n      );\n      if (!walletTokenAccount) {\n        throw new Error('Asset not in wallet');\n      }\n\n      const mintAccountInfo = await connection.getAccountInfo(mintAddress);\n      if (!mintAccountInfo) {\n        throw new Error('Mint not found');\n      }\n      const mintDecimals = parseTokenMintData(mintAccountInfo.data).decimals;\n      const parsedQuantity = Math.round(\n        parseFloat(quantity) * 10 ** mintDecimals,\n      );\n\n      const wrappedSolAccount =\n        mintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT) &&\n        walletTokenAccount.pubkey.equals(wallet.publicKey)\n          ? new Account()\n          : null;\n\n      const transaction = new Transaction();\n      const signers: Account[] = [];\n      if (wrappedSolAccount) {\n        transaction.add(\n          SystemProgram.createAccount({\n            fromPubkey: wallet.publicKey,\n            lamports: parsedQuantity + 2.04e6,\n            newAccountPubkey: wrappedSolAccount.publicKey,\n            programId: TokenInstructions.TOKEN_PROGRAM_ID,\n            space: 165,\n          }),\n          TokenInstructions.initializeAccount({\n            account: wrappedSolAccount.publicKey,\n            mint: TokenInstructions.WRAPPED_SOL_MINT,\n            owner: wallet.publicKey,\n          }),\n          TokenInstructions.transfer({\n            source: wrappedSolAccount.publicKey,\n            destination: vaultAddress,\n            amount: parsedQuantity,\n            owner: wallet.publicKey,\n          }),\n          TokenInstructions.closeAccount({\n            source: wrappedSolAccount.publicKey,\n            destination: walletTokenAccount.pubkey,\n            owner: wallet.publicKey,\n          }),\n        );\n        signers.push(wrappedSolAccount);\n      } else {\n        transaction.add(\n          TokenInstructions.transfer({\n            source: walletTokenAccount.pubkey,\n            destination: vaultAddress,\n            amount: parsedQuantity,\n            owner: wallet.publicKey,\n          }),\n        );\n      }\n      return [transaction, signers];\n    },\n    true,\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <MintInPoolSelector\n        poolInfo={poolInfo}\n        label=\"Token Mint Address\"\n        value={address}\n        onChange={(value) => setAddress(value)}\n        style={{ marginBottom: 24 }}\n      />\n      <Input\n        addonBefore={<>Quantity</>}\n        value={quantity}\n        onChange={(e) => setQuantity(e.target.value.trim())}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction WithdrawTab({ poolInfo }: TabParams) {\n  const [address, setAddress] = useState('');\n  const [quantity, setQuantity] = useState('');\n\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [tokenAccounts] = useTokenAccounts();\n  const canSubmit =\n    connected && address && tokenAccounts && parseFloat(quantity);\n\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'withdrawing from pool',\n    async () => {\n      const mintAddress = new PublicKey(address);\n      const vaultAddress = poolInfo.state.assets.find((asset) =>\n        asset.mint.equals(mintAddress),\n      )?.vaultAddress;\n      if (!vaultAddress) {\n        throw new Error('Asset not in pool');\n      }\n\n      const walletTokenAccount = getSelectedTokenAccountForMint(\n        tokenAccounts,\n        mintAddress,\n      );\n      if (!walletTokenAccount) {\n        throw new Error('Asset not in wallet');\n      }\n\n      const mintAccountInfo = await connection.getAccountInfo(mintAddress);\n      if (!mintAccountInfo) {\n        throw new Error('Mint not found');\n      }\n      const mintDecimals = parseTokenMintData(mintAccountInfo.data).decimals;\n      const parsedQuantity = Math.round(\n        parseFloat(quantity) * 10 ** mintDecimals,\n      );\n\n      const wrappedSolAccount =\n        mintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT) &&\n        walletTokenAccount.pubkey.equals(wallet.publicKey)\n          ? new Account()\n          : null;\n\n      const transaction = new Transaction();\n      const signers: Account[] = [];\n      if (wrappedSolAccount) {\n        transaction.add(\n          SystemProgram.createAccount({\n            fromPubkey: wallet.publicKey,\n            lamports: 2.04e6,\n            newAccountPubkey: wrappedSolAccount.publicKey,\n            programId: TokenInstructions.TOKEN_PROGRAM_ID,\n            space: 165,\n          }),\n          TokenInstructions.initializeAccount({\n            account: wrappedSolAccount.publicKey,\n            mint: TokenInstructions.WRAPPED_SOL_MINT,\n            owner: wallet.publicKey,\n          }),\n        );\n        signers.push(wrappedSolAccount);\n      }\n      transaction.add(\n        AdminControlledPoolInstructions.approveDelegate(\n          poolInfo,\n          vaultAddress,\n          wallet.publicKey,\n          new BN(parsedQuantity),\n        ),\n      );\n      if (wrappedSolAccount) {\n        transaction.add(\n          TokenInstructions.transfer({\n            source: vaultAddress,\n            destination: wrappedSolAccount.publicKey,\n            amount: parsedQuantity,\n            owner: wallet.publicKey,\n          }),\n          TokenInstructions.closeAccount({\n            source: wrappedSolAccount.publicKey,\n            destination: walletTokenAccount.pubkey,\n            owner: wallet.publicKey,\n          }),\n        );\n      } else {\n        transaction.add(\n          TokenInstructions.transfer({\n            source: vaultAddress,\n            destination: walletTokenAccount.pubkey,\n            amount: parsedQuantity,\n            owner: wallet.publicKey,\n          }),\n        );\n      }\n      return [transaction, signers];\n    },\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <MintInPoolSelector\n        poolInfo={poolInfo}\n        label=\"Token Mint Address\"\n        value={address}\n        onChange={(value) => setAddress(value)}\n        style={{ marginBottom: 24 }}\n      />\n      <Input\n        addonBefore={<>Quantity</>}\n        value={quantity}\n        onChange={(e) => setQuantity(e.target.value.trim())}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction UpdateFeeTab({ poolInfo }: TabParams) {\n  const [feeRate, setFeeRate] = useState('');\n\n  const { connected } = useWallet();\n  const [tokenAccounts] = useTokenAccounts();\n  const canSubmit = connected && tokenAccounts && parseFloat(feeRate);\n\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'changing pool fee',\n    async () => {\n      const transaction = new Transaction();\n      transaction.add(\n        AdminControlledPoolInstructions.updateFee(\n          poolInfo,\n          Math.round(parseFloat(feeRate) * 1_000_000),\n        ),\n      );\n      return [transaction, []];\n    },\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Input\n        addonBefore={<>Fee Rate</>}\n        value={feeRate}\n        onChange={(e) => setFeeRate(e.target.value.trim())}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction useOnSubmitHandler(\n  description: string,\n  makeTransaction: () => Promise<[Transaction, Account[]]>,\n  refresh = false,\n): [(FormEvent) => void, boolean] {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [submitting, setSubmitting] = useState(false);\n\n  async function onSubmit(e: FormEvent) {\n    e.preventDefault();\n    if (submitting) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      if (!connected) {\n        throw new Error('Wallet not connected');\n      }\n      const [transaction, signers] = await makeTransaction();\n      await sendTransaction({ connection, wallet, transaction, signers });\n      if (refresh) {\n        refreshAllCaches();\n      }\n    } catch (e) {\n      notify({\n        message: `Error ${description}`,\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return [onSubmit, submitting];\n}\n\nfunction SubmitButton({ canSubmit, submitting }) {\n  const { connected } = useWallet();\n  return (\n    <Button\n      htmlType=\"submit\"\n      type=\"primary\"\n      disabled={!canSubmit || submitting}\n    >\n      {!connected ? 'Wallet not connected' : 'Submit'}\n    </Button>\n  );\n}\n\nfunction MintInPoolSelector({\n  poolInfo,\n  label,\n  value,\n  onChange,\n  style,\n}: {\n  poolInfo: PoolInfo;\n  label: string;\n  value: string;\n  onChange: (string) => void;\n  style: any;\n}) {\n  const mintToTickers = useMintToTickers();\n  return (\n    <Input.Group style={style}>\n      <span className=\"ant-input-group-addon\">{label}</span>\n      <Select onChange={onChange} value={value} style={{ width: '100%' }}>\n        {poolInfo.state.assets.map((asset) => (\n          <Option value={asset.mint.toBase58()} key={asset.mint.toBase58()}>\n            {mintToTickers[asset.mint.toBase58()] ? (\n              <>\n                {mintToTickers[asset.mint.toBase58()]} ({asset.mint.toBase58()})\n              </>\n            ) : (\n              asset.mint.toBase58()\n            )}\n          </Option>\n        ))}\n      </Select>\n    </Input.Group>\n  );\n}\n\nfunction MintSelector({ label, style, value, onChange }) {\n  const mintToTickers = useMintToTickers();\n  const options = useMemo(() => {\n    return Object.entries(mintToTickers)\n      .filter(\n        ([mintAddress, ticker]) =>\n          mintAddress.includes(value) ||\n          ticker.toLowerCase().includes(value.toLowerCase()),\n      )\n      .map(([mintAddress, ticker]) => ({\n        value: mintAddress,\n        label: (\n          <>\n            {ticker} ({mintAddress})\n          </>\n        ),\n      }));\n  }, [mintToTickers, value]);\n  return (\n    <Input.Group style={style}>\n      <span className=\"ant-input-group-addon\">{label}</span>\n      <AutoComplete\n        options={options}\n        value={value}\n        onChange={(e) => onChange(e)}\n        style={{ width: '100%' }}\n      />\n    </Input.Group>\n  );\n}\n","import React, { useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Col, PageHeader, Row, Spin, Typography } from 'antd';\nimport { PublicKey } from '@solana/web3.js';\nimport { useAccountInfo } from '../../../utils/connection';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport {\n  decodePoolState,\n  isAdminControlledPool,\n  PoolInfo,\n} from '@project-serum/pool';\nimport PoolInfoPanel from './PoolInfoPanel';\nimport { parseTokenMintData } from '../../../utils/tokens';\nimport PoolCreateRedeemPanel from './PoolCreateRedeemPanel';\nimport PoolBalancesPanel from './PoolBalancesPanel';\nimport { useHistory } from 'react-router-dom';\nimport { PoolAdminPanel } from './PoolAdminPanel';\nimport { useWallet } from '../../../utils/wallet';\n\nconst { Text } = Typography;\n\nexport default function PoolPage() {\n  const { poolAddress } = useParams();\n  const [poolAccountInfo, poolAccountLoaded] = useAccountInfo(\n    isPublicKey(poolAddress) ? new PublicKey(poolAddress) : null,\n  );\n  const history = useHistory();\n\n  const poolInfo: PoolInfo | null = useMemo(() => {\n    if (!poolAccountInfo) {\n      return null;\n    }\n    try {\n      return {\n        address: new PublicKey(poolAddress),\n        state: decodePoolState(poolAccountInfo.data),\n        program: poolAccountInfo.owner,\n      };\n    } catch (e) {\n      return null;\n    }\n  }, [poolAddress, poolAccountInfo]);\n  const [mintAccountInfo, mintAccountInfoLoaded] = useAccountInfo(\n    poolInfo?.state.poolTokenMint,\n  );\n  const mintInfo = useMemo(\n    () => (mintAccountInfo ? parseTokenMintData(mintAccountInfo.data) : null),\n    [mintAccountInfo],\n  );\n  const { wallet } = useWallet();\n\n  if (poolInfo && mintInfo) {\n    return (\n      <>\n        <PageHeader\n          title={<>Pool {poolInfo.address.toBase58()}</>}\n          onBack={() => history.push('/pools')}\n          subTitle={poolInfo.state.name}\n        />\n        <Row>\n          <Col xs={24} lg={12}>\n            <PoolInfoPanel poolInfo={poolInfo} mintInfo={mintInfo} />\n          </Col>\n          <Col xs={24} lg={12}>\n            <PoolCreateRedeemPanel poolInfo={poolInfo} mintInfo={mintInfo} />\n          </Col>\n          <Col xs={24}>\n            <PoolBalancesPanel poolInfo={poolInfo} />\n          </Col>\n          {wallet.connected &&\n          poolInfo.state.adminKey?.equals(wallet.publicKey) &&\n          isAdminControlledPool(poolInfo) ? (\n            <Col xs={24}>\n              <PoolAdminPanel poolInfo={poolInfo} />\n            </Col>\n          ) : null}\n        </Row>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <PageHeader\n        title={<>Pool {poolAddress}</>}\n        onBack={() => history.push('/pools')}\n      />\n      <FloatingElement>\n        {!poolAccountLoaded || !mintAccountInfoLoaded ? (\n          <Spin />\n        ) : (\n          <Text>Invalid pool</Text>\n        )}\n      </FloatingElement>\n    </>\n  );\n}\n\nfunction isPublicKey(address) {\n  try {\n    new PublicKey(address);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n","import styled from 'styled-components';\nimport FloatingElement from '../../components/layout/FloatingElement';\nimport React, { useState } from 'react';\nimport { Button, Input, Typography } from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport Link from '../../components/Link';\n\nconst { Title } = Typography;\n\nconst Wrapper = styled.div`\n  max-width: 700px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  margin-top: 16px;\n  margin-bottom: 48px;\n`;\n\nexport default function PoolListPage() {\n  const [poolAddress, setPoolAddress] = useState('');\n  const history = useHistory();\n\n  function onSubmit(e) {\n    e.preventDefault();\n    history.push(`/pools/${poolAddress}`);\n  }\n  return (\n    <Wrapper>\n      <FloatingElement>\n        <Title level={3}>Pools</Title>\n        <Form onSubmit={onSubmit}>\n          <Input\n            value={poolAddress}\n            onChange={(e) => setPoolAddress(e.target.value.trim())}\n            placeholder=\"Pool address\"\n          />\n          <Button type=\"primary\" htmlType=\"submit\">\n            Go\n          </Button>\n        </Form>\n        <Link to=\"/pools/new\">Create new pool</Link>\n      </FloatingElement>\n    </Wrapper>\n  );\n}\n","import { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport TradePage from './pages/TradePage';\nimport OpenOrdersPage from './pages/OpenOrdersPage';\nimport React from 'react';\nimport BalancesPage from './pages/BalancesPage';\nimport ConvertPage from './pages/ConvertPage';\nimport BasicLayout from './components/BasicLayout';\nimport ListNewMarketPage from './pages/ListNewMarketPage';\nimport NewPoolPage from './pages/pools/NewPoolPage';\nimport PoolPage from './pages/pools/PoolPage';\nimport PoolListPage from './pages/pools/PoolListPage';\nimport { getTradePageUrl } from './utils/markets';\n\nexport function Routes() {\n  return (\n    <>\n      <HashRouter basename={'/'}>\n        <BasicLayout>\n          <Switch>\n            <Route exact path=\"/\">\n              <Redirect to={getTradePageUrl()} />\n            </Route>\n            <Route exact path=\"/market/:marketAddress\">\n              <TradePage />\n            </Route>\n            <Route exact path=\"/orders\" component={OpenOrdersPage} />\n            <Route exact path=\"/balances\" component={BalancesPage} />\n            <Route exact path=\"/convert\" component={ConvertPage} />\n            <Route\n              exact\n              path=\"/list-new-market\"\n              component={ListNewMarketPage}\n            />\n            <Route exact path=\"/pools\">\n              <PoolListPage />\n            </Route>\n            <Route exact path=\"/pools/new\">\n              <NewPoolPage />\n            </Route>\n            <Route exact path=\"/pools/:poolAddress\">\n              <PoolPage />\n            </Route>\n          </Switch>\n        </BasicLayout>\n      </HashRouter>\n    </>\n  );\n}\n","import React, { Suspense } from 'react';\nimport './App.less';\nimport { ConnectionProvider } from './utils/connection';\nimport { WalletProvider } from './utils/wallet';\nimport { GlobalStyle } from './global_style';\nimport { Spin } from 'antd';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { Routes } from './routes';\nimport { PreferencesProvider } from './utils/preferences';\n\nexport default function App() {\n  return (\n    <Suspense fallback={() => <Spin size=\"large\" />}>\n      <GlobalStyle />\n      <ErrorBoundary>\n        <ConnectionProvider>\n          <WalletProvider>\n            <PreferencesProvider>\n              <Suspense fallback={() => <Spin size=\"large\" />}>\n                <Routes />\n              </Suspense>\n            </PreferencesProvider>\n          </WalletProvider>\n        </ConnectionProvider>\n      </ErrorBoundary>\n    </Suspense>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.closeAccount = exports.mintTo = exports.setAuthority = exports.revoke = exports.approve = exports.transfer = exports.initializeAccount = exports.initializeMint = exports.decodeTokenInstructionData = exports.SRM_DECIMALS = exports.SRM_MINT = exports.MSRM_DECIMALS = exports.MSRM_MINT = exports.WRAPPED_SOL_MINT = exports.TOKEN_PROGRAM_ID = exports.CLOSE_ACCOUNT_OWNER_INDEX = exports.CLOSE_ACCOUNT_DESTINATION_INDEX = exports.CLOSE_ACCOUNT_SOURCE_INDEX = exports.TRANSFER_OWNER_INDEX = exports.TRANSFER_DESTINATION_INDEX = exports.TRANSFER_SOURCE_INDEX = exports.INITIALIZE_ACCOUNT_OWNER_INDEX = exports.INITIALIZE_ACCOUNT_MINT_INDEX = exports.INITIALIZE_ACCOUNT_ACCOUNT_INDEX = void 0;\nconst BufferLayout = __importStar(require(\"buffer-layout\"));\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst layout_1 = require(\"./layout\");\n// NOTE: Update these if the position of arguments for the initializeAccount instruction changes\nexports.INITIALIZE_ACCOUNT_ACCOUNT_INDEX = 0;\nexports.INITIALIZE_ACCOUNT_MINT_INDEX = 1;\nexports.INITIALIZE_ACCOUNT_OWNER_INDEX = 2;\n// NOTE: Update these if the position of arguments for the transfer instruction changes\nexports.TRANSFER_SOURCE_INDEX = 0;\nexports.TRANSFER_DESTINATION_INDEX = 1;\nexports.TRANSFER_OWNER_INDEX = 2;\n// NOTE: Update these if the position of arguments for the closeAccount instruction changes\nexports.CLOSE_ACCOUNT_SOURCE_INDEX = 0;\nexports.CLOSE_ACCOUNT_DESTINATION_INDEX = 1;\nexports.CLOSE_ACCOUNT_OWNER_INDEX = 2;\nexports.TOKEN_PROGRAM_ID = new web3_js_1.PublicKey('TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA');\nexports.WRAPPED_SOL_MINT = new web3_js_1.PublicKey('So11111111111111111111111111111111111111112');\nexports.MSRM_MINT = new web3_js_1.PublicKey('MSRMcoVyrFxnSgo5uXwone5SKcGhT1KEJMFEkMEWf9L');\nexports.MSRM_DECIMALS = 0;\nexports.SRM_MINT = new web3_js_1.PublicKey('SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt');\nexports.SRM_DECIMALS = 6;\nconst LAYOUT = BufferLayout.union(BufferLayout.u8('instruction'));\nLAYOUT.addVariant(0, BufferLayout.struct([\n    BufferLayout.u8('decimals'),\n    layout_1.publicKeyLayout('mintAuthority'),\n    BufferLayout.u8('freezeAuthorityOption'),\n    layout_1.publicKeyLayout('freezeAuthority'),\n]), 'initializeMint');\nLAYOUT.addVariant(1, BufferLayout.struct([]), 'initializeAccount');\nLAYOUT.addVariant(3, BufferLayout.struct([BufferLayout.nu64('amount')]), 'transfer');\nLAYOUT.addVariant(4, BufferLayout.struct([BufferLayout.nu64('amount')]), 'approve');\nLAYOUT.addVariant(5, BufferLayout.struct([]), 'revoke');\nLAYOUT.addVariant(6, BufferLayout.struct([\n    BufferLayout.u8('authorityType'),\n    BufferLayout.u8('newAuthorityOption'),\n    layout_1.publicKeyLayout('newAuthority'),\n]), 'setAuthority');\nLAYOUT.addVariant(7, BufferLayout.struct([BufferLayout.nu64('amount')]), 'mintTo');\nLAYOUT.addVariant(8, BufferLayout.struct([BufferLayout.nu64('amount')]), 'burn');\nLAYOUT.addVariant(9, BufferLayout.struct([]), 'closeAccount');\nconst instructionMaxSpan = Math.max(...Object.values(LAYOUT.registry).map((r) => r.span));\nfunction encodeTokenInstructionData(instruction) {\n    const b = Buffer.alloc(instructionMaxSpan);\n    const span = LAYOUT.encode(instruction, b);\n    return b.slice(0, span);\n}\nfunction decodeTokenInstructionData(instruction) {\n    return LAYOUT.decode(instruction);\n}\nexports.decodeTokenInstructionData = decodeTokenInstructionData;\nfunction initializeMint({ mint, decimals, mintAuthority, freezeAuthority = null, }) {\n    const keys = [\n        { pubkey: mint, isSigner: false, isWritable: true },\n        { pubkey: web3_js_1.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            initializeMint: {\n                decimals,\n                mintAuthority,\n                freezeAuthorityOption: !!freezeAuthority,\n                freezeAuthority: freezeAuthority || new web3_js_1.PublicKey(0),\n            },\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.initializeMint = initializeMint;\nfunction initializeAccount({ account, mint, owner }) {\n    const keys = [\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: mint, isSigner: false, isWritable: false },\n        { pubkey: owner, isSigner: false, isWritable: false },\n        { pubkey: web3_js_1.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            initializeAccount: {},\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.initializeAccount = initializeAccount;\nfunction transfer({ source, destination, amount, owner }) {\n    const keys = [\n        { pubkey: source, isSigner: false, isWritable: true },\n        { pubkey: destination, isSigner: false, isWritable: true },\n        { pubkey: owner, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            transfer: { amount },\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.transfer = transfer;\nfunction approve({ source, delegate, amount, owner }) {\n    const keys = [\n        { pubkey: source, isSigner: false, isWritable: true },\n        { pubkey: delegate, isSigner: false, isWritable: false },\n        { pubkey: owner, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            approve: { amount },\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.approve = approve;\nfunction revoke({ source, owner }) {\n    const keys = [\n        { pubkey: source, isSigner: false, isWritable: true },\n        { pubkey: owner, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            revoke: {},\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.revoke = revoke;\nfunction setAuthority({ target, currentAuthority, newAuthority, authorityType, }) {\n    const keys = [\n        { pubkey: target, isSigner: false, isWritable: true },\n        { pubkey: currentAuthority, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            setAuthority: {\n                authorityType,\n                newAuthorityOption: !!newAuthority,\n                newAuthority,\n            },\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.setAuthority = setAuthority;\nfunction mintTo({ mint, destination, amount, mintAuthority }) {\n    const keys = [\n        { pubkey: mint, isSigner: false, isWritable: true },\n        { pubkey: destination, isSigner: false, isWritable: true },\n        { pubkey: mintAuthority, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            mintTo: { amount },\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.mintTo = mintTo;\nfunction closeAccount({ source, destination, owner }) {\n    const keys = [\n        { pubkey: source, isSigner: false, isWritable: true },\n        { pubkey: destination, isSigner: false, isWritable: true },\n        { pubkey: owner, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            closeAccount: {},\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.closeAccount = closeAccount;\n//# sourceMappingURL=token-instructions.js.map"],"sourceRoot":""}