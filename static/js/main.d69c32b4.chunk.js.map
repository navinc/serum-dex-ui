{"version":3,"sources":["assets/logo.svg","utils/utils.js","utils/fetch-loop.js","utils/connection.js","utils/notifications.js","utils/wallet.js","utils/markets.js","global_style.ts","components/ErrorBoundary.jsx","components/layout/FloatingElement.jsx","components/Orderbook.jsx","utils/usePrevious.js","components/layout/DataTable.jsx","utils/send.js","components/UserInfoTable/BalancesTable.jsx","components/UserInfoTable/OpenOrderTable.jsx","components/UserInfoTable/FillsTable.jsx","components/UserInfoTable/index.jsx","components/Link.js","components/DepositDialog.jsx","components/StandaloneBalancesDisplay.jsx","components/TradeForm.jsx","components/TradesTable.jsx","components/LinkAddress.jsx","components/DeprecatedMarketInstructions.js","pages/TradePage.jsx","pages/OpenOrdersPage.jsx","components/UserInfoTable/WalletBalancesTable.jsx","components/UserInfoTable/AccountsTable.jsx","pages/BalancesPage.jsx","components/CustomConnectionDialog.js","components/TopBar.js","components/HelpUrls.js","components/Footer.jsx","components/BasicLayout.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","sleep","ms","a","Promise","resolve","setTimeout","getDecimalCount","value","isNaN","Math","floor","toString","split","length","useLocalStorageState","key","defaultState","useState","storedState","localStorage","getItem","JSON","parse","state","setState","setLocalStorageState","useCallback","newState","removeItem","setItem","stringify","isEqual","obj1","obj2","keys","Object","k","pageLoadTime","Date","globalCache","Map","FetchLoopListener","cacheKey","fn","refreshInterval","refreshIntervalOnError","callback","this","FetchLoopInternal","refresh","timeoutId","clearTimeout","stopped","errored","data","set","errors","notifyListeners","console","warn","waitTime","min","timeSincePageLoad","document","visibilityState","hasFocus","random","listeners","Set","listener","previousRefreshInterval","add","assert","delete","forEach","map","filter","x","size","globalLoops","loops","has","get","addListener","loop","removeListener","all","values","useAsyncData","asyncFn","useReducer","i","rerender","useEffect","loaded","undefined","DEFAULT_ENDPOINTS","name","endpoint","accountListenerCount","ConnectionContext","React","createContext","ConnectionProvider","children","setEndpoint","connection","useMemo","Connection","sendConnection","id","onAccountChange","Account","publicKey","removeAccountChangeListener","onSlotChange","removeSlotChangeListener","Provider","useConnection","useContext","useSendConnection","useConnectionConfig","context","useAccountInfo","tuple","toBase58","getAccountInfo","accountInfo","currentItem","log","count","previousData","subscriptionId","e","equals","initializeOnly","setCache","nextCount","useAccountData","notify","message","description","type","placement","notification","style","color","opacity","backgroundColor","WALLET_PROVIDERS","url","WalletContext","WalletProvider","providerUrl","setProviderUrl","wallet","Wallet","connected","setConnected","on","walletPublicKey","substring","disconnect","providerName","find","useWallet","setProvider","USE_MARKETS","MARKETS","useMarketsList","deprecated","useAllMarkets","markets","setMarkets","marketInfo","Market","load","address","programId","market","push","marketName","getAllMarkets","MarketContext","_SLOW_REFRESH_INTERVAL","DEFAULT_MARKET","MarketProvider","marketAddress","setMarketAddress","PublicKey","setMarket","then","catch","baseCurrency","baseMintAddress","TOKEN_MINTS","token","quoteCurrency","quoteMintAddress","useMarket","useMarkPrice","markPrice","setMarkPrice","useOrderbook","orderbook","trades","useTrades","bb","bids","Number","ba","asks","last","price","sort","b","_useUnfilteredTrades","limit","getUnfilteredTrades","loadFills","useOrderbookAccounts","bidData","_decoded","askData","bidOrderbook","Orderbook","decode","askOrderbook","depth","getL2","useOpenOrdersAccounts","fast","getTokenAccounts","findOpenOrdersAccountsForOwner","useSelectedOpenOrdersAccount","accounts","useSelectedQuoteCurrencyAccount","findQuoteTokenAccountsForOwner","useQuoteCurrencyAccounts","useSelectedBaseCurrencyAccount","findBaseTokenAccountsForOwner","useBaseCurrencyAccounts","useQuoteCurrencyBalances","quoteCurrencyAccount","pubkey","TokenInstructions","WRAPPED_SOL_MINT","lamports","quoteSplSizeToNumber","BN","slice","useBaseCurrencyBalances","baseCurrencyAccount","baseSplSizeToNumber","useOpenOrders","openOrdersAccount","filterForOpenOrders","order","eventFlags","maker","trade","side","useBalances","baseCurrencyBalances","quoteCurrencyBalances","baseExists","baseTokenTotal","baseTokenFree","quoteExists","quoteTokenTotal","quoteTokenFree","coin","orders","sub","unsettled","getCurrencyBalance","currencyAccounts","currencyAccount","getTokenAccountBalance","tokenAccountBalances","uiAmount","GlobalStyle","createGlobalStyle","Title","Typography","ErrorBoundary","hasError","level","props","error","Component","Wrapper","styled","div","FloatingElement","SizeTitle","Row","MarkPriceTitle","Line","css","Price","smallScreen","onPrice","onSize","getCumulativeOrderbookSide","backwards","cumulative","cumulativeSize","reverse","totalSize","asksToDisplay","totalAskSize","bidsToDisplay","flex","height","overflow","span","textAlign","index","OrderbookRow","sizePercent","onSizeClick","onPriceClick","MarkPriceComponent","memo","element","useRef","current","classList","remove","formattedSize","minOrderSize","toFixed","formattedPrice","tickSize","ref","marginBottom","onClick","data-width","data-bgcolor","prevProps","nextProps","previousMarkPrice","usePrevious","markPriceColor","formattedMarkPrice","justify","ArrowUpOutlined","marginRight","ArrowDownOutlined","DataTable","dataSource","columns","emptyLabel","pagination","loading","pageSize","renderEmpty","padding","display","justifyContent","alignItems","createTokenAccount","mintPublicKey","onConfirmCallBack","newAccount","SystemProgram","getMinimumBalanceForRentExemption","TOKEN_PROGRAM_ID","fromPubkey","newAccountPubkey","space","transaction","createAccount","initializeAccount","account","mint","owner","onConfirm","result","timeout","err","onBeforeSend","onAfterSend","sendTransaction","signers","settleFunds","openOrders","quoteCurrencyAccounts","baseCurrencyAccounts","makeSettleFundsTransaction","cancelOrder","params","cancelOrders","onBeforeSendCallBack","onAfterSendCallBack","makeMatchOrdersTransaction","makeCancelOrderInstruction","placeOrder","orderType","formattedMinOrderSize","formattedTickSize","isIncrement","num","step","abs","payer","makePlaceOrderTransaction","placeOrderTx","getUnixTs","getTime","getRecentBlockhash","recentBlockhash","blockhash","signPartial","signTransaction","rawTransaction","serialize","done","startTime","sendRawTransaction","skipPreflight","txid","awaitTransactionSignatureConfirmation","res","reject","onSignature","getSignatureStatuses","signatureStatuses","confirmations","BalancesTable","balances","onSettleFunds","title","dataIndex","render","ghost","CancelButton","Button","OpenOrderTable","cancelId","setCancelId","orderId","fontWeight","charAt","toUpperCase","icon","DeleteOutlined","cancel","assign","FillsTable","fills","openOrdersAccounts","fill","some","useFills","liquidity","TabPane","Tabs","Index","paddingTop","defaultActiveKey","tab","OpenOrdersTab","BalancesTab","Link","external","to","rest","href","target","rel","DepositDialog","onClose","depositCoin","coinMint","visible","onOk","onCancel","RowBox","Tip","p","ActionButton","StandaloneBalancesDisplay","setDepositCoin","currency","Fragment","borderColor","align","paddingBottom","width","block","InputBox","Input","SellButton","BuyButton","TradeForm","setChangeOrderRef","setSide","postOnly","setPostOnly","ioc","setIoc","setSize","setPrice","submitting","setSubmitting","maxQuoteSize","doChangeOrder","onSubmit","parsedPrice","parseFloat","parsedSize","flexDirection","Group","onChange","buttonStyle","background","addonBefore","placeholder","checked","disabled","TradesContainer","PublicTrades","marginTop","LinkAddress","LinkOutlined","DeprecatedMarketInstructions","liveMarkets","needToCancelOrders","needToSettleFunds","liveMarket","Option","Select","TradePage","deprecatedMarkets","marketAddresses","deprecatedProgramIds","Array","from","OpenOrders","findForOwner","concat","toNumber","useUnmigratedDeprecatedMarketsList","window","innerHeight","innerWidth","dimensions","setDimensions","changeOrderRef","handleResize","addEventListener","removeEventListener","componentProps","onChangeOrderRef","getComponent","paddingLeft","paddingRight","gutter","MarketSelector","content","trigger","InfoCircleOutlined","extractBase","extractQuote","showSearch","optionFilterProp","onSelect","listHeight","proposedMarket","filterOption","input","option","toLowerCase","indexOf","RenderDeprecatedMarket","RenderNormal","minHeight","flexWrap","RenderSmall","RenderSmaller","xs","sm","OpenOrdersPage","allMarkets","marketData","loadBids","loadAsks","ordersForMarket","openOrdersAddress","useOpenOrdersForAllMarkets","WalletBalancesTable","walletBalances","AccountsTable","accountBalances","BalancesPage","includes","balance","baseBalance","quoteBalance","useWalletBalancesForAllMarkets","loadedWalletBalances","openOrderAccounts","openOrderAccountBalances","inOrdersBase","inOrdersQuote","unsettledBase","unsettledQuote","useOpenOrderAccountBalancesForAllMarkets","accountBalancesLoaded","CustomConnectionDialog","onAddConnectionEndpoint","setName","valid","string","URL","_","isValidUrl","canSubmit","custom","okText","okButtonProps","LogoWrapper","TopBar","setCurrent","showConnectionDialog","setShowConnectionDialog","customEndpoints","setCustomEndpoints","useConnectionEndpoints","endpoints","location","useLocation","history","useHistory","handleClick","pathname","src","logo","alt","mode","selectedKeys","borderBottom","Item","entry","onDeleteConnectionEndpoint","PlusCircleOutlined","connect","UserOutlined","connectionEndpoint","helpUrls","Footer","Layout","useBreakpoint","Grid","footerElements","link","CustomFooter","lg","elem","Header","Content","BasicLayout","Routes","basename","exact","path","component","TradePageContents","OpenOrdersPageContents","BalancesPageContents","App","fallback","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d69c32b4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.49174c73.svg\";","import { useCallback, useEffect, useState } from 'react';\n\nexport async function sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport function getDecimalCount(value) {\n  if (!isNaN(value) && Math.floor(value) !== value)\n    return value.toString().split('.')[1].length || 0;\n  return 0;\n}\n\nexport function useLocalStorageState(key, defaultState = null) {\n  const [state, setState] = useState(() => {\n    // NOTE: Not sure if this is ok\n    const storedState = localStorage.getItem(key);\n    if (storedState) {\n      return JSON.parse(storedState);\n    }\n    return defaultState;\n  });\n\n  const setLocalStorageState = useCallback(\n    (newState) => {\n      const changed = state !== newState;\n      if (!changed) {\n        return;\n      }\n      setState(newState);\n      if (newState === null) {\n        localStorage.removeItem(key);\n      } else {\n        localStorage.setItem(key, JSON.stringify(newState));\n      }\n    },\n    [state, key],\n  );\n\n  return [state, setLocalStorageState];\n}\n\nexport function useEffectAfterTimeout(effect, timeout) {\n  useEffect(() => {\n    const handle = setTimeout(effect, timeout);\n    return () => clearTimeout(handle);\n  });\n}\n\nexport function useListener(emitter, eventName) {\n  const [, forceUpdate] = useState(0);\n  useEffect(() => {\n    const listener = () => forceUpdate((i) => i + 1);\n    emitter.on(eventName, listener);\n    return () => emitter.removeListener(eventName, listener);\n  }, [emitter, eventName]);\n}\n\nexport function abbreviateAddress(address) {\n  const base58 = address.toBase58();\n  return base58.slice(0, 4) + '…' + base58.slice(-4);\n}\n\nexport function isEqual(obj1, obj2, keys) {\n  if (!keys && Object.keys(obj1).length !== Object.keys(obj2).length) {\n    return false;\n  }\n  keys = keys || Object.keys(obj1);\n  for (const k of keys) {\n    if (obj1[k] !== obj2[k]) {\n      // shallow comparison\n      return false;\n    }\n  }\n  return true;\n}\n","import { useEffect, useReducer } from 'react';\n\nimport assert from 'assert';\n\nconst pageLoadTime = new Date();\n\nconst globalCache = new Map();\n\nclass FetchLoopListener {\n  constructor(cacheKey, fn, refreshInterval, refreshIntervalOnError, callback) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.refreshInterval = refreshInterval;\n    this.refreshIntervalOnError = refreshIntervalOnError;\n    this.callback = callback;\n  }\n}\n\nclass FetchLoopInternal {\n  constructor(cacheKey, fn) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.timeoutId = null;\n    this.listeners = new Set();\n    this.errors = 0;\n  }\n\n  get refreshInterval() {\n    return Math.min(\n      ...[...this.listeners].map((listener) => listener.refreshInterval),\n    );\n  }\n\n  get refreshIntervalOnError() {\n    return Math.min(\n      ...[...this.listeners]\n        .map((listener) => listener.refreshIntervalOnError)\n        .filter((x) => x),\n    );\n  }\n\n  get stopped() {\n    return this.listeners.size === 0;\n  }\n\n  addListener(listener) {\n    const previousRefreshInterval = this.refreshInterval;\n    this.listeners.add(listener);\n    if (this.refreshInterval < previousRefreshInterval) {\n      this.refresh();\n    }\n  }\n\n  removeListener(listener) {\n    assert(this.listeners.delete(listener));\n    if (this.stopped) {\n      if (this.timeoutId) {\n        clearTimeout(this.timeoutId);\n        this.timeoutId = null;\n      }\n    }\n  }\n\n  notifyListeners() {\n    this.listeners.forEach((listener) => listener.callback());\n  }\n\n  refresh = async () => {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    }\n    if (this.stopped) {\n      return;\n    }\n\n    let errored = false;\n    try {\n      const data = await this.fn();\n      globalCache.set(this.cacheKey, data);\n      this.errors = 0;\n      this.notifyListeners();\n      return data;\n    } catch (error) {\n      ++this.errors;\n      console.warn(error);\n      errored = true;\n    } finally {\n      if (!this.timeoutId && !this.stopped) {\n        let waitTime = this.refreshInterval;\n        if (\n          errored &&\n          this.refreshIntervalOnError &&\n          this.refreshIntervalOnError > 0\n        ) {\n          waitTime = this.refreshIntervalOnError;\n        }\n\n        // Back off on errors.\n        if (this.errors > 0) {\n          waitTime = Math.min(1000 * 2 ** (this.errors - 1), 60000);\n        }\n\n        // Don't do any refreshing for the first five seconds, to make way for other things to load.\n        const timeSincePageLoad = new Date() - pageLoadTime;\n        if (timeSincePageLoad < 5000) {\n          waitTime += 5000 - timeSincePageLoad / 2;\n        }\n\n        // Refresh background pages slowly.\n        if (document.visibilityState === 'hidden') {\n          waitTime = 60000;\n        } else if (!document.hasFocus()) {\n          waitTime *= 1.5;\n        }\n\n        // Add jitter so we don't send all requests at the same time.\n        waitTime *= 0.8 + 0.4 * Math.random();\n\n        this.timeoutId = setTimeout(this.refresh, waitTime);\n      }\n    }\n  };\n}\n\nclass FetchLoops {\n  loops = new Map();\n\n  addListener(listener) {\n    if (!this.loops.has(listener.cacheKey)) {\n      this.loops.set(\n        listener.cacheKey,\n        new FetchLoopInternal(listener.cacheKey, listener.fn),\n      );\n    }\n    this.loops.get(listener.cacheKey).addListener(listener);\n  }\n\n  removeListener(listener) {\n    const loop = this.loops.get(listener.cacheKey);\n    loop.removeListener(listener);\n    if (loop.stopped) {\n      this.loops.delete(listener.cacheKey);\n    }\n  }\n\n  refresh(cacheKey) {\n    if (this.loops.has(cacheKey)) {\n      this.loops.get(cacheKey).refresh();\n    }\n  }\n\n  refreshAll() {\n    return Promise.all([...this.loops.values()].map((loop) => loop.refresh()));\n  }\n}\nconst globalLoops = new FetchLoops();\n\nexport function useAsyncData(\n  asyncFn,\n  cacheKey,\n  { refreshInterval = 60000, refreshIntervalOnError = null } = {},\n) {\n  const [, rerender] = useReducer((i) => i + 1, 0);\n\n  useEffect(() => {\n    if (!cacheKey) {\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      return () => {};\n    }\n    const listener = new FetchLoopListener(\n      cacheKey,\n      asyncFn,\n      refreshInterval,\n      refreshIntervalOnError,\n      rerender,\n    );\n    globalLoops.addListener(listener);\n    return () => globalLoops.removeListener(listener);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey, refreshInterval]);\n\n  if (!cacheKey) {\n    return [null, false];\n  }\n\n  const loaded = globalCache.has(cacheKey);\n  const data = loaded ? globalCache.get(cacheKey) : undefined;\n  return [data, loaded];\n}\n\nexport function refreshCache(cacheKey, clearCache = false) {\n  if (clearCache) {\n    globalCache.delete(cacheKey);\n  }\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.refresh();\n    if (clearCache) {\n      loop.notifyListeners();\n    }\n  }\n}\n\nexport function refreshAllCaches() {\n  for (const loop of globalLoops.loops.values()) {\n    loop.refresh();\n  }\n}\n\nexport function setCache(cacheKey, value, { initializeOnly = false } = {}) {\n  if (initializeOnly && globalCache.has(cacheKey)) {\n    return;\n  }\n  globalCache.set(cacheKey, value);\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.notifyListeners();\n  }\n}\n","import { useLocalStorageState } from './utils';\nimport { Account, Connection } from '@solana/web3.js';\nimport React, { useContext, useEffect, useMemo } from 'react';\nimport { setCache, useAsyncData } from './fetch-loop';\nimport tuple from 'immutable-tuple';\n\nexport const DEFAULT_ENDPOINTS = [\n  {\n    name: 'mainnet-beta',\n    endpoint: 'https://solana-api.projectserum.com',\n  },\n  { name: 'localnet', endpoint: 'http://127.0.0.1:8899' },\n];\n\nexport function useConnectionEndpoints() {\n  const [customEndpoints, setCustomEndpoints] = useLocalStorageState(\n    'customEndpoints',\n    [],\n  );\n  return [\n    DEFAULT_ENDPOINTS.concat(customEndpoints),\n    customEndpoints,\n    setCustomEndpoints,\n  ];\n}\n\nconst accountListenerCount = new Map();\n\nconst ConnectionContext = React.createContext(null);\n\nexport function ConnectionProvider({ children }) {\n  const [endpoint, setEndpoint] = useLocalStorageState(\n    'connectionEndpts',\n    DEFAULT_ENDPOINTS[0].endpoint,\n  );\n\n  const connection = useMemo(() => new Connection(endpoint, 'recent'), [\n    endpoint,\n  ]);\n  const sendConnection = useMemo(() => new Connection(endpoint, 'recent'), [\n    endpoint,\n  ]);\n\n  // The websocket library solana/web3.js uses closes its websocket connection when the subscription list\n  // is empty after opening its first time, preventing subsequent subscriptions from receiving responses.\n  // This is a hack to prevent the list from every getting empty\n  useEffect(() => {\n    const id = connection.onAccountChange(new Account().publicKey, () => {});\n    return () => connection.removeAccountChangeListener(id);\n  }, [connection]);\n\n  useEffect(() => {\n    const id = connection.onSlotChange(() => null);\n    return () => connection.removeSlotChangeListener(id);\n  }, [connection]);\n\n  useEffect(() => {\n    const id = sendConnection.onAccountChange(\n      new Account().publicKey,\n      () => {},\n    );\n    return () => sendConnection.removeAccountChangeListener(id);\n  }, [sendConnection]);\n\n  useEffect(() => {\n    const id = sendConnection.onSlotChange(() => null);\n    return () => sendConnection.removeSlotChangeListener(id);\n  }, [sendConnection]);\n\n  return (\n    <ConnectionContext.Provider\n      value={{ endpoint, setEndpoint, connection, sendConnection }}\n    >\n      {children}\n    </ConnectionContext.Provider>\n  );\n}\n\nexport function useConnection() {\n  return useContext(ConnectionContext).connection;\n}\n\nexport function useSendConnection() {\n  return useContext(ConnectionContext).sendConnection;\n}\n\nexport function useConnectionConfig() {\n  const context = useContext(ConnectionContext);\n  return { endpoint: context.endpoint, setEndpoint: context.setEndpoint };\n}\n\nexport function useAccountInfo(publicKey) {\n  const connection = useConnection();\n  const cacheKey = tuple(connection, publicKey?.toBase58());\n  const [accountInfo, loaded] = useAsyncData(\n    async () => (publicKey ? connection.getAccountInfo(publicKey) : null),\n    cacheKey,\n    { refreshInterval: 60_000 },\n  );\n  let id = publicKey?.toBase58();\n  useEffect(() => {\n    if (!publicKey) {\n      return;\n    }\n    if (accountListenerCount.has(cacheKey)) {\n      let currentItem = accountListenerCount.get(cacheKey);\n      console.log('Incrementing', id, currentItem.count + 1);\n      ++currentItem.count;\n    } else {\n      let previousData = null;\n      console.log('Subscribing to ', id);\n      const subscriptionId = connection.onAccountChange(publicKey, (e) => {\n        if (e.data) {\n          if (!previousData || !previousData.equals(e.data)) {\n            console.log('Passing along new data', id);\n            setCache(cacheKey, e);\n          } else {\n            console.log('Skipping no-op update', id);\n          }\n          previousData = e.data;\n        }\n      });\n      console.log('Setting cache', id);\n      accountListenerCount.set(cacheKey, { count: 1, subscriptionId });\n    }\n    return () => {\n      let currentItem = accountListenerCount.get(cacheKey);\n      let nextCount = currentItem.count - 1;\n      if (nextCount <= 0) {\n        console.log('Removing cache', id);\n        connection.removeAccountChangeListener(currentItem.subscriptionId);\n        accountListenerCount.delete(cacheKey);\n      } else {\n        console.log('Decrementing', id, nextCount);\n        --currentItem.count;\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey]);\n  return [accountInfo, loaded];\n}\n\nexport function useAccountData(publicKey) {\n  const [accountInfo] = useAccountInfo(publicKey);\n  return accountInfo && accountInfo.data;\n}\n","import React from 'react';\nimport { notification } from 'antd';\n\nexport function notify({\n  message,\n  description,\n  type = 'info',\n  placement = 'bottomLeft',\n}) {\n  notification[type]({\n    message: <span style={{ color: 'black' }}>{message}</span>,\n    description: (\n      <span style={{ color: 'black', opacity: 0.5 }}>{description}</span>\n    ),\n    placement,\n    style: {\n      backgroundColor: 'white',\n    },\n  });\n}\n","import React, { useContext, useEffect, useMemo, useState } from 'react';\nimport Wallet from '@project-serum/sol-wallet-adapter';\nimport { notify } from './notifications';\nimport { useConnectionConfig } from './connection';\nimport { useLocalStorageState } from './utils';\n\nexport const WALLET_PROVIDERS = [\n  { name: 'sollet.io', url: 'https://www.sollet.io' },\n];\n\nconst WalletContext = React.createContext(null);\n\nexport function WalletProvider({ children }) {\n  const { endpoint } = useConnectionConfig();\n  const [providerUrl, setProviderUrl] = useLocalStorageState(\n    'walletProvider',\n    'https://www.sollet.io',\n  );\n  const wallet = useMemo(() => new Wallet(providerUrl, endpoint), [\n    providerUrl,\n    endpoint,\n  ]);\n\n  const [connected, setConnected] = useState(false);\n  useEffect(() => {\n    console.log('trying to connect');\n    wallet.on('connect', () => {\n      console.log('connected');\n      setConnected(true);\n      let walletPublicKey = wallet.publicKey.toBase58();\n      let keyToDisplay =\n        walletPublicKey.length > 20\n          ? `${walletPublicKey.substring(0, 7)}.....${walletPublicKey.substring(\n              walletPublicKey.length - 7,\n              walletPublicKey.length,\n            )}`\n          : walletPublicKey;\n      notify({\n        message: 'Wallet update',\n        description: 'Connected to wallet ' + keyToDisplay,\n      });\n    });\n    wallet.on('disconnect', () => {\n      setConnected(false);\n      notify({\n        message: 'Wallet update',\n        description: 'Disconnected from wallet',\n      });\n    });\n    return () => {\n      wallet.disconnect();\n      setConnected(false);\n    };\n  }, [wallet]);\n  return (\n    <WalletContext.Provider\n      value={{\n        wallet,\n        connected,\n        providerUrl,\n        setProviderUrl,\n        providerName:\n          WALLET_PROVIDERS.find(({ url }) => url === providerUrl)?.name ??\n          providerUrl,\n      }}\n    >\n      {children}\n    </WalletContext.Provider>\n  );\n}\n\nexport function useWallet() {\n  const context = useContext(WalletContext);\n  return {\n    connected: context.connected,\n    wallet: context.wallet,\n    providerUrl: context.providerUrl,\n    setProvider: context.setProviderUrl,\n    providerName: context.providerName,\n  };\n}\n","import {\n  Market,\n  Orderbook,\n  decodeEventQueue,\n  TokenInstructions,\n  MARKETS,\n  TOKEN_MINTS,\n  OpenOrders,\n} from '@project-serum/serum';\nimport { PublicKey } from '@solana/web3.js';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useLocalStorageState } from './utils';\nimport { useAsyncData } from './fetch-loop';\nimport { useAccountData, useAccountInfo, useConnection } from './connection';\nimport { useWallet } from './wallet';\nimport tuple from 'immutable-tuple';\nimport { notify } from './notifications';\nimport { BN } from 'bn.js';\n\n// Used in debugging, should be false in production\nconst _IGNORE_DEPRECATED = false;\n\nconst USE_MARKETS = _IGNORE_DEPRECATED\n  ? MARKETS.map((m) => ({ ...m, deprecated: false }))\n  : MARKETS;\n\nexport function useMarketsList() {\n  return USE_MARKETS.filter(({ deprecated }) => !deprecated);\n}\n\nexport function useAllMarkets() {\n  const connection = useConnection();\n  const [markets, setMarkets] = useState([]);\n\n  useEffect(() => {\n    const getAllMarkets = async () => {\n      const markets = [];\n      let marketInfo;\n      for (marketInfo of USE_MARKETS) {\n        try {\n          const market = await Market.load(\n            connection,\n            marketInfo.address,\n            {},\n            marketInfo.programId,\n          );\n          markets.push({ market, marketName: marketInfo.name });\n        } catch (e) {\n          notify({\n            message: 'Error loading market',\n            description: e.message,\n            type: 'error',\n          });\n        }\n      }\n      setMarkets(markets);\n    };\n\n    getAllMarkets();\n  }, [connection]);\n\n  return markets;\n}\n\nexport function useUnmigratedDeprecatedMarketsList() {\n  const connection = useConnection();\n  const { wallet } = useWallet();\n\n  async function getUnmigratedDeprecatedMarkets() {\n    if (!wallet || !connection || !wallet.publicKey) {\n      return [];\n    }\n    let marketAddresses = [];\n    const deprecatedProgramIds = Array.from(\n      new Set(\n        USE_MARKETS.filter(({ deprecated }) => deprecated).map(\n          ({ programId }) => programId,\n        ),\n      ),\n    );\n    let programId;\n    for (programId of deprecatedProgramIds) {\n      try {\n        const openOrdersAccounts = await OpenOrders.findForOwner(\n          connection,\n          wallet.publicKey,\n          programId,\n        );\n        marketAddresses = marketAddresses.concat(\n          Array.from(\n            new Set(\n              openOrdersAccounts\n                .filter(\n                  (openOrders) =>\n                    openOrders.baseTokenTotal.toNumber() ||\n                    openOrders.quoteTokenTotal.toNumber(),\n                )\n                .map((openOrders) => openOrders.market),\n            ),\n          ).filter((address) =>\n            USE_MARKETS.some(\n              (market) => market.deprecated && market.address.equals(address),\n            ),\n          ),\n        );\n      } catch (e) {\n        console.log(\n          'Error loading deprecated markets',\n          programId?.toBase58(),\n          e.message,\n        );\n      }\n    }\n    return USE_MARKETS.filter((market) =>\n      marketAddresses.some((address) => address.equals(market.address)),\n    );\n  }\n\n  const [markets] = useAsyncData(\n    getUnmigratedDeprecatedMarkets,\n    tuple(\n      'useUnmigratedDeprecatedMarketsList',\n      connection,\n      wallet?.publicKey?.toBase58(),\n    ),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n\n  return markets;\n}\n\nconst MarketContext = React.createContext(null);\n\n// For things that don't really change\nconst _SLOW_REFRESH_INTERVAL = 5 * 1000;\n\n// For things that change frequently\nconst _FAST_REFRESH_INTERVAL = 1000;\n\nexport const DEFAULT_MARKET = USE_MARKETS.find(\n  ({ name }) => name === 'SRM/USDT',\n);\n\nexport function MarketProvider({ children }) {\n  const [marketAddress, setMarketAddress] = useLocalStorageState(\n    'marketAddress',\n    DEFAULT_MARKET.address.toBase58(),\n  );\n\n  const connection = useConnection();\n  const marketInfo = USE_MARKETS.find((market) =>\n    market.address.equals(new PublicKey(marketAddress)),\n  );\n\n  // Replace existing market with a non-deprecated one on first load\n  useEffect(() => {\n    if (marketInfo && marketInfo.deprecated) {\n      console.log('Switching markets from deprecated', marketInfo);\n      setMarketAddress(DEFAULT_MARKET.address.toBase58());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const [market, setMarket] = useState();\n  useEffect(() => {\n    setMarket(null);\n    if (!marketInfo || !marketInfo.address) {\n      notify({\n        message: 'Error loading market',\n        description: 'Please select a market from the dropdown',\n        type: 'error',\n      });\n      return;\n    }\n    Market.load(connection, marketInfo.address, {}, marketInfo.programId)\n      .then(setMarket)\n      .catch((e) =>\n        notify({\n          message: 'Error loading market',\n          description: e.message,\n          type: 'error',\n        }),\n      );\n  }, [connection, marketInfo]);\n\n  const baseCurrency =\n    (market?.baseMintAddress &&\n      TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\n        ?.name) ||\n    'UNKNOWN';\n  const quoteCurrency =\n    (market?.quoteMintAddress &&\n      TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\n        ?.name) ||\n    'UNKNOWN';\n  return (\n    <MarketContext.Provider\n      value={{\n        market,\n        marketName: marketInfo?.name,\n        setMarketAddress,\n        ...marketInfo,\n        baseCurrency,\n        quoteCurrency,\n      }}\n    >\n      {children}\n    </MarketContext.Provider>\n  );\n}\n\nexport function useMarket() {\n  return useContext(MarketContext);\n}\n\nexport function useMarkPrice() {\n  const [markPrice, setMarkPrice] = useState(null);\n\n  const [orderbook] = useOrderbook();\n  const trades = useTrades();\n\n  useEffect(() => {\n    let bb = orderbook?.bids?.length > 0 && Number(orderbook.bids[0][0]);\n    let ba = orderbook?.asks?.length > 0 && Number(orderbook.asks[0][0]);\n    let last = trades?.length > 0 && trades[0].price;\n\n    let markPrice =\n      bb && ba\n        ? last\n          ? [bb, ba, last].sort((a, b) => a - b)[1]\n          : (bb + ba) / 2\n        : null;\n\n    setMarkPrice(markPrice);\n  }, [orderbook, trades]);\n\n  return markPrice;\n}\n\nexport function _useUnfilteredTrades(limit = 10000) {\n  const { market } = useMarket();\n  const connection = useConnection();\n  async function getUnfilteredTrades() {\n    if (!market || !connection) {\n      return null;\n    }\n    return await market.loadFills(connection, limit);\n  }\n  const [trades] = useAsyncData(\n    getUnfilteredTrades,\n    tuple('getUnfilteredTrades', market, connection),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n  return trades;\n  // NOTE: For now, websocket is too expensive since the event queue is large\n  // and updates very frequently\n\n  // let data = useAccountData(market && market._decoded.eventQueue);\n  // if (!data) {\n  //   return null;\n  // }\n  // const events = decodeEventQueue(data, limit);\n  // return events\n  //   .filter((event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0))\n  //   .map(market.parseFillEvent.bind(market));\n}\n\nexport function useOrderbookAccounts() {\n  const { market } = useMarket();\n  let bidData = useAccountData(market && market._decoded.bids);\n  let askData = useAccountData(market && market._decoded.asks);\n  return {\n    bidOrderbook: bidData ? Orderbook.decode(market, bidData) : null,\n    askOrderbook: askData ? Orderbook.decode(market, askData) : null,\n  };\n}\n\nexport function useOrderbook(depth = 20) {\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\n  const { market } = useMarket();\n  const bids =\n    !bidOrderbook || !market\n      ? []\n      : bidOrderbook.getL2(depth).map(([price, size]) => [price, size]);\n  const asks =\n    !askOrderbook || !market\n      ? []\n      : askOrderbook.getL2(depth).map(([price, size]) => [price, size]);\n  return [{ bids, asks }, !!bids || !!asks];\n}\n\n// Want the balances table to be fast-updating, dont want open orders to flicker\n// TODO: Update to use websocket\nexport function useOpenOrdersAccounts(fast = false) {\n  const { market } = useMarket();\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getTokenAccounts() {\n    if (!connected) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    return await market.findOpenOrdersAccountsForOwner(\n      connection,\n      wallet.publicKey,\n    );\n  }\n  return useAsyncData(\n    getTokenAccounts,\n    tuple('openOrdersAccounts', wallet, market, connected),\n    { refreshInterval: fast ? _FAST_REFRESH_INTERVAL : _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useSelectedOpenOrdersAccount(fast = false) {\n  const [accounts] = useOpenOrdersAccounts(fast);\n  if (!accounts) {\n    return null;\n  }\n  return accounts[0];\n}\n\nexport function useOpenOrdersAddresses() {\n  const [openOrdersAccounts] = useOpenOrdersAccounts();\n  if (!openOrdersAccounts) {\n    return null;\n  }\n  return openOrdersAccounts.map(({ publicKey }) => publicKey);\n}\n\n// This is okay to poll\nexport function useBaseCurrencyAccounts() {\n  const { market } = useMarket();\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getTokenAccounts() {\n    if (!connected) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    return await market.findBaseTokenAccountsForOwner(\n      connection,\n      wallet.publicKey,\n      true,\n    );\n  }\n  return useAsyncData(\n    getTokenAccounts,\n    tuple('getTokenAccounts', wallet, market, connected),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\n// This is okay to poll\nexport function useQuoteCurrencyAccounts() {\n  const { market } = useMarket();\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getTokenAccounts() {\n    if (!connected) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    return await market.findQuoteTokenAccountsForOwner(\n      connection,\n      wallet.publicKey,\n      true,\n    );\n  }\n  return useAsyncData(\n    getTokenAccounts,\n    tuple('useQuoteCurrencyAccounts', wallet, market, connected),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useSelectedQuoteCurrencyAccount() {\n  const [accounts] = useQuoteCurrencyAccounts();\n  if (!accounts) {\n    return null;\n  }\n  return accounts[0];\n}\n\nexport function useSelectedBaseCurrencyAccount() {\n  const [accounts] = useBaseCurrencyAccounts();\n  if (!accounts) {\n    return null;\n  }\n  return accounts[0];\n}\n\n// TODO: Update to use websocket\nexport function useQuoteCurrencyBalances() {\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const { market } = useMarket();\n  const [accountInfo, loaded] = useAccountInfo(quoteCurrencyAccount?.pubkey);\n  if (!market || !quoteCurrencyAccount || !loaded) {\n    return null;\n  }\n  if (market.quoteMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\n    return accountInfo?.lamports / 1e9 ?? 0;\n  }\n  return market.quoteSplSizeToNumber(\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\n  );\n}\n\n// TODO: Update to use websocket\nexport function useBaseCurrencyBalances() {\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const { market } = useMarket();\n  const [accountInfo, loaded] = useAccountInfo(baseCurrencyAccount?.pubkey);\n  if (!market || !baseCurrencyAccount || !loaded) {\n    return null;\n  }\n  if (market.baseMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\n    return accountInfo?.lamports / 1e9 ?? 0;\n  }\n  return market.baseSplSizeToNumber(\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\n  );\n}\n\nexport function useOpenOrders() {\n  const { market, marketName } = useMarket();\n  const openOrdersAccount = useSelectedOpenOrdersAccount();\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\n  if (!market || !openOrdersAccount || !bidOrderbook || !askOrderbook) {\n    return null;\n  }\n  return market\n    .filterForOpenOrders(bidOrderbook, askOrderbook, [openOrdersAccount])\n    .map((order) => ({ ...order, marketName }));\n}\n\nexport function useTrades(limit = 100) {\n  const trades = _useUnfilteredTrades(limit);\n  if (!trades) {\n    return null;\n  }\n  // Until partial fills are each given their own fill, use maker fills\n  return trades\n    .filter(({ eventFlags }) => eventFlags.maker)\n    .map((trade) => ({\n      ...trade,\n      side: trade.side === 'buy' ? 'sell' : 'buy',\n    }));\n}\n\nexport function useFills(limit = 100) {\n  const { marketName } = useMarket();\n  const fills = _useUnfilteredTrades(limit);\n  const [openOrdersAccounts] = useOpenOrdersAccounts();\n  if (!openOrdersAccounts || openOrdersAccounts.length === 0) {\n    return null;\n  }\n  if (!fills) {\n    return null;\n  }\n  return fills\n    .filter((fill) =>\n      openOrdersAccounts.some((openOrdersAccount) =>\n        fill.openOrders.equals(openOrdersAccount.publicKey),\n      ),\n    )\n    .map((fill) => ({ ...fill, marketName }));\n}\n\n// TODO: Update to use websocket\nexport function useFillsForAllMarkets(limit = 100) {\n  const { connected, wallet } = useWallet();\n\n  const connection = useConnection();\n  const allMarkets = useAllMarkets();\n\n  async function getFillsForAllMarkets() {\n    let fills = [];\n    if (!connected) {\n      return fills;\n    }\n\n    let marketData;\n    for (marketData of allMarkets) {\n      const { market, marketName } = marketData;\n      if (!market) {\n        return fills;\n      }\n      const openOrdersAccounts = await market.findOpenOrdersAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n      const openOrdersAccount = openOrdersAccounts && openOrdersAccounts[0];\n      if (!openOrdersAccount) {\n        return fills;\n      }\n      const eventQueueData = await connection.getAccountInfo(\n        market && market._decoded.eventQueue,\n      );\n      let data = eventQueueData?.data;\n      if (!data) {\n        return fills;\n      }\n      const events = decodeEventQueue(data, limit);\n      const fillsForMarket = events\n        .filter(\n          (event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0),\n        )\n        .map(market.parseFillEvent.bind(market));\n      const ownFillsForMarket = fillsForMarket\n        .filter((fill) => fill.openOrders.equals(openOrdersAccount.publicKey))\n        .map((fill) => ({ ...fill, marketName }));\n      fills = fills.concat(ownFillsForMarket);\n    }\n\n    console.log(JSON.stringify(fills));\n    return fills;\n  }\n\n  return useAsyncData(\n    getFillsForAllMarkets,\n    tuple('getFillsForAllMarkets', connected, connection, allMarkets, wallet),\n    { refreshInterval: _FAST_REFRESH_INTERVAL },\n  );\n}\n\n// TODO: Update to use websocket\nexport function useOpenOrdersForAllMarkets() {\n  const { connected, wallet } = useWallet();\n\n  const connection = useConnection();\n  const allMarkets = useAllMarkets();\n\n  async function getOpenOrdersForAllMarkets() {\n    let orders = [];\n    if (!connected) {\n      return orders;\n    }\n\n    let marketData;\n    for (marketData of allMarkets) {\n      const { market, marketName } = marketData;\n      if (!market) {\n        return orders;\n      }\n      const openOrdersAccounts = await market.findOpenOrdersAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n      const openOrdersAccount = openOrdersAccounts && openOrdersAccounts[0];\n      if (!openOrdersAccount) {\n        return orders;\n      }\n      const [bids, asks] = await Promise.all([\n        market.loadBids(connection),\n        market.loadAsks(connection),\n      ]);\n      const ordersForMarket = [...bids, ...asks]\n        .filter((order) => {\n          return order.openOrdersAddress.equals(openOrdersAccount.publicKey);\n        })\n        .map((order) => {\n          return { ...order, marketName };\n        });\n      orders = orders.concat(ordersForMarket);\n    }\n\n    return orders;\n  }\n\n  return useAsyncData(\n    getOpenOrdersForAllMarkets,\n    tuple(\n      'getOpenOrdersForAllMarkets',\n      connected,\n      connection,\n      wallet,\n      allMarkets,\n    ),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useBalances() {\n  const baseCurrencyBalances = useBaseCurrencyBalances();\n  const quoteCurrencyBalances = useQuoteCurrencyBalances();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const baseExists =\n    openOrdersAccount &&\n    openOrdersAccount.baseTokenTotal &&\n    openOrdersAccount.baseTokenFree;\n  const quoteExists =\n    openOrdersAccount &&\n    openOrdersAccount.quoteTokenTotal &&\n    openOrdersAccount.quoteTokenFree;\n  if (baseCurrency === 'UNKNOWN' || quoteCurrency === 'UNKNOWN') {\n    return [];\n  }\n  return [\n    {\n      key: `${baseCurrency}${quoteCurrency}${baseCurrency}`,\n      coin: baseCurrency,\n      wallet: baseCurrencyBalances,\n      orders:\n        baseExists && market\n          ? market.baseSplSizeToNumber(\n              openOrdersAccount.baseTokenTotal.sub(\n                openOrdersAccount.baseTokenFree,\n              ),\n            )\n          : null,\n      unsettled:\n        baseExists && market\n          ? market.baseSplSizeToNumber(openOrdersAccount.baseTokenFree)\n          : null,\n    },\n    {\n      key: `${quoteCurrency}${baseCurrency}${quoteCurrency}`,\n      coin: quoteCurrency,\n      wallet: quoteCurrencyBalances,\n      orders:\n        quoteExists && market\n          ? market.quoteSplSizeToNumber(\n              openOrdersAccount.quoteTokenTotal.sub(\n                openOrdersAccount.quoteTokenFree,\n              ),\n            )\n          : null,\n      unsettled:\n        quoteExists && market\n          ? market.quoteSplSizeToNumber(openOrdersAccount.quoteTokenFree)\n          : null,\n    },\n  ];\n}\n\nexport function useWalletBalancesForAllMarkets() {\n  const { connected, wallet } = useWallet();\n\n  const connection = useConnection();\n  const allMarkets = useAllMarkets();\n\n  async function getWalletBalancesForAllMarkets() {\n    let balances = [];\n    if (!connected) {\n      return balances;\n    }\n\n    let marketData;\n    for (marketData of allMarkets) {\n      const { market, marketName } = marketData;\n      if (!market) {\n        return balances;\n      }\n      const baseCurrency = marketName.includes('/') && marketName.split('/')[0];\n      if (!balances.find((balance) => balance.coin === baseCurrency)) {\n        const baseBalance = await getCurrencyBalance(\n          market,\n          connection,\n          wallet,\n          true,\n        );\n        balances.push({\n          key: baseCurrency,\n          coin: baseCurrency,\n          wallet: baseBalance,\n        });\n      }\n      const quoteCurrency =\n        marketName.includes('/') && marketName.split('/')[1];\n      if (!balances.find((balance) => balance.coin === quoteCurrency)) {\n        const quoteBalance = await getCurrencyBalance(\n          market,\n          connection,\n          wallet,\n          false,\n        );\n        balances.push({\n          key: quoteCurrency,\n          coin: quoteCurrency,\n          wallet: quoteBalance,\n        });\n      }\n    }\n\n    return balances;\n  }\n\n  return useAsyncData(\n    getWalletBalancesForAllMarkets,\n    tuple(\n      'getWalletBalancesForAllMarkets',\n      connected,\n      connection,\n      wallet,\n      allMarkets,\n    ),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nasync function getCurrencyBalance(market, connection, wallet, base = true) {\n  const currencyAccounts = base\n    ? await market.findBaseTokenAccountsForOwner(connection, wallet.publicKey)\n    : await market.findQuoteTokenAccountsForOwner(connection, wallet.publicKey);\n  const currencyAccount = currencyAccounts && currencyAccounts[0];\n  const tokenAccountBalances = await connection.getTokenAccountBalance(\n    currencyAccount.pubkey,\n  );\n  return tokenAccountBalances?.value?.uiAmount;\n}\n\nexport function useOpenOrderAccountBalancesForAllMarkets() {\n  const { connected, wallet } = useWallet();\n\n  const connection = useConnection();\n  const allMarkets = useAllMarkets();\n\n  async function getOpenOrderAccountsForAllMarkets() {\n    let accounts = [];\n    if (!connected) {\n      return accounts;\n    }\n\n    let marketData;\n    for (marketData of allMarkets) {\n      const { market, marketName } = marketData;\n      if (!market) {\n        return accounts;\n      }\n      const openOrderAccounts = await market.findOpenOrdersAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n      if (!openOrderAccounts) {\n        continue;\n      }\n      const baseCurrencyAccounts = await market.findBaseTokenAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n      const quoteCurrencyAccounts = await market.findQuoteTokenAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n\n      const baseCurrency = marketName.includes('/') && marketName.split('/')[0];\n      const quoteCurrency =\n        marketName.includes('/') && marketName.split('/')[1];\n\n      const openOrderAccountBalances = [];\n      openOrderAccounts.forEach((openOrdersAccount) => {\n        const inOrdersBase =\n          openOrdersAccount?.baseTokenTotal &&\n          openOrdersAccount?.baseTokenFree &&\n          market.baseSplSizeToNumber(\n            openOrdersAccount.baseTokenTotal.sub(\n              openOrdersAccount.baseTokenFree,\n            ),\n          );\n        const inOrdersQuote =\n          openOrdersAccount?.quoteTokenTotal &&\n          openOrdersAccount?.quoteTokenFree &&\n          market.baseSplSizeToNumber(\n            openOrdersAccount.quoteTokenTotal.sub(\n              openOrdersAccount.quoteTokenFree,\n            ),\n          );\n        const unsettledBase =\n          openOrdersAccount?.baseTokenFree &&\n          market.baseSplSizeToNumber(openOrdersAccount.baseTokenFree);\n        const unsettledQuote =\n          openOrdersAccount?.quoteTokenFree &&\n          market.baseSplSizeToNumber(openOrdersAccount.quoteTokenFree);\n        openOrderAccountBalances.push({\n          market: marketName,\n          coin: baseCurrency,\n          key: baseCurrency,\n          orders: inOrdersBase,\n          unsettled: unsettledBase,\n          openOrdersAccount: openOrdersAccount,\n          baseCurrencyAccount: baseCurrencyAccounts && baseCurrencyAccounts[0],\n          quoteCurrencyAccount:\n            quoteCurrencyAccounts && quoteCurrencyAccounts[0],\n        });\n        openOrderAccountBalances.push({\n          market: marketName,\n          coin: quoteCurrency,\n          key: quoteCurrency,\n          orders: inOrdersQuote,\n          unsettled: unsettledQuote,\n          openOrdersAccount: openOrdersAccount,\n          baseCurrencyAccount: baseCurrencyAccounts && baseCurrencyAccounts[0],\n          quoteCurrencyAccount:\n            quoteCurrencyAccounts && quoteCurrencyAccounts[0],\n        });\n      });\n      accounts = accounts.concat(openOrderAccountBalances);\n    }\n\n    return accounts;\n  }\n\n  return useAsyncData(\n    getOpenOrderAccountsForAllMarkets,\n    tuple(\n      'getOpenOrderAccountsForAllMarkets',\n      connected,\n      connection,\n      wallet,\n      allMarkets,\n    ),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\nhtml,body{\n  background: #11161D;\n}\ninput[type=number]::-webkit-inner-spin-button {\n  opacity: 0;\n}\ninput[type=number]:hover::-webkit-inner-spin-button,\ninput[type=number]:focus::-webkit-inner-spin-button {\n  opacity: 0.25;\n}\n/* width */\n::-webkit-scrollbar {\n  width: 15px;\n}\n/* Track */\n::-webkit-scrollbar-track {\n  background: #2d313c;\n}\n/* Handle */\n::-webkit-scrollbar-thumb {\n  background: #5b5f67;\n}\n/* Handle on hover */\n::-webkit-scrollbar-thumb:hover {\n  background: #5b5f67;\n}\n.ant-slider-track, .ant-slider:hover .ant-slider-track {\n  background-color: #2abdd2;\n  opacity: 0.75;\n}\n.ant-slider-track,\n.ant-slider ant-slider-track:hover {\n  background-color: #2abdd2;\n  opacity: 0.75;\n}\n.ant-slider-dot-active,\n.ant-slider-handle,\n.ant-slider-handle-click-focused,\n.ant-slider:hover .ant-slider-handle:not(.ant-tooltip-open)  {\n  border: 2px solid #2abdd2; \n}\n.ant-table-tbody > tr.ant-table-row:hover > td {\n  background: #273043;\n}\n.ant-table-tbody > tr > td {\n  border-bottom: 8px solid #1A2029;\n}\n.ant-table-container table > thead > tr:first-child th {\n  border-bottom: none;\n}\n.ant-divider-horizontal.ant-divider-with-text::before, .ant-divider-horizontal.ant-divider-with-text::after {\n  border-top: 1px solid #434a59 !important;\n}\n.ant-layout {\n    background: #11161D\n  }\n  .ant-table {\n    background: #212734;\n  }\n  .ant-table-thead > tr > th {\n    background: #1A2029;\n  }\n.ant-select-item-option-content {\n  img {\n    margin-right: 4px;\n  }\n}\n.ant-modal-content {\n  background-color: #212734;\n}\n\n@-webkit-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n@-moz-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n@-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n.flash {\n  -moz-animation: highlight 0.5s ease 0s 1 alternate ;\n  -webkit-animation: highlight 0.5s ease 0s 1 alternate;\n  animation: highlight 0.5s ease 0s 1 alternate;\n}`;\n","import React, { Component } from 'react';\nimport { Typography } from 'antd';\n\nconst { Title } = Typography;\n\nexport default class ErrorBoundary extends Component {\n  state = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div>\n          <div>\n            <Title level={2}>Something went wrong.</Title>\n            <Title level={4}>Please try again later.</Title>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  margin: 5px;\n  padding: 20px;\n  background-color: #1a2029;\n`;\n\nexport default function FloatingElement({ style, children }) {\n  return <Wrapper style={{ ...style }}>{children}</Wrapper>;\n}\n","import { Col, Row } from 'antd';\nimport React, { useRef, useEffect } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useMarket, useOrderbook, useMarkPrice } from '../utils/markets';\nimport { isEqual, getDecimalCount } from '../utils/utils';\nimport FloatingElement from './layout/FloatingElement';\nimport usePrevious from '../utils/usePrevious';\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\n\nconst SizeTitle = styled(Row)`\n  padding: 20px 0 14px;\n  color: #434a59;\n`;\n\nconst MarkPriceTitle = styled(Row)`\n  padding: 20px 0 14px;\n  font-weight: 700;\n`;\n\nconst Line = styled.div`\n  text-align: right;\n  float: right;\n  height: 100%;\n  ${(props) =>\n    props['data-width'] &&\n    css`\n      width: ${props['data-width']};\n    `}\n  ${(props) =>\n    props['data-bgcolor'] &&\n    css`\n      background-color: ${props['data-bgcolor']};\n    `}\n`;\n\nconst Price = styled.div`\n  position: absolute;\n  right: 5px;\n  color: white;\n`;\n\nexport default function Orderbook({ smallScreen, depth = 7, onPrice, onSize }) {\n  const markPrice = useMarkPrice();\n  const [orderbook, loaded] = useOrderbook();\n  const { baseCurrency, quoteCurrency } = useMarket();\n\n  let bids = [];\n  let asks = [];\n  if (loaded) {\n    bids = orderbook.bids;\n    asks = orderbook.asks;\n  }\n\n  function getCumulativeOrderbookSide(orders, backwards = false) {\n    let cumulative = [];\n    let cumulativeSize = 0;\n    orders.forEach(([price, size]) => {\n      if (cumulative.length < depth) {\n        cumulativeSize += size;\n        cumulative.push({ price, size, cumulativeSize });\n      }\n    });\n    if (backwards) {\n      cumulative = cumulative.reverse();\n    }\n    let totalSize =\n      cumulative.length > 0 &&\n      cumulative[backwards ? 0 : cumulative.length - 1].cumulativeSize;\n    return [cumulative, totalSize];\n  }\n\n  let [asksToDisplay, totalAskSize] = getCumulativeOrderbookSide(asks, true);\n  let [bidsToDisplay, totalBidSize] = getCumulativeOrderbookSide(bids, false);\n\n  let totalSize = totalAskSize + totalBidSize;\n\n  return (\n    <FloatingElement\n      style={\n        smallScreen ? { flex: 1 } : { height: '500px', overflow: 'hidden' }\n      }\n    >\n      <Title>Orderbook</Title>\n      <SizeTitle>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          Size ({baseCurrency})\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          Price ({quoteCurrency})\n        </Col>\n      </SizeTitle>\n      {asksToDisplay.map(({ price, size, cumulativeSize }, index) => (\n        <OrderbookRow\n          key={index}\n          index={index}\n          price={price}\n          size={size}\n          side={'sell'}\n          sizePercent={(cumulativeSize / (totalSize || 1)) * 100}\n          onSizeClick={() => onSize(size)}\n          onPriceClick={() => onPrice(price)}\n        />\n      ))}\n      <MarkPriceComponent markPrice={markPrice} />\n      {bidsToDisplay.map(({ price, size, cumulativeSize }, index) => (\n        <OrderbookRow\n          key={index}\n          index={index}\n          price={price}\n          size={size}\n          side={'buy'}\n          sizePercent={(cumulativeSize / (totalSize || 1)) * 100}\n          onSizeClick={() => onSize(size)}\n          onPriceClick={() => onPrice(price)}\n        />\n      ))}\n    </FloatingElement>\n  );\n}\n\nconst OrderbookRow = React.memo(\n  ({ index, side, price, size, sizePercent, onSizeClick, onPriceClick }) => {\n    const element = useRef();\n\n    const { market } = useMarket();\n\n    useEffect(() => {\n      // eslint-disable-next-line\n      let _ = element.current?.classList.add('flash');\n      setTimeout(() => element.current?.classList.remove('flash'), 500);\n    }, [price, size]);\n\n    let formattedSize =\n      market?.minOrderSize && !isNaN(size)\n        ? Number(size).toFixed(getDecimalCount(market.minOrderSize) + 1)\n        : size;\n\n    let formattedPrice =\n      market?.tickSize && !isNaN(price)\n        ? Number(price).toFixed(getDecimalCount(market.tickSize) + 1)\n        : price;\n\n    return (\n      <Row\n        ref={element}\n        id={index + ''}\n        style={{ marginBottom: 1 }}\n        onClick={onSizeClick}\n      >\n        <Col span={12} style={{ textAlign: 'left' }}>\n          {formattedSize}\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          <Line\n            data-width={sizePercent + '%'}\n            data-bgcolor={\n              side === 'buy'\n                ? 'rgba(65, 199, 122, 0.6)'\n                : 'rgba(242, 60, 105, 0.6)'\n            }\n          />\n          <Price onClick={onPriceClick}>{formattedPrice}</Price>\n        </Col>\n      </Row>\n    );\n  },\n  (prevProps, nextProps) =>\n    isEqual(prevProps, nextProps, ['side', 'price', 'size', 'sizePercent']),\n);\n\nconst MarkPriceComponent = React.memo(\n  ({ markPrice }) => {\n    const { market } = useMarket();\n    const previousMarkPrice = usePrevious(markPrice);\n\n    let markPriceColor =\n      markPrice > previousMarkPrice\n        ? '#41C77A'\n        : markPrice < previousMarkPrice\n        ? '#F23B69'\n        : 'white';\n\n    let formattedMarkPrice =\n      markPrice &&\n      market?.tickSize &&\n      markPrice.toFixed(getDecimalCount(market.tickSize));\n\n    return (\n      <MarkPriceTitle justify=\"center\">\n        <Col style={{ color: markPriceColor }}>\n          {markPrice > previousMarkPrice && (\n            <ArrowUpOutlined style={{ marginRight: 5 }} />\n          )}\n          {markPrice < previousMarkPrice && (\n            <ArrowDownOutlined style={{ marginRight: 5 }} />\n          )}\n          {formattedMarkPrice || '----'}\n        </Col>\n      </MarkPriceTitle>\n    );\n  },\n  (prevProps, nextProps) => isEqual(prevProps, nextProps, ['markPrice']),\n);\n","import { useEffect, useRef } from 'react';\n\nexport default function usePrevious(value) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef();\n\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n\n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\n","import React from 'react';\nimport { ConfigProvider, Table } from 'antd';\n\nexport default function DataTable({\n  dataSource,\n  columns,\n  emptyLabel = 'No data',\n  pagination = false,\n  loading = false,\n  pageSize = 10,\n}) {\n  const customizeRenderEmpty = () => (\n    <div\n      style={{\n        padding: '20px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      {emptyLabel}\n    </div>\n  );\n\n  return (\n    <ConfigProvider renderEmpty={customizeRenderEmpty}>\n      <Table\n        dataSource={dataSource}\n        columns={columns}\n        pagination={pagination ? { pagination: true, pageSize } : false}\n        loading={loading}\n      />\n    </ConfigProvider>\n  );\n}\n","import { notify } from './notifications';\nimport { getDecimalCount, sleep } from './utils';\nimport { Account, SystemProgram } from '@solana/web3.js';\nimport { TokenInstructions } from '@project-serum/serum';\n\nexport async function createTokenAccount({\n  connection,\n  wallet,\n  mintPublicKey,\n  onConfirmCallBack,\n}) {\n  let newAccount = new Account();\n  const transaction = SystemProgram.createAccount({\n    fromPubkey: wallet.publicKey,\n    newAccountPubkey: newAccount.publicKey,\n    lamports: await connection.getMinimumBalanceForRentExemption(165),\n    space: 165,\n    programId: TokenInstructions.TOKEN_PROGRAM_ID,\n  });\n  transaction.add(\n    TokenInstructions.initializeAccount({\n      account: newAccount.publicKey,\n      mint: mintPublicKey,\n      owner: wallet.publicKey,\n    }),\n  );\n  const onConfirm = (result) => {\n    if (result.timeout) {\n      notify({\n        message: 'Timed out',\n        type: 'error',\n        description: 'Timed out awaiting confirmation on transaction',\n      });\n    } else if (result.err) {\n      console.log(result.err);\n      notify({ message: 'Error creating account', type: 'error' });\n    } else {\n      notify({ message: 'Account creation confirmed', type: 'success' });\n    }\n    onConfirmCallBack && onConfirmCallBack();\n  };\n  const onBeforeSend = () => notify({ message: 'Creating account...' });\n  const onAfterSend = () =>\n    notify({ message: 'Account created', type: 'success' });\n  return await sendTransaction({\n    transaction,\n    wallet,\n    connection,\n    onBeforeSend: onBeforeSend,\n    onAfterSend: onAfterSend,\n    onConfirm,\n    signers: [wallet.publicKey, newAccount],\n  });\n}\n\nexport async function settleFunds({\n  market,\n  openOrders,\n  connection,\n  wallet,\n  baseCurrencyAccount,\n  quoteCurrencyAccount,\n}) {\n  if (\n    !market ||\n    !wallet ||\n    !connection ||\n    !openOrders ||\n    !baseCurrencyAccount ||\n    !quoteCurrencyAccount\n  ) {\n    if (baseCurrencyAccount && !quoteCurrencyAccount) {\n      return await createTokenAccount({\n        connection,\n        wallet,\n        mintPublicKey: market.quoteMintAddress,\n        onConfirmCallBack: async () => {\n          await sleep(1000); // wait to make sure currency account is available\n          const quoteCurrencyAccounts = await market.findQuoteTokenAccountsForOwner(\n            connection,\n            wallet.publicKey,\n            true,\n          );\n          quoteCurrencyAccounts &&\n            settleFunds({\n              market,\n              openOrders,\n              connection,\n              wallet,\n              baseCurrencyAccount,\n              quoteCurrencyAccount: quoteCurrencyAccounts[0],\n            });\n        },\n      });\n    } else if (quoteCurrencyAccount && !baseCurrencyAccount) {\n      return await createTokenAccount({\n        connection,\n        wallet,\n        mintPublicKey: market.baseMintAddress,\n        onConfirmCallBack: async () => {\n          await sleep(1000); // wait to make sure currency account is available\n          const baseCurrencyAccounts = await market.findBaseTokenAccountsForOwner(\n            connection,\n            wallet.publicKey,\n            true,\n          );\n          baseCurrencyAccounts &&\n            settleFunds({\n              market,\n              openOrders,\n              connection,\n              wallet,\n              baseCurrencyAccount: baseCurrencyAccounts[0],\n              quoteCurrencyAccount,\n            });\n        },\n      });\n    } else {\n      notify({ message: 'Not connected' });\n      return;\n    }\n  }\n\n  const { transaction, signers } = await market.makeSettleFundsTransaction(\n    connection,\n    openOrders,\n    baseCurrencyAccount.pubkey,\n    quoteCurrencyAccount.pubkey,\n  );\n\n  const onConfirm = (result) => {\n    if (result.timeout) {\n      notify({\n        message: 'Timed out',\n        type: 'error',\n        description: 'Timed out awaiting confirmation on transaction',\n      });\n    } else if (result.err) {\n      console.log(result.err);\n      notify({ message: 'Error settling funds', type: 'error' });\n    } else {\n      notify({ message: 'Fund settlement confirmed', type: 'success' });\n    }\n  };\n  const onBeforeSend = () => notify({ message: 'Settling funds...' });\n  const onAfterSend = () =>\n    notify({ message: 'Funds settled', type: 'success' });\n  return await sendTransaction({\n    transaction,\n    signers,\n    wallet,\n    connection,\n    onBeforeSend,\n    onAfterSend,\n    onConfirm,\n  });\n}\n\nexport async function cancelOrder(params) {\n  return cancelOrders({ ...params, orders: [params.order] });\n}\n\nexport async function cancelOrders({\n  market,\n  wallet,\n  connection,\n  orders,\n  onBeforeSendCallBack,\n  onAfterSendCallBack,\n  onConfirmCallBack,\n}) {\n  const transaction = market.makeMatchOrdersTransaction(5);\n  orders.forEach((order) => {\n    transaction.add(\n      market.makeCancelOrderInstruction(connection, wallet.publicKey, order),\n    );\n  });\n  transaction.add(market.makeMatchOrdersTransaction(5));\n  const onConfirm = (result) => {\n    if (result.timeout) {\n      notify({\n        message: 'Timed out',\n        type: 'error',\n        description: 'Timed out awaiting confirmation on transaction',\n      });\n    } else if (result.err) {\n      console.log(result.err);\n      notify({\n        message:\n          orders.length > 1\n            ? 'Error cancelling orders'\n            : 'Error cancelling order',\n        type: 'error',\n      });\n    } else {\n      notify({\n        message:\n          orders.length > 1\n            ? 'Order cancellations confirmed'\n            : 'Order cancellation confirmed',\n        type: 'success',\n      });\n    }\n    onConfirmCallBack && onConfirmCallBack();\n  };\n  const onBeforeSend = () => {\n    notify({ message: 'Sending cancel...' });\n    onBeforeSendCallBack && onBeforeSendCallBack();\n  };\n  const onAfterSend = () => {\n    notify({\n      message: orders.length > 1 ? 'Orders cancelled' : 'Order cancelled',\n      type: 'success',\n    });\n    onAfterSendCallBack && onAfterSendCallBack();\n  };\n\n  return await sendTransaction({\n    transaction,\n    wallet,\n    connection,\n    onBeforeSend,\n    onAfterSend,\n    onConfirm,\n  });\n}\n\nexport async function placeOrder({\n  side,\n  price,\n  size,\n  orderType,\n  market,\n  connection,\n  wallet,\n  baseCurrencyAccount,\n  quoteCurrencyAccount,\n  onBeforeSendCallBack,\n  onAfterSendCallBack,\n  onConfirmCallBack,\n}) {\n  let formattedMinOrderSize =\n    market?.minOrderSize?.toFixed(getDecimalCount(market.minOrderSize)) ||\n    market?.minOrderSize;\n  let formattedTickSize =\n    market?.tickSize?.toFixed(getDecimalCount(market.tickSize)) ||\n    market?.tickSize;\n  const isIncrement = (num, step) =>\n    Math.abs((num / step) % 1) < 1e-5 ||\n    Math.abs(((num / step) % 1) - 1) < 1e-5;\n  if (isNaN(price)) {\n    notify({ message: 'Invalid price', type: 'error' });\n    return;\n  }\n  if (isNaN(size)) {\n    notify({ message: 'Invalid size', type: 'error' });\n    return;\n  }\n  if (!wallet || !wallet.publicKey) {\n    notify({ message: 'Connect wallet', type: 'error' });\n    return;\n  }\n  if (!market) {\n    notify({ message: 'Invalid  market', type: 'error' });\n    return;\n  }\n  if (!isIncrement(size, market.minOrderSize)) {\n    notify({\n      message: `Size must be an increment of ${formattedMinOrderSize}`,\n      type: 'error',\n    });\n    return;\n  }\n  if (size < market.minOrderSize) {\n    notify({ message: 'Size too small', type: 'error' });\n    return;\n  }\n  if (!isIncrement(price, market.tickSize)) {\n    notify({\n      message: `Price must be an increment of ${formattedTickSize}`,\n      type: 'error',\n    });\n    return;\n  }\n  if (price < market.tickSize) {\n    notify({ message: 'Price under tick size', type: 'error' });\n    return;\n  }\n  const owner = wallet.publicKey;\n\n  const payer = side === 'sell' ? baseCurrencyAccount : quoteCurrencyAccount;\n  if (!payer) {\n    notify({\n      message: 'Need an SPL token account for cost currency',\n      type: 'error',\n    });\n    return;\n  }\n  const params = {\n    owner,\n    payer,\n    side,\n    price,\n    size,\n    orderType,\n  };\n  console.log(params);\n\n  const transaction = market.makeMatchOrdersTransaction(5);\n  let {\n    transaction: placeOrderTx,\n    signers,\n  } = await market.makePlaceOrderTransaction(connection, params);\n  transaction.add(placeOrderTx);\n  transaction.add(market.makeMatchOrdersTransaction(5));\n\n  const onConfirm = (result) => {\n    if (result.timeout) {\n      notify({\n        message: 'Timed out',\n        type: 'error',\n        description: 'Timed out awaiting confirmation on transaction',\n      });\n    } else if (result.err) {\n      console.log(result.err);\n      notify({ message: 'Error placing order', type: 'error' });\n    } else {\n      notify({ message: 'Order confirmed', type: 'success' });\n    }\n    onConfirmCallBack && onConfirmCallBack();\n  };\n  const onBeforeSend = () => {\n    notify({ message: 'Sending order...' });\n    onBeforeSendCallBack && onBeforeSendCallBack();\n  };\n  const onAfterSend = () => {\n    notify({ message: 'Order sent', type: 'success' });\n    onAfterSendCallBack && onAfterSendCallBack();\n  };\n\n  return await sendTransaction({\n    transaction,\n    wallet,\n    connection,\n    onBeforeSend,\n    onAfterSend,\n    onConfirm,\n    signers,\n  });\n}\n\nconst getUnixTs = () => {\n  return new Date().getTime() / 1000;\n};\n\nconst DEFAULT_TIMEOUT = 15000;\n\nasync function sendTransaction({\n  transaction,\n  wallet,\n  signers = [wallet.publicKey],\n  connection,\n  onBeforeSend,\n  onAfterSend,\n  onConfirm,\n  timeout = DEFAULT_TIMEOUT,\n}) {\n  transaction.recentBlockhash = (\n    await connection.getRecentBlockhash('max')\n  ).blockhash;\n  transaction.signPartial(...signers);\n  const rawTransaction = (\n    await wallet.signTransaction(transaction)\n  ).serialize();\n  let done = false;\n  const startTime = getUnixTs();\n  onBeforeSend();\n  const txid = await connection.sendRawTransaction(rawTransaction, {\n    skipPreflight: true,\n  });\n  onAfterSend();\n  console.log('Started sending transaction for', txid);\n  awaitTransactionSignatureConfirmation(txid, timeout, connection)\n    .then((res) => {\n      done = true;\n      onConfirm(res);\n    })\n    .catch((res) => {\n      done = true;\n      onConfirm(res);\n    });\n  while (!done && getUnixTs() - startTime < timeout) {\n    connection.sendRawTransaction(rawTransaction, {\n      skipPreflight: true,\n    });\n    await sleep(300);\n  }\n  console.log('Latency', txid, getUnixTs() - startTime);\n  return txid;\n}\n\nasync function awaitTransactionSignatureConfirmation(\n  txid,\n  timeout,\n  connection,\n) {\n  let done = false;\n  const result = await new Promise((resolve, reject) => {\n    (async () => {\n      setTimeout(() => {\n        if (done) {\n          return;\n        }\n        done = true;\n        console.log('Timed out for txid', txid);\n        reject({ timeout: true });\n      }, timeout);\n      try {\n        connection.onSignature(\n          txid,\n          (result) => {\n            console.log('WS confirmed', txid, result);\n            done = true;\n            if (result.err) {\n              reject(result);\n            } else {\n              resolve(result);\n            }\n          },\n          'recent',\n        );\n        console.log('Set up WS connection', txid);\n      } catch (e) {\n        done = true;\n        console.log('WS error in setup', txid, e);\n      }\n      while (!done) {\n        (async () => {\n          try {\n            const signatureStatuses = await connection.getSignatureStatuses([\n              txid,\n            ]);\n            const result = signatureStatuses && signatureStatuses.value[0];\n            if (!done) {\n              if (!result) {\n                console.log('REST null result for', txid, result);\n              } else if (result.err) {\n                console.log('REST error for', txid, result);\n                done = true;\n                reject(result);\n              } else if (!result.confirmations) {\n                console.log('REST no confirmations for', txid, result);\n              } else {\n                console.log('REST confirmation for', txid, result);\n                done = true;\n                resolve(result);\n              }\n            }\n          } catch (e) {\n            if (!done) {\n              console.log('REST connection error: txid', txid, e);\n            }\n          }\n        })();\n        await sleep(300);\n      }\n    })();\n  });\n  done = true;\n  return result;\n}\n","import { Button } from 'antd';\nimport React from 'react';\nimport {\n  useSelectedOpenOrdersAccount,\n  useMarket,\n  useSelectedBaseCurrencyAccount,\n  useSelectedQuoteCurrencyAccount,\n} from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\nimport { useSendConnection } from '../../utils/connection';\nimport { useWallet } from '../../utils/wallet';\nimport { settleFunds } from '../../utils/send';\n\nexport default function BalancesTable({ balances }) {\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const connection = useSendConnection();\n  const { wallet } = useWallet();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const { market } = useMarket();\n\n  async function onSettleFunds() {\n    return await settleFunds({\n      market,\n      openOrders: openOrdersAccount,\n      connection,\n      wallet,\n      baseCurrencyAccount,\n      quoteCurrencyAccount,\n    });\n  }\n\n  const columns = [\n    {\n      title: 'Coin',\n      dataIndex: 'coin',\n      key: 'coin',\n    },\n    {\n      title: 'Wallet Balance',\n      dataIndex: 'wallet',\n      key: 'wallet',\n    },\n    {\n      title: 'Orders',\n      dataIndex: 'orders',\n      key: 'orders',\n    },\n    {\n      title: 'Unsettled',\n      dataIndex: 'unsettled',\n      key: 'unsettled',\n    },\n    {\n      key: 'action',\n      render: () => (\n        <div style={{ textAlign: 'right' }}>\n          <Button ghost style={{ marginRight: 12 }} onClick={onSettleFunds}>\n            Settle\n          </Button>\n        </div>\n      ),\n    },\n  ];\n  return (\n    <DataTable\n      emptyLabel=\"No balances\"\n      dataSource={balances}\n      columns={columns}\n      pagination={false}\n    />\n  );\n}\n","import React, { useState } from 'react';\nimport { useMarket } from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\n\nimport styled from 'styled-components';\nimport { Button, Row, Col, Tag } from 'antd';\nimport { cancelOrder } from '../../utils/send';\nimport { useWallet } from '../../utils/wallet';\nimport { useSendConnection } from '../../utils/connection';\nimport { notify } from '../../utils/notifications';\nimport { DeleteOutlined } from '@ant-design/icons';\n\nconst CancelButton = styled(Button)`\n  color: #f23b69;\n  border: 1px solid #f23b69;\n`;\n\nexport default function OpenOrderTable({ openOrders }) {\n  let { market } = useMarket();\n  let { wallet } = useWallet();\n  let connection = useSendConnection();\n\n  const [cancelId, setCancelId] = useState(null);\n\n  async function cancel(order) {\n    try {\n      await cancelOrder({\n        order,\n        market,\n        connection,\n        wallet,\n        onBeforeSendCallBack: () => setCancelId(order?.orderId),\n        onConfirmCallBack: () => setCancelId(null),\n      });\n    } catch (e) {\n      notify({\n        message: 'Error cancelling order: ' + e.message,\n        type: 'error',\n      });\n      setCancelId(null);\n    }\n  }\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'marketName',\n      key: 'marketName',\n    },\n    {\n      title: 'Side',\n      dataIndex: 'side',\n      key: 'side',\n      render: (side) => (\n        <Tag\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\n          style={{ fontWeight: 700 }}\n        >\n          {side.charAt(0).toUpperCase() + side.slice(1)}\n        </Tag>\n      ),\n    },\n    {\n      title: 'Size',\n      dataIndex: 'size',\n      key: 'size',\n    },\n    {\n      title: 'Price',\n      dataIndex: 'price',\n      key: 'price',\n    },\n    {\n      key: 'orderId',\n      render: (order) => (\n        <div style={{ textAlign: 'right' }}>\n          <CancelButton\n            icon={<DeleteOutlined />}\n            onClick={() => cancel(order)}\n            loading={cancelId + '' === order?.orderId + ''}\n          >\n            Cancel\n          </CancelButton>\n        </div>\n      ),\n    },\n  ];\n  const dataSource = (openOrders || []).map((order) =>\n    Object.assign(order, { key: order.orderId }),\n  );\n\n  return (\n    <Row>\n      <Col span={24}>\n        <DataTable\n          emptyLabel=\"No open orders\"\n          dataSource={dataSource}\n          columns={columns}\n          pagination={true}\n          pageSize={5}\n        />\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react';\nimport { Row, Col, Tag } from 'antd';\nimport { useFills, useMarket } from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\n\nexport default function FillsTable() {\n  const fills = useFills();\n\n  const { quoteCurrency } = useMarket();\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'marketName',\n      key: 'marketName',\n    },\n    {\n      title: 'Side',\n      dataIndex: 'side',\n      key: 'side',\n      render: (side) => (\n        <Tag\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\n          style={{ fontWeight: 700 }}\n        >\n          {side.charAt(0).toUpperCase() + side.slice(1)}\n        </Tag>\n      ),\n    },\n    {\n      title: `Size`,\n      dataIndex: 'size',\n      key: 'size',\n    },\n    {\n      title: `Price`,\n      dataIndex: 'price',\n      key: 'price',\n    },\n    {\n      title: `Liquidity`,\n      dataIndex: 'liquidity',\n      key: 'liquidity',\n    },\n    {\n      title: quoteCurrency ? `Fees (${quoteCurrency})` : 'Fees',\n      dataIndex: 'feeCost',\n      key: 'feeCost',\n    },\n  ];\n\n  const dataSource = (fills || []).map((fill) => ({\n    ...fill,\n    key: `${fill.orderId}${fill.side}`,\n    liquidity: fill.eventFlags.maker ? 'Maker' : 'Taker',\n  }));\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <DataTable\n            dataSource={dataSource}\n            columns={columns}\n            pagination={true}\n            pageSize={5}\n            emptyLabel=\"No fills\"\n          />\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import BalancesTable from './BalancesTable';\nimport OpenOrderTable from './OpenOrderTable';\nimport React from 'react';\nimport { Tabs, Typography } from 'antd';\nimport FillsTable from './FillsTable';\nimport FloatingElement from '../layout/FloatingElement';\nimport { useOpenOrders, useBalances } from '../../utils/markets';\n\nconst { TabPane } = Tabs;\n\nexport default function Index() {\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <Typography>\n        Make sure to go to Balances and click Settle to send out your funds\n      </Typography>\n      <br />\n      <Typography>\n        To fund your wallet, use sollet.io. You can get SOL from FTX, Binance,\n        BitMax, and others. You can get other tokens from FTX.\n      </Typography>\n      <br />\n      <Tabs defaultActiveKey=\"orders\">\n        <TabPane tab=\"Open Orders\" key=\"orders\">\n          <OpenOrdersTab />\n        </TabPane>\n        <TabPane tab=\"Recent Trade History\" key=\"fills\">\n          <FillsTable />\n        </TabPane>\n        <TabPane tab=\"Balances\" key=\"balances\">\n          <BalancesTab />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\nconst OpenOrdersTab = () => {\n  const openOrders = useOpenOrders();\n\n  return <OpenOrderTable openOrders={openOrders} />;\n};\n\nconst BalancesTab = () => {\n  const balances = useBalances();\n\n  return <BalancesTable balances={balances} />;\n};\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nexport default function Link({ external = false, ...props }) {\n  let { to, children, ...rest } = props;\n  if (external) {\n    return (\n      <a href={to} target=\"_blank\" rel=\"noopener noreferrer\" {...rest}>\n        {children}\n      </a>\n    );\n  }\n  return (\n    <RouterLink to={to} {...rest}>\n      {children}\n    </RouterLink>\n  );\n}\n","import React from 'react';\nimport { Modal } from 'antd';\nimport {\n  useSelectedBaseCurrencyAccount,\n  useMarket,\n  useSelectedQuoteCurrencyAccount,\n} from '../utils/markets';\nimport { TOKEN_MINTS } from '@project-serum/serum';\nimport { useWallet } from '../utils/wallet';\nimport Link from './Link';\n\nexport default function DepositDialog({ onClose, depositCoin }) {\n  let coinMint =\n    depositCoin &&\n    TOKEN_MINTS.find(({ name }) => name === depositCoin)?.address;\n  const { market } = useMarket();\n  const { providerName, providerUrl } = useWallet();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  if (!coinMint) {\n    return null;\n  }\n\n  let account;\n  if (market?.baseMintAddress?.equals(coinMint)) {\n    account = baseCurrencyAccount;\n  } else if (market?.quoteMintAddress?.equals(coinMint)) {\n    account = quoteCurrencyAccount;\n  } else {\n    account = null;\n  }\n\n  return (\n    <Modal\n      title={depositCoin}\n      visible={!!coinMint}\n      onOk={onClose}\n      onCancel={onClose}\n    >\n      <div style={{ paddingTop: '20px' }}>\n        <p style={{ color: 'white' }}>Mint address:</p>\n        <p style={{ color: 'rgba(255,255,255,0.5)' }}>{coinMint.toBase58()}</p>\n        <div>\n          <p style={{ color: 'white' }}>Deposit address:</p>\n          <p style={{ color: 'rgba(255,255,255,0.5)' }}>\n            {account ? (\n              account.pubkey.toBase58()\n            ) : (\n              <>\n                Visit{' '}\n                <Link external to={providerUrl}>\n                  {providerName}\n                </Link>{' '}\n                to create an account for this mint\n              </>\n            )}\n          </p>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n","import { Button, Col, Divider, Row } from 'antd';\nimport React, { useState } from 'react';\nimport FloatingElement from './layout/FloatingElement';\nimport styled from 'styled-components';\nimport {\n  useBalances,\n  useMarket,\n  useSelectedBaseCurrencyAccount,\n  useSelectedOpenOrdersAccount,\n  useSelectedQuoteCurrencyAccount,\n} from '../utils/markets';\nimport DepositDialog from './DepositDialog';\nimport { useWallet } from '../utils/wallet';\nimport Link from './Link';\nimport { settleFunds } from '../utils/send';\nimport { useSendConnection } from '../utils/connection';\n\nconst RowBox = styled(Row)`\n  padding-bottom: 20px;\n`;\n\nconst Tip = styled.p`\n  font-size: 12px;\n  padding-top: 6px;\n`;\n\nconst ActionButton = styled(Button)`\n  color: #2abdd2;\n  background-color: #212734;\n  border-width: 0px;\n`;\n\nexport default function StandaloneBalancesDisplay() {\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const balances = useBalances();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const connection = useSendConnection();\n  const { providerUrl, providerName, wallet } = useWallet();\n  const [depositCoin, setDepositCoin] = useState('');\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const baseCurrencyBalances =\n    balances && balances.find((b) => b.coin === baseCurrency);\n  const quoteCurrencyBalances =\n    balances && balances.find((b) => b.coin === quoteCurrency);\n\n  async function onSettleFunds() {\n    return await settleFunds({\n      market,\n      openOrders: openOrdersAccount,\n      connection,\n      wallet,\n      baseCurrencyAccount,\n      quoteCurrencyAccount,\n    });\n  }\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      {[\n        [baseCurrency, baseCurrencyBalances],\n        [quoteCurrency, quoteCurrencyBalances],\n      ].map(([currency, balances], index) => (\n        <React.Fragment key={index}>\n          <Divider style={{ borderColor: 'white' }}>{currency}</Divider>\n          <RowBox\n            align=\"middle\"\n            justify=\"space-between\"\n            style={{ paddingBottom: 12 }}\n          >\n            <Col>Wallet balance:</Col>\n            <Col>{balances && balances.wallet}</Col>\n          </RowBox>\n          <RowBox\n            align=\"middle\"\n            justify=\"space-between\"\n            style={{ paddingBottom: 12 }}\n          >\n            <Col>Unsettled balance:</Col>\n            <Col>{balances && balances.unsettled}</Col>\n          </RowBox>\n          <RowBox align=\"middle\" justify=\"space-around\">\n            <Col style={{ width: 150 }}>\n              <ActionButton\n                block\n                size=\"large\"\n                onClick={() => setDepositCoin(currency)}\n              >\n                Deposit\n              </ActionButton>\n            </Col>\n            <Col style={{ width: 150 }}>\n              <ActionButton block size=\"large\" onClick={onSettleFunds}>\n                Settle\n              </ActionButton>\n            </Col>\n          </RowBox>\n          <Tip>\n            All deposits go to your{' '}\n            <Link external to={providerUrl}>\n              {providerName}\n            </Link>{' '}\n            wallet\n          </Tip>\n        </React.Fragment>\n      ))}\n      <DepositDialog\n        depositCoin={depositCoin}\n        onClose={() => setDepositCoin('')}\n      />\n    </FloatingElement>\n  );\n}\n","import { Button, Input, Radio, Switch, Slider } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport {\n  useBaseCurrencyBalances,\n  useQuoteCurrencyBalances,\n  useMarket,\n  useMarkPrice,\n  useSelectedOpenOrdersAccount,\n  useSelectedBaseCurrencyAccount,\n  useSelectedQuoteCurrencyAccount,\n} from '../utils/markets';\nimport { useWallet } from '../utils/wallet';\nimport { notify } from '../utils/notifications';\nimport { getDecimalCount } from '../utils/utils';\nimport { useSendConnection } from '../utils/connection';\nimport FloatingElement from './layout/FloatingElement';\nimport { placeOrder } from '../utils/send';\n\nconst InputBox = styled(Input)`\n  text-align: right;\n  padding-bottom: 16px;\n`;\n\nconst SellButton = styled(Button)`\n  margin: 20px 0px 0px 0px;\n  background: #f23b69;\n  border-color: #f23b69;\n`;\n\nconst BuyButton = styled(Button)`\n  margin: 20px 0px 0px 0px;\n  background: #02bf76;\n  border-color: #02bf76;\n`;\n\nconst sliderMarks = {\n  0: '0%',\n  25: '25%',\n  50: '50%',\n  75: '75%',\n  100: '100%',\n};\n\nexport default function TradeForm({ style, setChangeOrderRef }) {\n  const [side, setSide] = useState('buy');\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const baseCurrencyBalances = useBaseCurrencyBalances();\n  const quoteCurrencyBalances = useQuoteCurrencyBalances();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const { wallet } = useWallet();\n  const sendConnection = useSendConnection();\n  const markPrice = useMarkPrice();\n\n  const [postOnly, setPostOnly] = useState(false);\n  const [ioc, setIoc] = useState(false);\n  const [size, setSize] = useState(null);\n  const [price, setPrice] = useState(null);\n  const [submitting, setSubmitting] = useState(false);\n\n  const availableQuote = openOrdersAccount\n    ? market.quoteSplSizeToNumber(openOrdersAccount.quoteTokenFree)\n    : 0;\n\n  const maxQuoteSize = quoteCurrencyBalances + availableQuote;\n\n  const sizeFraction =\n    (price && size && maxQuoteSize && baseCurrencyBalances && side === 'buy'\n      ? ((price * size) / Math.floor(maxQuoteSize)) * 100\n      : (size / baseCurrencyBalances) * 100) || 0;\n\n  useEffect(() => {\n    setChangeOrderRef && setChangeOrderRef(doChangeOrder);\n  }, [setChangeOrderRef]);\n\n  // useEffect(() => {\n  //   sizeFraction && onSliderChange(sizeFraction);\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, [side, sizeFraction]);\n\n  const doChangeOrder = ({ size, price }) => {\n    size && setSize(size);\n    price && setPrice(price);\n  };\n\n  const onSliderChange = (value) => {\n    if (!maxQuoteSize || !baseCurrencyBalances) {\n      return;\n    }\n\n    if (!price) {\n      markPrice && setPrice(markPrice);\n    }\n\n    let newSize;\n    if (side === 'buy') {\n      if (price || markPrice) {\n        newSize =\n          ((Math.floor(maxQuoteSize) / (price || markPrice)) * value) / 100;\n      }\n    } else {\n      newSize = (Math.floor(baseCurrencyBalances) * value) / 100;\n    }\n\n    setSize(\n      market?.minOrderSize\n        ? newSize.toFixed(getDecimalCount(market.minOrderSize))\n        : newSize,\n    );\n  };\n\n  const postOnChange = (checked) => {\n    if (checked) {\n      setIoc(false);\n    }\n    setPostOnly(checked);\n  };\n  const iocOnChange = (checked) => {\n    if (checked) {\n      setPostOnly(false);\n    }\n    setIoc(checked);\n  };\n\n  async function onSubmit() {\n    const parsedPrice = parseFloat(price);\n    const parsedSize = parseFloat(size);\n\n    setSubmitting(true);\n    try {\n      await placeOrder({\n        side,\n        price: parsedPrice,\n        size: parsedSize,\n        orderType: ioc ? 'ioc' : postOnly ? 'postOnly' : 'limit',\n        market,\n        connection: sendConnection,\n        wallet,\n        baseCurrencyAccount: baseCurrencyAccount?.pubkey,\n        quoteCurrencyAccount: quoteCurrencyAccount?.pubkey,\n      });\n    } catch (e) {\n      console.warn(e);\n      notify({ message: 'Error placing order: ' + e.message, type: 'error' });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <FloatingElement\n      style={{ display: 'flex', flexDirection: 'column', ...style }}\n    >\n      <div style={{ flex: 1 }}>\n        <Radio.Group\n          onChange={(e) => setSide(e.target.value)}\n          value={side}\n          buttonStyle=\"solid\"\n          style={{\n            marginBottom: 8,\n            width: '100%',\n          }}\n        >\n          <Radio.Button\n            value=\"buy\"\n            style={{\n              width: '50%',\n              textAlign: 'center',\n              background: side === 'buy' ? '#02bf76' : '',\n              borderColor: side === 'buy' ? '#02bf76' : '',\n            }}\n          >\n            BUY\n          </Radio.Button>\n          <Radio.Button\n            value=\"sell\"\n            style={{\n              width: '50%',\n              textAlign: 'center',\n              background: side === 'sell' ? '#F23B69' : '',\n              borderColor: side === 'sell' ? '#F23B69' : '',\n            }}\n          >\n            SELL\n          </Radio.Button>\n        </Radio.Group>\n        <InputBox\n          addonBefore={`Price (${quoteCurrency})`}\n          placeholder=\"Price\"\n          value={price}\n          type=\"number\"\n          step={market?.tickSize || 1}\n          onChange={(e) => setPrice(e.target.value)}\n        />\n        <InputBox\n          addonBefore={`Size (${baseCurrency})`}\n          placeholder=\"Size\"\n          value={size}\n          type=\"number\"\n          step={market?.minOrderSize || 1}\n          onChange={(e) => setSize(e.target.value)}\n        />\n        {/*<Slider*/}\n        {/*  value={sizeFraction}*/}\n        {/*  tipFormatter={(value) => `${value}%`}*/}\n        {/*  marks={sliderMarks}*/}\n        {/*  onChange={onSliderChange}*/}\n        {/*/>*/}\n        <div style={{ paddingTop: 18 }}>\n          {'POST '}\n          <Switch\n            checked={postOnly}\n            onChange={postOnChange}\n            style={{ marginRight: 40 }}\n          />\n          {'IOC '}\n          <Switch checked={ioc} onChange={iocOnChange} />\n        </div>\n      </div>\n      {side === 'buy' ? (\n        <BuyButton\n          disabled={!price || !size}\n          onClick={onSubmit}\n          block\n          type=\"primary\"\n          size=\"large\"\n          loading={submitting}\n        >\n          Buy {baseCurrency}\n        </BuyButton>\n      ) : (\n        <SellButton\n          disabled={!price || !size}\n          onClick={onSubmit}\n          block\n          type=\"primary\"\n          size=\"large\"\n          loading={submitting}\n        >\n          Sell {baseCurrency}\n        </SellButton>\n      )}\n    </FloatingElement>\n  );\n}\n","import { Col, Row } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useMarket, useTrades } from '../utils/markets';\nimport { getDecimalCount } from '../utils/utils';\nimport FloatingElement from './layout/FloatingElement';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\nconst SizeTitle = styled(Row)`\n  padding: 20px 0 14px;\n  color: #434a59;\n`;\n\n// TODO: Put in some scrolling\nconst TradesContainer = styled.div`\n  height: calc(100% - 75px);\n  margin-right: -20px;\n  padding-right: 5px;\n  overflow-y: scroll;\n`;\n\nexport default function PublicTrades({ smallScreen }) {\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const trades = useTrades();\n  return (\n    <FloatingElement\n      style={\n        smallScreen\n          ? { flex: 1 }\n          : { marginTop: '10px', height: 'calc(100% - 520px)' }\n      }\n    >\n      <Title>Recent Market trades</Title>\n      <SizeTitle>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          Size ({baseCurrency})\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          Price ({quoteCurrency}){' '}\n        </Col>\n      </SizeTitle>\n      {!!trades && (\n        <TradesContainer>\n          {trades.map((trade, i) => (\n            <Row key={i} style={{ marginBottom: 4 }}>\n              <Col span={12} style={{ textAlign: 'left' }}>\n                {market?.minOrderSize && !isNaN(trade.size)\n                  ? Number(trade.size).toFixed(\n                      getDecimalCount(market.minOrderSize),\n                    )\n                  : trade.size}\n              </Col>\n              <Col\n                span={12}\n                style={{\n                  textAlign: 'right',\n                  color: trade.side === 'buy' ? '#41C77A' : '#F23B69',\n                }}\n              >\n                {market?.tickSize && !isNaN(trade.price)\n                  ? Number(trade.price).toFixed(\n                      getDecimalCount(market.tickSize),\n                    )\n                  : trade.price}\n              </Col>\n            </Row>\n          ))}\n        </TradesContainer>\n      )}\n    </FloatingElement>\n  );\n}\n","import React from 'react';\nimport { Button } from 'antd';\nimport { LinkOutlined } from '@ant-design/icons';\n\nexport default function LinkAddress({ title, address }) {\n  return (\n    <div>\n      {title && <p style={{ color: 'white' }}>{title}</p>}\n      <Button\n        type=\"link\"\n        icon={<LinkOutlined />}\n        href={'https://explorer.solana.com/address/' + address}\n        target=\"_blank\"\n      >\n        {address}\n      </Button>\n    </div>\n  );\n}\n","import { Divider, Typography, Button } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport {\n  useMarket,\n  useOpenOrders,\n  useBalances,\n  useMarketsList,\n  DEFAULT_MARKET,\n} from '../utils/markets';\nimport FloatingElement from './layout/FloatingElement';\nimport CheckOutlined from '@ant-design/icons/lib/icons/CheckOutlined';\nimport BalancesTable from './UserInfoTable/BalancesTable';\nimport OpenOrderTable from './UserInfoTable/OpenOrderTable';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\n\nexport default function DeprecatedMarketInstructions() {\n  const { marketName, setMarketAddress } = useMarket();\n  const liveMarkets = useMarketsList();\n  const openOrders = useOpenOrders();\n  const balances = useBalances();\n\n  const needToCancelOrders = !openOrders || openOrders.length > 0;\n  const needToSettleFunds =\n    !balances ||\n    balances.some(({ orders, unsettled }) => orders > 0 || unsettled > 0);\n  const liveMarket =\n    liveMarkets.find(({ name }) => name === marketName) || DEFAULT_MARKET;\n  console.log('liveMarkets', liveMarkets);\n  return (\n    <FloatingElement>\n      <Title>Migrate off of deprecated market</Title>\n      <br />\n      <Typography>\n        This {marketName} market is deprecated (inactive).\n      </Typography>\n      <br />\n      <Typography>\n        To transition to the new and upgraded {marketName} market, please do the\n        following:\n      </Typography>\n      <br />\n      <Divider>\n        {!needToCancelOrders && <CheckOutlined />} Cancel your orders\n      </Divider>\n      {needToCancelOrders && <OpenOrderTable openOrders={openOrders} />}\n      <Divider>\n        {!needToSettleFunds && <CheckOutlined />} Settle your funds\n      </Divider>\n      {needToSettleFunds && <BalancesTable balances={balances} />}\n      <Divider>Switch to new market</Divider>\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\n        <Button\n          onClick={() =>\n            liveMarket?.address &&\n            setMarketAddress(liveMarket.address.toBase58())\n          }\n          disabled={needToSettleFunds || needToCancelOrders}\n        >\n          Switch to live {liveMarket.name} market\n        </Button>\n      </div>\n    </FloatingElement>\n  );\n}\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Col, Popover, Row, Select, Typography } from 'antd';\nimport styled from 'styled-components';\nimport Orderbook from '../components/Orderbook';\nimport UserInfoTable from '../components/UserInfoTable';\nimport StandaloneBalancesDisplay from '../components/StandaloneBalancesDisplay';\nimport {\n  useMarket,\n  useMarketsList,\n  useUnmigratedDeprecatedMarketsList,\n} from '../utils/markets';\nimport TradeForm from '../components/TradeForm';\nimport TradesTable from '../components/TradesTable';\nimport LinkAddress from '../components/LinkAddress';\nimport DeprecatedMarketInstructions from '../components/DeprecatedMarketInstructions';\nimport { InfoCircleOutlined } from '@ant-design/icons';\n\nconst { Option } = Select;\n\nconst Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 16px 16px;\n  .borderNone .ant-select-selector {\n    border: none !important;\n  }\n`;\n\nexport default function TradePage() {\n  const { marketName, market, deprecated } = useMarket();\n  const markets = useMarketsList();\n  const deprecatedMarkets = useUnmigratedDeprecatedMarketsList();\n  const [dimensions, setDimensions] = useState({\n    height: window.innerHeight,\n    width: window.innerWidth,\n  });\n\n  useEffect(() => {\n    document.title = `${marketName} — Serum`;\n  }, [marketName]);\n\n  const changeOrderRef = useRef();\n\n  useEffect(() => {\n    const handleResize = () => {\n      setDimensions({\n        height: window.innerHeight,\n        width: window.innerWidth,\n      });\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const width = dimensions?.width;\n  const componentProps = {\n    onChangeOrderRef: (ref) => (changeOrderRef.current = ref),\n    onPrice: (price) =>\n      changeOrderRef.current && changeOrderRef.current({ price }),\n    onSize: (size) =>\n      changeOrderRef.current && changeOrderRef.current({ size }),\n  };\n  const getComponent = useCallback(() => {\n    if (deprecated) {\n      return <RenderDeprecatedMarket />;\n    } else if (width < 1000) {\n      return <RenderSmaller {...componentProps} />;\n    } else if (width < 1450) {\n      return <RenderSmall {...componentProps} />;\n    } else {\n      return <RenderNormal {...componentProps} />;\n    }\n  }, [width, componentProps, deprecated]);\n\n  return (\n    <>\n      <Wrapper>\n        <Row\n          align=\"middle\"\n          style={{ paddingLeft: 5, paddingRight: 5 }}\n          gutter={16}\n        >\n          <Col>\n            <MarketSelector markets={markets} placeholder={'Select market'} />\n          </Col>\n          {market ? (\n            <Col>\n              <Popover\n                content={<LinkAddress address={market.publicKey.toBase58()} />}\n                placement=\"bottomRight\"\n                title=\"Market address\"\n                trigger=\"click\"\n              >\n                <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n              </Popover>\n            </Col>\n          ) : null}\n          {deprecatedMarkets && deprecatedMarkets.length > 0 && (\n            <React.Fragment>\n              <Col>\n                <Typography>\n                  You have unsettled funds on deprecated markets! Please go\n                  through them to claim your funds.\n                </Typography>\n              </Col>\n              <Col>\n                <MarketSelector\n                  markets={deprecatedMarkets}\n                  placeholder={'Select deprecated market'}\n                />\n              </Col>\n            </React.Fragment>\n          )}\n        </Row>\n        {getComponent()}\n      </Wrapper>\n    </>\n  );\n}\n\nfunction MarketSelector({ markets, placeholder }) {\n  const { market, setMarketAddress } = useMarket();\n\n  const extractBase = (a) => a.split('/')[0];\n  const extractQuote = (a) => a.split('/')[1];\n\n  return (\n    <Select\n      showSearch\n      size={'large'}\n      style={{ width: 200 }}\n      placeholder={placeholder || 'Select a market'}\n      optionFilterProp=\"name\"\n      onSelect={setMarketAddress}\n      listHeight={400}\n      value={markets\n        .find(\n          (proposedMarket) =>\n            market?.address && proposedMarket.address.equals(market.address),\n        )\n        ?.address?.toBase58()}\n      filterOption={(input, option) =>\n        option.name.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      }\n    >\n      {markets\n        .sort((a, b) =>\n          extractQuote(a.name) === 'USDT' && extractQuote(b.name) !== 'USDT'\n            ? -1\n            : extractQuote(a.name) !== 'USDT' && extractQuote(b.name) === 'USDT'\n            ? 1\n            : 0,\n        )\n        .sort((a, b) =>\n          extractBase(a.name) < extractBase(b.name)\n            ? -1\n            : extractBase(a.name) > extractBase(b.name)\n            ? 1\n            : 0,\n        )\n        .map(({ address, name, deprecated }, i) => (\n          <Option\n            value={address.toBase58()}\n            key={address}\n            name={name}\n            style={{\n              padding: '10px 0',\n              textAlign: 'center',\n              backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\n            }}\n          >\n            {name} {deprecated ? ' (Deprecated)' : null}\n          </Option>\n        ))}\n    </Select>\n  );\n}\n\nconst RenderDeprecatedMarket = () => {\n  return (\n    <>\n      <Row>\n        <Col flex=\"auto\">\n          <DeprecatedMarketInstructions />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst RenderNormal = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <Row\n      style={{\n        minHeight: '750px',\n        flexWrap: 'nowrap',\n      }}\n    >\n      <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n        <UserInfoTable />\n      </Col>\n      <Col flex={'360px'} style={{ height: '100%' }}>\n        <Orderbook smallScreen={false} onPrice={onPrice} onSize={onSize} />\n        <TradesTable smallScreen={false} />\n      </Col>\n      <Col\n        flex=\"400px\"\n        style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n      >\n        <TradeForm setChangeOrderRef={onChangeOrderRef} />\n        <StandaloneBalancesDisplay />\n      </Col>\n    </Row>\n  );\n};\n\nconst RenderSmall = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <>\n      <Row\n        style={{\n          height: '750px',\n        }}\n      >\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n          <Orderbook\n            smallScreen={true}\n            depth={12}\n            onPrice={onPrice}\n            onSize={onSize}\n          />\n        </Col>\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n          <TradesTable smallScreen={true} />\n        </Col>\n        <Col\n          flex=\"400px\"\n          style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n        >\n          <TradeForm setChangeOrderRef={onChangeOrderRef} />\n          <StandaloneBalancesDisplay />\n        </Col>\n      </Row>\n      <Row>\n        <Col flex=\"auto\">\n          <UserInfoTable />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst RenderSmaller = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <>\n      <Row>\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <TradeForm style={{ flex: 1 }} setChangeOrderRef={onChangeOrderRef} />\n        </Col>\n        <Col xs={24} sm={12}>\n          <StandaloneBalancesDisplay />\n        </Col>\n      </Row>\n      <Row style={{ minHeight: '500px' }}>\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <Orderbook smallScreen={true} onPrice={onPrice} onSize={onSize} />\n        </Col>\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <TradesTable smallScreen={true} />\n        </Col>\n      </Row>\n      <Row>\n        <Col flex=\"auto\">\n          <UserInfoTable />\n        </Col>\n      </Row>\n    </>\n  );\n};\n","import React from 'react';\nimport { useOpenOrdersForAllMarkets } from '../utils/markets';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport OpenOrderTable from '../components/UserInfoTable/OpenOrderTable';\n\nexport default function OpenOrdersPage() {\n  const [openOrders] = useOpenOrdersForAllMarkets();\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <OpenOrderTable openOrders={openOrders} />\n    </FloatingElement>\n  );\n}\n","import React from 'react';\nimport DataTable from '../layout/DataTable';\n\nexport default function WalletBalancesTable({\n  loaded = false,\n  walletBalances,\n}) {\n  const columns = [\n    {\n      title: 'Coin',\n      dataIndex: 'key',\n      key: 'key',\n    },\n    {\n      title: 'Wallet Balance',\n      dataIndex: 'wallet',\n      key: 'wallet',\n    },\n  ];\n  return (\n    <DataTable\n      emptyLabel=\"No balances\"\n      dataSource={walletBalances}\n      columns={columns}\n      pagination={false}\n      loading={!loaded}\n    />\n  );\n}\n","import { Button } from 'antd';\nimport React from 'react';\nimport DataTable from '../layout/DataTable';\nimport { useConnection } from '../../utils/connection';\nimport { useWallet } from '../../utils/wallet';\nimport { settleFunds } from '../../utils/send';\n\nexport default function AccountsTable({ accountBalances }) {\n  const connection = useConnection();\n  const { wallet } = useWallet();\n\n  async function onSettleFunds(account) {\n    const {\n      market,\n      openOrdersAccount,\n      baseCurrencyAccount,\n      quoteCurrencyAccount,\n    } = account;\n    return await settleFunds({\n      market,\n      openOrders: openOrdersAccount,\n      connection,\n      wallet,\n      baseCurrencyAccount,\n      quoteCurrencyAccount,\n    });\n  }\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'key',\n      key: 'key',\n    },\n    {\n      title: 'Orders',\n      dataIndex: 'orders',\n      key: 'orders',\n    },\n    {\n      title: 'Unsettled',\n      dataIndex: 'unsettled',\n      key: 'unsettled',\n    },\n    {\n      key: 'action',\n      render: (account) => (\n        <div style={{ textAlign: 'right' }}>\n          <Button\n            ghost\n            style={{ marginRight: 12 }}\n            onClick={() => onSettleFunds(account)}\n          >\n            Settle\n          </Button>\n        </div>\n      ),\n    },\n  ];\n  return (\n    <DataTable\n      emptyLabel=\"No balances\"\n      dataSource={accountBalances}\n      columns={columns.map((data) => ({\n        ...data,\n        key: `${data.market}${data.coin}`,\n      }))}\n      pagination={false}\n    />\n  );\n}\n","import React from 'react';\nimport { Tabs } from 'antd';\nimport {\n  useWalletBalancesForAllMarkets,\n  useOpenOrderAccountBalancesForAllMarkets,\n} from '../utils/markets';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport WalletBalancesTable from '../components/UserInfoTable/WalletBalancesTable';\nimport AccountsTable from '../components/UserInfoTable/AccountsTable';\n\nconst { TabPane } = Tabs;\n\nexport default function BalancesPage() {\n  const [\n    walletBalances,\n    loadedWalletBalances,\n  ] = useWalletBalancesForAllMarkets();\n  const [\n    accountBalances,\n    accountBalancesLoaded,\n  ] = useOpenOrderAccountBalancesForAllMarkets();\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <Tabs defaultActiveKey=\"walletBalances\">\n        <TabPane tab=\"Wallet Balances\" key=\"walletBalances\">\n          <WalletBalancesTable\n            loaded={loadedWalletBalances}\n            walletBalances={walletBalances}\n          />\n        </TabPane>\n        <TabPane tab=\"Market balances\" key=\"marketBalances\">\n          <AccountsTable\n            loaded={accountBalancesLoaded}\n            accountBalances={accountBalances}\n          />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n","import React, { useState } from 'react';\nimport { Modal, Input, Row, Col } from 'antd';\nimport { notify } from '../utils/notifications';\n\nexport default function CustomConnectionDialog({\n  visible,\n  onAddConnectionEndpoint,\n  onClose,\n}) {\n  const [endpoint, setEndpoint] = useState('');\n  const [name, setName] = useState('');\n  const onSubmit = () => {\n    if (!name || !endpoint) {\n      notify({ message: 'Please fill in all fields', type: 'error' });\n      return;\n    }\n    if (!valid) {\n      notify({ message: 'Please supply a valid URL', type: 'error' });\n      return;\n    }\n    onAddConnectionEndpoint({ name, endpoint, custom: true });\n    onClose();\n  };\n  const valid = isValidUrl(endpoint);\n  const canSubmit = name && endpoint;\n\n  return (\n    <Modal\n      title={'Add custom connection'}\n      visible={visible}\n      onOk={onSubmit}\n      okText={'Add'}\n      onCancel={onClose}\n      okButtonProps={{ disabled: !canSubmit }}\n    >\n      <div>\n        <Row style={{ marginBottom: 8 }}>\n          <Col span={24}>\n            <Input\n              placeholder=\"Name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n          </Col>\n        </Row>\n        <Row style={{ marginBottom: 8 }}>\n          <Col span={24}>\n            <Input\n              placeholder=\"Endpoint\"\n              value={endpoint}\n              onChange={(e) => setEndpoint(e.target.value)}\n            />\n          </Col>\n        </Row>\n      </div>\n    </Modal>\n  );\n}\n\nfunction isValidUrl(string) {\n  try {\n    new URL(string);\n  } catch (_) {\n    return false;\n  }\n  return true;\n}\n","import {\n  InfoCircleOutlined,\n  UserOutlined,\n  PlusCircleOutlined,\n  DeleteOutlined,\n} from '@ant-design/icons';\nimport { Button, Menu, Popover, Select } from 'antd';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport logo from '../assets/logo.svg';\nimport styled from 'styled-components';\nimport { useWallet, WALLET_PROVIDERS } from '../utils/wallet';\nimport {\n  useConnectionEndpoints,\n  useConnectionConfig,\n  DEFAULT_ENDPOINTS,\n} from '../utils/connection';\nimport LinkAddress from './LinkAddress';\nimport CustomConnectionDialog from './CustomConnectionDialog';\n\nconst Wrapper = styled.div`\n  background-color: #0d1017;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  padding: 0px 30px;\n  flex-wrap: wrap;\n`;\nconst LogoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  color: #2abdd2;\n  font-weight: bold;\n  cursor: pointer;\n  img {\n    height: 30px;\n    margin-right: 8px;\n  }\n`;\n\nexport default function TopBar() {\n  const [current, setCurrent] = useState('/');\n  const { connected, wallet, providerUrl, setProvider } = useWallet();\n  const { endpoint, setEndpoint } = useConnectionConfig();\n  const [showConnectionDialog, setShowConnectionDialog] = useState(false);\n  const [\n    endpoints,\n    customEndpoints,\n    setCustomEndpoints,\n  ] = useConnectionEndpoints();\n  const location = useLocation();\n  const history = useHistory();\n\n  const onAddConnectionEndpoint = (connectionEndpoint) => {\n    setCustomEndpoints([...customEndpoints, connectionEndpoint]);\n    setEndpoint(connectionEndpoint.endpoint);\n  };\n\n  const onDeleteConnectionEndpoint = (endpoint) => {\n    setCustomEndpoints(\n      customEndpoints.filter((entry) => entry.endpoint !== endpoint),\n    );\n    setEndpoint(DEFAULT_ENDPOINTS[0].endpoint);\n  };\n\n  const publicKey = wallet?.publicKey?.toBase58();\n\n  const handleClick = useCallback(\n    (e) => {\n      history.push(e.key);\n    },\n    [history],\n  );\n\n  useEffect(() => {\n    if (location.pathname.includes('/orders')) {\n      setCurrent('/orders');\n    } else if (location.pathname.includes('/balances')) {\n      setCurrent('/balances');\n    }\n  }, [location]);\n\n  return (\n    <Wrapper>\n      <LogoWrapper>\n        <img src={logo} alt=\"\" />\n        {'SERUM'}\n      </LogoWrapper>\n      <Menu\n        mode=\"horizontal\"\n        onClick={handleClick}\n        selectedKeys={[current]}\n        style={{\n          borderBottom: 'none',\n          backgroundColor: 'transparent',\n          display: 'flex',\n          alignItems: 'flex-end',\n          flex: 1,\n        }}\n      >\n        <Menu.Item key=\"/\">TRADE</Menu.Item>\n      </Menu>\n      <div>\n        <Select\n          onSelect={setEndpoint}\n          value={endpoint}\n          style={{ marginRight: 8, width: 150 }}\n        >\n          {endpoints.map(({ name, endpoint, custom }) => (\n            <Select.Option value={endpoint} key={endpoint}>\n              <div\n                style={{\n                  display: 'flex',\n                  flexDirection: 'row',\n                  justifyContent: 'space-between',\n                }}\n              >\n                <div>{name}</div>{' '}\n                <div>\n                  {custom ? (\n                    <DeleteOutlined\n                      style={{ color: '#2abdd2' }}\n                      onClick={() => onDeleteConnectionEndpoint(endpoint)}\n                    />\n                  ) : null}\n                </div>\n              </div>\n            </Select.Option>\n          ))}\n          <Select.Option value={null} key={'new'} disabled={true}>\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n              <PlusCircleOutlined\n                style={{ color: '#2abdd2', marginTop: 4 }}\n                onClick={() => setShowConnectionDialog(true)}\n              />\n            </div>\n          </Select.Option>\n        </Select>\n      </div>\n      <div>\n        <Select onSelect={setProvider} value={providerUrl}>\n          {WALLET_PROVIDERS.map(({ name, url }) => (\n            <Select.Option value={url} key={url}>\n              {name}\n            </Select.Option>\n          ))}\n        </Select>\n      </div>\n      <div>\n        <Button\n          type=\"text\"\n          size=\"large\"\n          onClick={connected ? wallet.disconnect : wallet.connect}\n          style={{ color: '#2abdd2' }}\n        >\n          <UserOutlined />\n          {!connected ? 'Connect wallet' : 'Disconnect'}\n        </Button>\n        {connected && (\n          <Popover\n            content={<LinkAddress address={publicKey} />}\n            placement=\"bottomRight\"\n            title=\"Wallet public key\"\n            trigger=\"click\"\n          >\n            <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n          </Popover>\n        )}\n      </div>\n      <CustomConnectionDialog\n        visible={showConnectionDialog}\n        onClose={() => setShowConnectionDialog(false)}\n        onAddConnectionEndpoint={onAddConnectionEndpoint}\n      />\n    </Wrapper>\n  );\n}\n","export const helpUrls = {\n  customerSupport: 'https://t.me/ProjectSerum',\n  customerSupportZh: 'https://t.me/ProjectSerum_Chinese',\n  contactEmail: 'mailto:contact@projectserum.com',\n  discord: 'https://discord.gg/MxZFT4v',\n  telegram: 'https://t.me/ProjectSerum',\n  github: 'https://github.com/project-serum',\n  projectSerum: 'https://projectserum.com/',\n  developerResources: 'https://projectserum.com/developer-resources',\n  solanaBeach: 'https://solanabeach.io',\n};\n","import React from 'react';\nimport { Layout, Row, Col, Grid } from 'antd';\nimport Link from './Link';\nimport { helpUrls } from './HelpUrls';\nconst { Footer } = Layout;\nconst { useBreakpoint } = Grid;\n\nconst footerElements = [\n  {\n    description: 'Serum Developer Resources',\n    link: helpUrls.developerResources,\n  },\n  { description: 'Discord', link: helpUrls.discord },\n  { description: 'Telegram', link: helpUrls.telegram },\n  { description: 'GitHub', link: helpUrls.github },\n  { description: 'Project Serum', link: helpUrls.projectSerum },\n  { description: 'Solana Network', link: helpUrls.solanaBeach },\n];\n\nexport const CustomFooter = () => {\n  const smallScreen = !useBreakpoint().lg;\n\n  return (\n    <Footer\n      style={{\n        height: '45px',\n        paddingBottom: 10,\n        paddingTop: 10,\n      }}\n    >\n      <Row align=\"middle\" gutter={[16, 4]}>\n        {!smallScreen && (\n          <>\n            <Col flex=\"auto\" />\n            {footerElements.map((elem, index) => {\n              return (\n                <Col key={index + ''}>\n                  <Link external to={elem.link}>\n                    {elem.description}\n                  </Link>\n                </Col>\n              );\n            })}\n          </>\n        )}\n        <Col flex=\"auto\">{/*  <DexProgramSelector />*/}</Col>\n      </Row>\n    </Footer>\n  );\n};\n","import { Layout } from 'antd';\nimport React from 'react';\nimport TopBar from './TopBar';\nimport { CustomFooter as Footer } from './Footer';\nconst { Header, Content } = Layout;\n\nexport default function BasicLayout({ children }) {\n  return (\n    <React.Fragment>\n      <Layout\n        style={{ display: 'flex', minHeight: '100vh', flexDirection: 'column' }}\n      >\n        <Header style={{ padding: 0, minHeight: 64, height: 'unset' }}>\n          <TopBar />\n        </Header>\n        <Content style={{ flex: 1 }}>{children}</Content>\n        <Footer />\n      </Layout>\n    </React.Fragment>\n  );\n}\n","import { HashRouter, Route } from 'react-router-dom';\nimport TradePage from './pages/TradePage';\nimport OpenOrdersPage from './pages/OpenOrdersPage';\nimport React from 'react';\nimport BalancesPage from './pages/BalancesPage';\nimport BasicLayout from './components/BasicLayout';\n\nexport function Routes() {\n  return (\n    <HashRouter basename={'/'}>\n      <Route exact path=\"/\" component={TradePageContents} />\n      <Route exact path=\"/orders\" component={OpenOrdersPageContents} />\n      <Route exact path=\"/balances\" component={BalancesPageContents} />\n    </HashRouter>\n  );\n}\n\nfunction TradePageContents() {\n  return (\n    <BasicLayout>\n      <TradePage />\n    </BasicLayout>\n  );\n}\n\nfunction OpenOrdersPageContents() {\n  return (\n    <BasicLayout>\n      <OpenOrdersPage />\n    </BasicLayout>\n  );\n}\n\nfunction BalancesPageContents() {\n  return (\n    <BasicLayout>\n      <BalancesPage />\n    </BasicLayout>\n  );\n}\n","import React, { Suspense } from 'react';\nimport './App.less';\nimport { ConnectionProvider } from './utils/connection';\nimport { MarketProvider } from './utils/markets';\nimport { WalletProvider } from './utils/wallet';\nimport { GlobalStyle } from './global_style';\nimport { Spin } from 'antd';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { Routes } from './routes';\n\nexport default function App() {\n  return (\n    <Suspense fallback={() => <Spin size=\"large\" />}>\n      <GlobalStyle />\n      <ErrorBoundary>\n        <ConnectionProvider>\n          <MarketProvider>\n            <WalletProvider>\n              <Suspense fallback={() => <Spin size=\"large\" />}>\n                <Routes />\n              </Suspense>\n            </WalletProvider>\n          </MarketProvider>\n        </ConnectionProvider>\n      </ErrorBoundary>\n    </Suspense>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}