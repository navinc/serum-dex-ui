{"version":3,"sources":["assets/logo.svg","utils/utils.tsx","utils/fetch-loop.tsx","utils/connection.tsx","components/Link.js","utils/notifications.tsx","utils/wallet.tsx","utils/send.tsx","utils/tokens.tsx","utils/markets.tsx","global_style.ts","components/ErrorBoundary.jsx","utils/useInterval.tsx","components/layout/FloatingElement.jsx","components/Orderbook.jsx","utils/usePrevious.tsx","components/layout/DataTable.jsx","components/UserInfoTable/BalancesTable.jsx","components/UserInfoTable/OpenOrderTable.tsx","components/UserInfoTable/FillsTable.jsx","components/UserInfoTable/FeesTable.js","components/UserInfoTable/index.jsx","components/DepositDialog.jsx","components/StandaloneTokenAccountSelect.tsx","components/StandaloneBalancesDisplay.tsx","components/TradeForm.tsx","components/TradesTable.jsx","components/LinkAddress.tsx","components/DeprecatedMarketsInstructions.js","components/CustomMarketDialog.jsx","pages/TradePage.tsx","pages/OpenOrdersPage.tsx","components/UserInfoTable/WalletBalancesTable.tsx","pages/BalancesPage.tsx","components/WalletConnect.tsx","components/ConvertForm.tsx","pages/ConvertPage.tsx","utils/preferences.tsx","components/Settings.jsx","components/CustomClusterEndpointDialog.tsx","components/TopBar.tsx","components/HelpUrls.ts","components/Footer.tsx","components/BasicLayout.js","pages/ListNewMarketPage.jsx","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","isValidPublicKey","key","PublicKey","sleep","ms","a","Promise","resolve","setTimeout","percentFormat","Intl","NumberFormat","undefined","style","minimumFractionDigits","maximumFractionDigits","floorToDecimal","value","decimals","Math","floor","roundToDecimal","round","getDecimalCount","isNaN","toString","split","length","divideBnToNumber","numerator","denominator","quotient","div","toNumber","rem","umod","gcd","getTokenMultiplierFromDecimals","BN","pow","localStorageListeners","useLocalStorageStringState","defaultState","state","localStorage","getItem","useState","notify","useEffect","push","filter","listener","setState","useCallback","newState","removeItem","setItem","forEach","useLocalStorageState","JSON","stringify","stringState","setStringState","parse","isEqual","obj1","obj2","keys","Object","k","pageLoadTime","Date","globalCache","Map","FetchLoopListener","cacheKey","fn","refreshInterval","refreshIntervalOnError","callback","this","FetchLoopInternal","timeoutId","listeners","errors","refresh","clearTimeout","stopped","errored","data","set","notifyListeners","console","warn","waitTime","min","timeSincePageLoad","document","visibilityState","hasFocus","random","Set","previousRefreshInterval","add","assert","delete","map","refreshIntervalsOnError","x","size","globalLoops","loops","has","get","addListener","loop","removeListener","all","values","useAsyncData","asyncFn","useReducer","i","rerender","loaded","refreshCache","clearCache","ENDPOINTS","name","endpoint","custom","accountListenerCount","ConnectionContext","React","createContext","ConnectionProvider","children","setEndpoint","customEndpoints","setCustomEndpoints","availableEndpoints","concat","connection","useMemo","Connection","sendConnection","id","onAccountChange","Account","publicKey","removeAccountChangeListener","onSlotChange","removeSlotChangeListener","Provider","useConnection","context","useContext","Error","useSendConnection","useConnectionConfig","endpointInfo","find","info","useAccountInfo","tuple","toBase58","getAccountInfo","accountInfo","count","previousData","subscriptionId","e","equals","initializeOnly","setCache","currentItem","useAccountData","Link","external","props","to","rest","href","target","rel","message","description","txid","type","placement","color","slice","notification","opacity","backgroundColor","WALLET_PROVIDERS","url","WalletContext","WalletProvider","providerUrl","savedProviderUrl","setProviderUrl","wallet","Wallet","connected","setConnected","log","on","walletPublicKey","substring","disconnect","providerName","useWallet","setProvider","createTokenAccountTransaction","mintPublicKey","newAccount","SystemProgram","getMinimumBalanceForRentExemption","TokenInstructions","TOKEN_PROGRAM_ID","fromPubkey","newAccountPubkey","lamports","space","programId","transaction","createAccount","initializeAccount","account","mint","owner","signer","settleFunds","market","openOrders","baseCurrencyAccount","quoteCurrencyAccount","baseCurrencyAccountPubkey","pubkey","quoteCurrencyAccountPubkey","baseMintAddress","result","createAccountTransaction","createAccountSigner","quoteMintAddress","supportsReferralFees","TOKEN_MINTS","makeSettleFundsTransaction","settleFundsTransaction","settleFundsSigners","signers","mergeTransactions","sendTransaction","sendingMessage","settleAllFunds","tokenAccounts","markets","selectedTokenAccounts","programIds","reduce","cumulative","m","_programId","p","getOpenOrdersAccountsForProgramId","OpenOrders","findForOwner","openOrdersAccounts","baseTokenFree","quoteTokenFree","openOrdersAccountsForProgramIds","accounts","current","openOrdersAccount","_decoded","ownAddress","baseMint","quoteMint","selectedBaseTokenAccount","getSelectedTokenAccountForMint","selectedQuoteTokenAccount","settleTransactions","transactions","t","s","constructor","cancelOrder","params","cancelOrders","orders","order","makeMatchOrdersTransaction","makeCancelOrderInstruction","placeOrder","side","price","orderType","formattedMinOrderSize","minOrderSize","toFixed","formattedTickSize","tickSize","isIncrement","num","step","abs","payer","makePlaceOrderTransaction","placeOrderTx","listMarket","getVaultOwnerAndNonce","nonce","createProgramAddress","toBuffer","toArrayLike","Buffer","dexProgramId","vaultOwner","iaddn","baseLotSize","quoteLotSize","requestQueue","eventQueue","bids","asks","baseVault","quoteVault","feeRateBps","quoteDustThreshold","vaultSignerNonce","tx1","Transaction","tx2","Market","getLayout","span","DexInstructions","initializeMarket","signTransaction","signedTransactions","signedTransaction","sendSignedTransaction","getUnixTs","getTime","sentMessage","successMessage","timeout","getRecentBlockhash","recentBlockhash","blockhash","signPartial","rawTransaction","serialize","startTime","sendRawTransaction","skipPreflight","done","awaitTransactionSignatureConfirmation","reject","onSignature","err","getSignatureStatuses","signatureStatuses","confirmations","resultDescription","AccountInfoResult","struct","executable","rentEpoch","GetMultipleAccountsAndContextRpcResult","array","union","jsonRpcVersion","literal","jsonrpc","error","jsonRpcResult","slot","getMultipleSolanaAccounts","publicKeys","args","commitment","_rpcRequest","unsafeRes","res","join","from","fromEntries","ACCOUNT_LAYOUT","BufferLayout","MINT_LAYOUT","parseTokenAccountData","decode","amount","parseTokenMintData","initialized","getOwnedAccountsFilters","memcmp","offset","offsetOf","bytes","dataSize","getOwnedTokenAccounts","filters","resp","bs58","every","filterBytes","getTokenAccountInfo","ownerAddress","splAccounts","parsedSplAccounts","effectiveMint","WRAPPED_SOL_MINT","useMintInfos","customMarkets","useMarket","useTokenAccounts","useAllMarkets","allMarkets","allMints","marketInfo","uniqueMints","stringMint","mintInfos","entries","USE_MARKETS","MARKETS","getMarketInfos","load","address","marketName","_VERY_SLOW_REFRESH_INTERVAL","useUnmigratedOpenOrdersAccounts","deprecatedOpenOrdersAccounts","deprecatedProgramIds","Array","deprecated","publicKeyStr","baseTokenTotal","quoteTokenTotal","some","MarketContext","DEFAULT_MARKET","getMarketDetails","otherMarket","baseCurrency","token","baseLabel","quoteCurrency","quoteLabel","MarketProvider","marketAddress","setMarketAddress","setCustomMarkets","marketInfos","setMarket","then","catch","useSelectedTokenAccounts","useMarkPrice","markPrice","setMarkPrice","useOrderbook","orderbook","trades","useTrades","bb","Number","ba","last","sort","b","_useUnfilteredTrades","limit","getUnfilteredTrades","loadFills","useOrderbookAccounts","bidData","askData","bidOrderbook","Orderbook","askOrderbook","depth","getL2","useOpenOrdersAccounts","fast","getOpenOrdersAccounts","findOpenOrdersAccountsForOwner","useSelectedOpenOrdersAccount","selectedPubKey","filtered","useSelectedQuoteCurrencyAccount","mintAddress","useSelectedBaseCurrencyAccount","useSelectedQuoteCurrencyBalances","quoteSplSizeToNumber","useSelectedBaseCurrencyBalances","baseSplSizeToNumber","eventFlags","maker","trade","useAllOpenOrdersAccounts","stringProgramId","flat","useBalances","baseCurrencyBalances","quoteCurrencyBalances","baseExists","quoteExists","coin","sub","unsettled","useUnmigratedDeprecatedMarkets","marketsList","deps","getMarket","openOrdersList","customMarketsInfo","getMarketOrderPrice","cost","tickSizeDecimals","isBids","costAtLevel","spentCost","sendPrice","GlobalStyle","createGlobalStyle","Title","Typography","ErrorBoundary","hasError","level","Component","useInterval","delay","savedCallback","useRef","setInterval","clearInterval","Wrapper","styled","FloatingElement","SizeTitle","Row","MarkPriceTitle","Line","css","Price","smallScreen","onPrice","onSize","currentOrderbookData","lastOrderbookData","orderbookData","setOrderbookData","getCumulativeOrderbookSide","totalSize","backwards","cumulativeSize","sizePercent","reverse","sum","total","index","bidsToDisplay","asksToDisplay","flex","height","overflow","textAlign","OrderbookRow","onPriceClick","onSizeClick","MarkPriceComponent","memo","element","classList","contains","remove","formattedSize","formattedPrice","ref","marginBottom","onClick","data-width","data-bgcolor","prevProps","nextProps","previousMarkPrice","usePrevious","markPriceColor","formattedMarkPrice","justify","ArrowUpOutlined","marginRight","ArrowDownOutlined","DataTable","dataSource","columns","emptyLabel","pagination","loading","pageSize","renderEmpty","padding","display","justifyContent","alignItems","BalancesTable","balances","showMarket","hideWalletBalance","onSettleSuccess","title","dataIndex","render","ghost","onSettleFunds","CancelButton","Button","OpenOrderTable","onCancelSuccess","marketFilter","cancelId","setCancelId","orderId","marketFilters","orderInfos","text","onFilter","record","indexOf","fontWeight","charAt","toUpperCase","sorter","showSorterTooltip","icon","DeleteOutlined","cancel","assign","FillsTable","fills","fill","useFills","liquidity","FeesTable","findFeeDiscountKeys","useFeeDiscountKeys","feeTier","row","marginLeft","format","getFeeRates","taker","_","SRM_MINT","MSRM_MINT","marginTop","FeeScheduleTable","balance","Paragraph","TabPane","Tabs","Index","paddingTop","defaultActiveKey","tab","supportsSrmFeeDiscounts","OpenOrdersTab","filterForOpenOrders","useOpenOrders","BalancesTab","DepositDialog","coinMint","depositCoin","onClose","baseOrQuote","visible","onOk","onCancel","StandaloneTokenAccountsSelect","selectedValue","label","setSelectedTokenAccounts","Fragment","width","onSelect","newSelectedTokenAccounts","Option","Text","code","base58","abbreviateAddress","shape","CopyOutlined","navigator","clipboard","writeText","RowBox","Tip","ActionButton","StandaloneBalancesDisplay","setBaseOrQuote","formattedBalances","currency","borderColor","align","paddingBottom","block","SellButton","BuyButton","sliderMarks","0","25","50","75","100","TradeForm","setChangeOrderRef","setSide","postOnly","setPostOnly","ioc","setIoc","baseSize","setBaseSize","quoteSize","setQuoteSize","setPrice","submitting","setSubmitting","sizeFraction","setSizeFraction","quoteBalance","baseBalance","sizeDecimalCount","priceDecimalCount","doChangeOrder","onSliderChange","updateSizeFraction","onSetBaseSize","usePrice","maxSize","parseFloat","newSize","formatted","onSubmit","flexDirection","Group","onChange","buttonStyle","background","addonBefore","suffix","fontSize","compact","onSetQuoteSize","tipFormatter","marks","checked","disabled","TradesContainer","PublicTrades","minHeight","LinkAddress","LinkOutlined","DeprecatedMarketsInstructions","switchToLiveMarkets","openOrderAccountBalances","inOrdersBase","inOrdersQuote","unsettledBase","unsettledQuote","useBalancesForDeprecatedMarkets","marketsAndOrders","getOrders","loadOrdersForOwner","refreshOpenOrders","useGetOpenOrdersForDeprecatedMarkets","needToCancelOrders","filteredBalances","needToSettleFunds","CustomMarketDialog","onAddCustomMarket","marketId","setMarketId","marketLabel","setMarketLabel","setBaseLabel","setQuoteLabel","loadingMarket","setLoadingMarket","wellFormedMarketId","marketAccountInfo","resetLabels","finally","knownMarket","knownProgram","knownBaseCurrency","knownQuoteCurrency","canSubmit","onDoClose","okText","okButtonProps","placeholder","LoadingOutlined","gutter","Select","OptGroup","TradePage","handleDeprecated","setHandleDeprecated","addMarketVisible","setAddMarketVisible","deprecatedMarkets","window","innerHeight","innerWidth","dimensions","setDimensions","changeOrderRef","handleResize","addEventListener","removeEventListener","componentProps","onChangeOrderRef","getComponent","customMarket","newCustomMarkets","paddingLeft","paddingRight","MarketSelector","onDeleteCustomMarket","content","trigger","InfoCircleOutlined","PlusCircleOutlined","extractBase","extractQuote","selectedMarket","proposedMarket","showSearch","optionFilterProp","listHeight","filterOption","input","option","toLowerCase","stopPropagation","nativeEvent","stopImmediatePropagation","DeprecatedMarketsPage","RenderNormal","flexWrap","RenderSmall","RenderSmaller","xs","sm","OpenOrdersPage","openOrdersAccountsConnected","marketInfosConnected","openOrdersAccountsByAddress","marketsAddr","marketsByAddress","getAllOpenOrders","marketAddr","loadBids","loadAsks","useAllOpenOrders","marketAddressesToNames","WalletBalancesTable","walletBalances","tokenAccountsConnected","allMarketsConnected","settlingFunds","setSettlingFunds","walletBalance","BalancesPage","mintInfosConnected","parsedAccount","mintInfo","additionalAmount","useWalletBalancesForAllMarkets","mintToTickers","mintsToTickers","customMarketInfo","useMintToTickers","openOrdersBalances","loadedOpenOrdersAccounts","baseMintInfo","baseFree","baseTotal","quoteMintInfo","quoteFree","quoteTotal","free","useAllOpenOrdersBalances","openOrdersFree","openOrdersTotal","WalletConnect","connect","UserOutlined","ConvertButton","ConvertForm","fromToken","setFromToken","toToken","setToToken","setSize","marketInfosbyName","tokenConvertMap","base","quote","maxWidth","minWidth","ConvertFormSubmit","isConverting","setIsConverting","isFromTokenBaseOfMarket","onConvert","sidedOrderbookAccount","decodedOrderbookData","parsedPrice","parsedSize","canConvert","coinBalance","availableBalance","ConvertPage","PreferencesContext","PreferencesProvider","autoSettleEnabled","setAutoSettleEnabled","marketList","autoSettle","autoApprove","Settings","usePreferences","CustomClusterEndpointDialog","testingConnection","onAddCustomEndpoint","customEndpoint","setCustomEndpoint","customEndpointName","setCustomEndpointName","LogoWrapper","EXTERNAL_LINKS","TopBar","addEndpointVisible","setAddEndpointVisible","setTestingConnection","location","useLocation","history","useHistory","handleClick","endpointInfoCustom","handler","handleError","getEpochInfo","newCustomEndpoints","src","logo","alt","mode","selectedKeys","pathname","borderBottom","Item","SubMenu","onTitleClick","open","SettingOutlined","helpUrls","Footer","Layout","useBreakpoint","Grid","footerElements","link","CustomFooter","lg","elem","Header","Content","BasicLayout","ListNewMarketPage","useMintInput","baseMintInput","quoteMintInput","lotSize","setLotSize","setTickSize","listedMarket","setListedMarket","labelCol","wrapperCol","layout","onFinish","initialValue","validateStatus","hasFeedback","trim","colon","htmlType","tooltip","setAddress","help","parsed","Routes","basename","exact","path","component","TradePageContents","OpenOrdersPageContents","BalancesPageContents","ConvertPageContents","App","fallback","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.36a5c5fd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.49174c73.svg\";","import { useCallback, useEffect, useState } from 'react';\nimport { PublicKey } from '@solana/web3.js';\nimport BN from \"bn.js\";\n\nexport function isValidPublicKey(key) {\n  if (!key) {\n    return false;\n  }\n  try {\n    new PublicKey(key);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport async function sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport const percentFormat = new Intl.NumberFormat(undefined, {\n  style: 'percent',\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n});\n\nexport function floorToDecimal(value: number, decimals: number | undefined | null) {\n  return decimals ? Math.floor(value * 10 ** decimals) / 10 ** decimals : value;\n}\n\nexport function roundToDecimal(value: number, decimals: number | undefined | null) {\n  return decimals ? Math.round(value * 10 ** decimals) / 10 ** decimals : value;\n}\n\nexport function getDecimalCount(value): number {\n  if (!isNaN(value) && Math.floor(value) !== value)\n    return value.toString().split('.')[1].length || 0;\n  return 0;\n}\n\nexport function divideBnToNumber(numerator: BN, denominator: BN): number {\n  const quotient = numerator.div(denominator).toNumber();\n  const rem = numerator.umod(denominator);\n  const gcd = rem.gcd(denominator);\n  return quotient + rem.div(gcd).toNumber() / denominator.div(gcd).toNumber();\n}\n\nexport function getTokenMultiplierFromDecimals(decimals: number): BN {\n  return new BN(10).pow(new BN(decimals));\n}\n\nconst localStorageListeners = {};\n\nexport function useLocalStorageStringState(\n  key: string,\n  defaultState: string | null = null,\n): [string | null, (newState: string | null) => void] {\n  const state = localStorage.getItem(key) || defaultState;\n\n  const [, notify] = useState(key + '\\n' + state);\n\n  useEffect(() => {\n    if (!localStorageListeners[key]) {\n      localStorageListeners[key] = [];\n    }\n    localStorageListeners[key].push(notify);\n    return () => {\n      localStorageListeners[key] = localStorageListeners[key].filter(\n        listener => listener !== notify,\n      );\n      if (localStorageListeners[key].length === 0) {\n        delete localStorageListeners[key];\n      }\n    };\n  }, [key]);\n\n  const setState = useCallback<(newState: string | null) => void>(\n    newState => {\n      const changed = state !== newState;\n      if (!changed) {\n        return;\n      }\n\n      if (newState === null) {\n        localStorage.removeItem(key);\n      } else {\n        localStorage.setItem(key, newState);\n      }\n      localStorageListeners[key].forEach(listener => listener(key + '\\n' + newState));\n    },\n    [state, key],\n  );\n\n  return [state, setState];\n}\n\nexport function useLocalStorageState<T = any>(key: string, defaultState: T | null = null): [T, (newState: T) => void] {\n  let [stringState, setStringState] = useLocalStorageStringState(key, JSON.stringify(defaultState));\n  return [stringState && JSON.parse(stringState), newState => setStringState(JSON.stringify(newState))];\n}\n\nexport function useEffectAfterTimeout(effect, timeout) {\n  useEffect(() => {\n    const handle = setTimeout(effect, timeout);\n    return () => clearTimeout(handle);\n  });\n}\n\nexport function useListener(emitter, eventName) {\n  const [, forceUpdate] = useState(0);\n  useEffect(() => {\n    const listener = () => forceUpdate((i) => i + 1);\n    emitter.on(eventName, listener);\n    return () => emitter.removeListener(eventName, listener);\n  }, [emitter, eventName]);\n}\n\nexport function abbreviateAddress(address, size = 4) {\n  const base58 = address.toBase58();\n  return base58.slice(0, size) + '…' + base58.slice(-size);\n}\n\nexport function isEqual(obj1, obj2, keys) {\n  if (!keys && Object.keys(obj1).length !== Object.keys(obj2).length) {\n    return false;\n  }\n  keys = keys || Object.keys(obj1);\n  for (const k of keys) {\n    if (obj1[k] !== obj2[k]) {\n      // shallow comparison\n      return false;\n    }\n  }\n  return true;\n}\n","import {useEffect, useReducer} from 'react';\n\nimport assert from 'assert';\n\nconst pageLoadTime = new Date();\n\nconst globalCache: Map<any, any> = new Map();\n\nclass FetchLoopListener<T = any> {\n  cacheKey: any;\n  fn: () => Promise<T>;\n  refreshInterval: number;\n  refreshIntervalOnError: number | null;\n  callback: () => void;\n\n  constructor(\n      cacheKey: any,\n      fn: () => Promise<T>,\n      refreshInterval: number,\n      refreshIntervalOnError: number | null,\n      callback: () => void\n  ) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.refreshInterval = refreshInterval;\n    this.refreshIntervalOnError = refreshIntervalOnError;\n    this.callback = callback;\n  }\n}\n\nclass FetchLoopInternal<T = any> {\n  cacheKey: any;\n  fn: () => Promise<T>;\n  timeoutId: null | any;\n  listeners: Set<FetchLoopListener<T>>;\n  errors: number;\n\n  constructor(cacheKey: any, fn: () => Promise<T>) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.timeoutId = null;\n    this.listeners = new Set();\n    this.errors = 0;\n  }\n\n  get refreshInterval(): number {\n    return Math.min(\n      ...[...this.listeners].map((listener) => listener.refreshInterval),\n    );\n  }\n\n  get refreshIntervalOnError(): number | null {\n    const refreshIntervalsOnError: number[] = [...this.listeners]\n        .map((listener) => listener.refreshIntervalOnError)\n        .filter((x): x is number => x !== null);\n    if (refreshIntervalsOnError.length === 0) {\n      return null;\n    }\n    return Math.min(\n      ...refreshIntervalsOnError,\n    );\n  }\n\n  get stopped(): boolean {\n    return this.listeners.size === 0;\n  }\n\n  addListener(listener: FetchLoopListener<T>): void {\n    const previousRefreshInterval = this.refreshInterval;\n    this.listeners.add(listener);\n    if (this.refreshInterval < previousRefreshInterval) {\n      this.refresh();\n    }\n  }\n\n  removeListener(listener: FetchLoopListener<T>): void {\n    assert(this.listeners.delete(listener));\n    if (this.stopped) {\n      if (this.timeoutId) {\n        clearTimeout(this.timeoutId);\n        this.timeoutId = null;\n      }\n    }\n  }\n\n  notifyListeners(): void {\n    this.listeners.forEach((listener) => listener.callback());\n  }\n\n  refresh = async () => {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    }\n    if (this.stopped) {\n      return;\n    }\n\n    let errored = false;\n    try {\n      const data = await this.fn();\n      globalCache.set(this.cacheKey, data);\n      this.errors = 0;\n      this.notifyListeners();\n      return data;\n    } catch (error) {\n      ++this.errors;\n      console.warn(error);\n      errored = true;\n    } finally {\n      if (!this.timeoutId && !this.stopped) {\n        let waitTime = this.refreshInterval;\n        if (\n          errored &&\n          this.refreshIntervalOnError &&\n          this.refreshIntervalOnError > 0\n        ) {\n          waitTime = this.refreshIntervalOnError;\n        }\n\n        // Back off on errors.\n        if (this.errors > 0) {\n          waitTime = Math.min(1000 * 2 ** (this.errors - 1), 60000);\n        }\n\n        // Don't do any refreshing for the first five seconds, to make way for other things to load.\n        const timeSincePageLoad = +new Date() - +pageLoadTime;\n        if (timeSincePageLoad < 5000) {\n          waitTime += 5000 - timeSincePageLoad / 2;\n        }\n\n        // Refresh background pages slowly.\n        if (document.visibilityState === 'hidden') {\n          waitTime = 60000;\n        } else if (!document.hasFocus()) {\n          waitTime *= 1.5;\n        }\n\n        // Add jitter so we don't send all requests at the same time.\n        waitTime *= 0.8 + 0.4 * Math.random();\n\n        this.timeoutId = setTimeout(this.refresh, waitTime);\n      }\n    }\n  };\n}\n\nclass FetchLoops {\n  loops = new Map();\n\n  addListener<T>(listener: FetchLoopListener<T>) {\n    if (!this.loops.has(listener.cacheKey)) {\n      this.loops.set(\n        listener.cacheKey,\n        new FetchLoopInternal<T>(listener.cacheKey, listener.fn),\n      );\n    }\n    this.loops.get(listener.cacheKey).addListener(listener);\n  }\n\n  removeListener<T>(listener: FetchLoopListener<T>) {\n    const loop = this.loops.get(listener.cacheKey);\n    loop.removeListener(listener);\n    if (loop.stopped) {\n      this.loops.delete(listener.cacheKey);\n    }\n  }\n\n  refresh(cacheKey) {\n    if (this.loops.has(cacheKey)) {\n      this.loops.get(cacheKey).refresh();\n    }\n  }\n\n  refreshAll() {\n    return Promise.all([...this.loops.values()].map((loop) => loop.refresh()));\n  }\n}\nconst globalLoops = new FetchLoops();\n\nexport function useAsyncData<T = any>(\n  asyncFn: () => Promise<T>,\n  cacheKey: any,\n  { refreshInterval = 60000, refreshIntervalOnError = null } = {},\n): [null | undefined | T, boolean] {\n  const [, rerender] = useReducer((i) => i + 1, 0);\n\n  useEffect(() => {\n    if (!cacheKey) {\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      return () => {};\n    }\n    const listener = new FetchLoopListener<T>(\n      cacheKey,\n      asyncFn,\n      refreshInterval,\n      refreshIntervalOnError,\n      rerender,\n    );\n    globalLoops.addListener(listener);\n    return () => globalLoops.removeListener(listener);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey, refreshInterval]);\n\n  if (!cacheKey) {\n    return [null, false];\n  }\n\n  const loaded = globalCache.has(cacheKey);\n  const data = loaded ? globalCache.get(cacheKey) : undefined;\n  return [data, loaded];\n}\n\nexport function refreshCache(cacheKey: any, clearCache = false): void {\n  if (clearCache) {\n    globalCache.delete(cacheKey);\n  }\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.refresh();\n    if (clearCache) {\n      loop.notifyListeners();\n    }\n  }\n}\n\nexport function refreshAllCaches(): void {\n  for (const loop of globalLoops.loops.values()) {\n    loop.refresh();\n  }\n}\n\nexport function setCache(cacheKey: any, value: any, { initializeOnly = false } = {}): void {\n  if (initializeOnly && globalCache.has(cacheKey)) {\n    return;\n  }\n  globalCache.set(cacheKey, value);\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.notifyListeners();\n  }\n}\n","import {useLocalStorageState} from './utils';\nimport {Account, AccountInfo, clusterApiUrl, Connection, PublicKey} from '@solana/web3.js';\nimport React, {useContext, useEffect, useMemo} from 'react';\nimport {setCache, useAsyncData} from './fetch-loop';\nimport tuple from 'immutable-tuple';\nimport {ConnectionContextValues, EndpointInfo} from \"./types\";\n\nexport const ENDPOINTS: EndpointInfo[] = [\n  {\n    name: 'mainnet-beta',\n    endpoint: 'https://solana-api.projectserum.com',\n    custom: false\n  },\n  { name: 'localnet', endpoint: 'http://127.0.0.1:8899', custom: false },\n];\n\nconst accountListenerCount = new Map();\n\nconst ConnectionContext: React.Context<null | ConnectionContextValues> = React.createContext<null | ConnectionContextValues>(null);\n\nexport function ConnectionProvider({ children }) {\n  const [endpoint, setEndpoint] = useLocalStorageState<string>(\n    'connectionEndpts',\n    ENDPOINTS[0].endpoint,\n  );\n  const [customEndpoints, setCustomEndpoints] = useLocalStorageState<EndpointInfo[]>(\n    'customConnectionEndpoints',\n    []\n  )\n  const availableEndpoints = ENDPOINTS.concat(customEndpoints);\n\n  const connection = useMemo(() => new Connection(endpoint, 'recent'), [\n    endpoint,\n  ]);\n  const sendConnection = useMemo(() => new Connection(endpoint, 'recent'), [\n    endpoint,\n  ]);\n\n  // The websocket library solana/web3.js uses closes its websocket connection when the subscription list\n  // is empty after opening its first time, preventing subsequent subscriptions from receiving responses.\n  // This is a hack to prevent the list from every getting empty\n  useEffect(() => {\n    const id = connection.onAccountChange(new Account().publicKey, () => {});\n    return () => {connection.removeAccountChangeListener(id)};\n  }, [connection]);\n\n  useEffect(() => {\n    const id = connection.onSlotChange(() => null);\n    return () => {connection.removeSlotChangeListener(id)};\n  }, [connection]);\n\n  useEffect(() => {\n    const id = sendConnection.onAccountChange(\n      new Account().publicKey,\n      () => {},\n    );\n    return () => {sendConnection.removeAccountChangeListener(id)};\n  }, [sendConnection]);\n\n  useEffect(() => {\n    const id = sendConnection.onSlotChange(() => null);\n    return () => {sendConnection.removeSlotChangeListener(id)};\n  }, [sendConnection]);\n\n  return (\n    <ConnectionContext.Provider\n      value={{ endpoint, setEndpoint, connection, sendConnection, availableEndpoints, setCustomEndpoints }}\n    >\n      {children}\n    </ConnectionContext.Provider>\n  );\n}\n\nexport function useConnection() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context')\n  }\n  return context.connection;\n}\n\nexport function useSendConnection() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context')\n  }\n  return context.sendConnection;\n}\n\nexport function useConnectionConfig() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context')\n  }\n  return {\n    endpoint: context.endpoint,\n    endpointInfo: context.availableEndpoints.find(info => info.endpoint === context.endpoint),\n    setEndpoint: context.setEndpoint,\n    availableEndpoints: context.availableEndpoints,\n    setCustomEndpoints: context.setCustomEndpoints,\n  };\n}\n\nexport function useAccountInfo(publicKey: PublicKey | undefined | null): [AccountInfo<Buffer> | null | undefined, boolean] {\n  const connection = useConnection();\n  const cacheKey = tuple(connection, publicKey?.toBase58());\n  const [accountInfo, loaded] = useAsyncData<AccountInfo<Buffer> | null>(\n    async () => (publicKey ? connection.getAccountInfo(publicKey) : null),\n    cacheKey,\n    { refreshInterval: 60_000 },\n  );\n  useEffect(() => {\n    if (!publicKey) {\n      return;\n    }\n    if (accountListenerCount.has(cacheKey)) {\n      let currentItem = accountListenerCount.get(cacheKey);\n      ++currentItem.count;\n    } else {\n      let previousData: Buffer | null = null;\n      const subscriptionId = connection.onAccountChange(publicKey, (e) => {\n        if (e.data) {\n          if (!previousData || !previousData.equals(e.data)) {\n            setCache(cacheKey, e);\n          } else {\n          }\n          previousData = e.data;\n        }\n      });\n      accountListenerCount.set(cacheKey, { count: 1, subscriptionId });\n    }\n    return () => {\n      let currentItem = accountListenerCount.get(cacheKey);\n      let nextCount = currentItem.count - 1;\n      if (nextCount <= 0) {\n        connection.removeAccountChangeListener(currentItem.subscriptionId);\n        accountListenerCount.delete(cacheKey);\n      } else {\n        --currentItem.count;\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey]);\n  return [accountInfo, loaded];\n}\n\nexport function useAccountData(publicKey) {\n  const [accountInfo] = useAccountInfo(publicKey);\n  return accountInfo && accountInfo.data;\n}\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nexport default function Link({ external = false, ...props }) {\n  let { to, children, ...rest } = props;\n  if (external) {\n    return (\n      <a href={to} target=\"_blank\" rel=\"noopener noreferrer\" {...rest}>\n        {children}\n      </a>\n    );\n  }\n  return (\n    <RouterLink to={to} {...rest}>\n      {children}\n    </RouterLink>\n  );\n}\n","import React from 'react';\nimport { notification } from 'antd';\nimport Link from '../components/Link';\n\nexport function notify({\n  message,\n  description,\n  txid,\n  type = 'info',\n  placement = 'bottomLeft',\n}: {\n  message: string;\n  description?: string | JSX.Element;\n  txid?: string;\n  type?: string;\n  placement?: string;\n}) {\n  if (txid) {\n    description = (\n      <Link\n        external\n        to={'https://explorer.solana.com/tx/' + txid}\n        style={{ color: '#0000ff' }}\n      >\n        View transaction {txid.slice(0, 8)}...{txid.slice(txid.length - 8)}\n      </Link>\n    );\n  }\n  notification[type]({\n    message: <span style={{ color: 'black' }}>{message}</span>,\n    description: (\n      <span style={{ color: 'black', opacity: 0.5 }}>{description}</span>\n    ),\n    placement,\n    style: {\n      backgroundColor: 'white',\n    },\n  });\n}\n","import React, { useContext, useEffect, useMemo, useState } from 'react';\nimport Wallet from '@project-serum/sol-wallet-adapter';\nimport { notify } from './notifications';\nimport { useConnectionConfig } from './connection';\nimport { useLocalStorageState } from './utils';\nimport {WalletContextValues} from \"./types\";\n\nexport const WALLET_PROVIDERS = [\n  { name: 'sollet.io', url: 'https://www.sollet.io' },\n];\n\nconst WalletContext = React.createContext<null | WalletContextValues>(null);\n\nexport function WalletProvider({ children }) {\n  const { endpoint } = useConnectionConfig();\n\n  const [savedProviderUrl, setProviderUrl] = useLocalStorageState(\n    'walletProvider',\n    'https://www.sollet.io',\n  );\n  let providerUrl;\n  if (!savedProviderUrl) {\n    providerUrl = 'https://www.sollet.io';\n  } else {\n    providerUrl = savedProviderUrl;\n  }\n\n  const wallet = useMemo(() => new Wallet(providerUrl, endpoint), [\n    providerUrl,\n    endpoint,\n  ]);\n\n  const [connected, setConnected] = useState(false);\n\n  useEffect(() => {\n    console.log('trying to connect');\n    wallet.on('connect', () => {\n      console.log('connected');\n      setConnected(true);\n      let walletPublicKey = wallet.publicKey.toBase58();\n      let keyToDisplay =\n        walletPublicKey.length > 20\n          ? `${walletPublicKey.substring(0, 7)}.....${walletPublicKey.substring(\n              walletPublicKey.length - 7,\n              walletPublicKey.length,\n            )}`\n          : walletPublicKey;\n      notify({\n        message: 'Wallet update',\n        description: 'Connected to wallet ' + keyToDisplay,\n      });\n    });\n    wallet.on('disconnect', () => {\n      setConnected(false);\n      notify({\n        message: 'Wallet update',\n        description: 'Disconnected from wallet',\n      });\n    });\n    return () => {\n      wallet.disconnect();\n      setConnected(false);\n    };\n  }, [wallet]);\n\n  return (\n    <WalletContext.Provider\n      value={{\n        wallet,\n        connected,\n        providerUrl,\n        setProviderUrl,\n        providerName:\n          WALLET_PROVIDERS.find(({ url }) => url === providerUrl)?.name ??\n          providerUrl,\n      }}\n    >\n      {children}\n    </WalletContext.Provider>\n  );\n}\n\nexport function useWallet() {\n  const context = useContext(WalletContext);\n  if (!context) {\n    throw new Error('Missing wallet context')\n  }\n  return {\n    connected: context.connected,\n    wallet: context.wallet,\n    providerUrl: context.providerUrl,\n    setProvider: context.setProviderUrl,\n    providerName: context.providerName,\n  };\n}\n","import { notify } from './notifications';\nimport { getDecimalCount, sleep } from './utils';\nimport { getSelectedTokenAccountForMint } from './markets';\nimport {\n  Account, AccountInfo, Connection,\n  PublicKey, RpcResponseAndContext,\n  SystemProgram,\n  Transaction, TransactionSignature,\n} from '@solana/web3.js';\nimport { BN } from 'bn.js';\nimport {\n  DexInstructions,\n  Market,\n  TOKEN_MINTS,\n  TokenInstructions,\n  OpenOrders,\n} from '@project-serum/serum';\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\nimport {SelectedTokenAccounts, TokenAccount} from \"./types\";\nimport {Order} from \"@project-serum/serum/lib/market\";\nimport {Buffer} from \"buffer\";\nimport assert from \"assert\";\nimport { struct } from \"superstruct\";\n\nexport async function createTokenAccountTransaction({\n  connection,\n  wallet,\n  mintPublicKey,\n} : {\n  connection: Connection;\n  wallet: Wallet;\n  mintPublicKey: PublicKey;\n}): Promise<{\n  transaction: Transaction;\n  signer: Account;\n  newAccountPubkey: PublicKey;\n}> {\n  const newAccount = new Account();\n  const transaction = SystemProgram.createAccount({\n    fromPubkey: wallet.publicKey,\n    newAccountPubkey: newAccount.publicKey,\n    lamports: await connection.getMinimumBalanceForRentExemption(165),\n    space: 165,\n    programId: TokenInstructions.TOKEN_PROGRAM_ID,\n  });\n  transaction.add(\n    TokenInstructions.initializeAccount({\n      account: newAccount.publicKey,\n      mint: mintPublicKey,\n      owner: wallet.publicKey,\n    }),\n  );\n  return {\n    transaction,\n    signer: newAccount,\n    newAccountPubkey: newAccount.publicKey,\n  };\n}\n\nexport async function settleFunds({\n  market,\n  openOrders,\n  connection,\n  wallet,\n  baseCurrencyAccount,\n  quoteCurrencyAccount,\n} : {\n  market: Market;\n  openOrders: OpenOrders;\n  connection: Connection;\n  wallet: Wallet;\n  baseCurrencyAccount: TokenAccount;\n  quoteCurrencyAccount: TokenAccount;\n}): Promise<string | undefined> {\n  if (\n    !market ||\n    !wallet ||\n    !connection ||\n    !openOrders ||\n    (!baseCurrencyAccount && !quoteCurrencyAccount)\n  ) {\n    notify({ message: 'Not connected' });\n    return;\n  }\n\n  let createAccountTransaction: Transaction | undefined;\n  let createAccountSigner: Account | undefined;\n  let baseCurrencyAccountPubkey = baseCurrencyAccount?.pubkey;\n  let quoteCurrencyAccountPubkey = quoteCurrencyAccount?.pubkey;\n\n  if (!baseCurrencyAccountPubkey) {\n    const result = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.baseMintAddress,\n    });\n    baseCurrencyAccountPubkey = result?.newAccountPubkey;\n    createAccountTransaction = result?.transaction;\n    createAccountSigner = result?.signer;\n  }\n  if (!quoteCurrencyAccountPubkey) {\n    const result = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.quoteMintAddress,\n    });\n    quoteCurrencyAccountPubkey = result?.newAccountPubkey;\n    createAccountTransaction = result?.transaction;\n    createAccountSigner = result?.signer;\n  }\n  let referrerQuoteWallet: PublicKey | null = null;\n  if (market.supportsReferralFees) {\n    const usdt = TOKEN_MINTS.find(({ name }) => name === 'USDT')\n    const usdc = TOKEN_MINTS.find(({ name }) => name === 'USDC')\n    if (\n      process.env.REACT_APP_USDT_REFERRAL_FEES_ADDRESS &&\n      usdt &&\n      market.quoteMintAddress.equals(usdt.address)\n    ) {\n      referrerQuoteWallet = new PublicKey(\n        process.env.REACT_APP_USDT_REFERRAL_FEES_ADDRESS,\n      );\n    } else if (\n      process.env.REACT_APP_USDC_REFERRAL_FEES_ADDRESS &&\n      usdc &&\n      market.quoteMintAddress.equals(usdc.address)\n    ) {\n      referrerQuoteWallet = new PublicKey(\n        process.env.REACT_APP_USDC_REFERRAL_FEES_ADDRESS,\n      );\n    }\n  }\n  const {\n    transaction: settleFundsTransaction,\n    signers: settleFundsSigners,\n  } = await market.makeSettleFundsTransaction(\n    connection,\n    openOrders,\n    baseCurrencyAccountPubkey,\n    quoteCurrencyAccountPubkey,\n    referrerQuoteWallet,\n  );\n\n  let transaction = mergeTransactions([\n    createAccountTransaction,\n    settleFundsTransaction,\n  ]);\n  let signers = createAccountSigner\n    ? [...settleFundsSigners, createAccountSigner]\n    : settleFundsSigners;\n\n  return await sendTransaction({\n    transaction,\n    signers,\n    wallet,\n    connection,\n    sendingMessage: 'Settling funds...',\n  });\n}\n\nexport async function settleAllFunds({\n  connection,\n  wallet,\n  tokenAccounts,\n  markets,\n  selectedTokenAccounts,\n} : {\n  connection: Connection;\n  wallet: Wallet;\n  tokenAccounts: TokenAccount[];\n  markets: Market[];\n  selectedTokenAccounts?: SelectedTokenAccounts;\n}) {\n  if (!markets || !wallet || !connection || !tokenAccounts) {\n    return;\n  }\n\n  const programIds: PublicKey[] = [];\n  markets\n    .reduce((cumulative, m) => {\n      // @ts-ignore\n      cumulative.push(m._programId);\n      return cumulative;\n    }, [])\n    .forEach((programId) => {\n      if (!programIds.find((p) => p.equals(programId))) {\n        programIds.push(programId);\n      }\n    });\n\n  const getOpenOrdersAccountsForProgramId = async (programId) => {\n    const openOrdersAccounts = await OpenOrders.findForOwner(\n      connection,\n      wallet.publicKey,\n      programId,\n    );\n    return openOrdersAccounts.filter(\n      (openOrders) =>\n        openOrders.baseTokenFree.toNumber() ||\n        openOrders.quoteTokenFree.toNumber(),\n    );\n  };\n\n  const openOrdersAccountsForProgramIds = await Promise.all(\n    programIds.map((programId) => getOpenOrdersAccountsForProgramId(programId)),\n  );\n  const openOrdersAccounts = openOrdersAccountsForProgramIds.reduce(\n    (accounts, current) => accounts.concat(current),\n    [],\n  );\n\n  const settleTransactions = (await Promise.all(\n    openOrdersAccounts.map((openOrdersAccount) => {\n      const market = markets.find((m) =>\n        // @ts-ignore\n        m._decoded?.ownAddress?.equals(openOrdersAccount.market),\n      );\n      const baseMint = market?.baseMintAddress;\n      const quoteMint = market?.quoteMintAddress;\n\n      const selectedBaseTokenAccount = getSelectedTokenAccountForMint(\n        tokenAccounts,\n        baseMint,\n        baseMint && selectedTokenAccounts && selectedTokenAccounts[baseMint.toBase58()]\n      )?.pubkey;\n      const selectedQuoteTokenAccount = getSelectedTokenAccountForMint(\n        tokenAccounts,\n        quoteMint,\n        quoteMint && selectedTokenAccounts && selectedTokenAccounts[quoteMint.toBase58()]\n      )?.pubkey;\n      if (!selectedBaseTokenAccount || !selectedQuoteTokenAccount) {\n        return null;\n      }\n      return (\n        market &&\n        market.makeSettleFundsTransaction(\n          connection,\n          openOrdersAccount,\n          selectedBaseTokenAccount,\n          selectedQuoteTokenAccount,\n        )\n      );\n    }),\n  )).filter((x): x is {signers: [PublicKey | Account]; transaction: Transaction} => !!x);\n  if (!settleTransactions || settleTransactions.length === 0) return;\n\n  const transactions = settleTransactions.slice(0, 4).map((t) => t.transaction);\n  const signers: Array<Account | PublicKey> = [];\n  settleTransactions\n    .reduce((cumulative: Array<Account | PublicKey>, t) => cumulative.concat(t.signers), [])\n    .forEach((signer) => {\n      if (!signers.find((s) => {\n        if (s.constructor.name !== signer.constructor.name) {\n          return false;\n        } else if (s.constructor.name === 'PublicKey') {\n          // @ts-ignore\n          return s.equals(signer);\n        } else {\n          // @ts-ignore\n          return s.publicKey.equals(signer.publicKey);\n        }\n      })) {\n        signers.push(signer);\n      }\n    });\n\n  const transaction = mergeTransactions(transactions);\n\n  return await sendTransaction({\n    transaction,\n    signers,\n    wallet,\n    connection,\n  });\n}\n\nexport async function cancelOrder(params: {market: Market; connection: Connection; wallet: Wallet; order: Order;}) {\n  return cancelOrders({ ...params, orders: [params.order] });\n}\n\nexport async function cancelOrders({ market, wallet, connection, orders }: {\n  market: Market;\n  wallet: Wallet;\n  connection: Connection;\n  orders: Order[];\n}) {\n  const transaction = market.makeMatchOrdersTransaction(5);\n  orders.forEach((order) => {\n    transaction.add(\n      market.makeCancelOrderInstruction(connection, wallet.publicKey, order),\n    );\n  });\n  transaction.add(market.makeMatchOrdersTransaction(5));\n  return await sendTransaction({\n    transaction,\n    wallet,\n    connection,\n    sendingMessage: 'Sending cancel...',\n  });\n}\n\nexport async function placeOrder({\n  side,\n  price,\n  size,\n  orderType,\n  market,\n  connection,\n  wallet,\n  baseCurrencyAccount,\n  quoteCurrencyAccount,\n}: {\n  side: \"buy\" | \"sell\";\n  price: number;\n  size: number;\n  orderType: \"ioc\" | \"postOnly\" | \"limit\";\n  market: Market | undefined | null;\n  connection: Connection;\n  wallet: Wallet;\n  baseCurrencyAccount: PublicKey | undefined;\n  quoteCurrencyAccount: PublicKey | undefined;\n}) {\n  let formattedMinOrderSize =\n    market?.minOrderSize?.toFixed(getDecimalCount(market.minOrderSize)) ||\n    market?.minOrderSize;\n  let formattedTickSize =\n    market?.tickSize?.toFixed(getDecimalCount(market.tickSize)) ||\n    market?.tickSize;\n  const isIncrement = (num, step) =>\n    Math.abs((num / step) % 1) < 1e-5 ||\n    Math.abs(((num / step) % 1) - 1) < 1e-5;\n  if (isNaN(price)) {\n    notify({ message: 'Invalid price', type: 'error' });\n    return;\n  }\n  if (isNaN(size)) {\n    notify({ message: 'Invalid size', type: 'error' });\n    return;\n  }\n  if (!wallet || !wallet.publicKey) {\n    notify({ message: 'Connect wallet', type: 'error' });\n    return;\n  }\n  if (!market) {\n    notify({ message: 'Invalid  market', type: 'error' });\n    return;\n  }\n  if (!isIncrement(size, market.minOrderSize)) {\n    notify({\n      message: `Size must be an increment of ${formattedMinOrderSize}`,\n      type: 'error',\n    });\n    return;\n  }\n  if (size < market.minOrderSize) {\n    notify({ message: 'Size too small', type: 'error' });\n    return;\n  }\n  if (!isIncrement(price, market.tickSize)) {\n    notify({\n      message: `Price must be an increment of ${formattedTickSize}`,\n      type: 'error',\n    });\n    return;\n  }\n  if (price < market.tickSize) {\n    notify({ message: 'Price under tick size', type: 'error' });\n    return;\n  }\n  const owner = wallet.publicKey;\n\n  const payer = side === 'sell' ? baseCurrencyAccount : quoteCurrencyAccount;\n  if (!payer) {\n    notify({\n      message: 'Need an SPL token account for cost currency',\n      type: 'error',\n    });\n    return;\n  }\n  const params = {\n    owner,\n    payer,\n    side,\n    price,\n    size,\n    orderType,\n  };\n  console.log(params);\n\n  const transaction = market.makeMatchOrdersTransaction(5);\n  let {\n    transaction: placeOrderTx,\n    signers,\n  } = await market.makePlaceOrderTransaction(\n    connection,\n    params,\n    10_000,\n    10_000,\n  );\n  transaction.add(placeOrderTx);\n  transaction.add(market.makeMatchOrdersTransaction(5));\n\n  return await sendTransaction({\n    transaction,\n    wallet,\n    connection,\n    signers,\n    sendingMessage: 'Sending order...',\n  });\n}\n\nexport async function listMarket({\n  connection,\n  wallet,\n  baseMint,\n  quoteMint,\n  baseLotSize,\n  quoteLotSize,\n  dexProgramId,\n} : {\n  connection: Connection;\n  wallet: Wallet;\n  baseMint: PublicKey;\n  quoteMint: PublicKey;\n  baseLotSize: number;\n  quoteLotSize: number;\n  dexProgramId: PublicKey;\n}) {\n  const market = new Account();\n  const requestQueue = new Account();\n  const eventQueue = new Account();\n  const bids = new Account();\n  const asks = new Account();\n  const baseVault = new Account();\n  const quoteVault = new Account();\n  const feeRateBps = 0;\n  const quoteDustThreshold = new BN(100);\n\n  async function getVaultOwnerAndNonce() {\n    const nonce = new BN(0);\n    while (true) {\n      try {\n        const vaultOwner = await PublicKey.createProgramAddress(\n          [market.publicKey.toBuffer(), nonce.toArrayLike(Buffer, 'le', 8)],\n          dexProgramId,\n        );\n        return [vaultOwner, nonce];\n      } catch (e) {\n        nonce.iaddn(1);\n      }\n    }\n  }\n  const [vaultOwner, vaultSignerNonce] = await getVaultOwnerAndNonce();\n\n  const tx1 = new Transaction();\n  tx1.add(\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: baseVault.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(165),\n      space: 165,\n      programId: TokenInstructions.TOKEN_PROGRAM_ID,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: quoteVault.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(165),\n      space: 165,\n      programId: TokenInstructions.TOKEN_PROGRAM_ID,\n    }),\n    TokenInstructions.initializeAccount({\n      account: baseVault.publicKey,\n      mint: baseMint,\n      owner: vaultOwner,\n    }),\n    TokenInstructions.initializeAccount({\n      account: quoteVault.publicKey,\n      mint: quoteMint,\n      owner: vaultOwner,\n    }),\n  );\n\n  const tx2 = new Transaction();\n  tx2.add(\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: market.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(\n        Market.getLayout(dexProgramId).span,\n      ),\n      space: Market.getLayout(dexProgramId).span,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: requestQueue.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(5120 + 12),\n      space: 5120 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: eventQueue.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(262144 + 12),\n      space: 262144 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: bids.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(65536 + 12),\n      space: 65536 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: asks.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(65536 + 12),\n      space: 65536 + 12,\n      programId: dexProgramId,\n    }),\n    DexInstructions.initializeMarket({\n      market: market.publicKey,\n      requestQueue: requestQueue.publicKey,\n      eventQueue: eventQueue.publicKey,\n      bids: bids.publicKey,\n      asks: asks.publicKey,\n      baseVault: baseVault.publicKey,\n      quoteVault: quoteVault.publicKey,\n      baseMint,\n      quoteMint,\n      baseLotSize: new BN(baseLotSize),\n      quoteLotSize: new BN(quoteLotSize),\n      feeRateBps,\n      vaultSignerNonce,\n      quoteDustThreshold,\n      programId: dexProgramId,\n    }),\n  );\n\n  const signedTransactions = await Promise.all([\n    signTransaction({\n      transaction: tx1,\n      wallet,\n      connection,\n      signers: [wallet.publicKey, baseVault, quoteVault],\n    }),\n    signTransaction({\n      transaction: tx2,\n      wallet,\n      connection,\n      signers: [wallet.publicKey, market, requestQueue, eventQueue, bids, asks],\n    }),\n  ]);\n  for (let signedTransaction of signedTransactions) {\n    await sendSignedTransaction({\n      signedTransaction,\n      connection,\n    });\n  }\n\n  return market.publicKey;\n}\n\nconst getUnixTs = () => {\n  return new Date().getTime() / 1000;\n};\n\nconst DEFAULT_TIMEOUT = 15000;\n\nasync function sendTransaction({\n  transaction,\n  wallet,\n  signers = [wallet.publicKey],\n  connection,\n  sendingMessage = 'Sending transaction...',\n  sentMessage = 'Transaction sent',\n  successMessage = 'Transaction confirmed',\n  timeout = DEFAULT_TIMEOUT,\n} : {\n  transaction: Transaction;\n  wallet: Wallet;\n  signers?: Array<PublicKey | Account>;\n  connection: Connection;\n  sendingMessage?: string;\n  sentMessage?: string;\n  successMessage?: string;\n  timeout?: number;\n}): Promise<string> {\n  const signedTransaction = await signTransaction({\n    transaction,\n    wallet,\n    signers,\n    connection,\n  });\n  return await sendSignedTransaction({\n    signedTransaction,\n    connection,\n    sendingMessage,\n    sentMessage,\n    successMessage,\n    timeout,\n  });\n}\n\nasync function signTransaction({\n  transaction,\n  wallet,\n  signers = [wallet.publicKey],\n  connection,\n} : {\n  transaction: Transaction;\n  wallet: Wallet;\n  signers: Array<Account | PublicKey>;\n  connection: Connection;\n}) {\n  transaction.recentBlockhash = (\n    await connection.getRecentBlockhash('max')\n  ).blockhash;\n  transaction.signPartial(...signers);\n  return await wallet.signTransaction(transaction);\n}\n\nasync function sendSignedTransaction({\n  signedTransaction,\n  connection,\n  sendingMessage = 'Sending transaction...',\n  sentMessage = 'Transaction sent',\n  successMessage = 'Transaction confirmed',\n  timeout = DEFAULT_TIMEOUT,\n} : {\n  signedTransaction: Transaction;\n  connection: Connection;\n  sendingMessage?: string;\n  sentMessage?: string;\n  successMessage?: string;\n  timeout?: number;\n}): Promise<string> {\n  const rawTransaction = signedTransaction.serialize();\n  const startTime = getUnixTs();\n  notify({ message: sendingMessage });\n  const txid: TransactionSignature = await connection.sendRawTransaction(rawTransaction, {\n    skipPreflight: true,\n  });\n  notify({ message: sentMessage, type: 'success', txid });\n\n  console.log('Started awaiting confirmation for', txid);\n\n  let done = false;\n  (async () => {\n    while (!done && getUnixTs() - startTime < timeout) {\n      connection.sendRawTransaction(rawTransaction, {\n        skipPreflight: true,\n      });\n      await sleep(300);\n    }\n  })();\n  try {\n    await awaitTransactionSignatureConfirmation(txid, timeout, connection);\n  } catch (err) {\n    if (err.timeout) {\n      throw new Error('Timed out awaiting confirmation on transaction');\n    }\n    throw new Error('Transaction failed');\n  } finally {\n    done = true;\n  }\n  notify({ message: successMessage, type: 'success', txid });\n\n  console.log('Latency', txid, getUnixTs() - startTime);\n  return txid;\n}\n\nasync function awaitTransactionSignatureConfirmation(\n  txid: TransactionSignature,\n  timeout: number,\n  connection: Connection,\n) {\n  let done = false;\n  const result = await new Promise((resolve, reject) => {\n    (async () => {\n      setTimeout(() => {\n        if (done) {\n          return;\n        }\n        done = true;\n        console.log('Timed out for txid', txid);\n        reject({ timeout: true });\n      }, timeout);\n      try {\n        connection.onSignature(\n          txid,\n          (result) => {\n            console.log('WS confirmed', txid, result);\n            done = true;\n            if (result.err) {\n              reject(result.err);\n            } else {\n              resolve(result);\n            }\n          },\n          'recent',\n        );\n        console.log('Set up WS connection', txid);\n      } catch (e) {\n        done = true;\n        console.log('WS error in setup', txid, e);\n      }\n      while (!done) {\n        // eslint-disable-next-line no-loop-func\n        (async () => {\n          try {\n            const signatureStatuses = await connection.getSignatureStatuses([\n              txid,\n            ]);\n            const result = signatureStatuses && signatureStatuses.value[0];\n            if (!done) {\n              if (!result) {\n                console.log('REST null result for', txid, result);\n              } else if (result.err) {\n                console.log('REST error for', txid, result);\n                done = true;\n                reject(result.err);\n              } else if (!result.confirmations) {\n                console.log('REST no confirmations for', txid, result);\n              } else {\n                console.log('REST confirmation for', txid, result);\n                done = true;\n                resolve(result);\n              }\n            }\n          } catch (e) {\n            if (!done) {\n              console.log('REST connection error: txid', txid, e);\n            }\n          }\n        })();\n        await sleep(300);\n      }\n    })();\n  });\n  done = true;\n  return result;\n}\n\nfunction mergeTransactions(transactions: (Transaction | undefined)[]) {\n  const transaction = new Transaction();\n  transactions\n    .filter((t): t is Transaction => t !== undefined)\n    .forEach((t) => {\n      transaction.add(t);\n    });\n  return transaction;\n}\n\nfunction jsonRpcResult(resultDescription: any) {\n  const jsonRpcVersion = struct.literal(\"2.0\");\n  return struct.union([\n    struct({\n      jsonrpc: jsonRpcVersion,\n      id: \"string\",\n      error: \"any\",\n    }),\n    struct({\n      jsonrpc: jsonRpcVersion,\n      id: \"string\",\n      error: \"null?\",\n      result: resultDescription,\n    }),\n  ]);\n}\n\nfunction jsonRpcResultAndContext(resultDescription: any) {\n  return jsonRpcResult({\n    context: struct({\n      slot: \"number\",\n    }),\n    value: resultDescription,\n  });\n}\n\nconst AccountInfoResult = struct({\n  executable: \"boolean\",\n  owner: \"string\",\n  lamports: \"number\",\n  data: \"any\",\n  rentEpoch: \"number?\",\n});\n\nexport const GetMultipleAccountsAndContextRpcResult = jsonRpcResultAndContext(\n  struct.array([struct.union([\"null\", AccountInfoResult])])\n);\n\nexport async function getMultipleSolanaAccounts(\n  connection: Connection,\n  publicKeys: PublicKey[]\n): Promise<\n  RpcResponseAndContext<{ [key: string]: AccountInfo<Buffer> | null }>\n> {\n  const args = [\n    publicKeys.map((k) => k.toBase58()),\n    { commitment: \"recent\" },\n  ];\n  // @ts-ignore\n  const unsafeRes = await connection._rpcRequest(\"getMultipleAccounts\", args);\n  const res = GetMultipleAccountsAndContextRpcResult(unsafeRes);\n  if (res.error) {\n    throw new Error(\n      \"failed to get info about accounts \" +\n        publicKeys.map((k) => k.toBase58()).join(\", \") +\n        \": \" +\n        res.error.message\n    );\n  }\n  assert(typeof res.result !== \"undefined\");\n  const accounts: Array<{\n    executable: any;\n    owner: PublicKey;\n    lamports: any;\n    data: Buffer;\n  } | null> = [];\n  for (const account of res.result.value) {\n    let value: {\n      executable: any;\n      owner: PublicKey;\n      lamports: any;\n      data: Buffer;\n    } | null = null;\n    if (res.result.value) {\n      const { executable, owner, lamports, data } = account;\n      assert(data[1] === \"base64\");\n      value = {\n        executable,\n        owner: new PublicKey(owner),\n        lamports,\n        data: Buffer.from(data[0], \"base64\"),\n      };\n    }\n    accounts.push(value);\n  }\n  return {\n    context: {\n      slot: res.result.context.slot,\n    },\n    value: Object.fromEntries(\n      accounts.map((account, i) => [publicKeys[i].toBase58(), account])\n    ),\n  };\n}\n","import * as BufferLayout from 'buffer-layout';\nimport bs58 from 'bs58';\nimport {AccountInfo, Connection, PublicKey} from '@solana/web3.js';\nimport {WRAPPED_SOL_MINT} from '@project-serum/serum/lib/token-instructions';\nimport {TokenAccount} from \"./types\";\nimport {TOKEN_MINTS} from \"@project-serum/serum\";\nimport {useAllMarkets, useMarket, useTokenAccounts} from \"./markets\";\nimport {getMultipleSolanaAccounts} from \"./send\";\nimport {useConnection} from \"./connection\";\nimport {useAsyncData} from \"./fetch-loop\";\nimport tuple from 'immutable-tuple';\n\nexport const ACCOUNT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(32, 'mint'),\n  BufferLayout.blob(32, 'owner'),\n  BufferLayout.nu64('amount'),\n  BufferLayout.blob(93),\n]);\n\nexport const MINT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(44),\n  BufferLayout.u8('decimals'),\n  BufferLayout.u8('initialized'),\n  BufferLayout.blob(36),\n]);\n\nexport function parseTokenAccountData(\n  data: Buffer\n): { mint: PublicKey; owner: PublicKey; amount: number } {\n  let { mint, owner, amount } = ACCOUNT_LAYOUT.decode(data);\n  return {\n    mint: new PublicKey(mint),\n    owner: new PublicKey(owner),\n    amount,\n  };\n}\n\nexport function parseTokenMintData(data) {\n  let { decimals, initialized } = MINT_LAYOUT.decode(data);\n  return { decimals, initialized };\n}\n\nexport function getOwnedAccountsFilters(publicKey: PublicKey) {\n  return [\n    {\n      memcmp: {\n        offset: ACCOUNT_LAYOUT.offsetOf('owner'),\n        bytes: publicKey.toBase58(),\n      },\n    },\n    {\n      dataSize: ACCOUNT_LAYOUT.span,\n    },\n  ];\n}\n\nexport const TOKEN_PROGRAM_ID = new PublicKey(\n  'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n);\n\nexport async function getOwnedTokenAccounts(\n    connection: Connection, publicKey: PublicKey\n): Promise<Array<{publicKey: PublicKey, accountInfo: AccountInfo<Buffer>}>> {\n  let filters = getOwnedAccountsFilters(publicKey);\n  // @ts-ignore\n  let resp = await connection._rpcRequest('getProgramAccounts', [\n    TOKEN_PROGRAM_ID.toBase58(),\n    {\n      commitment: connection.commitment,\n      filters,\n    },\n  ]);\n  if (resp.error) {\n    throw new Error(\n      'failed to get token accounts owned by ' +\n        publicKey.toBase58() +\n        ': ' +\n        resp.error.message,\n    );\n  }\n  return resp.result\n    .map(({ pubkey, account: { data, executable, owner, lamports } }) => ({\n      publicKey: new PublicKey(pubkey),\n      accountInfo: {\n        data: bs58.decode(data),\n        executable,\n        owner: new PublicKey(owner),\n        lamports,\n      },\n    }))\n    .filter(({ accountInfo }) => {\n      // TODO: remove this check once mainnet is updated\n      return filters.every((filter) => {\n        if (filter.dataSize) {\n          return accountInfo.data.length === filter.dataSize;\n        } else if (filter.memcmp) {\n          let filterBytes = bs58.decode(filter.memcmp.bytes);\n          return accountInfo.data\n            .slice(\n              filter.memcmp.offset,\n              filter.memcmp.offset + filterBytes.length,\n            )\n            .equals(filterBytes);\n        }\n        return false;\n      });\n    });\n}\n\nexport async function getTokenAccountInfo(connection: Connection, ownerAddress: PublicKey) {\n  let [splAccounts, account] = await Promise.all([\n    getOwnedTokenAccounts(connection, ownerAddress),\n    connection.getAccountInfo(ownerAddress),\n  ]);\n  const parsedSplAccounts: TokenAccount[] = splAccounts.map(({ publicKey, accountInfo }) => {\n    return {\n      pubkey: publicKey,\n      account: accountInfo,\n      effectiveMint: parseTokenAccountData(accountInfo.data).mint,\n    };\n  });\n  return parsedSplAccounts.concat({\n    pubkey: ownerAddress,\n    account,\n    effectiveMint: WRAPPED_SOL_MINT,\n  });\n}\n\nexport function useMintToTickers(): { [mint: string]: string; } {\n  const { customMarkets } = useMarket();\n  const [markets] = useAllMarkets(customMarkets);\n  const mintsToTickers = Object.fromEntries(TOKEN_MINTS.map(mint => [mint.address.toBase58(), mint.name]));\n  for (let market of (markets || [])) {\n    const customMarketInfo = customMarkets.find(\n      customMarket => customMarket.address === market.market.address.toBase58()\n    );\n    if (!(market.market.baseMintAddress.toBase58() in mintsToTickers)) {\n      if (customMarketInfo) {\n        mintsToTickers[market.market.baseMintAddress.toBase58()] = customMarketInfo.baseLabel || `${customMarketInfo.name}_BASE`;\n      }\n    }\n    if (!(market.market.quoteMintAddress.toBase58() in mintsToTickers)) {\n      if (customMarketInfo) {\n        mintsToTickers[market.market.quoteMintAddress.toBase58()] = customMarketInfo.quoteLabel || `${customMarketInfo.name}_QUOTE`;\n      }\n    }\n  }\n  return mintsToTickers;\n}\n\nconst _VERY_SLOW_REFRESH_INTERVAL = 5000 * 1000;\n\nexport function useMintInfos(): [\n  {[mintAddress: string]: {decimals: number; initialized: boolean} | null} | null | undefined,\n  boolean\n] {\n  const connection = useConnection();\n  const {customMarkets} = useMarket();\n  const [tokenAccounts] = useTokenAccounts();\n  const [allMarkets] = useAllMarkets(customMarkets);\n\n  const allMints = (tokenAccounts || []).map(account => account.effectiveMint).concat(\n    (allMarkets || []).map(marketInfo => marketInfo.market.baseMintAddress)\n  ).concat(\n    (allMarkets || []).map(marketInfo => marketInfo.market.quoteMintAddress)\n  );\n  const uniqueMints = [...new Set(allMints.map(mint => mint.toBase58()))].map(stringMint => new PublicKey(stringMint))\n\n  const getAllMintInfo = async () => {\n    const mintInfos = await getMultipleSolanaAccounts(connection, uniqueMints);\n    return Object.fromEntries(Object.entries(mintInfos.value).map(\n      ([key, accountInfo]) => [\n        key,\n        accountInfo && parseTokenMintData(accountInfo.data)\n      ]\n    ));\n  }\n\n  return useAsyncData(\n    getAllMintInfo,\n    tuple(\n      'getAllMintInfo',\n      connection,\n      (tokenAccounts || []).length,\n      (allMarkets || []).length,\n    ),\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\n  );\n}\n","import {\n  decodeEventQueue,\n  Market,\n  MARKETS,\n  OpenOrders,\n  Orderbook,\n  TOKEN_MINTS,\n  TokenInstructions,\n} from '@project-serum/serum';\nimport {PublicKey} from '@solana/web3.js';\nimport React, {useContext, useEffect, useState} from 'react';\nimport {divideBnToNumber, floorToDecimal, getTokenMultiplierFromDecimals, useLocalStorageState} from './utils';\nimport {refreshCache, useAsyncData} from './fetch-loop';\nimport {useAccountData, useAccountInfo, useConnection} from './connection';\nimport {useWallet} from './wallet';\nimport tuple from 'immutable-tuple';\nimport {notify} from './notifications';\nimport {BN} from 'bn.js';\nimport {getTokenAccountInfo, parseTokenAccountData, useMintInfos} from './tokens';\nimport {\n  Balances,\n  CustomMarketInfo,\n  DeprecatedOpenOrdersBalances,\n  FullMarketInfo,\n  MarketContextValues,\n  MarketInfo,\n  OrderWithMarketAndMarketName,\n  SelectedTokenAccounts,\n  TokenAccount,\n  Trade,\n} from \"./types\";\nimport {WRAPPED_SOL_MINT} from \"@project-serum/serum/lib/token-instructions\";\nimport {Order} from \"@project-serum/serum/lib/market\";\n\n// Used in debugging, should be false in production\nconst _IGNORE_DEPRECATED = false;\n\nconst USE_MARKETS: MarketInfo[] = _IGNORE_DEPRECATED\n  ? MARKETS.map((m) => ({ ...m, deprecated: false }))\n  : MARKETS;\n\nexport function useMarketsList() {\n  return USE_MARKETS.filter(({ deprecated }) => !deprecated);\n}\n\nexport function useAllMarkets(customMarkets) {\n  const connection = useConnection();\n\n  const getAllMarkets = async () => {\n    const markets: Array<{\n      market: Market;\n      marketName: string;\n      programId: PublicKey;\n    } | null> = await Promise.all(getMarketInfos(customMarkets).map(\n      async marketInfo => {\n        try {\n          const market = await Market.load(connection, marketInfo.address, {}, marketInfo.programId)\n          return {\n            market,\n            marketName: marketInfo.name,\n            programId: marketInfo.programId,\n          }\n        } catch (e) {\n          notify({\n            message: 'Error loading all market',\n            description: e.message,\n            type: 'error',\n          });\n          return null;\n        }\n      }\n    ))\n    return markets.filter((m): m is {market: Market; marketName: string; programId: PublicKey;} => !!m);\n  };\n  return useAsyncData(\n    getAllMarkets,\n    tuple(\n      'getAllMarkets',\n      customMarkets.length,\n      connection,\n    ),\n    {refreshInterval: _VERY_SLOW_REFRESH_INTERVAL}\n  )\n}\n\nexport function useUnmigratedOpenOrdersAccounts() {\n  const connection = useConnection();\n  const { wallet } = useWallet();\n\n  async function getUnmigratedOpenOrdersAccounts(): Promise<OpenOrders[]> {\n    if (!wallet || !connection || !wallet.publicKey) {\n      return [];\n    }\n    console.log('refreshing useUnmigratedOpenOrdersAccounts');\n    let deprecatedOpenOrdersAccounts: OpenOrders[] = [];\n    const deprecatedProgramIds = Array.from(\n      new Set(\n        USE_MARKETS.filter(\n          ({ deprecated }) => deprecated,\n        ).map(({ programId }) => programId.toBase58()),\n      ),\n    ).map((publicKeyStr) => new PublicKey(publicKeyStr));\n    let programId: PublicKey;\n    for (programId of deprecatedProgramIds) {\n      try {\n        const openOrdersAccounts = await OpenOrders.findForOwner(\n          connection,\n          wallet.publicKey,\n          programId,\n        );\n        deprecatedOpenOrdersAccounts = deprecatedOpenOrdersAccounts.concat(\n          openOrdersAccounts\n            .filter(\n              (openOrders) =>\n                openOrders.baseTokenTotal.toNumber() ||\n                openOrders.quoteTokenTotal.toNumber(),\n            )\n            .filter((openOrders) =>\n              USE_MARKETS.some(\n                (market) =>\n                  market.deprecated && market.address.equals(openOrders.market),\n              ),\n            ),\n        );\n      } catch (e) {\n        console.log(\n          'Error loading deprecated markets',\n          programId?.toBase58(),\n          e.message,\n        );\n      }\n    }\n    // Maybe sort\n    return deprecatedOpenOrdersAccounts;\n  }\n\n  const cacheKey = tuple(\n    'getUnmigratedOpenOrdersAccounts',\n    connection,\n    wallet?.publicKey?.toBase58(),\n  );\n  const [accounts] = useAsyncData(getUnmigratedOpenOrdersAccounts, cacheKey, {\n    refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\n  });\n\n  return {\n    accounts,\n    refresh: (clearCache: boolean) => refreshCache(cacheKey, clearCache),\n  };\n}\n\nconst MarketContext: React.Context<null | MarketContextValues> = React.createContext<null | MarketContextValues>(null);\n\nconst _VERY_SLOW_REFRESH_INTERVAL = 5000 * 1000;\n\n// For things that don't really change\nconst _SLOW_REFRESH_INTERVAL = 5 * 1000;\n\n// For things that change frequently\nconst _FAST_REFRESH_INTERVAL = 1000;\n\nexport const DEFAULT_MARKET = USE_MARKETS.find(\n  ({ name, deprecated }) => name === 'SRM/USDT' && !deprecated,\n);\n\nexport function getMarketDetails(market: Market | undefined | null, customMarkets: CustomMarketInfo[]): FullMarketInfo {\n  if (!market) {\n    return {};\n  }\n  const marketInfos = getMarketInfos(customMarkets);\n  const marketInfo = marketInfos.find((otherMarket) =>\n    otherMarket.address.equals(market.address),\n  );\n  const baseCurrency =\n    (market?.baseMintAddress &&\n      TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\n        ?.name) ||\n    (marketInfo?.baseLabel && `${marketInfo?.baseLabel}*`) ||\n    'UNKNOWN';\n  const quoteCurrency =\n    (market?.quoteMintAddress &&\n      TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\n        ?.name) ||\n    (marketInfo?.quoteLabel && `${marketInfo?.quoteLabel}*`) ||\n    'UNKNOWN';\n\n  return {\n    ...marketInfo,\n    marketName: marketInfo?.name,\n    baseCurrency,\n    quoteCurrency,\n    marketInfo,\n  };\n}\n\nexport function MarketProvider({ children }) {\n  const [marketAddress, setMarketAddress] = useLocalStorageState(\n    'marketAddress',\n    DEFAULT_MARKET?.address.toBase58(),\n  );\n  const [customMarkets, setCustomMarkets] = useLocalStorageState<CustomMarketInfo[]>(\n    'customMarkets',\n    [],\n  );\n\n  const address = marketAddress && new PublicKey(marketAddress);\n  const connection = useConnection();\n  const marketInfos = getMarketInfos(customMarkets);\n  const marketInfo = address && marketInfos.find((market) =>\n    market.address.equals(address),\n  );\n\n  // Replace existing market with a non-deprecated one on first load\n  useEffect(() => {\n    if (marketInfo && marketInfo.deprecated) {\n      console.log('Switching markets from deprecated', marketInfo);\n      if (DEFAULT_MARKET) {\n        setMarketAddress(DEFAULT_MARKET.address.toBase58());\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const [market, setMarket] = useState<Market | null>();\n  useEffect(() => {\n    if (\n      market &&\n      marketInfo &&\n      // @ts-ignore\n      market._decoded.ownAddress?.equals(marketInfo?.address)\n    ) {\n      return;\n    }\n    setMarket(null);\n    if (!marketInfo || !marketInfo.address) {\n      notify({\n        message: 'Error loading market',\n        description: 'Please select a market from the dropdown',\n        type: 'error',\n      });\n      return;\n    }\n    Market.load(connection, marketInfo.address, {}, marketInfo.programId)\n      .then(setMarket)\n      .catch((e) =>\n        notify({\n          message: 'Error loading market',\n          description: e.message,\n          type: 'error',\n        }),\n      );\n    // eslint-disable-next-line\n  }, [connection, marketInfo]);\n\n  return (\n    <MarketContext.Provider\n      value={{\n        market,\n        ...getMarketDetails(market, customMarkets),\n        setMarketAddress,\n        customMarkets,\n        setCustomMarkets,\n      }}\n    >\n      {children}\n    </MarketContext.Provider>\n  );\n}\n\nexport function useSelectedTokenAccounts(): [SelectedTokenAccounts, (newSelectedTokenAccounts: SelectedTokenAccounts) => void] {\n  const [selectedTokenAccounts, setSelectedTokenAccounts] = useLocalStorageState<SelectedTokenAccounts>(\n    'selectedTokenAccounts', {}\n    );\n  return [selectedTokenAccounts, setSelectedTokenAccounts]\n}\n\nexport function useMarket() {\n  const context = useContext(MarketContext);\n  if (!context) {\n    throw new Error('Missing market context')\n  }\n  return context\n}\n\nexport function useMarkPrice() {\n  const [markPrice, setMarkPrice] = useState<null | number>(null);\n\n  const [orderbook] = useOrderbook();\n  const trades = useTrades();\n\n  useEffect(() => {\n    let bb = orderbook?.bids?.length > 0 && Number(orderbook.bids[0][0]);\n    let ba = orderbook?.asks?.length > 0 && Number(orderbook.asks[0][0]);\n    let last = trades && trades.length > 0 && trades[0].price;\n\n    let markPrice =\n      bb && ba\n        ? last\n          ? [bb, ba, last].sort((a, b) => a - b)[1]\n          : (bb + ba) / 2\n        : null;\n\n    setMarkPrice(markPrice);\n  }, [orderbook, trades]);\n\n  return markPrice;\n}\n\nexport function _useUnfilteredTrades(limit = 10000) {\n  const { market } = useMarket();\n  const connection = useConnection();\n  async function getUnfilteredTrades(): Promise<any[] | null> {\n    if (!market || !connection) {\n      return null;\n    }\n    return await market.loadFills(connection, limit);\n  }\n  const [trades] = useAsyncData(\n    getUnfilteredTrades,\n    tuple('getUnfilteredTrades', market, connection),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n  return trades;\n  // NOTE: For now, websocket is too expensive since the event queue is large\n  // and updates very frequently\n\n  // let data = useAccountData(market && market._decoded.eventQueue);\n  // if (!data) {\n  //   return null;\n  // }\n  // const events = decodeEventQueue(data, limit);\n  // return events\n  //   .filter((event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0))\n  //   .map(market.parseFillEvent.bind(market));\n}\n\nexport function useOrderbookAccounts() {\n  const { market } = useMarket();\n  // @ts-ignore\n  let bidData = useAccountData(market && market._decoded.bids);\n  // @ts-ignore\n  let askData = useAccountData(market && market._decoded.asks);\n  return {\n    bidOrderbook: market && bidData ? Orderbook.decode(market, bidData) : null,\n    askOrderbook: market && askData ? Orderbook.decode(market, askData) : null,\n  };\n}\n\nexport function useOrderbook(depth = 20): [{bids: number[][]; asks: number[][];}, boolean] {\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\n  const { market } = useMarket();\n  const bids =\n    !bidOrderbook || !market\n      ? []\n      : bidOrderbook.getL2(depth).map(([price, size]) => [price, size]);\n  const asks =\n    !askOrderbook || !market\n      ? []\n      : askOrderbook.getL2(depth).map(([price, size]) => [price, size]);\n  return [{ bids, asks }, !!bids || !!asks];\n}\n\n// Want the balances table to be fast-updating, dont want open orders to flicker\n// TODO: Update to use websocket\nexport function useOpenOrdersAccounts(fast = false) {\n  const { market } = useMarket();\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getOpenOrdersAccounts() {\n    if (!connected) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    return await market.findOpenOrdersAccountsForOwner(\n      connection,\n      wallet.publicKey,\n    );\n  }\n  return useAsyncData(\n    getOpenOrdersAccounts,\n    tuple('getOpenOrdersAccounts', wallet, market, connected),\n    { refreshInterval: fast ? _FAST_REFRESH_INTERVAL : _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useSelectedOpenOrdersAccount(fast = false) {\n  const [accounts] = useOpenOrdersAccounts(fast);\n  if (!accounts) {\n    return null;\n  }\n  return accounts[0];\n}\n\nexport function useTokenAccounts(): [TokenAccount[] | null | undefined, boolean] {\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getTokenAccounts() {\n    if (!connected) {\n      return null;\n    }\n    return await getTokenAccountInfo(connection, wallet.publicKey);\n  }\n  return useAsyncData(\n    getTokenAccounts,\n    tuple('getTokenAccounts', wallet, connected),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function getSelectedTokenAccountForMint(\n  accounts: TokenAccount[] | undefined | null,\n  mint: PublicKey | undefined,\n  selectedPubKey?: string | PublicKey | null,\n) {\n  if (!accounts || !mint) {\n    return null;\n  }\n  const filtered = accounts.filter(({ effectiveMint, pubkey }) =>\n    mint.equals(effectiveMint) && (!selectedPubKey ||\n    (typeof selectedPubKey === 'string' ? selectedPubKey : selectedPubKey.toBase58()) === pubkey.toBase58())\n  );\n  return filtered && filtered[0];\n}\n\nexport function useSelectedQuoteCurrencyAccount() {\n  const [accounts] = useTokenAccounts();\n  const { market } = useMarket();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n  const mintAddress =  market?.quoteMintAddress;\n  return getSelectedTokenAccountForMint(\n    accounts,\n    mintAddress,\n    mintAddress && selectedTokenAccounts[mintAddress.toBase58()]\n  );\n}\n\nexport function useSelectedBaseCurrencyAccount() {\n  const [accounts] = useTokenAccounts();\n  const { market } = useMarket();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n  const mintAddress =  market?.baseMintAddress;\n  return getSelectedTokenAccountForMint(\n    accounts,\n    mintAddress,\n    mintAddress && selectedTokenAccounts[mintAddress.toBase58()]\n  );\n}\n\n// TODO: Update to use websocket\nexport function useSelectedQuoteCurrencyBalances() {\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const { market } = useMarket();\n  const [accountInfo, loaded] = useAccountInfo(quoteCurrencyAccount?.pubkey);\n  if (!market || !quoteCurrencyAccount || !loaded || !accountInfo) {\n    return null;\n  }\n  if (market.quoteMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\n    return accountInfo?.lamports / 1e9 ?? 0;\n  }\n  return market.quoteSplSizeToNumber(\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\n  );\n}\n\n// TODO: Update to use websocket\nexport function useSelectedBaseCurrencyBalances() {\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const { market } = useMarket();\n  const [accountInfo, loaded] = useAccountInfo(baseCurrencyAccount?.pubkey);\n  if (!market || !baseCurrencyAccount || !loaded || !accountInfo) {\n    return null;\n  }\n  if (market.baseMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\n    return accountInfo?.lamports / 1e9 ?? 0;\n  }\n  return market.baseSplSizeToNumber(\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\n  );\n}\n\nexport function useOpenOrders() {\n  const { market, marketName } = useMarket();\n  const openOrdersAccount = useSelectedOpenOrdersAccount();\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\n  if (!market || !openOrdersAccount || !bidOrderbook || !askOrderbook) {\n    return null;\n  }\n  return market\n    .filterForOpenOrders(bidOrderbook, askOrderbook, [openOrdersAccount])\n    .map((order) => ({ ...order, marketName, market }));\n}\n\nexport function useTrades(limit = 100) {\n  const trades = _useUnfilteredTrades(limit);\n  if (!trades) {\n    return null;\n  }\n  // Until partial fills are each given their own fill, use maker fills\n  return trades\n    .filter(({ eventFlags }) => eventFlags.maker)\n    .map((trade) => ({\n      ...trade,\n      side: trade.side === 'buy' ? 'sell' : 'buy',\n    }));\n}\n\nexport function useFeeDiscountKeys(): [{\n  pubkey: PublicKey;\n  feeTier: number;\n  balance: number;\n  mint: PublicKey;\n}[] | null | undefined, boolean] {\n  const { market } = useMarket();\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getFeeDiscountKeys() {\n    if (!connected) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    return await market.findFeeDiscountKeys(connection, wallet.publicKey);\n  }\n  return useAsyncData(\n    getFeeDiscountKeys,\n    tuple('getFeeDiscountKeys', wallet, market, connected),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useFills(limit = 100) {\n  const { marketName } = useMarket();\n  const fills = _useUnfilteredTrades(limit);\n  const [openOrdersAccounts] = useOpenOrdersAccounts();\n  if (!openOrdersAccounts || openOrdersAccounts.length === 0) {\n    return null;\n  }\n  if (!fills) {\n    return null;\n  }\n  return fills\n    .filter((fill) =>\n      openOrdersAccounts.some((openOrdersAccount) =>\n        fill.openOrders.equals(openOrdersAccount.publicKey),\n      ),\n    )\n    .map((fill) => ({ ...fill, marketName }));\n}\n\n// TODO: Update to use websocket\nexport function useFillsForAllMarkets(limit = 100) {\n  const { connected, wallet } = useWallet();\n\n  const connection = useConnection();\n  // todo: add custom markets\n  const allMarkets = useAllMarkets([]);\n\n  async function getFillsForAllMarkets() {\n    let fills: Trade[] = [];\n    if (!connected) {\n      return fills;\n    }\n\n    let marketData;\n    for (marketData of allMarkets) {\n      const { market, marketName } = marketData;\n      if (!market) {\n        return fills;\n      }\n      const openOrdersAccounts = await market.findOpenOrdersAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n      const openOrdersAccount = openOrdersAccounts && openOrdersAccounts[0];\n      if (!openOrdersAccount) {\n        return fills;\n      }\n      const eventQueueData = await connection.getAccountInfo(\n        market && market._decoded.eventQueue,\n      );\n      let data = eventQueueData?.data;\n      if (!data) {\n        return fills;\n      }\n      const events = decodeEventQueue(data, limit);\n      const fillsForMarket: Trade[] = events\n        .filter(\n          (event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0),\n        )\n        .map(market.parseFillEvent.bind(market));\n      const ownFillsForMarket = fillsForMarket\n        .filter((fill) => fill.openOrders.equals(openOrdersAccount.publicKey))\n        .map((fill) => ({ ...fill, marketName }));\n      fills = fills.concat(ownFillsForMarket);\n    }\n\n    console.log(JSON.stringify(fills));\n    return fills;\n  }\n\n  return useAsyncData(\n    getFillsForAllMarkets,\n    tuple('getFillsForAllMarkets', connected, connection, allMarkets, wallet),\n    { refreshInterval: _FAST_REFRESH_INTERVAL },\n  );\n}\n\nexport function useAllOpenOrdersAccounts() {\n  const {wallet, connected} = useWallet();\n  const connection = useConnection();\n  const {customMarkets} = useMarket();\n  const marketInfos = getMarketInfos(customMarkets);\n  const programIds = [\n    ...new Set(marketInfos.map(info => info.programId.toBase58()))\n  ].map(stringProgramId => new PublicKey(stringProgramId));\n\n  const getAllOpenOrdersAccounts = async () => {\n    if (!connected) {\n      return [];\n    }\n    return (await Promise.all(\n      programIds.map(programId => OpenOrders.findForOwner(connection, wallet.publicKey, programId)))\n    ).flat()\n  }\n  return useAsyncData(\n    getAllOpenOrdersAccounts,\n    tuple(\n      'getAllOpenOrdersAccounts',\n      connection,\n      connected,\n      wallet?.publicKey?.toBase58(),\n      customMarkets.length,\n      (programIds || []).length,\n    ),\n    {refreshInterval: _SLOW_REFRESH_INTERVAL}\n  )\n}\n\nexport function useAllOpenOrdersBalances() {\n  const [\n    openOrdersAccounts,\n    loadedOpenOrdersAccounts\n  ] = useAllOpenOrdersAccounts();\n  const [mintInfos, mintInfosConnected] = useMintInfos();\n  const {customMarkets} = useMarket();\n  const [allMarkets] = useAllMarkets(customMarkets);\n  if (!loadedOpenOrdersAccounts || !mintInfosConnected) {\n    return {};\n  }\n\n  const marketsByAddress = Object.fromEntries((allMarkets || []).map(m => [m.market.address.toBase58(), m]))\n  const openOrdersBalances: {[mint: string]: { market: PublicKey; free: number; total: number; }[] } = {};\n  for (let account of (openOrdersAccounts || [])) {\n    const marketInfo = marketsByAddress[account.market.toBase58()];\n    const baseMint = marketInfo.market.baseMintAddress.toBase58();\n    const quoteMint = marketInfo.market.quoteMintAddress.toBase58();\n    if (!(baseMint in openOrdersBalances)) {\n      openOrdersBalances[baseMint] = [];\n    }\n    if (!(quoteMint in openOrdersBalances)) {\n      openOrdersBalances[quoteMint] = [];\n    }\n\n    const baseMintInfo = mintInfos && mintInfos[baseMint]\n    const baseFree = divideBnToNumber(\n      new BN(account.baseTokenFree),\n      getTokenMultiplierFromDecimals(baseMintInfo?.decimals || 0.)\n    );\n    const baseTotal = divideBnToNumber(\n      new BN(account.baseTokenTotal),\n      getTokenMultiplierFromDecimals(baseMintInfo?.decimals || 0.)\n    );\n    const quoteMintInfo = mintInfos && mintInfos[quoteMint]\n    const quoteFree = divideBnToNumber(\n      new BN(account.quoteTokenFree),\n      getTokenMultiplierFromDecimals(quoteMintInfo?.decimals || 0.)\n    );\n    const quoteTotal = divideBnToNumber(\n      new BN(account.quoteTokenTotal),\n      getTokenMultiplierFromDecimals(quoteMintInfo?.decimals || 0.)\n    );\n\n    openOrdersBalances[baseMint].push({\n      market: marketInfo.market.publicKey,\n      free: baseFree,\n      total: baseTotal,\n    });\n    openOrdersBalances[quoteMint].push({\n      market: marketInfo.market.publicKey,\n      free: quoteFree,\n      total: quoteTotal,\n    });\n  }\n  return openOrdersBalances\n}\n\nexport function useAllOpenOrders(): {\n  openOrders: { orders: Order[]; marketAddress: string; }[] | null | undefined;\n  loaded: boolean,\n  refreshOpenOrders: () => void,\n} {\n  const connection = useConnection();\n  const { connected } = useWallet();\n  const [openOrdersAccounts, openOrdersAccountsConnected] = useAllOpenOrdersAccounts();\n  const { customMarkets } = useMarket();\n  const [marketInfos, marketInfosConnected] = useAllMarkets(customMarkets);\n  const openOrdersAccountsByAddress: {[marketAddress: string]: OpenOrders[]} = {}\n  for (let account of (openOrdersAccounts || [])) {\n    const marketsAddr = account.market.toBase58()\n    if (!(marketsAddr in openOrdersAccountsByAddress)) {\n      openOrdersAccountsByAddress[marketsAddr] = [];\n    }\n    openOrdersAccountsByAddress[marketsAddr].push(account);\n  }\n  const marketsByAddress = Object.fromEntries((marketInfos || []).map(info => [info.market.publicKey.toBase58(), info]))\n  const getAllOpenOrders = async () => {\n    return await Promise.all(Object.keys(openOrdersAccountsByAddress).map(async (marketAddr) => {\n      const market = marketsByAddress[marketAddr].market;\n      const [bids, asks] = await Promise.all([\n        market.loadBids(connection),\n        market.loadAsks(connection),\n      ]);\n      return {\n        orders: market.filterForOpenOrders(bids, asks, openOrdersAccountsByAddress[marketAddr]),\n        marketAddress: marketAddr,\n      };\n    }));\n  }\n  const cacheKey = tuple(\n    'getAllOpenOrders',\n    openOrdersAccountsConnected,\n    (openOrdersAccounts || []).length,\n    connection,\n    connected,\n    marketInfosConnected\n  );\n  const [openOrders, loaded] = useAsyncData(\n    getAllOpenOrders,\n    cacheKey,\n    {refreshInterval: _VERY_SLOW_REFRESH_INTERVAL}\n  );\n  return {\n    openOrders, loaded, refreshOpenOrders: () => refreshCache(cacheKey)\n  };\n}\n\nexport function useBalances(): Balances[] {\n  const baseCurrencyBalances = useSelectedBaseCurrencyBalances();\n  const quoteCurrencyBalances = useSelectedQuoteCurrencyBalances();\n  const openOrders = useSelectedOpenOrdersAccount(true);\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const baseExists =\n    openOrders && openOrders.baseTokenTotal && openOrders.baseTokenFree;\n  const quoteExists =\n    openOrders && openOrders.quoteTokenTotal && openOrders.quoteTokenFree;\n  if (\n    baseCurrency === 'UNKNOWN' ||\n    quoteCurrency === 'UNKNOWN' ||\n    !baseCurrency ||\n    !quoteCurrency\n  ) {\n    return [];\n  }\n  return [\n    {\n      market,\n      key: `${baseCurrency}${quoteCurrency}${baseCurrency}`,\n      coin: baseCurrency,\n      wallet: baseCurrencyBalances,\n      orders:\n        baseExists && market && openOrders\n          ? market.baseSplSizeToNumber(\n              openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\n            )\n          : null,\n      openOrders,\n      unsettled:\n        baseExists && market && openOrders\n          ? market.baseSplSizeToNumber(openOrders.baseTokenFree)\n          : null,\n    },\n    {\n      market,\n      key: `${quoteCurrency}${baseCurrency}${quoteCurrency}`,\n      coin: quoteCurrency,\n      wallet: quoteCurrencyBalances,\n      openOrders,\n      orders:\n        quoteExists && market && openOrders\n          ? market.quoteSplSizeToNumber(\n              openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\n            )\n          : null,\n      unsettled:\n        quoteExists && market && openOrders\n          ? market.quoteSplSizeToNumber(openOrders.quoteTokenFree)\n          : null,\n    },\n  ];\n}\n\nexport function useWalletBalancesForAllMarkets(): {mint:string, balance: number}[] {\n  const [tokenAccounts] = useTokenAccounts();\n  const { connected } = useWallet();\n  const [mintInfos, mintInfosConnected] = useMintInfos();\n\n  if (!connected || !mintInfosConnected) {\n    return [];\n  }\n\n  let balances: {[mint: string]: number} = {};\n  for (let account of (tokenAccounts || [])) {\n    if (!account.account) {\n      continue;\n    }\n    let parsedAccount;\n    if (account.effectiveMint.equals(WRAPPED_SOL_MINT)) {\n      parsedAccount = {\n        mint: WRAPPED_SOL_MINT,\n        owner: account.pubkey,\n        amount: account.account.lamports\n      }\n    } else {\n      parsedAccount = parseTokenAccountData(account.account.data);\n    }\n    if (!(parsedAccount.mint.toBase58() in balances)) {\n      balances[parsedAccount.mint.toBase58()] = 0.\n    }\n    const mintInfo = mintInfos && mintInfos[parsedAccount.mint.toBase58()]\n    const additionalAmount = divideBnToNumber(\n      new BN(parsedAccount.amount),\n      getTokenMultiplierFromDecimals(mintInfo?.decimals || 0.)\n    );\n    balances[parsedAccount.mint.toBase58()] += additionalAmount;\n  }\n  return Object.entries(balances).map(([mint, balance]) => { return {mint, balance} });\n}\n\nexport function useUnmigratedDeprecatedMarkets() {\n  const connection = useConnection();\n  const { accounts } = useUnmigratedOpenOrdersAccounts();\n  const marketsList =\n    accounts &&\n    Array.from(new Set(accounts.map((openOrders) => openOrders.market)));\n  const deps = marketsList && marketsList.map((m) => m.toBase58());\n\n  const useUnmigratedDeprecatedMarketsInner = async () => {\n    if (!marketsList) {\n      return null;\n    }\n    const getMarket = async (address) => {\n      const marketInfo = USE_MARKETS.find((market) =>\n        market.address.equals(address),\n      );\n      if (!marketInfo) {\n        console.log('Failed loading market');\n        notify({\n          message: 'Error loading market',\n          type: 'error',\n        });\n        return null;\n      }\n      try {\n        console.log('Loading market', marketInfo.name);\n        // NOTE: Should this just be cached by (connection, marketInfo.address, marketInfo.programId)?\n        return await Market.load(\n          connection,\n          marketInfo.address,\n          {},\n          marketInfo.programId,\n        );\n      } catch (e) {\n        console.log('Failed loading market', marketInfo.name, e);\n        notify({\n          message: 'Error loading market',\n          description: e.message,\n          type: 'error',\n        });\n        return null;\n      }\n    };\n    return (await Promise.all(marketsList.map(getMarket))).filter((x) => x);\n  };\n  const [markets] = useAsyncData(\n    useUnmigratedDeprecatedMarketsInner,\n    tuple(\n      'useUnmigratedDeprecatedMarketsInner',\n      connection,\n      deps && deps.toString(),\n    ),\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\n  );\n  if (!markets) {\n    return null;\n  }\n  return markets.map((market) => ({\n    market,\n    openOrdersList: accounts?.filter((openOrders) =>\n      market && openOrders.market.equals(market.address),\n    ),\n  }));\n}\n\nexport function useGetOpenOrdersForDeprecatedMarkets(): {\n  openOrders: OrderWithMarketAndMarketName[] | null | undefined;\n  loaded: boolean;\n  refreshOpenOrders: () => void;\n} {\n  const { connected, wallet } = useWallet();\n  const [customMarkets] = useLocalStorageState<CustomMarketInfo[]>('customMarkets', []);\n  const connection = useConnection();\n  const marketsAndOrders = useUnmigratedDeprecatedMarkets();\n  const marketsList =\n    marketsAndOrders && marketsAndOrders.map(({ market }) => market);\n\n  // This isn't quite right: open order balances could change\n  const deps =\n    marketsList && marketsList.filter((market): market is Market => !!market).map((market) => market.address.toBase58());\n\n  async function getOpenOrdersForDeprecatedMarkets() {\n    if (!connected) {\n      return null;\n    }\n    if (!marketsList) {\n      return null;\n    }\n    console.log('refreshing getOpenOrdersForDeprecatedMarkets');\n    const getOrders = async (market: Market | null) => {\n      if (!market) {\n        return null;\n      }\n      const { marketName } = getMarketDetails(market, customMarkets);\n      try {\n        console.log('Fetching open orders for', marketName);\n        // Can do better than this, we have the open orders accounts already\n        return (\n          await market.loadOrdersForOwner(connection, wallet.publicKey)\n        ).map((order) => ({ marketName, market, ...order }));\n      } catch (e) {\n        console.log('Failed loading open orders', market.address.toBase58(), e);\n        notify({\n          message: `Error loading open orders for deprecated ${marketName}`,\n          description: e.message,\n          type: 'error',\n        });\n        return null;\n      }\n    };\n    return (await Promise.all(marketsList.map(getOrders))).filter(\n        (x): x is OrderWithMarketAndMarketName[] => !!x\n    ).flat();\n  }\n\n  const cacheKey = tuple(\n    'getOpenOrdersForDeprecatedMarkets',\n    connected,\n    connection,\n    wallet,\n    deps && deps.toString(),\n  );\n  const [openOrders, loaded] = useAsyncData(\n    getOpenOrdersForDeprecatedMarkets,\n    cacheKey,\n    {\n      refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\n    },\n  );\n  console.log('openOrders', openOrders);\n  return {\n    openOrders,\n    loaded,\n    refreshOpenOrders: () => refreshCache(cacheKey),\n  };\n}\n\nexport function useBalancesForDeprecatedMarkets() {\n  const markets = useUnmigratedDeprecatedMarkets();\n  const [customMarkets] = useLocalStorageState<CustomMarketInfo[]>('customMarkets', []);\n  if (!markets) {\n    return null;\n  }\n\n  const openOrderAccountBalances: DeprecatedOpenOrdersBalances[] = [];\n  markets.forEach(({ market, openOrdersList }) => {\n    const { baseCurrency, quoteCurrency, marketName } = getMarketDetails(\n      market,\n      customMarkets,\n    );\n    if (!baseCurrency || !quoteCurrency || !market) {\n      return;\n    }\n    (openOrdersList || []).forEach((openOrders) => {\n      const inOrdersBase =\n        openOrders?.baseTokenTotal &&\n        openOrders?.baseTokenFree &&\n        market.baseSplSizeToNumber(\n          openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\n        );\n      const inOrdersQuote =\n        openOrders?.quoteTokenTotal &&\n        openOrders?.quoteTokenFree &&\n        market.baseSplSizeToNumber(\n          openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\n        );\n      const unsettledBase =\n        openOrders?.baseTokenFree &&\n        market.baseSplSizeToNumber(openOrders.baseTokenFree);\n      const unsettledQuote =\n        openOrders?.quoteTokenFree &&\n        market.baseSplSizeToNumber(openOrders.quoteTokenFree);\n\n      openOrderAccountBalances.push({\n        marketName,\n        market,\n        coin: baseCurrency,\n        key: `${marketName}${baseCurrency}`,\n        orders: inOrdersBase,\n        unsettled: unsettledBase,\n        openOrders,\n      });\n      openOrderAccountBalances.push({\n        marketName,\n        market,\n        coin: quoteCurrency,\n        key: `${marketName}${quoteCurrency}`,\n        orders: inOrdersQuote,\n        unsettled: unsettledQuote,\n        openOrders,\n      });\n    });\n  });\n  return openOrderAccountBalances;\n}\n\nexport function getMarketInfos(customMarkets: CustomMarketInfo[]): MarketInfo[] {\n  const customMarketsInfo = customMarkets.map((m) => ({\n    ...m,\n    address: new PublicKey(m.address),\n    programId: new PublicKey(m.programId),\n    deprecated: false,\n  }));\n\n  return [...customMarketsInfo, ...USE_MARKETS];\n}\n\nexport function useMarketInfos() {\n  const { customMarkets } = useMarket();\n  return getMarketInfos(customMarkets);\n}\n\n/**\n * If selling, choose min tick size. If buying choose a price\n * s.t. given the state of the orderbook, the order will spend\n * `cost` cost currency.\n *\n * @param orderbook serum Orderbook object\n * @param cost quantity to spend. Base currency if selling,\n *  quote currency if buying.\n * @param tickSizeDecimals size of price increment of the market\n */\nexport function getMarketOrderPrice(\n  orderbook: Orderbook,\n  cost: number,\n  tickSizeDecimals?: number,\n) {\n  if (orderbook.isBids) {\n    return orderbook.market.tickSize;\n  }\n  let spentCost = 0.;\n  let price, sizeAtLevel, costAtLevel: number;\n  const asks = orderbook.getL2(1000);\n  for ([price, sizeAtLevel] of asks) {\n    costAtLevel = price * sizeAtLevel;\n    if (spentCost + costAtLevel > cost) {\n      break;\n    }\n    spentCost += costAtLevel;\n  }\n  const sendPrice = Math.min(price * 1.02, asks[0][0] * 1.05);\n  let formattedPrice;\n  if (tickSizeDecimals) {\n    formattedPrice = floorToDecimal(sendPrice, tickSizeDecimals);\n  } else {\n    formattedPrice = sendPrice;\n  }\n  return formattedPrice;\n}\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\nhtml,body{\n  background: #11161D;\n}\ninput[type=number]::-webkit-inner-spin-button {\n  opacity: 0;\n}\ninput[type=number]:hover::-webkit-inner-spin-button,\ninput[type=number]:focus::-webkit-inner-spin-button {\n  opacity: 0.25;\n}\n/* width */\n::-webkit-scrollbar {\n  width: 15px;\n}\n/* Track */\n::-webkit-scrollbar-track {\n  background: #2d313c;\n}\n/* Handle */\n::-webkit-scrollbar-thumb {\n  background: #5b5f67;\n}\n/* Handle on hover */\n::-webkit-scrollbar-thumb:hover {\n  background: #5b5f67;\n}\n.ant-slider-track, .ant-slider:hover .ant-slider-track {\n  background-color: #2abdd2;\n  opacity: 0.75;\n}\n.ant-slider-track,\n.ant-slider ant-slider-track:hover {\n  background-color: #2abdd2;\n  opacity: 0.75;\n}\n.ant-slider-dot-active,\n.ant-slider-handle,\n.ant-slider-handle-click-focused,\n.ant-slider:hover .ant-slider-handle:not(.ant-tooltip-open)  {\n  border: 2px solid #2abdd2; \n}\n.ant-table-tbody > tr.ant-table-row:hover > td {\n  background: #273043;\n}\n.ant-table-tbody > tr > td {\n  border-bottom: 8px solid #1A2029;\n}\n.ant-table-container table > thead > tr:first-child th {\n  border-bottom: none;\n}\n.ant-divider-horizontal.ant-divider-with-text::before, .ant-divider-horizontal.ant-divider-with-text::after {\n  border-top: 1px solid #434a59 !important;\n}\n.ant-layout {\n    background: #11161D\n  }\n  .ant-table {\n    background: #212734;\n  }\n  .ant-table-thead > tr > th {\n    background: #1A2029;\n  }\n.ant-select-item-option-content {\n  img {\n    margin-right: 4px;\n  }\n}\n.ant-modal-content {\n  background-color: #212734;\n}\n\n@-webkit-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n@-moz-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n@-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n.flash {\n  -moz-animation: highlight 0.5s ease 0s 1 alternate ;\n  -webkit-animation: highlight 0.5s ease 0s 1 alternate;\n  animation: highlight 0.5s ease 0s 1 alternate;\n}`;\n","import React, { Component } from 'react';\nimport { Typography } from 'antd';\n\nconst { Title } = Typography;\n\nexport default class ErrorBoundary extends Component {\n  state = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div>\n          <div>\n            <Title level={2}>Something went wrong.</Title>\n            <Title level={4}>Please try again later.</Title>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","import { useRef, useEffect } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef<() => void>();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current && savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  margin: 5px;\n  padding: 20px;\n  background-color: #1a2029;\n`;\n\nexport default function FloatingElement({ style, children }) {\n  return <Wrapper style={{ ...style }}>{children}</Wrapper>;\n}\n","import { Col, Row } from 'antd';\nimport React, { useRef, useEffect, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useMarket, useOrderbook, useMarkPrice } from '../utils/markets';\nimport { isEqual, getDecimalCount } from '../utils/utils';\nimport { useInterval } from '../utils/useInterval';\nimport FloatingElement from './layout/FloatingElement';\nimport usePrevious from '../utils/usePrevious';\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\n\nconst SizeTitle = styled(Row)`\n  padding: 20px 0 14px;\n  color: #434a59;\n`;\n\nconst MarkPriceTitle = styled(Row)`\n  padding: 20px 0 14px;\n  font-weight: 700;\n`;\n\nconst Line = styled.div`\n  text-align: right;\n  float: right;\n  height: 100%;\n  ${(props) =>\n    props['data-width'] &&\n    css`\n      width: ${props['data-width']};\n    `}\n  ${(props) =>\n    props['data-bgcolor'] &&\n    css`\n      background-color: ${props['data-bgcolor']};\n    `}\n`;\n\nconst Price = styled.div`\n  position: absolute;\n  right: 5px;\n  color: white;\n`;\n\nexport default function Orderbook({ smallScreen, depth = 7, onPrice, onSize }) {\n  const markPrice = useMarkPrice();\n  const [orderbook] = useOrderbook();\n  const { baseCurrency, quoteCurrency } = useMarket();\n\n  const currentOrderbookData = useRef(null);\n  const lastOrderbookData = useRef(null);\n\n  const [orderbookData, setOrderbookData] = useState(null);\n\n  useInterval(() => {\n    if (\n      !currentOrderbookData.current ||\n      JSON.stringify(currentOrderbookData.current) !==\n        JSON.stringify(lastOrderbookData.current)\n    ) {\n      let bids = orderbook?.bids || [];\n      let asks = orderbook?.asks || [];\n\n      let sum = (total, [, size], index) =>\n        index < depth ? total + size : total;\n      let totalSize = bids.reduce(sum, 0) + asks.reduce(sum, 0);\n\n      let bidsToDisplay = getCumulativeOrderbookSide(bids, totalSize, false);\n      let asksToDisplay = getCumulativeOrderbookSide(asks, totalSize, true);\n\n      currentOrderbookData.current = {\n        bids: orderbook?.bids,\n        asks: orderbook?.asks,\n      };\n\n      setOrderbookData({ bids: bidsToDisplay, asks: asksToDisplay });\n    }\n  }, 250);\n\n  useEffect(() => {\n    lastOrderbookData.current = {\n      bids: orderbook?.bids,\n      asks: orderbook?.asks,\n    };\n  }, [orderbook]);\n\n  function getCumulativeOrderbookSide(orders, totalSize, backwards = false) {\n    let cumulative = orders\n      .slice(0, depth)\n      .reduce((cumulative, [price, size], i) => {\n        const cumulativeSize = (cumulative[i - 1]?.cumulativeSize || 0) + size;\n        cumulative.push({\n          price,\n          size,\n          cumulativeSize,\n          sizePercent: Math.round((cumulativeSize / (totalSize || 1)) * 100),\n        });\n        return cumulative;\n      }, []);\n    if (backwards) {\n      cumulative = cumulative.reverse();\n    }\n    return cumulative;\n  }\n\n  return (\n    <FloatingElement\n      style={\n        smallScreen ? { flex: 1 } : { height: '500px', overflow: 'hidden' }\n      }\n    >\n      <Title>Orderbook</Title>\n      <SizeTitle>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          Size ({baseCurrency})\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          Price ({quoteCurrency})\n        </Col>\n      </SizeTitle>\n      {orderbookData?.asks.map(({ price, size, sizePercent }) => (\n        <OrderbookRow\n          key={price + ''}\n          price={price}\n          size={size}\n          side={'sell'}\n          sizePercent={sizePercent}\n          onPriceClick={() => onPrice(price)}\n          onSizeClick={() => onSize(size)}\n        />\n      ))}\n      <MarkPriceComponent markPrice={markPrice} />\n      {orderbookData?.bids.map(({ price, size, sizePercent }) => (\n        <OrderbookRow\n          key={price + ''}\n          price={price}\n          size={size}\n          side={'buy'}\n          sizePercent={sizePercent}\n          onPriceClick={() => onPrice(price)}\n          onSizeClick={() => onSize(size)}\n        />\n      ))}\n    </FloatingElement>\n  );\n}\n\nconst OrderbookRow = React.memo(\n  ({ side, price, size, sizePercent, onSizeClick, onPriceClick }) => {\n    const element = useRef();\n\n    const { market } = useMarket();\n\n    useEffect(() => {\n      // eslint-disable-next-line\n      !element.current?.classList.contains('flash') &&\n        element.current?.classList.add('flash');\n      const id = setTimeout(\n        () =>\n          element.current?.classList.contains('flash') &&\n          element.current?.classList.remove('flash'),\n        250,\n      );\n      return () => clearTimeout(id);\n    }, [price, size]);\n\n    let formattedSize =\n      market?.minOrderSize && !isNaN(size)\n        ? Number(size).toFixed(getDecimalCount(market.minOrderSize) + 1)\n        : size;\n\n    let formattedPrice =\n      market?.tickSize && !isNaN(price)\n        ? Number(price).toFixed(getDecimalCount(market.tickSize) + 1)\n        : price;\n\n    return (\n      <Row ref={element} style={{ marginBottom: 1 }} onClick={onSizeClick}>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          {formattedSize}\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          <Line\n            data-width={sizePercent + '%'}\n            data-bgcolor={\n              side === 'buy'\n                ? 'rgba(65, 199, 122, 0.6)'\n                : 'rgba(242, 60, 105, 0.6)'\n            }\n          />\n          <Price onClick={onPriceClick}>{formattedPrice}</Price>\n        </Col>\n      </Row>\n    );\n  },\n  (prevProps, nextProps) =>\n    isEqual(prevProps, nextProps, ['price', 'size', 'sizePercent']),\n);\n\nconst MarkPriceComponent = React.memo(\n  ({ markPrice }) => {\n    const { market } = useMarket();\n    const previousMarkPrice = usePrevious(markPrice);\n\n    let markPriceColor =\n      markPrice > previousMarkPrice\n        ? '#41C77A'\n        : markPrice < previousMarkPrice\n        ? '#F23B69'\n        : 'white';\n\n    let formattedMarkPrice =\n      markPrice &&\n      market?.tickSize &&\n      markPrice.toFixed(getDecimalCount(market.tickSize));\n\n    return (\n      <MarkPriceTitle justify=\"center\">\n        <Col style={{ color: markPriceColor }}>\n          {markPrice > previousMarkPrice && (\n            <ArrowUpOutlined style={{ marginRight: 5 }} />\n          )}\n          {markPrice < previousMarkPrice && (\n            <ArrowDownOutlined style={{ marginRight: 5 }} />\n          )}\n          {formattedMarkPrice || '----'}\n        </Col>\n      </MarkPriceTitle>\n    );\n  },\n  (prevProps, nextProps) => isEqual(prevProps, nextProps, ['markPrice']),\n);\n","import { useEffect, useRef } from 'react';\n\nexport default function usePrevious(value) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef();\n\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n\n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\n","import React from 'react';\nimport { ConfigProvider, Table } from 'antd';\n\nexport default function DataTable({\n  dataSource,\n  columns,\n  emptyLabel = 'No data',\n  pagination = false,\n  loading = false,\n  pageSize = 10,\n}) {\n  const customizeRenderEmpty = () => (\n    <div\n      style={{\n        padding: '20px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      {emptyLabel}\n    </div>\n  );\n\n  return (\n    <ConfigProvider renderEmpty={customizeRenderEmpty}>\n      <Table\n        dataSource={dataSource}\n        columns={columns}\n        pagination={pagination ? { pagination: true, pageSize } : false}\n        loading={loading}\n      />\n    </ConfigProvider>\n  );\n}\n","import { Button } from 'antd';\nimport React from 'react';\nimport {\n  useTokenAccounts,\n  getSelectedTokenAccountForMint,\n} from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\nimport { useSendConnection } from '../../utils/connection';\nimport { useWallet } from '../../utils/wallet';\nimport { settleFunds } from '../../utils/send';\nimport { notify } from '../../utils/notifications';\n\nexport default function BalancesTable({\n  balances,\n  showMarket,\n  hideWalletBalance,\n  onSettleSuccess,\n}) {\n  const [accounts] = useTokenAccounts();\n  const connection = useSendConnection();\n  const { wallet } = useWallet();\n\n  async function onSettleFunds(market, openOrders) {\n    try {\n      await settleFunds({\n        market,\n        openOrders,\n        connection,\n        wallet,\n        baseCurrencyAccount: getSelectedTokenAccountForMint(\n          accounts,\n          market?.baseMintAddress,\n        ),\n        quoteCurrencyAccount: getSelectedTokenAccountForMint(\n          accounts,\n          market?.quoteMintAddress,\n        ),\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    }\n    onSettleSuccess && onSettleSuccess();\n  }\n\n  const columns = [\n    showMarket\n      ? {\n          title: 'Market',\n          dataIndex: 'marketName',\n          key: 'marketName',\n        }\n      : null,\n    {\n      title: 'Coin',\n      dataIndex: 'coin',\n      key: 'coin',\n    },\n    hideWalletBalance\n      ? null\n      : {\n          title: 'Wallet Balance',\n          dataIndex: 'wallet',\n          key: 'wallet',\n        },\n    {\n      title: 'Orders',\n      dataIndex: 'orders',\n      key: 'orders',\n    },\n    {\n      title: 'Unsettled',\n      dataIndex: 'unsettled',\n      key: 'unsettled',\n    },\n    {\n      key: 'action',\n      render: ({ market, openOrders, marketName }) => (\n        <div style={{ textAlign: 'right' }}>\n          <Button\n            ghost\n            style={{ marginRight: 12 }}\n            onClick={() => onSettleFunds(market, openOrders)}\n          >\n            Settle {marketName}\n          </Button>\n        </div>\n      ),\n    },\n  ].filter((x) => x);\n  return (\n    <DataTable\n      emptyLabel=\"No balances\"\n      dataSource={balances}\n      columns={columns}\n      pagination={false}\n    />\n  );\n}\n","import React, {useState} from 'react';\nimport DataTable from '../layout/DataTable';\n\nimport styled from 'styled-components';\nimport {Button, Col, Row, Tag} from 'antd';\nimport {cancelOrder} from '../../utils/send';\nimport {useWallet} from '../../utils/wallet';\nimport {useSendConnection} from '../../utils/connection';\nimport {notify} from '../../utils/notifications';\nimport {DeleteOutlined} from '@ant-design/icons';\nimport {OrderWithMarketAndMarketName} from \"../../utils/types\";\n\nconst CancelButton = styled(Button)`\n  color: #f23b69;\n  border: 1px solid #f23b69;\n`;\n\nexport default function OpenOrderTable({ openOrders, onCancelSuccess, pageSize, loading, marketFilter } : {\n  openOrders: OrderWithMarketAndMarketName[] | null | undefined;\n  onCancelSuccess?: () => void;\n  pageSize?: number;\n  loading?: boolean;\n  marketFilter?: boolean;\n}) {\n  let { wallet } = useWallet();\n  let connection = useSendConnection();\n\n  const [cancelId, setCancelId] = useState(null);\n\n  async function cancel(order) {\n    setCancelId(order?.orderId);\n    try {\n      await cancelOrder({\n        order,\n        market: order.market,\n        connection,\n        wallet,\n      });\n    } catch (e) {\n      notify({\n        message: 'Error cancelling order',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    } finally {\n      setCancelId(null);\n    }\n    onCancelSuccess && onCancelSuccess();\n  }\n\n  const marketFilters = [\n    ...new Set((openOrders || []).map(orderInfos => orderInfos.marketName))\n  ].map(marketName => {return {text: marketName, value: marketName}});\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'marketName',\n      key: 'marketName',\n      filters: (marketFilter ? marketFilters : undefined),\n      onFilter: (value, record) => record.marketName.indexOf(value) === 0,\n    },\n    {\n      title: 'Side',\n      dataIndex: 'side',\n      key: 'side',\n      render: (side) => (\n        <Tag\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\n          style={{ fontWeight: 700 }}\n        >\n          {side.charAt(0).toUpperCase() + side.slice(1)}\n        </Tag>\n      ),\n      sorter: (a, b) => {\n        if (a.side === b.side) {\n          return 0.\n        } else if (a.side === 'buy') {\n          return 1.\n        } else {\n          return -1.\n        }\n      },\n      showSorterTooltip: false,\n    },\n    {\n      title: 'Size',\n      dataIndex: 'size',\n      key: 'size',\n      sorter: (a, b) => b.size - a.size,\n      showSorterTooltip: false,\n    },\n    {\n      title: 'Price',\n      dataIndex: 'price',\n      key: 'price',\n      sorter: (a, b) => b.price - a.price,\n      showSorterTooltip: false,\n    },\n    {\n      key: 'orderId',\n      render: (order) => (\n        <div style={{ textAlign: 'right' }}>\n          <CancelButton\n            icon={<DeleteOutlined />}\n            onClick={() => cancel(order)}\n            loading={cancelId + '' === order?.orderId + ''}\n          >\n            Cancel\n          </CancelButton>\n        </div>\n      ),\n    },\n  ];\n  const dataSource = (openOrders || []).map((order) =>\n    Object.assign(order, { key: order.orderId }),\n  );\n\n  return (\n    <Row>\n      <Col span={24}>\n        <DataTable\n          emptyLabel=\"No open orders\"\n          dataSource={dataSource}\n          columns={columns}\n          pagination={true}\n          pageSize={pageSize ? pageSize : 5}\n          loading={loading !== undefined && loading}\n        />\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react';\nimport { Row, Col, Tag } from 'antd';\nimport { useFills, useMarket } from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\n\nexport default function FillsTable() {\n  const fills = useFills();\n\n  const { quoteCurrency } = useMarket();\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'marketName',\n      key: 'marketName',\n    },\n    {\n      title: 'Side',\n      dataIndex: 'side',\n      key: 'side',\n      render: (side) => (\n        <Tag\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\n          style={{ fontWeight: 700 }}\n        >\n          {side.charAt(0).toUpperCase() + side.slice(1)}\n        </Tag>\n      ),\n    },\n    {\n      title: `Size`,\n      dataIndex: 'size',\n      key: 'size',\n    },\n    {\n      title: `Price`,\n      dataIndex: 'price',\n      key: 'price',\n    },\n    {\n      title: `Liquidity`,\n      dataIndex: 'liquidity',\n      key: 'liquidity',\n    },\n    {\n      title: quoteCurrency ? `Fees (${quoteCurrency})` : 'Fees',\n      dataIndex: 'feeCost',\n      key: 'feeCost',\n    },\n  ];\n\n  const dataSource = (fills || []).map((fill) => ({\n    ...fill,\n    key: `${fill.orderId}${fill.side}`,\n    liquidity: fill.eventFlags.maker ? 'Maker' : 'Taker',\n  }));\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <DataTable\n            dataSource={dataSource}\n            columns={columns}\n            pagination={true}\n            pageSize={5}\n            emptyLabel=\"No fills\"\n          />\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React from 'react';\nimport { Row, Col, Typography, Tag } from 'antd';\nimport { useFeeDiscountKeys } from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\nimport { TokenInstructions, getFeeRates } from '@project-serum/serum';\nimport { percentFormat } from '../../utils/utils';\n\nexport default function FeesTable() {\n  const [feeAccounts] = useFeeDiscountKeys();\n\n  const columns = [\n    {\n      title: 'Fee Tier',\n      dataIndex: 'feeTier',\n      key: 'feeTier',\n      render: (feeTier, row) => (\n        <div style={{ display: 'flex' }}>\n          <Typography>{feeTier}</Typography>\n          {row.index === 0 ? (\n            <div style={{ marginLeft: 10 }}>\n              <Tag color={'#41C77A'} style={{ fontWeight: 700 }}>\n                Selected\n              </Tag>\n            </div>\n          ) : null}\n        </div>\n      ),\n    },\n    {\n      title: 'Taker',\n      dataIndex: 'taker',\n      key: 'taker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).taker),\n    },\n    {\n      title: 'Maker',\n      dataIndex: 'maker',\n      key: 'maker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).maker),\n    },\n    {\n      title: `Public Key`,\n      dataIndex: 'pubkey',\n      key: 'pubkey',\n      render: (pubkey) => pubkey.toBase58(),\n    },\n    {\n      title: `Balance`,\n      dataIndex: 'balance',\n      key: 'balance',\n    },\n    {\n      title: `Mint`,\n      dataIndex: 'mint',\n      key: 'mint',\n      render: (_, row) =>\n        row.mint.equals(TokenInstructions.SRM_MINT)\n          ? 'SRM'\n          : row.mint.equals(TokenInstructions.MSRM_MINT)\n          ? 'MSRM'\n          : 'UNKNOWN',\n    },\n  ];\n\n  const dataSource = (feeAccounts || []).map((account, index) => ({\n    ...account,\n    index,\n    key: account.pubkey.toBase58(),\n  }));\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <DataTable\n            dataSource={dataSource}\n            columns={columns}\n            pagination={true}\n            pageSize={5}\n            emptyLabel=\"No (M)SRM accounts\"\n          />\n        </Col>\n      </Row>\n      <Row style={{ marginTop: 8 }}>\n        <Col>\n          <Typography>\n            Holding SRM or MSRM makes you eligible for fee discounts:\n          </Typography>\n          <FeeScheduleTable />\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nfunction FeeScheduleTable() {\n  // Representation of serum-js/src/fees.ts\n  const dataSource = [\n    { feeTier: 0, taker: 0.0022, maker: -0.0003, token: '', balance: '' },\n    { feeTier: 1, taker: 0.002, maker: -0.0003, token: 'SRM', balance: 100 },\n    { feeTier: 2, taker: 0.0018, maker: -0.0003, token: 'SRM', balance: 1000 },\n    { feeTier: 3, taker: 0.0016, maker: -0.0003, token: 'SRM', balance: 10000 },\n    {\n      feeTier: 4,\n      taker: 0.0014,\n      maker: -0.0003,\n      token: 'SRM',\n      balance: 100000,\n    },\n    {\n      feeTier: 5,\n      taker: 0.0012,\n      maker: -0.0003,\n      token: 'SRM',\n      balance: 1000000,\n    },\n    { feeTier: 6, taker: 0.001, maker: -0.0005, token: 'MSRM', balance: 1 },\n  ];\n  const columns = [\n    {\n      title: 'Fee Tier',\n      dataIndex: 'feeTier',\n      key: 'feeTier',\n    },\n    {\n      title: 'Taker',\n      dataIndex: 'taker',\n      key: 'taker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).taker),\n    },\n    {\n      title: 'Maker',\n      dataIndex: 'maker',\n      key: 'maker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).maker),\n    },\n    {\n      title: 'Requirements',\n      dataIndex: 'requirements',\n      key: 'requirements',\n      render: (_, row) => (\n        <Typography>\n          {!row.balance ? 'None' : `≥ ${row.balance} ${row.token}`}\n        </Typography>\n      ),\n    },\n  ];\n  return (\n    <DataTable\n      dataSource={dataSource.map((info) => ({ ...info, key: info.feeTier }))}\n      columns={columns}\n    />\n  );\n}\n","import BalancesTable from './BalancesTable';\nimport OpenOrderTable from './OpenOrderTable';\nimport React from 'react';\nimport { Tabs, Typography } from 'antd';\nimport FillsTable from './FillsTable';\nimport FloatingElement from '../layout/FloatingElement';\nimport FeesTable from './FeesTable';\nimport { useOpenOrders, useBalances, useMarket } from '../../utils/markets';\n\nconst { Paragraph } = Typography;\nconst { TabPane } = Tabs;\n\nexport default function Index() {\n  const { market } = useMarket();\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 20 }}>\n      <Typography>\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)' }}>\n          Make sure to go to Balances and click Settle to send out your funds.\n        </Paragraph>\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)' }}>\n          To fund your wallet, <a href=\"https://www.sollet.io\">sollet.io</a>.\n          You can get SOL from FTX, Binance, BitMax, and others. You can get\n          other tokens from FTX.{' '}\n        </Paragraph>\n      </Typography>\n      <Tabs defaultActiveKey=\"orders\">\n        <TabPane tab=\"Open Orders\" key=\"orders\">\n          <OpenOrdersTab />\n        </TabPane>\n        <TabPane tab=\"Recent Trade History\" key=\"fills\">\n          <FillsTable />\n        </TabPane>\n        <TabPane tab=\"Balances\" key=\"balances\">\n          <BalancesTab />\n        </TabPane>\n        {market && market.supportsSrmFeeDiscounts ? (\n          <TabPane tab=\"Fee discounts\" key=\"fees\">\n            <FeesTable />\n          </TabPane>\n        ) : null}\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\nconst OpenOrdersTab = () => {\n  const openOrders = useOpenOrders();\n\n  return <OpenOrderTable openOrders={openOrders} />;\n};\n\nconst BalancesTab = () => {\n  const balances = useBalances();\n\n  return <BalancesTable balances={balances} />;\n};\n","import React from 'react';\nimport { Modal } from 'antd';\nimport {\n  useSelectedBaseCurrencyAccount,\n  useMarket,\n  useSelectedQuoteCurrencyAccount,\n} from '../utils/markets';\nimport { useWallet } from '../utils/wallet';\nimport Link from './Link';\n\nexport default function DepositDialog({ onClose, baseOrQuote }) {\n  const { market, baseCurrency, quoteCurrency } = useMarket();\n\n  const { providerName, providerUrl } = useWallet();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  let coinMint;\n  let account;\n  let depositCoin;\n  if (baseOrQuote === 'base') {\n    coinMint = market?.baseMintAddress;\n    account = baseCurrencyAccount;\n    depositCoin = baseCurrency;\n  } else if (baseOrQuote === 'quote') {\n    coinMint = market?.quoteMintAddress;\n    account = quoteCurrencyAccount;\n    depositCoin = quoteCurrency;\n  } else {\n    account = null;\n  }\n  if (!coinMint) {\n    return null;\n  }\n  return (\n    <Modal\n      title={depositCoin}\n      visible={!!coinMint}\n      onOk={onClose}\n      onCancel={onClose}\n    >\n      <div style={{ paddingTop: '20px' }}>\n        <p style={{ color: 'white' }}>Mint address:</p>\n        <p style={{ color: 'rgba(255,255,255,0.5)' }}>{coinMint.toBase58()}</p>\n        <div>\n          <p style={{ color: 'white' }}>SPL Deposit address:</p>\n          <p style={{ color: 'rgba(255,255,255,0.5)' }}>\n            {account ? (\n              account.pubkey.toBase58()\n            ) : (\n              <>\n                Visit{' '}\n                <Link external to={providerUrl}>\n                  {providerName}\n                </Link>{' '}\n                to create an account for this mint\n              </>\n            )}\n          </p>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport {TokenAccount} from \"../utils/types\";\nimport {useSelectedTokenAccounts} from \"../utils/markets\";\nimport {Button, Col, Select, Typography} from \"antd\";\nimport {CopyOutlined} from '@ant-design/icons';\nimport {abbreviateAddress} from \"../utils/utils\";\nimport {notify} from \"../utils/notifications\";\n\nexport default function StandaloneTokenAccountsSelect({\n  accounts,\n  mint,\n  label,\n}: {\n  accounts: TokenAccount[] | null | undefined,\n  mint: string | undefined,\n  label?: boolean\n}) {\n  const [selectedTokenAccounts, setSelectedTokenAccounts] = useSelectedTokenAccounts();\n\n  let selectedValue: string | undefined;\n  if (mint && mint in selectedTokenAccounts) {\n    selectedValue = selectedTokenAccounts[mint];\n  } else if (accounts && accounts?.length > 0) {\n    selectedValue = accounts[0].pubkey.toBase58();\n  } else {\n    selectedValue = undefined;\n  }\n\n  const setTokenAccountForCoin = (value) => {\n    if (!mint) {\n      notify({\n        message: 'Error selecting token account',\n        description: 'Mint is undefined',\n        type: 'error',\n      })\n      return;\n    }\n    const newSelectedTokenAccounts = {...selectedTokenAccounts};\n    newSelectedTokenAccounts[mint] = value;\n    setSelectedTokenAccounts(newSelectedTokenAccounts);\n  }\n\n  return (\n    <React.Fragment>\n      {label &&\n        <Col span={8}>\n          Token account:\n        </Col>\n      }\n      <Col span={label ? 13 : 21}>\n        <Select\n          style={{ width: '100%' }}\n          value={selectedValue}\n          onSelect={setTokenAccountForCoin}\n        >\n          {accounts?.map(account => (\n            <Select.Option key={account.pubkey.toBase58()} value={account.pubkey.toBase58()}>\n              <Typography.Text code>{label ? abbreviateAddress(account.pubkey, 8) : account.pubkey.toBase58()}</Typography.Text>\n            </Select.Option>)\n          )}\n        </Select>\n      </Col>\n      <Col span={2} offset={1}>\n        <Button\n          shape=\"round\"\n          icon={<CopyOutlined />}\n          size={'small'}\n          onClick={() => selectedValue && navigator.clipboard.writeText(selectedValue)}\n        />\n      </Col>\n    </React.Fragment>\n  );\n}\n","import {Button, Col, Divider, Row} from 'antd';\nimport React, {useState} from 'react';\nimport FloatingElement from './layout/FloatingElement';\nimport styled from 'styled-components';\nimport {\n  useBalances,\n  useMarket,\n  useSelectedBaseCurrencyAccount,\n  useSelectedOpenOrdersAccount,\n  useSelectedQuoteCurrencyAccount,\n  useTokenAccounts,\n} from '../utils/markets';\nimport DepositDialog from './DepositDialog';\nimport {useWallet} from '../utils/wallet';\nimport Link from './Link';\nimport {settleFunds} from '../utils/send';\nimport {useSendConnection} from '../utils/connection';\nimport {notify} from '../utils/notifications';\nimport {Balances} from \"../utils/types\";\nimport StandaloneTokenAccountsSelect from \"./StandaloneTokenAccountSelect\";\n\nconst RowBox = styled(Row)`\n  padding-bottom: 20px;\n`;\n\nconst Tip = styled.p`\n  font-size: 12px;\n  padding-top: 6px;\n`;\n\nconst ActionButton = styled(Button)`\n  color: #2abdd2;\n  background-color: #212734;\n  border-width: 0px;\n`;\n\nexport default function StandaloneBalancesDisplay() {\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const balances = useBalances();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const connection = useSendConnection();\n  const { providerUrl, providerName, wallet, connected } = useWallet();\n  const [baseOrQuote, setBaseOrQuote] = useState('');\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const [tokenAccounts] = useTokenAccounts();\n  const baseCurrencyBalances =\n    balances && balances.find((b) => b.coin === baseCurrency);\n  const quoteCurrencyBalances =\n    balances && balances.find((b) => b.coin === quoteCurrency);\n\n  async function onSettleFunds() {\n    if (!market) {\n      notify({\n        message: 'Error settling funds',\n        description: 'market is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    if (!openOrdersAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    if (!baseCurrencyAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    if (!quoteCurrencyAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error',\n      });\n      return;\n    }\n\n    try {\n      await settleFunds({\n        market,\n        openOrders: openOrdersAccount,\n        connection,\n        wallet,\n        baseCurrencyAccount,\n        quoteCurrencyAccount,\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n    }\n  }\n\n  const formattedBalances: [string | undefined, Balances | undefined, string, string | undefined][] = [\n    [baseCurrency, baseCurrencyBalances, 'base', market?.baseMintAddress.toBase58()],\n    [quoteCurrency, quoteCurrencyBalances, 'quote', market?.quoteMintAddress.toBase58()],\n  ]\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      {formattedBalances.map(([currency, balances, baseOrQuote, mint], index) => (\n        <React.Fragment key={index}>\n          <Divider style={{ borderColor: 'white' }}>{currency}</Divider>\n          {connected && (\n            <RowBox\n              align=\"middle\"\n              style={{ paddingBottom: 10 }}\n            >\n              <StandaloneTokenAccountsSelect\n                accounts={tokenAccounts?.filter(account => account.effectiveMint.toBase58() === mint)}\n                mint={mint}\n                label\n              />\n            </RowBox>\n          )}\n          <RowBox\n            align=\"middle\"\n            justify=\"space-between\"\n            style={{ paddingBottom: 12 }}\n          >\n            <Col>Wallet balance:</Col>\n            <Col>{balances && balances.wallet}</Col>\n          </RowBox>\n          <RowBox\n            align=\"middle\"\n            justify=\"space-between\"\n            style={{ paddingBottom: 12 }}\n          >\n            <Col>Unsettled balance:</Col>\n            <Col>{balances && balances.unsettled}</Col>\n          </RowBox>\n          <RowBox align=\"middle\" justify=\"space-around\">\n            <Col style={{ width: 150 }}>\n              <ActionButton\n                block\n                size=\"large\"\n                onClick={() => setBaseOrQuote(baseOrQuote)}\n              >\n                Deposit\n              </ActionButton>\n            </Col>\n            <Col style={{ width: 150 }}>\n              <ActionButton block size=\"large\" onClick={onSettleFunds}>\n                Settle\n              </ActionButton>\n            </Col>\n          </RowBox>\n          <Tip>\n            All deposits go to your{' '}\n            <Link external to={providerUrl}>\n              {providerName}\n            </Link>{' '}\n            wallet\n          </Tip>\n        </React.Fragment>\n      ))}\n      <DepositDialog\n        baseOrQuote={baseOrQuote}\n        onClose={() => setBaseOrQuote('')}\n      />\n    </FloatingElement>\n  );\n}\n","import { Button, Input, Radio, Switch, Slider } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport {\n  useSelectedBaseCurrencyBalances,\n  useSelectedQuoteCurrencyBalances,\n  useMarket,\n  useMarkPrice,\n  useSelectedOpenOrdersAccount,\n  useSelectedBaseCurrencyAccount,\n  useSelectedQuoteCurrencyAccount,\n} from '../utils/markets';\nimport { useWallet } from '../utils/wallet';\nimport { notify } from '../utils/notifications';\nimport {\n  getDecimalCount,\n  roundToDecimal,\n  floorToDecimal,\n} from '../utils/utils';\nimport { useSendConnection } from '../utils/connection';\nimport FloatingElement from './layout/FloatingElement';\nimport { placeOrder } from '../utils/send';\nimport {SwitchChangeEventHandler} from \"antd/es/switch\";\n\nconst SellButton = styled(Button)`\n  margin: 20px 0px 0px 0px;\n  background: #f23b69;\n  border-color: #f23b69;\n`;\n\nconst BuyButton = styled(Button)`\n  margin: 20px 0px 0px 0px;\n  background: #02bf76;\n  border-color: #02bf76;\n`;\n\nconst sliderMarks = {\n  0: '0%',\n  25: '25%',\n  50: '50%',\n  75: '75%',\n  100: '100%',\n};\n\nexport default function TradeForm({ style, setChangeOrderRef }: {\n  style?: any;\n  setChangeOrderRef?: (ref: ({ size, price }: {size?: number; price?: number;}) => void) => void;\n}) {\n  const [side, setSide] = useState<'buy' | 'sell'>('buy');\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const baseCurrencyBalances = useSelectedBaseCurrencyBalances();\n  const quoteCurrencyBalances = useSelectedQuoteCurrencyBalances();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const { wallet } = useWallet();\n  const sendConnection = useSendConnection();\n  const markPrice = useMarkPrice();\n\n  const [postOnly, setPostOnly] = useState(false);\n  const [ioc, setIoc] = useState(false);\n  const [baseSize, setBaseSize] = useState<number | undefined>(undefined);\n  const [quoteSize, setQuoteSize] = useState<number | undefined>(undefined);\n  const [price, setPrice] = useState<number | undefined>(undefined);\n  const [submitting, setSubmitting] = useState(false);\n  const [sizeFraction, setSizeFraction] = useState(0);\n\n  const availableQuote = openOrdersAccount && market\n    ? market.quoteSplSizeToNumber(openOrdersAccount.quoteTokenFree)\n    : 0;\n\n  let quoteBalance = (quoteCurrencyBalances || 0) + (availableQuote || 0);\n  let baseBalance = baseCurrencyBalances || 0;\n  let sizeDecimalCount =\n    market?.minOrderSize && getDecimalCount(market.minOrderSize);\n  let priceDecimalCount = market?.tickSize && getDecimalCount(market.tickSize);\n\n  useEffect(() => {\n    setChangeOrderRef && setChangeOrderRef(doChangeOrder);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setChangeOrderRef]);\n\n  useEffect(() => {\n    baseSize && price && onSliderChange(sizeFraction);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [side]);\n\n  useEffect(() => {\n    updateSizeFraction();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [price, baseSize]);\n\n  const onSetBaseSize = (baseSize: number | undefined) => {\n    setBaseSize(baseSize);\n    if (!baseSize) {\n      setQuoteSize(undefined);\n      return;\n    }\n    let usePrice = price || markPrice;\n    if (!usePrice) {\n      setQuoteSize(undefined);\n      return;\n    }\n    const rawQuoteSize = baseSize * usePrice;\n    const quoteSize =\n      baseSize && roundToDecimal(rawQuoteSize, sizeDecimalCount);\n    setQuoteSize(quoteSize);\n  };\n\n  const onSetQuoteSize = (quoteSize: number | undefined) => {\n    setQuoteSize(quoteSize);\n    if (!quoteSize) {\n      setBaseSize(undefined);\n      return;\n    }\n    let usePrice = price || markPrice;\n    if (!usePrice) {\n      setBaseSize(undefined);\n      return;\n    }\n    const rawBaseSize = quoteSize / usePrice;\n    const baseSize = quoteSize && roundToDecimal(rawBaseSize, sizeDecimalCount);\n    setBaseSize(baseSize);\n  };\n\n  const doChangeOrder = ({ size, price }: {size?: number; price?: number;}) => {\n    const formattedSize = size && roundToDecimal(size, sizeDecimalCount);\n    const formattedPrice = price && roundToDecimal(price, priceDecimalCount);\n    formattedSize && onSetBaseSize(formattedSize);\n    formattedPrice && setPrice(formattedPrice);\n  };\n\n  const updateSizeFraction = () => {\n    const rawMaxSize = side === 'buy' ? quoteBalance / (price || markPrice || 1.) : baseBalance;\n    const maxSize = floorToDecimal(rawMaxSize, sizeDecimalCount);\n    const sizeFraction = Math.min(((baseSize || 0.) / maxSize) * 100, 100);\n    setSizeFraction(sizeFraction);\n  };\n\n  const onSliderChange = (value) => {\n    if (!price && markPrice) {\n      let formattedMarkPrice: number | string = priceDecimalCount\n        ? markPrice.toFixed(priceDecimalCount)\n        : markPrice;\n      setPrice(typeof formattedMarkPrice === 'number' ? formattedMarkPrice : parseFloat(formattedMarkPrice));\n    }\n\n    let newSize;\n    if (side === 'buy') {\n      if (price || markPrice) {\n        newSize = ((quoteBalance / (price || markPrice || 1.)) * value) / 100;\n      }\n    } else {\n      newSize = (baseBalance * value) / 100;\n    }\n\n    // round down to minOrderSize increment\n    let formatted = floorToDecimal(newSize, sizeDecimalCount);\n\n    onSetBaseSize(formatted);\n  };\n\n  const postOnChange: SwitchChangeEventHandler = (checked) => {\n    if (checked) {\n      setIoc(false);\n    }\n    setPostOnly(checked);\n  };\n  const iocOnChange: SwitchChangeEventHandler = (checked) => {\n    if (checked) {\n      setPostOnly(false);\n    }\n    setIoc(checked);\n  };\n\n  async function onSubmit() {\n    if (!price) {\n      console.warn('Missing price');\n      notify({\n        message: 'Missing price',\n        type: 'error',\n      });\n      return;\n    } else if (!baseSize) {\n      console.warn('Missing size');\n      notify({\n        message: 'Missing size',\n        type: 'error',\n      });\n      return;\n    }\n\n    setSubmitting(true);\n    try {\n      await placeOrder({\n        side,\n        price,\n        size: baseSize,\n        orderType: ioc ? 'ioc' : postOnly ? 'postOnly' : 'limit',\n        market,\n        connection: sendConnection,\n        wallet,\n        baseCurrencyAccount: baseCurrencyAccount?.pubkey,\n        quoteCurrencyAccount: quoteCurrencyAccount?.pubkey,\n      });\n      setPrice(undefined);\n      onSetBaseSize(undefined);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error placing order',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <FloatingElement\n      style={{ display: 'flex', flexDirection: 'column', ...style }}\n    >\n      <div style={{ flex: 1 }}>\n        <Radio.Group\n          onChange={(e) => setSide(e.target.value)}\n          value={side}\n          buttonStyle=\"solid\"\n          style={{\n            marginBottom: 8,\n            width: '100%',\n          }}\n        >\n          <Radio.Button\n            value=\"buy\"\n            style={{\n              width: '50%',\n              textAlign: 'center',\n              background: side === 'buy' ? '#02bf76' : '',\n              borderColor: side === 'buy' ? '#02bf76' : '',\n            }}\n          >\n            BUY\n          </Radio.Button>\n          <Radio.Button\n            value=\"sell\"\n            style={{\n              width: '50%',\n              textAlign: 'center',\n              background: side === 'sell' ? '#F23B69' : '',\n              borderColor: side === 'sell' ? '#F23B69' : '',\n            }}\n          >\n            SELL\n          </Radio.Button>\n        </Radio.Group>\n        <Input\n          style={{ textAlign: 'right', paddingBottom: 8 }}\n          addonBefore={<div style={{ width: '30px' }}>Price</div>}\n          suffix={\n            <span style={{ fontSize: 10, opacity: 0.5 }}>{quoteCurrency}</span>\n          }\n          value={price}\n          type=\"number\"\n          step={market?.tickSize || 1}\n          onChange={(e) => setPrice(parseFloat(e.target.value))}\n        />\n        <Input.Group compact style={{ paddingBottom: 8 }}>\n          <Input\n            style={{ width: 'calc(50% + 30px)', textAlign: 'right' }}\n            addonBefore={<div style={{ width: '30px' }}>Size</div>}\n            suffix={\n              <span style={{ fontSize: 10, opacity: 0.5 }}>{baseCurrency}</span>\n            }\n            value={baseSize}\n            type=\"number\"\n            step={market?.minOrderSize || 1}\n            onChange={(e) => onSetBaseSize(parseFloat(e.target.value))}\n          />\n          <Input\n            style={{ width: 'calc(50% - 30px)', textAlign: 'right' }}\n            suffix={\n              <span style={{ fontSize: 10, opacity: 0.5 }}>\n                {quoteCurrency}\n              </span>\n            }\n            value={quoteSize}\n            type=\"number\"\n            step={market?.minOrderSize || 1}\n            onChange={(e) => onSetQuoteSize(parseFloat(e.target.value))}\n          />\n        </Input.Group>\n        <Slider\n          value={sizeFraction}\n          tipFormatter={(value) => `${value}%`}\n          marks={sliderMarks}\n          onChange={onSliderChange}\n        />\n        <div style={{ paddingTop: 18 }}>\n          {'POST '}\n          <Switch\n            checked={postOnly}\n            onChange={postOnChange}\n            style={{ marginRight: 40 }}\n          />\n          {'IOC '}\n          <Switch checked={ioc} onChange={iocOnChange} />\n        </div>\n      </div>\n      {side === 'buy' ? (\n        <BuyButton\n          disabled={!price || !baseSize}\n          onClick={onSubmit}\n          block\n          type=\"primary\"\n          size=\"large\"\n          loading={submitting}\n        >\n          Buy {baseCurrency}\n        </BuyButton>\n      ) : (\n        <SellButton\n          disabled={!price || !baseSize}\n          onClick={onSubmit}\n          block\n          type=\"primary\"\n          size=\"large\"\n          loading={submitting}\n        >\n          Sell {baseCurrency}\n        </SellButton>\n      )}\n    </FloatingElement>\n  );\n}\n","import { Col, Row } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useMarket, useTrades } from '../utils/markets';\nimport { getDecimalCount } from '../utils/utils';\nimport FloatingElement from './layout/FloatingElement';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\nconst SizeTitle = styled(Row)`\n  padding: 20px 0 14px;\n  color: #434a59;\n`;\n\n// TODO: Put in some scrolling\nconst TradesContainer = styled.div`\n  height: calc(100% - 75px);\n  margin-right: -20px;\n  padding-right: 5px;\n  overflow-y: scroll;\n`;\n\nexport default function PublicTrades({ smallScreen }) {\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const trades = useTrades();\n  return (\n    <FloatingElement\n      style={\n        smallScreen\n          ? { flex: 1 }\n          : {\n              marginTop: '10px',\n              minHeight: '270px',\n              height: 'calc(100vh - 710px)',\n            }\n      }\n    >\n      <Title>Recent Market trades</Title>\n      <SizeTitle>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          Size ({baseCurrency})\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          Price ({quoteCurrency}){' '}\n        </Col>\n      </SizeTitle>\n      {!!trades && (\n        <TradesContainer>\n          {trades.map((trade, i) => (\n            <Row key={i} style={{ marginBottom: 4 }}>\n              <Col span={12} style={{ textAlign: 'left' }}>\n                {market?.minOrderSize && !isNaN(trade.size)\n                  ? Number(trade.size).toFixed(\n                      getDecimalCount(market.minOrderSize),\n                    )\n                  : trade.size}\n              </Col>\n              <Col\n                span={12}\n                style={{\n                  textAlign: 'right',\n                  color: trade.side === 'buy' ? '#41C77A' : '#F23B69',\n                }}\n              >\n                {market?.tickSize && !isNaN(trade.price)\n                  ? Number(trade.price).toFixed(\n                      getDecimalCount(market.tickSize),\n                    )\n                  : trade.price}\n              </Col>\n            </Row>\n          ))}\n        </TradesContainer>\n      )}\n    </FloatingElement>\n  );\n}\n","import React from 'react';\nimport { Button } from 'antd';\nimport { LinkOutlined } from '@ant-design/icons';\n\nexport default function LinkAddress({ title, address }: {title?: undefined | any; address: string;}) {\n  return (\n    <div>\n      {title && <p style={{ color: 'white' }}>{title}</p>}\n      <Button\n        type=\"link\"\n        icon={<LinkOutlined />}\n        href={'https://explorer.solana.com/address/' + address}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {address}\n      </Button>\n    </div>\n  );\n}\n","import { Button, Divider, Spin, Typography } from 'antd';\nimport React from 'react';\nimport {\n  useGetOpenOrdersForDeprecatedMarkets,\n  useBalancesForDeprecatedMarkets,\n  useUnmigratedOpenOrdersAccounts,\n} from '../utils/markets';\nimport FloatingElement from './layout/FloatingElement';\nimport CheckOutlined from '@ant-design/icons/lib/icons/CheckOutlined';\nimport BalancesTable from './UserInfoTable/BalancesTable';\nimport OpenOrderTable from './UserInfoTable/OpenOrderTable';\nimport SyncOutlined from '@ant-design/icons/lib/icons/SyncOutlined';\n\nconst { Title } = Typography;\n\nexport default function DeprecatedMarketsInstructions({ switchToLiveMarkets }) {\n  const balances = useBalancesForDeprecatedMarkets();\n  const {\n    openOrders,\n    loaded,\n    refreshOpenOrders,\n  } = useGetOpenOrdersForDeprecatedMarkets();\n\n  const { refresh } = useUnmigratedOpenOrdersAccounts();\n  const needToCancelOrders = !openOrders || openOrders.length > 0;\n  const filteredBalances =\n    balances &&\n    balances.filter(({ orders, unsettled }) => orders > 0 || unsettled > 0);\n  const needToSettleFunds = filteredBalances && filteredBalances.length > 0;\n  return (\n    <FloatingElement>\n      <Title level={4} style={{ color: 'rgba(255, 255, 255, 1)' }}>\n        Migrate to new markets\n      </Title>\n      <Typography>\n        Serum has rolled out upgraded markets! They're faster and support fee\n        discounts based on SRM holdings.\n      </Typography>\n      <br />\n      <Typography>\n        To migrate over to the new markets, please cancel your orders and settle\n        your funds on old markets.\n      </Typography>\n      <div style={{ marginTop: 20, display: 'flex', justifyContent: 'center' }}>\n        <Button onClick={() => refresh(true)}>\n          <SyncOutlined /> Refresh data\n        </Button>\n      </div>\n      {!balances ? (\n        <Spin size=\"large\" />\n      ) : (\n        <>\n          <Divider>\n            {!needToCancelOrders && <CheckOutlined />} Cancel your orders\n          </Divider>\n          {needToCancelOrders ? (\n            loaded ? (\n              <OpenOrderTable\n                openOrders={openOrders}\n                onCancelSuccess={() => {\n                  setTimeout(() => {\n                    refresh();\n                    refreshOpenOrders();\n                  }, 1000); // Wait so that on-chain account state reflects the update\n                }}\n              />\n            ) : (\n              <Spin size=\"large\" />\n            )\n          ) : null}\n          <Divider>\n            {!needToSettleFunds && <CheckOutlined />} Settle your funds\n          </Divider>\n          {needToSettleFunds && (\n            <BalancesTable\n              balances={filteredBalances}\n              hideWalletBalance\n              showMarket\n              onSettleSuccess={() => {\n                setTimeout(refresh, 1000); // Wait so that on-chain account state reflects the update\n              }}\n            />\n          )}\n          <Divider>Switch to upgraded markets</Divider>\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\n            <Button\n              onClick={switchToLiveMarkets}\n              disabled={needToSettleFunds || needToCancelOrders}\n            >\n              Switch to new markets\n            </Button>\n          </div>\n        </>\n      )}\n    </FloatingElement>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Col, Input, Modal, Row, Typography } from 'antd';\nimport { notify } from '../utils/notifications';\nimport { isValidPublicKey } from '../utils/utils';\nimport { PublicKey } from '@solana/web3.js';\nimport { Market, MARKETS, TOKEN_MINTS } from '@project-serum/serum';\nimport { useAccountInfo, useConnection } from '../utils/connection';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nconst { Text } = Typography;\n\nexport default function CustomMarketDialog({\n  visible,\n  onAddCustomMarket,\n  onClose,\n}) {\n  const connection = useConnection();\n\n  const [marketId, setMarketId] = useState('');\n\n  const [marketLabel, setMarketLabel] = useState('');\n  const [baseLabel, setBaseLabel] = useState('');\n  const [quoteLabel, setQuoteLabel] = useState('');\n\n  const [market, setMarket] = useState(null);\n  const [loadingMarket, setLoadingMarket] = useState(false);\n\n  const wellFormedMarketId = isValidPublicKey(marketId);\n\n  const [marketAccountInfo] = useAccountInfo(\n    wellFormedMarketId ? new PublicKey(marketId) : null,\n  );\n  const programId = marketAccountInfo\n    ? marketAccountInfo.owner.toBase58()\n    : MARKETS.find(({ deprecated }) => !deprecated).programId.toBase58();\n\n  useEffect(() => {\n    if (!wellFormedMarketId || !programId) {\n      resetLabels();\n      return;\n    }\n    setLoadingMarket(true);\n    Market.load(\n      connection,\n      new PublicKey(marketId),\n      {},\n      new PublicKey(programId),\n    )\n      .then((market) => {\n        setMarket(market);\n      })\n      .catch(() => {\n        resetLabels();\n        setMarket(null);\n      })\n      .finally(() => setLoadingMarket(false));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [connection, marketId, programId]);\n\n  const resetLabels = () => {\n    setMarketLabel(null);\n    setBaseLabel(null);\n    setQuoteLabel(null);\n  };\n\n  const knownMarket = MARKETS.find(\n    (m) =>\n      m.address.toBase58() === marketId && m.programId.toBase58() === programId,\n  );\n  const knownProgram = MARKETS.find(\n    (m) => m.programId.toBase58() === programId,\n  );\n  const knownBaseCurrency =\n    market?.baseMintAddress &&\n    TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\n      ?.name;\n\n  const knownQuoteCurrency =\n    market?.quoteMintAddress &&\n    TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\n      ?.name;\n\n  const canSubmit =\n    !loadingMarket &&\n    !!market &&\n    market.publicKey.toBase58() === marketId &&\n    marketId &&\n    programId &&\n    marketLabel &&\n    (knownBaseCurrency || baseLabel) &&\n    (knownQuoteCurrency || quoteLabel) &&\n    wellFormedMarketId;\n\n  const onSubmit = () => {\n    if (!canSubmit) {\n      notify({\n        message: 'Please fill in all fields with valid values',\n        type: 'error',\n      });\n      return;\n    }\n\n    let params = {\n      address: marketId,\n      programId,\n      name: marketLabel,\n    };\n    if (!knownBaseCurrency) {\n      params.baseLabel = baseLabel;\n    }\n    if (!knownQuoteCurrency) {\n      params.quoteLabel = quoteLabel;\n    }\n    onAddCustomMarket(params);\n    onDoClose();\n  };\n\n  const onDoClose = () => {\n    resetLabels();\n    setMarket(null);\n    setMarketId(null);\n    onClose();\n  };\n\n  return (\n    <Modal\n      title={'Add custom market'}\n      visible={visible}\n      onOk={onSubmit}\n      okText={'Add'}\n      onCancel={onDoClose}\n      okButtonProps={{ disabled: !canSubmit }}\n    >\n      <div>\n        {wellFormedMarketId ? (\n          <>\n            {!market && !loadingMarket && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Not a valid market</Text>\n              </Row>\n            )}\n            {market && knownMarket && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"warning\">Market known: {knownMarket.name}</Text>\n              </Row>\n            )}\n            {market && !knownProgram && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Warning: unknown DEX program</Text>\n              </Row>\n            )}\n            {market && knownProgram && knownProgram.deprecated && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"warning\">Warning: deprecated DEX program</Text>\n              </Row>\n            )}\n          </>\n        ) : (\n          <>\n            {marketId && !wellFormedMarketId && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Invalid market ID</Text>\n              </Row>\n            )}\n          </>\n        )}\n        <Row style={{ marginBottom: 8 }}>\n          <Col span={24}>\n            <Input\n              placeholder=\"Market Id\"\n              value={marketId}\n              onChange={(e) => setMarketId(e.target.value)}\n              suffix={loadingMarket ? <LoadingOutlined /> : null}\n            />\n          </Col>\n        </Row>\n\n        <Row style={{ marginBottom: 8, marginTop: 8 }}>\n          <Col span={24}>\n            <Input\n              placeholder=\"Market Label\"\n              disabled={!market}\n              value={marketLabel}\n              onChange={(e) => setMarketLabel(e.target.value)}\n            />\n          </Col>\n        </Row>\n        <Row gutter={[8]} style={{ marginBottom: 8 }}>\n          <Col span={12}>\n            <Input\n              placeholder=\"Base label\"\n              disabled={!market || knownBaseCurrency}\n              value={knownBaseCurrency || baseLabel}\n              onChange={(e) => setBaseLabel(e.target.value)}\n            />\n            {market && !knownBaseCurrency && (\n              <div style={{ marginTop: 8 }}>\n                <Text type=\"warning\">Warning: unknown token</Text>\n              </div>\n            )}\n          </Col>\n          <Col span={12}>\n            <Input\n              placeholder=\"Quote label\"\n              disabled={!market || knownQuoteCurrency}\n              value={knownQuoteCurrency || quoteLabel}\n              onChange={(e) => setQuoteLabel(e.target.value)}\n            />\n            {market && !knownQuoteCurrency && (\n              <div style={{ marginTop: 8 }}>\n                <Text type=\"warning\">Warning: unknown token</Text>\n              </div>\n            )}\n          </Col>\n        </Row>\n      </div>\n    </Modal>\n  );\n}\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Col, Popover, Row, Select, Typography, Button } from 'antd';\nimport styled from 'styled-components';\nimport Orderbook from '../components/Orderbook';\nimport UserInfoTable from '../components/UserInfoTable';\nimport StandaloneBalancesDisplay from '../components/StandaloneBalancesDisplay';\nimport {\n  useMarket,\n  useMarketsList,\n  useUnmigratedDeprecatedMarkets,\n  getMarketInfos,\n} from '../utils/markets';\nimport TradeForm from '../components/TradeForm';\nimport TradesTable from '../components/TradesTable';\nimport LinkAddress from '../components/LinkAddress';\nimport DeprecatedMarketsInstructions from '../components/DeprecatedMarketsInstructions';\nimport {\n  InfoCircleOutlined,\n  PlusCircleOutlined,\n  DeleteOutlined,\n} from '@ant-design/icons';\nimport CustomMarketDialog from '../components/CustomMarketDialog';\nimport { notify } from '../utils/notifications';\n\nconst { Option, OptGroup } = Select;\n\nconst Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 16px 16px;\n  .borderNone .ant-select-selector {\n    border: none !important;\n  }\n`;\n\nexport default function TradePage() {\n  const {\n    market,\n    marketName,\n    customMarkets,\n    setCustomMarkets,\n    setMarketAddress,\n  } = useMarket();\n  const markets = useMarketsList();\n  const [handleDeprecated, setHandleDeprecated] = useState(false);\n  const [addMarketVisible, setAddMarketVisible] = useState(false);\n  const deprecatedMarkets = useUnmigratedDeprecatedMarkets();\n  const [dimensions, setDimensions] = useState({\n    height: window.innerHeight,\n    width: window.innerWidth,\n  });\n\n  useEffect(() => {\n    document.title = marketName ? `${marketName} — Serum` : 'Serum';\n  }, [marketName]);\n\n  const changeOrderRef = useRef<({ size, price }: {size?: number; price?: number;}) => void>();\n\n  useEffect(() => {\n    const handleResize = () => {\n      setDimensions({\n        height: window.innerHeight,\n        width: window.innerWidth,\n      });\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const width = dimensions?.width;\n  const componentProps = {\n    onChangeOrderRef: (ref) => (changeOrderRef.current = ref),\n    onPrice: useCallback(\n      (price) => changeOrderRef.current && changeOrderRef.current({ price }),\n      [],\n    ),\n    onSize: useCallback(\n      (size) => changeOrderRef.current && changeOrderRef.current({ size }),\n      [],\n    ),\n  };\n  const getComponent = useCallback(() => {\n    if (handleDeprecated) {\n      return (\n        <DeprecatedMarketsPage\n          switchToLiveMarkets={() => setHandleDeprecated(false)}\n        />\n      );\n    } else if (width < 1000) {\n      return <RenderSmaller {...componentProps} />;\n    } else if (width < 1450) {\n      return <RenderSmall {...componentProps} />;\n    } else {\n      return <RenderNormal {...componentProps} />;\n    }\n  }, [width, componentProps, handleDeprecated]);\n\n  const onAddCustomMarket = (customMarket) => {\n    const marketInfo = getMarketInfos(customMarkets).some(\n      (m) => m.address.toBase58() === customMarket.address,\n    );\n    if (marketInfo) {\n      notify({\n        message: `A market with the given ID already exists`,\n        type: 'error',\n      });\n      return;\n    }\n    const newCustomMarkets = [...customMarkets, customMarket];\n    setCustomMarkets(newCustomMarkets);\n    setMarketAddress(customMarket.address);\n  };\n\n  const onDeleteCustomMarket = (address) => {\n    const newCustomMarkets = customMarkets.filter((m) => m.address !== address);\n    setCustomMarkets(newCustomMarkets);\n  };\n\n  return (\n    <>\n      <CustomMarketDialog\n        visible={addMarketVisible}\n        onClose={() => setAddMarketVisible(false)}\n        onAddCustomMarket={onAddCustomMarket}\n      />\n      <Wrapper>\n        <Row\n          align=\"middle\"\n          style={{ paddingLeft: 5, paddingRight: 5 }}\n          gutter={16}\n        >\n          <Col>\n            <MarketSelector\n              markets={markets}\n              setHandleDeprecated={setHandleDeprecated}\n              placeholder={'Select market'}\n              customMarkets={customMarkets}\n              onDeleteCustomMarket={onDeleteCustomMarket}\n            />\n          </Col>\n          {market ? (\n            <Col>\n              <Popover\n                content={<LinkAddress address={market.publicKey.toBase58()} />}\n                placement=\"bottomRight\"\n                title=\"Market address\"\n                trigger=\"click\"\n              >\n                <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n              </Popover>\n            </Col>\n          ) : null}\n          <Col>\n            <PlusCircleOutlined\n              style={{ color: '#2abdd2' }}\n              onClick={() => setAddMarketVisible(true)}\n            />\n          </Col>\n          {deprecatedMarkets && deprecatedMarkets.length > 0 && (\n            <React.Fragment>\n              <Col>\n                <Typography>\n                  You have unsettled funds on old markets! Please go through\n                  them to claim your funds.\n                </Typography>\n              </Col>\n              <Col>\n                <Button onClick={() => setHandleDeprecated(!handleDeprecated)}>\n                  {handleDeprecated ? 'View new markets' : 'Handle old markets'}\n                </Button>\n              </Col>\n            </React.Fragment>\n          )}\n        </Row>\n        {getComponent()}\n      </Wrapper>\n    </>\n  );\n}\n\nfunction MarketSelector({\n  markets,\n  placeholder,\n  setHandleDeprecated,\n  customMarkets,\n  onDeleteCustomMarket,\n}) {\n  const { market, setMarketAddress } = useMarket();\n\n  const onSetMarketAddress = (marketAddress) => {\n    setHandleDeprecated(false);\n    setMarketAddress(marketAddress);\n  };\n\n  const extractBase = (a) => a.split('/')[0];\n  const extractQuote = (a) => a.split('/')[1];\n\n  const selectedMarket = getMarketInfos(customMarkets)\n    .find(\n      (proposedMarket) =>\n        market?.address && proposedMarket.address.equals(market.address),\n    )\n    ?.address?.toBase58();\n\n  return (\n    <Select\n      showSearch\n      size={'large'}\n      style={{ width: 200 }}\n      placeholder={placeholder || 'Select a market'}\n      optionFilterProp=\"name\"\n      onSelect={onSetMarketAddress}\n      listHeight={400}\n      value={selectedMarket}\n      filterOption={(input, option) =>\n        option?.name?.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      }\n    >\n      {customMarkets && customMarkets.length > 0 && (\n        <OptGroup label=\"Custom\">\n          {customMarkets.map(({ address, name }, i) => (\n            <Option\n              value={address}\n              key={address}\n              name={name}\n              style={{\n                padding: '10px',\n                // @ts-ignore\n                backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\n              }}\n            >\n              <Row>\n                <Col flex=\"auto\">{name}</Col>\n                {selectedMarket !== address && (\n                  <Col>\n                    <DeleteOutlined\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        e.nativeEvent.stopImmediatePropagation();\n                        onDeleteCustomMarket && onDeleteCustomMarket(address);\n                      }}\n                    />\n                  </Col>\n                )}\n              </Row>\n            </Option>\n          ))}\n        </OptGroup>\n      )}\n      <OptGroup label=\"Markets\">\n        {markets\n          .sort((a, b) =>\n            extractQuote(a.name) === 'USDT' && extractQuote(b.name) !== 'USDT'\n              ? -1\n              : extractQuote(a.name) !== 'USDT' &&\n                extractQuote(b.name) === 'USDT'\n              ? 1\n              : 0,\n          )\n          .sort((a, b) =>\n            extractBase(a.name) < extractBase(b.name)\n              ? -1\n              : extractBase(a.name) > extractBase(b.name)\n              ? 1\n              : 0,\n          )\n          .map(({ address, name, deprecated }, i) => (\n            <Option\n              value={address.toBase58()}\n              key={address}\n              name={name}\n              style={{\n                padding: '10px',\n                // @ts-ignore\n                backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\n              }}\n            >\n              {name} {deprecated ? ' (Deprecated)' : null}\n            </Option>\n          ))}\n      </OptGroup>\n    </Select>\n  );\n}\n\nconst DeprecatedMarketsPage = ({ switchToLiveMarkets }) => {\n  return (\n    <>\n      <Row>\n        <Col flex=\"auto\">\n          <DeprecatedMarketsInstructions\n            switchToLiveMarkets={switchToLiveMarkets}\n          />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst RenderNormal = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <Row\n      style={{\n        minHeight: '900px',\n        flexWrap: 'nowrap',\n      }}\n    >\n      <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n        <UserInfoTable />\n      </Col>\n      <Col flex={'360px'} style={{ height: '100%' }}>\n        <Orderbook smallScreen={false} onPrice={onPrice} onSize={onSize} />\n        <TradesTable smallScreen={false} />\n      </Col>\n      <Col\n        flex=\"400px\"\n        style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n      >\n        <TradeForm setChangeOrderRef={onChangeOrderRef} />\n        <StandaloneBalancesDisplay />\n      </Col>\n    </Row>\n  );\n};\n\nconst RenderSmall = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <>\n      <Row\n        style={{\n          height: '900px',\n        }}\n      >\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n          <Orderbook\n            smallScreen={true}\n            depth={13}\n            onPrice={onPrice}\n            onSize={onSize}\n          />\n        </Col>\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n          <TradesTable smallScreen={true} />\n        </Col>\n        <Col\n          flex=\"400px\"\n          style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n        >\n          <TradeForm setChangeOrderRef={onChangeOrderRef} />\n          <StandaloneBalancesDisplay />\n        </Col>\n      </Row>\n      <Row>\n        <Col flex=\"auto\">\n          <UserInfoTable />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst RenderSmaller = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <>\n      <Row>\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <TradeForm style={{ flex: 1 }} setChangeOrderRef={onChangeOrderRef} />\n        </Col>\n        <Col xs={24} sm={12}>\n          <StandaloneBalancesDisplay />\n        </Col>\n      </Row>\n      <Row\n        style={{\n          height: '500px',\n        }}\n      >\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <Orderbook smallScreen={true} onPrice={onPrice} onSize={onSize} />\n        </Col>\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <TradesTable smallScreen={true} />\n        </Col>\n      </Row>\n      <Row>\n        <Col flex=\"auto\">\n          <UserInfoTable />\n        </Col>\n      </Row>\n    </>\n  );\n};\n","import React from 'react';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport {getMarketInfos, useAllMarkets, useAllOpenOrders, useMarket} from \"../utils/markets\";\nimport OpenOrderTable from \"../components/UserInfoTable/OpenOrderTable\";\nimport {Button} from \"antd\";\nimport {OrderWithMarketAndMarketName} from \"../utils/types\";\n\nexport default function OpenOrdersPage() {\n  const {openOrders, loaded, refreshOpenOrders} = useAllOpenOrders();\n  let {customMarkets} = useMarket();\n  let marketInfos = getMarketInfos(customMarkets);\n  let marketAddressesToNames = Object.fromEntries(marketInfos.map(info => [info.address.toBase58(), info.name]));\n  let [allMarkets] = useAllMarkets(customMarkets);\n  const marketsByAddress = Object.fromEntries((allMarkets || []).map(\n    marketInfo => [marketInfo.market.address.toBase58(), marketInfo.market]\n  ));\n\n  const dataSource: OrderWithMarketAndMarketName[] = (openOrders || []).map((orderInfos) =>\n    orderInfos.orders.map(order => {\n      return {\n        marketName: marketAddressesToNames[orderInfos.marketAddress],\n        market: marketsByAddress[orderInfos.marketAddress],\n        ...order\n      };\n    })\n  ).flat();\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <Button\n        onClick={refreshOpenOrders}\n        loading={!loaded}\n      >\n        Refresh\n      </Button>\n      <OpenOrderTable\n        openOrders={dataSource}\n        pageSize={25}\n        loading={!loaded}\n        onCancelSuccess={refreshOpenOrders}\n        marketFilter\n      />\n    </FloatingElement>\n  );\n}\n","import React, {useState} from 'react';\nimport DataTable from '../layout/DataTable';\nimport {Button, Row} from \"antd\";\nimport {settleAllFunds} from \"../../utils/send\";\nimport {notify} from \"../../utils/notifications\";\nimport {useConnection} from \"../../utils/connection\";\nimport {useWallet} from \"../../utils/wallet\";\nimport {useAllMarkets, useMarket, useSelectedTokenAccounts, useTokenAccounts} from \"../../utils/markets\";\nimport StandaloneTokenAccountsSelect from \"../StandaloneTokenAccountSelect\";\n\nexport default function WalletBalancesTable({\n  walletBalances,\n}: {\n  walletBalances: {\n    coin: string;\n    mint: string;\n    walletBalance: number;\n    openOrdersFree: number;\n    openOrdersTotal: number;\n  }[]\n}) {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n  const [tokenAccounts, tokenAccountsConnected] = useTokenAccounts();\n  const {customMarkets} = useMarket();\n  const [allMarkets, allMarketsConnected] = useAllMarkets(customMarkets);\n  const [settlingFunds, setSettlingFunds] = useState(false);\n\n  async function onSettleFunds() {\n    setSettlingFunds(true);\n    try {\n      if (!tokenAccounts || !tokenAccountsConnected) {\n        notify({\n          message: 'Error settling funds',\n          description: 'TokenAccounts not connected',\n          type: 'error',\n        });\n        return;\n      }\n      if (!allMarkets || !allMarketsConnected) {\n        notify({\n          message: 'Error settling funds',\n          description: 'Markets not connected',\n          type: 'error',\n        });\n        return;\n      }\n      await settleAllFunds({\n        connection,\n        tokenAccounts,\n        selectedTokenAccounts,\n        wallet,\n        markets: allMarkets.map(marketInfo => marketInfo.market),\n      })\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSettlingFunds(false);\n    }\n  }\n\n  const columns = [\n    {\n      title: 'Coin',\n      dataIndex: 'coin',\n      key: 'coin',\n      width: '20%',\n    },\n    {\n      title: 'Wallet Balance',\n      dataIndex: 'walletBalance',\n      key: 'walletBalance',\n      width: '20%',\n    },\n    {\n      title: 'Open orders total balances',\n      dataIndex: 'openOrdersTotal',\n      key: 'openOrdersTotal',\n      width: '20%',\n    },\n    {\n      title: 'Unsettled balances',\n      dataIndex: 'openOrdersFree',\n      key: 'openOrdersFree',\n      width: '20%',\n    },\n    {\n      title: 'Selected token account',\n      key: 'selectTokenAccount',\n      width: '20%',\n      render: (walletBalance) => (\n        <Row align=\"middle\" style={{width: \"430px\"}}>\n          <StandaloneTokenAccountsSelect\n            accounts={tokenAccounts?.filter(t => t.effectiveMint.toBase58() === walletBalance.mint)}\n            mint={walletBalance.mint}\n          />\n        </Row>\n      ),\n    },\n  ];\n  return (\n    <React.Fragment>\n      <DataTable\n        emptyLabel=\"No balances\"\n        dataSource={walletBalances}\n        columns={columns}\n        pagination={false}\n      />\n      {connected &&\n        <Button\n          onClick={onSettleFunds}\n          loading={settlingFunds}\n        >\n          Settle all funds\n        </Button>\n      }\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport {Tabs} from 'antd';\nimport {useAllOpenOrdersBalances, useWalletBalancesForAllMarkets,} from '../utils/markets';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport WalletBalancesTable from '../components/UserInfoTable/WalletBalancesTable';\nimport {useMintToTickers} from \"../utils/tokens\";\n\nconst { TabPane } = Tabs;\n\nexport default function BalancesPage() {\n  const walletBalances = useWalletBalancesForAllMarkets();\n  const mintToTickers = useMintToTickers();\n  const openOrdersBalances = useAllOpenOrdersBalances();\n\n  const data = (walletBalances || []).map(balance => {\n    const balances = {\n      coin: mintToTickers[balance.mint],\n      mint: balance.mint,\n      walletBalance: balance.balance,\n      openOrdersFree: 0.,\n      openOrdersTotal: 0.,\n    }\n    for (let openOrdersAccount of (openOrdersBalances[balance.mint] || [])) {\n      balances['openOrdersFree'] += openOrdersAccount.free;\n      balances['openOrdersTotal'] += openOrdersAccount.total;\n    }\n    return balances\n  });\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <Tabs defaultActiveKey=\"walletBalances\">\n        <TabPane tab=\"Wallet Balances\" key=\"walletBalances\">\n          <WalletBalancesTable\n            walletBalances={data}\n          />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n","import React from 'react';\nimport {Button, Popover} from 'antd';\nimport {InfoCircleOutlined, UserOutlined} from '@ant-design/icons';\nimport { useWallet } from '../utils/wallet';\nimport LinkAddress from \"./LinkAddress\";\n\nexport default function WalletConnect() {\n  const { connected, wallet } = useWallet();\n  const publicKey = wallet?.publicKey?.toBase58();\n\n  return (\n    <React.Fragment>\n      <Button\n        type=\"text\"\n        size=\"large\"\n        onClick={connected ? wallet.disconnect : wallet.connect}\n        style={{ color: '#2abdd2' }}\n      >\n        <UserOutlined />\n        {!connected ? 'Connect wallet' : 'Disconnect'}\n      </Button>\n      {connected && (\n        <Popover\n          content={<LinkAddress address={publicKey} />}\n          placement=\"bottomRight\"\n          title=\"Wallet public key\"\n          trigger=\"click\"\n        >\n          <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n        </Popover>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, {useState} from 'react';\nimport {Button, Col, Input, Row, Select, Typography} from 'antd';\nimport styled from 'styled-components';\nimport {Orderbook} from '@project-serum/serum';\nimport {\n  getMarketDetails,\n  getMarketInfos,\n  getMarketOrderPrice,\n  getSelectedTokenAccountForMint,\n  useBalances,\n  useMarket,\n  useTokenAccounts,\n} from '../utils/markets';\nimport {notify} from '../utils/notifications';\nimport {useWallet} from '../utils/wallet';\nimport {useConnection, useSendConnection} from '../utils/connection';\nimport {placeOrder} from '../utils/send';\nimport {floorToDecimal, getDecimalCount} from '../utils/utils';\nimport FloatingElement from './layout/FloatingElement';\nimport WalletConnect from './WalletConnect';\n\nconst { Option } = Select;\nconst { Title } = Typography;\n\nconst ActionButton = styled(Button)`\n  color: #2abdd2;\n  background-color: #212734;\n  border-width: 0px;\n`;\n\nconst ConvertButton = styled(Button)`\n  background: #02bf76;\n  border-color: #02bf76;\n`;\n\nexport default function ConvertForm() {\n  const { connected, wallet } = useWallet();\n  const { customMarkets } = useMarket();\n  const marketInfos = getMarketInfos(customMarkets)\n  const {market, setMarketAddress} = useMarket();\n\n  const [fromToken, setFromToken] = useState<string | undefined>(undefined);\n  const [toToken, setToToken] = useState<string | undefined>(undefined);\n  const [size, setSize] = useState<number | undefined>(undefined);\n\n  const marketInfosbyName = Object.fromEntries(marketInfos.map(market => [market.name, market]));\n\n  const tokenConvertMap: Map<string, Set<string>> = new Map();\n  Object.keys(marketInfosbyName).forEach((market) => {\n    let [base, quote] = market.split('/');\n    !tokenConvertMap.has(base)\n      ? tokenConvertMap.set(base, new Set([quote]))\n      : tokenConvertMap.set(base, new Set([...(tokenConvertMap.get(base) || []), quote]));\n    !tokenConvertMap.has(quote)\n      ? tokenConvertMap.set(quote, new Set([base]))\n      : tokenConvertMap.set(quote, new Set([...(tokenConvertMap.get(quote) || []), base]));\n  });\n\n  const setMarket = (toToken) => {\n    const marketInfo = marketInfos.filter(marketInfo => !marketInfo.deprecated).find(marketInfo =>\n      marketInfo.name === `${fromToken}/${toToken}` || marketInfo.name === `${toToken}/${fromToken}`\n    );\n    if (!marketInfo) {\n      console.warn(`Could not find market info for market names ${fromToken}/${toToken} or ${toToken}/${fromToken}`);\n      notify({\n        message: 'Invalid market',\n        type: 'error',\n      });\n      return;\n    }\n    setMarketAddress(marketInfo.address.toBase58())\n    setToToken(toToken);\n  }\n\n  return (\n    <FloatingElement style={{ maxWidth: 500 }}>\n      <Title level={3}>Convert</Title>\n      {!connected && (\n        <Row justify=\"center\">\n          <Col>\n            <WalletConnect />\n          </Col>\n        </Row>\n      )}\n      {tokenConvertMap && connected && (\n        <>\n          <Row style={{ marginBottom: 8 }}>\n            <Col>\n              <Select\n                style={{ minWidth: 300 }}\n                placeholder=\"Select a token\"\n                value={fromToken}\n                onChange={(token) => {\n                  setFromToken(token);\n                  setToToken(undefined);\n                }}\n              >\n                {Array.from(tokenConvertMap.keys()).map((token) => (\n                  <Option value={token} key={token}>\n                    {token}\n                  </Option>\n                ))}\n              </Select>\n            </Col>\n          </Row>\n          {fromToken && (\n            <Row style={{ marginBottom: 8 }}>\n              <Col>\n                <Select\n                  style={{ minWidth: 300 }}\n                  value={toToken}\n                  onChange={setMarket}\n                >\n                  {[...(tokenConvertMap.get(fromToken) || [])].map((token) => (\n                    <Option value={token} key={token}>\n                      {token}\n                    </Option>\n                  ))}\n                </Select>\n              </Col>\n            </Row>\n          )}\n          {fromToken && toToken && (\n            <ConvertFormSubmit\n              size={size}\n              setSize={setSize}\n              fromToken={fromToken}\n              wallet={wallet}\n              market={market}\n              customMarkets={customMarkets}\n            />\n          )}\n        </>\n      )}\n    </FloatingElement>\n  );\n}\n\nfunction ConvertFormSubmit({\n  size,\n  setSize,\n  fromToken,\n  wallet,\n  market,\n  customMarkets\n}) {\n  const [accounts] = useTokenAccounts();\n  const balances = useBalances()\n\n  const connection = useConnection();\n  const sendConnection = useSendConnection();\n\n  const [isConverting, setIsConverting] = useState(false);\n\n  const isFromTokenBaseOfMarket = (market) => {\n    const { marketName } = getMarketDetails(market, customMarkets);\n    if (!marketName) {\n      throw Error('Cannot determine if coin is quote or base because marketName is missing');\n    }\n    const [base] = marketName.split('/');\n    return fromToken === base;\n  };\n\n  const onConvert = async () => {\n    if (!market) {\n      console.warn('Market is null when attempting convert.');\n      notify({\n        message: 'Invalid market',\n        type: 'error',\n      });\n      return;\n    }\n    // get accounts\n    const baseCurrencyAccount = getSelectedTokenAccountForMint(\n      accounts,\n      market?.baseMintAddress,\n    );\n    const quoteCurrencyAccount = getSelectedTokenAccountForMint(\n      accounts,\n      market?.quoteMintAddress,\n    );\n\n    // get approximate price\n    let side;\n    try {\n      side = isFromTokenBaseOfMarket(market) ? 'sell' : 'buy';\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error placing order',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    }\n\n    const sidedOrderbookAccount =\n      // @ts-ignore\n      side === 'buy' ? market._decoded.asks : market._decoded.bids;\n    const orderbookData = await connection.getAccountInfo(sidedOrderbookAccount);\n    if (!orderbookData?.data) {\n      notify({ message: 'Invalid orderbook data', type: 'error' });\n      return;\n    }\n    const decodedOrderbookData = Orderbook.decode(market, orderbookData.data);\n    const [bbo] =\n      decodedOrderbookData &&\n      decodedOrderbookData.getL2(1).map(([price]) => price);\n    if (!bbo) {\n      notify({ message: 'No best price found', type: 'error' });\n      return;\n    }\n    if (!size) {\n      notify({ message: 'Size not specified', type: 'error' });\n      return;\n    }\n\n    const tickSizeDecimals =  getDecimalCount(market.tickSize);\n    const parsedPrice = getMarketOrderPrice(decodedOrderbookData, size, tickSizeDecimals);\n\n    // round size\n    const sizeDecimalCount = getDecimalCount(market.minOrderSize);\n    const nativeSize = side === 'sell' ? size : size / parsedPrice;\n    const parsedSize = floorToDecimal(nativeSize, sizeDecimalCount);\n\n    setIsConverting(true);\n    try {\n      await placeOrder({\n        side,\n        price: parsedPrice,\n        size: parsedSize,\n        orderType: 'ioc',\n        market,\n        connection: sendConnection,\n        wallet,\n        baseCurrencyAccount: baseCurrencyAccount?.pubkey,\n        quoteCurrencyAccount: quoteCurrencyAccount?.pubkey,\n      });\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error placing order',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setIsConverting(false);\n    }\n  };\n\n  const canConvert = market && size && size > 0;\n  const balance = balances.find(coinBalance => coinBalance.coin === fromToken);\n  const availableBalance = ((balance?.unsettled || 0.) + (balance?.wallet || 0.)) * 0.99;\n\n  return (\n    <React.Fragment>\n      <Row style={{ marginBottom: 8 }}>\n        <Col>\n          <Input\n            style={{ minWidth: 300 }}\n            addonBefore={`Size (${fromToken})`}\n            placeholder=\"Size\"\n            value={size}\n            type=\"number\"\n            onChange={(e) => setSize(parseFloat(e.target.value) || undefined)}\n          />\n        </Col>\n      </Row>\n      <Row gutter={12} style={{ marginBottom: 8 }}>\n        <Col span={12}>\n          <ActionButton\n            block\n            size=\"large\"\n            onClick={() => setSize(floorToDecimal(availableBalance, 4))}\n          >\n            Max: {availableBalance.toFixed(4)}\n          </ActionButton>\n        </Col>\n        <Col span={12}>\n          <ConvertButton\n            block\n            type=\"primary\"\n            size=\"large\"\n            loading={isConverting}\n            onClick={onConvert}\n            disabled={!canConvert}\n          >\n            Convert\n          </ConvertButton>\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport ConvertForm from '../components/ConvertForm';\nimport { Row, Col } from 'antd';\n\nconst Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 16px 16px;\n  .borderNone .ant-select-selector {\n    border: none !important;\n  }\n`;\n\nexport default function ConvertPage() {\n  return (\n    <Wrapper style={{ flex: 1, paddingTop: 10 }}>\n      <Row justify=\"center\">\n        <Col>\n          <ConvertForm />\n        </Col>\n      </Row>\n    </Wrapper>\n  );\n}\n","import React, { useContext } from 'react';\nimport { useLocalStorageState } from './utils';\nimport { useInterval } from './useInterval';\nimport { useConnection } from './connection';\nimport { useWallet } from './wallet';\nimport {useAllMarkets, useTokenAccounts, useMarket, useSelectedTokenAccounts} from './markets';\nimport { settleAllFunds } from './send';\nimport {PreferencesContextValues} from \"./types\";\n\nconst PreferencesContext = React.createContext<PreferencesContextValues | null>(null);\n\nexport function PreferencesProvider({ children }) {\n  const [autoSettleEnabled, setAutoSettleEnabled] = useLocalStorageState(\n    'autoSettleEnabled',\n    true,\n  );\n\n  const [tokenAccounts] = useTokenAccounts();\n  const { connected, wallet } = useWallet();\n  const { customMarkets } = useMarket();\n  const [marketList] = useAllMarkets(customMarkets);\n  const connection = useConnection();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n\n  useInterval(() => {\n    const autoSettle = async () => {\n      const markets = (marketList || []).map((m) => m.market);\n      try {\n        console.log('Auto settling');\n        await settleAllFunds({ connection, wallet, tokenAccounts: (tokenAccounts || []), markets, selectedTokenAccounts });\n      } catch (e) {\n        console.log('Error auto settling funds: ' + e.message);\n      }\n    };\n\n    connected && wallet?.autoApprove && autoSettleEnabled && autoSettle();\n  }, 10000);\n\n  return (\n    <PreferencesContext.Provider\n      value={{\n        autoSettleEnabled,\n        setAutoSettleEnabled,\n      }}\n    >\n      {children}\n    </PreferencesContext.Provider>\n  );\n}\n\nexport function usePreferences() {\n  const context = useContext(PreferencesContext);\n  if (!context) {\n    throw new Error('Missing preferences context')\n  }\n  return {\n    autoSettleEnabled: context.autoSettleEnabled,\n    setAutoSettleEnabled: context.setAutoSettleEnabled,\n  };\n}\n","import React from 'react';\nimport { Switch, Typography } from 'antd';\nimport { usePreferences } from '../utils/preferences';\n\nconst { Paragraph } = Typography;\n\nexport default function Settings({ autoApprove }) {\n  const { autoSettleEnabled, setAutoSettleEnabled } = usePreferences();\n\n  return (\n    <div>\n      <Switch\n        style={{ marginRight: 10 }}\n        disabled={!autoApprove}\n        checked={autoApprove && autoSettleEnabled}\n        onChange={setAutoSettleEnabled}\n      />{' '}\n      Auto settle\n      {!autoApprove && (\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)', marginTop: 10 }}>\n          To use auto settle, first enable auto approval in your wallet\n        </Paragraph>\n      )}\n    </div>\n  );\n}\n","import React, {useState} from \"react\";\nimport {Col, Input, Modal, Row} from \"antd\";\nimport {EndpointInfo} from \"../utils/types\";\n\nexport default function CustomClusterEndpointDialog({\n  visible,\n  testingConnection,\n  onAddCustomEndpoint,\n  onClose,\n} : {\n  visible: boolean;\n  testingConnection: boolean;\n  onAddCustomEndpoint: (info: EndpointInfo) => void;\n  onClose?: () => void;\n}) {\n  const [ customEndpoint, setCustomEndpoint] = useState('');\n  const [ customEndpointName, setCustomEndpointName] = useState('');\n\n  const onSubmit = () => {\n    const fullEndpoint = 'https://' + customEndpoint;\n    const params = {\n      name: customEndpointName,\n      endpoint: fullEndpoint,\n      custom: true,\n    }\n    onAddCustomEndpoint(params);\n    onDoClose();\n  };\n  const onDoClose = () => {\n    setCustomEndpoint('')\n    setCustomEndpointName('')\n    onClose && onClose();\n  };\n  const canSubmit = customEndpoint !== '' && customEndpointName !== '';\n\n  return (\n    <Modal\n      title={'Add custom endpoint'}\n      visible={visible}\n      onOk={onSubmit}\n      okText={'Add'}\n      onCancel={onDoClose}\n      okButtonProps={{ disabled: !canSubmit, loading: testingConnection }}\n    >\n      <Row style={{ marginBottom: 8 }}>\n        <Col span={24}>\n          <Input\n            placeholder=\"Cluster Name\"\n            value={customEndpointName}\n            onChange={(e) => setCustomEndpointName(e.target.value)}\n          />\n        </Col>\n      </Row>\n      <Row style={{ marginBottom: 8 }}>\n        <Col span={24}>\n          <Input\n            placeholder=\"Cluster Endpoint\"\n            value={customEndpoint}\n            addonBefore={'https://'}\n            onChange={(e) => setCustomEndpoint(e.target.value)}\n          />\n        </Col>\n      </Row>\n    </Modal>\n  );\n}\n","import {InfoCircleOutlined, PlusCircleOutlined, SettingOutlined,} from '@ant-design/icons';\nimport {Button, Col, Menu, Popover, Row, Select} from 'antd';\nimport React, {useCallback, useEffect, useState} from 'react';\nimport {useHistory, useLocation} from 'react-router-dom';\nimport logo from '../assets/logo.svg';\nimport styled from 'styled-components';\nimport {useWallet, WALLET_PROVIDERS} from '../utils/wallet';\nimport {ENDPOINTS, useConnectionConfig} from '../utils/connection';\nimport Settings from './Settings';\nimport CustomClusterEndpointDialog from \"./CustomClusterEndpointDialog\";\nimport {EndpointInfo} from \"../utils/types\";\nimport {notify} from \"../utils/notifications\";\nimport {Connection} from \"@solana/web3.js\";\nimport WalletConnect from './WalletConnect';\n\nconst Wrapper = styled.div`\n  background-color: #0d1017;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  padding: 0px 30px;\n  flex-wrap: wrap;\n`;\nconst LogoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  color: #2abdd2;\n  font-weight: bold;\n  cursor: pointer;\n  img {\n    height: 30px;\n    margin-right: 8px;\n  }\n`;\n\nconst EXTERNAL_LINKS = {\n  '/learn': 'https://serum-academy.com/en/serum-dex/',\n  '/add-market': 'https://serum-academy.com/en/add-market/',\n  '/wallet-support': 'https://serum-academy.com/en/wallet-support',\n  '/dex-list': 'https://serum-academy.com/en/dex-list/',\n  '/developer-resources': 'https://serum-academy.com/en/developer-resources/',\n  '/explorer': 'https://explorer.solana.com',\n  '/srm-faq': 'https://projectserum.com/srm-faq',\n}\n\nexport default function TopBar() {\n  const { connected, wallet, providerUrl, setProvider } = useWallet();\n  const { endpoint, endpointInfo, setEndpoint, availableEndpoints, setCustomEndpoints } = useConnectionConfig();\n  const [ addEndpointVisible, setAddEndpointVisible ] = useState(false)\n  const [ testingConnection, setTestingConnection] = useState(false)\n  const location = useLocation();\n  const history = useHistory();\n\n  const handleClick = useCallback(\n    (e) => {\n      if (!(e.key in EXTERNAL_LINKS)) {\n        history.push(e.key);\n      }\n    },\n    [history],\n  );\n\n  const onAddCustomEndpoint = (info: EndpointInfo) => {\n    const existingEndpoint = availableEndpoints.some(\n      (e) => e.endpoint === info.endpoint,\n    );\n    if (existingEndpoint) {\n      notify({\n        message: `An endpoint with the given url already exists`,\n        type: 'error',\n      });\n      return;\n    }\n\n    const handleError = (e) => {\n      console.log(`Connection to ${info.endpoint} failed: ${e}`)\n      notify({\n        message: `Failed to connect to ${info.endpoint}`,\n        type: 'error',\n      });\n    }\n\n    try {\n      const connection = new Connection(info.endpoint, 'recent');\n      connection.getEpochInfo().then(result => {\n        setTestingConnection(true);\n        console.log(`testing connection to ${info.endpoint}`);\n        const newCustomEndpoints = [...availableEndpoints.filter(e => e.custom), info];\n        setEndpoint(info.endpoint);\n        setCustomEndpoints(newCustomEndpoints);\n      }).catch(handleError);\n    } catch (e) {\n      handleError(e);\n    } finally {\n      setTestingConnection(false);\n    }\n  }\n\n  const endpointInfoCustom = endpointInfo && endpointInfo.custom\n  useEffect(() => {\n    const handler = () => {\n      if (endpointInfoCustom) {\n        setEndpoint(ENDPOINTS[0].endpoint)\n      }\n    }\n    window.addEventListener(\"beforeunload\", handler)\n    return () => window.removeEventListener(\"beforeunload\", handler)\n  }, [endpointInfoCustom, setEndpoint])\n\n  return (\n    <>\n      <CustomClusterEndpointDialog\n        visible={addEndpointVisible}\n        testingConnection={testingConnection}\n        onAddCustomEndpoint={onAddCustomEndpoint}\n        onClose={() => setAddEndpointVisible(false)}\n      />\n      <Wrapper>\n        <LogoWrapper>\n          <img src={logo} alt=\"\" onClick={() => history.push('/')} />\n          {'SERUM'}\n        </LogoWrapper>\n        <Menu\n          mode=\"horizontal\"\n          onClick={handleClick}\n          selectedKeys={[location.pathname]}\n          style={{\n            borderBottom: 'none',\n            backgroundColor: 'transparent',\n            display: 'flex',\n            alignItems: 'flex-end',\n            flex: 1,\n          }}\n        >\n          <Menu.Item key=\"/\">TRADE</Menu.Item>\n          {connected && <Menu.Item key=\"/balances\">BALANCES</Menu.Item>}\n          {connected && <Menu.Item key=\"/orders\">ORDERS</Menu.Item>}\n          {connected && <Menu.Item key=\"/convert\">CONVERT</Menu.Item>}\n          <Menu.Item key=\"/list-new-market\">ADD MARKET</Menu.Item>\n          <Menu.SubMenu title=\"LEARN\" onTitleClick={() => window.open(EXTERNAL_LINKS['/learn'], '_blank')}>\n            <Menu.Item key=\"/add-market\">\n              <a href={EXTERNAL_LINKS['/add-market']} target=\"_blank\" rel=\"noopener noreferrer\">\n                Adding a market\n              </a>\n            </Menu.Item>\n            <Menu.Item key=\"/wallet-support\">\n              <a href={EXTERNAL_LINKS['/wallet-support']} target=\"_blank\" rel=\"noopener noreferrer\">\n                Supported wallets\n              </a>\n            </Menu.Item>\n            <Menu.Item key=\"/dex-list\">\n              <a href={EXTERNAL_LINKS['/dex-list']} target=\"_blank\" rel=\"noopener noreferrer\">\n                DEX list\n              </a>\n            </Menu.Item>\n            <Menu.Item key=\"/developer-resources\">\n              <a href={EXTERNAL_LINKS['/developer-resources']} target=\"_blank\" rel=\"noopener noreferrer\">\n                Developer resources\n              </a>\n            </Menu.Item>\n            <Menu.Item key=\"/explorer\">\n              <a href={EXTERNAL_LINKS['/explorer']} target=\"_blank\" rel=\"noopener noreferrer\">\n                Solana block explorer\n              </a>\n            </Menu.Item>\n            <Menu.Item key=\"/srm-faq\">\n              <a href={EXTERNAL_LINKS['/srm-faq']} target=\"_blank\" rel=\"noopener noreferrer\">\n                SRM FAQ\n              </a>\n            </Menu.Item>\n          </Menu.SubMenu>\n        </Menu>\n        <div>\n          <Row\n            align=\"middle\"\n            style={{ paddingLeft: 5, paddingRight: 5 }}\n            gutter={16}\n          >\n            <Col>\n              <PlusCircleOutlined\n                style={{ color: '#2abdd2' }}\n                onClick={() => setAddEndpointVisible(true)}\n              />\n            </Col>\n             <Col>\n              <Popover\n                content={endpoint}\n                placement=\"bottomRight\"\n                title=\"URL\"\n                trigger=\"hover\"\n              >\n                <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n              </Popover>\n            </Col>\n            <Col>\n              <Select\n                onSelect={setEndpoint}\n                value={endpoint}\n                style={{ marginRight: 8, width: '150px' }}\n              >\n                {availableEndpoints.map(({ name, endpoint }) => (\n                  <Select.Option value={endpoint} key={endpoint}>\n                    {name}\n                  </Select.Option>\n                ))}\n              </Select>\n            </Col>\n          </Row>\n        </div>\n        {connected && (\n          <div>\n            <Popover\n              content={<Settings autoApprove={wallet?.autoApprove} />}\n              placement=\"bottomRight\"\n              title=\"Settings\"\n              trigger=\"click\"\n            >\n              <Button style={{ marginRight: 8 }}>\n                <SettingOutlined />\n                Settings\n              </Button>\n            </Popover>\n          </div>\n        )}\n        <div>\n          <Select onSelect={setProvider} value={providerUrl}>\n            {WALLET_PROVIDERS.map(({ name, url }) => (\n              <Select.Option value={url} key={url}>\n                {name}\n              </Select.Option>\n            ))}\n          </Select>\n        </div>\n        <div>\n          <WalletConnect/>\n        </div>\n      </Wrapper>\n    </>\n  );\n}\n","export const helpUrls = {\n  customerSupport: 'https://t.me/ProjectSerum',\n  customerSupportZh: 'https://t.me/ProjectSerum_Chinese',\n  contactEmail: 'mailto:contact@projectserum.com',\n  discord: 'https://discord.gg/EDvudv6',\n  telegram: 'https://t.me/ProjectSerum',\n  github: 'https://github.com/project-serum',\n  projectSerum: 'https://projectserum.com/',\n  developerResources: 'https://projectserum.com/developer-resources',\n  solanaBeach: 'https://solanabeach.io',\n};\n","import React from 'react';\nimport { Layout, Row, Col, Grid } from 'antd';\nimport Link from './Link';\nimport { helpUrls } from './HelpUrls';\nconst { Footer } = Layout;\nconst { useBreakpoint } = Grid;\n\nconst footerElements = [\n  {\n    description: 'Serum Developer Resources',\n    link: helpUrls.developerResources,\n  },\n  { description: 'Discord', link: helpUrls.discord },\n  { description: 'Telegram', link: helpUrls.telegram },\n  { description: 'GitHub', link: helpUrls.github },\n  { description: 'Project Serum', link: helpUrls.projectSerum },\n  { description: 'Solana Network', link: helpUrls.solanaBeach },\n];\n\nexport const CustomFooter = () => {\n  const smallScreen = !useBreakpoint().lg;\n\n  return (\n    <Footer\n      style={{\n        height: '45px',\n        paddingBottom: 10,\n        paddingTop: 10,\n      }}\n    >\n      <Row align=\"middle\" gutter={[16, 4]}>\n        {!smallScreen && (\n          <>\n            <Col flex=\"auto\" />\n            {footerElements.map((elem, index) => {\n              return (\n                <Col key={index + ''}>\n                  <Link external to={elem.link}>\n                    {elem.description}\n                  </Link>\n                </Col>\n              );\n            })}\n          </>\n        )}\n        <Col flex=\"auto\">{/*  <DexProgramSelector />*/}</Col>\n      </Row>\n    </Footer>\n  );\n};\n","import { Layout } from 'antd';\nimport React from 'react';\nimport TopBar from './TopBar';\nimport { CustomFooter as Footer } from './Footer';\nconst { Header, Content } = Layout;\n\nexport default function BasicLayout({ children }) {\n  return (\n    <React.Fragment>\n      <Layout\n        style={{ display: 'flex', minHeight: '100vh', flexDirection: 'column' }}\n      >\n        <Header style={{ padding: 0, minHeight: 64, height: 'unset' }}>\n          <TopBar />\n        </Header>\n        <Content style={{ flex: 1 }}>{children}</Content>\n        <Footer />\n      </Layout>\n    </React.Fragment>\n  );\n}\n","import React, { useState } from 'react';\nimport { Button, Form, Input, Tooltip, Typography } from 'antd';\nimport { notify } from '../utils/notifications';\nimport { isValidPublicKey } from '../utils/utils';\nimport { PublicKey } from '@solana/web3.js';\nimport { MARKETS, TokenInstructions } from '@project-serum/serum';\nimport { useAccountInfo, useConnection } from '../utils/connection';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport styled from 'styled-components';\nimport { parseTokenMintData } from '../utils/tokens';\nimport { useWallet } from '../utils/wallet';\nimport { listMarket } from '../utils/send';\nimport Link from '../components/Link';\n\nconst { Text, Title } = Typography;\n\nconst Wrapper = styled.div`\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nexport default function ListNewMarketPage() {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [baseMintInput, baseMintInfo] = useMintInput(\n    'baseMint',\n    <Text>\n      Base Token Mint Address{' '}\n      <Text type=\"secondary\">\n        (e.g. BTC solana address:{' '}\n        {\n          <Text type=\"secondary\" code>\n            9n4nbM75f5Ui33ZbPYXn59EwSgE8CGsHtAeTH5YFeJ9E\n          </Text>\n        }\n        )\n      </Text>\n    </Text>,\n    'The base token is the token being traded. For example, the base token of a BTC/USDT market is BTC.',\n  );\n  const [quoteMintInput, quoteMintInfo] = useMintInput(\n    'quoteMint',\n    <Text>\n      Quote Token Mint Address{' '}\n      <Text type=\"secondary\">\n        (e.g. USDT solana address:{' '}\n        {\n          <Text type=\"secondary\" code>\n            BQcdHdAQW1hczDbBi9hiegXAR7A98Q9jx3X3iBBBDiq4\n          </Text>\n        }\n        )\n      </Text>\n    </Text>,\n    'The quote token is the token used to price trades. For example, the quote token of a BTC/USDT market is USDT.',\n  );\n  const [lotSize, setLotSize] = useState('1');\n  const [tickSize, setTickSize] = useState('0.01');\n  const dexProgramId = MARKETS.find(({ deprecated }) => !deprecated).programId;\n  const [submitting, setSubmitting] = useState(false);\n\n  const [listedMarket, setListedMarket] = useState(null);\n\n  let baseLotSize;\n  let quoteLotSize;\n  if (baseMintInfo && parseFloat(lotSize) > 0) {\n    baseLotSize = Math.round(10 ** baseMintInfo.decimals * parseFloat(lotSize));\n    if (quoteMintInfo && parseFloat(tickSize) > 0) {\n      quoteLotSize = Math.round(\n        parseFloat(lotSize) *\n          10 ** quoteMintInfo.decimals *\n          parseFloat(tickSize),\n      );\n    }\n  }\n\n  const canSubmit =\n    connected &&\n    !!baseMintInfo &&\n    !!quoteMintInfo &&\n    !!baseLotSize &&\n    !!quoteLotSize;\n\n  async function onSubmit() {\n    if (!canSubmit) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const marketAddress = await listMarket({\n        connection,\n        wallet,\n        baseMint: baseMintInfo.address,\n        quoteMint: quoteMintInfo.address,\n        baseLotSize,\n        quoteLotSize,\n        dexProgramId,\n      });\n      setListedMarket(marketAddress);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error listing new market: ' + e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <Wrapper>\n      <FloatingElement>\n        <Title level={4}>List New Market</Title>\n        <Form\n          labelCol={{ span: 24 }}\n          wrapperCol={{ span: 24 }}\n          layout={'vertical'}\n          onFinish={onSubmit}\n        >\n          {baseMintInput}\n          {quoteMintInput}\n          <Form.Item\n            label={\n              <Tooltip title=\"Smallest allowed order size. For a BTC/USDT market, this would be in units of BTC.\">\n                Minimum Order Size{' '}\n                <Text type=\"secondary\">(Lot size in e.g. BTC)</Text>\n              </Tooltip>\n            }\n            name=\"lotSize\"\n            initialValue=\"1\"\n            validateStatus={\n              baseMintInfo && quoteMintInfo\n                ? baseLotSize\n                  ? 'success'\n                  : 'error'\n                : null\n            }\n            hasFeedback={baseMintInfo && quoteMintInfo}\n          >\n            <Input\n              value={lotSize}\n              onChange={(e) => setLotSize(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Tooltip title=\"Smallest amount by which prices can move. For a BTC/USDT market, this would be in units of USDT.\">\n                Tick Size{' '}\n                <Text type=\"secondary\">(Price increment in e.g. USDT)</Text>\n              </Tooltip>\n            }\n            name=\"tickSize\"\n            initialValue=\"0.01\"\n            validateStatus={\n              baseMintInfo && quoteMintInfo\n                ? quoteLotSize\n                  ? 'success'\n                  : 'error'\n                : null\n            }\n            hasFeedback={baseMintInfo && quoteMintInfo}\n          >\n            <Input\n              value={tickSize}\n              onChange={(e) => setTickSize(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <Form.Item label=\" \" colon={false}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              disabled={!canSubmit}\n              loading={submitting}\n            >\n              {connected ? 'Submit' : 'Not connected to wallet'}\n            </Button>\n          </Form.Item>\n        </Form>\n      </FloatingElement>\n      {listedMarket ? (\n        <FloatingElement>\n          <Text>New market address: {listedMarket.toBase58()}</Text>\n        </FloatingElement>\n      ) : null}\n    </Wrapper>\n  );\n}\n\nfunction useMintInput(name, label, tooltip) {\n  const [address, setAddress] = useState('');\n  const [accountInfo, loaded] = useAccountInfo(\n    isValidPublicKey(address) ? new PublicKey(address) : null,\n  );\n\n  let validateStatus = null;\n  let hasFeedback = false;\n  let help = null;\n  let mintInfo = null;\n  if (address) {\n    hasFeedback = true;\n    if (accountInfo) {\n      if (\n        accountInfo.owner.equals(TokenInstructions.TOKEN_PROGRAM_ID) &&\n        accountInfo.data.length === 82\n      ) {\n        let parsed = parseTokenMintData(accountInfo.data);\n        if (parsed.initialized) {\n          validateStatus = 'success';\n          mintInfo = {\n            address: new PublicKey(address),\n            decimals: parsed.decimals,\n          };\n        } else {\n          validateStatus = 'error';\n          help = 'Invalid SPL mint';\n        }\n      } else {\n        validateStatus = 'error';\n        help = 'Invalid SPL mint address';\n      }\n    } else if (isValidPublicKey(address) && !loaded) {\n      validateStatus = 'loading';\n    } else {\n      validateStatus = 'error';\n      help = 'Invalid Solana address';\n    }\n  }\n\n  const input = (\n    <Form.Item\n      label={\n        <Tooltip\n          title={\n            <>\n              {tooltip} You can look up token mint addresses on{' '}\n              <Link external to=\"https://sollet.io\">\n                sollet.io\n              </Link>\n              .\n            </>\n          }\n        >\n          {label}\n        </Tooltip>\n      }\n      name={name}\n      validateStatus={validateStatus}\n      hasFeedback={hasFeedback}\n      help={help}\n    >\n      <Input\n        value={address}\n        onChange={(e) => setAddress(e.target.value.trim())}\n      />\n    </Form.Item>\n  );\n\n  return [input, mintInfo];\n}\n","import { HashRouter, Route } from 'react-router-dom';\nimport TradePage from './pages/TradePage';\nimport OpenOrdersPage from './pages/OpenOrdersPage';\nimport React from 'react';\nimport BalancesPage from './pages/BalancesPage';\nimport ConvertPage from './pages/ConvertPage';\nimport BasicLayout from './components/BasicLayout';\nimport ListNewMarketPage from './pages/ListNewMarketPage';\n\nexport function Routes() {\n  return (\n    <HashRouter basename={'/'}>\n      <Route exact path=\"/\" component={TradePageContents} />\n      <Route exact path=\"/orders\" component={OpenOrdersPageContents} />\n      <Route exact path=\"/balances\" component={BalancesPageContents} />\n      <Route exact path=\"/convert\" component={ConvertPageContents} />\n      <Route exact path=\"/list-new-market\">\n        <BasicLayout>\n          <ListNewMarketPage />\n        </BasicLayout>\n      </Route>\n    </HashRouter>\n  );\n}\n\nfunction TradePageContents() {\n  return (\n    <BasicLayout>\n      <TradePage />\n    </BasicLayout>\n  );\n}\n\nfunction OpenOrdersPageContents() {\n  return (\n    <BasicLayout>\n      <OpenOrdersPage />\n    </BasicLayout>\n  );\n}\n\nfunction BalancesPageContents() {\n  return (\n    <BasicLayout>\n      <BalancesPage />\n    </BasicLayout>\n  );\n}\n\nfunction ConvertPageContents() {\n  return (\n    <BasicLayout>\n      <ConvertPage />\n    </BasicLayout>\n  );\n}\n","import React, { Suspense } from 'react';\nimport './App.less';\nimport { ConnectionProvider } from './utils/connection';\nimport { MarketProvider } from './utils/markets';\nimport { WalletProvider } from './utils/wallet';\nimport { GlobalStyle } from './global_style';\nimport { Spin } from 'antd';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { Routes } from './routes';\nimport { PreferencesProvider } from './utils/preferences';\n\nexport default function App() {\n  return (\n    <Suspense fallback={() => <Spin size=\"large\" />}>\n      <GlobalStyle />\n      <ErrorBoundary>\n        <ConnectionProvider>\n          <MarketProvider>\n            <WalletProvider>\n              <PreferencesProvider>\n                <Suspense fallback={() => <Spin size=\"large\" />}>\n                  <Routes />\n                </Suspense>\n              </PreferencesProvider>\n            </WalletProvider>\n          </MarketProvider>\n        </ConnectionProvider>\n      </ErrorBoundary>\n    </Suspense>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}